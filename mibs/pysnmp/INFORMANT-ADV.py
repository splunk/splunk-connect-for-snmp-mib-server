#
# PySNMP MIB module INFORMANT-ADV (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INFORMANT-ADV
# Produced by pysmi-0.3.4 at Mon Apr 29 19:42:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Counter32, Gauge32, Counter64, Unsigned32, ObjectIdentity, iso, NotificationType, IpAddress, MibIdentifier, ModuleIdentity, Integer32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Gauge32", "Counter64", "Unsigned32", "ObjectIdentity", "iso", "NotificationType", "IpAddress", "MibIdentifier", "ModuleIdentity", "Integer32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
InstanceName, informant = mibBuilder.importSymbols("WTCS", "InstanceName", "informant")
advanced = ModuleIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2))
advanced.setRevisions(('2008-07-11 23:51', '2008-04-18 23:58', '2008-03-21 23:39', '2008-02-25 18:35', '2007-07-08 05:43', '2007-04-12 11:05', '2006-06-12 22:58', '2005-06-18 23:15', '2004-02-29 07:03', '2004-01-20 08:50',))
if mibBuilder.loadTexts: advanced.setLastUpdated('200807112351Z')
if mibBuilder.loadTexts: advanced.setOrganization('Informant Systems, Inc.')
acsPerRsvpServiceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 1), )
if mibBuilder.loadTexts: acsPerRsvpServiceTable.setStatus('current')
acsPerRsvpServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1), ).setIndexNames((0, "INFORMANT-ADV", "acsPerRsvpSvcInstance"))
if mibBuilder.loadTexts: acsPerRsvpServiceEntry.setStatus('current')
acsPerRsvpSvcInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acsPerRsvpSvcInstance.setStatus('current')
acsPerRsvpSvcBytesInQoSNotify = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acsPerRsvpSvcBytesInQoSNotify.setStatus('current')
acsPerRsvpSvcFailedQoSRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acsPerRsvpSvcFailedQoSRequests.setStatus('current')
acsPerRsvpSvcFailedQoSSends = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acsPerRsvpSvcFailedQoSSends.setStatus('current')
acsPerRsvpSvcNetworkInterfaces = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acsPerRsvpSvcNetworkInterfaces.setStatus('current')
acsPerRsvpSvcNetworkSockets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acsPerRsvpSvcNetworkSockets.setStatus('current')
acsPerRsvpSvcQoSNotifications = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acsPerRsvpSvcQoSNotifications.setStatus('current')
acsPerRsvpSvcQoSSockets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acsPerRsvpSvcQoSSockets.setStatus('current')
acsPerRsvpSvcQoSEnabledReceivers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acsPerRsvpSvcQoSEnabledReceivers.setStatus('current')
acsPerRsvpSvcQoSEnabledSenders = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acsPerRsvpSvcQoSEnabledSenders.setStatus('current')
acsPerRsvpSvcRSVPSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acsPerRsvpSvcRSVPSessions.setStatus('current')
acsPerRsvpSvcTimers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acsPerRsvpSvcTimers.setStatus('current')
activeServerPages = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2))
if mibBuilder.loadTexts: activeServerPages.setStatus('current')
aspDebuggingRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspDebuggingRequests.setStatus('current')
aspEngineFlushNotifications = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspEngineFlushNotifications.setStatus('current')
aspErrorsDuringScriptRuntime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspErrorsDuringScriptRuntime.setStatus('current')
aspErrorsFromASPPreprocessor = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspErrorsFromASPPreprocessor.setStatus('current')
aspErrorsFromScriptCompilers = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspErrorsFromScriptCompilers.setStatus('current')
aspErrorsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspErrorsPerSec.setStatus('current')
aspInMemoryTemplateCacheHitRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspInMemoryTemplateCacheHitRate.setStatus('current')
aspInMemoryTemplatesCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspInMemoryTemplatesCached.setStatus('current')
aspRequestBytesInTotal = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspRequestBytesInTotal.setStatus('current')
aspRequestBytesOutTotal = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspRequestBytesOutTotal.setStatus('current')
aspRequestExecutionTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspRequestExecutionTime.setStatus('current')
aspRequestWaitTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspRequestWaitTime.setStatus('current')
aspRequestsDisconnected = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspRequestsDisconnected.setStatus('current')
aspRequestsExecuting = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspRequestsExecuting.setStatus('current')
aspRequestsFailedTotal = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspRequestsFailedTotal.setStatus('current')
aspRequestsNotAuthorized = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspRequestsNotAuthorized.setStatus('current')
aspRequestsNotFound = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspRequestsNotFound.setStatus('current')
aspRequestsQueued = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspRequestsQueued.setStatus('current')
aspRequestsRejected = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspRequestsRejected.setStatus('current')
aspRequestsSucceeded = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspRequestsSucceeded.setStatus('current')
aspRequestsTimedOut = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspRequestsTimedOut.setStatus('current')
aspRequestsTotal = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspRequestsTotal.setStatus('current')
aspRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspRequestsPerSec.setStatus('current')
aspScriptEngineCacheHitRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspScriptEngineCacheHitRate.setStatus('current')
aspScriptEnginesCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspScriptEnginesCached.setStatus('current')
aspSessionDuration = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspSessionDuration.setStatus('current')
aspSessionsCurrent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspSessionsCurrent.setStatus('current')
aspSessionsTimedOut = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspSessionsTimedOut.setStatus('current')
aspSessionsTotal = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspSessionsTotal.setStatus('current')
aspTemplateCacheHitRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspTemplateCacheHitRate.setStatus('current')
aspTemplateNotifications = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspTemplateNotifications.setStatus('current')
aspTemplatesCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspTemplatesCached.setStatus('current')
aspTransactionsAborted = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspTransactionsAborted.setStatus('current')
aspTransactionsCommitted = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspTransactionsCommitted.setStatus('current')
aspTransactionsPending = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspTransactionsPending.setStatus('current')
aspTransactionsTotal = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspTransactionsTotal.setStatus('current')
aspTransactionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 2, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aspTransactionsPerSec.setStatus('current')
appleTalkTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3), )
if mibBuilder.loadTexts: appleTalkTable.setStatus('current')
appleTalkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1), ).setIndexNames((0, "INFORMANT-ADV", "atInstance"))
if mibBuilder.loadTexts: appleTalkEntry.setStatus('current')
atInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atInstance.setStatus('current')
atAARPPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAARPPacketsPerSec.setStatus('current')
atATPALOResponsePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atATPALOResponsePerSec.setStatus('current')
atATPPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atATPPacketsPerSec.setStatus('current')
atATPRecvdReleasePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atATPRecvdReleasePerSec.setStatus('current')
atATPResponseTimouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atATPResponseTimouts.setStatus('current')
atATPRetriesLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atATPRetriesLocal.setStatus('current')
atATPRetriesRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atATPRetriesRemote.setStatus('current')
atATPXOResponsePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atATPXOResponsePerSec.setStatus('current')
atAverageTimePerAARPPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAverageTimePerAARPPacket.setStatus('current')
atAverageTimePerATPPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAverageTimePerATPPacket.setStatus('current')
atAverageTimePerDDPPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAverageTimePerDDPPacket.setStatus('current')
atAverageTimePerNBPPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAverageTimePerNBPPacket.setStatus('current')
atAverageTimePerRTMPPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAverageTimePerRTMPPacket.setStatus('current')
atAverageTimePerZIPPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAverageTimePerZIPPacket.setStatus('current')
atBytesInPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atBytesInPerSec.setStatus('current')
atBytesOutPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atBytesOutPerSec.setStatus('current')
atCurrentNonPagedPool = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atCurrentNonPagedPool.setStatus('current')
atDDPPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atDDPPacketsPerSec.setStatus('current')
atNBPPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNBPPacketsPerSec.setStatus('current')
atPacketsInPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atPacketsInPerSec.setStatus('current')
atPacketsOutPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atPacketsOutPerSec.setStatus('current')
atPacketsRoutedInPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atPacketsRoutedInPerSec.setStatus('current')
atPacketsRoutedOutPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atPacketsRoutedOutPerSec.setStatus('current')
atPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atPacketsDropped.setStatus('current')
atRTMPPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atRTMPPacketsPerSec.setStatus('current')
atZIPPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 3, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atZIPPacketsPerSec.setStatus('current')
aspDotNET = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4))
if mibBuilder.loadTexts: aspDotNET.setStatus('current')
adnApplicationRestarts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplicationRestarts.setStatus('current')
adnApplicationsRunning = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplicationsRunning.setStatus('current')
adnRequestExecutionTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnRequestExecutionTime.setStatus('current')
adnRequestWaitTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnRequestWaitTime.setStatus('current')
adnRequestsCurrent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnRequestsCurrent.setStatus('current')
adnRequestsDisconnected = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnRequestsDisconnected.setStatus('current')
adnRequestsQueued = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnRequestsQueued.setStatus('current')
adnRequestsRejected = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnRequestsRejected.setStatus('current')
adnStateServerSessionsAbandoned = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnStateServerSessionsAbandoned.setStatus('current')
adnStateServerSessionsActive = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnStateServerSessionsActive.setStatus('current')
adnStateServerSessionsTimedOut = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnStateServerSessionsTimedOut.setStatus('current')
adnStateServerSessionsTotal = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnStateServerSessionsTotal.setStatus('current')
adnWorkerProcessRestarts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnWorkerProcessRestarts.setStatus('current')
adnWorkerProcessesRunning = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnWorkerProcessesRunning.setStatus('current')
adnAuditFailureEventsRaised = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAuditFailureEventsRaised.setStatus('current')
adnAuditSuccessEventsRaised = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAuditSuccessEventsRaised.setStatus('current')
adnErrorEventsRaised = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnErrorEventsRaised.setStatus('current')
adnInfrastructErrorEventsRaised = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnInfrastructErrorEventsRaised.setStatus('current')
adnRequestErrorEventsRaised = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 4, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnRequestErrorEventsRaised.setStatus('current')
aspDotNETApplicationsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5), )
if mibBuilder.loadTexts: aspDotNETApplicationsTable.setStatus('current')
aspDotNETApplicationsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1), ).setIndexNames((0, "INFORMANT-ADV", "adnApplInstance"))
if mibBuilder.loadTexts: aspDotNETApplicationsEntry.setStatus('current')
adnApplInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplInstance.setStatus('current')
adnApplAnonymousRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplAnonymousRequests.setStatus('current')
adnApplAnonymousRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplAnonymousRequestsPerSec.setStatus('current')
adnApplCacheAPIEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplCacheAPIEntries.setStatus('current')
adnApplCacheAPIHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplCacheAPIHitRatio.setStatus('current')
adnApplCacheAPIHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplCacheAPIHits.setStatus('current')
adnApplCacheAPIMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplCacheAPIMisses.setStatus('current')
adnApplCacheAPITurnoverRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplCacheAPITurnoverRate.setStatus('current')
adnApplCacheTotalEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplCacheTotalEntries.setStatus('current')
adnApplCacheTotalHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplCacheTotalHitRatio.setStatus('current')
adnApplCacheTotalHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplCacheTotalHits.setStatus('current')
adnApplCacheTotalMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplCacheTotalMisses.setStatus('current')
adnApplCacheTotalTurnoverRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplCacheTotalTurnoverRate.setStatus('current')
adnApplCompilationsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplCompilationsTotal.setStatus('current')
adnApplDebuggingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplDebuggingRequests.setStatus('current')
adnApplErrorsCompilation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplErrorsCompilation.setStatus('current')
adnApplErrorsExecution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplErrorsExecution.setStatus('current')
adnApplErrorsPreprocessing = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplErrorsPreprocessing.setStatus('current')
adnApplErrorsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplErrorsTotal.setStatus('current')
adnApplErrorsTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplErrorsTotalPerSec.setStatus('current')
adnApplErrorsUnhandledExec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplErrorsUnhandledExec.setStatus('current')
adnApplErrorsUnhandledExecPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplErrorsUnhandledExecPerSec.setStatus('current')
adnApplOutputCacheEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplOutputCacheEntries.setStatus('current')
adnApplOutputCacheHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplOutputCacheHitRatio.setStatus('current')
adnApplOutputCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplOutputCacheHits.setStatus('current')
adnApplOutputCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplOutputCacheMisses.setStatus('current')
adnApplOutputCacheTurnoverRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplOutputCacheTurnoverRate.setStatus('current')
adnApplPipelineInstanceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplPipelineInstanceCount.setStatus('current')
adnApplRequestBytesInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplRequestBytesInTotal.setStatus('current')
adnApplRequestBytesOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplRequestBytesOutTotal.setStatus('current')
adnApplRequestsExecuting = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplRequestsExecuting.setStatus('current')
adnApplRequestsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplRequestsFailed.setStatus('current')
adnApplRequestsInApplQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplRequestsInApplQueue.setStatus('current')
adnApplRequestsNotAuthorized = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplRequestsNotAuthorized.setStatus('current')
adnApplRequestsNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplRequestsNotFound.setStatus('current')
adnApplRequestsSucceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplRequestsSucceeded.setStatus('current')
adnApplRequestsTimedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplRequestsTimedOut.setStatus('current')
adnApplRequestsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplRequestsTotal.setStatus('current')
adnApplRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplRequestsPerSec.setStatus('current')
adnApplSessionSQLSrvrConnTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplSessionSQLSrvrConnTotal.setStatus('current')
adnApplSessionStateSrvrConnTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplSessionStateSrvrConnTotal.setStatus('current')
adnApplSessionsAbandoned = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplSessionsAbandoned.setStatus('current')
adnApplSessionsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplSessionsActive.setStatus('current')
adnApplSessionsTimedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplSessionsTimedOut.setStatus('current')
adnApplSessionsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplSessionsTotal.setStatus('current')
adnApplTransactionsAborted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplTransactionsAborted.setStatus('current')
adnApplTransactionsCommitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplTransactionsCommitted.setStatus('current')
adnApplTransactionsPending = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplTransactionsPending.setStatus('current')
adnApplTransactionsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplTransactionsTotal.setStatus('current')
adnApplTransactionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplTransactionsPerSec.setStatus('current')
adnApplApplicationLifetimeEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 51), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplApplicationLifetimeEvents.setStatus('current')
adnApplApplLifetimeEventsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplApplLifetimeEventsPerSec.setStatus('current')
adnApplAuditFailureEventsRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplAuditFailureEventsRaised.setStatus('current')
adnApplAuditSuccessEventsRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplAuditSuccessEventsRaised.setStatus('current')
adnApplErrorEventsRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplErrorEventsRaised.setStatus('current')
adnApplErrorEventsRaisedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 56), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplErrorEventsRaisedPerSec.setStatus('current')
adnApplEventsRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 57), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplEventsRaised.setStatus('current')
adnApplEventsRaisedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 58), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplEventsRaisedPerSec.setStatus('current')
adnApplFormAuthenticationFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 59), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplFormAuthenticationFailure.setStatus('current')
adnApplFormAuthenticationSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 60), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplFormAuthenticationSuccess.setStatus('current')
adnApplInfraErrEventRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 61), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplInfraErrEventRaised.setStatus('current')
adnApplInfraErrEventRaisedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 62), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplInfraErrEventRaisedPerSec.setStatus('current')
adnApplMembershipAuthFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 63), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplMembershipAuthFailure.setStatus('current')
adnApplMembershipAuthSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 64), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplMembershipAuthSuccess.setStatus('current')
adnApplReqErrorEventRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 65), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplReqErrorEventRaised.setStatus('current')
adnApplReqErrorEventRaisedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 66), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplReqErrorEventRaisedPerSec.setStatus('current')
adnApplRequestEventsRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 67), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplRequestEventsRaised.setStatus('current')
adnApplRequestEventsRaisedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 68), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplRequestEventsRaisedPerSec.setStatus('current')
adnApplRequestExecutionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 69), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplRequestExecutionTime.setStatus('current')
adnApplRequestWaitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 70), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplRequestWaitTime.setStatus('current')
adnApplRequestsDisconnected = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 71), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplRequestsDisconnected.setStatus('current')
adnApplRequestsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 72), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplRequestsRejected.setStatus('current')
adnApplViewstateMACValidFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 73), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplViewstateMACValidFailure.setStatus('current')
adnApplCachePrcntMchneMemLimUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 74), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplCachePrcntMchneMemLimUsed.setStatus('current')
adnApplCachePrcntPrcMemLimitUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 75), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplCachePrcntPrcMemLimitUsed.setStatus('current')
adnApplCacheAPITrims = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 76), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplCacheAPITrims.setStatus('current')
adnApplCacheTotalTrims = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 77), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplCacheTotalTrims.setStatus('current')
adnApplOutputCacheTrims = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 5, 1, 78), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnApplOutputCacheTrims.setStatus('current')
browser = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6))
if mibBuilder.loadTexts: browser.setStatus('current')
browserAnnouncementsDomainPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserAnnouncementsDomainPerSec.setStatus('current')
browserAnnouncementsServerPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserAnnouncementsServerPerSec.setStatus('current')
browserAnnouncementsTotalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserAnnouncementsTotalPerSec.setStatus('current')
browserDuplicateMasterAnnounce = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserDuplicateMasterAnnounce.setStatus('current')
browserElectionPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserElectionPacketsPerSec.setStatus('current')
browserEnumerationsDomainPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserEnumerationsDomainPerSec.setStatus('current')
browserEnumerationsOtherPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserEnumerationsOtherPerSec.setStatus('current')
browserEnumerationsServerPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserEnumerationsServerPerSec.setStatus('current')
browserEnumerationsTotalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserEnumerationsTotalPerSec.setStatus('current')
browserIllegalDatagramsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserIllegalDatagramsPerSec.setStatus('current')
browserMailslotAllocationsFailed = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserMailslotAllocationsFailed.setStatus('current')
browserMailslotOpensFailedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserMailslotOpensFailedPerSec.setStatus('current')
browserMailslotReceivesFailed = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserMailslotReceivesFailed.setStatus('current')
browserMailslotWritesFailed = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserMailslotWritesFailed.setStatus('current')
browserMailslotWritesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserMailslotWritesPerSec.setStatus('current')
browserMissedMailslotDatagrams = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserMissedMailslotDatagrams.setStatus('current')
browserMissedServerAnnouncements = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserMissedServerAnnouncements.setStatus('current')
browserMissedServerListRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserMissedServerListRequests.setStatus('current')
browserServerAllocFailedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserServerAllocFailedPerSec.setStatus('current')
browserServerListRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 6, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: browserServerListRequestsPerSec.setStatus('current')
cache = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7))
if mibBuilder.loadTexts: cache.setStatus('current')
cacheAsyncCopyReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheAsyncCopyReadsPerSec.setStatus('current')
cacheAsyncDataMapsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheAsyncDataMapsPerSec.setStatus('current')
cacheAsyncFastReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheAsyncFastReadsPerSec.setStatus('current')
cacheAsyncMDLReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheAsyncMDLReadsPerSec.setStatus('current')
cacheAsyncPinReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheAsyncPinReadsPerSec.setStatus('current')
cacheCopyReadHitsPercent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheCopyReadHitsPercent.setStatus('current')
cacheCopyReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheCopyReadsPerSec.setStatus('current')
cacheDataFlushPagesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDataFlushPagesPerSec.setStatus('current')
cacheDataFlushesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDataFlushesPerSec.setStatus('current')
cacheDataMapHitsPercent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDataMapHitsPercent.setStatus('current')
cacheDataMapPinsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDataMapPinsPerSec.setStatus('current')
cacheDataMapsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDataMapsPerSec.setStatus('current')
cacheFastReadNotPossiblesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheFastReadNotPossiblesPerSec.setStatus('current')
cacheFastReadResourceMissPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheFastReadResourceMissPerSec.setStatus('current')
cacheFastReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheFastReadsPerSec.setStatus('current')
cacheLazyWriteFlushesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheLazyWriteFlushesPerSec.setStatus('current')
cacheLazyWritePagesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheLazyWritePagesPerSec.setStatus('current')
cacheMDLReadHitsPercent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMDLReadHitsPercent.setStatus('current')
cacheMDLReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMDLReadsPerSec.setStatus('current')
cachePinReadHitsPercent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cachePinReadHitsPercent.setStatus('current')
cachePinReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cachePinReadsPerSec.setStatus('current')
cacheReadAheadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheReadAheadsPerSec.setStatus('current')
cacheSyncCopyReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheSyncCopyReadsPerSec.setStatus('current')
cacheSyncDataMapsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheSyncDataMapsPerSec.setStatus('current')
cacheSyncFastReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheSyncFastReadsPerSec.setStatus('current')
cacheSyncMDLReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheSyncMDLReadsPerSec.setStatus('current')
cacheSyncPinReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 7, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheSyncPinReadsPerSec.setStatus('current')
dhcpServer = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 8))
if mibBuilder.loadTexts: dhcpServer.setStatus('current')
dhcpSrvAcksPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpSrvAcksPerSec.setStatus('current')
dhcpSrvActiveQueueLength = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpSrvActiveQueueLength.setStatus('current')
dhcpSrvConflictCheckQueueLength = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpSrvConflictCheckQueueLength.setStatus('current')
dhcpSrvDeclinesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpSrvDeclinesPerSec.setStatus('current')
dhcpSrvDiscoversPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpSrvDiscoversPerSec.setStatus('current')
dhcpSrvDuplicatesDroppedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpSrvDuplicatesDroppedPerSec.setStatus('current')
dhcpSrvInformsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpSrvInformsPerSec.setStatus('current')
dhcpSrvMillisecondsPerPacketAvg = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpSrvMillisecondsPerPacketAvg.setStatus('current')
dhcpSrvNacksPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpSrvNacksPerSec.setStatus('current')
dhcpSrvOffersPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpSrvOffersPerSec.setStatus('current')
dhcpSrvPacketsExpiredPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpSrvPacketsExpiredPerSec.setStatus('current')
dhcpSrvPacketsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpSrvPacketsReceivedPerSec.setStatus('current')
dhcpSrvReleasesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpSrvReleasesPerSec.setStatus('current')
dhcpSrvRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 8, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpSrvRequestsPerSec.setStatus('current')
distributeTransactionCoordinator = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 9))
if mibBuilder.loadTexts: distributeTransactionCoordinator.setStatus('current')
dtcAbortedTransactions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcAbortedTransactions.setStatus('current')
dtcAbortedTransactionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcAbortedTransactionsPerSec.setStatus('current')
dtcActiveTransactions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcActiveTransactions.setStatus('current')
dtcActiveTransactionsMaximum = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcActiveTransactionsMaximum.setStatus('current')
dtcCommittedTransactions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcCommittedTransactions.setStatus('current')
dtcCommittedTransactionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcCommittedTransactionsPerSec.setStatus('current')
dtcForceAbortedTransactions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcForceAbortedTransactions.setStatus('current')
dtcForceCommittedTransactions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcForceCommittedTransactions.setStatus('current')
dtcInDoubtTransactions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcInDoubtTransactions.setStatus('current')
dtcResponseTimeAverage = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcResponseTimeAverage.setStatus('current')
dtcResponseTimeMaximum = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcResponseTimeMaximum.setStatus('current')
dtcResponseTimeMinimum = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcResponseTimeMinimum.setStatus('current')
dtcTransactionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 9, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcTransactionsPerSec.setStatus('current')
dns = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10))
if mibBuilder.loadTexts: dns.setStatus('current')
dnsAXFRRequestReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsAXFRRequestReceived.setStatus('current')
dnsAXFRRequestSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsAXFRRequestSent.setStatus('current')
dnsAXFRResponseReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsAXFRResponseReceived.setStatus('current')
dnsAXFRSuccessReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsAXFRSuccessReceived.setStatus('current')
dnsAXFRSuccessSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsAXFRSuccessSent.setStatus('current')
dnsCachingMemory = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsCachingMemory.setStatus('current')
dnsDatabaseNodeMemory = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsDatabaseNodeMemory.setStatus('current')
dnsDynamicUpdateNoOperation = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsDynamicUpdateNoOperation.setStatus('current')
dnsDynamicUpdateNoOpPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsDynamicUpdateNoOpPerSec.setStatus('current')
dnsDynamicUpdateQueued = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsDynamicUpdateQueued.setStatus('current')
dnsDynamicUpdateReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsDynamicUpdateReceived.setStatus('current')
dnsDynamicUpdateReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsDynamicUpdateReceivedPerSec.setStatus('current')
dnsDynamicUpdateRejected = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsDynamicUpdateRejected.setStatus('current')
dnsDynamicUpdateTimeOuts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsDynamicUpdateTimeOuts.setStatus('current')
dnsDynamicUpdateWriteToDB = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsDynamicUpdateWriteToDB.setStatus('current')
dnsDynamicUpdateWriteToDBPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsDynamicUpdateWriteToDBPerSec.setStatus('current')
dnsIXFRRequestReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsIXFRRequestReceived.setStatus('current')
dnsIXFRRequestSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsIXFRRequestSent.setStatus('current')
dnsIXFRResponseReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsIXFRResponseReceived.setStatus('current')
dnsIXFRSuccessReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsIXFRSuccessReceived.setStatus('current')
dnsIXFRSuccessSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsIXFRSuccessSent.setStatus('current')
dnsIXFRTCPSuccessReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsIXFRTCPSuccessReceived.setStatus('current')
dnsIXFRUDPSuccessReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsIXFRUDPSuccessReceived.setStatus('current')
dnsNbstatMemory = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsNbstatMemory.setStatus('current')
dnsNotifyReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsNotifyReceived.setStatus('current')
dnsNotifySent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsNotifySent.setStatus('current')
dnsRecordFlowMemory = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsRecordFlowMemory.setStatus('current')
dnsRecursiveQueries = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsRecursiveQueries.setStatus('current')
dnsRecursiveQueriesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsRecursiveQueriesPerSec.setStatus('current')
dnsRecursiveQueryFailure = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsRecursiveQueryFailure.setStatus('current')
dnsRecursiveQueryFailurePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsRecursiveQueryFailurePerSec.setStatus('current')
dnsRecursiveSendTimeOuts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsRecursiveSendTimeOuts.setStatus('current')
dnsRecursiveTimeOutPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsRecursiveTimeOutPerSec.setStatus('current')
dnsSecureUpdateFailure = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsSecureUpdateFailure.setStatus('current')
dnsSecureUpdateReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsSecureUpdateReceived.setStatus('current')
dnsSecureUpdateReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsSecureUpdateReceivedPerSec.setStatus('current')
dnsTCPMessageMemory = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsTCPMessageMemory.setStatus('current')
dnsTCPQueryReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsTCPQueryReceived.setStatus('current')
dnsTCPQueryReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsTCPQueryReceivedPerSec.setStatus('current')
dnsTCPResponseSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsTCPResponseSent.setStatus('current')
dnsTCPResponseSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsTCPResponseSentPerSec.setStatus('current')
dnsTotalQueryReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsTotalQueryReceived.setStatus('current')
dnsTotalQueryReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsTotalQueryReceivedPerSec.setStatus('current')
dnsTotalResponseSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsTotalResponseSent.setStatus('current')
dnsTotalResponseSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsTotalResponseSentPerSec.setStatus('current')
dnsUDPMessageMemory = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsUDPMessageMemory.setStatus('current')
dnsUDPQueryReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsUDPQueryReceived.setStatus('current')
dnsUDPQueryReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsUDPQueryReceivedPerSec.setStatus('current')
dnsUDPResponseSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsUDPResponseSent.setStatus('current')
dnsUDPResponseSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsUDPResponseSentPerSec.setStatus('current')
dnsWINSLookupReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 51), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsWINSLookupReceived.setStatus('current')
dnsWINSLookupReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsWINSLookupReceivedPerSec.setStatus('current')
dnsWINSResponseSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsWINSResponseSent.setStatus('current')
dnsWINSResponseSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsWINSResponseSentPerSec.setStatus('current')
dnsWINSReverseLookupReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsWINSReverseLookupReceived.setStatus('current')
dnsWINSReverseLookupRcvPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 56), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsWINSReverseLookupRcvPerSec.setStatus('current')
dnsWINSReverseResponseSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 57), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsWINSReverseResponseSent.setStatus('current')
dnsWINSReverseResponseSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 58), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsWINSReverseResponseSentPerSec.setStatus('current')
dnsZoneTransferFailure = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 59), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsZoneTransferFailure.setStatus('current')
dnsZoneTransferRequestReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 60), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsZoneTransferRequestReceived.setStatus('current')
dnsZoneTransferSOARequestSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 61), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsZoneTransferSOARequestSent.setStatus('current')
dnsZoneTransferSuccess = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 10, 62), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsZoneTransferSuccess.setStatus('current')
dotNETCLRDataTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 11), )
if mibBuilder.loadTexts: dotNETCLRDataTable.setStatus('current')
dotNETCLRDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 11, 1), ).setIndexNames((0, "INFORMANT-ADV", "ncdInstance"))
if mibBuilder.loadTexts: dotNETCLRDataEntry.setStatus('current')
ncdInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 11, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdInstance.setStatus('current')
ncdSQLClntCurNumConnPools = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 11, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdSQLClntCurNumConnPools.setStatus('current')
ncdSQLClntCurNumConns = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 11, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdSQLClntCurNumConns.setStatus('current')
ncdSQLClntCurNumPoolConns = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 11, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdSQLClntCurNumPoolConns.setStatus('current')
ncdSQLClntPeakNumPoolConns = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 11, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdSQLClntPeakNumPoolConns.setStatus('current')
ncdSQLClntTotalNumFailedCommands = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 11, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdSQLClntTotalNumFailedCommands.setStatus('current')
ncdSQLClntTotalNumFailedConnects = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 11, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncdSQLClntTotalNumFailedConnects.setStatus('current')
dotNETCLRExceptionsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 12), )
if mibBuilder.loadTexts: dotNETCLRExceptionsTable.setStatus('current')
dotNETCLRExceptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 12, 1), ).setIndexNames((0, "INFORMANT-ADV", "nceInstance"))
if mibBuilder.loadTexts: dotNETCLRExceptionsEntry.setStatus('current')
nceInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 12, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nceInstance.setStatus('current')
nceNumOfExcepsThrown = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 12, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nceNumOfExcepsThrown.setStatus('current')
nceNumOfExcepsThrownPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 12, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nceNumOfExcepsThrownPerSec.setStatus('current')
nceNumOfFiltersPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 12, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nceNumOfFiltersPerSec.setStatus('current')
nceNumOfFinallysPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 12, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nceNumOfFinallysPerSec.setStatus('current')
nceThrowToCatchDepthPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 12, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nceThrowToCatchDepthPerSec.setStatus('current')
dotNETCLRInteropTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 13), )
if mibBuilder.loadTexts: dotNETCLRInteropTable.setStatus('current')
dotNETCLRInteropEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 13, 1), ).setIndexNames((0, "INFORMANT-ADV", "nciInstance"))
if mibBuilder.loadTexts: dotNETCLRInteropEntry.setStatus('current')
nciInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 13, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nciInstance.setStatus('current')
nciNumOfCCWs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 13, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nciNumOfCCWs.setStatus('current')
nciNumOfStubs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 13, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nciNumOfStubs.setStatus('current')
nciNumOfTLBExportsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 13, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nciNumOfTLBExportsPerSec.setStatus('current')
nciNumOfTLBImportsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 13, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nciNumOfTLBImportsPerSec.setStatus('current')
nciNumOfMarshalling = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 13, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nciNumOfMarshalling.setStatus('current')
dotNETCLRJitTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 14), )
if mibBuilder.loadTexts: dotNETCLRJitTable.setStatus('current')
dotNETCLRJitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 14, 1), ).setIndexNames((0, "INFORMANT-ADV", "ncjInstance"))
if mibBuilder.loadTexts: dotNETCLRJitEntry.setStatus('current')
ncjInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 14, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncjInstance.setStatus('current')
ncjNumOfILBytesJitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 14, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncjNumOfILBytesJitted.setStatus('current')
ncjNumOfMethodsJitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 14, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncjNumOfMethodsJitted.setStatus('current')
ncjPercentTimeInJit = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 14, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncjPercentTimeInJit.setStatus('current')
ncjILBytesJittedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 14, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncjILBytesJittedPerSec.setStatus('current')
ncjStandardJitFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 14, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncjStandardJitFailures.setStatus('current')
ncjTotalNumOfILBytesJitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 14, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncjTotalNumOfILBytesJitted.setStatus('current')
dotNETCLRLoadingTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15), )
if mibBuilder.loadTexts: dotNETCLRLoadingTable.setStatus('current')
dotNETCLRLoadingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1), ).setIndexNames((0, "INFORMANT-ADV", "nclInstance"))
if mibBuilder.loadTexts: dotNETCLRLoadingEntry.setStatus('current')
nclInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nclInstance.setStatus('current')
nclPercentTimeLoading = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nclPercentTimeLoading.setStatus('current')
nclAssemblySearchLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nclAssemblySearchLength.setStatus('current')
nclBytesInLoaderHeap = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nclBytesInLoaderHeap.setStatus('current')
nclCurrentAssemblies = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nclCurrentAssemblies.setStatus('current')
nclCurrentClassesLoaded = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nclCurrentClassesLoaded.setStatus('current')
nclCurrentAppdomains = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nclCurrentAppdomains.setStatus('current')
nclRateOfAssemblies = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nclRateOfAssemblies.setStatus('current')
nclRateOfClassesLoaded = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nclRateOfClassesLoaded.setStatus('current')
nclRateOfLoadFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nclRateOfLoadFailures.setStatus('current')
nclRateOfAppdomains = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nclRateOfAppdomains.setStatus('current')
nclRateOfAppdomainsUnloaded = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nclRateOfAppdomainsUnloaded.setStatus('current')
nclTotalNumOfLoadFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nclTotalNumOfLoadFailures.setStatus('current')
nclTotalAppdomains = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nclTotalAppdomains.setStatus('current')
nclTotalAssemblies = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nclTotalAssemblies.setStatus('current')
nclTotalClassesLoaded = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nclTotalClassesLoaded.setStatus('current')
nclTotalAppdomainsUnloaded = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 15, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nclTotalAppdomainsUnloaded.setStatus('current')
dotNETCLRLocksAndThreadsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 16), )
if mibBuilder.loadTexts: dotNETCLRLocksAndThreadsTable.setStatus('current')
dotNETCLRLocksAndThreadsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1), ).setIndexNames((0, "INFORMANT-ADV", "ncltInstance"))
if mibBuilder.loadTexts: dotNETCLRLocksAndThreadsEntry.setStatus('current')
ncltInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncltInstance.setStatus('current')
ncltNumOfCurrentLogicalThread = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncltNumOfCurrentLogicalThread.setStatus('current')
ncltNumOfCurrentPhysicalThread = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncltNumOfCurrentPhysicalThread.setStatus('current')
ncltNumOfCurrentRecognizedThread = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncltNumOfCurrentRecognizedThread.setStatus('current')
ncltNumOfTotalRecognizedThread = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncltNumOfTotalRecognizedThread.setStatus('current')
ncltContentionRatePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncltContentionRatePerSec.setStatus('current')
ncltCurrentQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncltCurrentQueueLength.setStatus('current')
ncltQueueLengthPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncltQueueLengthPerSec.setStatus('current')
ncltQueueLengthPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncltQueueLengthPeak.setStatus('current')
ncltTotalNumOfContentions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncltTotalNumOfContentions.setStatus('current')
ncltRateOfRecognizedThreadPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 16, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncltRateOfRecognizedThreadPerSec.setStatus('current')
dotNETCLRMemoryTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17), )
if mibBuilder.loadTexts: dotNETCLRMemoryTable.setStatus('current')
dotNETCLRMemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1), ).setIndexNames((0, "INFORMANT-ADV", "ncmInstance"))
if mibBuilder.loadTexts: dotNETCLRMemoryEntry.setStatus('current')
ncmInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmInstance.setStatus('current')
ncmNumBytesInAllHeaps = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmNumBytesInAllHeaps.setStatus('current')
ncmNumGCHandles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmNumGCHandles.setStatus('current')
ncmNumGen0Collections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmNumGen0Collections.setStatus('current')
ncmNumGen1Collections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmNumGen1Collections.setStatus('current')
ncmNumGen2Collections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmNumGen2Collections.setStatus('current')
ncmNumInducedGC = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmNumInducedGC.setStatus('current')
ncmNumTotalCommittedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmNumTotalCommittedBytes.setStatus('current')
ncmNumTotalReservedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmNumTotalReservedBytes.setStatus('current')
ncmNumOfPinnedObjects = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmNumOfPinnedObjects.setStatus('current')
ncmNumOfSinkBlocksInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmNumOfSinkBlocksInUse.setStatus('current')
ncmPercentTimeInGC = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmPercentTimeInGC.setStatus('current')
ncmAllocatedBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmAllocatedBytesPerSec.setStatus('current')
ncmFinalizationSurvivors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmFinalizationSurvivors.setStatus('current')
ncmGen0PromotedBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmGen0PromotedBytesPerSec.setStatus('current')
ncmGen0HeapSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmGen0HeapSize.setStatus('current')
ncmGen1PromotedBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmGen1PromotedBytesPerSec.setStatus('current')
ncmGen1HeapSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmGen1HeapSize.setStatus('current')
ncmGen2HeapSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmGen2HeapSize.setStatus('current')
ncmLargeObjectHeapSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmLargeObjectHeapSize.setStatus('current')
ncmPromotFinalizationMemoryGen0 = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmPromotFinalizationMemoryGen0.setStatus('current')
ncmPromotFinalizationMemoryGen1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmPromotFinalizationMemoryGen1.setStatus('current')
ncmPromotedMemoryFromGen0 = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmPromotedMemoryFromGen0.setStatus('current')
ncmPromotedMemoryFromGen1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmPromotedMemoryFromGen1.setStatus('current')
ncmProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 17, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncmProcessID.setStatus('current')
dotNETCLRNetworkingTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 18), )
if mibBuilder.loadTexts: dotNETCLRNetworkingTable.setStatus('current')
dotNETCLRNetworkingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 18, 1), ).setIndexNames((0, "INFORMANT-ADV", "ncnInstance"))
if mibBuilder.loadTexts: dotNETCLRNetworkingEntry.setStatus('current')
ncnInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 18, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncnInstance.setStatus('current')
ncnBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 18, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncnBytesReceived.setStatus('current')
ncnBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 18, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncnBytesSent.setStatus('current')
ncnConnectionsEstablished = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 18, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncnConnectionsEstablished.setStatus('current')
ncnDatagramsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 18, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncnDatagramsReceived.setStatus('current')
ncnDatagramsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 18, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncnDatagramsSent.setStatus('current')
dotNETCLRRemotingTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 19), )
if mibBuilder.loadTexts: dotNETCLRRemotingTable.setStatus('current')
dotNETCLRRemotingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 19, 1), ).setIndexNames((0, "INFORMANT-ADV", "ncrInstance"))
if mibBuilder.loadTexts: dotNETCLRRemotingEntry.setStatus('current')
ncrInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 19, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncrInstance.setStatus('current')
ncrChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 19, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncrChannels.setStatus('current')
ncrContextProxies = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 19, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncrContextProxies.setStatus('current')
ncrContextBoundClassesLoaded = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 19, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncrContextBoundClassesLoaded.setStatus('current')
ncrContextBoundObjsAllocPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 19, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncrContextBoundObjsAllocPerSec.setStatus('current')
ncrContexts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 19, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncrContexts.setStatus('current')
ncrRemoteCallsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 19, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncrRemoteCallsPerSec.setStatus('current')
ncrTotalRemoteCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 19, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncrTotalRemoteCalls.setStatus('current')
dotNETCLRSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 20), )
if mibBuilder.loadTexts: dotNETCLRSecurityTable.setStatus('current')
dotNETCLRSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 20, 1), ).setIndexNames((0, "INFORMANT-ADV", "ncsInstance"))
if mibBuilder.loadTexts: dotNETCLRSecurityEntry.setStatus('current')
ncsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 20, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncsInstance.setStatus('current')
ncsNumLinkTimeChecks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 20, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncsNumLinkTimeChecks.setStatus('current')
ncsPercentTimeSigAuthenticating = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 20, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncsPercentTimeSigAuthenticating.setStatus('current')
ncsPercentTimeInRTChecks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 20, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncsPercentTimeInRTChecks.setStatus('current')
ncsStackWalkDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 20, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncsStackWalkDepth.setStatus('current')
ncsTotalRuntimeChecks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 20, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ncsTotalRuntimeChecks.setStatus('current')
fileReplicaConnTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21), )
if mibBuilder.loadTexts: fileReplicaConnTable.setStatus('current')
fileReplicaConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1), ).setIndexNames((0, "INFORMANT-ADV", "frcInstance"))
if mibBuilder.loadTexts: fileReplicaConnEntry.setStatus('current')
frcInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcInstance.setStatus('current')
frcAuthentications = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcAuthentications.setStatus('current')
frcAuthenticationsInError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcAuthenticationsInError.setStatus('current')
frcBindings = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcBindings.setStatus('current')
frcBindingsInError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcBindingsInError.setStatus('current')
frcCommunicationTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcCommunicationTimeouts.setStatus('current')
frcFetchBlocksReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcFetchBlocksReceived.setStatus('current')
frcFetchBlocksReceivedInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcFetchBlocksReceivedInBytes.setStatus('current')
frcFetchBlocksSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcFetchBlocksSent.setStatus('current')
frcFetchBlocksSentInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcFetchBlocksSentInBytes.setStatus('current')
frcFetchRequestsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcFetchRequestsReceived.setStatus('current')
frcFetchRequestsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcFetchRequestsSent.setStatus('current')
frcInboundChangeOrdersDampened = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcInboundChangeOrdersDampened.setStatus('current')
frcJoinNotificationsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcJoinNotificationsReceived.setStatus('current')
frcJoinNotificationsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcJoinNotificationsSent.setStatus('current')
frcJoins = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcJoins.setStatus('current')
frcLocalChangeOrdersSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcLocalChangeOrdersSent.setStatus('current')
frcLocalChangeOrdersSentAtJoin = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcLocalChangeOrdersSentAtJoin.setStatus('current')
frcOutboundChangeOrdersDampened = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcOutboundChangeOrdersDampened.setStatus('current')
frcPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcPacketsSent.setStatus('current')
frcPacketsSentInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcPacketsSentInBytes.setStatus('current')
frcPacketsSentInError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcPacketsSentInError.setStatus('current')
frcRemoteChangeOrdersReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcRemoteChangeOrdersReceived.setStatus('current')
frcRemoteChangeOrdersSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcRemoteChangeOrdersSent.setStatus('current')
frcUnjoins = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 21, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frcUnjoins.setStatus('current')
fileReplicaSetTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22), )
if mibBuilder.loadTexts: fileReplicaSetTable.setStatus('current')
fileReplicaSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1), ).setIndexNames((0, "INFORMANT-ADV", "frsInstance"))
if mibBuilder.loadTexts: fileReplicaSetEntry.setStatus('current')
frsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsInstance.setStatus('current')
frsAuthentications = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsAuthentications.setStatus('current')
frsAuthenticationsInError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsAuthenticationsInError.setStatus('current')
frsBindings = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsBindings.setStatus('current')
frsBindingsInError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsBindingsInError.setStatus('current')
frsBytesOfFilesInstalled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsBytesOfFilesInstalled.setStatus('current')
frsBytesOfStagingFetched = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsBytesOfStagingFetched.setStatus('current')
frsBytesOfStagingGenerated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsBytesOfStagingGenerated.setStatus('current')
frsBytesOfStagingRegenerated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsBytesOfStagingRegenerated.setStatus('current')
frsChgOrdersAborted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsChgOrdersAborted.setStatus('current')
frsChgOrdersEvaporated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsChgOrdersEvaporated.setStatus('current')
frsChgOrdersIssued = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsChgOrdersIssued.setStatus('current')
frsChgOrdersMorphed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsChgOrdersMorphed.setStatus('current')
frsChgOrdersPropagated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsChgOrdersPropagated.setStatus('current')
frsChgOrdersReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsChgOrdersReceived.setStatus('current')
frsChgOrdersRetired = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsChgOrdersRetired.setStatus('current')
frsChgOrdersRetried = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsChgOrdersRetried.setStatus('current')
frsChgOrdersRetriedFetch = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsChgOrdersRetriedFetch.setStatus('current')
frsChgOrdersRetriedGenerate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsChgOrdersRetriedGenerate.setStatus('current')
frsChgOrdersRetriedInstall = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsChgOrdersRetriedInstall.setStatus('current')
frsChgOrdersRetriedRename = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsChgOrdersRetriedRename.setStatus('current')
frsChgOrdersSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsChgOrdersSent.setStatus('current')
frsCommunicationTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsCommunicationTimeouts.setStatus('current')
frsDSBindings = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsDSBindings.setStatus('current')
frsDSBindingsInError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsDSBindingsInError.setStatus('current')
frsDSObjects = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsDSObjects.setStatus('current')
frsDSObjectsInError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsDSObjectsInError.setStatus('current')
frsDSPolls = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsDSPolls.setStatus('current')
frsDSPollsWithChgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsDSPollsWithChgs.setStatus('current')
frsDSPollsWithoutChgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsDSPollsWithoutChgs.setStatus('current')
frsDSSearches = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsDSSearches.setStatus('current')
frsDSSearchesInError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsDSSearchesInError.setStatus('current')
frsFetchBlocksReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsFetchBlocksReceived.setStatus('current')
frsFetchBlocksReceivedInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsFetchBlocksReceivedInBytes.setStatus('current')
frsFetchBlocksSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsFetchBlocksSent.setStatus('current')
frsFetchBlocksSentInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsFetchBlocksSentInBytes.setStatus('current')
frsFetchRequestsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsFetchRequestsReceived.setStatus('current')
frsFetchRequestsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsFetchRequestsSent.setStatus('current')
frsFilesInstalled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsFilesInstalled.setStatus('current')
frsFilesInstalledWithError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsFilesInstalledWithError.setStatus('current')
frsInboundChgOrdersDampened = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsInboundChgOrdersDampened.setStatus('current')
frsJoinNotificationsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsJoinNotificationsReceived.setStatus('current')
frsJoinNotificationsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsJoinNotificationsSent.setStatus('current')
frsJoins = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsJoins.setStatus('current')
frsKBOfStagingSpaceFree = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsKBOfStagingSpaceFree.setStatus('current')
frsKBOfStagingSpaceInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsKBOfStagingSpaceInUse.setStatus('current')
frsLocalChgOrdersAborted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsLocalChgOrdersAborted.setStatus('current')
frsLocalChgOrdersIssued = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsLocalChgOrdersIssued.setStatus('current')
frsLocalChgOrdersMorphed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsLocalChgOrdersMorphed.setStatus('current')
frsLocalChgOrdersPropagated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsLocalChgOrdersPropagated.setStatus('current')
frsLocalChgOrdersRetired = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 51), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsLocalChgOrdersRetired.setStatus('current')
frsLocalChgOrdersRetried = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsLocalChgOrdersRetried.setStatus('current')
frsLocalChgOrdersRetriedFetch = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsLocalChgOrdersRetriedFetch.setStatus('current')
frsLocalChgOrdersRetriedGenerate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsLocalChgOrdersRetriedGenerate.setStatus('current')
frsLocalChgOrdersRetriedInstall = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsLocalChgOrdersRetriedInstall.setStatus('current')
frsLocalChgOrdersRetriedRename = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 56), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsLocalChgOrdersRetriedRename.setStatus('current')
frsLocalChgOrdersSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 57), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsLocalChgOrdersSent.setStatus('current')
frsLocalChgOrdersSentJoin = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 58), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsLocalChgOrdersSentJoin.setStatus('current')
frsOutboundChgOrdersDampened = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 59), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsOutboundChgOrdersDampened.setStatus('current')
frsPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 60), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsPacketsReceived.setStatus('current')
frsPacketsReceivedInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 61), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsPacketsReceivedInBytes.setStatus('current')
frsPacketsReceivedInError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 62), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsPacketsReceivedInError.setStatus('current')
frsPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 63), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsPacketsSent.setStatus('current')
frsPacketsSentInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 64), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsPacketsSentInBytes.setStatus('current')
frsPacketsSentInError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 65), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsPacketsSentInError.setStatus('current')
frsRemoteChgOrdersAborted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 66), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsRemoteChgOrdersAborted.setStatus('current')
frsRemoteChgOrdersIssued = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 67), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsRemoteChgOrdersIssued.setStatus('current')
frsRemoteChgOrdersMorphed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 68), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsRemoteChgOrdersMorphed.setStatus('current')
frsRemoteChgOrdersPropagated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 69), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsRemoteChgOrdersPropagated.setStatus('current')
frsRemoteChgOrdersReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 70), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsRemoteChgOrdersReceived.setStatus('current')
frsRemoteChgOrdersRetired = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 71), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsRemoteChgOrdersRetired.setStatus('current')
frsRemoteChgOrdersRetried = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 72), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsRemoteChgOrdersRetried.setStatus('current')
frsRemoteChgOrdersRetriedFetch = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 73), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsRemoteChgOrdersRetriedFetch.setStatus('current')
frsRemoteChgOrdersRetriedGenerat = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 74), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsRemoteChgOrdersRetriedGenerat.setStatus('current')
frsRemoteChgOrdersRetriedInstall = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 75), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsRemoteChgOrdersRetriedInstall.setStatus('current')
frsRemoteChgOrdersRetriedRename = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 76), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsRemoteChgOrdersRetriedRename.setStatus('current')
frsRemoteChgOrdersSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 77), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsRemoteChgOrdersSent.setStatus('current')
frsReplicaSetsCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 78), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsReplicaSetsCreated.setStatus('current')
frsReplicaSetsDeleted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 79), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsReplicaSetsDeleted.setStatus('current')
frsReplicaSetsRemoved = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 80), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsReplicaSetsRemoved.setStatus('current')
frsReplicaSetsStarted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 81), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsReplicaSetsStarted.setStatus('current')
frsStagingFilesFetched = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 82), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsStagingFilesFetched.setStatus('current')
frsStagingFilesGenerated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 83), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsStagingFilesGenerated.setStatus('current')
frsStagingFilesGeneratedWithErr = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 84), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsStagingFilesGeneratedWithErr.setStatus('current')
frsStagingFilesRegenerated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 85), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsStagingFilesRegenerated.setStatus('current')
frsThreadsExited = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 86), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsThreadsExited.setStatus('current')
frsThreadsStarted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 87), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsThreadsStarted.setStatus('current')
frsUnjoins = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 88), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsUnjoins.setStatus('current')
frsUsnReads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 89), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsUsnReads.setStatus('current')
frsUsnRecordsAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 90), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsUsnRecordsAccepted.setStatus('current')
frsUsnRecordsExamined = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 91), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsUsnRecordsExamined.setStatus('current')
frsUsnRecordsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 22, 1, 92), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frsUsnRecordsRejected.setStatus('current')
ftpServiceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23), )
if mibBuilder.loadTexts: ftpServiceTable.setStatus('current')
ftpServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1), ).setIndexNames((0, "INFORMANT-ADV", "ftpSvcInstance"))
if mibBuilder.loadTexts: ftpServiceEntry.setStatus('current')
ftpSvcInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpSvcInstance.setStatus('current')
ftpSvcBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpSvcBytesReceivedPerSec.setStatus('current')
ftpSvcBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpSvcBytesSentPerSec.setStatus('current')
ftpSvcBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpSvcBytesTotalPerSec.setStatus('current')
ftpSvcCurrentAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpSvcCurrentAnonymousUsers.setStatus('current')
ftpSvcCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpSvcCurrentConnections.setStatus('current')
ftpSvcCurrentNonAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpSvcCurrentNonAnonymousUsers.setStatus('current')
ftpSvcFTPServiceUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpSvcFTPServiceUptime.setStatus('current')
ftpSvcMaximumAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpSvcMaximumAnonymousUsers.setStatus('current')
ftpSvcMaximumConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpSvcMaximumConnections.setStatus('current')
ftpSvcMaximumNonAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpSvcMaximumNonAnonymousUsers.setStatus('current')
ftpSvcTotalAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpSvcTotalAnonymousUsers.setStatus('current')
ftpSvcTotalConnAttemptsAllInst = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpSvcTotalConnAttemptsAllInst.setStatus('current')
ftpSvcTotalFilesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpSvcTotalFilesReceived.setStatus('current')
ftpSvcTotalFilesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpSvcTotalFilesSent.setStatus('current')
ftpSvcTotalFilesTransferred = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpSvcTotalFilesTransferred.setStatus('current')
ftpSvcTotalLogonAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpSvcTotalLogonAttempts.setStatus('current')
ftpSvcTotalNonAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 23, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpSvcTotalNonAnonymousUsers.setStatus('current')
gatewayServiceForNetWare = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24))
if mibBuilder.loadTexts: gatewayServiceForNetWare.setStatus('current')
nwBytesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwBytesReceivedPerSec.setStatus('current')
nwBytesTotalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwBytesTotalPerSec.setStatus('current')
nwBytesTransmittedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwBytesTransmittedPerSec.setStatus('current')
nwConnectNetWare2X = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwConnectNetWare2X.setStatus('current')
nwConnectNetWare3X = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwConnectNetWare3X.setStatus('current')
nwConnectNetWare4X = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwConnectNetWare4X.setStatus('current')
nwFileDataOperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwFileDataOperationsPerSec.setStatus('current')
nwFileReadOperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwFileReadOperationsPerSec.setStatus('current')
nwFileWriteOperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwFileWriteOperationsPerSec.setStatus('current')
nwPacketBurstIOPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwPacketBurstIOPerSec.setStatus('current')
nwPacketBurstReadNCPCountPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwPacketBurstReadNCPCountPerSec.setStatus('current')
nwPacketBurstReadTimeoutsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwPacketBurstReadTimeoutsPerSec.setStatus('current')
nwPacketBurstWriteNCPCountPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwPacketBurstWriteNCPCountPerSec.setStatus('current')
nwPacketBurstWriteTimeoutsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwPacketBurstWriteTimeoutsPerSec.setStatus('current')
nwPacketsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwPacketsReceivedPerSec.setStatus('current')
nwPacketsTransmittedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwPacketsTransmittedPerSec.setStatus('current')
nwPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwPacketsPerSec.setStatus('current')
nwReadOperationsRandomPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwReadOperationsRandomPerSec.setStatus('current')
nwReadPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwReadPacketsPerSec.setStatus('current')
nwServerDisconnects = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwServerDisconnects.setStatus('current')
nwServerReconnects = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwServerReconnects.setStatus('current')
nwServerSessions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwServerSessions.setStatus('current')
nwWriteOperationsRandomPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwWriteOperationsRandomPerSec.setStatus('current')
nwWritePacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 24, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwWritePacketsPerSec.setStatus('current')
iasAccountingClientsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25), )
if mibBuilder.loadTexts: iasAccountingClientsTable.setStatus('current')
iasAccountingClientsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1), ).setIndexNames((0, "INFORMANT-ADV", "iccInstance"))
if mibBuilder.loadTexts: iasAccountingClientsEntry.setStatus('current')
iccInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccInstance.setStatus('current')
iccAccountingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccAccountingRequests.setStatus('current')
iccAccountingRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccAccountingRequestsPerSec.setStatus('current')
iccAccountingResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccAccountingResponses.setStatus('current')
iccAccountingResponsesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccAccountingResponsesPerSec.setStatus('current')
iccBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccBadAuthenticators.setStatus('current')
iccBadAuthenticatorsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccBadAuthenticatorsPerSec.setStatus('current')
iccDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccDroppedPackets.setStatus('current')
iccDroppedPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccDroppedPacketsPerSec.setStatus('current')
iccDuplicateAccountingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccDuplicateAccountingRequests.setStatus('current')
iccDuplicateAccountingRqstPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccDuplicateAccountingRqstPerSec.setStatus('current')
iccMalformedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccMalformedPackets.setStatus('current')
iccMalformedPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccMalformedPacketsPerSec.setStatus('current')
iccNoRecord = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccNoRecord.setStatus('current')
iccNoRecordPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccNoRecordPerSec.setStatus('current')
iccPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccPacketsReceived.setStatus('current')
iccPacketsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccPacketsReceivedPerSec.setStatus('current')
iccPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccPacketsSent.setStatus('current')
iccPacketsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccPacketsSentPerSec.setStatus('current')
iccUnknownType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccUnknownType.setStatus('current')
iccUnknownTypePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 25, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iccUnknownTypePerSec.setStatus('current')
iasAccountingProxy = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26))
icpAccountingRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpAccountingRequests.setStatus('current')
icpAccountingRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpAccountingRequestsPerSec.setStatus('current')
icpAccountingResponses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpAccountingResponses.setStatus('current')
icpAccountingResponsesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpAccountingResponsesPerSec.setStatus('current')
icpBadAuthenticators = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpBadAuthenticators.setStatus('current')
icpBadAuthenticatorsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpBadAuthenticatorsPerSec.setStatus('current')
icpDroppedPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpDroppedPackets.setStatus('current')
icpDroppedPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpDroppedPacketsPerSec.setStatus('current')
icpInvalidAddresses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpInvalidAddresses.setStatus('current')
icpInvalidAddressesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpInvalidAddressesPerSec.setStatus('current')
icpMalformedPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpMalformedPackets.setStatus('current')
icpMalformedPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpMalformedPacketsPerSec.setStatus('current')
icpPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpPacketsReceived.setStatus('current')
icpPacketsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpPacketsReceivedPerSec.setStatus('current')
icpPendingRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpPendingRequests.setStatus('current')
icpRequestTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpRequestTimeouts.setStatus('current')
icpRequestTimeoutsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpRequestTimeoutsPerSec.setStatus('current')
icpRetransmissions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpRetransmissions.setStatus('current')
icpRetransmissionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpRetransmissionsPerSec.setStatus('current')
icpUnknownType = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpUnknownType.setStatus('current')
icpUnknownTypePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 26, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icpUnknownTypePerSec.setStatus('current')
iasAccountingServer = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27))
if mibBuilder.loadTexts: iasAccountingServer.setStatus('current')
icsAccountingRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsAccountingRequests.setStatus('current')
icsAccountingRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsAccountingRequestsPerSec.setStatus('current')
icsAccountingResponses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsAccountingResponses.setStatus('current')
icsAccountingResponsesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsAccountingResponsesPerSec.setStatus('current')
icsBadAuthenticators = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsBadAuthenticators.setStatus('current')
icsBadAuthenticatorsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsBadAuthenticatorsPerSec.setStatus('current')
icsDroppedPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsDroppedPackets.setStatus('current')
icsDroppedPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsDroppedPacketsPerSec.setStatus('current')
icsDuplicateAccountingRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsDuplicateAccountingRequests.setStatus('current')
icsDuplicateAccountingRqstPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsDuplicateAccountingRqstPerSec.setStatus('current')
icsInvalidRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsInvalidRequests.setStatus('current')
icsInvalidRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsInvalidRequestsPerSec.setStatus('current')
icsMalformedPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsMalformedPackets.setStatus('current')
icsMalformedPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsMalformedPacketsPerSec.setStatus('current')
icsNoRecord = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsNoRecord.setStatus('current')
icsNoRecordPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsNoRecordPerSec.setStatus('current')
icsPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsPacketsReceived.setStatus('current')
icsPacketsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsPacketsReceivedPerSec.setStatus('current')
icsPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsPacketsSent.setStatus('current')
icsPacketsSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsPacketsSentPerSec.setStatus('current')
icsServerResetTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsServerResetTime.setStatus('current')
icsServerUpTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsServerUpTime.setStatus('current')
icsUnknownType = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsUnknownType.setStatus('current')
icsUnknownTypePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 27, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icsUnknownTypePerSec.setStatus('current')
iasAuthenticationClientsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28), )
if mibBuilder.loadTexts: iasAuthenticationClientsTable.setStatus('current')
iasAuthenticationClientsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1), ).setIndexNames((0, "INFORMANT-ADV", "iucInstance"))
if mibBuilder.loadTexts: iasAuthenticationClientsEntry.setStatus('current')
iucInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucInstance.setStatus('current')
iucAccessAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucAccessAccepts.setStatus('current')
iucAccessAcceptsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucAccessAcceptsPerSec.setStatus('current')
iucAccessChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucAccessChallenges.setStatus('current')
iucAccessChallengesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucAccessChallengesPerSec.setStatus('current')
iucAccessRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucAccessRejects.setStatus('current')
iucAccessRejectsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucAccessRejectsPerSec.setStatus('current')
iucAccessRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucAccessRequests.setStatus('current')
iucAccessRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucAccessRequestsPerSec.setStatus('current')
iucBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucBadAuthenticators.setStatus('current')
iucBadAuthenticatorsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucBadAuthenticatorsPerSec.setStatus('current')
iucDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucDroppedPackets.setStatus('current')
iucDroppedPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucDroppedPacketsPerSec.setStatus('current')
iucDuplicateAccessRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucDuplicateAccessRequests.setStatus('current')
iucDuplicateAccessRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucDuplicateAccessRequestsPerSec.setStatus('current')
iucMalformedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucMalformedPackets.setStatus('current')
iucMalformedPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucMalformedPacketsPerSec.setStatus('current')
iucPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucPacketsReceived.setStatus('current')
iucPacketsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucPacketsReceivedPerSec.setStatus('current')
iucPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucPacketsSent.setStatus('current')
iucPacketsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucPacketsSentPerSec.setStatus('current')
iucUnknownType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucUnknownType.setStatus('current')
iucUnknownTypePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 28, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iucUnknownTypePerSec.setStatus('current')
iasAuthenticationProxy = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29))
iupAccessAccepts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupAccessAccepts.setStatus('current')
iupAccessAcceptsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupAccessAcceptsPerSec.setStatus('current')
iupAccessChallenges = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupAccessChallenges.setStatus('current')
iupAccessChallengesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupAccessChallengesPerSec.setStatus('current')
iupAccessRejects = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupAccessRejects.setStatus('current')
iupAccessRejectsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupAccessRejectsPerSec.setStatus('current')
iupAccessRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupAccessRequests.setStatus('current')
iupAccessRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupAccessRequestsPerSec.setStatus('current')
iupBadAuthenticators = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupBadAuthenticators.setStatus('current')
iupBadAuthenticatorsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupBadAuthenticatorsPerSec.setStatus('current')
iupDroppedPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupDroppedPackets.setStatus('current')
iupDroppedPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupDroppedPacketsPerSec.setStatus('current')
iupInvalidAddresses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupInvalidAddresses.setStatus('current')
iupInvalidAddressesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupInvalidAddressesPerSec.setStatus('current')
iupMalformedPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupMalformedPackets.setStatus('current')
iupMalformedPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupMalformedPacketsPerSec.setStatus('current')
iupPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupPacketsReceived.setStatus('current')
iupPacketsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupPacketsReceivedPerSec.setStatus('current')
iupPendingRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupPendingRequests.setStatus('current')
iupRequestTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupRequestTimeouts.setStatus('current')
iupRequestTimeoutsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupRequestTimeoutsPerSec.setStatus('current')
iupRetransmissions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupRetransmissions.setStatus('current')
iupRetransmissionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupRetransmissionsPerSec.setStatus('current')
iupUnknownType = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupUnknownType.setStatus('current')
iupUnknownTypePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 29, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iupUnknownTypePerSec.setStatus('current')
iasAuthenticationServer = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30))
if mibBuilder.loadTexts: iasAuthenticationServer.setStatus('current')
iusAccessAccepts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusAccessAccepts.setStatus('current')
iusAccessAcceptsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusAccessAcceptsPerSec.setStatus('current')
iusAccessChallenges = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusAccessChallenges.setStatus('current')
iusAccessChallengesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusAccessChallengesPerSec.setStatus('current')
iusAccessRejects = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusAccessRejects.setStatus('current')
iusAccessRejectsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusAccessRejectsPerSec.setStatus('current')
iusAccessRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusAccessRequests.setStatus('current')
iusAccessRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusAccessRequestsPerSec.setStatus('current')
iusBadAuthenticators = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusBadAuthenticators.setStatus('current')
iusBadAuthenticatorsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusBadAuthenticatorsPerSec.setStatus('current')
iusDroppedPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusDroppedPackets.setStatus('current')
iusDroppedPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusDroppedPacketsPerSec.setStatus('current')
iusDuplicateAccessRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusDuplicateAccessRequests.setStatus('current')
iusDuplicateAccessRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusDuplicateAccessRequestsPerSec.setStatus('current')
iusInvalidRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusInvalidRequests.setStatus('current')
iusInvalidRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusInvalidRequestsPerSec.setStatus('current')
iusMalformedPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusMalformedPackets.setStatus('current')
iusMalformedPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusMalformedPacketsPerSec.setStatus('current')
iusPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusPacketsReceived.setStatus('current')
iusPacketsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusPacketsReceivedPerSec.setStatus('current')
iusPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusPacketsSent.setStatus('current')
iusPacketsSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusPacketsSentPerSec.setStatus('current')
iusServerResetTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusServerResetTime.setStatus('current')
iusServerUpTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusServerUpTime.setStatus('current')
iusUnknownType = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusUnknownType.setStatus('current')
iusUnknownTypePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 30, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iusUnknownTypePerSec.setStatus('current')
iasRemoteAccountingServersTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31), )
if mibBuilder.loadTexts: iasRemoteAccountingServersTable.setStatus('current')
iasRemoteAccountingServersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1), ).setIndexNames((0, "INFORMANT-ADV", "ircsInstance"))
if mibBuilder.loadTexts: iasRemoteAccountingServersEntry.setStatus('current')
ircsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsInstance.setStatus('current')
ircsAccountingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsAccountingRequests.setStatus('current')
ircsAccountingRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsAccountingRequestsPerSec.setStatus('current')
ircsAccountingResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsAccountingResponses.setStatus('current')
ircsAccountingResponsesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsAccountingResponsesPerSec.setStatus('current')
ircsBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsBadAuthenticators.setStatus('current')
ircsBadAuthenticatorsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsBadAuthenticatorsPerSec.setStatus('current')
ircsDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsDroppedPackets.setStatus('current')
ircsDroppedPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsDroppedPacketsPerSec.setStatus('current')
ircsLastRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsLastRoundTripTime.setStatus('current')
ircsMalformedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsMalformedPackets.setStatus('current')
ircsMalformedPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsMalformedPacketsPerSec.setStatus('current')
ircsPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsPacketsReceived.setStatus('current')
ircsPacketsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsPacketsReceivedPerSec.setStatus('current')
ircsPendingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsPendingRequests.setStatus('current')
ircsPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsPortNumber.setStatus('current')
ircsRequestTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsRequestTimeouts.setStatus('current')
ircsRequestTimeoutsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsRequestTimeoutsPerSec.setStatus('current')
ircsRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsRetransmissions.setStatus('current')
ircsRetransmissionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsRetransmissionsPerSec.setStatus('current')
ircsUnknownType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsUnknownType.setStatus('current')
ircsUnknownTypePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 31, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ircsUnknownTypePerSec.setStatus('current')
iasRemoteAuthenticationSrvrTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32), )
if mibBuilder.loadTexts: iasRemoteAuthenticationSrvrTable.setStatus('current')
iasRemoteAuthenticationSrvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1), ).setIndexNames((0, "INFORMANT-ADV", "irusInstance"))
if mibBuilder.loadTexts: iasRemoteAuthenticationSrvrEntry.setStatus('current')
irusInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusInstance.setStatus('current')
irusAccessAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusAccessAccepts.setStatus('current')
irusAccessAcceptsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusAccessAcceptsPerSec.setStatus('current')
irusAccessChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusAccessChallenges.setStatus('current')
irusAccessChallengesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusAccessChallengesPerSec.setStatus('current')
irusAccessRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusAccessRejects.setStatus('current')
irusAccessRejectsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusAccessRejectsPerSec.setStatus('current')
irusAccessRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusAccessRequests.setStatus('current')
irusAccessRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusAccessRequestsPerSec.setStatus('current')
irusBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusBadAuthenticators.setStatus('current')
irusBadAuthenticatorsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusBadAuthenticatorsPerSec.setStatus('current')
irusDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusDroppedPackets.setStatus('current')
irusDroppedPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusDroppedPacketsPerSec.setStatus('current')
irusLastRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusLastRoundTripTime.setStatus('current')
irusMalformedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusMalformedPackets.setStatus('current')
irusMalformedPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusMalformedPacketsPerSec.setStatus('current')
irusPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusPacketsReceived.setStatus('current')
irusPacketsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusPacketsReceivedPerSec.setStatus('current')
irusPendingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusPendingRequests.setStatus('current')
irusPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusPortNumber.setStatus('current')
irusRequestTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusRequestTimeouts.setStatus('current')
irusRequestTimeoutsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusRequestTimeoutsPerSec.setStatus('current')
irusRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusRetransmissions.setStatus('current')
irusRetransmissionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusRetransmissionsPerSec.setStatus('current')
irusUnknownType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusUnknownType.setStatus('current')
irusUnknownTypePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 32, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: irusUnknownTypePerSec.setStatus('current')
icmpV4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33))
if mibBuilder.loadTexts: icmpV4.setStatus('current')
icmpV4MessagesOutboundErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4MessagesOutboundErrors.setStatus('current')
icmpV4MessagesReceivedErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4MessagesReceivedErrors.setStatus('current')
icmpV4MessagesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4MessagesReceivedPerSec.setStatus('current')
icmpV4MessagesSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4MessagesSentPerSec.setStatus('current')
icmpV4MessagesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4MessagesPerSec.setStatus('current')
icmpV4RcvdAddressMask = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4RcvdAddressMask.setStatus('current')
icmpV4RcvdAddressMaskReply = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4RcvdAddressMaskReply.setStatus('current')
icmpV4RcvdDestUnreachable = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4RcvdDestUnreachable.setStatus('current')
icmpV4RcvdEchoReplyPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4RcvdEchoReplyPerSec.setStatus('current')
icmpV4RcvdEchoPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4RcvdEchoPerSec.setStatus('current')
icmpV4RcvdParameterProblem = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4RcvdParameterProblem.setStatus('current')
icmpV4RcvdRedirectPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4RcvdRedirectPerSec.setStatus('current')
icmpV4RcvdSourceQuench = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4RcvdSourceQuench.setStatus('current')
icmpV4RcvdTimeExceeded = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4RcvdTimeExceeded.setStatus('current')
icmpV4RcvdTimestampReplyPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4RcvdTimestampReplyPerSec.setStatus('current')
icmpV4RcvdTimestampPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4RcvdTimestampPerSec.setStatus('current')
icmpV4SentAddressMask = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4SentAddressMask.setStatus('current')
icmpV4SentAddressMaskReply = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4SentAddressMaskReply.setStatus('current')
icmpV4SentDestinationUnreachable = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4SentDestinationUnreachable.setStatus('current')
icmpV4SentEchoReplyPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4SentEchoReplyPerSec.setStatus('current')
icmpV4SentEchoPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4SentEchoPerSec.setStatus('current')
icmpV4SentParameterProblem = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4SentParameterProblem.setStatus('current')
icmpV4SentRedirectPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4SentRedirectPerSec.setStatus('current')
icmpV4SentSourceQuench = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4SentSourceQuench.setStatus('current')
icmpV4SentTimeExceeded = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4SentTimeExceeded.setStatus('current')
icmpV4SentTimestampReplyPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4SentTimestampReplyPerSec.setStatus('current')
icmpV4SentTimestampPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 33, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV4SentTimestampPerSec.setStatus('current')
icmpV6 = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34))
icmpV6MessagesOutboundErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6MessagesOutboundErrors.setStatus('current')
icmpV6MessagesReceivedErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6MessagesReceivedErrors.setStatus('current')
icmpV6MessagesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6MessagesReceivedPerSec.setStatus('current')
icmpV6MessagesSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6MessagesSentPerSec.setStatus('current')
icmpV6MessagesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6MessagesPerSec.setStatus('current')
icmpV6ReceivedDestUnreachable = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6ReceivedDestUnreachable.setStatus('current')
icmpV6ReceivedEchoReplyPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6ReceivedEchoReplyPerSec.setStatus('current')
icmpV6ReceivedEchoPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6ReceivedEchoPerSec.setStatus('current')
icmpV6ReceivedMembershipQuery = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6ReceivedMembershipQuery.setStatus('current')
icmpV6ReceivedMembershipReduct = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6ReceivedMembershipReduct.setStatus('current')
icmpV6ReceivedMembershipReport = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6ReceivedMembershipReport.setStatus('current')
icmpV6ReceivedNeighborAdvert = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6ReceivedNeighborAdvert.setStatus('current')
icmpV6ReceivedNeighborSolicit = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6ReceivedNeighborSolicit.setStatus('current')
icmpV6ReceivedPacketTooBig = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6ReceivedPacketTooBig.setStatus('current')
icmpV6ReceivedParameterProblem = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6ReceivedParameterProblem.setStatus('current')
icmpV6ReceivedRedirectPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6ReceivedRedirectPerSec.setStatus('current')
icmpV6ReceivedRouterAdvert = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6ReceivedRouterAdvert.setStatus('current')
icmpV6ReceivedRouterSolicit = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6ReceivedRouterSolicit.setStatus('current')
icmpV6ReceivedTimeExceeded = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6ReceivedTimeExceeded.setStatus('current')
icmpV6SentDestinationUnreachable = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6SentDestinationUnreachable.setStatus('current')
icmpV6SentEchoReplyPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6SentEchoReplyPerSec.setStatus('current')
icmpV6SentEchoPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6SentEchoPerSec.setStatus('current')
icmpV6SentMembershipQuery = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6SentMembershipQuery.setStatus('current')
icmpV6SentMembershipReduction = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6SentMembershipReduction.setStatus('current')
icmpV6SentMembershipReport = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6SentMembershipReport.setStatus('current')
icmpV6SentNeighborAdvert = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6SentNeighborAdvert.setStatus('current')
icmpV6SentNeighborSolicit = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6SentNeighborSolicit.setStatus('current')
icmpV6SentPacketTooBig = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6SentPacketTooBig.setStatus('current')
icmpV6SentParameterProblem = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6SentParameterProblem.setStatus('current')
icmpV6SentRedirectPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6SentRedirectPerSec.setStatus('current')
icmpV6SentRouterAdvert = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6SentRouterAdvert.setStatus('current')
icmpV6SentRouterSolicit = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6SentRouterSolicit.setStatus('current')
icmpV6SentTimeExceeded = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 34, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: icmpV6SentTimeExceeded.setStatus('current')
indexingServiceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 35), )
if mibBuilder.loadTexts: indexingServiceTable.setStatus('current')
indexingServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1), ).setIndexNames((0, "INFORMANT-ADV", "idxSvcInstance"))
if mibBuilder.loadTexts: indexingServiceEntry.setStatus('current')
idxSvcInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idxSvcInstance.setStatus('current')
idxSvcNumDocumentsIndexed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idxSvcNumDocumentsIndexed.setStatus('current')
idxSvcDeferredForIndexing = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idxSvcDeferredForIndexing.setStatus('current')
idxSvcFilesToBeIndexed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idxSvcFilesToBeIndexed.setStatus('current')
idxSvcIndexSizeMB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idxSvcIndexSizeMB.setStatus('current')
idxSvcMergeProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idxSvcMergeProgress.setStatus('current')
idxSvcRunningQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idxSvcRunningQueries.setStatus('current')
idxSvcSavedIndexes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idxSvcSavedIndexes.setStatus('current')
idxSvcTotalNumDocuments = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idxSvcTotalNumDocuments.setStatus('current')
idxSvcTotalNumOfQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idxSvcTotalNumOfQueries.setStatus('current')
idxSvcUniqueKeys = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idxSvcUniqueKeys.setStatus('current')
idxSvcWordLists = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 35, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idxSvcWordLists.setStatus('current')
indexingServiceFilterTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 36), )
if mibBuilder.loadTexts: indexingServiceFilterTable.setStatus('current')
indexingServiceFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 36, 1), ).setIndexNames((0, "INFORMANT-ADV", "idxSvcFilterInstance"))
if mibBuilder.loadTexts: indexingServiceFilterEntry.setStatus('current')
idxSvcFilterInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 36, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idxSvcFilterInstance.setStatus('current')
idxSvcFilterBindingTimeMsec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 36, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idxSvcFilterBindingTimeMsec.setStatus('current')
idxSvcFilterIdxSpeedMBPerHr = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 36, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idxSvcFilterIdxSpeedMBPerHr.setStatus('current')
idxSvcFilterTotalIdxSpeedMBPerHr = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 36, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: idxSvcFilterTotalIdxSpeedMBPerHr.setStatus('current')
internetInformationServiceGlobal = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37))
if mibBuilder.loadTexts: internetInformationServiceGlobal.setStatus('current')
iisGlobalActiveFlushedEntries = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalActiveFlushedEntries.setStatus('current')
iisGlobalBLOBCacheFlushes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalBLOBCacheFlushes.setStatus('current')
iisGlobalBLOBCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalBLOBCacheHits.setStatus('current')
iisGlobalBLOBCacheHitsPercent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalBLOBCacheHitsPercent.setStatus('current')
iisGlobalBLOBCacheMisses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalBLOBCacheMisses.setStatus('current')
iisGlobalCurBLOBsCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalCurBLOBsCached.setStatus('current')
iisGlobalCurBlockAsyncIORequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalCurBlockAsyncIORequests.setStatus('current')
iisGlobalCurFileCacheMemUsage = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalCurFileCacheMemUsage.setStatus('current')
iisGlobalCurFilesCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalCurFilesCached.setStatus('current')
iisGlobalCurURIsCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalCurURIsCached.setStatus('current')
iisGlobalFileCacheFlushes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalFileCacheFlushes.setStatus('current')
iisGlobalFileCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalFileCacheHits.setStatus('current')
iisGlobalFileCacheHitsPercent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalFileCacheHitsPercent.setStatus('current')
iisGlobalFileCacheMisses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalFileCacheMisses.setStatus('current')
iisGlobalMaxFileCacheMemUsage = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalMaxFileCacheMemUsage.setStatus('current')
iisGlobalMeasuredAsyncIOBwUsage = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalMeasuredAsyncIOBwUsage.setStatus('current')
iisGlobalTotalAllowedAsyncIOReqs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalTotalAllowedAsyncIOReqs.setStatus('current')
iisGlobalTotalBLOBsCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalTotalBLOBsCached.setStatus('current')
iisGlobalTotalBlockAsyncIOReqs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalTotalBlockAsyncIOReqs.setStatus('current')
iisGlobalTotalFilesCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalTotalFilesCached.setStatus('current')
iisGlobalTotalFlushedBLOBs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalTotalFlushedBLOBs.setStatus('current')
iisGlobalTotalFlushedFiles = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalTotalFlushedFiles.setStatus('current')
iisGlobalTotalFlushedURIs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalTotalFlushedURIs.setStatus('current')
iisGlobalTotalRejectedAsyncIOReq = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalTotalRejectedAsyncIOReq.setStatus('current')
iisGlobalTotalURIsCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalTotalURIsCached.setStatus('current')
iisGlobalURICacheFlushes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalURICacheFlushes.setStatus('current')
iisGlobalURICacheHits = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalURICacheHits.setStatus('current')
iisGlobalURICacheHitsPercent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalURICacheHitsPercent.setStatus('current')
iisGlobalURICacheMisses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 37, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iisGlobalURICacheMisses.setStatus('current')
ipV4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 38))
if mibBuilder.loadTexts: ipV4.setStatus('current')
ipV4DatagramsForwardedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV4DatagramsForwardedPerSec.setStatus('current')
ipV4DatagramsOutboundDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV4DatagramsOutboundDiscarded.setStatus('current')
ipV4DatagramsOutboundNoRoute = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV4DatagramsOutboundNoRoute.setStatus('current')
ipV4DatagramsRcvdAddressErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV4DatagramsRcvdAddressErrors.setStatus('current')
ipV4DatagramsRcvdDeliveredPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV4DatagramsRcvdDeliveredPerSec.setStatus('current')
ipV4DatagramsRcvdDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV4DatagramsRcvdDiscarded.setStatus('current')
ipV4DatagramsRcvdHeaderErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV4DatagramsRcvdHeaderErrors.setStatus('current')
ipV4DatagramsRcvdUnknownProtocol = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV4DatagramsRcvdUnknownProtocol.setStatus('current')
ipV4DatagramsRcvdPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV4DatagramsRcvdPerSec.setStatus('current')
ipV4DatagramsSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV4DatagramsSentPerSec.setStatus('current')
ipV4DatagramsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV4DatagramsPerSec.setStatus('current')
ipV4FragmentReassemblyFailures = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV4FragmentReassemblyFailures.setStatus('current')
ipV4FragmentationFailures = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV4FragmentationFailures.setStatus('current')
ipV4FragmentedDatagramsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV4FragmentedDatagramsPerSec.setStatus('current')
ipV4FragmentsCreatedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV4FragmentsCreatedPerSec.setStatus('current')
ipV4FragmentsReassembledPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV4FragmentsReassembledPerSec.setStatus('current')
ipV4FragmentsRcvdPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 38, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV4FragmentsRcvdPerSec.setStatus('current')
ipV6 = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 39))
ipV6DatagramsForwardedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV6DatagramsForwardedPerSec.setStatus('current')
ipV6DatagramsOutboundDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV6DatagramsOutboundDiscarded.setStatus('current')
ipV6DatagramsOutboundNoRoute = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV6DatagramsOutboundNoRoute.setStatus('current')
ipV6DatagramsRcvdAddressErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV6DatagramsRcvdAddressErrors.setStatus('current')
ipV6DatagramsRcvdDeliveredPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV6DatagramsRcvdDeliveredPerSec.setStatus('current')
ipV6DatagramsRcvdDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV6DatagramsRcvdDiscarded.setStatus('current')
ipV6DatagramsRcvdHeaderErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV6DatagramsRcvdHeaderErrors.setStatus('current')
ipV6DatagramsRcvdUnknownProtocol = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV6DatagramsRcvdUnknownProtocol.setStatus('current')
ipV6DatagramsRcvdPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV6DatagramsRcvdPerSec.setStatus('current')
ipV6DatagramsSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV6DatagramsSentPerSec.setStatus('current')
ipV6DatagramsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV6DatagramsPerSec.setStatus('current')
ipV6FragmentReassemblyFailures = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV6FragmentReassemblyFailures.setStatus('current')
ipV6FragmentationFailures = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV6FragmentationFailures.setStatus('current')
ipV6FragmentedDatagramsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV6FragmentedDatagramsPerSec.setStatus('current')
ipV6FragmentsCreatedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV6FragmentsCreatedPerSec.setStatus('current')
ipV6FragmentsReassembledPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV6FragmentsReassembledPerSec.setStatus('current')
ipV6FragmentsRcvdPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 39, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipV6FragmentsRcvdPerSec.setStatus('current')
ipSecV4Driver = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 40))
is4dActiveSecurityAssociations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4dActiveSecurityAssociations.setStatus('current')
is4dOffloadedSecurityAssociation = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4dOffloadedSecurityAssociation.setStatus('current')
is4dPendingKeyExchangeOperations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4dPendingKeyExchangeOperations.setStatus('current')
is4dTotalBadSPIPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4dTotalBadSPIPackets.setStatus('current')
is4dTotalBytesReceivedInTunnels = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4dTotalBytesReceivedInTunnels.setStatus('current')
is4dTotalBytesSentInTunnels = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4dTotalBytesSentInTunnels.setStatus('current')
is4dTotalOffloadedBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4dTotalOffloadedBytesReceived.setStatus('current')
is4dTotalOffloadedBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4dTotalOffloadedBytesSent.setStatus('current')
is4dTotalPktsFailReplayDetection = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4dTotalPktsFailReplayDetection.setStatus('current')
is4dTotalPktsNotAuthenticated = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4dTotalPktsNotAuthenticated.setStatus('current')
is4dTotalPktsNotDecrypted = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4dTotalPktsNotDecrypted.setStatus('current')
is4dTotalSARekeys = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4dTotalSARekeys.setStatus('current')
is4dTotalTransportBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4dTotalTransportBytesReceived.setStatus('current')
is4dTotalTransportBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 40, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4dTotalTransportBytesSent.setStatus('current')
ipSecV4IKE = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 41))
if mibBuilder.loadTexts: ipSecV4IKE.setStatus('current')
is4iAcquireHeapSize = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 41, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4iAcquireHeapSize.setStatus('current')
is4iMainModeSAListEntries = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 41, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4iMainModeSAListEntries.setStatus('current')
is4iQuickModeSAListEntries = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 41, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4iQuickModeSAListEntries.setStatus('current')
is4iReceiveHeapSize = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 41, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4iReceiveHeapSize.setStatus('current')
is4iTotalAuthenticationFailures = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 41, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4iTotalAuthenticationFailures.setStatus('current')
is4iTotalMainModeSAs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 41, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4iTotalMainModeSAs.setStatus('current')
is4iTotalNegotiationFailures = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 41, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4iTotalNegotiationFailures.setStatus('current')
is4iTotalQuickModeSAs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 41, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4iTotalQuickModeSAs.setStatus('current')
is4iTotalSoftAssociations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 41, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: is4iTotalSoftAssociations.setStatus('current')
jobObjectTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 42), )
if mibBuilder.loadTexts: jobObjectTable.setStatus('current')
jobObjectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1), ).setIndexNames((0, "INFORMANT-ADV", "joInstance"))
if mibBuilder.loadTexts: jobObjectEntry.setStatus('current')
joInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: joInstance.setStatus('current')
joCurrentPercentKernelModeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: joCurrentPercentKernelModeTime.setStatus('current')
joCurrentPercentProcessorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: joCurrentPercentProcessorTime.setStatus('current')
joCurrentPercentUserModeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: joCurrentPercentUserModeTime.setStatus('current')
joPagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: joPagesPerSec.setStatus('current')
joProcessCountActive = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: joProcessCountActive.setStatus('current')
joProcessCountTerminated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: joProcessCountTerminated.setStatus('current')
joProcessCountTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: joProcessCountTotal.setStatus('current')
joThisPeriodMSecKernelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: joThisPeriodMSecKernelMode.setStatus('current')
joThisPeriodMSecProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: joThisPeriodMSecProcessor.setStatus('current')
joThisPeriodMSecUserMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: joThisPeriodMSecUserMode.setStatus('current')
joTotalMSecKernelMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: joTotalMSecKernelMode.setStatus('current')
joTotalMSecProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: joTotalMSecProcessor.setStatus('current')
joTotalMSecUserMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 42, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: joTotalMSecUserMode.setStatus('current')
jobObjectDetailsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43), )
if mibBuilder.loadTexts: jobObjectDetailsTable.setStatus('current')
jobObjectDetailsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1), ).setIndexNames((0, "INFORMANT-ADV", "jodInstance"))
if mibBuilder.loadTexts: jobObjectDetailsEntry.setStatus('current')
jodInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodInstance.setStatus('current')
jodPercentPrivilegedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodPercentPrivilegedTime.setStatus('current')
jodPercentProcessorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodPercentProcessorTime.setStatus('current')
jodPercentUserTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodPercentUserTime.setStatus('current')
jodCreatingProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodCreatingProcessID.setStatus('current')
jodElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodElapsedTime.setStatus('current')
jodHandleCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodHandleCount.setStatus('current')
jodIDProcess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodIDProcess.setStatus('current')
jodIODataBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodIODataBytesPerSec.setStatus('current')
jodIODataOperationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodIODataOperationsPerSec.setStatus('current')
jodIOOtherBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodIOOtherBytesPerSec.setStatus('current')
jodIOOtherOperationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodIOOtherOperationsPerSec.setStatus('current')
jodIOReadBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodIOReadBytesPerSec.setStatus('current')
jodIOReadOperationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodIOReadOperationsPerSec.setStatus('current')
jodIOWriteBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodIOWriteBytesPerSec.setStatus('current')
jodIOWriteOperationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodIOWriteOperationsPerSec.setStatus('current')
jodPageFaultsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodPageFaultsPerSec.setStatus('current')
jodPageFileBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodPageFileBytes.setStatus('current')
jodPageFileBytesPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodPageFileBytesPeak.setStatus('current')
jodPoolNonpagedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodPoolNonpagedBytes.setStatus('current')
jodPoolPagedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodPoolPagedBytes.setStatus('current')
jodPriorityBase = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodPriorityBase.setStatus('current')
jodPrivateBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodPrivateBytes.setStatus('current')
jodThreadCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodThreadCount.setStatus('current')
jodVirtualBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodVirtualBytes.setStatus('current')
jodVirtualBytesPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodVirtualBytesPeak.setStatus('current')
jodWorkingSet = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodWorkingSet.setStatus('current')
jodWorkingSetPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 43, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jodWorkingSetPeak.setStatus('current')
logicalDiskTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44), )
if mibBuilder.loadTexts: logicalDiskTable.setStatus('current')
logicalDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1), ).setIndexNames((0, "INFORMANT-ADV", "lDiskInstance"))
if mibBuilder.loadTexts: logicalDiskEntry.setStatus('current')
lDiskInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskInstance.setStatus('current')
lDiskPercentDiskReadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskPercentDiskReadTime.setStatus('current')
lDiskPercentDiskTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskPercentDiskTime.setStatus('current')
lDiskPercentDiskWriteTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskPercentDiskWriteTime.setStatus('current')
lDiskPercentFreeSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskPercentFreeSpace.setStatus('current')
lDiskPercentIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskPercentIdleTime.setStatus('current')
lDiskAvgDiskBytesPerRead = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskAvgDiskBytesPerRead.setStatus('current')
lDiskAvgDiskBytesPerTransfer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskAvgDiskBytesPerTransfer.setStatus('current')
lDiskAvgDiskBytesPerWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskAvgDiskBytesPerWrite.setStatus('current')
lDiskAvgDiskQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskAvgDiskQueueLength.setStatus('current')
lDiskAvgDiskReadQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskAvgDiskReadQueueLength.setStatus('current')
lDiskAvgDiskWriteQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskAvgDiskWriteQueueLength.setStatus('current')
lDiskAvgDiskSecPerRead = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskAvgDiskSecPerRead.setStatus('current')
lDiskAvgDiskSecPerTransfer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskAvgDiskSecPerTransfer.setStatus('current')
lDiskAvgDiskSecPerWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskAvgDiskSecPerWrite.setStatus('current')
lDiskCurrentDiskQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskCurrentDiskQueueLength.setStatus('current')
lDiskDiskBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskDiskBytesPerSec.setStatus('current')
lDiskDiskReadBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskDiskReadBytesPerSec.setStatus('current')
lDiskDiskReadsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskDiskReadsPerSec.setStatus('current')
lDiskDiskTransfersPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskDiskTransfersPerSec.setStatus('current')
lDiskDiskWriteBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskDiskWriteBytesPerSec.setStatus('current')
lDiskDiskWritesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskDiskWritesPerSec.setStatus('current')
lDiskFreeMegabytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskFreeMegabytes.setStatus('current')
lDiskSplitIOPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 44, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lDiskSplitIOPerSec.setStatus('current')
macFileServer = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 45))
if mibBuilder.loadTexts: macFileServer.setStatus('current')
mfsCurrentFilesOpen = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfsCurrentFilesOpen.setStatus('current')
mfsCurrentNonPagedMemory = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfsCurrentNonPagedMemory.setStatus('current')
mfsCurrentPagedMemory = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfsCurrentPagedMemory.setStatus('current')
mfsCurrentQueueLength = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfsCurrentQueueLength.setStatus('current')
mfsCurrentSessions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfsCurrentSessions.setStatus('current')
mfsCurrentThreads = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfsCurrentThreads.setStatus('current')
mfsDataReadPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfsDataReadPerSec.setStatus('current')
mfsDataReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfsDataReceivedPerSec.setStatus('current')
mfsDataTransmittedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfsDataTransmittedPerSec.setStatus('current')
mfsDataWrittenPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfsDataWrittenPerSec.setStatus('current')
mfsFailedLogons = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfsFailedLogons.setStatus('current')
mfsMaxNonPagedMemory = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfsMaxNonPagedMemory.setStatus('current')
mfsMaxPagedMemory = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfsMaxPagedMemory.setStatus('current')
mfsMaximumFilesOpen = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfsMaximumFilesOpen.setStatus('current')
mfsMaximumQueueLength = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfsMaximumQueueLength.setStatus('current')
mfsMaximumSessions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfsMaximumSessions.setStatus('current')
mfsMaximumThreads = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 45, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mfsMaximumThreads.setStatus('current')
memory = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46))
if mibBuilder.loadTexts: memory.setStatus('current')
memoryPercentCommittedBytesInUse = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPercentCommittedBytesInUse.setStatus('current')
memoryAvailableBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryAvailableBytes.setStatus('current')
memoryAvailableKBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryAvailableKBytes.setStatus('current')
memoryAvailableMBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryAvailableMBytes.setStatus('current')
memoryCacheBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCacheBytes.setStatus('current')
memoryCacheBytesPeak = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCacheBytesPeak.setStatus('current')
memoryCacheFaultsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCacheFaultsPerSec.setStatus('current')
memoryCommitLimit = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCommitLimit.setStatus('current')
memoryCommittedBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCommittedBytes.setStatus('current')
memoryDemandZeroFaultsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryDemandZeroFaultsPerSec.setStatus('current')
memoryFreeSystemPageTableEntries = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryFreeSystemPageTableEntries.setStatus('current')
memoryPageFaultsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPageFaultsPerSec.setStatus('current')
memoryPageReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPageReadsPerSec.setStatus('current')
memoryPageWritesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPageWritesPerSec.setStatus('current')
memoryPagesInputPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPagesInputPerSec.setStatus('current')
memoryPagesOutputPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPagesOutputPerSec.setStatus('current')
memoryPagesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPagesPerSec.setStatus('current')
memoryPoolNonpagedAllocs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPoolNonpagedAllocs.setStatus('current')
memoryPoolNonpagedBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPoolNonpagedBytes.setStatus('current')
memoryPoolPagedAllocs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPoolPagedAllocs.setStatus('current')
memoryPoolPagedBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPoolPagedBytes.setStatus('current')
memoryPoolPagedResidentBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPoolPagedResidentBytes.setStatus('current')
memorySystemCacheResidentBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemCacheResidentBytes.setStatus('current')
memorySystemCodeResidentBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemCodeResidentBytes.setStatus('current')
memorySystemCodeTotalBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemCodeTotalBytes.setStatus('current')
memorySystemDriverResidentBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemDriverResidentBytes.setStatus('current')
memorySystemDriverTotalBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemDriverTotalBytes.setStatus('current')
memoryTranFaultsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryTranFaultsPerSec.setStatus('current')
memoryTranPagesRePurposedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryTranPagesRePurposedPerSec.setStatus('current')
memoryWriteCopiesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryWriteCopiesPerSec.setStatus('current')
memoryCacheKBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCacheKBytes.setStatus('current')
memoryCacheKBytesPeak = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCacheKBytesPeak.setStatus('current')
memoryCommittedKBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCommittedKBytes.setStatus('current')
memoryPoolNonpagedKBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPoolNonpagedKBytes.setStatus('current')
memoryPoolPagedKBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPoolPagedKBytes.setStatus('current')
memoryPoolPagedResidentKBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPoolPagedResidentKBytes.setStatus('current')
memorySystemCacheResidentKBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemCacheResidentKBytes.setStatus('current')
memorySystemCodeResidentKBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemCodeResidentKBytes.setStatus('current')
memorySystemCodeTotalKBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemCodeTotalKBytes.setStatus('current')
memorySystemDriverResidentKBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemDriverResidentKBytes.setStatus('current')
memorySystemDriverTotalKBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemDriverTotalKBytes.setStatus('current')
memoryCacheMBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCacheMBytes.setStatus('current')
memoryCacheMBytesPeak = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCacheMBytesPeak.setStatus('current')
memoryCommittedMBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCommittedMBytes.setStatus('current')
memoryPoolNonpagedMBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPoolNonpagedMBytes.setStatus('current')
memoryPoolPagedMBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPoolPagedMBytes.setStatus('current')
memoryPoolPagedResidentMBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPoolPagedResidentMBytes.setStatus('current')
memorySystemCacheResidentMBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemCacheResidentMBytes.setStatus('current')
memorySystemCodeResidentMBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemCodeResidentMBytes.setStatus('current')
memorySystemCodeTotalMBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemCodeTotalMBytes.setStatus('current')
memorySystemDriverResidentMBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 51), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemDriverResidentMBytes.setStatus('current')
memorySystemDriverTotalMBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemDriverTotalMBytes.setStatus('current')
memoryFreeZeroPageListBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryFreeZeroPageListBytes.setStatus('current')
memoryFreeZeroPageListKBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryFreeZeroPageListKBytes.setStatus('current')
memoryFreeZeroPageListMBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryFreeZeroPageListMBytes.setStatus('current')
memoryModifiedPageListBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 56), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryModifiedPageListBytes.setStatus('current')
memoryModifiedPageListKBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 57), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryModifiedPageListKBytes.setStatus('current')
memoryModifiedPageListMBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 58), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryModifiedPageListMBytes.setStatus('current')
memoryStbyCacheCoreBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 59), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStbyCacheCoreBytes.setStatus('current')
memoryStbyCacheCoreKBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 60), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStbyCacheCoreKBytes.setStatus('current')
memoryStbyCacheCoreMBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 61), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStbyCacheCoreMBytes.setStatus('current')
memoryStbyCacheNormPriorityBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 62), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStbyCacheNormPriorityBytes.setStatus('current')
memoryStbyCacheNormPriorityKByte = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 63), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStbyCacheNormPriorityKByte.setStatus('current')
memoryStbyCacheNormPriorityMByte = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 64), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStbyCacheNormPriorityMByte.setStatus('current')
memoryStbyCacheReserveBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 65), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStbyCacheReserveBytes.setStatus('current')
memoryStbyCacheReserveKBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 66), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStbyCacheReserveKBytes.setStatus('current')
memoryStbyCacheReserveMBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 67), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryStbyCacheReserveMBytes.setStatus('current')
memoryTransPagesRePurposedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 68), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryTransPagesRePurposedPerSec.setStatus('current')
memoryCommitLimitKBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 69), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCommitLimitKBytes.setStatus('current')
memoryCommitLimitMBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 46, 70), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCommitLimitMBytes.setStatus('current')
msmqQueueTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 47), )
if mibBuilder.loadTexts: msmqQueueTable.setStatus('current')
msmqQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 47, 1), ).setIndexNames((0, "INFORMANT-ADV", "msmqInstance"))
if mibBuilder.loadTexts: msmqQueueEntry.setStatus('current')
msmqInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 47, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqInstance.setStatus('current')
msmqBytesInJournalQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 47, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqBytesInJournalQueue.setStatus('current')
msmqBytesInQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 47, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqBytesInQueue.setStatus('current')
msmqMessagesInJournalQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 47, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqMessagesInJournalQueue.setStatus('current')
msmqMessagesInQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 47, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqMessagesInQueue.setStatus('current')
msmqService = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 48))
if mibBuilder.loadTexts: msmqService.setStatus('current')
msmqSvcIPSessions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqSvcIPSessions.setStatus('current')
msmqSvcIPXSessions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqSvcIPXSessions.setStatus('current')
msmqSvcIncomingMessagesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqSvcIncomingMessagesPerSec.setStatus('current')
msmqSvcMSMQIncomingMessages = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqSvcMSMQIncomingMessages.setStatus('current')
msmqSvcMSMQOutgoingMessages = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqSvcMSMQOutgoingMessages.setStatus('current')
msmqSvcOutgoingMessagesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqSvcOutgoingMessagesPerSec.setStatus('current')
msmqSvcSessions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqSvcSessions.setStatus('current')
msmqSvcTotalBytesInAllQueues = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqSvcTotalBytesInAllQueues.setStatus('current')
msmqSvcTotalMessagesInAllQueues = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqSvcTotalMessagesInAllQueues.setStatus('current')
msmqSvcIncomingMulticastSessions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqSvcIncomingMulticastSessions.setStatus('current')
msmqSvcOutgoingHTTPSessions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqSvcOutgoingHTTPSessions.setStatus('current')
msmqSvcOutgoingMulticastSessions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 48, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqSvcOutgoingMulticastSessions.setStatus('current')
nbtConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 49), )
if mibBuilder.loadTexts: nbtConnectionTable.setStatus('current')
nbtConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 49, 1), ).setIndexNames((0, "INFORMANT-ADV", "nbtConnectionInstance"))
if mibBuilder.loadTexts: nbtConnectionEntry.setStatus('current')
nbtConnectionInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 49, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbtConnectionInstance.setStatus('current')
nbtConnectionBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 49, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbtConnectionBytesReceivedPerSec.setStatus('current')
nbtConnectionBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 49, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbtConnectionBytesSentPerSec.setStatus('current')
nbtConnectionBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 49, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbtConnectionBytesTotalPerSec.setStatus('current')
netBEUITable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50), )
if mibBuilder.loadTexts: netBEUITable.setStatus('current')
netBEUIEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1), ).setIndexNames((0, "INFORMANT-ADV", "netBEUIInstance"))
if mibBuilder.loadTexts: netBEUIEntry.setStatus('current')
netBEUIInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIInstance.setStatus('current')
netBEUIBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIBytesTotalPerSec.setStatus('current')
netBEUIConnectionSessionTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIConnectionSessionTimeouts.setStatus('current')
netBEUIConnectionsCanceled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIConnectionsCanceled.setStatus('current')
netBEUIConnectionsNoRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIConnectionsNoRetries.setStatus('current')
netBEUIConnectionsOpen = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIConnectionsOpen.setStatus('current')
netBEUIConnectionsWithRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIConnectionsWithRetries.setStatus('current')
netBEUIDatagramBytesRcvdPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIDatagramBytesRcvdPerSec.setStatus('current')
netBEUIDatagramBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIDatagramBytesSentPerSec.setStatus('current')
netBEUIDatagramBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIDatagramBytesPerSec.setStatus('current')
netBEUIDatagramsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIDatagramsReceivedPerSec.setStatus('current')
netBEUIDatagramsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIDatagramsSentPerSec.setStatus('current')
netBEUIDatagramsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIDatagramsPerSec.setStatus('current')
netBEUIDisconnectsLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIDisconnectsLocal.setStatus('current')
netBEUIDisconnectsRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIDisconnectsRemote.setStatus('current')
netBEUIExpirationsAck = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIExpirationsAck.setStatus('current')
netBEUIExpirationsResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIExpirationsResponse.setStatus('current')
netBEUIFailuresAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIFailuresAdapter.setStatus('current')
netBEUIFailuresLink = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIFailuresLink.setStatus('current')
netBEUIFailuresNoListen = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIFailuresNoListen.setStatus('current')
netBEUIFailuresNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIFailuresNotFound.setStatus('current')
netBEUIFailuresResourceLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIFailuresResourceLocal.setStatus('current')
netBEUIFailuresResourceRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIFailuresResourceRemote.setStatus('current')
netBEUIFrameBytesReSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIFrameBytesReSentPerSec.setStatus('current')
netBEUIFrameBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIFrameBytesReceivedPerSec.setStatus('current')
netBEUIFrameBytesRejectedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIFrameBytesRejectedPerSec.setStatus('current')
netBEUIFrameBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIFrameBytesSentPerSec.setStatus('current')
netBEUIFrameBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIFrameBytesPerSec.setStatus('current')
netBEUIFramesReSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIFramesReSentPerSec.setStatus('current')
netBEUIFramesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIFramesReceivedPerSec.setStatus('current')
netBEUIFramesRejectedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIFramesRejectedPerSec.setStatus('current')
netBEUIFramesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIFramesSentPerSec.setStatus('current')
netBEUIFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIFramesPerSec.setStatus('current')
netBEUIPacketsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIPacketsReceivedPerSec.setStatus('current')
netBEUIPacketsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIPacketsSentPerSec.setStatus('current')
netBEUIPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIPacketsPerSec.setStatus('current')
netBEUIPiggybackAckQueuedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIPiggybackAckQueuedPerSec.setStatus('current')
netBEUIPiggybackAckTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIPiggybackAckTimeouts.setStatus('current')
netBEUIWindowSendAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIWindowSendAverage.setStatus('current')
netBEUIWindowSendMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 50, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIWindowSendMaximum.setStatus('current')
netBEUIResourceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 51), )
if mibBuilder.loadTexts: netBEUIResourceTable.setStatus('current')
netBEUIResourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 51, 1), ).setIndexNames((0, "INFORMANT-ADV", "netBEUIResourceInstance"))
if mibBuilder.loadTexts: netBEUIResourceEntry.setStatus('current')
netBEUIResourceInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 51, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIResourceInstance.setStatus('current')
netBEUIResourceTimesExhausted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 51, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIResourceTimesExhausted.setStatus('current')
netBEUIResourceUsedAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 51, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIResourceUsedAverage.setStatus('current')
netBEUIResourceUsedMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 51, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBEUIResourceUsedMaximum.setStatus('current')
networkInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52), )
if mibBuilder.loadTexts: networkInterfaceTable.setStatus('current')
networkInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1), ).setIndexNames((0, "INFORMANT-ADV", "netInstance"))
if mibBuilder.loadTexts: networkInterfaceEntry.setStatus('current')
netInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netInstance.setStatus('current')
netBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBytesReceivedPerSec.setStatus('current')
netBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBytesSentPerSec.setStatus('current')
netBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBytesTotalPerSec.setStatus('current')
netCurrentBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netCurrentBandwidth.setStatus('current')
netOutputQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netOutputQueueLength.setStatus('current')
netPacketsOutboundDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsOutboundDiscarded.setStatus('current')
netPacketsOutboundErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsOutboundErrors.setStatus('current')
netPacketsReceivedDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsReceivedDiscarded.setStatus('current')
netPacketsReceivedErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsReceivedErrors.setStatus('current')
netPacketsRcvdNonUnicastPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsRcvdNonUnicastPerSec.setStatus('current')
netPacketsReceivedUnicastPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsReceivedUnicastPerSec.setStatus('current')
netPacketsReceivedUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsReceivedUnknown.setStatus('current')
netPacketsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsReceivedPerSec.setStatus('current')
netPacketsSentNonUnicastPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsSentNonUnicastPerSec.setStatus('current')
netPacketsSentUnicastPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsSentUnicastPerSec.setStatus('current')
netPacketsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsSentPerSec.setStatus('current')
netPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 52, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsPerSec.setStatus('current')
nntpCommandsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53), )
if mibBuilder.loadTexts: nntpCommandsTable.setStatus('current')
nntpCommandsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1), ).setIndexNames((0, "INFORMANT-ADV", "nntpCmdsInstance"))
if mibBuilder.loadTexts: nntpCommandsEntry.setStatus('current')
nntpCmdsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsInstance.setStatus('current')
nntpCmdsArticleCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsArticleCmds.setStatus('current')
nntpCmdsArticleCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsArticleCmdsPerSec.setStatus('current')
nntpCmdsCheckCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsCheckCmds.setStatus('current')
nntpCmdsCheckCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsCheckCmdsPerSec.setStatus('current')
nntpCmdsGroupCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsGroupCmds.setStatus('current')
nntpCmdsGroupCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsGroupCmdsPerSec.setStatus('current')
nntpCmdsHelpCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsHelpCmds.setStatus('current')
nntpCmdsHelpCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsHelpCmdsPerSec.setStatus('current')
nntpCmdsIHaveCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsIHaveCmds.setStatus('current')
nntpCmdsIHaveCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsIHaveCmdsPerSec.setStatus('current')
nntpCmdsLastCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsLastCmds.setStatus('current')
nntpCmdsLastCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsLastCmdsPerSec.setStatus('current')
nntpCmdsListCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsListCmds.setStatus('current')
nntpCmdsListCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsListCmdsPerSec.setStatus('current')
nntpCmdsLogonAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsLogonAttempts.setStatus('current')
nntpCmdsLogonAttemptsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsLogonAttemptsPerSec.setStatus('current')
nntpCmdsLogonFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsLogonFailures.setStatus('current')
nntpCmdsLogonFailuresPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsLogonFailuresPerSec.setStatus('current')
nntpCmdsModeCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsModeCmds.setStatus('current')
nntpCmdsModeCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsModeCmdsPerSec.setStatus('current')
nntpCmdsNewgroupsCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsNewgroupsCmds.setStatus('current')
nntpCmdsNewgroupsCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsNewgroupsCmdsPerSec.setStatus('current')
nntpCmdsNewnewsCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsNewnewsCmds.setStatus('current')
nntpCmdsNewnewsCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsNewnewsCmdsPerSec.setStatus('current')
nntpCmdsNextCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsNextCmds.setStatus('current')
nntpCmdsNextCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsNextCmdsPerSec.setStatus('current')
nntpCmdsPostCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsPostCmds.setStatus('current')
nntpCmdsPostCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsPostCmdsPerSec.setStatus('current')
nntpCmdsQuitCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsQuitCmds.setStatus('current')
nntpCmdsQuitCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsQuitCmdsPerSec.setStatus('current')
nntpCmdsSearchCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsSearchCmds.setStatus('current')
nntpCmdsSearchCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsSearchCmdsPerSec.setStatus('current')
nntpCmdsStatCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsStatCmds.setStatus('current')
nntpCmdsStatCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsStatCmdsPerSec.setStatus('current')
nntpCmdsTakethisCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsTakethisCmds.setStatus('current')
nntpCmdsTakethisCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsTakethisCmdsPerSec.setStatus('current')
nntpCmdsXHdrCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsXHdrCmds.setStatus('current')
nntpCmdsXHdrCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsXHdrCmdsPerSec.setStatus('current')
nntpCmdsXOverCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsXOverCmds.setStatus('current')
nntpCmdsXOverCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsXOverCmdsPerSec.setStatus('current')
nntpCmdsXPatCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsXPatCmds.setStatus('current')
nntpCmdsXPatCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsXPatCmdsPerSec.setStatus('current')
nntpCmdsXReplicCmds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsXReplicCmds.setStatus('current')
nntpCmdsXReplicCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 53, 1, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpCmdsXReplicCmdsPerSec.setStatus('current')
nntpServerTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54), )
if mibBuilder.loadTexts: nntpServerTable.setStatus('current')
nntpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1), ).setIndexNames((0, "INFORMANT-ADV", "nntpSrvrInstance"))
if mibBuilder.loadTexts: nntpServerEntry.setStatus('current')
nntpSrvrInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrInstance.setStatus('current')
nntpSrvrArticleMapEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrArticleMapEntries.setStatus('current')
nntpSrvrArticleMapEntriesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrArticleMapEntriesPerSec.setStatus('current')
nntpSrvrArticlesDeleted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrArticlesDeleted.setStatus('current')
nntpSrvrArticlesDeletedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrArticlesDeletedPerSec.setStatus('current')
nntpSrvrArticlesPosted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrArticlesPosted.setStatus('current')
nntpSrvrArticlesPostedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrArticlesPostedPerSec.setStatus('current')
nntpSrvrArticlesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrArticlesReceived.setStatus('current')
nntpSrvrArticlesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrArticlesReceivedPerSec.setStatus('current')
nntpSrvrArticlesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrArticlesSent.setStatus('current')
nntpSrvrArticlesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrArticlesSentPerSec.setStatus('current')
nntpSrvrArticlesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrArticlesTotal.setStatus('current')
nntpSrvrBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrBytesReceivedPerSec.setStatus('current')
nntpSrvrBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrBytesSentPerSec.setStatus('current')
nntpSrvrBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrBytesTotalPerSec.setStatus('current')
nntpSrvrControlMessagesFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrControlMessagesFailed.setStatus('current')
nntpSrvrControlMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrControlMessagesReceived.setStatus('current')
nntpSrvrCurrentAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrCurrentAnonymousUsers.setStatus('current')
nntpSrvrCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrCurrentConnections.setStatus('current')
nntpSrvrCurrentNonAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrCurrentNonAnonymousUsers.setStatus('current')
nntpSrvrCurrentOutboundConns = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrCurrentOutboundConns.setStatus('current')
nntpSrvrFailedOutboundLogons = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrFailedOutboundLogons.setStatus('current')
nntpSrvrHistoryMapEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrHistoryMapEntries.setStatus('current')
nntpSrvrHistoryMapEntriesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrHistoryMapEntriesPerSec.setStatus('current')
nntpSrvrMaximumAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrMaximumAnonymousUsers.setStatus('current')
nntpSrvrMaximumConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrMaximumConnections.setStatus('current')
nntpSrvrMaximumNonAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrMaximumNonAnonymousUsers.setStatus('current')
nntpSrvrModeratedPostingsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrModeratedPostingsFailed.setStatus('current')
nntpSrvrModeratedPostingsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrModeratedPostingsSent.setStatus('current')
nntpSrvrSessionsFlowControlled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrSessionsFlowControlled.setStatus('current')
nntpSrvrTotalAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrTotalAnonymousUsers.setStatus('current')
nntpSrvrTotalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrTotalConnections.setStatus('current')
nntpSrvrTotalNonAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrTotalNonAnonymousUsers.setStatus('current')
nntpSrvrTotalOutboundConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrTotalOutboundConnections.setStatus('current')
nntpSrvrTotalOutboundConnsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrTotalOutboundConnsFailed.setStatus('current')
nntpSrvrTotalPassiveFeeds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrTotalPassiveFeeds.setStatus('current')
nntpSrvrTotalPullFeeds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrTotalPullFeeds.setStatus('current')
nntpSrvrTotalPushFeeds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrTotalPushFeeds.setStatus('current')
nntpSrvrTotalSSLConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrTotalSSLConnections.setStatus('current')
nntpSrvrXoverEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrXoverEntries.setStatus('current')
nntpSrvrXoverEntriesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 54, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nntpSrvrXoverEntriesPerSec.setStatus('current')
ntds = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55))
if mibBuilder.loadTexts: ntds.setStatus('current')
ntdsABANRPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsABANRPerSec.setStatus('current')
ntdsABBrowsesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsABBrowsesPerSec.setStatus('current')
ntdsABClientSessions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsABClientSessions.setStatus('current')
ntdsABMatchesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsABMatchesPerSec.setStatus('current')
ntdsABPropertyReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsABPropertyReadsPerSec.setStatus('current')
ntdsABProxyLookupsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsABProxyLookupsPerSec.setStatus('current')
ntdsABSearchesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsABSearchesPerSec.setStatus('current')
ntdsATQThreadsLDAP = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsATQThreadsLDAP.setStatus('current')
ntdsATQThreadsOther = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsATQThreadsOther.setStatus('current')
ntdsATQThreadsTotal = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsATQThreadsTotal.setStatus('current')
ntdsDRAHighestUSNCommitHighPart = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAHighestUSNCommitHighPart.setStatus('current')
ntdsDRAHighestUSNCommitLowPart = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAHighestUSNCommitLowPart.setStatus('current')
ntdsDRAHighestUSNIssuedHighPart = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAHighestUSNIssuedHighPart.setStatus('current')
ntdsDRAHighestUSNIssuedLowPart = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAHighestUSNIssuedLowPart.setStatus('current')
ntdsDRAInboundBytesCBSACSBoot = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInboundBytesCBSACSBoot.setStatus('current')
ntdsDRAInboundBytesCBSACPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInboundBytesCBSACPerSec.setStatus('current')
ntdsDRAInboundBytesCBSBCSBoot = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInboundBytesCBSBCSBoot.setStatus('current')
ntdsDRAInboundBytesCBSBCPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInboundBytesCBSBCPerSec.setStatus('current')
ntdsDRAInboundBytesNotCWSSBoot = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInboundBytesNotCWSSBoot.setStatus('current')
ntdsDRAInboundBytesNotCWSPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInboundBytesNotCWSPerSec.setStatus('current')
ntdsDRAInboundBytesTotalBoot = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInboundBytesTotalBoot.setStatus('current')
ntdsDRAInboundBytesTotalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInboundBytesTotalPerSec.setStatus('current')
ntdsDRAInboundFullSyncObjsRemain = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInboundFullSyncObjsRemain.setStatus('current')
ntdsDRAInboundObjUpdsRemainInPkt = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInboundObjUpdsRemainInPkt.setStatus('current')
ntdsDRAInboundObjsAppliedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInboundObjsAppliedPerSec.setStatus('current')
ntdsDRAInboundObjsFilteredPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInboundObjsFilteredPerSec.setStatus('current')
ntdsDRAInboundObjectsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInboundObjectsPerSec.setStatus('current')
ntdsDRAInboundPropAppliedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInboundPropAppliedPerSec.setStatus('current')
ntdsDRAInboundPropFilteredPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInboundPropFilteredPerSec.setStatus('current')
ntdsDRAInboundPropTotalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInboundPropTotalPerSec.setStatus('current')
ntdsDRAInboundValuesDNsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInboundValuesDNsPerSec.setStatus('current')
ntdsDRAInboundValuesTotalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInboundValuesTotalPerSec.setStatus('current')
ntdsDRAOutboundBytesCBSACSBoot = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAOutboundBytesCBSACSBoot.setStatus('current')
ntdsDRAOutboundBytesCBSACPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAOutboundBytesCBSACPerSec.setStatus('current')
ntdsDRAOutboundBytesCBSBCSBoot = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAOutboundBytesCBSBCSBoot.setStatus('current')
ntdsDRAOutboundBytesCBSBCPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAOutboundBytesCBSBCPerSec.setStatus('current')
ntdsDRAOutboundBytesNotCWSSBoot = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAOutboundBytesNotCWSSBoot.setStatus('current')
ntdsDRAOutboundBytesNotCWSPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAOutboundBytesNotCWSPerSec.setStatus('current')
ntdsDRAOutboundBytesTotalBoot = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAOutboundBytesTotalBoot.setStatus('current')
ntdsDRAOutboundBytesTotalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAOutboundBytesTotalPerSec.setStatus('current')
ntdsDRAOutboundObjsFilterPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAOutboundObjsFilterPerSec.setStatus('current')
ntdsDRAOutboundObjectsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAOutboundObjectsPerSec.setStatus('current')
ntdsDRAOutboundPropertiesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAOutboundPropertiesPerSec.setStatus('current')
ntdsDRAOutboundValuesDNsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAOutboundValuesDNsPerSec.setStatus('current')
ntdsDRAOutboundValuesTotalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAOutboundValuesTotalPerSec.setStatus('current')
ntdsDRAPendingReplicationSync = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAPendingReplicationSync.setStatus('current')
ntdsDRASyncFailOnSchemaMismatch = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRASyncFailOnSchemaMismatch.setStatus('current')
ntdsDRASyncRequestsMade = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRASyncRequestsMade.setStatus('current')
ntdsDRASyncRequestsSuccessful = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRASyncRequestsSuccessful.setStatus('current')
ntdsDSPercentReadsOther = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentReadsOther.setStatus('current')
ntdsDSPercentReadsFromDRA = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 51), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentReadsFromDRA.setStatus('current')
ntdsDSPercentReadsFromKCC = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentReadsFromKCC.setStatus('current')
ntdsDSPercentReadsFromLSA = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentReadsFromLSA.setStatus('current')
ntdsDSPercentReadsFromNSPI = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentReadsFromNSPI.setStatus('current')
ntdsDSPercentReadsFromSAM = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentReadsFromSAM.setStatus('current')
ntdsDSPercentReadsFromXDS = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 56), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentReadsFromXDS.setStatus('current')
ntdsDSPercentSearchesOther = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 57), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentSearchesOther.setStatus('current')
ntdsDSPercentSearchesFromDRA = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 58), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentSearchesFromDRA.setStatus('current')
ntdsDSPercentSearchesFromKCC = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 59), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentSearchesFromKCC.setStatus('current')
ntdsDSPercentSearchesFromLDAP = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 60), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentSearchesFromLDAP.setStatus('current')
ntdsDSPercentSearchesFromLSA = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 61), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentSearchesFromLSA.setStatus('current')
ntdsDSPercentSearchesFromNSPI = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 62), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentSearchesFromNSPI.setStatus('current')
ntdsDSPercentSearchesFromSAM = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 63), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentSearchesFromSAM.setStatus('current')
ntdsDSPercentSearchesFromXDS = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 64), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentSearchesFromXDS.setStatus('current')
ntdsDSPercentWritesOther = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 65), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentWritesOther.setStatus('current')
ntdsDSPercentWritesFromDRA = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 66), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentWritesFromDRA.setStatus('current')
ntdsDSPercentWritesFromKCC = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 67), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentWritesFromKCC.setStatus('current')
ntdsDSPercentWritesFromLDAP = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 68), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentWritesFromLDAP.setStatus('current')
ntdsDSPercentWritesFromLSA = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 69), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentWritesFromLSA.setStatus('current')
ntdsDSPercentWritesFromNSPI = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 70), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentWritesFromNSPI.setStatus('current')
ntdsDSPercentWritesFromSAM = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 71), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentWritesFromSAM.setStatus('current')
ntdsDSPercentWritesFromXDS = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 72), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentWritesFromXDS.setStatus('current')
ntdsDSClientBindsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 73), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSClientBindsPerSec.setStatus('current')
ntdsDSClientNameTranslatePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 74), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSClientNameTranslatePerSec.setStatus('current')
ntdsDSDirectoryReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 75), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSDirectoryReadsPerSec.setStatus('current')
ntdsDSDirectorySearchesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 76), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSDirectorySearchesPerSec.setStatus('current')
ntdsDSDirectoryWritesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 77), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSDirectoryWritesPerSec.setStatus('current')
ntdsDSMonitorListSize = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 78), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSMonitorListSize.setStatus('current')
ntdsDSNameCacheHitRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 79), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSNameCacheHitRate.setStatus('current')
ntdsDSNotifyQueueSize = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 80), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSNotifyQueueSize.setStatus('current')
ntdsDSSearchSuboperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 81), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSSearchSuboperationsPerSec.setStatus('current')
ntdsDSSecurityDescPropEvents = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 82), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSSecurityDescPropEvents.setStatus('current')
ntdsDSSecurityDescPropAvgExTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 83), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSSecurityDescPropAvgExTime.setStatus('current')
ntdsDSSecurityDescPropRunQueue = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 84), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSSecurityDescPropRunQueue.setStatus('current')
ntdsDSSecurityDescSubopPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 85), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSSecurityDescSubopPerSec.setStatus('current')
ntdsDSServerBindsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 86), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSServerBindsPerSec.setStatus('current')
ntdsDSServerNameTranslatePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 87), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSServerNameTranslatePerSec.setStatus('current')
ntdsDSThreadsInUse = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 88), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSThreadsInUse.setStatus('current')
ntdsKDCASRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 89), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsKDCASRequests.setStatus('current')
ntdsKDCTGSRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 90), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsKDCTGSRequests.setStatus('current')
ntdsKerberosAuthentications = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 91), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsKerberosAuthentications.setStatus('current')
ntdsLDAPActiveThreads = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 92), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsLDAPActiveThreads.setStatus('current')
ntdsLDAPBindTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 93), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsLDAPBindTime.setStatus('current')
ntdsLDAPClientSessions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 94), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsLDAPClientSessions.setStatus('current')
ntdsLDAPSearchesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 95), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsLDAPSearchesPerSec.setStatus('current')
ntdsLDAPSuccessfulBinds = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 96), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsLDAPSuccessfulBinds.setStatus('current')
ntdsLDAPSuccessfulBindsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 97), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsLDAPSuccessfulBindsPerSec.setStatus('current')
ntdsLDAPUDPOperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 98), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsLDAPUDPOperationsPerSec.setStatus('current')
ntdsLDAPWritesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 99), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsLDAPWritesPerSec.setStatus('current')
ntdsNTLMAuthentications = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 100), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsNTLMAuthentications.setStatus('current')
ntdsSAMAccountGroupMemEvalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 101), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMAccountGroupMemEvalPerSec.setStatus('current')
ntdsSAMDisplayInfoQueriesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 102), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMDisplayInfoQueriesPerSec.setStatus('current')
ntdsSAMEnumerationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 103), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMEnumerationsPerSec.setStatus('current')
ntdsSAMGCEvaluationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 104), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMGCEvaluationsPerSec.setStatus('current')
ntdsSAMMachineCreateAtpsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 105), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMMachineCreateAtpsPerSec.setStatus('current')
ntdsSAMMembershipChangesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 106), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMMembershipChangesPerSec.setStatus('current')
ntdsSAMNonTransMemEvalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 107), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMNonTransMemEvalPerSec.setStatus('current')
ntdsSAMPasswordChangesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 108), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMPasswordChangesPerSec.setStatus('current')
ntdsSAMResourceGrpMemEvalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 109), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMResourceGrpMemEvalPerSec.setStatus('current')
ntdsSAMSuccessMachineCreatPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 110), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMSuccessMachineCreatPerSec.setStatus('current')
ntdsSAMSuccessUserCreatePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 111), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMSuccessUserCreatePerSec.setStatus('current')
ntdsSAMTransitiveMembEvalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 112), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMTransitiveMembEvalPerSec.setStatus('current')
ntdsSAMUniversalGrpMemEvalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 113), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMUniversalGrpMemEvalPerSec.setStatus('current')
ntdsSAMUserCreateAttemptsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 114), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMUserCreateAttemptsPerSec.setStatus('current')
ntdsXDSClientSessions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 115), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsXDSClientSessions.setStatus('current')
ntdsDRAInLnkValUpdsRemainInPckt = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 116), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInLnkValUpdsRemainInPckt.setStatus('current')
ntdsDRAInTotalUpdsRemainInPacket = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 117), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAInTotalUpdsRemainInPacket.setStatus('current')
ntdsDRAPendReplicationOps = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 118), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAPendReplicationOps.setStatus('current')
ntdsDRAThreadsGettingNCChanges = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 119), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAThreadsGettingNCChanges.setStatus('current')
ntdsDRAThdsGetNCChngsHoldSmphr = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 120), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDRAThdsGetNCChngsHoldSmphr.setStatus('current')
ntdsDSPercentReadsFromNTDSAPI = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 121), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentReadsFromNTDSAPI.setStatus('current')
ntdsDSPercentSearchesFromNTDSAPI = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 122), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentSearchesFromNTDSAPI.setStatus('current')
ntdsDSPercentWritesFromNTDSAPI = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 123), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDSPercentWritesFromNTDSAPI.setStatus('current')
ntdsLDAPClosedConnectionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 124), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsLDAPClosedConnectionsPerSec.setStatus('current')
ntdsLDAPNewConnectionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 125), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsLDAPNewConnectionsPerSec.setStatus('current')
ntdsLDAPNewSSLConnectionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 126), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsLDAPNewSSLConnectionsPerSec.setStatus('current')
ntdsSAMAccountGroupEvalLatency = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 127), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMAccountGroupEvalLatency.setStatus('current')
ntdsSAMResourceGroupEvalLatency = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 128), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMResourceGroupEvalLatency.setStatus('current')
ntdsATQEstimatedQueueDelay = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 129), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsATQEstimatedQueueDelay.setStatus('current')
ntdsATQOutstandingQueuedRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 130), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsATQOutstandingQueuedRequests.setStatus('current')
ntdsATQRequestLatency = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 131), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsATQRequestLatency.setStatus('current')
ntdsBaseSearchesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 132), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsBaseSearchesPerSec.setStatus('current')
ntdsDatabaseAddsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 133), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDatabaseAddsPerSec.setStatus('current')
ntdsDatabaseDeletesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 134), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDatabaseDeletesPerSec.setStatus('current')
ntdsDatabaseModifysPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 135), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDatabaseModifysPerSec.setStatus('current')
ntdsDigestBindsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 136), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsDigestBindsPerSec.setStatus('current')
ntdsExternalBindsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 137), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsExternalBindsPerSec.setStatus('current')
ntdsFastBindsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 138), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsFastBindsPerSec.setStatus('current')
ntdsLinkValuesCleanedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 139), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsLinkValuesCleanedPerSec.setStatus('current')
ntdsNTLMBindsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 140), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsNTLMBindsPerSec.setStatus('current')
ntdsNegotiatedBindsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 141), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsNegotiatedBindsPerSec.setStatus('current')
ntdsOnelevelSearchesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 142), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsOnelevelSearchesPerSec.setStatus('current')
ntdsPhantomsCleanedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 143), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsPhantomsCleanedPerSec.setStatus('current')
ntdsPhantomsVisitedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 144), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsPhantomsVisitedPerSec.setStatus('current')
ntdsSAMDomLocGrpMembEvalsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 145), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMDomLocGrpMembEvalsPerSec.setStatus('current')
ntdsSAMGlbGrpMembpEvalsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 146), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMGlbGrpMembpEvalsPerSec.setStatus('current')
ntdsSAMSuccessCompCreationPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 147), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSAMSuccessCompCreationPerSec.setStatus('current')
ntdsSimpleBindsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 148), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSimpleBindsPerSec.setStatus('current')
ntdsSubtreeSearchesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 149), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsSubtreeSearchesPerSec.setStatus('current')
ntdsTombstonesGarbageCollPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 150), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsTombstonesGarbageCollPerSec.setStatus('current')
ntdsTombstonesVisitedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 55, 151), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntdsTombstonesVisitedPerSec.setStatus('current')
nwLinkIPXTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56), )
if mibBuilder.loadTexts: nwLinkIPXTable.setStatus('current')
nwLinkIPXEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1), ).setIndexNames((0, "INFORMANT-ADV", "ipxInstance"))
if mibBuilder.loadTexts: nwLinkIPXEntry.setStatus('current')
ipxInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxInstance.setStatus('current')
ipxBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxBytesTotalPerSec.setStatus('current')
ipxConnectionSessionTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxConnectionSessionTimeouts.setStatus('current')
ipxConnectionsCanceled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxConnectionsCanceled.setStatus('current')
ipxConnectionsNoRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxConnectionsNoRetries.setStatus('current')
ipxConnectionsOpen = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxConnectionsOpen.setStatus('current')
ipxConnectionsWithRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxConnectionsWithRetries.setStatus('current')
ipxDatagramBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDatagramBytesReceivedPerSec.setStatus('current')
ipxDatagramBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDatagramBytesSentPerSec.setStatus('current')
ipxDatagramBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDatagramBytesPerSec.setStatus('current')
ipxDatagramsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDatagramsReceivedPerSec.setStatus('current')
ipxDatagramsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDatagramsSentPerSec.setStatus('current')
ipxDatagramsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDatagramsPerSec.setStatus('current')
ipxDisconnectsLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDisconnectsLocal.setStatus('current')
ipxDisconnectsRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDisconnectsRemote.setStatus('current')
ipxExpirationsAck = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxExpirationsAck.setStatus('current')
ipxExpirationsResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxExpirationsResponse.setStatus('current')
ipxFailuresAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxFailuresAdapter.setStatus('current')
ipxFailuresLink = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxFailuresLink.setStatus('current')
ipxFailuresNoListen = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxFailuresNoListen.setStatus('current')
ipxFailuresNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxFailuresNotFound.setStatus('current')
ipxFailuresResourceLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxFailuresResourceLocal.setStatus('current')
ipxFailuresResourceRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxFailuresResourceRemote.setStatus('current')
ipxFrameBytesReSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxFrameBytesReSentPerSec.setStatus('current')
ipxFrameBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxFrameBytesReceivedPerSec.setStatus('current')
ipxFrameBytesRejectedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxFrameBytesRejectedPerSec.setStatus('current')
ipxFrameBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxFrameBytesSentPerSec.setStatus('current')
ipxFrameBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxFrameBytesPerSec.setStatus('current')
ipxFramesReSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxFramesReSentPerSec.setStatus('current')
ipxFramesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxFramesReceivedPerSec.setStatus('current')
ipxFramesRejectedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxFramesRejectedPerSec.setStatus('current')
ipxFramesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxFramesSentPerSec.setStatus('current')
ipxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxFramesPerSec.setStatus('current')
ipxPacketsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxPacketsReceivedPerSec.setStatus('current')
ipxPacketsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxPacketsSentPerSec.setStatus('current')
ipxPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxPacketsPerSec.setStatus('current')
ipxPiggybackAckQueuedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxPiggybackAckQueuedPerSec.setStatus('current')
ipxPiggybackAckTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxPiggybackAckTimeouts.setStatus('current')
ipxWindowSendAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxWindowSendAverage.setStatus('current')
ipxWindowSendMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 56, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxWindowSendMaximum.setStatus('current')
nwLinkNetBIOSTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57), )
if mibBuilder.loadTexts: nwLinkNetBIOSTable.setStatus('current')
nwLinkNetBIOSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1), ).setIndexNames((0, "INFORMANT-ADV", "netBIOSInstance"))
if mibBuilder.loadTexts: nwLinkNetBIOSEntry.setStatus('current')
netBIOSInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSInstance.setStatus('current')
netBIOSBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSBytesTotalPerSec.setStatus('current')
netBIOSConnectionSessionTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSConnectionSessionTimeouts.setStatus('current')
netBIOSConnectionsCanceled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSConnectionsCanceled.setStatus('current')
netBIOSConnectionsNoRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSConnectionsNoRetries.setStatus('current')
netBIOSConnectionsOpen = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSConnectionsOpen.setStatus('current')
netBIOSConnectionsWithRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSConnectionsWithRetries.setStatus('current')
netBIOSDatagramBytesRcvdPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSDatagramBytesRcvdPerSec.setStatus('current')
netBIOSDatagramBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSDatagramBytesSentPerSec.setStatus('current')
netBIOSDatagramBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSDatagramBytesPerSec.setStatus('current')
netBIOSDatagramsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSDatagramsReceivedPerSec.setStatus('current')
netBIOSDatagramsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSDatagramsSentPerSec.setStatus('current')
netBIOSDatagramsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSDatagramsPerSec.setStatus('current')
netBIOSDisconnectsLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSDisconnectsLocal.setStatus('current')
netBIOSDisconnectsRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSDisconnectsRemote.setStatus('current')
netBIOSExpirationsAck = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSExpirationsAck.setStatus('current')
netBIOSExpirationsResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSExpirationsResponse.setStatus('current')
netBIOSFailuresAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSFailuresAdapter.setStatus('current')
netBIOSFailuresLink = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSFailuresLink.setStatus('current')
netBIOSFailuresNoListen = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSFailuresNoListen.setStatus('current')
netBIOSFailuresNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSFailuresNotFound.setStatus('current')
netBIOSFailuresResourceLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSFailuresResourceLocal.setStatus('current')
netBIOSFailuresResourceRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSFailuresResourceRemote.setStatus('current')
netBIOSFrameBytesReSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSFrameBytesReSentPerSec.setStatus('current')
netBIOSFrameBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSFrameBytesReceivedPerSec.setStatus('current')
netBIOSFrameBytesRejectedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSFrameBytesRejectedPerSec.setStatus('current')
netBIOSFrameBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSFrameBytesSentPerSec.setStatus('current')
netBIOSFrameBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSFrameBytesPerSec.setStatus('current')
netBIOSFramesReSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSFramesReSentPerSec.setStatus('current')
netBIOSFramesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSFramesReceivedPerSec.setStatus('current')
netBIOSFramesRejectedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSFramesRejectedPerSec.setStatus('current')
netBIOSFramesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSFramesSentPerSec.setStatus('current')
netBIOSFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSFramesPerSec.setStatus('current')
netBIOSPacketsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSPacketsReceivedPerSec.setStatus('current')
netBIOSPacketsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSPacketsSentPerSec.setStatus('current')
netBIOSPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSPacketsPerSec.setStatus('current')
netBIOSPiggybackAckQueuedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSPiggybackAckQueuedPerSec.setStatus('current')
netBIOSPiggybackAckTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSPiggybackAckTimeouts.setStatus('current')
netBIOSWindowSendAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSWindowSendAverage.setStatus('current')
netBIOSWindowSendMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 57, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBIOSWindowSendMaximum.setStatus('current')
nwLinkSPXTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58), )
if mibBuilder.loadTexts: nwLinkSPXTable.setStatus('current')
nwLinkSPXEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1), ).setIndexNames((0, "INFORMANT-ADV", "spxInstance"))
if mibBuilder.loadTexts: nwLinkSPXEntry.setStatus('current')
spxInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxInstance.setStatus('current')
spxBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxBytesTotalPerSec.setStatus('current')
spxConnectionSessionTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxConnectionSessionTimeouts.setStatus('current')
spxConnectionsCanceled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxConnectionsCanceled.setStatus('current')
spxConnectionsNoRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxConnectionsNoRetries.setStatus('current')
spxConnectionsOpen = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxConnectionsOpen.setStatus('current')
spxConnectionsWithRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxConnectionsWithRetries.setStatus('current')
spxDatagramBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxDatagramBytesReceivedPerSec.setStatus('current')
spxDatagramBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxDatagramBytesSentPerSec.setStatus('current')
spxDatagramBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxDatagramBytesPerSec.setStatus('current')
spxDatagramsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxDatagramsReceivedPerSec.setStatus('current')
spxDatagramsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxDatagramsSentPerSec.setStatus('current')
spxDatagramsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxDatagramsPerSec.setStatus('current')
spxDisconnectsLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxDisconnectsLocal.setStatus('current')
spxDisconnectsRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxDisconnectsRemote.setStatus('current')
spxExpirationsAck = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxExpirationsAck.setStatus('current')
spxExpirationsResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxExpirationsResponse.setStatus('current')
spxFailuresAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxFailuresAdapter.setStatus('current')
spxFailuresLink = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxFailuresLink.setStatus('current')
spxFailuresNoListen = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxFailuresNoListen.setStatus('current')
spxFailuresNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxFailuresNotFound.setStatus('current')
spxFailuresResourceLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxFailuresResourceLocal.setStatus('current')
spxFailuresResourceRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxFailuresResourceRemote.setStatus('current')
spxFrameBytesReSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxFrameBytesReSentPerSec.setStatus('current')
spxFrameBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxFrameBytesReceivedPerSec.setStatus('current')
spxFrameBytesRejectedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxFrameBytesRejectedPerSec.setStatus('current')
spxFrameBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxFrameBytesSentPerSec.setStatus('current')
spxFrameBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxFrameBytesPerSec.setStatus('current')
spxFramesReSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxFramesReSentPerSec.setStatus('current')
spxFramesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxFramesReceivedPerSec.setStatus('current')
spxFramesRejectedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxFramesRejectedPerSec.setStatus('current')
spxFramesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxFramesSentPerSec.setStatus('current')
spxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxFramesPerSec.setStatus('current')
spxPacketsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxPacketsReceivedPerSec.setStatus('current')
spxPacketsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxPacketsSentPerSec.setStatus('current')
spxPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxPacketsPerSec.setStatus('current')
spxPiggybackAckQueuedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxPiggybackAckQueuedPerSec.setStatus('current')
spxPiggybackAckTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxPiggybackAckTimeouts.setStatus('current')
spxWindowSendAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxWindowSendAverage.setStatus('current')
spxWindowSendMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 58, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spxWindowSendMaximum.setStatus('current')
objects = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 59))
if mibBuilder.loadTexts: objects.setStatus('current')
objectsEvents = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 59, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: objectsEvents.setStatus('current')
objectsMutexes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 59, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: objectsMutexes.setStatus('current')
objectsProcesses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 59, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: objectsProcesses.setStatus('current')
objectsSections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 59, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: objectsSections.setStatus('current')
objectsSemaphores = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 59, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: objectsSemaphores.setStatus('current')
objectsThreads = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 59, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: objectsThreads.setStatus('current')
pagingFileTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 60), )
if mibBuilder.loadTexts: pagingFileTable.setStatus('current')
pagingFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 60, 1), ).setIndexNames((0, "INFORMANT-ADV", "pagingFileInstance"))
if mibBuilder.loadTexts: pagingFileEntry.setStatus('current')
pagingFileInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 60, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pagingFileInstance.setStatus('current')
pagingFilePercentUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 60, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pagingFilePercentUsage.setStatus('current')
pagingFilePercentUsagePeak = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 60, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pagingFilePercentUsagePeak.setStatus('current')
physicalDiskTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61), )
if mibBuilder.loadTexts: physicalDiskTable.setStatus('current')
physicalDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1), ).setIndexNames((0, "INFORMANT-ADV", "pDiskInstance"))
if mibBuilder.loadTexts: physicalDiskEntry.setStatus('current')
pDiskInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskInstance.setStatus('current')
pDiskPercentDiskReadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskPercentDiskReadTime.setStatus('current')
pDiskPercentDiskTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskPercentDiskTime.setStatus('current')
pDiskPercentDiskWriteTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskPercentDiskWriteTime.setStatus('current')
pDiskPercentIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskPercentIdleTime.setStatus('current')
pDiskAvgDiskBytesPerRead = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskAvgDiskBytesPerRead.setStatus('current')
pDiskAvgDiskBytesPerTransfer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskAvgDiskBytesPerTransfer.setStatus('current')
pDiskAvgDiskBytesPerWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskAvgDiskBytesPerWrite.setStatus('current')
pDiskAvgDiskQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskAvgDiskQueueLength.setStatus('current')
pDiskAvgDiskReadQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskAvgDiskReadQueueLength.setStatus('current')
pDiskAvgDiskWriteQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskAvgDiskWriteQueueLength.setStatus('current')
pDiskAvgDiskSecPerRead = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskAvgDiskSecPerRead.setStatus('current')
pDiskAvgDiskSecPerTransfer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskAvgDiskSecPerTransfer.setStatus('current')
pDiskAvgDiskSecPerWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskAvgDiskSecPerWrite.setStatus('current')
pDiskCurrentDiskQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskCurrentDiskQueueLength.setStatus('current')
pDiskDiskBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskDiskBytesPerSec.setStatus('current')
pDiskDiskReadBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskDiskReadBytesPerSec.setStatus('current')
pDiskDiskReadsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskDiskReadsPerSec.setStatus('current')
pDiskDiskTransfersPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskDiskTransfersPerSec.setStatus('current')
pDiskDiskWriteBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskDiskWriteBytesPerSec.setStatus('current')
pDiskDiskWritesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskDiskWritesPerSec.setStatus('current')
pDiskSplitIOPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 61, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pDiskSplitIOPerSec.setStatus('current')
pop3Service = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 62))
pop3SvcBytesReceivePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pop3SvcBytesReceivePerSec.setStatus('current')
pop3SvcBytesTransmittedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pop3SvcBytesTransmittedPerSec.setStatus('current')
pop3SvcConnectionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pop3SvcConnectionsPerSec.setStatus('current')
pop3SvcFreeThreads = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pop3SvcFreeThreads.setStatus('current')
pop3SvcMailboxesInAuthState = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pop3SvcMailboxesInAuthState.setStatus('current')
pop3SvcMailboxesInTranState = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pop3SvcMailboxesInTranState.setStatus('current')
pop3SvcMessagesDeliveredPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pop3SvcMessagesDeliveredPerSec.setStatus('current')
pop3SvcSocketsInUse = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pop3SvcSocketsInUse.setStatus('current')
pop3SvcTotalConnections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pop3SvcTotalConnections.setStatus('current')
pop3SvcTotalFailedLogons = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pop3SvcTotalFailedLogons.setStatus('current')
pop3SvcTotalBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pop3SvcTotalBytesReceived.setStatus('current')
pop3SvcTotalBytesTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pop3SvcTotalBytesTransmitted.setStatus('current')
pop3SvcTotalMessagesDelivered = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 62, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pop3SvcTotalMessagesDelivered.setStatus('current')
printQueueTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 63), )
if mibBuilder.loadTexts: printQueueTable.setStatus('current')
printQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1), ).setIndexNames((0, "INFORMANT-ADV", "printQueueInstance"))
if mibBuilder.loadTexts: printQueueEntry.setStatus('current')
printQueueInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: printQueueInstance.setStatus('current')
printQueueAddNetworkPrinterCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: printQueueAddNetworkPrinterCalls.setStatus('current')
printQueueBytesPrintedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: printQueueBytesPrintedPerSec.setStatus('current')
printQueueEnumNetworkPrinterCall = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: printQueueEnumNetworkPrinterCall.setStatus('current')
printQueueJobErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: printQueueJobErrors.setStatus('current')
printQueueJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: printQueueJobs.setStatus('current')
printQueueJobsSpooling = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: printQueueJobsSpooling.setStatus('current')
printQueueMaxJobsSpooling = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: printQueueMaxJobsSpooling.setStatus('current')
printQueueMaxReferences = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: printQueueMaxReferences.setStatus('current')
printQueueNotReadyErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: printQueueNotReadyErrors.setStatus('current')
printQueueOutOfPaperErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: printQueueOutOfPaperErrors.setStatus('current')
printQueueReferences = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: printQueueReferences.setStatus('current')
printQueueTotalJobsPrinted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: printQueueTotalJobsPrinted.setStatus('current')
printQueueTotalPagesPrinted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 63, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: printQueueTotalPagesPrinted.setStatus('current')
processTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64), )
if mibBuilder.loadTexts: processTable.setStatus('current')
processEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1), ).setIndexNames((0, "INFORMANT-ADV", "processInstance"))
if mibBuilder.loadTexts: processEntry.setStatus('current')
processInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processInstance.setStatus('current')
processPercentPrivilegedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPercentPrivilegedTime.setStatus('current')
processPercentProcessorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPercentProcessorTime.setStatus('current')
processPercentUserTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPercentUserTime.setStatus('current')
processCreatingProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processCreatingProcessID.setStatus('current')
processElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processElapsedTime.setStatus('current')
processHandleCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processHandleCount.setStatus('current')
processIDProcess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processIDProcess.setStatus('current')
processIODataBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processIODataBytesPerSec.setStatus('current')
processIODataOperationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processIODataOperationsPerSec.setStatus('current')
processIOOtherBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processIOOtherBytesPerSec.setStatus('current')
processIOOtherOperationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processIOOtherOperationsPerSec.setStatus('current')
processIOReadBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processIOReadBytesPerSec.setStatus('current')
processIOReadOperationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processIOReadOperationsPerSec.setStatus('current')
processIOWriteBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processIOWriteBytesPerSec.setStatus('current')
processIOWriteOperationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processIOWriteOperationsPerSec.setStatus('current')
processPageFaultsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPageFaultsPerSec.setStatus('current')
processPageFileBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPageFileBytes.setStatus('current')
processPageFileBytesPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPageFileBytesPeak.setStatus('current')
processPoolNonpagedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPoolNonpagedBytes.setStatus('current')
processPoolPagedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPoolPagedBytes.setStatus('current')
processPriorityBase = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPriorityBase.setStatus('current')
processPrivateBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPrivateBytes.setStatus('current')
processThreadCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processThreadCount.setStatus('current')
processVirtualBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processVirtualBytes.setStatus('current')
processVirtualBytesPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processVirtualBytesPeak.setStatus('current')
processWorkingSet = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processWorkingSet.setStatus('current')
processWorkingSetPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processWorkingSetPeak.setStatus('current')
processPageFileKBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPageFileKBytes.setStatus('current')
processPageFileKBytesPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPageFileKBytesPeak.setStatus('current')
processPoolNonpagedKBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPoolNonpagedKBytes.setStatus('current')
processPoolPagedKBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPoolPagedKBytes.setStatus('current')
processPrivateKBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPrivateKBytes.setStatus('current')
processVirtualKBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processVirtualKBytes.setStatus('current')
processVirtualKBytesPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processVirtualKBytesPeak.setStatus('current')
processWorkingSetKBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processWorkingSetKBytes.setStatus('current')
processWorkingSetKBytesPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processWorkingSetKBytesPeak.setStatus('current')
processPageFileMBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPageFileMBytes.setStatus('current')
processPageFileMBytesPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPageFileMBytesPeak.setStatus('current')
processPoolNonpagedMBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPoolNonpagedMBytes.setStatus('current')
processPoolPagedMBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPoolPagedMBytes.setStatus('current')
processPrivateMBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPrivateMBytes.setStatus('current')
processVirtualMBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processVirtualMBytes.setStatus('current')
processVirtualMBytesPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processVirtualMBytesPeak.setStatus('current')
processWorkingSetMBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processWorkingSetMBytes.setStatus('current')
processWorkingSetMBytesPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processWorkingSetMBytesPeak.setStatus('current')
processWorkingSetPrivate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processWorkingSetPrivate.setStatus('current')
processWorkingSetKPrivate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processWorkingSetKPrivate.setStatus('current')
processWorkingSetMPrivate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 64, 1, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processWorkingSetMPrivate.setStatus('current')
processorTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 65), )
if mibBuilder.loadTexts: processorTable.setStatus('current')
processorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1), ).setIndexNames((0, "INFORMANT-ADV", "cpuInstance"))
if mibBuilder.loadTexts: processorEntry.setStatus('current')
cpuInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuInstance.setStatus('current')
cpuPercentC1Time = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPercentC1Time.setStatus('current')
cpuPercentC2Time = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPercentC2Time.setStatus('current')
cpuPercentC3Time = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPercentC3Time.setStatus('current')
cpuPercentDPCTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPercentDPCTime.setStatus('current')
cpuPercentIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPercentIdleTime.setStatus('current')
cpuPercentInterruptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPercentInterruptTime.setStatus('current')
cpuPercentPrivilegedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPercentPrivilegedTime.setStatus('current')
cpuPercentProcessorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPercentProcessorTime.setStatus('current')
cpuPercentUserTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPercentUserTime.setStatus('current')
cpuC1TransitionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuC1TransitionsPerSec.setStatus('current')
cpuC2TransitionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuC2TransitionsPerSec.setStatus('current')
cpuC3TransitionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuC3TransitionsPerSec.setStatus('current')
cpuDPCRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuDPCRate.setStatus('current')
cpuDPCsQueuedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuDPCsQueuedPerSec.setStatus('current')
cpuInterruptsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 65, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuInterruptsPerSec.setStatus('current')
pSchedFlowTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66), )
if mibBuilder.loadTexts: pSchedFlowTable.setStatus('current')
pSchedFlowEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1), ).setIndexNames((0, "INFORMANT-ADV", "pSchedFlowInstance"))
if mibBuilder.loadTexts: pSchedFlowEntry.setStatus('current')
pSchedFlowInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowInstance.setStatus('current')
pSchedFlowAveragePktsInNetcard = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowAveragePktsInNetcard.setStatus('current')
pSchedFlowAveragePktsInSequencer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowAveragePktsInSequencer.setStatus('current')
pSchedFlowAveragePktsInShaper = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowAveragePktsInShaper.setStatus('current')
pSchedFlowBytesScheduled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowBytesScheduled.setStatus('current')
pSchedFlowBytesScheduledPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowBytesScheduledPerSec.setStatus('current')
pSchedFlowBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowBytesTransmitted.setStatus('current')
pSchedFlowBytesTransmittedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowBytesTransmittedPerSec.setStatus('current')
pSchedFlowMaxPktsInSequencer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowMaxPktsInSequencer.setStatus('current')
pSchedFlowMaxPktsInShaper = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowMaxPktsInShaper.setStatus('current')
pSchedFlowMaximumPktsInNetcard = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowMaximumPktsInNetcard.setStatus('current')
pSchedFlowNonconfPktsSched = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowNonconfPktsSched.setStatus('current')
pSchedFlowNonconfPktsSchedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowNonconfPktsSchedPerSec.setStatus('current')
pSchedFlowNonconfPktsXmitd = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowNonconfPktsXmitd.setStatus('current')
pSchedFlowNonconfPktsXmitdPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowNonconfPktsXmitdPerSec.setStatus('current')
pSchedFlowPktsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowPktsDropped.setStatus('current')
pSchedFlowPktsDroppedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowPktsDroppedPerSec.setStatus('current')
pSchedFlowPktsScheduled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowPktsScheduled.setStatus('current')
pSchedFlowPktsScheduledPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowPktsScheduledPerSec.setStatus('current')
pSchedFlowPktsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowPktsTransmitted.setStatus('current')
pSchedFlowPktsTransmittedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 66, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedFlowPktsTransmittedPerSec.setStatus('current')
pSchedPipeTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67), )
if mibBuilder.loadTexts: pSchedPipeTable.setStatus('current')
pSchedPipeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1), ).setIndexNames((0, "INFORMANT-ADV", "pSchedPipeInstance"))
if mibBuilder.loadTexts: pSchedPipeEntry.setStatus('current')
pSchedPipeInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedPipeInstance.setStatus('current')
pSchedPipeAvgPacketsInNetcard = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedPipeAvgPacketsInNetcard.setStatus('current')
pSchedPipeAvgPacketsInSequencer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedPipeAvgPacketsInSequencer.setStatus('current')
pSchedPipeAvgPacketsInShaper = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedPipeAvgPacketsInShaper.setStatus('current')
pSchedPipeFlowModsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedPipeFlowModsRejected.setStatus('current')
pSchedPipeFlowsClosed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedPipeFlowsClosed.setStatus('current')
pSchedPipeFlowsModified = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedPipeFlowsModified.setStatus('current')
pSchedPipeFlowsOpened = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedPipeFlowsOpened.setStatus('current')
pSchedPipeFlowsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedPipeFlowsRejected.setStatus('current')
pSchedPipeMaxPacketsInNetcard = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedPipeMaxPacketsInNetcard.setStatus('current')
pSchedPipeMaxPacketsInSequencer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedPipeMaxPacketsInSequencer.setStatus('current')
pSchedPipeMaxPacketsInShaper = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedPipeMaxPacketsInShaper.setStatus('current')
pSchedPipeMaxSimultaneousFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedPipeMaxSimultaneousFlows.setStatus('current')
pSchedPipeBadPacketsSched = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedPipeBadPacketsSched.setStatus('current')
pSchedPipeBadPacketsSchedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedPipeBadPacketsSchedPerSec.setStatus('current')
pSchedPipeBadPacketsXmited = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedPipeBadPacketsXmited.setStatus('current')
pSchedPipeBadPacketsXmitedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedPipeBadPacketsXmitedPerSec.setStatus('current')
pSchedPipeOutOfPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 67, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pSchedPipeOutOfPackets.setStatus('current')
rasTotal = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68))
if mibBuilder.loadTexts: rasTotal.setStatus('current')
rasTotalAlignmentErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasTotalAlignmentErrors.setStatus('current')
rasTotalBufferOverrunErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasTotalBufferOverrunErrors.setStatus('current')
rasTotalBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasTotalBytesReceived.setStatus('current')
rasTotalBytesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasTotalBytesReceivedPerSec.setStatus('current')
rasTotalBytesTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasTotalBytesTransmitted.setStatus('current')
rasTotalBytesTransmittedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasTotalBytesTransmittedPerSec.setStatus('current')
rasTotalCRCErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasTotalCRCErrors.setStatus('current')
rasTotalFramesReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasTotalFramesReceived.setStatus('current')
rasTotalFramesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasTotalFramesReceivedPerSec.setStatus('current')
rasTotalFramesTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasTotalFramesTransmitted.setStatus('current')
rasTotalFramesTransmittedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasTotalFramesTransmittedPerSec.setStatus('current')
rasTotalPercentCompressionIn = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasTotalPercentCompressionIn.setStatus('current')
rasTotalPercentCompressionOut = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasTotalPercentCompressionOut.setStatus('current')
rasTotalSerialOverrunErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasTotalSerialOverrunErrors.setStatus('current')
rasTotalTimeoutErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasTotalTimeoutErrors.setStatus('current')
rasTotalTotalConnections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasTotalTotalConnections.setStatus('current')
rasTotalTotalErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasTotalTotalErrors.setStatus('current')
rasTotalTotalErrorsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 68, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasTotalTotalErrorsPerSec.setStatus('current')
rasPortTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69), )
if mibBuilder.loadTexts: rasPortTable.setStatus('current')
rasPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1), ).setIndexNames((0, "INFORMANT-ADV", "rasPortInstance"))
if mibBuilder.loadTexts: rasPortEntry.setStatus('current')
rasPortInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPortInstance.setStatus('current')
rasPortAlignmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPortAlignmentErrors.setStatus('current')
rasPortBufferOverrunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPortBufferOverrunErrors.setStatus('current')
rasPortBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPortBytesReceived.setStatus('current')
rasPortBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPortBytesReceivedPerSec.setStatus('current')
rasPortBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPortBytesTransmitted.setStatus('current')
rasPortBytesTransmittedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPortBytesTransmittedPerSec.setStatus('current')
rasPortCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPortCRCErrors.setStatus('current')
rasPortFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPortFramesReceived.setStatus('current')
rasPortFramesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPortFramesReceivedPerSec.setStatus('current')
rasPortFramesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPortFramesTransmitted.setStatus('current')
rasPortFramesTransmittedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPortFramesTransmittedPerSec.setStatus('current')
rasPortPercentCompressionIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPortPercentCompressionIn.setStatus('current')
rasPortPercentCompressionOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPortPercentCompressionOut.setStatus('current')
rasPortSerialOverrunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPortSerialOverrunErrors.setStatus('current')
rasPortTimeoutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPortTimeoutErrors.setStatus('current')
rasPortTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPortTotalErrors.setStatus('current')
rasPortTotalErrorsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 69, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPortTotalErrorsPerSec.setStatus('current')
redirector = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70))
if mibBuilder.loadTexts: redirector.setStatus('current')
redirBytesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirBytesReceivedPerSec.setStatus('current')
redirBytesTotalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirBytesTotalPerSec.setStatus('current')
redirBytesTransmittedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirBytesTransmittedPerSec.setStatus('current')
redirConnectsCore = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirConnectsCore.setStatus('current')
redirConnectsLanManager20 = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirConnectsLanManager20.setStatus('current')
redirConnectsLanManager21 = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirConnectsLanManager21.setStatus('current')
redirConnectsWindowsNT = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirConnectsWindowsNT.setStatus('current')
redirCurrentCommands = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirCurrentCommands.setStatus('current')
redirFileDataOperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirFileDataOperationsPerSec.setStatus('current')
redirFileReadOperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirFileReadOperationsPerSec.setStatus('current')
redirFileWriteOperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirFileWriteOperationsPerSec.setStatus('current')
redirNetworkErrorsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirNetworkErrorsPerSec.setStatus('current')
redirPacketsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirPacketsReceivedPerSec.setStatus('current')
redirPacketsTransmittedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirPacketsTransmittedPerSec.setStatus('current')
redirPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirPacketsPerSec.setStatus('current')
redirReadBytesCachePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirReadBytesCachePerSec.setStatus('current')
redirReadBytesNetworkPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirReadBytesNetworkPerSec.setStatus('current')
redirReadBytesNonPagingPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirReadBytesNonPagingPerSec.setStatus('current')
redirReadBytesPagingPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirReadBytesPagingPerSec.setStatus('current')
redirReadOperationsRandomPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirReadOperationsRandomPerSec.setStatus('current')
redirReadPacketsSmallPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirReadPacketsSmallPerSec.setStatus('current')
redirReadPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirReadPacketsPerSec.setStatus('current')
redirReadsDeniedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirReadsDeniedPerSec.setStatus('current')
redirReadsLargePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirReadsLargePerSec.setStatus('current')
redirServerDisconnects = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirServerDisconnects.setStatus('current')
redirServerReconnects = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirServerReconnects.setStatus('current')
redirServerSessions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirServerSessions.setStatus('current')
redirServerSessionsHung = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirServerSessionsHung.setStatus('current')
redirWriteBytesCachePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirWriteBytesCachePerSec.setStatus('current')
redirWriteBytesNetworkPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirWriteBytesNetworkPerSec.setStatus('current')
redirWriteBytesNonPagingPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirWriteBytesNonPagingPerSec.setStatus('current')
redirWriteBytesPagingPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirWriteBytesPagingPerSec.setStatus('current')
redirWriteOperationsRandomPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirWriteOperationsRandomPerSec.setStatus('current')
redirWritePacketsSmallPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirWritePacketsSmallPerSec.setStatus('current')
redirWritePacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirWritePacketsPerSec.setStatus('current')
redirWritesDeniedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirWritesDeniedPerSec.setStatus('current')
redirWritesLargePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 70, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirWritesLargePerSec.setStatus('current')
rsvpInterfacesTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71), )
if mibBuilder.loadTexts: rsvpInterfacesTable.setStatus('current')
rsvpInterfacesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1), ).setIndexNames((0, "INFORMANT-ADV", "rsvpIfInstance"))
if mibBuilder.loadTexts: rsvpInterfacesEntry.setStatus('current')
rsvpIfInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfInstance.setStatus('current')
rsvpIfBlockedRESVs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfBlockedRESVs.setStatus('current')
rsvpIfGeneralFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfGeneralFailures.setStatus('current')
rsvpIfMaximumAdmittedBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfMaximumAdmittedBandwidth.setStatus('current')
rsvpIfNumOfActiveFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfNumOfActiveFlows.setStatus('current')
rsvpIfNumOfIncomingMsgsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfNumOfIncomingMsgsDropped.setStatus('current')
rsvpIfNumOfOutgoingMsgsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfNumOfOutgoingMsgsDropped.setStatus('current')
rsvpIfPATHERRMsgsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfPATHERRMsgsReceived.setStatus('current')
rsvpIfPATHERRMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfPATHERRMsgsSent.setStatus('current')
rsvpIfPATHTEARMsgsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfPATHTEARMsgsReceived.setStatus('current')
rsvpIfPATHTEARMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfPATHTEARMsgsSent.setStatus('current')
rsvpIfPATHMsgsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfPATHMsgsReceived.setStatus('current')
rsvpIfPATHMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfPATHMsgsSent.setStatus('current')
rsvpIfPATHStateBlockTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfPATHStateBlockTimeouts.setStatus('current')
rsvpIfPolicyControlFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfPolicyControlFailures.setStatus('current')
rsvpIfRESVCONFIRMMsgsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfRESVCONFIRMMsgsReceived.setStatus('current')
rsvpIfRESVCONFIRMMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfRESVCONFIRMMsgsSent.setStatus('current')
rsvpIfRESVERRMsgsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfRESVERRMsgsReceived.setStatus('current')
rsvpIfRESVERRMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfRESVERRMsgsSent.setStatus('current')
rsvpIfRESVTEARMsgsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfRESVTEARMsgsReceived.setStatus('current')
rsvpIfRESVTEARMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfRESVTEARMsgsSent.setStatus('current')
rsvpIfRESVMsgsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfRESVMsgsReceived.setStatus('current')
rsvpIfRESVMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfRESVMsgsSent.setStatus('current')
rsvpIfRESVStateBlockTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfRESVStateBlockTimeouts.setStatus('current')
rsvpIfReceiveMsgsErrorsBigMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfReceiveMsgsErrorsBigMsgs.setStatus('current')
rsvpIfReceiveMsgsErrorsNoMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfReceiveMsgsErrorsNoMemory.setStatus('current')
rsvpIfReservedBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfReservedBandwidth.setStatus('current')
rsvpIfResourceControlFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfResourceControlFailures.setStatus('current')
rsvpIfSendMsgsErrorsBigMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfSendMsgsErrorsBigMsgs.setStatus('current')
rsvpIfSendMsgsErrorsNoMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfSendMsgsErrorsNoMemory.setStatus('current')
rsvpIfSignalingBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfSignalingBytesReceived.setStatus('current')
rsvpIfSignalingBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 71, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpIfSignalingBytesSent.setStatus('current')
rsvpServiceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 72), )
if mibBuilder.loadTexts: rsvpServiceTable.setStatus('current')
rsvpServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1), ).setIndexNames((0, "INFORMANT-ADV", "rsvpSvcInstance"))
if mibBuilder.loadTexts: rsvpServiceEntry.setStatus('current')
rsvpSvcInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpSvcInstance.setStatus('current')
rsvpSvcBytesInQoSNotifications = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpSvcBytesInQoSNotifications.setStatus('current')
rsvpSvcFailedQoSRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpSvcFailedQoSRequests.setStatus('current')
rsvpSvcFailedQoSSends = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpSvcFailedQoSSends.setStatus('current')
rsvpSvcNetworkInterfaces = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpSvcNetworkInterfaces.setStatus('current')
rsvpSvcNetworkSockets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpSvcNetworkSockets.setStatus('current')
rsvpSvcQoSClients = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpSvcQoSClients.setStatus('current')
rsvpSvcQoSNotifications = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpSvcQoSNotifications.setStatus('current')
rsvpSvcQoSenabledReceivers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpSvcQoSenabledReceivers.setStatus('current')
rsvpSvcQoSenabledSenders = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpSvcQoSenabledSenders.setStatus('current')
rsvpSvcRSVPSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpSvcRSVPSessions.setStatus('current')
rsvpSvcTimers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 72, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsvpSvcTimers.setStatus('current')
server = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73))
if mibBuilder.loadTexts: server.setStatus('current')
serverBlockingRequestsRejected = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverBlockingRequestsRejected.setStatus('current')
serverBytesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverBytesReceivedPerSec.setStatus('current')
serverBytesTotalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverBytesTotalPerSec.setStatus('current')
serverBytesTransmittedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverBytesTransmittedPerSec.setStatus('current')
serverContextBlocksQueuedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverContextBlocksQueuedPerSec.setStatus('current')
serverErrorsAccessPermissions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverErrorsAccessPermissions.setStatus('current')
serverErrorsGrantedAccess = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverErrorsGrantedAccess.setStatus('current')
serverErrorsLogon = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverErrorsLogon.setStatus('current')
serverErrorsSystem = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverErrorsSystem.setStatus('current')
serverFileDirectorySearches = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverFileDirectorySearches.setStatus('current')
serverFilesOpen = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverFilesOpen.setStatus('current')
serverFilesOpenedTotal = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverFilesOpenedTotal.setStatus('current')
serverLogonTotal = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverLogonTotal.setStatus('current')
serverLogonPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverLogonPerSec.setStatus('current')
serverPoolNonpagedBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolNonpagedBytes.setStatus('current')
serverPoolNonpagedFailures = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolNonpagedFailures.setStatus('current')
serverPoolNonpagedPeak = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolNonpagedPeak.setStatus('current')
serverPoolPagedBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolPagedBytes.setStatus('current')
serverPoolPagedFailures = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolPagedFailures.setStatus('current')
serverPoolPagedPeak = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolPagedPeak.setStatus('current')
serverServerSessions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverServerSessions.setStatus('current')
serverSessionsErroredOut = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverSessionsErroredOut.setStatus('current')
serverSessionsForcedOff = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverSessionsForcedOff.setStatus('current')
serverSessionsLoggedOff = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverSessionsLoggedOff.setStatus('current')
serverSessionsTimedOut = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverSessionsTimedOut.setStatus('current')
serverWorkItemShortages = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverWorkItemShortages.setStatus('current')
serverPoolNonpagedKBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolNonpagedKBytes.setStatus('current')
serverPoolNonpagedKBytesPeak = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolNonpagedKBytesPeak.setStatus('current')
serverPoolPagedKBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolPagedKBytes.setStatus('current')
serverPoolPagedKBytesPeak = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolPagedKBytesPeak.setStatus('current')
serverPoolNonpagedMBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolNonpagedMBytes.setStatus('current')
serverPoolNonpagedMBytesPeak = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolNonpagedMBytesPeak.setStatus('current')
serverPoolPagedMBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolPagedMBytes.setStatus('current')
serverPoolPagedMBytesPeak = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 73, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolPagedMBytesPeak.setStatus('current')
serverWorkQueuesTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74), )
if mibBuilder.loadTexts: serverWorkQueuesTable.setStatus('current')
serverWorkQueuesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1), ).setIndexNames((0, "INFORMANT-ADV", "swqInstance"))
if mibBuilder.loadTexts: serverWorkQueuesEntry.setStatus('current')
swqInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swqInstance.setStatus('current')
swqActiveThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swqActiveThreads.setStatus('current')
swqAvailableThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swqAvailableThreads.setStatus('current')
swqAvailableWorkItems = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swqAvailableWorkItems.setStatus('current')
swqBorrowedWorkItems = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swqBorrowedWorkItems.setStatus('current')
swqBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swqBytesReceivedPerSec.setStatus('current')
swqBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swqBytesSentPerSec.setStatus('current')
swqBytesTransferredPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swqBytesTransferredPerSec.setStatus('current')
swqContextBlocksQueuedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swqContextBlocksQueuedPerSec.setStatus('current')
swqCurrentClients = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swqCurrentClients.setStatus('current')
swqQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swqQueueLength.setStatus('current')
swqReadBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swqReadBytesPerSec.setStatus('current')
swqReadOperationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swqReadOperationsPerSec.setStatus('current')
swqTotalBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swqTotalBytesPerSec.setStatus('current')
swqTotalOperationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swqTotalOperationsPerSec.setStatus('current')
swqWorkItemShortages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swqWorkItemShortages.setStatus('current')
swqWriteBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swqWriteBytesPerSec.setStatus('current')
swqWriteOperationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 74, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swqWriteOperationsPerSec.setStatus('current')
smtpNTFSStoreDriverTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 75), )
if mibBuilder.loadTexts: smtpNTFSStoreDriverTable.setStatus('current')
smtpNTFSStoreDriverEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 75, 1), ).setIndexNames((0, "INFORMANT-ADV", "snsdInstance"))
if mibBuilder.loadTexts: smtpNTFSStoreDriverEntry.setStatus('current')
snsdInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 75, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsdInstance.setStatus('current')
snsdMessagesAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 75, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsdMessagesAllocated.setStatus('current')
snsdMessagesDeleted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 75, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsdMessagesDeleted.setStatus('current')
snsdMessagesEnumerated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 75, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsdMessagesEnumerated.setStatus('current')
snsdMessagesInTheQueueDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 75, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsdMessagesInTheQueueDirectory.setStatus('current')
snsdOpenMessageBodies = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 75, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsdOpenMessageBodies.setStatus('current')
snsdOpenMessageStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 75, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snsdOpenMessageStreams.setStatus('current')
smtpServerTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76), )
if mibBuilder.loadTexts: smtpServerTable.setStatus('current')
smtpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1), ).setIndexNames((0, "INFORMANT-ADV", "smtpSrvrInstance"))
if mibBuilder.loadTexts: smtpServerEntry.setStatus('current')
smtpSrvrInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrInstance.setStatus('current')
smtpSrvrPercentRcpntsLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrPercentRcpntsLocal.setStatus('current')
smtpSrvrPercentRcpntsRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrPercentRcpntsRemote.setStatus('current')
smtpSrvrAvgRcpntsPerMsgRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrAvgRcpntsPerMsgRcvd.setStatus('current')
smtpSrvrAvgRcpntsPerMsgSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrAvgRcpntsPerMsgSent.setStatus('current')
smtpSrvrAvgRetriesPerMsgDlvrd = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrAvgRetriesPerMsgDlvrd.setStatus('current')
smtpSrvrAvgRetriesPerMsgSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrAvgRetriesPerMsgSent.setStatus('current')
smtpSrvrBadMailMsgsBadPickupFile = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrBadMailMsgsBadPickupFile.setStatus('current')
smtpSrvrBadMailMsgsGeneralFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrBadMailMsgsGeneralFail.setStatus('current')
smtpSrvrBadMailMsgsHopCntExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrBadMailMsgsHopCntExceed.setStatus('current')
smtpSrvrBadMailMsgsNDROfDSN = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrBadMailMsgsNDROfDSN.setStatus('current')
smtpSrvrBadMailMsgsNoRcpnts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrBadMailMsgsNoRcpnts.setStatus('current')
smtpSrvrBadMailMsgsTrigViaEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrBadMailMsgsTrigViaEvent.setStatus('current')
smtpSrvrBytesRcvdTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrBytesRcvdTotal.setStatus('current')
smtpSrvrBytesRcvdPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrBytesRcvdPerSec.setStatus('current')
smtpSrvrBytesSentTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrBytesSentTotal.setStatus('current')
smtpSrvrBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrBytesSentPerSec.setStatus('current')
smtpSrvrBytesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrBytesTotal.setStatus('current')
smtpSrvrBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrBytesTotalPerSec.setStatus('current')
smtpSrvrCatAddrLookupCmplt = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatAddrLookupCmplt.setStatus('current')
smtpSrvrCatAddrLookupCmpltPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatAddrLookupCmpltPerSec.setStatus('current')
smtpSrvrCatAddrLookups = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatAddrLookups.setStatus('current')
smtpSrvrCatAddrLookupsNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatAddrLookupsNotFound.setStatus('current')
smtpSrvrCatAddrLookupsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatAddrLookupsPerSec.setStatus('current')
smtpSrvrCatCatsCmpltd = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatCatsCmpltd.setStatus('current')
smtpSrvrCatCatsCmpltdSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatCatsCmpltdSuccess.setStatus('current')
smtpSrvrCatCatsCmpltdPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatCatsCmpltdPerSec.setStatus('current')
smtpSrvrCatCatsFailDSConnFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatCatsFailDSConnFail.setStatus('current')
smtpSrvrCatCatsFailDSLogonFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatCatsFailDSLogonFail.setStatus('current')
smtpSrvrCatCatsFailOutOfMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatCatsFailOutOfMemory.setStatus('current')
smtpSrvrCatCatsFailNonRetryError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatCatsFailNonRetryError.setStatus('current')
smtpSrvrCatCatsFailRetryError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatCatsFailRetryError.setStatus('current')
smtpSrvrCatCatsFailSinkRetryErr = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatCatsFailSinkRetryErr.setStatus('current')
smtpSrvrCatCatsInProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatCatsInProgress.setStatus('current')
smtpSrvrCatLDAPBindFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatLDAPBindFail.setStatus('current')
smtpSrvrCatLDAPBinds = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatLDAPBinds.setStatus('current')
smtpSrvrCatLDAPConnFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatLDAPConnFail.setStatus('current')
smtpSrvrCatLDAPConns = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatLDAPConns.setStatus('current')
smtpSrvrCatLDAPConnsCurrOpen = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatLDAPConnsCurrOpen.setStatus('current')
smtpSrvrCatLDAPGeneralCmpltFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatLDAPGeneralCmpltFail.setStatus('current')
smtpSrvrCatLDAPPageSrchCmpltFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatLDAPPageSrchCmpltFail.setStatus('current')
smtpSrvrCatLDAPPagedSrchFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatLDAPPagedSrchFail.setStatus('current')
smtpSrvrCatLDAPPagedSrchs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatLDAPPagedSrchs.setStatus('current')
smtpSrvrCatLDAPPagedSrchsCmpltd = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatLDAPPagedSrchsCmpltd.setStatus('current')
smtpSrvrCatLDAPSrchCmpltFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatLDAPSrchCmpltFail.setStatus('current')
smtpSrvrCatLDAPSrchFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatLDAPSrchFail.setStatus('current')
smtpSrvrCatLDAPSrchs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatLDAPSrchs.setStatus('current')
smtpSrvrCatLDAPSrchsAbandoned = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatLDAPSrchsAbandoned.setStatus('current')
smtpSrvrCatLDAPSrchsCmpltd = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatLDAPSrchsCmpltd.setStatus('current')
smtpSrvrCatLDAPSrchsCmpltdPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatLDAPSrchsCmpltdPerSec.setStatus('current')
smtpSrvrCatLDAPSrchsPendingCmplt = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 51), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatLDAPSrchsPendingCmplt.setStatus('current')
smtpSrvrCatLDAPSrchsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatLDAPSrchsPerSec.setStatus('current')
smtpSrvrCatMsgsCategorized = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatMsgsCategorized.setStatus('current')
smtpSrvrCatMsgsAborted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatMsgsAborted.setStatus('current')
smtpSrvrCatMsgsBifurcated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatMsgsBifurcated.setStatus('current')
smtpSrvrCatMsgsSubmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 56), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatMsgsSubmitted.setStatus('current')
smtpSrvrCatMsgsSubmittedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 57), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatMsgsSubmittedPerSec.setStatus('current')
smtpSrvrCatRcptsNDRdAmbigsAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 58), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatRcptsNDRdAmbigsAddr.setStatus('current')
smtpSrvrCatRcptsNDRdForwardLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 59), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatRcptsNDRdForwardLoop.setStatus('current')
smtpSrvrCatRcptsNDRdIllegalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 60), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatRcptsNDRdIllegalAddr.setStatus('current')
smtpSrvrCatRcptsNDRdSinkRecipErr = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 61), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatRcptsNDRdSinkRecipErr.setStatus('current')
smtpSrvrCatRcptsNDRdUnresolved = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 62), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatRcptsNDRdUnresolved.setStatus('current')
smtpSrvrCatRcptsNDRdByCategorize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 63), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatRcptsNDRdByCategorize.setStatus('current')
smtpSrvrCatRcptsAfterCat = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 64), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatRcptsAfterCat.setStatus('current')
smtpSrvrCatRcptsBeforeCat = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 65), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatRcptsBeforeCat.setStatus('current')
smtpSrvrCatRcptsInCat = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 66), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatRcptsInCat.setStatus('current')
smtpSrvrCatSendersUnresolved = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 67), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatSendersUnresolved.setStatus('current')
smtpSrvrCatSendersAmbigsAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 68), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatSendersAmbigsAddr.setStatus('current')
smtpSrvrCatMailmsgDupCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 69), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCatMailmsgDupCollisions.setStatus('current')
smtpSrvrCategorizerQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 70), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCategorizerQueueLength.setStatus('current')
smtpSrvrConnErrorsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 71), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrConnErrorsPerSec.setStatus('current')
smtpSrvrCurrentMsgsInLocalDlvry = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 72), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrCurrentMsgsInLocalDlvry.setStatus('current')
smtpSrvrDNSQueriesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 73), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrDNSQueriesTotal.setStatus('current')
smtpSrvrDNSQueriesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 74), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrDNSQueriesPerSec.setStatus('current')
smtpSrvrDirDropsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 75), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrDirDropsTotal.setStatus('current')
smtpSrvrDirDropsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 76), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrDirDropsPerSec.setStatus('current')
smtpSrvrETRNMsgsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 77), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrETRNMsgsTotal.setStatus('current')
smtpSrvrETRNMsgsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 78), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrETRNMsgsPerSec.setStatus('current')
smtpSrvrInboundConnsCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 79), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrInboundConnsCurrent.setStatus('current')
smtpSrvrInboundConnsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 80), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrInboundConnsTotal.setStatus('current')
smtpSrvrLocalQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 81), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrLocalQueueLength.setStatus('current')
smtpSrvrLocalRetryQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 82), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrLocalRetryQueueLength.setStatus('current')
smtpSrvrMsgBytesRcvdTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 83), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgBytesRcvdTotal.setStatus('current')
smtpSrvrMsgBytesRcvdPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 84), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgBytesRcvdPerSec.setStatus('current')
smtpSrvrMsgBytesSentTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 85), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgBytesSentTotal.setStatus('current')
smtpSrvrMsgBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 86), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgBytesSentPerSec.setStatus('current')
smtpSrvrMsgBytesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 87), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgBytesTotal.setStatus('current')
smtpSrvrMsgBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 88), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgBytesTotalPerSec.setStatus('current')
smtpSrvrMsgDlvryRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 89), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgDlvryRetries.setStatus('current')
smtpSrvrMsgSendRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 90), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgSendRetries.setStatus('current')
smtpSrvrMsgsCurrUndeliverable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 91), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgsCurrUndeliverable.setStatus('current')
smtpSrvrMsgsDlvrdTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 92), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgsDlvrdTotal.setStatus('current')
smtpSrvrMsgsDlvrdPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 93), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgsDlvrdPerSec.setStatus('current')
smtpSrvrMsgsPendingRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 94), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgsPendingRoute.setStatus('current')
smtpSrvrMsgsRcvdTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 95), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgsRcvdTotal.setStatus('current')
smtpSrvrMsgsRcvdPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 96), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgsRcvdPerSec.setStatus('current')
smtpSrvrMsgsRfsdForAddrObjects = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 97), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgsRfsdForAddrObjects.setStatus('current')
smtpSrvrMsgsRfsdForMailObjects = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 98), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgsRfsdForMailObjects.setStatus('current')
smtpSrvrMsgsRfsdForSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 99), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgsRfsdForSize.setStatus('current')
smtpSrvrMsgsSentTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 100), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgsSentTotal.setStatus('current')
smtpSrvrMsgsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 101), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrMsgsSentPerSec.setStatus('current')
smtpSrvrNDRsGenerated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 102), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrNDRsGenerated.setStatus('current')
smtpSrvrNumberOfMailFilesOpen = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 103), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrNumberOfMailFilesOpen.setStatus('current')
smtpSrvrNumberOfQueueFilesOpen = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 104), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrNumberOfQueueFilesOpen.setStatus('current')
smtpSrvrOutboundConnsCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 105), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrOutboundConnsCurrent.setStatus('current')
smtpSrvrOutboundConnsRfsd = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 106), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrOutboundConnsRfsd.setStatus('current')
smtpSrvrOutboundConnsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 107), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrOutboundConnsTotal.setStatus('current')
smtpSrvrPickupDirMsgsRtrvdTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 108), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrPickupDirMsgsRtrvdTotal.setStatus('current')
smtpSrvrPickupDirMsgsRtrvdPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 109), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrPickupDirMsgsRtrvdPerSec.setStatus('current')
smtpSrvrRemoteQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 110), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrRemoteQueueLength.setStatus('current')
smtpSrvrRemoteRetryQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 111), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrRemoteRetryQueueLength.setStatus('current')
smtpSrvrRouteTableLookupsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 112), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrRouteTableLookupsTotal.setStatus('current')
smtpSrvrRouteTableLookupsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 113), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrRouteTableLookupsPerSec.setStatus('current')
smtpSrvrTotalConnErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 114), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrTotalConnErrors.setStatus('current')
smtpSrvrTotalDSNFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 115), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrTotalDSNFail.setStatus('current')
smtpSrvrTotalMsgsSubmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 76, 1, 116), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smtpSrvrTotalMsgsSubmitted.setStatus('current')
system = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 77))
if mibBuilder.loadTexts: system.setStatus('current')
systemPercentRegistryQuotaInUse = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemPercentRegistryQuotaInUse.setStatus('current')
systemAlignmentFixupsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemAlignmentFixupsPerSec.setStatus('current')
systemContextSwitchesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemContextSwitchesPerSec.setStatus('current')
systemExceptionDispatchesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemExceptionDispatchesPerSec.setStatus('current')
systemFileControlBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFileControlBytesPerSec.setStatus('current')
systemFileControlOperationPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFileControlOperationPerSec.setStatus('current')
systemFileDataOperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFileDataOperationsPerSec.setStatus('current')
systemFileReadBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFileReadBytesPerSec.setStatus('current')
systemFileReadOperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFileReadOperationsPerSec.setStatus('current')
systemFileWriteBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFileWriteBytesPerSec.setStatus('current')
systemFileWriteOperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFileWriteOperationsPerSec.setStatus('current')
systemFloatingEmulationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemFloatingEmulationsPerSec.setStatus('current')
systemProcesses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemProcesses.setStatus('current')
systemProcessorQueueLength = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemProcessorQueueLength.setStatus('current')
systemSystemCallsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemSystemCallsPerSec.setStatus('current')
systemSystemUpTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemSystemUpTime.setStatus('current')
systemThreads = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 77, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemThreads.setStatus('current')
tcpV4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 78))
if mibBuilder.loadTexts: tcpV4.setStatus('current')
tcpV4ConnectionFailures = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 78, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpV4ConnectionFailures.setStatus('current')
tcpV4ConnectionsActive = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 78, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpV4ConnectionsActive.setStatus('current')
tcpV4ConnectionsEstablished = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 78, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpV4ConnectionsEstablished.setStatus('current')
tcpV4ConnectionsPassive = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 78, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpV4ConnectionsPassive.setStatus('current')
tcpV4ConnectionsReset = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 78, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpV4ConnectionsReset.setStatus('current')
tcpV4SegmentsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 78, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpV4SegmentsReceivedPerSec.setStatus('current')
tcpV4SegmentsRetransmittedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 78, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpV4SegmentsRetransmittedPerSec.setStatus('current')
tcpV4SegmentsSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 78, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpV4SegmentsSentPerSec.setStatus('current')
tcpV4SegmentsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 78, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpV4SegmentsPerSec.setStatus('current')
tcpV6 = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 79))
tcpV6ConnectionFailures = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 79, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpV6ConnectionFailures.setStatus('current')
tcpV6ConnectionsActive = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 79, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpV6ConnectionsActive.setStatus('current')
tcpV6ConnectionsEstablished = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 79, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpV6ConnectionsEstablished.setStatus('current')
tcpV6ConnectionsPassive = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 79, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpV6ConnectionsPassive.setStatus('current')
tcpV6ConnectionsReset = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 79, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpV6ConnectionsReset.setStatus('current')
tcpV6SegmentsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 79, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpV6SegmentsReceivedPerSec.setStatus('current')
tcpV6SegmentsRetransmittedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 79, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpV6SegmentsRetransmittedPerSec.setStatus('current')
tcpV6SegmentsSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 79, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpV6SegmentsSentPerSec.setStatus('current')
tcpV6SegmentsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 79, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpV6SegmentsPerSec.setStatus('current')
telephony = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 80))
if mibBuilder.loadTexts: telephony.setStatus('current')
telephonyActiveLines = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 80, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephonyActiveLines.setStatus('current')
telephonyActiveTelephones = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 80, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephonyActiveTelephones.setStatus('current')
telephonyClientApps = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 80, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephonyClientApps.setStatus('current')
telephonyCurrentIncomingCalls = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 80, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephonyCurrentIncomingCalls.setStatus('current')
telephonyCurrentOutgoingCalls = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 80, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephonyCurrentOutgoingCalls.setStatus('current')
telephonyIncomingCallsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 80, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephonyIncomingCallsPerSec.setStatus('current')
telephonyLines = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 80, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephonyLines.setStatus('current')
telephonyOutgoingCallsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 80, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephonyOutgoingCallsPerSec.setStatus('current')
telephonyTelephoneDevices = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 80, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephonyTelephoneDevices.setStatus('current')
terminalServices = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 81))
if mibBuilder.loadTexts: terminalServices.setStatus('current')
tsActiveSessions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 81, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsActiveSessions.setStatus('current')
tsInactiveSessions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 81, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsInactiveSessions.setStatus('current')
tsTotalSessions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 81, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsTotalSessions.setStatus('current')
terminalServicesSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82), )
if mibBuilder.loadTexts: terminalServicesSessionTable.setStatus('current')
terminalServicesSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1), ).setIndexNames((0, "INFORMANT-ADV", "tssInstance"))
if mibBuilder.loadTexts: terminalServicesSessionEntry.setStatus('current')
tssInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssInstance.setStatus('current')
tssPercentPrivilegedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssPercentPrivilegedTime.setStatus('current')
tssPercentProcessorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssPercentProcessorTime.setStatus('current')
tssPercentUserTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssPercentUserTime.setStatus('current')
tssHandleCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssHandleCount.setStatus('current')
tssInputAsyncFrameError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssInputAsyncFrameError.setStatus('current')
tssInputAsyncOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssInputAsyncOverflow.setStatus('current')
tssInputAsyncOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssInputAsyncOverrun.setStatus('current')
tssInputAsyncParityError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssInputAsyncParityError.setStatus('current')
tssInputBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssInputBytes.setStatus('current')
tssInputCompressFlushes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssInputCompressFlushes.setStatus('current')
tssInputCompressedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssInputCompressedBytes.setStatus('current')
tssInputCompressionRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssInputCompressionRatio.setStatus('current')
tssInputErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssInputErrors.setStatus('current')
tssInputFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssInputFrames.setStatus('current')
tssInputTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssInputTimeouts.setStatus('current')
tssInputTransportErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssInputTransportErrors.setStatus('current')
tssInputWaitForOutBuf = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssInputWaitForOutBuf.setStatus('current')
tssInputWdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssInputWdBytes.setStatus('current')
tssInputWdFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssInputWdFrames.setStatus('current')
tssOutputAsyncFrameError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssOutputAsyncFrameError.setStatus('current')
tssOutputAsyncOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssOutputAsyncOverflow.setStatus('current')
tssOutputAsyncOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssOutputAsyncOverrun.setStatus('current')
tssOutputAsyncParityError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssOutputAsyncParityError.setStatus('current')
tssOutputBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssOutputBytes.setStatus('current')
tssOutputCompressFlushes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssOutputCompressFlushes.setStatus('current')
tssOutputCompressedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssOutputCompressedBytes.setStatus('current')
tssOutputCompressionRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssOutputCompressionRatio.setStatus('current')
tssOutputErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssOutputErrors.setStatus('current')
tssOutputFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssOutputFrames.setStatus('current')
tssOutputTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssOutputTimeouts.setStatus('current')
tssOutputTransportErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssOutputTransportErrors.setStatus('current')
tssOutputWaitForOutBuf = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssOutputWaitForOutBuf.setStatus('current')
tssOutputWdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssOutputWdBytes.setStatus('current')
tssOutputWdFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssOutputWdFrames.setStatus('current')
tssPageFaultsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssPageFaultsPerSec.setStatus('current')
tssPageFileBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssPageFileBytes.setStatus('current')
tssPageFileBytesPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssPageFileBytesPeak.setStatus('current')
tssPoolNonpagedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssPoolNonpagedBytes.setStatus('current')
tssPoolPagedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssPoolPagedBytes.setStatus('current')
tssPrivateBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssPrivateBytes.setStatus('current')
tssProtocolBitmapCacheHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssProtocolBitmapCacheHitRatio.setStatus('current')
tssProtocolBitmapCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssProtocolBitmapCacheHits.setStatus('current')
tssProtocolBitmapCacheReads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssProtocolBitmapCacheReads.setStatus('current')
tssProtocolBrushCacheHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssProtocolBrushCacheHitRatio.setStatus('current')
tssProtocolBrushCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssProtocolBrushCacheHits.setStatus('current')
tssProtocolBrushCacheReads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssProtocolBrushCacheReads.setStatus('current')
tssProtocolGlyphCacheHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssProtocolGlyphCacheHitRatio.setStatus('current')
tssProtocolGlyphCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssProtocolGlyphCacheHits.setStatus('current')
tssProtocolGlyphCacheReads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssProtocolGlyphCacheReads.setStatus('current')
tssProtocolSvScrnBtmpCachHtRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 51), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssProtocolSvScrnBtmpCachHtRatio.setStatus('current')
tssProtocolSvScrnBtmpCachHts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssProtocolSvScrnBtmpCachHts.setStatus('current')
tssProtocolSvScrnBtmpCachReads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssProtocolSvScrnBtmpCachReads.setStatus('current')
tssThreadCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssThreadCount.setStatus('current')
tssTotalAsyncFrameError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssTotalAsyncFrameError.setStatus('current')
tssTotalAsyncOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 56), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssTotalAsyncOverflow.setStatus('current')
tssTotalAsyncOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 57), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssTotalAsyncOverrun.setStatus('current')
tssTotalAsyncParityError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 58), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssTotalAsyncParityError.setStatus('current')
tssTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 59), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssTotalBytes.setStatus('current')
tssTotalCompressFlushes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 60), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssTotalCompressFlushes.setStatus('current')
tssTotalCompressedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 61), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssTotalCompressedBytes.setStatus('current')
tssTotalCompressionRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 62), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssTotalCompressionRatio.setStatus('current')
tssTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 63), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssTotalErrors.setStatus('current')
tssTotalFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 64), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssTotalFrames.setStatus('current')
tssTotalProtocolCacheHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 65), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssTotalProtocolCacheHitRatio.setStatus('current')
tssTotalProtocolCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 66), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssTotalProtocolCacheHits.setStatus('current')
tssTotalProtocolCacheReads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 67), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssTotalProtocolCacheReads.setStatus('current')
tssTotalTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 68), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssTotalTimeouts.setStatus('current')
tssTotalTransportErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 69), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssTotalTransportErrors.setStatus('current')
tssTotalWaitForOutBuf = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 70), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssTotalWaitForOutBuf.setStatus('current')
tssTotalWdBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 71), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssTotalWdBytes.setStatus('current')
tssTotalWdFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 72), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssTotalWdFrames.setStatus('current')
tssVirtualBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 73), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssVirtualBytes.setStatus('current')
tssVirtualBytesPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 74), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssVirtualBytesPeak.setStatus('current')
tssWorkingSet = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 75), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssWorkingSet.setStatus('current')
tssWorkingSetPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 82, 1, 76), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tssWorkingSetPeak.setStatus('current')
threadTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 83), )
if mibBuilder.loadTexts: threadTable.setStatus('current')
threadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1), ).setIndexNames((0, "INFORMANT-ADV", "threadInstance"))
if mibBuilder.loadTexts: threadEntry.setStatus('current')
threadInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: threadInstance.setStatus('current')
threadPercentPrivilegedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: threadPercentPrivilegedTime.setStatus('current')
threadPercentProcessorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: threadPercentProcessorTime.setStatus('current')
threadPercentUserTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: threadPercentUserTime.setStatus('current')
threadContextSwitchesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: threadContextSwitchesPerSec.setStatus('current')
threadElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: threadElapsedTime.setStatus('current')
threadIDProcess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: threadIDProcess.setStatus('current')
threadIDThread = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: threadIDThread.setStatus('current')
threadPriorityBase = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: threadPriorityBase.setStatus('current')
threadPriorityCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: threadPriorityCurrent.setStatus('current')
threadStartAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: threadStartAddress.setStatus('current')
threadThreadState = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: threadThreadState.setStatus('current')
threadThreadWaitReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 83, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: threadThreadWaitReason.setStatus('current')
udpV4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 84))
if mibBuilder.loadTexts: udpV4.setStatus('current')
udpV4DatagramsNoPortPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 84, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpV4DatagramsNoPortPerSec.setStatus('current')
udpV4DatagramsReceivedErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 84, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpV4DatagramsReceivedErrors.setStatus('current')
udpV4DatagramsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 84, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpV4DatagramsReceivedPerSec.setStatus('current')
udpV4DatagramsSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 84, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpV4DatagramsSentPerSec.setStatus('current')
udpV4DatagramsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 84, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpV4DatagramsPerSec.setStatus('current')
udpV6 = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 85))
udpV6DatagramsNoPortPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 85, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpV6DatagramsNoPortPerSec.setStatus('current')
udpV6DatagramsReceivedErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 85, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpV6DatagramsReceivedErrors.setStatus('current')
udpV6DatagramsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 85, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpV6DatagramsReceivedPerSec.setStatus('current')
udpV6DatagramsSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 85, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpV6DatagramsSentPerSec.setStatus('current')
udpV6DatagramsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 85, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpV6DatagramsPerSec.setStatus('current')
webServiceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86), )
if mibBuilder.loadTexts: webServiceTable.setStatus('current')
webServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1), ).setIndexNames((0, "INFORMANT-ADV", "wsInstance"))
if mibBuilder.loadTexts: webServiceEntry.setStatus('current')
wsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsInstance.setStatus('current')
wsAnonymousUsersPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsAnonymousUsersPerSec.setStatus('current')
wsBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsBytesReceivedPerSec.setStatus('current')
wsBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsBytesSentPerSec.setStatus('current')
wsBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsBytesTotalPerSec.setStatus('current')
wsCGIRqstsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsCGIRqstsPerSec.setStatus('current')
wsConnAtmpsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsConnAtmpsPerSec.setStatus('current')
wsCopyRqstsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsCopyRqstsPerSec.setStatus('current')
wsCurrentAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsCurrentAnonymousUsers.setStatus('current')
wsCurrentBlkdAsyncIORqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsCurrentBlkdAsyncIORqsts.setStatus('current')
wsCurrentCALCountForSSLConns = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsCurrentCALCountForSSLConns.setStatus('current')
wsCurrentCALCountForAuthdUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsCurrentCALCountForAuthdUsers.setStatus('current')
wsCurrentCGIRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsCurrentCGIRqsts.setStatus('current')
wsCurrentConns = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsCurrentConns.setStatus('current')
wsCurrentISAPIExtensionRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsCurrentISAPIExtensionRqsts.setStatus('current')
wsCurrentNonAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsCurrentNonAnonymousUsers.setStatus('current')
wsCurrentBlkdBandwidthBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsCurrentBlkdBandwidthBytes.setStatus('current')
wsDeleteRqstsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsDeleteRqstsPerSec.setStatus('current')
wsFilesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsFilesReceivedPerSec.setStatus('current')
wsFilesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsFilesSentPerSec.setStatus('current')
wsFilesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsFilesPerSec.setStatus('current')
wsGetRqstsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsGetRqstsPerSec.setStatus('current')
wsHeadRqstsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsHeadRqstsPerSec.setStatus('current')
wsISAPIExtensionRqstsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsISAPIExtensionRqstsPerSec.setStatus('current')
wsLockRqstsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsLockRqstsPerSec.setStatus('current')
wsLockedErrorsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsLockedErrorsPerSec.setStatus('current')
wsLogonAtmpsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsLogonAtmpsPerSec.setStatus('current')
wsMaximumAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsMaximumAnonymousUsers.setStatus('current')
wsMaximumCALCountForSSLConns = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsMaximumCALCountForSSLConns.setStatus('current')
wsMaximumCALCountForAuthdUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsMaximumCALCountForAuthdUsers.setStatus('current')
wsMaximumCGIRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsMaximumCGIRqsts.setStatus('current')
wsMaximumConns = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsMaximumConns.setStatus('current')
wsMaximumISAPIExtensionRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsMaximumISAPIExtensionRqsts.setStatus('current')
wsMaximumNonAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsMaximumNonAnonymousUsers.setStatus('current')
wsMeasuredAsyncIOBandwidthUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsMeasuredAsyncIOBandwidthUsage.setStatus('current')
wsMkcolRqstsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsMkcolRqstsPerSec.setStatus('current')
wsMoveRqstsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsMoveRqstsPerSec.setStatus('current')
wsNonAnonymousUsersPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNonAnonymousUsersPerSec.setStatus('current')
wsNotFoundErrorsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsNotFoundErrorsPerSec.setStatus('current')
wsOptionsRqstsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOptionsRqstsPerSec.setStatus('current')
wsOtherRqstMethodsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsOtherRqstMethodsPerSec.setStatus('current')
wsPostRqstsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPostRqstsPerSec.setStatus('current')
wsPropfindRqstsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPropfindRqstsPerSec.setStatus('current')
wsProppatchRqstsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsProppatchRqstsPerSec.setStatus('current')
wsPutRqstsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsPutRqstsPerSec.setStatus('current')
wsSearchRqstsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsSearchRqstsPerSec.setStatus('current')
wsServiceUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsServiceUptime.setStatus('current')
wsTotalAllowedAsyncIORqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalAllowedAsyncIORqsts.setStatus('current')
wsTotalAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalAnonymousUsers.setStatus('current')
wsTotalBlkdAsyncIORqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalBlkdAsyncIORqsts.setStatus('current')
wsTotalBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 51), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalBytesReceived.setStatus('current')
wsTotalBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalBytesSent.setStatus('current')
wsTotalBytesTransfered = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalBytesTransfered.setStatus('current')
wsTotalCGIRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalCGIRqsts.setStatus('current')
wsTotalConnAtmpsAllInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalConnAtmpsAllInstances.setStatus('current')
wsTotalCopyRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 56), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalCopyRqsts.setStatus('current')
wsTotalDeleteRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 57), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalDeleteRqsts.setStatus('current')
wsTotalFilesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 58), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalFilesReceived.setStatus('current')
wsTotalFilesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 59), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalFilesSent.setStatus('current')
wsTotalFilesTransferred = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 60), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalFilesTransferred.setStatus('current')
wsTotalGetRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 61), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalGetRqsts.setStatus('current')
wsTotalHeadRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 62), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalHeadRqsts.setStatus('current')
wsTotalISAPIExtensionRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 63), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalISAPIExtensionRqsts.setStatus('current')
wsTotalLockRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 64), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalLockRqsts.setStatus('current')
wsTotalLockedErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 65), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalLockedErrors.setStatus('current')
wsTotalLogonAtmps = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 66), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalLogonAtmps.setStatus('current')
wsTotalMethodRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 67), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalMethodRqsts.setStatus('current')
wsTotalMethodRqstsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 68), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalMethodRqstsPerSec.setStatus('current')
wsTotalMkcolRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 69), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalMkcolRqsts.setStatus('current')
wsTotalMoveRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 70), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalMoveRqsts.setStatus('current')
wsTotalNonAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 71), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalNonAnonymousUsers.setStatus('current')
wsTotalNotFoundErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 72), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalNotFoundErrors.setStatus('current')
wsTotalOptionsRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 73), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalOptionsRqsts.setStatus('current')
wsTotalOtherRqstMethods = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 74), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalOtherRqstMethods.setStatus('current')
wsTotalPostRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 75), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalPostRqsts.setStatus('current')
wsTotalPropfindRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 76), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalPropfindRqsts.setStatus('current')
wsTotalProppatchRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 77), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalProppatchRqsts.setStatus('current')
wsTotalPutRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 78), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalPutRqsts.setStatus('current')
wsTotalRejectedAsyncIORqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 79), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalRejectedAsyncIORqsts.setStatus('current')
wsTotalSearchRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 80), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalSearchRqsts.setStatus('current')
wsTotalTraceRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 81), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalTraceRqsts.setStatus('current')
wsTotalUnlockRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 82), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalUnlockRqsts.setStatus('current')
wsTotalBlkdBandwidthBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 83), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalBlkdBandwidthBytes.setStatus('current')
wsTotalCountFailCALRqstsSSLConns = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 84), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalCountFailCALRqstsSSLConns.setStatus('current')
wsTotalCountFailCALRqstsAuthdUsr = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 85), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTotalCountFailCALRqstsAuthdUsr.setStatus('current')
wsTraceRqstsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 86), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsTraceRqstsPerSec.setStatus('current')
wsUnlockRqstsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 86, 1, 87), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsUnlockRqstsPerSec.setStatus('current')
webServiceCache = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87))
if mibBuilder.loadTexts: webServiceCache.setStatus('current')
wscActiveFlushedEntries = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscActiveFlushedEntries.setStatus('current')
wscCurrentFileCacheMemoryUsage = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscCurrentFileCacheMemoryUsage.setStatus('current')
wscCurrentFilesCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscCurrentFilesCached.setStatus('current')
wscCurrentMetadataCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscCurrentMetadataCached.setStatus('current')
wscCurrentURIsCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscCurrentURIsCached.setStatus('current')
wscFileCacheFlushes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscFileCacheFlushes.setStatus('current')
wscFileCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscFileCacheHits.setStatus('current')
wscFileCacheHitsPercent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscFileCacheHitsPercent.setStatus('current')
wscFileCacheMisses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscFileCacheMisses.setStatus('current')
wscKernelCurrentURIsCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscKernelCurrentURIsCached.setStatus('current')
wscKernelTotalFlushedURIs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscKernelTotalFlushedURIs.setStatus('current')
wscKernelTotalURIsCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscKernelTotalURIsCached.setStatus('current')
wscKernelURICacheFlushes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscKernelURICacheFlushes.setStatus('current')
wscKernelURICacheHits = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscKernelURICacheHits.setStatus('current')
wscKernelURICacheHitsPercent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscKernelURICacheHitsPercent.setStatus('current')
wscKernelURICacheMisses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscKernelURICacheMisses.setStatus('current')
wscKernelUriCacheHitsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscKernelUriCacheHitsPerSec.setStatus('current')
wscMaximumFileCacheMemoryUsage = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscMaximumFileCacheMemoryUsage.setStatus('current')
wscMetadataCacheFlushes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscMetadataCacheFlushes.setStatus('current')
wscMetadataCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscMetadataCacheHits.setStatus('current')
wscMetadataCacheHitsPercent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscMetadataCacheHitsPercent.setStatus('current')
wscMetadataCacheMisses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscMetadataCacheMisses.setStatus('current')
wscTotalFilesCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscTotalFilesCached.setStatus('current')
wscTotalFlushedFiles = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscTotalFlushedFiles.setStatus('current')
wscTotalFlushedMetadata = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscTotalFlushedMetadata.setStatus('current')
wscTotalFlushedURIs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscTotalFlushedURIs.setStatus('current')
wscTotalMetadataCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscTotalMetadataCached.setStatus('current')
wscTotalURIsCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscTotalURIsCached.setStatus('current')
wscURICacheFlushes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscURICacheFlushes.setStatus('current')
wscURICacheHits = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscURICacheHits.setStatus('current')
wscURICacheHitsPercent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscURICacheHitsPercent.setStatus('current')
wscURICacheMisses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscURICacheMisses.setStatus('current')
wscOutputCacheCurrentFlushedItem = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscOutputCacheCurrentFlushedItem.setStatus('current')
wscOutputCacheCurrentHitsPercent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscOutputCacheCurrentHitsPercent.setStatus('current')
wscOutputCacheCurrentItems = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscOutputCacheCurrentItems.setStatus('current')
wscOutputCacheCurrentMemoryUsage = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscOutputCacheCurrentMemoryUsage.setStatus('current')
wscOutputCacheTotalFlushedItems = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscOutputCacheTotalFlushedItems.setStatus('current')
wscOutputCacheTotalFlushes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscOutputCacheTotalFlushes.setStatus('current')
wscOutputCacheTotalHits = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscOutputCacheTotalHits.setStatus('current')
wscOutputCacheTotalMisses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 87, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wscOutputCacheTotalMisses.setStatus('current')
windowsMediaServices = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88))
wmsCurCacheDownloads = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurCacheDownloads.setStatus('current')
wmsCurConnectedPlayers = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurConnectedPlayers.setStatus('current')
wmsCurConnectionQueueLength = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurConnectionQueueLength.setStatus('current')
wmsCurConnectionRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurConnectionRate.setStatus('current')
wmsCurFileReadRateKbps = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurFileReadRateKbps.setStatus('current')
wmsCurIncomingBandwidthKbps = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurIncomingBandwidthKbps.setStatus('current')
wmsCurLateReadRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurLateReadRate.setStatus('current')
wmsCurLateSendRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurLateSendRate.setStatus('current')
wmsCurOutDistAllocBandwidthKbps = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurOutDistAllocBandwidthKbps.setStatus('current')
wmsCurOutDistConnections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurOutDistConnections.setStatus('current')
wmsCurOutDistSendRateKbps = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurOutDistSendRateKbps.setStatus('current')
wmsCurPlayerAllocBandwidthKbps = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurPlayerAllocBandwidthKbps.setStatus('current')
wmsCurPlayerSendRateKbps = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurPlayerSendRateKbps.setStatus('current')
wmsCurStreamErrorRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurStreamErrorRate.setStatus('current')
wmsCurStreamingHTTPPlayers = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurStreamingHTTPPlayers.setStatus('current')
wmsCurStreamingMMSPlayers = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurStreamingMMSPlayers.setStatus('current')
wmsCurStreamingPlayers = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurStreamingPlayers.setStatus('current')
wmsCurStreamingRTSPPlayers = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurStreamingRTSPPlayers.setStatus('current')
wmsCurUDPResendRequestsRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurUDPResendRequestsRate.setStatus('current')
wmsCurUDPResendsSentRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCurUDPResendsSentRate.setStatus('current')
wmsPeakConnectedPlayers = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsPeakConnectedPlayers.setStatus('current')
wmsPeakOutDistAllocBandwidthKbps = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsPeakOutDistAllocBandwidthKbps.setStatus('current')
wmsPeakOutDistConnections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsPeakOutDistConnections.setStatus('current')
wmsPeakOutDistSendRateKbps = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsPeakOutDistSendRateKbps.setStatus('current')
wmsPeakPlayerAllocBandwidthKbps = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsPeakPlayerAllocBandwidthKbps.setStatus('current')
wmsPeakPlayerSendRateKbps = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsPeakPlayerSendRateKbps.setStatus('current')
wmsPeakStreamingPlayers = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsPeakStreamingPlayers.setStatus('current')
wmsTotalAdvertisements = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsTotalAdvertisements.setStatus('current')
wmsTotalConnectedPlayers = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsTotalConnectedPlayers.setStatus('current')
wmsTotalLateReads = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsTotalLateReads.setStatus('current')
wmsTotalLateSends = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsTotalLateSends.setStatus('current')
wmsTotalOutDistBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsTotalOutDistBytesSent.setStatus('current')
wmsTotalOutDistConnections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsTotalOutDistConnections.setStatus('current')
wmsTotalPlayerBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsTotalPlayerBytesSent.setStatus('current')
wmsTotalServerUptime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsTotalServerUptime.setStatus('current')
wmsTotalStreamDenials = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsTotalStreamDenials.setStatus('current')
wmsTotalStreamErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsTotalStreamErrors.setStatus('current')
wmsTotalStreamTerminations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsTotalStreamTerminations.setStatus('current')
wmsTotalStreamingPlayers = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsTotalStreamingPlayers.setStatus('current')
wmsTotalUDPResendRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsTotalUDPResendRequests.setStatus('current')
wmsTotalUDPResendsSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 88, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsTotalUDPResendsSent.setStatus('current')
windowsMediaPublishingPointTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89), )
if mibBuilder.loadTexts: windowsMediaPublishingPointTable.setStatus('current')
windowsMediaPublishingPointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1), ).setIndexNames((0, "INFORMANT-ADV", "wmppInstance"))
if mibBuilder.loadTexts: windowsMediaPublishingPointEntry.setStatus('current')
wmppInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppInstance.setStatus('current')
wmppCurConnectedPlayers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppCurConnectedPlayers.setStatus('current')
wmppCurFileReadRateKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppCurFileReadRateKbps.setStatus('current')
wmppCurLateReadRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppCurLateReadRate.setStatus('current')
wmppCurOutDistAllocBandwidthKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppCurOutDistAllocBandwidthKbps.setStatus('current')
wmppCurOutDistConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppCurOutDistConnections.setStatus('current')
wmppCurPlayerAllocBandwidthKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppCurPlayerAllocBandwidthKbps.setStatus('current')
wmppCurStreamErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppCurStreamErrorRate.setStatus('current')
wmppCurStreamingHTTPPlayers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppCurStreamingHTTPPlayers.setStatus('current')
wmppCurStreamingMMSPlayers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppCurStreamingMMSPlayers.setStatus('current')
wmppCurStreamingPlayers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppCurStreamingPlayers.setStatus('current')
wmppCurStreamingRTSPPlayers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppCurStreamingRTSPPlayers.setStatus('current')
wmppPeakConnectedPlayers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppPeakConnectedPlayers.setStatus('current')
wmppPeakOutDistAllocBandwdthKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppPeakOutDistAllocBandwdthKbps.setStatus('current')
wmppPeakOutDistConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppPeakOutDistConnections.setStatus('current')
wmppPeakPlayerAllocBandwidthKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppPeakPlayerAllocBandwidthKbps.setStatus('current')
wmppPeakStreamingPlayers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppPeakStreamingPlayers.setStatus('current')
wmppTotalAdvertisements = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppTotalAdvertisements.setStatus('current')
wmppTotalConnectedPlayers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppTotalConnectedPlayers.setStatus('current')
wmppTotalFileBytesRead = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppTotalFileBytesRead.setStatus('current')
wmppTotalLateReads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppTotalLateReads.setStatus('current')
wmppTotalOutDistBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppTotalOutDistBytesSent.setStatus('current')
wmppTotalOutDistConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppTotalOutDistConnections.setStatus('current')
wmppTotalPlayerBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppTotalPlayerBytesSent.setStatus('current')
wmppTotalStreamDenials = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppTotalStreamDenials.setStatus('current')
wmppTotalStreamErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppTotalStreamErrors.setStatus('current')
wmppTotalStreamTerminations = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppTotalStreamTerminations.setStatus('current')
wmppTotalStreamingPlayers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 89, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmppTotalStreamingPlayers.setStatus('current')
windowsMediaStationService = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 90))
if mibBuilder.loadTexts: windowsMediaStationService.setStatus('current')
wmssControllers = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 90, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmssControllers.setStatus('current')
wmssStations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 90, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmssStations.setStatus('current')
wmssStreams = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 90, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmssStreams.setStatus('current')
windowsMediaUnicastService = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91))
if mibBuilder.loadTexts: windowsMediaUnicastService.setStatus('current')
wmusActiveLiveUnicastStreams = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusActiveLiveUnicastStreams.setStatus('current')
wmusActiveStreams = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusActiveStreams.setStatus('current')
wmusActiveTCPStreams = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusActiveTCPStreams.setStatus('current')
wmusActiveUDPStreams = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusActiveUDPStreams.setStatus('current')
wmusAggregateReadRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusAggregateReadRate.setStatus('current')
wmusAggregateSendRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusAggregateSendRate.setStatus('current')
wmusAllocatedBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusAllocatedBandwidth.setStatus('current')
wmusAuthenticationRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusAuthenticationRequests.setStatus('current')
wmusAuthenticationsDenied = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusAuthenticationsDenied.setStatus('current')
wmusAuthorizationRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusAuthorizationRequests.setStatus('current')
wmusAuthorizationsRefused = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusAuthorizationsRefused.setStatus('current')
wmusConnectedClients = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusConnectedClients.setStatus('current')
wmusConnectionRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusConnectionRate.setStatus('current')
wmusHTTPStreams = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusHTTPStreams.setStatus('current')
wmusHTTPStreamsReadingHeader = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusHTTPStreamsReadingHeader.setStatus('current')
wmusHTTPStreamsStreamingBody = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusHTTPStreamsStreamingBody.setStatus('current')
wmusLateReads = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusLateReads.setStatus('current')
wmusPendingConnections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusPendingConnections.setStatus('current')
wmusPluginErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusPluginErrors.setStatus('current')
wmusPluginEvents = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusPluginEvents.setStatus('current')
wmusSchedulingRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusSchedulingRate.setStatus('current')
wmusStreamErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusStreamErrors.setStatus('current')
wmusStreamTerminations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusStreamTerminations.setStatus('current')
wmusUDPResendRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusUDPResendRequests.setStatus('current')
wmusUDPResendsSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 91, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmusUDPResendsSent.setStatus('current')
winsServer = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 92))
winsSrvrFailedQueriesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsSrvrFailedQueriesPerSec.setStatus('current')
winsSrvrFailedReleasesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsSrvrFailedReleasesPerSec.setStatus('current')
winsSrvrGroupConflictsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsSrvrGroupConflictsPerSec.setStatus('current')
winsSrvrGroupRegsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsSrvrGroupRegsPerSec.setStatus('current')
winsSrvrGroupRenewalsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsSrvrGroupRenewalsPerSec.setStatus('current')
winsSrvrQueriesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsSrvrQueriesPerSec.setStatus('current')
winsSrvrReleasesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsSrvrReleasesPerSec.setStatus('current')
winsSrvrSuccessfulQueriesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsSrvrSuccessfulQueriesPerSec.setStatus('current')
winsSrvrSuccessfulReleasesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsSrvrSuccessfulReleasesPerSec.setStatus('current')
winsSrvrTotalNumConflictsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsSrvrTotalNumConflictsPerSec.setStatus('current')
winsSrvrTotalNumRegsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsSrvrTotalNumRegsPerSec.setStatus('current')
winsSrvrTotalNumRenewalsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsSrvrTotalNumRenewalsPerSec.setStatus('current')
winsSrvrUniqueConflictsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsSrvrUniqueConflictsPerSec.setStatus('current')
winsSrvrUniqueRegsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsSrvrUniqueRegsPerSec.setStatus('current')
winsSrvrUniqueRenewalsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 92, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsSrvrUniqueRenewalsPerSec.setStatus('current')
wmiObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 93))
if mibBuilder.loadTexts: wmiObjects.setStatus('current')
wmiObjectsHiPerfClasses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 93, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmiObjectsHiPerfClasses.setStatus('current')
wmiObjectsHiPerfValidity = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 93, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmiObjectsHiPerfValidity.setStatus('current')
bitsNetUtilization = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 94))
if mibBuilder.loadTexts: bitsNetUtilization.setStatus('current')
bnuBITSDownloadBlockSizeBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 94, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnuBITSDownloadBlockSizeBytes.setStatus('current')
bnuBITSDownloadResponseIntvlMsec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 94, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnuBITSDownloadResponseIntvlMsec.setStatus('current')
bnuEstBWAvailRemoteBitsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 94, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnuEstBWAvailRemoteBitsPerSec.setStatus('current')
bnuIGDSpeedBitsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 94, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnuIGDSpeedBitsPerSec.setStatus('current')
bnuNetcardSpeedBitsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 94, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnuNetcardSpeedBitsPerSec.setStatus('current')
bnuPercentIGDFree = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 94, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnuPercentIGDFree.setStatus('current')
bnuPercentNetcardFree = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 94, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnuPercentNetcardFree.setStatus('current')
bnuRemoteServerSpeedBitsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 94, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bnuRemoteServerSpeedBitsPerSec.setStatus('current')
advDatabaseTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95), )
if mibBuilder.loadTexts: advDatabaseTable.setStatus('current')
advDatabaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1), ).setIndexNames((0, "INFORMANT-ADV", "adbInstance"))
if mibBuilder.loadTexts: advDatabaseEntry.setStatus('current')
adbInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbInstance.setStatus('current')
adbDatabaseCachePercentHit = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbDatabaseCachePercentHit.setStatus('current')
adbDatabaseCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbDatabaseCacheSize.setStatus('current')
adbDatabaseCacheSizeMB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbDatabaseCacheSizeMB.setStatus('current')
adbDatabasePageEvictionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbDatabasePageEvictionsPerSec.setStatus('current')
adbDatabasePageFaultStallsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbDatabasePageFaultStallsPerSec.setStatus('current')
adbDatabasePageFaultsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbDatabasePageFaultsPerSec.setStatus('current')
adbIPerODatabaseReadsAvgLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbIPerODatabaseReadsAvgLatency.setStatus('current')
adbIPerODatabaseReadsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbIPerODatabaseReadsPerSec.setStatus('current')
adbIPerODatabaseWritesAvgLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbIPerODatabaseWritesAvgLatency.setStatus('current')
adbIPerODatabaseWritesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbIPerODatabaseWritesPerSec.setStatus('current')
adbIPerOLogReadsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbIPerOLogReadsPerSec.setStatus('current')
adbIPerOLogWritesAverageLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbIPerOLogWritesAverageLatency.setStatus('current')
adbIPerOLogWritesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbIPerOLogWritesPerSec.setStatus('current')
adbLogBytesWritePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbLogBytesWritePerSec.setStatus('current')
adbLogRecordStallsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbLogRecordStallsPerSec.setStatus('current')
adbLogThreadsWaiting = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbLogThreadsWaiting.setStatus('current')
adbLogWritesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbLogWritesPerSec.setStatus('current')
adbPagesConverted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbPagesConverted.setStatus('current')
adbPagesConvertedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbPagesConvertedPerSec.setStatus('current')
adbRecordsConverted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbRecordsConverted.setStatus('current')
adbRecordsConvertedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbRecordsConvertedPerSec.setStatus('current')
adbSessionsPercentUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbSessionsPercentUsed.setStatus('current')
adbSessionsInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbSessionsInUse.setStatus('current')
adbTableOpenCachePercentHit = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbTableOpenCachePercentHit.setStatus('current')
adbTableOpenCacheHitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbTableOpenCacheHitsPerSec.setStatus('current')
adbTableOpenCacheMissesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbTableOpenCacheMissesPerSec.setStatus('current')
adbTableOpensPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbTableOpensPerSec.setStatus('current')
adbVersionBucketsAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 95, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbVersionBucketsAllocated.setStatus('current')
advDatabaseInstancesTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96), )
if mibBuilder.loadTexts: advDatabaseInstancesTable.setStatus('current')
advDatabaseInstancesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1), ).setIndexNames((0, "INFORMANT-ADV", "adbiInstance"))
if mibBuilder.loadTexts: advDatabaseInstancesEntry.setStatus('current')
adbiInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiInstance.setStatus('current')
adbIODatabaseReadsAverageLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbIODatabaseReadsAverageLatency.setStatus('current')
adbIODatabaseReadsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbIODatabaseReadsPerSec.setStatus('current')
adbIODatabaseWriteAverageLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbIODatabaseWriteAverageLatency.setStatus('current')
adbIODatabaseWritesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbIODatabaseWritesPerSec.setStatus('current')
adbIOLogReadsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbIOLogReadsPerSec.setStatus('current')
adbIOLogWritesAverageLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbIOLogWritesAverageLatency.setStatus('current')
adbIOLogWritesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbIOLogWritesPerSec.setStatus('current')
adbiLogBytesWritePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiLogBytesWritePerSec.setStatus('current')
adbiLogGenCheckpointDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiLogGenCheckpointDepth.setStatus('current')
adbiLogGenCheckpointDepthMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiLogGenCheckpointDepthMax.setStatus('current')
adbiLogGenLossResiliencyDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiLogGenLossResiliencyDepth.setStatus('current')
adbiLogRecordStallsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiLogRecordStallsPerSec.setStatus('current')
adbiLogThreadsWaiting = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiLogThreadsWaiting.setStatus('current')
adbiLogWritesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiLogWritesPerSec.setStatus('current')
adbiPagesConverted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiPagesConverted.setStatus('current')
adbiPagesConvertedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiPagesConvertedPerSec.setStatus('current')
adbiRecordsConverted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiRecordsConverted.setStatus('current')
adbiRecordsConvertedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiRecordsConvertedPerSec.setStatus('current')
adbiSessionsPercentUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiSessionsPercentUsed.setStatus('current')
adbiSessionsInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiSessionsInUse.setStatus('current')
adbiStreamBackupPagesReadPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiStreamBackupPagesReadPerSec.setStatus('current')
adbiTableOpenCachePercentHit = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiTableOpenCachePercentHit.setStatus('current')
adbiTableOpenCacheHitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiTableOpenCacheHitsPerSec.setStatus('current')
adbiTableOpenCacheMissesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiTableOpenCacheMissesPerSec.setStatus('current')
adbiTableOpensPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiTableOpensPerSec.setStatus('current')
adbiVersionBucketsAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 96, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbiVersionBucketsAllocated.setStatus('current')
advDatabaseTableClassesTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 97), )
if mibBuilder.loadTexts: advDatabaseTableClassesTable.setStatus('current')
advDatabaseTableClassesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 97, 1), ).setIndexNames((0, "INFORMANT-ADV", "adbtcInstance"))
if mibBuilder.loadTexts: advDatabaseTableClassesEntry.setStatus('current')
adbtcInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 97, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbtcInstance.setStatus('current')
adbtcCacheSizeMB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 97, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adbtcCacheSizeMB.setStatus('current')
genericIKEAndAuthIP = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 98))
if mibBuilder.loadTexts: genericIKEAndAuthIP.setStatus('current')
giaipAuthIPMainModeNegotTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: giaipAuthIPMainModeNegotTime.setStatus('current')
giaipAuthIPQuickModeNegotTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: giaipAuthIPQuickModeNegotTime.setStatus('current')
giaipExtendedModeNegotiationTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: giaipExtendedModeNegotiationTime.setStatus('current')
giaipFailedNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: giaipFailedNegotiations.setStatus('current')
giaipFailedNegotiationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: giaipFailedNegotiationsPerSec.setStatus('current')
giaipIKEMainModeNegotiationTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: giaipIKEMainModeNegotiationTime.setStatus('current')
giaipIKEQuickModeNegotiationTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: giaipIKEQuickModeNegotiationTime.setStatus('current')
giaipInvalidPacketReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: giaipInvalidPacketReceivedPerSec.setStatus('current')
giaipPacketsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: giaipPacketsReceivedPerSec.setStatus('current')
giaipSuccessfulNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: giaipSuccessfulNegotiations.setStatus('current')
giaipSuccessfulNegotiationPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 98, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: giaipSuccessfulNegotiationPerSec.setStatus('current')
httpService = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 99))
if mibBuilder.loadTexts: httpService.setStatus('current')
httpServiceCurrentUrisCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 99, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpServiceCurrentUrisCached.setStatus('current')
httpServiceTotalFlushedUris = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 99, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpServiceTotalFlushedUris.setStatus('current')
httpServiceTotalUrisCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 99, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpServiceTotalUrisCached.setStatus('current')
httpServiceUriCacheFlushes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 99, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpServiceUriCacheFlushes.setStatus('current')
httpServiceUriCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 99, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpServiceUriCacheHits.setStatus('current')
httpServiceUriCacheMisses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 99, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpServiceUriCacheMisses.setStatus('current')
httpServiceRequestQueuesTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 100), )
if mibBuilder.loadTexts: httpServiceRequestQueuesTable.setStatus('current')
httpServiceRequestQueuesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 100, 1), ).setIndexNames((0, "INFORMANT-ADV", "httpsrqInstance"))
if mibBuilder.loadTexts: httpServiceRequestQueuesEntry.setStatus('current')
httpsrqInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 100, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpsrqInstance.setStatus('current')
httpsrqArrivalRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 100, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpsrqArrivalRate.setStatus('current')
httpsrqCacheHitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 100, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpsrqCacheHitRate.setStatus('current')
httpsrqCurrentQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 100, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpsrqCurrentQueueSize.setStatus('current')
httpsrqMaxQueueItemAge = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 100, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpsrqMaxQueueItemAge.setStatus('current')
httpsrqRejectedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 100, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpsrqRejectedRequests.setStatus('current')
httpsrqRejectionRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 100, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpsrqRejectionRate.setStatus('current')
httpServiceUrlGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 101), )
if mibBuilder.loadTexts: httpServiceUrlGroupsTable.setStatus('current')
httpServiceUrlGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1), ).setIndexNames((0, "INFORMANT-ADV", "httpsugInstance"))
if mibBuilder.loadTexts: httpServiceUrlGroupsEntry.setStatus('current')
httpsugInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpsugInstance.setStatus('current')
httpsugAllRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpsugAllRequests.setStatus('current')
httpsugBytesReceivedRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpsugBytesReceivedRate.setStatus('current')
httpsugBytesSentRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpsugBytesSentRate.setStatus('current')
httpsugBytesTransferredRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpsugBytesTransferredRate.setStatus('current')
httpsugConnectionAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpsugConnectionAttempts.setStatus('current')
httpsugCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpsugCurrentConnections.setStatus('current')
httpsugGetRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpsugGetRequests.setStatus('current')
httpsugHeadRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpsugHeadRequests.setStatus('current')
httpsugMaxConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 101, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: httpsugMaxConnections.setStatus('current')
securityPerProcessStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 102), )
if mibBuilder.loadTexts: securityPerProcessStatisticTable.setStatus('current')
securityPerProcessStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 102, 1), ).setIndexNames((0, "INFORMANT-ADV", "sppsInstance"))
if mibBuilder.loadTexts: securityPerProcessStatisticEntry.setStatus('current')
sppsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 102, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sppsInstance.setStatus('current')
sppsContextHandles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 102, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sppsContextHandles.setStatus('current')
sppsCredentialHandles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 102, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sppsCredentialHandles.setStatus('current')
securitySystemWideStatistics = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 103))
if mibBuilder.loadTexts: securitySystemWideStatistics.setStatus('current')
sswsActiveSChannelSessionCache = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sswsActiveSChannelSessionCache.setStatus('current')
sswsDigestAuthentications = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sswsDigestAuthentications.setStatus('current')
sswsKDCASRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sswsKDCASRequests.setStatus('current')
sswsKDCTGSRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sswsKDCTGSRequests.setStatus('current')
sswsKerberosAuthentications = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sswsKerberosAuthentications.setStatus('current')
sswsNTLMAuthentications = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sswsNTLMAuthentications.setStatus('current')
sswsSSLClientSideFullHandshakes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sswsSSLClientSideFullHandshakes.setStatus('current')
sswsSSLClientSideReconHandshakes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sswsSSLClientSideReconHandshakes.setStatus('current')
sswsSSLServerSideFullHandshakes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sswsSSLServerSideFullHandshakes.setStatus('current')
sswsSSLServerSideReconHandshakes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sswsSSLServerSideReconHandshakes.setStatus('current')
sswsSchannelSessionCacheEntries = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 103, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sswsSchannelSessionCacheEntries.setStatus('current')
usbTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104), )
if mibBuilder.loadTexts: usbTable.setStatus('current')
usbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1), ).setIndexNames((0, "INFORMANT-ADV", "usbInstance"))
if mibBuilder.loadTexts: usbEntry.setStatus('current')
usbInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbInstance.setStatus('current')
usbPercentTotalBWUsedInterrupt = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbPercentTotalBWUsedInterrupt.setStatus('current')
usbPercentTotalBWUseIsoTransfers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbPercentTotalBWUseIsoTransfers.setStatus('current')
usbAvgMsLatencyForISOTransfers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbAvgMsLatencyForISOTransfers.setStatus('current')
usbAvgBytesPerTransfer = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbAvgBytesPerTransfer.setStatus('current')
usbBulkBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbBulkBytesPerSec.setStatus('current')
usbControlDataBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbControlDataBytesPerSec.setStatus('current')
usbControllerPCIInterruptsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbControllerPCIInterruptsPerSec.setStatus('current')
usbControllerWorkSignalsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbControllerWorkSignalsPerSec.setStatus('current')
usbHostControlAsyncCacheFlush = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbHostControlAsyncCacheFlush.setStatus('current')
usbHostControllerAsyncIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbHostControllerAsyncIdle.setStatus('current')
usbHostControllerIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbHostControllerIdle.setStatus('current')
usbHostControllerPerdiodicIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbHostControllerPerdiodicIdle.setStatus('current')
usbHostControlPeriodicCacheFlush = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbHostControlPeriodicCacheFlush.setStatus('current')
usbInterruptBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbInterruptBytesPerSec.setStatus('current')
usbIsoPacketErrorsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbIsoPacketErrorsPerSec.setStatus('current')
usbIsochronousBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbIsochronousBytesPerSec.setStatus('current')
usbTransferErrorsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 104, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usbTransferErrorsPerSec.setStatus('current')
videoSchedulerTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 105), )
if mibBuilder.loadTexts: videoSchedulerTable.setStatus('current')
videoSchedulerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 105, 1), ).setIndexNames((0, "INFORMANT-ADV", "vschdInstance"))
if mibBuilder.loadTexts: videoSchedulerEntry.setStatus('current')
vschdInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 105, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vschdInstance.setStatus('current')
vschdPercentGPUBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 105, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vschdPercentGPUBusy.setStatus('current')
vschdDMABufferCompletedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 105, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vschdDMABufferCompletedPerSec.setStatus('current')
vschdDMABufferPreemptedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 105, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vschdDMABufferPreemptedPerSec.setStatus('current')
vschdDMABufferSubmittedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 105, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vschdDMABufferSubmittedPerSec.setStatus('current')
vschdGPUContext = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 105, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vschdGPUContext.setStatus('current')
vschdGPUContextSwitchPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 105, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vschdGPUContextSwitchPerSec.setStatus('current')
vschdPresentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 105, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vschdPresentPerSec.setStatus('current')
wFP = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 106))
wFPProviderCount = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 106, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPProviderCount.setStatus('current')
wFPv4 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 107))
if mibBuilder.loadTexts: wFPv4.setStatus('current')
wFPv4ActiveInConnections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv4ActiveInConnections.setStatus('current')
wFPv4ActiveOutConnections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv4ActiveOutConnections.setStatus('current')
wFPv4AllowedClassifiesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv4AllowedClassifiesPerSec.setStatus('current')
wFPv4BlockedBinds = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv4BlockedBinds.setStatus('current')
wFPv4InConnections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv4InConnections.setStatus('current')
wFPv4InConnectionsAllowedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv4InConnectionsAllowedPerSec.setStatus('current')
wFPv4InConnectionsBlockedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv4InConnectionsBlockedPerSec.setStatus('current')
wFPv4InPacketsDiscardedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv4InPacketsDiscardedPerSec.setStatus('current')
wFPv4OutConnections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv4OutConnections.setStatus('current')
wFPv4OutConnectionsAllowedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv4OutConnectionsAllowedPerSec.setStatus('current')
wFPv4OutConnectionsBlockedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv4OutConnectionsBlockedPerSec.setStatus('current')
wFPv4OutPacketsDiscardedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv4OutPacketsDiscardedPerSec.setStatus('current')
wFPv4PacketsDiscardedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 107, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv4PacketsDiscardedPerSec.setStatus('current')
wFPv6 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 108))
if mibBuilder.loadTexts: wFPv6.setStatus('current')
wFPv6ActiveInConnections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv6ActiveInConnections.setStatus('current')
wFPv6ActiveOutConnections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv6ActiveOutConnections.setStatus('current')
wFPv6AllowedClassifiesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv6AllowedClassifiesPerSec.setStatus('current')
wFPv6BlockedBinds = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv6BlockedBinds.setStatus('current')
wFPv6InConnections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv6InConnections.setStatus('current')
wFPv6InConnectionsAllowedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv6InConnectionsAllowedPerSec.setStatus('current')
wFPv6InConnectionsBlockedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv6InConnectionsBlockedPerSec.setStatus('current')
wFPv6InPacketsDiscardedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv6InPacketsDiscardedPerSec.setStatus('current')
wFPv6OutConnections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv6OutConnections.setStatus('current')
wFPv6OutConnectionsAllowedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv6OutConnectionsAllowedPerSec.setStatus('current')
wFPv6OutConnectionsBlockedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv6OutConnectionsBlockedPerSec.setStatus('current')
wFPv6OutPacketsDiscardedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv6OutPacketsDiscardedPerSec.setStatus('current')
wFPv6PacketsDiscardedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 108, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wFPv6PacketsDiscardedPerSec.setStatus('current')
windowsWorkflowFoundationTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109), )
if mibBuilder.loadTexts: windowsWorkflowFoundationTable.setStatus('current')
windowsWorkflowFoundationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1), ).setIndexNames((0, "INFORMANT-ADV", "wwfInstance"))
if mibBuilder.loadTexts: windowsWorkflowFoundationEntry.setStatus('current')
wwfInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfInstance.setStatus('current')
wwfWorkflowsAborted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsAborted.setStatus('current')
wwfWorkflowsAbortedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsAbortedPerSec.setStatus('current')
wwfWorkflowsCompleted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsCompleted.setStatus('current')
wwfWorkflowsCompletedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsCompletedPerSec.setStatus('current')
wwfWorkflowsCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsCreated.setStatus('current')
wwfWorkflowsCreatedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsCreatedPerSec.setStatus('current')
wwfWorkflowsExecuting = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsExecuting.setStatus('current')
wwfWorkflowsIdlePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsIdlePerSec.setStatus('current')
wwfWorkflowsInMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsInMemory.setStatus('current')
wwfWorkflowsLoaded = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsLoaded.setStatus('current')
wwfWorkflowsLoadedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsLoadedPerSec.setStatus('current')
wwfWorkflowsPending = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsPending.setStatus('current')
wwfWorkflowsPersisted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsPersisted.setStatus('current')
wwfWorkflowsPersistedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsPersistedPerSec.setStatus('current')
wwfWorkflowsRunnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsRunnable.setStatus('current')
wwfWorkflowsSuspended = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsSuspended.setStatus('current')
wwfWorkflowsSuspendedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsSuspendedPerSec.setStatus('current')
wwfWorkflowsTerminated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsTerminated.setStatus('current')
wwfWorkflowsTerminatedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsTerminatedPerSec.setStatus('current')
wwfWorkflowsUnloaded = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsUnloaded.setStatus('current')
wwfWorkflowsUnloadedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 109, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwfWorkflowsUnloadedPerSec.setStatus('current')
iSCSIInitiatorInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 110), )
if mibBuilder.loadTexts: iSCSIInitiatorInstanceTable.setStatus('current')
iSCSIInitiatorInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 110, 1), ).setIndexNames((0, "INFORMANT-ADV", "iscsiInstance"))
if mibBuilder.loadTexts: iSCSIInitiatorInstanceEntry.setStatus('current')
iscsiInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 110, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iscsiInstance.setStatus('current')
iscsiSessionCxnTimeoutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 110, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iscsiSessionCxnTimeoutErrors.setStatus('current')
iscsiSessionDigestErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 110, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iscsiSessionDigestErrors.setStatus('current')
iscsiSessionFormatErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 110, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iscsiSessionFormatErrors.setStatus('current')
iscsiSessionsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 110, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iscsiSessionsFailed.setStatus('current')
dtcBridge3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 111))
if mibBuilder.loadTexts: dtcBridge3.setStatus('current')
dtcb3AvgParticipantCmtRspnsTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 111, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcb3AvgParticipantCmtRspnsTime.setStatus('current')
dtcb3AvgParticipantPrepRspnsTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 111, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcb3AvgParticipantPrepRspnsTime.setStatus('current')
dtcb3CommitRetryCountPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 111, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcb3CommitRetryCountPerSec.setStatus('current')
dtcb3FaultsReceivedCountPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 111, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcb3FaultsReceivedCountPerSec.setStatus('current')
dtcb3FaultsSentCountPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 111, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcb3FaultsSentCountPerSec.setStatus('current')
dtcb3MessageSendFailuresPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 111, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcb3MessageSendFailuresPerSec.setStatus('current')
dtcb3PrepareRetryCountPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 111, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcb3PrepareRetryCountPerSec.setStatus('current')
dtcb3PreparedRetryCountPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 111, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcb3PreparedRetryCountPerSec.setStatus('current')
dtcb3ReplayRetryCountPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 111, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dtcb3ReplayRetryCountPerSec.setStatus('current')
serviceModelEndpoint3Table = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112), )
if mibBuilder.loadTexts: serviceModelEndpoint3Table.setStatus('current')
serviceModelEndpoint3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1), ).setIndexNames((0, "INFORMANT-ADV", "sme3Instance"))
if mibBuilder.loadTexts: serviceModelEndpoint3Entry.setStatus('current')
sme3Instance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3Instance.setStatus('current')
sme3Calls = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3Calls.setStatus('current')
sme3CallsDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3CallsDuration.setStatus('current')
sme3CallsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3CallsFailed.setStatus('current')
sme3CallsFailedPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3CallsFailedPerSecond.setStatus('current')
sme3CallsFaulted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3CallsFaulted.setStatus('current')
sme3CallsFaultedPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3CallsFaultedPerSecond.setStatus('current')
sme3CallsOutstanding = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3CallsOutstanding.setStatus('current')
sme3CallsPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3CallsPerSecond.setStatus('current')
sme3ReliableMessagesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3ReliableMessagesDropped.setStatus('current')
sme3ReliableMessagesDropPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3ReliableMessagesDropPerSec.setStatus('current')
sme3ReliableSessionsFaulted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3ReliableSessionsFaulted.setStatus('current')
sme3ReliableSessionsFaultPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3ReliableSessionsFaultPerSec.setStatus('current')
sme3CallsNotAuthorized = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3CallsNotAuthorized.setStatus('current')
sme3CallsNotAuthorizedPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3CallsNotAuthorizedPerSecond.setStatus('current')
sme3ValidationAuthFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3ValidationAuthFail.setStatus('current')
sme3ValidationAuthFailPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3ValidationAuthFailPerSec.setStatus('current')
sme3TransactionsFlowed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3TransactionsFlowed.setStatus('current')
sme3TransactionsFlowedPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 112, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sme3TransactionsFlowedPerSecond.setStatus('current')
serviceModelOperation3Table = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 113), )
if mibBuilder.loadTexts: serviceModelOperation3Table.setStatus('current')
serviceModelOperation3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1), ).setIndexNames((0, "INFORMANT-ADV", "smo3Instance"))
if mibBuilder.loadTexts: serviceModelOperation3Entry.setStatus('current')
smo3Instance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smo3Instance.setStatus('current')
smo3CallFailedPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smo3CallFailedPerSecond.setStatus('current')
smo3Calls = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smo3Calls.setStatus('current')
smo3CallsDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smo3CallsDuration.setStatus('current')
smo3CallsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smo3CallsFailed.setStatus('current')
smo3CallsFaulted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smo3CallsFaulted.setStatus('current')
smo3CallsFaultedPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smo3CallsFaultedPerSecond.setStatus('current')
smo3CallsOutstanding = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smo3CallsOutstanding.setStatus('current')
smo3CallsPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smo3CallsPerSecond.setStatus('current')
smo3CallsNotAuthorized = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smo3CallsNotAuthorized.setStatus('current')
smo3CallsNotAuthorizedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smo3CallsNotAuthorizedPerSec.setStatus('current')
smo3ValidationAuthFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smo3ValidationAuthFail.setStatus('current')
smo3ValidationAuthFailPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smo3ValidationAuthFailPerSec.setStatus('current')
smo3TransactionsFlowed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smo3TransactionsFlowed.setStatus('current')
smo3TransactionsFlowedPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 113, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smo3TransactionsFlowedPerSecond.setStatus('current')
serviceModelService3Table = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114), )
if mibBuilder.loadTexts: serviceModelService3Table.setStatus('current')
serviceModelService3Entry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1), ).setIndexNames((0, "INFORMANT-ADV", "sms3Instance"))
if mibBuilder.loadTexts: serviceModelService3Entry.setStatus('current')
sms3Instance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3Instance.setStatus('current')
sms3Calls = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3Calls.setStatus('current')
sms3CallsDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3CallsDuration.setStatus('current')
sms3CallsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3CallsFailed.setStatus('current')
sms3CallsFailedPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3CallsFailedPerSecond.setStatus('current')
sms3CallsFaulted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3CallsFaulted.setStatus('current')
sms3CallsFaultedPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3CallsFaultedPerSecond.setStatus('current')
sms3CallsOutstanding = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3CallsOutstanding.setStatus('current')
sms3CallsPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3CallsPerSecond.setStatus('current')
sms3Instances = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3Instances.setStatus('current')
sms3InstancesCreatedPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3InstancesCreatedPerSecond.setStatus('current')
sms3QueuedMessagesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3QueuedMessagesDropped.setStatus('current')
sms3QueuedMessagesDroppedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3QueuedMessagesDroppedPerSec.setStatus('current')
sms3QueuedMessagesRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3QueuedMessagesRejected.setStatus('current')
sms3QueuedMessagesRejectedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3QueuedMessagesRejectedPerSec.setStatus('current')
sms3QueuedPoisonMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3QueuedPoisonMessages.setStatus('current')
sms3QueuedPoisonMessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3QueuedPoisonMessagesPerSec.setStatus('current')
sms3ReliableMessagesDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3ReliableMessagesDrop.setStatus('current')
sms3ReliableMessagesDropPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3ReliableMessagesDropPerSec.setStatus('current')
sms3ReliableSessionsFaulted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3ReliableSessionsFaulted.setStatus('current')
sms3ReliableSessionFaultedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3ReliableSessionFaultedPerSec.setStatus('current')
sms3CallsNotAuthorized = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3CallsNotAuthorized.setStatus('current')
sms3CallsNotAuthorizedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3CallsNotAuthorizedPerSec.setStatus('current')
sms3ValidationAuthFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3ValidationAuthFail.setStatus('current')
sms3ValidationAuthFailPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3ValidationAuthFailPerSec.setStatus('current')
sms3TransactedOpsAborted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3TransactedOpsAborted.setStatus('current')
sms3TransactedOpsAbortedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3TransactedOpsAbortedPerSec.setStatus('current')
sms3TransactedOpsCommit = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3TransactedOpsCommit.setStatus('current')
sms3TransactedOpsCommitPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3TransactedOpsCommitPerSec.setStatus('current')
sms3TransactedOpsInDoubt = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3TransactedOpsInDoubt.setStatus('current')
sms3TransactedOpsInDoubtPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3TransactedOpsInDoubtPerSec.setStatus('current')
sms3TransactionsFlowed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3TransactionsFlowed.setStatus('current')
sms3TransactionsFlowedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 114, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sms3TransactionsFlowedPerSec.setStatus('current')
svcHost3 = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 115))
if mibBuilder.loadTexts: svcHost3.setStatus('current')
smsh3ConnsAcceptedOverNetPipe = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smsh3ConnsAcceptedOverNetPipe.setStatus('current')
smsh3ConnsAcceptedOverNetTcp = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smsh3ConnsAcceptedOverNetTcp.setStatus('current')
smsh3ConnsDispatchedOverNetPipe = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smsh3ConnsDispatchedOverNetPipe.setStatus('current')
smsh3ConnsDispatchedOverNetTcp = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smsh3ConnsDispatchedOverNetTcp.setStatus('current')
smsh3DispatchFailuresOverNetPipe = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smsh3DispatchFailuresOverNetPipe.setStatus('current')
smsh3DispatchFailuresOverNetTcp = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smsh3DispatchFailuresOverNetTcp.setStatus('current')
smsh3ProtocolFailuresOverNetPipe = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smsh3ProtocolFailuresOverNetPipe.setStatus('current')
smsh3ProtocolFailuresOverNetTcp = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smsh3ProtocolFailuresOverNetTcp.setStatus('current')
smsh3RegActiveForNetPipe = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smsh3RegActiveForNetPipe.setStatus('current')
smsh3RegActiveForNetTcp = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smsh3RegActiveForNetTcp.setStatus('current')
smsh3UrisRegisteredForNetPipe = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smsh3UrisRegisteredForNetPipe.setStatus('current')
smsh3UrisRegisteredForNetTcp = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smsh3UrisRegisteredForNetTcp.setStatus('current')
smsh3UrisUnregisteredForNetPipe = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smsh3UrisUnregisteredForNetPipe.setStatus('current')
smsh3UrisUnregisteredForNetTcp = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 115, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: smsh3UrisUnregisteredForNetTcp.setStatus('current')
aspDotNETv1 = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 116))
adn1ApplicationRestarts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn1ApplicationRestarts.setStatus('current')
adn1ApplicationsRunning = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn1ApplicationsRunning.setStatus('current')
adn1RequestExecutionTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn1RequestExecutionTime.setStatus('current')
adn1RequestWaitTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn1RequestWaitTime.setStatus('current')
adn1RequestsCurrent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn1RequestsCurrent.setStatus('current')
adn1RequestsDisconnected = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn1RequestsDisconnected.setStatus('current')
adn1RequestsQueued = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn1RequestsQueued.setStatus('current')
adn1RequestsRejected = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn1RequestsRejected.setStatus('current')
adn1StateServerSessionsAbandoned = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn1StateServerSessionsAbandoned.setStatus('current')
adn1StateServerSessionsActive = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn1StateServerSessionsActive.setStatus('current')
adn1StateServerSessionsTimedOut = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn1StateServerSessionsTimedOut.setStatus('current')
adn1StateServerSessionsTotal = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn1StateServerSessionsTotal.setStatus('current')
adn1WorkerProcessRestarts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn1WorkerProcessRestarts.setStatus('current')
adn1WorkerProcessesRunning = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 116, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn1WorkerProcessesRunning.setStatus('current')
aspDotNETApplicationsV1Table = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117), )
if mibBuilder.loadTexts: aspDotNETApplicationsV1Table.setStatus('current')
aspDotNETApplicationsV1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1), ).setIndexNames((0, "INFORMANT-ADV", "adnAppl1Instance"))
if mibBuilder.loadTexts: aspDotNETApplicationsV1Entry.setStatus('current')
adnAppl1Instance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1Instance.setStatus('current')
adnAppl1AnonymousRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1AnonymousRequests.setStatus('current')
adnAppl1AnonymousRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1AnonymousRequestsPerSec.setStatus('current')
adnAppl1CacheAPIEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1CacheAPIEntries.setStatus('current')
adnAppl1CacheAPIHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1CacheAPIHitRatio.setStatus('current')
adnAppl1CacheAPIHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1CacheAPIHits.setStatus('current')
adnAppl1CacheAPIMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1CacheAPIMisses.setStatus('current')
adnAppl1CacheAPITurnoverRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1CacheAPITurnoverRate.setStatus('current')
adnAppl1CacheTotalEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1CacheTotalEntries.setStatus('current')
adnAppl1CacheTotalHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1CacheTotalHitRatio.setStatus('current')
adnAppl1CacheTotalHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1CacheTotalHits.setStatus('current')
adnAppl1CacheTotalMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1CacheTotalMisses.setStatus('current')
adnAppl1CacheTotalTurnoverRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1CacheTotalTurnoverRate.setStatus('current')
adnAppl1CompilationsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1CompilationsTotal.setStatus('current')
adnAppl1DebuggingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1DebuggingRequests.setStatus('current')
adnAppl1ErrorsDuringCompilation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1ErrorsDuringCompilation.setStatus('current')
adnAppl1ErrorsDuringExecution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1ErrorsDuringExecution.setStatus('current')
adnAppl1ErrorDuringPreprocessing = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1ErrorDuringPreprocessing.setStatus('current')
adnAppl1ErrorsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1ErrorsTotal.setStatus('current')
adnAppl1ErrorsTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1ErrorsTotalPerSec.setStatus('current')
adnAppl1ErrorUnhandledDuringExec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1ErrorUnhandledDuringExec.setStatus('current')
adnAppl1ErrorUnhandledExecPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1ErrorUnhandledExecPerSec.setStatus('current')
adnAppl1OutputCacheEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1OutputCacheEntries.setStatus('current')
adnAppl1OutputCacheHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1OutputCacheHitRatio.setStatus('current')
adnAppl1OutputCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1OutputCacheHits.setStatus('current')
adnAppl1OutputCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1OutputCacheMisses.setStatus('current')
adnAppl1OutputCacheTurnoverRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1OutputCacheTurnoverRate.setStatus('current')
adnAppl1PipelineInstanceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1PipelineInstanceCount.setStatus('current')
adnAppl1RequestBytesInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1RequestBytesInTotal.setStatus('current')
adnAppl1RequestBytesOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1RequestBytesOutTotal.setStatus('current')
adnAppl1RequestsExecuting = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1RequestsExecuting.setStatus('current')
adnAppl1RequestsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1RequestsFailed.setStatus('current')
adnAppl1RequestsInApplQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1RequestsInApplQueue.setStatus('current')
adnAppl1RequestsNotAuthorized = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1RequestsNotAuthorized.setStatus('current')
adnAppl1RequestsNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1RequestsNotFound.setStatus('current')
adnAppl1RequestsSucceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1RequestsSucceeded.setStatus('current')
adnAppl1RequestsTimedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1RequestsTimedOut.setStatus('current')
adnAppl1RequestsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1RequestsTotal.setStatus('current')
adnAppl1RequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1RequestsPerSec.setStatus('current')
adnAppl1SessionSQLSvrConnTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1SessionSQLSvrConnTotal.setStatus('current')
adnAppl1SessionStateSvrConnTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1SessionStateSvrConnTotal.setStatus('current')
adnAppl1SessionsAbandoned = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1SessionsAbandoned.setStatus('current')
adnAppl1SessionsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1SessionsActive.setStatus('current')
adnAppl1SessionsTimedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1SessionsTimedOut.setStatus('current')
adnAppl1SessionsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1SessionsTotal.setStatus('current')
adnAppl1TransactionsAborted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1TransactionsAborted.setStatus('current')
adnAppl1TransactionsCommitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1TransactionsCommitted.setStatus('current')
adnAppl1TransactionsPending = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1TransactionsPending.setStatus('current')
adnAppl1TransactionsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1TransactionsTotal.setStatus('current')
adnAppl1TransactionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 117, 1, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl1TransactionsPerSec.setStatus('current')
aspDotNETv2 = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118))
adn2ApplicationRestarts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2ApplicationRestarts.setStatus('current')
adn2ApplicationsRunning = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2ApplicationsRunning.setStatus('current')
adn2AuditFailureEventsRaised = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2AuditFailureEventsRaised.setStatus('current')
adn2AuditSuccessEventsRaised = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2AuditSuccessEventsRaised.setStatus('current')
adn2ErrorEventsRaised = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2ErrorEventsRaised.setStatus('current')
adn2InfraErrorEventsRaised = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2InfraErrorEventsRaised.setStatus('current')
adn2RequestErrorEventsRaised = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2RequestErrorEventsRaised.setStatus('current')
adn2RequestExecutionTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2RequestExecutionTime.setStatus('current')
adn2RequestWaitTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2RequestWaitTime.setStatus('current')
adn2RequestsCurrent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2RequestsCurrent.setStatus('current')
adn2RequestsDisconnected = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2RequestsDisconnected.setStatus('current')
adn2RequestsQueued = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2RequestsQueued.setStatus('current')
adn2RequestsRejected = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2RequestsRejected.setStatus('current')
adn2StateServerSessionsAbandoned = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2StateServerSessionsAbandoned.setStatus('current')
adn2StateServerSessionsActive = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2StateServerSessionsActive.setStatus('current')
adn2StateServerSessionsTimedOut = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2StateServerSessionsTimedOut.setStatus('current')
adn2StateServerSessionsTotal = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2StateServerSessionsTotal.setStatus('current')
adn2WorkerProcessRestarts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2WorkerProcessRestarts.setStatus('current')
adn2WorkerProcessesRunning = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 118, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adn2WorkerProcessesRunning.setStatus('current')
aspDotNETApplicationsV2Table = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119), )
if mibBuilder.loadTexts: aspDotNETApplicationsV2Table.setStatus('current')
aspDotNETApplicationsV2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1), ).setIndexNames((0, "INFORMANT-ADV", "adnAppl2Instance"))
if mibBuilder.loadTexts: aspDotNETApplicationsV2Entry.setStatus('current')
adnAppl2Instance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2Instance.setStatus('current')
adnAppl2AnonymousRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2AnonymousRequests.setStatus('current')
adnAppl2AnonymousRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2AnonymousRequestsPerSec.setStatus('current')
adnAppl2ApplLifetimeEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2ApplLifetimeEvents.setStatus('current')
adnAppl2ApplLifetimeEventsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2ApplLifetimeEventsPerSec.setStatus('current')
adnAppl2AuditFailureEventsRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2AuditFailureEventsRaised.setStatus('current')
adnAppl2AuditSuccessEventsRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2AuditSuccessEventsRaised.setStatus('current')
adnAppl2CachePctMachMemLimUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2CachePctMachMemLimUsed.setStatus('current')
adnAppl2CachePctProcMemLimUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2CachePctProcMemLimUsed.setStatus('current')
adnAppl2CacheAPIEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2CacheAPIEntries.setStatus('current')
adnAppl2CacheAPIHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2CacheAPIHitRatio.setStatus('current')
adnAppl2CacheAPIHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2CacheAPIHits.setStatus('current')
adnAppl2CacheAPIMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2CacheAPIMisses.setStatus('current')
adnAppl2CacheAPITrims = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2CacheAPITrims.setStatus('current')
adnAppl2CacheAPITurnoverRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2CacheAPITurnoverRate.setStatus('current')
adnAppl2CacheTotalEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2CacheTotalEntries.setStatus('current')
adnAppl2CacheTotalHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2CacheTotalHitRatio.setStatus('current')
adnAppl2CacheTotalHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2CacheTotalHits.setStatus('current')
adnAppl2CacheTotalMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2CacheTotalMisses.setStatus('current')
adnAppl2CacheTotalTrims = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2CacheTotalTrims.setStatus('current')
adnAppl2CacheTotalTurnoverRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2CacheTotalTurnoverRate.setStatus('current')
adnAppl2CompilationsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2CompilationsTotal.setStatus('current')
adnAppl2DebuggingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2DebuggingRequests.setStatus('current')
adnAppl2ErrorEventsRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2ErrorEventsRaised.setStatus('current')
adnAppl2ErrorEventsRaisedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2ErrorEventsRaisedPerSec.setStatus('current')
adnAppl2ErrorsDuringCompilation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2ErrorsDuringCompilation.setStatus('current')
adnAppl2ErrorsDuringExecution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2ErrorsDuringExecution.setStatus('current')
adnAppl2ErrorDuringPreprocessing = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2ErrorDuringPreprocessing.setStatus('current')
adnAppl2ErrorsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2ErrorsTotal.setStatus('current')
adnAppl2ErrorsTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2ErrorsTotalPerSec.setStatus('current')
adnAppl2ErrorUnhandledDuringExec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2ErrorUnhandledDuringExec.setStatus('current')
adnAppl2ErrorUnhandledExecPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2ErrorUnhandledExecPerSec.setStatus('current')
adnAppl2EventsRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2EventsRaised.setStatus('current')
adnAppl2EventsRaisedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2EventsRaisedPerSec.setStatus('current')
adnAppl2FormsAuthenticationFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2FormsAuthenticationFail.setStatus('current')
adnAppl2FormsAuthenticationSucc = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2FormsAuthenticationSucc.setStatus('current')
adnAppl2InfraErrorEventsRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2InfraErrorEventsRaised.setStatus('current')
adnAppl2InfraErrEventRaisePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2InfraErrEventRaisePerSec.setStatus('current')
adnAppl2MembershipAuthFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2MembershipAuthFailure.setStatus('current')
adnAppl2MembershipAuthSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2MembershipAuthSuccess.setStatus('current')
adnAppl2OutputCacheEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2OutputCacheEntries.setStatus('current')
adnAppl2OutputCacheHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2OutputCacheHitRatio.setStatus('current')
adnAppl2OutputCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2OutputCacheHits.setStatus('current')
adnAppl2OutputCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2OutputCacheMisses.setStatus('current')
adnAppl2OutputCacheTrims = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2OutputCacheTrims.setStatus('current')
adnAppl2OutputCacheTurnoverRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2OutputCacheTurnoverRate.setStatus('current')
adnAppl2PipelineInstanceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2PipelineInstanceCount.setStatus('current')
adnAppl2RequestBytesInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2RequestBytesInTotal.setStatus('current')
adnAppl2RequestBytesOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2RequestBytesOutTotal.setStatus('current')
adnAppl2RequestErrorEventsRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2RequestErrorEventsRaised.setStatus('current')
adnAppl2ReqErrorEventRaisePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 51), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2ReqErrorEventRaisePerSec.setStatus('current')
adnAppl2RequestEventsRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2RequestEventsRaised.setStatus('current')
adnAppl2RequestEventsRaisePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2RequestEventsRaisePerSec.setStatus('current')
adnAppl2RequestExecutionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2RequestExecutionTime.setStatus('current')
adnAppl2RequestWaitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2RequestWaitTime.setStatus('current')
adnAppl2RequestsDisconnected = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 56), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2RequestsDisconnected.setStatus('current')
adnAppl2RequestsExecuting = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 57), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2RequestsExecuting.setStatus('current')
adnAppl2RequestsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 58), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2RequestsFailed.setStatus('current')
adnAppl2RequestsInApplQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 59), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2RequestsInApplQueue.setStatus('current')
adnAppl2RequestsNotAuthorized = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 60), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2RequestsNotAuthorized.setStatus('current')
adnAppl2RequestsNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 61), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2RequestsNotFound.setStatus('current')
adnAppl2RequestsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 62), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2RequestsRejected.setStatus('current')
adnAppl2RequestsSucceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 63), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2RequestsSucceeded.setStatus('current')
adnAppl2RequestsTimedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 64), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2RequestsTimedOut.setStatus('current')
adnAppl2RequestsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 65), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2RequestsTotal.setStatus('current')
adnAppl2RequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 66), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2RequestsPerSec.setStatus('current')
adnAppl2SessionSQLSvrConnTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 67), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2SessionSQLSvrConnTotal.setStatus('current')
adnAppl2SessionStateSvrConnTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 68), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2SessionStateSvrConnTotal.setStatus('current')
adnAppl2SessionsAbandoned = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 69), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2SessionsAbandoned.setStatus('current')
adnAppl2SessionsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 70), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2SessionsActive.setStatus('current')
adnAppl2SessionsTimedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 71), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2SessionsTimedOut.setStatus('current')
adnAppl2SessionsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 72), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2SessionsTotal.setStatus('current')
adnAppl2TransactionsAborted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 73), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2TransactionsAborted.setStatus('current')
adnAppl2TransactionsCommitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 74), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2TransactionsCommitted.setStatus('current')
adnAppl2TransactionsPending = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 75), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2TransactionsPending.setStatus('current')
adnAppl2TransactionsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 76), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2TransactionsTotal.setStatus('current')
adnAppl2TransactionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 77), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2TransactionsPerSec.setStatus('current')
adnAppl2ViewstateMACValidFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 119, 1, 78), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnAppl2ViewstateMACValidFailure.setStatus('current')
aspDotNETStateService = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 120))
adnssSessionsAbandoned = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 120, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnssSessionsAbandoned.setStatus('current')
adnssSessionsActive = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 120, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnssSessionsActive.setStatus('current')
adnssSessionsTimedOut = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 120, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnssSessionsTimedOut.setStatus('current')
adnssSessionsTotal = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 120, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adnssSessionsTotal.setStatus('current')
authorizationManagerApplTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 121), )
if mibBuilder.loadTexts: authorizationManagerApplTable.setStatus('current')
authorizationManagerApplEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 121, 1), ).setIndexNames((0, "INFORMANT-ADV", "amaInstance"))
if mibBuilder.loadTexts: authorizationManagerApplEntry.setStatus('current')
amaInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 121, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: amaInstance.setStatus('current')
amaNumberOfScopesLoadedInMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 121, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: amaNumberOfScopesLoadedInMemory.setStatus('current')
amaTotalNumberOfScopes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 121, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: amaTotalNumberOfScopes.setStatus('current')
certificationAuthorityTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 122), )
if mibBuilder.loadTexts: certificationAuthorityTable.setStatus('current')
certificationAuthorityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1), ).setIndexNames((0, "INFORMANT-ADV", "caInstance"))
if mibBuilder.loadTexts: certificationAuthorityEntry.setStatus('current')
caInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caInstance.setStatus('current')
caFailedRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caFailedRequestsPerSec.setStatus('current')
caIssuedRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caIssuedRequestsPerSec.setStatus('current')
caPendingRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caPendingRequestsPerSec.setStatus('current')
caRequestCryptographicSignTimeMs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caRequestCryptographicSignTimeMs.setStatus('current')
caRequestPolicyModulePrcTimeMs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caRequestPolicyModulePrcTimeMs.setStatus('current')
caRequestProcessingTimeMs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caRequestProcessingTimeMs.setStatus('current')
caRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caRequestsPerSec.setStatus('current')
caRetrievalProcessingTimeMs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caRetrievalProcessingTimeMs.setStatus('current')
caRetrievalsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 122, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: caRetrievalsPerSec.setStatus('current')
certificationAuthorityConnTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 123), )
if mibBuilder.loadTexts: certificationAuthorityConnTable.setStatus('current')
certificationAuthorityConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 123, 1), ).setIndexNames((0, "INFORMANT-ADV", "cacInstance"))
if mibBuilder.loadTexts: certificationAuthorityConnEntry.setStatus('current')
cacInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 123, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacInstance.setStatus('current')
cacActiveConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 123, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacActiveConnections.setStatus('current')
directoryServicesTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124), )
if mibBuilder.loadTexts: directoryServicesTable.setStatus('current')
directoryServicesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1), ).setIndexNames((0, "INFORMANT-ADV", "dsInstance"))
if mibBuilder.loadTexts: directoryServicesEntry.setStatus('current')
dsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsInstance.setStatus('current')
dsABANRPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsABANRPerSec.setStatus('current')
dsABBrowsesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsABBrowsesPerSec.setStatus('current')
dsABClientSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsABClientSessions.setStatus('current')
dsABMatchesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsABMatchesPerSec.setStatus('current')
dsABPropertyReadsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsABPropertyReadsPerSec.setStatus('current')
dsABProxyLookupsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsABProxyLookupsPerSec.setStatus('current')
dsABSearchesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsABSearchesPerSec.setStatus('current')
dsATQEstimatedQueueDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsATQEstimatedQueueDelay.setStatus('current')
dsATQOutstandingQueuedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsATQOutstandingQueuedRequests.setStatus('current')
dsATQRequestLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsATQRequestLatency.setStatus('current')
dsATQThreadsLDAP = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsATQThreadsLDAP.setStatus('current')
dsATQThreadsOther = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsATQThreadsOther.setStatus('current')
dsATQThreadsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsATQThreadsTotal.setStatus('current')
dsBaseSearchesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsBaseSearchesPerSec.setStatus('current')
dsDRAHighestUSNCommittedHighPart = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAHighestUSNCommittedHighPart.setStatus('current')
dsDRAHighestUSNCommittedLowPart = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAHighestUSNCommittedLowPart.setStatus('current')
dsDRAHighestUSNIssuedHighPart = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAHighestUSNIssuedHighPart.setStatus('current')
dsDRAHighestUSNIssuedLowPart = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAHighestUSNIssuedLowPart.setStatus('current')
dsDRAInCmpBtwSiteAftCmpSinceBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInCmpBtwSiteAftCmpSinceBoot.setStatus('current')
dsDRAInCmpBtwSitesAfterCmpPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInCmpBtwSitesAfterCmpPerSec.setStatus('current')
dsDRAInCmpBtwSiteBfrCmpSinceBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInCmpBtwSiteBfrCmpSinceBoot.setStatus('current')
dsDRAInCmpBtwSitesBeforCmpPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInCmpBtwSitesBeforCmpPerSec.setStatus('current')
dsDRAInNotCmpWithinSiteSinceBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInNotCmpWithinSiteSinceBoot.setStatus('current')
dsDRAInNotCmpWithinSitePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInNotCmpWithinSitePerSec.setStatus('current')
dsDRAInBytesTotalSinceBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInBytesTotalSinceBoot.setStatus('current')
dsDRAInBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInBytesTotalPerSec.setStatus('current')
dsDRAInFullSyncObjectsRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInFullSyncObjectsRemaining.setStatus('current')
dsDRAInLinkValueUpdRemainInPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInLinkValueUpdRemainInPkt.setStatus('current')
dsDRAInObjectUpdRemainInPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInObjectUpdRemainInPkt.setStatus('current')
dsDRAInObjectsAppliedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInObjectsAppliedPerSec.setStatus('current')
dsDRAInObjectsFilteredPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInObjectsFilteredPerSec.setStatus('current')
dsDRAInObjectsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInObjectsPerSec.setStatus('current')
dsDRAInPropertiesAppliedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInPropertiesAppliedPerSec.setStatus('current')
dsDRAInPropertiesFilteredPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInPropertiesFilteredPerSec.setStatus('current')
dsDRAInPropertiesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInPropertiesTotalPerSec.setStatus('current')
dsDRAInTotalUpdRemainInPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInTotalUpdRemainInPkt.setStatus('current')
dsDRAInValuesDNsOnlyPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInValuesDNsOnlyPerSec.setStatus('current')
dsDRAInValuesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAInValuesTotalPerSec.setStatus('current')
dsDRAOutCmpBtwSitesAftCmpSinceBt = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAOutCmpBtwSitesAftCmpSinceBt.setStatus('current')
dsDRAOutCmpBtwSitesAftCmpPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAOutCmpBtwSitesAftCmpPerSec.setStatus('current')
dsDRAOutCmpBtwSitesBfrCmpSinceBt = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAOutCmpBtwSitesBfrCmpSinceBt.setStatus('current')
dsDRAOutCmpBtwSitesBfrCmpPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAOutCmpBtwSitesBfrCmpPerSec.setStatus('current')
dsDRAOutNotCmpWithinSiteSinceBt = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAOutNotCmpWithinSiteSinceBt.setStatus('current')
dsDRAOutNotCmpWithinSitePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAOutNotCmpWithinSitePerSec.setStatus('current')
dsDRAOutboundBytesTotalSinceBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAOutboundBytesTotalSinceBoot.setStatus('current')
dsDRAOutboundBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAOutboundBytesTotalPerSec.setStatus('current')
dsDRAOutObjectsFilteredPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAOutObjectsFilteredPerSec.setStatus('current')
dsDRAOutboundObjectsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAOutboundObjectsPerSec.setStatus('current')
dsDRAOutboundPropertiesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAOutboundPropertiesPerSec.setStatus('current')
dsDRAOutboundValuesDNsOnlyPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 51), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAOutboundValuesDNsOnlyPerSec.setStatus('current')
dsDRAOutboundValuesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAOutboundValuesTotalPerSec.setStatus('current')
dsDRAPendingReplicationOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAPendingReplicationOperation.setStatus('current')
dsDRAPendingReplicationSync = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAPendingReplicationSync.setStatus('current')
dsDRASyncFailsOnSchemaMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRASyncFailsOnSchemaMismatch.setStatus('current')
dsDRASyncRequestsMade = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 56), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRASyncRequestsMade.setStatus('current')
dsDRASyncRequestsSuccessful = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 57), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRASyncRequestsSuccessful.setStatus('current')
dsDRAThreadsGettingNCChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 58), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAThreadsGettingNCChanges.setStatus('current')
dsDRAThreadsNCChgHoldSemaphore = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 59), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDRAThreadsNCChgHoldSemaphore.setStatus('current')
dsDSPercentReadsOther = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 60), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentReadsOther.setStatus('current')
dsDSPercentReadsFromDRA = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 61), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentReadsFromDRA.setStatus('current')
dsDSPercentReadsFromKCC = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 62), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentReadsFromKCC.setStatus('current')
dsDSPercentReadsFromLSA = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 63), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentReadsFromLSA.setStatus('current')
dsDSPercentReadsFromNSPI = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 64), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentReadsFromNSPI.setStatus('current')
dsDSPercentReadsFromNTDSAPI = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 65), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentReadsFromNTDSAPI.setStatus('current')
dsDSPercentReadsFromSAM = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 66), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentReadsFromSAM.setStatus('current')
dsDSPercentSearchesOther = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 67), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentSearchesOther.setStatus('current')
dsDSPercentSearchesFromDRA = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 68), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentSearchesFromDRA.setStatus('current')
dsDSPercentSearchesFromKCC = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 69), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentSearchesFromKCC.setStatus('current')
dsDSPercentSearchesFromLDAP = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 70), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentSearchesFromLDAP.setStatus('current')
dsDSPercentSearchesFromLSA = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 71), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentSearchesFromLSA.setStatus('current')
dsDSPercentSearchesFromNSPI = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 72), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentSearchesFromNSPI.setStatus('current')
dsDSPercentSearchesFromNTDSAPI = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 73), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentSearchesFromNTDSAPI.setStatus('current')
dsDSPercentSearchesFromSAM = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 74), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentSearchesFromSAM.setStatus('current')
dsDSPercentWritesOther = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 75), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentWritesOther.setStatus('current')
dsDSPercentWritesFromDRA = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 76), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentWritesFromDRA.setStatus('current')
dsDSPercentWritesFromKCC = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 77), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentWritesFromKCC.setStatus('current')
dsDSPercentWritesFromLDAP = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 78), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentWritesFromLDAP.setStatus('current')
dsDSPercentWritesFromLSA = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 79), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentWritesFromLSA.setStatus('current')
dsDSPercentWritesFromNSPI = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 80), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentWritesFromNSPI.setStatus('current')
dsDSPercentWritesFromNTDSAPI = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 81), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentWritesFromNTDSAPI.setStatus('current')
dsDSPercentWritesFromSAM = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 82), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSPercentWritesFromSAM.setStatus('current')
dsDSClientBindsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 83), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSClientBindsPerSec.setStatus('current')
dsDSClientNameTranslationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 84), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSClientNameTranslationsPerSec.setStatus('current')
dsDSDirectoryReadsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 85), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSDirectoryReadsPerSec.setStatus('current')
dsDSDirectorySearchesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 86), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSDirectorySearchesPerSec.setStatus('current')
dsDSDirectoryWritesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 87), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSDirectoryWritesPerSec.setStatus('current')
dsDSMonitorListSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 88), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSMonitorListSize.setStatus('current')
dsDSNameCacheHitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 89), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSNameCacheHitRate.setStatus('current')
dsDSNotifyQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 90), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSNotifyQueueSize.setStatus('current')
dsDSSearchSubOperationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 91), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSSearchSubOperationsPerSec.setStatus('current')
dsDSSecurityDescriptorPropEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 92), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSSecurityDescriptorPropEvents.setStatus('current')
dsDSSecurityDescPropAvgExclTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 93), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSSecurityDescPropAvgExclTime.setStatus('current')
dsDSSecurityDescPropRuntimeQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 94), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSSecurityDescPropRuntimeQueue.setStatus('current')
dsDSSecurityDescSubOpsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 95), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSSecurityDescSubOpsPerSec.setStatus('current')
dsDSServerBindsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 96), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSServerBindsPerSec.setStatus('current')
dsDSServerNameTranslationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 97), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSServerNameTranslationsPerSec.setStatus('current')
dsDSThreadsInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 98), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDSThreadsInUse.setStatus('current')
dsDatabaseAddsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 99), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDatabaseAddsPerSec.setStatus('current')
dsDatabaseDeletesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 100), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDatabaseDeletesPerSec.setStatus('current')
dsDatabaseModifysPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 101), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDatabaseModifysPerSec.setStatus('current')
dsDigestBindsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 102), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsDigestBindsPerSec.setStatus('current')
dsExternalBindsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 103), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsExternalBindsPerSec.setStatus('current')
dsFastBindsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 104), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsFastBindsPerSec.setStatus('current')
dsLDAPActiveThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 105), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsLDAPActiveThreads.setStatus('current')
dsLDAPBindTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 106), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsLDAPBindTime.setStatus('current')
dsLDAPClientSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 107), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsLDAPClientSessions.setStatus('current')
dsLDAPClosedConnectionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 108), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsLDAPClosedConnectionsPerSec.setStatus('current')
dsLDAPNewConnectionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 109), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsLDAPNewConnectionsPerSec.setStatus('current')
dsLDAPNewSSLConnectionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 110), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsLDAPNewSSLConnectionsPerSec.setStatus('current')
dsLDAPSearchesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 111), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsLDAPSearchesPerSec.setStatus('current')
dsLDAPSuccessfulBindsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 112), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsLDAPSuccessfulBindsPerSec.setStatus('current')
dsLDAPUDPOperationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 113), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsLDAPUDPOperationsPerSec.setStatus('current')
dsLDAPWritesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 114), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsLDAPWritesPerSec.setStatus('current')
dsLinkValuesCleanedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 115), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsLinkValuesCleanedPerSec.setStatus('current')
dsNTLMBindsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 116), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsNTLMBindsPerSec.setStatus('current')
dsNegotiatedBindsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 117), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsNegotiatedBindsPerSec.setStatus('current')
dsOnelevelSearchesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 118), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsOnelevelSearchesPerSec.setStatus('current')
dsPhantomsCleanedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 119), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsPhantomsCleanedPerSec.setStatus('current')
dsPhantomsVisitedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 120), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsPhantomsVisitedPerSec.setStatus('current')
dsSAMAccountGroupEvalLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 121), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsSAMAccountGroupEvalLatency.setStatus('current')
dsSAMDisplayInfoQueriesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 122), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsSAMDisplayInfoQueriesPerSec.setStatus('current')
dsSAMDomainLocalGrpMemEvalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 123), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsSAMDomainLocalGrpMemEvalPerSec.setStatus('current')
dsSAMEnumerationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 124), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsSAMEnumerationsPerSec.setStatus('current')
dsSAMGCEvaluationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 125), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsSAMGCEvaluationsPerSec.setStatus('current')
dsSAMGlobalGroupMembEvalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 126), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsSAMGlobalGroupMembEvalPerSec.setStatus('current')
dsSAMMachineCreationAttpsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 127), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsSAMMachineCreationAttpsPerSec.setStatus('current')
dsSAMMembershipChangesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 128), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsSAMMembershipChangesPerSec.setStatus('current')
dsSAMNonTransitiveMembEvalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 129), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsSAMNonTransitiveMembEvalPerSec.setStatus('current')
dsSAMPasswordChangesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 130), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsSAMPasswordChangesPerSec.setStatus('current')
dsSAMResourceGroupEvalLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 131), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsSAMResourceGroupEvalLatency.setStatus('current')
dsSAMSuccCmpCrtPerSecInclAllRqst = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 132), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsSAMSuccCmpCrtPerSecInclAllRqst.setStatus('current')
dsSAMSuccessUserCreationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 133), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsSAMSuccessUserCreationsPerSec.setStatus('current')
dsSAMTransitiveMemberEvalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 134), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsSAMTransitiveMemberEvalPerSec.setStatus('current')
dsSAMUniversalGrpMembEvalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 135), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsSAMUniversalGrpMembEvalPerSec.setStatus('current')
dsSAMUserCreationAttemptsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 136), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsSAMUserCreationAttemptsPerSec.setStatus('current')
dsSimpleBindsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 137), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsSimpleBindsPerSec.setStatus('current')
dsSubtreeSearchesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 138), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsSubtreeSearchesPerSec.setStatus('current')
dsTombstonesGarbageCollPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 139), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsTombstonesGarbageCollPerSec.setStatus('current')
dsTombstonesVisitedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 124, 1, 140), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsTombstonesVisitedPerSec.setStatus('current')
dfsReplicatedFoldersTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125), )
if mibBuilder.loadTexts: dfsReplicatedFoldersTable.setStatus('current')
dfsReplicatedFoldersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1), ).setIndexNames((0, "INFORMANT-ADV", "dfsrfInstance"))
if mibBuilder.loadTexts: dfsReplicatedFoldersEntry.setStatus('current')
dfsrfInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfInstance.setStatus('current')
dfsrfBandwidthSavings = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfBandwidthSavings.setStatus('current')
dfsrfCompressedSizeOfFilesRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfCompressedSizeOfFilesRcvd.setStatus('current')
dfsrfConflictBytesCleanedUp = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfConflictBytesCleanedUp.setStatus('current')
dfsrfConflictBytesGenerated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfConflictBytesGenerated.setStatus('current')
dfsrfConflictFilesCleanedUp = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfConflictFilesCleanedUp.setStatus('current')
dfsrfConflictFilesGenerated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfConflictFilesGenerated.setStatus('current')
dfsrfConflictFolderCleanupsComp = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfConflictFolderCleanupsComp.setStatus('current')
dfsrfConflictSpaceInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfConflictSpaceInUse.setStatus('current')
dfsrfDeletedBytesCleanedUp = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfDeletedBytesCleanedUp.setStatus('current')
dfsrfDeletedBytesGenerated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfDeletedBytesGenerated.setStatus('current')
dfsrfDeletedFilesCleanedUp = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfDeletedFilesCleanedUp.setStatus('current')
dfsrfDeletedFilesGenerated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfDeletedFilesGenerated.setStatus('current')
dfsrfDeletedSpaceInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfDeletedSpaceInUse.setStatus('current')
dfsrfFileInstallsRetried = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfFileInstallsRetried.setStatus('current')
dfsrfFileInstallsSucceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfFileInstallsSucceeded.setStatus('current')
dfsrfRDCBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfRDCBytesReceived.setStatus('current')
dfsrfRDCCompressSizeOfFilesRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfRDCCompressSizeOfFilesRcvd.setStatus('current')
dfsrfRDCNumberOfFilesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfRDCNumberOfFilesReceived.setStatus('current')
dfsrfRDCSizeOfFilesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfRDCSizeOfFilesReceived.setStatus('current')
dfsrfSizeOfFilesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfSizeOfFilesReceived.setStatus('current')
dfsrfStagingBytesCleanedUp = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfStagingBytesCleanedUp.setStatus('current')
dfsrfStagingBytesGenerated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfStagingBytesGenerated.setStatus('current')
dfsrfStagingFilesCleanedUp = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfStagingFilesCleanedUp.setStatus('current')
dfsrfStagingFilesGenerated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfStagingFilesGenerated.setStatus('current')
dfsrfStagingSpaceInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfStagingSpaceInUse.setStatus('current')
dfsrfTotalFilesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfTotalFilesReceived.setStatus('current')
dfsrfUpdatesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 125, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrfUpdatesDropped.setStatus('current')
dfsReplicationConnectionsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 126), )
if mibBuilder.loadTexts: dfsReplicationConnectionsTable.setStatus('current')
dfsReplicationConnectionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1), ).setIndexNames((0, "INFORMANT-ADV", "dfsrcInstance"))
if mibBuilder.loadTexts: dfsReplicationConnectionsEntry.setStatus('current')
dfsrcInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrcInstance.setStatus('current')
dfsrcBandwidthSavings = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrcBandwidthSavings.setStatus('current')
dfsrcBytesReceivedPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrcBytesReceivedPerSecond.setStatus('current')
dfsrcCompressedSizeOfFilesRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrcCompressedSizeOfFilesRcvd.setStatus('current')
dfsrcRDCBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrcRDCBytesReceived.setStatus('current')
dfsrcRDCCompressSizeOfFilesRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrcRDCCompressSizeOfFilesRcvd.setStatus('current')
dfsrcRDCNumberOfFilesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrcRDCNumberOfFilesReceived.setStatus('current')
dfsrcRDCSizeOfFilesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrcRDCSizeOfFilesReceived.setStatus('current')
dfsrcSizeOfFilesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrcSizeOfFilesReceived.setStatus('current')
dfsrcTotalBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrcTotalBytesReceived.setStatus('current')
dfsrcTotalFilesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 126, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrcTotalFilesReceived.setStatus('current')
dfsReplicationServiceVolumeTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 127), )
if mibBuilder.loadTexts: dfsReplicationServiceVolumeTable.setStatus('current')
dfsReplicationServiceVolumeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 127, 1), ).setIndexNames((0, "INFORMANT-ADV", "dfsrsvInstance"))
if mibBuilder.loadTexts: dfsReplicationServiceVolumeEntry.setStatus('current')
dfsrsvInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 127, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrsvInstance.setStatus('current')
dfsrsvDatabaseCommits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 127, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrsvDatabaseCommits.setStatus('current')
dfsrsvDatabaseLookups = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 127, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrsvDatabaseLookups.setStatus('current')
dfsrsvUSNJournalRecordsAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 127, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrsvUSNJournalRecordsAccepted.setStatus('current')
dfsrsvUSNJournalRecordsRead = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 127, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrsvUSNJournalRecordsRead.setStatus('current')
dfsrsvUSNJournalUnreadPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 127, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfsrsvUSNJournalUnreadPercentage.setStatus('current')
faxService = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 128))
faxsBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxsBytesReceived.setStatus('current')
faxsBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxsBytesSent.setStatus('current')
faxsFailedFaxesTransmissions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxsFailedFaxesTransmissions.setStatus('current')
faxsFailedOutgoingConnections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxsFailedOutgoingConnections.setStatus('current')
faxsFailedReceptions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxsFailedReceptions.setStatus('current')
faxsFaxesSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxsFaxesSent.setStatus('current')
faxsMinutesReceiving = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxsMinutesReceiving.setStatus('current')
faxsMinutesSending = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxsMinutesSending.setStatus('current')
faxsPagesSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxsPagesSent.setStatus('current')
faxsReceivedFaxes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxsReceivedFaxes.setStatus('current')
faxsReceivedPages = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxsReceivedPages.setStatus('current')
faxsTotalBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxsTotalBytes.setStatus('current')
faxsTotalFaxesSentAndReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxsTotalFaxesSentAndReceived.setStatus('current')
faxsTotalMinutesSendAndReceive = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxsTotalMinutesSendAndReceive.setStatus('current')
faxsTotalPages = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 128, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxsTotalPages.setStatus('current')
hcapCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 129))
hcapcAverageNPSValidationTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 129, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcapcAverageNPSValidationTime.setStatus('current')
hcapcLastNPSValidationTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 129, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcapcLastNPSValidationTime.setStatus('current')
hcapcPostureValidFailureResponse = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 129, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcapcPostureValidFailureResponse.setStatus('current')
hcapcPostureValidationRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 129, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcapcPostureValidationRequests.setStatus('current')
hcapcPostureValidSuccessResponse = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 129, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcapcPostureValidSuccessResponse.setStatus('current')
hcapcVersionNegotiationRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 129, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcapcVersionNegotiationRequests.setStatus('current')
hcapcVersionNegotiationResponses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 129, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcapcVersionNegotiationResponses.setStatus('current')
hraStatistics = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 130))
if mibBuilder.loadTexts: hraStatistics.setStatus('current')
hrasCertificationTimeMs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 130, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrasCertificationTimeMs.setStatus('current')
hrasHCEPFailedRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 130, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrasHCEPFailedRequests.setStatus('current')
hrasHCEPRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 130, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrasHCEPRequests.setStatus('current')
hrasHCEPSuccessfulRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 130, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrasHCEPSuccessfulRequests.setStatus('current')
hrasNPSValidationTimeMs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 130, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrasNPSValidationTimeMs.setStatus('current')
hrasNPSSuccessfulRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 130, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrasNPSSuccessfulRequests.setStatus('current')
hrasSuccessCertificationRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 130, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrasSuccessCertificationRequests.setStatus('current')
hrasSumOfTimePerRequestMs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 130, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hrasSumOfTimePerRequestMs.setStatus('current')
ipSecAuthIPv4 = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131))
ipsa4ActiveExtendedModeSAs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4ActiveExtendedModeSAs.setStatus('current')
ipsa4ActiveMainModeSAs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4ActiveMainModeSAs.setStatus('current')
ipsa4ActiveQuickModeSAs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4ActiveQuickModeSAs.setStatus('current')
ipsa4ExtendedModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4ExtendedModeNegotiations.setStatus('current')
ipsa4ExtendModeNegotiationPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4ExtendModeNegotiationPerSec.setStatus('current')
ipsa4ExtModeSAsThatUsedImperson = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4ExtModeSAsThatUsedImperson.setStatus('current')
ipsa4FailExtendedModeNegotiation = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4FailExtendedModeNegotiation.setStatus('current')
ipsa4FailExtendModeNegotPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4FailExtendModeNegotPerSec.setStatus('current')
ipsa4FailedMainModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4FailedMainModeNegotiations.setStatus('current')
ipsa4FailedMainModeNegPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4FailedMainModeNegPerSec.setStatus('current')
ipsa4FailedQuickModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4FailedQuickModeNegotiations.setStatus('current')
ipsa4FailQuickModeNegPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4FailQuickModeNegPerSec.setStatus('current')
ipsa4MainModeNegRqstReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4MainModeNegRqstReceived.setStatus('current')
ipsa4MainModeNegRequestRcvPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4MainModeNegRequestRcvPerSec.setStatus('current')
ipsa4MainModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4MainModeNegotiations.setStatus('current')
ipsa4MainModeNegotiationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4MainModeNegotiationsPerSec.setStatus('current')
ipsa4MainModeSAsUseImpersonation = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4MainModeSAsUseImpersonation.setStatus('current')
ipsa4MainModeSAUseImpersonPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4MainModeSAUseImpersonPerSec.setStatus('current')
ipsa4PendExtendModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4PendExtendModeNegotiations.setStatus('current')
ipsa4PendingMainModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4PendingMainModeNegotiations.setStatus('current')
ipsa4PendingQuickModeNegotiation = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4PendingQuickModeNegotiation.setStatus('current')
ipsa4QuickModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4QuickModeNegotiations.setStatus('current')
ipsa4QuickModeNegotiationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4QuickModeNegotiationsPerSec.setStatus('current')
ipsa4SuccExtendedModeNegotiation = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4SuccExtendedModeNegotiation.setStatus('current')
ipsa4SuccExtendModeNegotPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4SuccExtendModeNegotPerSec.setStatus('current')
ipsa4SuccessMainModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4SuccessMainModeNegotiations.setStatus('current')
ipsa4SuccessMainModeNegotPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4SuccessMainModeNegotPerSec.setStatus('current')
ipsa4SuccessQuickModeNegotiation = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4SuccessQuickModeNegotiation.setStatus('current')
ipsa4SuccessQuickModeNegotPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 131, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa4SuccessQuickModeNegotPerSec.setStatus('current')
ipSecAuthIPv6 = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132))
ipsa6ActiveExtendedModeSAs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6ActiveExtendedModeSAs.setStatus('current')
ipsa6ActiveMainModeSAs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6ActiveMainModeSAs.setStatus('current')
ipsa6ActiveQuickModeSAs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6ActiveQuickModeSAs.setStatus('current')
ipsa6ExtendedModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6ExtendedModeNegotiations.setStatus('current')
ipsa6ExtendModeNegotiationPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6ExtendModeNegotiationPerSec.setStatus('current')
ipsa6ExtendedModeSAsUsedImperson = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6ExtendedModeSAsUsedImperson.setStatus('current')
ipsa6FailExtendModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6FailExtendModeNegotiations.setStatus('current')
ipsa6FailedExtendModeNegotPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6FailedExtendModeNegotPerSec.setStatus('current')
ipsa6FailedMainModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6FailedMainModeNegotiations.setStatus('current')
ipsa6FailMainModeNegotPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6FailMainModeNegotPerSec.setStatus('current')
ipsa6FailedQuickModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6FailedQuickModeNegotiations.setStatus('current')
ipsa6FailQuickModeNegotPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6FailQuickModeNegotPerSec.setStatus('current')
ipsa6MainModeNegotiationRqstRcvd = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6MainModeNegotiationRqstRcvd.setStatus('current')
ipsa6MainModeNegotRqstRcvdPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6MainModeNegotRqstRcvdPerSec.setStatus('current')
ipsa6MainModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6MainModeNegotiations.setStatus('current')
ipsa6MainModeNegotiationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6MainModeNegotiationsPerSec.setStatus('current')
ipsa6MainModeSAsUseImpersonation = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6MainModeSAsUseImpersonation.setStatus('current')
ipsa6MainModeSAUseImpersonPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6MainModeSAUseImpersonPerSec.setStatus('current')
ipsa6PendExtendModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6PendExtendModeNegotiations.setStatus('current')
ipsa6PendingMainModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6PendingMainModeNegotiations.setStatus('current')
ipsa6PendingQuickModeNegotiation = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6PendingQuickModeNegotiation.setStatus('current')
ipsa6QuickModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6QuickModeNegotiations.setStatus('current')
ipsa6QuickModeNegotiationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6QuickModeNegotiationsPerSec.setStatus('current')
ipsa6SuccExtendedModeNegotiation = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6SuccExtendedModeNegotiation.setStatus('current')
ipsa6SuccExtendModeNegotPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6SuccExtendModeNegotPerSec.setStatus('current')
ipsa6SuccessMainModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6SuccessMainModeNegotiations.setStatus('current')
ipsa6SuccessMainModeNegotPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6SuccessMainModeNegotPerSec.setStatus('current')
ipsa6SuccessQuickModeNegotiation = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6SuccessQuickModeNegotiation.setStatus('current')
ipsa6SuccessQuickModeNegotPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 132, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsa6SuccessQuickModeNegotPerSec.setStatus('current')
ipSecDriver = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133))
ipsdActiveSecurityAssociations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdActiveSecurityAssociations.setStatus('current')
ipsdByteRcvInTransportModePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdByteRcvInTransportModePerSec.setStatus('current')
ipsdBytesRcvdInTunnelModePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdBytesRcvdInTunnelModePerSec.setStatus('current')
ipsdByteSntInTransportModePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdByteSntInTransportModePerSec.setStatus('current')
ipsdBytesSentInTunnelModePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdBytesSentInTunnelModePerSec.setStatus('current')
ipsdIncorrectSPIPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdIncorrectSPIPackets.setStatus('current')
ipsdOffloadedBytesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdOffloadedBytesReceivedPerSec.setStatus('current')
ipsdOffloadedBytesSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdOffloadedBytesSentPerSec.setStatus('current')
ipsdOffloadedSecurityAssociation = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdOffloadedSecurityAssociation.setStatus('current')
ipsdPacketsNotAuthenticated = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdPacketsNotAuthenticated.setStatus('current')
ipsdPacketsNotDecrypted = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdPacketsNotDecrypted.setStatus('current')
ipsdPacketsReceivedOverWrongSA = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdPacketsReceivedOverWrongSA.setStatus('current')
ipsdPacketsFailedESPValidation = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdPacketsFailedESPValidation.setStatus('current')
ipsdPacketsFailedReplayDetection = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdPacketsFailedReplayDetection.setStatus('current')
ipsdPacketsFailUDPESPValidation = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdPacketsFailUDPESPValidation.setStatus('current')
ipsdPendingSecurityAssociations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdPendingSecurityAssociations.setStatus('current')
ipsdPlaintextPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdPlaintextPacketsReceived.setStatus('current')
ipsdSARekeys = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdSARekeys.setStatus('current')
ipsdSecurityAssociationsAdded = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 133, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsdSecurityAssociationsAdded.setStatus('current')
ipSecIKEv4 = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134))
ipsi4ActiveMainModeSAs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi4ActiveMainModeSAs.setStatus('current')
ipsi4ActiveQuickModeSAs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi4ActiveQuickModeSAs.setStatus('current')
ipsi4FailedMainModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi4FailedMainModeNegotiations.setStatus('current')
ipsi4FailedMainModeNegotPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi4FailedMainModeNegotPerSec.setStatus('current')
ipsi4FailedQuickModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi4FailedQuickModeNegotiations.setStatus('current')
ipsi4FailedQuickModeNegotPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi4FailedQuickModeNegotPerSec.setStatus('current')
ipsi4MainModeNegotiationRqstRcvd = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi4MainModeNegotiationRqstRcvd.setStatus('current')
ipsi4MainModeNegotRqstRcvdPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi4MainModeNegotRqstRcvdPerSec.setStatus('current')
ipsi4MainModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi4MainModeNegotiations.setStatus('current')
ipsi4MainModeNegotiationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi4MainModeNegotiationsPerSec.setStatus('current')
ipsi4PendingMainModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi4PendingMainModeNegotiations.setStatus('current')
ipsi4PendingQuickModeNegotiation = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi4PendingQuickModeNegotiation.setStatus('current')
ipsi4QuickModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi4QuickModeNegotiations.setStatus('current')
ipsi4QuickModeNegotiationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi4QuickModeNegotiationsPerSec.setStatus('current')
ipsi4SuccessMainModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi4SuccessMainModeNegotiations.setStatus('current')
ipsi4SuccessMainModeNegotPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi4SuccessMainModeNegotPerSec.setStatus('current')
ipsi4SuccessQuickModeNegotiation = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi4SuccessQuickModeNegotiation.setStatus('current')
ipsi4SuccessQuickModeNegotPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 134, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi4SuccessQuickModeNegotPerSec.setStatus('current')
ipSecIKEv6 = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135))
ipsi6ActiveMainModeSAs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi6ActiveMainModeSAs.setStatus('current')
ipsi6ActiveQuickModeSAs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi6ActiveQuickModeSAs.setStatus('current')
ipsi6FailedMainModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi6FailedMainModeNegotiations.setStatus('current')
ipsi6FailedMainModeNegotPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi6FailedMainModeNegotPerSec.setStatus('current')
ipsi6FailedQuickModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi6FailedQuickModeNegotiations.setStatus('current')
ipsi6FailedQuickModeNegotPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi6FailedQuickModeNegotPerSec.setStatus('current')
ipsi6MainModeNegotiationRqstRcvd = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi6MainModeNegotiationRqstRcvd.setStatus('current')
ipsi6MainModeNegotRqstRcvdPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi6MainModeNegotRqstRcvdPerSec.setStatus('current')
ipsi6MainModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi6MainModeNegotiations.setStatus('current')
ipsi6MainModeNegotiationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi6MainModeNegotiationsPerSec.setStatus('current')
ipsi6PendingMainModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi6PendingMainModeNegotiations.setStatus('current')
ipsi6PendingQuickModeNegotiation = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi6PendingQuickModeNegotiation.setStatus('current')
ipsi6QuickModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi6QuickModeNegotiations.setStatus('current')
ipsi6QuickModeNegotiationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi6QuickModeNegotiationsPerSec.setStatus('current')
ipsi6SuccessMainModeNegotiations = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi6SuccessMainModeNegotiations.setStatus('current')
ipsi6SuccessMainModeNegotPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi6SuccessMainModeNegotPerSec.setStatus('current')
ipsi6SuccessfulQuickModeNegot = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi6SuccessfulQuickModeNegot.setStatus('current')
ipsi6SuccessQuickModeNegotPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 135, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipsi6SuccessQuickModeNegotPerSec.setStatus('current')
msmqIncomingHTTPTraffic = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 136))
if mibBuilder.loadTexts: msmqIncomingHTTPTraffic.setStatus('current')
msmqitIncomingHTTPBytes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 136, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqitIncomingHTTPBytes.setStatus('current')
msmqitIncomingHTTPBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 136, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqitIncomingHTTPBytesPerSec.setStatus('current')
msmqitIncomingHTTPMessages = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 136, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqitIncomingHTTPMessages.setStatus('current')
msmqitIncomingHTTPMessagesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 136, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqitIncomingHTTPMessagesPerSec.setStatus('current')
msmqInMulticastSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 137), )
if mibBuilder.loadTexts: msmqInMulticastSessionTable.setStatus('current')
msmqInMulticastSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 137, 1), ).setIndexNames((0, "INFORMANT-ADV", "msmqimsInstance"))
if mibBuilder.loadTexts: msmqInMulticastSessionEntry.setStatus('current')
msmqimsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 137, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqimsInstance.setStatus('current')
msmqimsIncomingMulticastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 137, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqimsIncomingMulticastBytes.setStatus('current')
msmqimsInMulticastBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 137, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqimsInMulticastBytesPerSec.setStatus('current')
msmqimsIncomingMulticastMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 137, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqimsIncomingMulticastMessages.setStatus('current')
msmqimsInMulticastMessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 137, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqimsInMulticastMessagesPerSec.setStatus('current')
msmqOutgoingHTTPSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 138), )
if mibBuilder.loadTexts: msmqOutgoingHTTPSessionTable.setStatus('current')
msmqOutgoingHTTPSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 138, 1), ).setIndexNames((0, "INFORMANT-ADV", "msmqosInstance"))
if mibBuilder.loadTexts: msmqOutgoingHTTPSessionEntry.setStatus('current')
msmqosInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 138, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqosInstance.setStatus('current')
msmqosOutgoingHTTPBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 138, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqosOutgoingHTTPBytes.setStatus('current')
msmqosOutgoingHTTPBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 138, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqosOutgoingHTTPBytesPerSec.setStatus('current')
msmqosOutgoingHTTPMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 138, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqosOutgoingHTTPMessages.setStatus('current')
msmqosOutgoingHTTPMessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 138, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqosOutgoingHTTPMessagesPerSec.setStatus('current')
msmqOutMulticastSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 139), )
if mibBuilder.loadTexts: msmqOutMulticastSessionTable.setStatus('current')
msmqOutMulticastSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 139, 1), ).setIndexNames((0, "INFORMANT-ADV", "msmqomsInstance"))
if mibBuilder.loadTexts: msmqOutMulticastSessionEntry.setStatus('current')
msmqomsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 139, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqomsInstance.setStatus('current')
msmqomsOutgoingMulticastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 139, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqomsOutgoingMulticastBytes.setStatus('current')
msmqomsOutMulticastBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 139, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqomsOutMulticastBytesPerSec.setStatus('current')
msmqomsOutgoingMulticastMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 139, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqomsOutgoingMulticastMessages.setStatus('current')
msmqomsOutMulticastMessagePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 139, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqomsOutMulticastMessagePerSec.setStatus('current')
msmqSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 140), )
if mibBuilder.loadTexts: msmqSessionTable.setStatus('current')
msmqSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1), ).setIndexNames((0, "INFORMANT-ADV", "msmqsInstance"))
if mibBuilder.loadTexts: msmqSessionEntry.setStatus('current')
msmqsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqsInstance.setStatus('current')
msmqsIncomingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqsIncomingBytes.setStatus('current')
msmqsIncomingBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqsIncomingBytesPerSec.setStatus('current')
msmqsIncomingMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqsIncomingMessages.setStatus('current')
msmqsIncomingMessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqsIncomingMessagesPerSec.setStatus('current')
msmqsOutgoingBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqsOutgoingBytes.setStatus('current')
msmqsOutgoingBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqsOutgoingBytesPerSec.setStatus('current')
msmqsOutgoingMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqsOutgoingMessages.setStatus('current')
msmqsOutgoingMessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 140, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msmqsOutgoingMessagesPerSec.setStatus('current')
netlogonTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 141), )
if mibBuilder.loadTexts: netlogonTable.setStatus('current')
netlogonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 141, 1), ).setIndexNames((0, "INFORMANT-ADV", "netlogonInstance"))
if mibBuilder.loadTexts: netlogonEntry.setStatus('current')
netlogonInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 141, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netlogonInstance.setStatus('current')
netlogonAverageSemaphoreHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 141, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netlogonAverageSemaphoreHoldTime.setStatus('current')
netlogonSemaphoreAcquires = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 141, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netlogonSemaphoreAcquires.setStatus('current')
netlogonSemaphoreHolders = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 141, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netlogonSemaphoreHolders.setStatus('current')
netlogonSemaphoreTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 141, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netlogonSemaphoreTimeouts.setStatus('current')
netlogonSemaphoreWaiters = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 141, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netlogonSemaphoreWaiters.setStatus('current')
npsAccountingClientsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142), )
if mibBuilder.loadTexts: npsAccountingClientsTable.setStatus('current')
npsAccountingClientsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1), ).setIndexNames((0, "INFORMANT-ADV", "npsaccInstance"))
if mibBuilder.loadTexts: npsAccountingClientsEntry.setStatus('current')
npsaccInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccInstance.setStatus('current')
npsaccAccountingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccAccountingRequests.setStatus('current')
npsaccAccountingRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccAccountingRequestsPerSec.setStatus('current')
npsaccAccountingResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccAccountingResponses.setStatus('current')
npsaccAccountingResponsesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccAccountingResponsesPerSec.setStatus('current')
npsaccBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccBadAuthenticators.setStatus('current')
npsaccBadAuthenticatorsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccBadAuthenticatorsPerSec.setStatus('current')
npsaccDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccDroppedPackets.setStatus('current')
npsaccDroppedPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccDroppedPacketsPerSec.setStatus('current')
npsaccDupAccountingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccDupAccountingRequests.setStatus('current')
npsaccDupAccountingRequestPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccDupAccountingRequestPerSec.setStatus('current')
npsaccMalformedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccMalformedPackets.setStatus('current')
npsaccMalformedPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccMalformedPacketsPerSec.setStatus('current')
npsaccNoRecord = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccNoRecord.setStatus('current')
npsaccNoRecordPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccNoRecordPerSec.setStatus('current')
npsaccPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccPacketsReceived.setStatus('current')
npsaccPacketsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccPacketsReceivedPerSec.setStatus('current')
npsaccPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccPacketsSent.setStatus('current')
npsaccPacketsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccPacketsSentPerSec.setStatus('current')
npsaccUnknownType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccUnknownType.setStatus('current')
npsaccUnknownTypePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 142, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaccUnknownTypePerSec.setStatus('current')
npsAccountingProxy = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143))
npsacpAccountingRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpAccountingRequests.setStatus('current')
npsacpAccountingRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpAccountingRequestsPerSec.setStatus('current')
npsacpAccountingResponses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpAccountingResponses.setStatus('current')
npsacpAccountingResponsesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpAccountingResponsesPerSec.setStatus('current')
npsacpBadAuthenticators = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpBadAuthenticators.setStatus('current')
npsacpBadAuthenticatorsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpBadAuthenticatorsPerSec.setStatus('current')
npsacpDroppedPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpDroppedPackets.setStatus('current')
npsacpDroppedPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpDroppedPacketsPerSec.setStatus('current')
npsacpInvalidAddresses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpInvalidAddresses.setStatus('current')
npsacpInvalidAddressesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpInvalidAddressesPerSec.setStatus('current')
npsacpMalformedPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpMalformedPackets.setStatus('current')
npsacpMalformedPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpMalformedPacketsPerSec.setStatus('current')
npsacpPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpPacketsReceived.setStatus('current')
npsacpPacketsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpPacketsReceivedPerSec.setStatus('current')
npsacpPendingRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpPendingRequests.setStatus('current')
npsacpRequestTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpRequestTimeouts.setStatus('current')
npsacpRequestTimeoutsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpRequestTimeoutsPerSec.setStatus('current')
npsacpRetransmissions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpRetransmissions.setStatus('current')
npsacpRetransmissionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpRetransmissionsPerSec.setStatus('current')
npsacpUnknownType = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpUnknownType.setStatus('current')
npsacpUnknownTypePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 143, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacpUnknownTypePerSec.setStatus('current')
npsAccountingServer = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144))
npsacsAccountingRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsAccountingRequests.setStatus('current')
npsacsAccountingRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsAccountingRequestsPerSec.setStatus('current')
npsacsAccountingResponses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsAccountingResponses.setStatus('current')
npsacsAccountingResponsesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsAccountingResponsesPerSec.setStatus('current')
npsacsBadAuthenticators = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsBadAuthenticators.setStatus('current')
npsacsBadAuthenticatorsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsBadAuthenticatorsPerSec.setStatus('current')
npsacsDroppedPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsDroppedPackets.setStatus('current')
npsacsDroppedPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsDroppedPacketsPerSec.setStatus('current')
npsacsDupAccountingRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsDupAccountingRequests.setStatus('current')
npsacsDupAccountingRequestPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsDupAccountingRequestPerSec.setStatus('current')
npsacsInvalidRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsInvalidRequests.setStatus('current')
npsacsInvalidRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsInvalidRequestsPerSec.setStatus('current')
npsacsMalformedPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsMalformedPackets.setStatus('current')
npsacsMalformedPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsMalformedPacketsPerSec.setStatus('current')
npsacsNoRecord = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsNoRecord.setStatus('current')
npsacsNoRecordPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsNoRecordPerSec.setStatus('current')
npsacsPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsPacketsReceived.setStatus('current')
npsacsPacketsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsPacketsReceivedPerSec.setStatus('current')
npsacsPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsPacketsSent.setStatus('current')
npsacsPacketsSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsPacketsSentPerSec.setStatus('current')
npsacsServerResetTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsServerResetTime.setStatus('current')
npsacsServerUpTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsServerUpTime.setStatus('current')
npsacsUnknownType = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsUnknownType.setStatus('current')
npsacsUnknownTypePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 144, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsacsUnknownTypePerSec.setStatus('current')
npsAuthenticationClientsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145), )
if mibBuilder.loadTexts: npsAuthenticationClientsTable.setStatus('current')
npsAuthenticationClientsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1), ).setIndexNames((0, "INFORMANT-ADV", "npsaucInstance"))
if mibBuilder.loadTexts: npsAuthenticationClientsEntry.setStatus('current')
npsaucInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucInstance.setStatus('current')
npsaucAccessAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucAccessAccepts.setStatus('current')
npsaucAccessAcceptsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucAccessAcceptsPerSec.setStatus('current')
npsaucAccessChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucAccessChallenges.setStatus('current')
npsaucAccessChallengesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucAccessChallengesPerSec.setStatus('current')
npsaucAccessRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucAccessRejects.setStatus('current')
npsaucAccessRejectsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucAccessRejectsPerSec.setStatus('current')
npsaucAccessRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucAccessRequests.setStatus('current')
npsaucAccessRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucAccessRequestsPerSec.setStatus('current')
npsaucBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucBadAuthenticators.setStatus('current')
npsaucBadAuthenticatorsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucBadAuthenticatorsPerSec.setStatus('current')
npsaucDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucDroppedPackets.setStatus('current')
npsaucDroppedPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucDroppedPacketsPerSec.setStatus('current')
npsaucDuplicateAccessRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucDuplicateAccessRequests.setStatus('current')
npsaucDupAccessRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucDupAccessRequestsPerSec.setStatus('current')
npsaucFullAccessDecisions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucFullAccessDecisions.setStatus('current')
npsaucFullAccessDecisionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucFullAccessDecisionsPerSec.setStatus('current')
npsaucMalformedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucMalformedPackets.setStatus('current')
npsaucMalformedPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucMalformedPacketsPerSec.setStatus('current')
npsaucPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucPacketsReceived.setStatus('current')
npsaucPacketsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucPacketsReceivedPerSec.setStatus('current')
npsaucPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucPacketsSent.setStatus('current')
npsaucPacketsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucPacketsSentPerSec.setStatus('current')
npsaucProbationDecisions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucProbationDecisions.setStatus('current')
npsaucProbationDecisionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucProbationDecisionsPerSec.setStatus('current')
npsaucQuarantineDecisions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucQuarantineDecisions.setStatus('current')
npsaucQuarantineDecisionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucQuarantineDecisionsPerSec.setStatus('current')
npsaucUnknownType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucUnknownType.setStatus('current')
npsaucUnknownTypePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 145, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaucUnknownTypePerSec.setStatus('current')
npsAuthenticationProxy = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146))
npsaupAccessAccepts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupAccessAccepts.setStatus('current')
npsaupAccessAcceptsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupAccessAcceptsPerSec.setStatus('current')
npsaupAccessChallenges = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupAccessChallenges.setStatus('current')
npsaupAccessChallengesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupAccessChallengesPerSec.setStatus('current')
npsaupAccessRejects = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupAccessRejects.setStatus('current')
npsaupAccessRejectsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupAccessRejectsPerSec.setStatus('current')
npsaupAccessRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupAccessRequests.setStatus('current')
npsaupAccessRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupAccessRequestsPerSec.setStatus('current')
npsaupBadAuthenticators = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupBadAuthenticators.setStatus('current')
npsaupBadAuthenticatorsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupBadAuthenticatorsPerSec.setStatus('current')
npsaupDroppedPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupDroppedPackets.setStatus('current')
npsaupDroppedPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupDroppedPacketsPerSec.setStatus('current')
npsaupFullAccessDecisions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupFullAccessDecisions.setStatus('current')
npsaupFullAccessDecisionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupFullAccessDecisionsPerSec.setStatus('current')
npsaupInvalidAddresses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupInvalidAddresses.setStatus('current')
npsaupInvalidAddressesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupInvalidAddressesPerSec.setStatus('current')
npsaupMalformedPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupMalformedPackets.setStatus('current')
npsaupMalformedPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupMalformedPacketsPerSec.setStatus('current')
npsaupPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupPacketsReceived.setStatus('current')
npsaupPacketsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupPacketsReceivedPerSec.setStatus('current')
npsaupPendingRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupPendingRequests.setStatus('current')
npsaupProbationDecisions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupProbationDecisions.setStatus('current')
npsaupProbationDecisionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupProbationDecisionsPerSec.setStatus('current')
npsaupQuarantineDecisions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupQuarantineDecisions.setStatus('current')
npsaupQuarantineDecisionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupQuarantineDecisionsPerSec.setStatus('current')
npsaupRequestTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupRequestTimeouts.setStatus('current')
npsaupRequestTimeoutsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupRequestTimeoutsPerSec.setStatus('current')
npsaupRetransmissions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupRetransmissions.setStatus('current')
npsaupRetransmissionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupRetransmissionsPerSec.setStatus('current')
npsaupUnknownType = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupUnknownType.setStatus('current')
npsaupUnknownTypePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 146, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsaupUnknownTypePerSec.setStatus('current')
npsAuthenticationServer = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147))
npsausAccessAccepts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausAccessAccepts.setStatus('current')
npsausAccessAcceptsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausAccessAcceptsPerSec.setStatus('current')
npsausAccessChallenges = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausAccessChallenges.setStatus('current')
npsausAccessChallengesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausAccessChallengesPerSec.setStatus('current')
npsausAccessRejects = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausAccessRejects.setStatus('current')
npsausAccessRejectsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausAccessRejectsPerSec.setStatus('current')
npsausAccessRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausAccessRequests.setStatus('current')
npsausAccessRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausAccessRequestsPerSec.setStatus('current')
npsausBadAuthenticators = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausBadAuthenticators.setStatus('current')
npsausBadAuthenticatorsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausBadAuthenticatorsPerSec.setStatus('current')
npsausDroppedPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausDroppedPackets.setStatus('current')
npsausDroppedPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausDroppedPacketsPerSec.setStatus('current')
npsausDuplicateAccessRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausDuplicateAccessRequests.setStatus('current')
npsausDupAccessRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausDupAccessRequestsPerSec.setStatus('current')
npsausFullAccessDecisions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausFullAccessDecisions.setStatus('current')
npsausFullAccessDecisionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausFullAccessDecisionsPerSec.setStatus('current')
npsausInvalidRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausInvalidRequests.setStatus('current')
npsausInvalidRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausInvalidRequestsPerSec.setStatus('current')
npsausMalformedPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausMalformedPackets.setStatus('current')
npsausMalformedPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausMalformedPacketsPerSec.setStatus('current')
npsausPacketsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausPacketsReceived.setStatus('current')
npsausPacketsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausPacketsReceivedPerSec.setStatus('current')
npsausPacketsSent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausPacketsSent.setStatus('current')
npsausPacketsSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausPacketsSentPerSec.setStatus('current')
npsausProbationDecisions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausProbationDecisions.setStatus('current')
npsausProbationDecisionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausProbationDecisionsPerSec.setStatus('current')
npsausQuarantineDecisions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausQuarantineDecisions.setStatus('current')
npsausQuarantineDecisionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausQuarantineDecisionsPerSec.setStatus('current')
npsausServerResetTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausServerResetTime.setStatus('current')
npsausServerUpTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausServerUpTime.setStatus('current')
npsausUnknownType = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausUnknownType.setStatus('current')
npsausUnknownTypePerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 147, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsausUnknownTypePerSec.setStatus('current')
npsPolicyEngine = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 148))
npspeLastRoundTripTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 148, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npspeLastRoundTripTime.setStatus('current')
npspeMatchedRemoteAccessPolicies = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 148, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npspeMatchedRemoteAccessPolicies.setStatus('current')
npspeMatchRemoteAccPolicyPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 148, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npspeMatchRemoteAccPolicyPerSec.setStatus('current')
npspePendingRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 148, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npspePendingRequests.setStatus('current')
npsRemoteAccountingServersTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149), )
if mibBuilder.loadTexts: npsRemoteAccountingServersTable.setStatus('current')
npsRemoteAccountingServersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1), ).setIndexNames((0, "INFORMANT-ADV", "npsracsInstance"))
if mibBuilder.loadTexts: npsRemoteAccountingServersEntry.setStatus('current')
npsracsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsInstance.setStatus('current')
npsracsAccountingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsAccountingRequests.setStatus('current')
npsracsAccountingRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsAccountingRequestsPerSec.setStatus('current')
npsracsAccountingResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsAccountingResponses.setStatus('current')
npsracsAccountingResponsesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsAccountingResponsesPerSec.setStatus('current')
npsracsBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsBadAuthenticators.setStatus('current')
npsracsBadAuthenticatorsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsBadAuthenticatorsPerSec.setStatus('current')
npsracsDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsDroppedPackets.setStatus('current')
npsracsDroppedPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsDroppedPacketsPerSec.setStatus('current')
npsracsLastRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsLastRoundTripTime.setStatus('current')
npsracsMalformedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsMalformedPackets.setStatus('current')
npsracsMalformedPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsMalformedPacketsPerSec.setStatus('current')
npsracsPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsPacketsReceived.setStatus('current')
npsracsPacketsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsPacketsReceivedPerSec.setStatus('current')
npsracsPendingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsPendingRequests.setStatus('current')
npsracsPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsPortNumber.setStatus('current')
npsracsRequestTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsRequestTimeouts.setStatus('current')
npsracsRequestTimeoutsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsRequestTimeoutsPerSec.setStatus('current')
npsracsRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsRetransmissions.setStatus('current')
npsracsRetransmissionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsRetransmissionsPerSec.setStatus('current')
npsracsUnknownType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsUnknownType.setStatus('current')
npsracsUnknownTypePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 149, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsracsUnknownTypePerSec.setStatus('current')
npsRemoteAuthServersTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150), )
if mibBuilder.loadTexts: npsRemoteAuthServersTable.setStatus('current')
npsRemoteAuthServersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1), ).setIndexNames((0, "INFORMANT-ADV", "npsrausInstance"))
if mibBuilder.loadTexts: npsRemoteAuthServersEntry.setStatus('current')
npsrausInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausInstance.setStatus('current')
npsrausAccessAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausAccessAccepts.setStatus('current')
npsrausAccessAcceptsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausAccessAcceptsPerSec.setStatus('current')
npsrausAccessChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausAccessChallenges.setStatus('current')
npsrausAccessChallengesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausAccessChallengesPerSec.setStatus('current')
npsrausAccessRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausAccessRejects.setStatus('current')
npsrausAccessRejectsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausAccessRejectsPerSec.setStatus('current')
npsrausAccessRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausAccessRequests.setStatus('current')
npsrausAccessRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausAccessRequestsPerSec.setStatus('current')
npsrausBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausBadAuthenticators.setStatus('current')
npsrausBadAuthenticatorsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausBadAuthenticatorsPerSec.setStatus('current')
npsrausDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausDroppedPackets.setStatus('current')
npsrausDroppedPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausDroppedPacketsPerSec.setStatus('current')
npsrausFullAccessDecisions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausFullAccessDecisions.setStatus('current')
npsrausFullAccessDecisionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausFullAccessDecisionsPerSec.setStatus('current')
npsrausLastRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausLastRoundTripTime.setStatus('current')
npsrausMalformedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausMalformedPackets.setStatus('current')
npsrausMalformedPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausMalformedPacketsPerSec.setStatus('current')
npsrausPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausPacketsReceived.setStatus('current')
npsrausPacketsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausPacketsReceivedPerSec.setStatus('current')
npsrausPendingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausPendingRequests.setStatus('current')
npsrausPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausPortNumber.setStatus('current')
npsrausProbationDecisions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausProbationDecisions.setStatus('current')
npsrausProbationDecisionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausProbationDecisionsPerSec.setStatus('current')
npsrausQuarantineDecisions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausQuarantineDecisions.setStatus('current')
npsrausQuarantineDecisionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausQuarantineDecisionsPerSec.setStatus('current')
npsrausRequestTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausRequestTimeouts.setStatus('current')
npsrausRequestTimeoutsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausRequestTimeoutsPerSec.setStatus('current')
npsrausRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausRetransmissions.setStatus('current')
npsrausRetransmissionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausRetransmissionsPerSec.setStatus('current')
npsrausUnknownType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausUnknownType.setStatus('current')
npsrausUnknownTypePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 150, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsrausUnknownTypePerSec.setStatus('current')
npsSystemHealthValidatorsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151), )
if mibBuilder.loadTexts: npsSystemHealthValidatorsTable.setStatus('current')
npsSystemHealthValidatorsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1), ).setIndexNames((0, "INFORMANT-ADV", "npsshvInstance"))
if mibBuilder.loadTexts: npsSystemHealthValidatorsEntry.setStatus('current')
npsshvInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsshvInstance.setStatus('current')
npsshvShvClientCommFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsshvShvClientCommFailures.setStatus('current')
npsshvShvClientCommFailurePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsshvShvClientCommFailurePerSec.setStatus('current')
npsshvShvClientComponentFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsshvShvClientComponentFailures.setStatus('current')
npsshvShvClientComponentFailSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsshvShvClientComponentFailSec.setStatus('current')
npsshvShvCompliances = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsshvShvCompliances.setStatus('current')
npsshvShvCompliancesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsshvShvCompliancesPerSec.setStatus('current')
npsshvShvLastRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsshvShvLastRoundTripTime.setStatus('current')
npsshvShvNonCompliances = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsshvShvNonCompliances.setStatus('current')
npsshvShvNonCompliancesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsshvShvNonCompliancesPerSec.setStatus('current')
npsshvShvNoneFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsshvShvNoneFailures.setStatus('current')
npsshvShvNoneFailuresPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsshvShvNoneFailuresPerSec.setStatus('current')
npsshvShvOtherFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsshvShvOtherFailures.setStatus('current')
npsshvShvOtherFailuresPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsshvShvOtherFailuresPerSec.setStatus('current')
npsshvShvServerCommFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsshvShvServerCommFailures.setStatus('current')
npsshvShvServerCommnFailPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsshvShvServerCommnFailPerSec.setStatus('current')
npsshvShvServerComponentFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsshvShvServerComponentFailures.setStatus('current')
npsshvShvServerCompFailurePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 151, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npsshvShvServerCompFailurePerSec.setStatus('current')
ocspServerConnectionsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 152), )
if mibBuilder.loadTexts: ocspServerConnectionsTable.setStatus('current')
ocspServerConnectionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 152, 1), ).setIndexNames((0, "INFORMANT-ADV", "ocspscInstance"))
if mibBuilder.loadTexts: ocspServerConnectionsEntry.setStatus('current')
ocspscInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 152, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocspscInstance.setStatus('current')
ocspscActiveConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 152, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ocspscActiveConnections.setStatus('current')
rpcPerHTTPProxy = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 153))
if mibBuilder.loadTexts: rpcPerHTTPProxy.setStatus('current')
rpcpAttemptLoadBalBrkRqstsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpcpAttemptLoadBalBrkRqstsPerSec.setStatus('current')
rpcpAttemptLoadBalDecisionPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpcpAttemptLoadBalDecisionPerSec.setStatus('current')
rpcpCurNumInRPCOverHTTPConn = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpcpCurNumInRPCOverHTTPConn.setStatus('current')
rpcpCurrentNumberOfUniqueUsers = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpcpCurrentNumberOfUniqueUsers.setStatus('current')
rpcpFailLoadBalBrokerRqstsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpcpFailLoadBalBrokerRqstsPerSec.setStatus('current')
rpcpFailLoadBalDecisionsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpcpFailLoadBalDecisionsPerSec.setStatus('current')
rpcpNumBackEndConnAttemptsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpcpNumBackEndConnAttemptsPerSec.setStatus('current')
rpcpNumFailBackEndConnAttmPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpcpNumFailBackEndConnAttmPerSec.setStatus('current')
rpcpRPCPerHTTPRequestsPerSecond = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpcpRPCPerHTTPRequestsPerSecond.setStatus('current')
rpcpTotalInBandwidthBackEndSrvrs = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpcpTotalInBandwidthBackEndSrvrs.setStatus('current')
rpcpTotalOutBandwidthBackEndSrvr = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 153, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpcpTotalOutBandwidthBackEndSrvr.setStatus('current')
rpcPerHTTPProxyPerServerTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 154), )
if mibBuilder.loadTexts: rpcPerHTTPProxyPerServerTable.setStatus('current')
rpcPerHTTPProxyPerServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 154, 1), ).setIndexNames((0, "INFORMANT-ADV", "rpcpsInstance"))
if mibBuilder.loadTexts: rpcPerHTTPProxyPerServerEntry.setStatus('current')
rpcpsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 154, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpcpsInstance.setStatus('current')
rpcpsCurrentNumberOfBackendConns = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 154, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rpcpsCurrentNumberOfBackendConns.setStatus('current')
searchGatherer = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155))
if mibBuilder.loadTexts: searchGatherer.setStatus('current')
sgActiveQueueLength = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgActiveQueueLength.setStatus('current')
sgAdminClients = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgAdminClients.setStatus('current')
sgAllNotificationsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgAllNotificationsReceived.setStatus('current')
sgDelayedDocuments = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgDelayedDocuments.setStatus('current')
sgDocumentEntries = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgDocumentEntries.setStatus('current')
sgDocumentsDelayedRetry = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgDocumentsDelayedRetry.setStatus('current')
sgDocumentsFiltered = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgDocumentsFiltered.setStatus('current')
sgDocumentsFilteredRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgDocumentsFilteredRate.setStatus('current')
sgDocumentsSuccessfullyFiltered = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgDocumentsSuccessfullyFiltered.setStatus('current')
sgDocumentsSuccessFilteredRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgDocumentsSuccessFilteredRate.setStatus('current')
sgExtNotificationsRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgExtNotificationsRate.setStatus('current')
sgExtNotificationsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgExtNotificationsReceived.setStatus('current')
sgFilterObjects = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgFilterObjects.setStatus('current')
sgFilterProcessCreated = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgFilterProcessCreated.setStatus('current')
sgFilterProcesses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgFilterProcesses.setStatus('current')
sgFilterProcessesMax = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgFilterProcessesMax.setStatus('current')
sgFilteringThreads = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgFilteringThreads.setStatus('current')
sgHeartbeats = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgHeartbeats.setStatus('current')
sgHeartbeatsRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgHeartbeatsRate.setStatus('current')
sgIdleThreads = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgIdleThreads.setStatus('current')
sgNotificationSources = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgNotificationSources.setStatus('current')
sgNotificationsRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgNotificationsRate.setStatus('current')
sgPerformanceLevel = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgPerformanceLevel.setStatus('current')
sgReasonToBackOff = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgReasonToBackOff.setStatus('current')
sgServerObjects = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgServerObjects.setStatus('current')
sgServerObjectsCreated = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgServerObjectsCreated.setStatus('current')
sgServersCurrentlyUnavailable = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgServersCurrentlyUnavailable.setStatus('current')
sgServersUnavailable = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgServersUnavailable.setStatus('current')
sgStemmersCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgStemmersCached.setStatus('current')
sgSystemIOTrafficRate = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgSystemIOTrafficRate.setStatus('current')
sgThreadsAccessingNetwork = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgThreadsAccessingNetwork.setStatus('current')
sgThreadsInPlugIns = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgThreadsInPlugIns.setStatus('current')
sgThreadsBlockedDueToBackOff = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgThreadsBlockedDueToBackOff.setStatus('current')
sgTimeOuts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgTimeOuts.setStatus('current')
sgWordBreakersCached = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 155, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgWordBreakersCached.setStatus('current')
searchGathererProjectsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156), )
if mibBuilder.loadTexts: searchGathererProjectsTable.setStatus('current')
searchGathererProjectsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1), ).setIndexNames((0, "INFORMANT-ADV", "sgpInstance"))
if mibBuilder.loadTexts: searchGathererProjectsEntry.setStatus('current')
sgpInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpInstance.setStatus('current')
sgpAccessedFileRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpAccessedFileRate.setStatus('current')
sgpAccessedFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpAccessedFiles.setStatus('current')
sgpAdaptiveCrawlErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpAdaptiveCrawlErrors.setStatus('current')
sgpChangedDocuments = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpChangedDocuments.setStatus('current')
sgpCrawlsInProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpCrawlsInProgress.setStatus('current')
sgpDelayedDocuments = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpDelayedDocuments.setStatus('current')
sgpDocumentAddRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpDocumentAddRate.setStatus('current')
sgpDocumentAdditions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpDocumentAdditions.setStatus('current')
sgpDocumentDeleteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpDocumentDeleteRate.setStatus('current')
sgpDocumentDeletes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpDocumentDeletes.setStatus('current')
sgpDocumentModifies = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpDocumentModifies.setStatus('current')
sgpDocumentModifiesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpDocumentModifiesRate.setStatus('current')
sgpDocumentMoveAndRenameRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpDocumentMoveAndRenameRate.setStatus('current')
sgpDocumentMovesPerRenames = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpDocumentMovesPerRenames.setStatus('current')
sgpDocumentsInProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpDocumentsInProgress.setStatus('current')
sgpDocumentsOnHold = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpDocumentsOnHold.setStatus('current')
sgpErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpErrorRate.setStatus('current')
sgpFileErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpFileErrors.setStatus('current')
sgpFileErrorsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpFileErrorsRate.setStatus('current')
sgpFilteredOffice = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpFilteredOffice.setStatus('current')
sgpFilteredOfficeRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpFilteredOfficeRate.setStatus('current')
sgpFilteredText = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpFilteredText.setStatus('current')
sgpFilteredTextRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpFilteredTextRate.setStatus('current')
sgpFilteringDocuments = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpFilteringDocuments.setStatus('current')
sgpGathererPausedFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpGathererPausedFlag.setStatus('current')
sgpHistoryRecoveryProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpHistoryRecoveryProgress.setStatus('current')
sgpIncrementalCrawls = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpIncrementalCrawls.setStatus('current')
sgpIteratingHistInProgressFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpIteratingHistInProgressFlag.setStatus('current')
sgpNotModified = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpNotModified.setStatus('current')
sgpProcessedDocuments = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpProcessedDocuments.setStatus('current')
sgpProcessedDocumentsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpProcessedDocumentsRate.setStatus('current')
sgpRecoveryInProgressFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpRecoveryInProgressFlag.setStatus('current')
sgpRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpRetries.setStatus('current')
sgpRetriesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpRetriesRate.setStatus('current')
sgpStartedDocuments = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpStartedDocuments.setStatus('current')
sgpStatusError = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpStatusError.setStatus('current')
sgpStatusSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpStatusSuccess.setStatus('current')
sgpSuccessRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpSuccessRate.setStatus('current')
sgpURLsInHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpURLsInHistory.setStatus('current')
sgpUniqueDocuments = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpUniqueDocuments.setStatus('current')
sgpWaitingDocuments = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 156, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sgpWaitingDocuments.setStatus('current')
searchIndexerTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157), )
if mibBuilder.loadTexts: searchIndexerTable.setStatus('current')
searchIndexerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1), ).setIndexNames((0, "INFORMANT-ADV", "siInstance"))
if mibBuilder.loadTexts: searchIndexerEntry.setStatus('current')
siInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siInstance.setStatus('current')
siActiveConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siActiveConnections.setStatus('current')
siCleanWidSets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siCleanWidSets.setStatus('current')
siDirtyWidSets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siDirtyWidSets.setStatus('current')
siDocumentsFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siDocumentsFiltered.setStatus('current')
siIndexSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siIndexSize.setStatus('current')
siL0IndexesWordlists = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL0IndexesWordlists.setStatus('current')
siL0MergeFlushCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL0MergeFlushCount.setStatus('current')
siL0MergeFlushSpeedAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL0MergeFlushSpeedAverage.setStatus('current')
siL0MergeFlushSpeedLast = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL0MergeFlushSpeedLast.setStatus('current')
siL0MergesFlushesNow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL0MergesFlushesNow.setStatus('current')
siL1MergeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL1MergeCount.setStatus('current')
siL1MergeSpeedAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL1MergeSpeedAverage.setStatus('current')
siL1MergeSpeedLast = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL1MergeSpeedLast.setStatus('current')
siL1MergesNow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL1MergesNow.setStatus('current')
siL2MergeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL2MergeCount.setStatus('current')
siL2MergeSpeedAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL2MergeSpeedAverage.setStatus('current')
siL2MergeSpeedLast = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL2MergeSpeedLast.setStatus('current')
siL2MergesNow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL2MergesNow.setStatus('current')
siL3MergeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL3MergeCount.setStatus('current')
siL3MergeSpeedAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL3MergeSpeedAverage.setStatus('current')
siL3MergeSpeedLast = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL3MergeSpeedLast.setStatus('current')
siL3MergesNow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL3MergesNow.setStatus('current')
siL4MergeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL4MergeCount.setStatus('current')
siL4MergeSpeedAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL4MergeSpeedAverage.setStatus('current')
siL4MergeSpeedLast = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL4MergeSpeedLast.setStatus('current')
siL4MergesNow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL4MergesNow.setStatus('current')
siL5MergeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL5MergeCount.setStatus('current')
siL5MergeSpeedAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL5MergeSpeedAverage.setStatus('current')
siL5MergeSpeedLast = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL5MergeSpeedLast.setStatus('current')
siL5MergesNow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL5MergesNow.setStatus('current')
siL6MergeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL6MergeCount.setStatus('current')
siL6MergeSpeedAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL6MergeSpeedAverage.setStatus('current')
siL6MergeSpeedLast = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL6MergeSpeedLast.setStatus('current')
siL6MergesNow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL6MergesNow.setStatus('current')
siL7MergeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL7MergeCount.setStatus('current')
siL7MergeSpeedAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL7MergeSpeedAverage.setStatus('current')
siL7MergeSpeedLast = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL7MergeSpeedLast.setStatus('current')
siL7MergesNow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL7MergesNow.setStatus('current')
siL8MergeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL8MergeCount.setStatus('current')
siL8MergeSpeedAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL8MergeSpeedAverage.setStatus('current')
siL8MergeSpeedLast = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL8MergeSpeedLast.setStatus('current')
siL8MergesNow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siL8MergesNow.setStatus('current')
siMasterIndexLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siMasterIndexLevel.setStatus('current')
siMasterMergeProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siMasterMergeProgress.setStatus('current')
siMasterMergesNow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siMasterMergesNow.setStatus('current')
siMasterMergesToDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siMasterMergesToDate.setStatus('current')
siPersistentIndexes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siPersistentIndexes.setStatus('current')
siPersistentIndexesL1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siPersistentIndexesL1.setStatus('current')
siPersistentIndexesL2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siPersistentIndexesL2.setStatus('current')
siPersistentIndexesL3 = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 51), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siPersistentIndexesL3.setStatus('current')
siPersistentIndexesL4 = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siPersistentIndexesL4.setStatus('current')
siPersistentIndexesL5 = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siPersistentIndexesL5.setStatus('current')
siPersistentIndexesL6 = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siPersistentIndexesL6.setStatus('current')
siPersistentIndexesL7 = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siPersistentIndexesL7.setStatus('current')
siPersistentIndexesL8 = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 56), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siPersistentIndexesL8.setStatus('current')
siQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 57), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siQueries.setStatus('current')
siQueriesFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 58), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siQueriesFailed.setStatus('current')
siQueriesSucceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 59), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siQueriesSucceeded.setStatus('current')
siShadowMergeLevels = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 60), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siShadowMergeLevels.setStatus('current')
siShadowMergeLevelsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 61), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siShadowMergeLevelsThreshold.setStatus('current')
siUniqueKeys = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 62), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siUniqueKeys.setStatus('current')
siWorkItemsCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 63), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siWorkItemsCreated.setStatus('current')
siWorkItemsDeleted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 157, 1, 64), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siWorkItemsDeleted.setStatus('current')
serverForNFS = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158))
if mibBuilder.loadTexts: serverForNFS.setStatus('current')
snfsAnonymousAccesses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsAnonymousAccesses.setStatus('current')
snfsBytesRead = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsBytesRead.setStatus('current')
snfsBytesReadPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsBytesReadPerSec.setStatus('current')
snfsBytesWritten = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsBytesWritten.setStatus('current')
snfsBytesWrittenPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsBytesWrittenPerSec.setStatus('current')
snfsDRCHits = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsDRCHits.setStatus('current')
snfsDRCReplies = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsDRCReplies.setStatus('current')
snfsDRCReplyPresent = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsDRCReplyPresent.setStatus('current')
snfsDRCSendErrors = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsDRCSendErrors.setStatus('current')
snfsDiscardedDRCPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsDiscardedDRCPackets.setStatus('current')
snfsMOUNTErrorsV1 = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsMOUNTErrorsV1.setStatus('current')
snfsMOUNTErrorsV3 = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsMOUNTErrorsV3.setStatus('current')
snfsMV100NULLMount = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsMV100NULLMount.setStatus('current')
snfsMV101Mount = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsMV101Mount.setStatus('current')
snfsMV102DumpMounts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsMV102DumpMounts.setStatus('current')
snfsMV103Unmount = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsMV103Unmount.setStatus('current')
snfsMV104UnmountAll = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsMV104UnmountAll.setStatus('current')
snfsMV105ExportList = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsMV105ExportList.setStatus('current')
snfsMV300NULLMount = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsMV300NULLMount.setStatus('current')
snfsMV301Mount = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsMV301Mount.setStatus('current')
snfsMV302DumpMounts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsMV302DumpMounts.setStatus('current')
snfsMV303Unmount = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsMV303Unmount.setStatus('current')
snfsMV304UnmountAll = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsMV304UnmountAll.setStatus('current')
snfsMV305ExportList = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsMV305ExportList.setStatus('current')
snfsNFSErrorsV2 = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsNFSErrorsV2.setStatus('current')
snfsNFSErrorsV3 = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsNFSErrorsV3.setStatus('current')
snfsPendingDRCPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsPendingDRCPackets.setStatus('current')
snfsRPCCallPacketsCreated = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsRPCCallPacketsCreated.setStatus('current')
snfsRPCCallsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsRPCCallsReceivedPerSec.setStatus('current')
snfsRPCFailures = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsRPCFailures.setStatus('current')
snfsRPCRepliesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsRPCRepliesReceivedPerSec.setStatus('current')
snfsRPCReplyPacketsCreated = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsRPCReplyPacketsCreated.setStatus('current')
snfsThreadsTotal = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsThreadsTotal.setStatus('current')
snfsThreadsWaiting = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsThreadsWaiting.setStatus('current')
snfsTotalMountCallsV1 = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsTotalMountCallsV1.setStatus('current')
snfsTotalMountCallsV3 = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsTotalMountCallsV3.setStatus('current')
snfsTotalNFSCallsV2 = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsTotalNFSCallsV2.setStatus('current')
snfsTotalNFSCallsV3 = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsTotalNFSCallsV3.setStatus('current')
snfsTotalRPCCallsReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsTotalRPCCallsReceived.setStatus('current')
snfsTotalRPCRepliesReceived = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsTotalRPCRepliesReceived.setStatus('current')
snfsUnrecognizedRPCPackets = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsUnrecognizedRPCPackets.setStatus('current')
snfsV200NULL = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV200NULL.setStatus('current')
snfsV201GetAttributes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV201GetAttributes.setStatus('current')
snfsV202SetAttributes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV202SetAttributes.setStatus('current')
snfsV203Root = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV203Root.setStatus('current')
snfsV204Lookup = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV204Lookup.setStatus('current')
snfsV205ReadLink = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV205ReadLink.setStatus('current')
snfsV206Read = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV206Read.setStatus('current')
snfsV207WriteCache = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV207WriteCache.setStatus('current')
snfsV208Write = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV208Write.setStatus('current')
snfsV209Create = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 51), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV209Create.setStatus('current')
snfsV210Remove = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV210Remove.setStatus('current')
snfsV211Rename = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV211Rename.setStatus('current')
snfsV212Link = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV212Link.setStatus('current')
snfsV213SymbolicLink = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV213SymbolicLink.setStatus('current')
snfsV214MakeDirectory = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 56), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV214MakeDirectory.setStatus('current')
snfsV215RemoveDirectory = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 57), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV215RemoveDirectory.setStatus('current')
snfsV216ReadDirectory = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 58), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV216ReadDirectory.setStatus('current')
snfsV217StatFileSystem = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 59), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV217StatFileSystem.setStatus('current')
snfsV300NULL = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 60), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV300NULL.setStatus('current')
snfsV301GetAttributes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 61), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV301GetAttributes.setStatus('current')
snfsV302SetAttributes = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 62), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV302SetAttributes.setStatus('current')
snfsV303Lookup = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 63), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV303Lookup.setStatus('current')
snfsV304Access = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 64), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV304Access.setStatus('current')
snfsV305ReadLinkV3 = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 65), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV305ReadLinkV3.setStatus('current')
snfsV306Read = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 66), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV306Read.setStatus('current')
snfsV307Write = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 67), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV307Write.setStatus('current')
snfsV308Create = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 68), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV308Create.setStatus('current')
snfsV309MakeDirectory = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 69), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV309MakeDirectory.setStatus('current')
snfsV310SymbolicLink = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 70), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV310SymbolicLink.setStatus('current')
snfsV311MakeNode = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 71), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV311MakeNode.setStatus('current')
snfsV312Remove = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 72), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV312Remove.setStatus('current')
snfsV313RemoveDirectory = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 73), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV313RemoveDirectory.setStatus('current')
snfsV314Rename = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 74), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV314Rename.setStatus('current')
snfsV315Link = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 75), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV315Link.setStatus('current')
snfsV316ReadDirectory = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 76), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV316ReadDirectory.setStatus('current')
snfsV317ReadDirectory = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 77), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV317ReadDirectory.setStatus('current')
snfsV318FileSystemStat = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 78), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV318FileSystemStat.setStatus('current')
snfsV319FileSystemInfo = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 79), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV319FileSystemInfo.setStatus('current')
snfsV320PathConfiguration = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 80), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV320PathConfiguration.setStatus('current')
snfsV321Commit = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 81), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsV321Commit.setStatus('current')
snfsWorkQueueSize = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 82), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsWorkQueueSize.setStatus('current')
snfsXDRFailures = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 158, 83), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snfsXDRFailures.setStatus('current')
tbsCounters = ObjectIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 2, 159))
if mibBuilder.loadTexts: tbsCounters.setStatus('current')
tbscCurrentContexts = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 159, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tbscCurrentContexts.setStatus('current')
tbscCurrentResources = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 159, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tbscCurrentResources.setStatus('current')
terminalServiceGateway = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 160))
tsgConnectionRequestAuthTime = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 160, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsgConnectionRequestAuthTime.setStatus('current')
tsgCurrentConnections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 160, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsgCurrentConnections.setStatus('current')
tsgFailedConnectionAuthorization = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 160, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsgFailedConnectionAuthorization.setStatus('current')
tsgFailedResourceAuthoization = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 160, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsgFailedResourceAuthoization.setStatus('current')
tsgFailedConnections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 160, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsgFailedConnections.setStatus('current')
tsgSuccessfulConnections = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 160, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsgSuccessfulConnections.setStatus('current')
uddiAPICounts = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161))
uddicAddpublisherAssertions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicAddpublisherAssertions.setStatus('current')
uddicDeletebinding = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicDeletebinding.setStatus('current')
uddicDeletebusiness = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicDeletebusiness.setStatus('current')
uddicDeletepublisherAssertions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicDeletepublisherAssertions.setStatus('current')
uddicDeleteservice = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicDeleteservice.setStatus('current')
uddicDeletetModel = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicDeletetModel.setStatus('current')
uddicDiscardauthToken = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicDiscardauthToken.setStatus('current')
uddicDoping = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicDoping.setStatus('current')
uddicFindbinding = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicFindbinding.setStatus('current')
uddicFindbusiness = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicFindbusiness.setStatus('current')
uddicFindrelatedBusinesses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicFindrelatedBusinesses.setStatus('current')
uddicFindservice = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicFindservice.setStatus('current')
uddicFindtModel = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicFindtModel.setStatus('current')
uddicGetassertionStatusReport = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicGetassertionStatusReport.setStatus('current')
uddicGetauthToken = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicGetauthToken.setStatus('current')
uddicGetbindingDetail = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicGetbindingDetail.setStatus('current')
uddicGetbusinessDetail = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicGetbusinessDetail.setStatus('current')
uddicGetbusinessDetailExt = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicGetbusinessDetailExt.setStatus('current')
uddicGetchangeRecords = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicGetchangeRecords.setStatus('current')
uddicGethighWaterMarks = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicGethighWaterMarks.setStatus('current')
uddicGetpublisherAssertions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicGetpublisherAssertions.setStatus('current')
uddicGetregisteredInfo = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicGetregisteredInfo.setStatus('current')
uddicGetrelatedCategories = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicGetrelatedCategories.setStatus('current')
uddicGetserviceDetail = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicGetserviceDetail.setStatus('current')
uddicGettModelDetail = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicGettModelDetail.setStatus('current')
uddicNotifychangeRecordAvailable = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicNotifychangeRecordAvailable.setStatus('current')
uddicSavebinding = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicSavebinding.setStatus('current')
uddicSavebusiness = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicSavebusiness.setStatus('current')
uddicSaveservice = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicSaveservice.setStatus('current')
uddicSavetModel = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicSavetModel.setStatus('current')
uddicSetpublisherAssertions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicSetpublisherAssertions.setStatus('current')
uddicValidatecategorization = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 161, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uddicValidatecategorization.setStatus('current')
uddiAPITimes = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162))
udditAddpublisherAssertions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditAddpublisherAssertions.setStatus('current')
udditDeletebinding = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditDeletebinding.setStatus('current')
udditDeletebusiness = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditDeletebusiness.setStatus('current')
udditDeletepublisherAssertions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditDeletepublisherAssertions.setStatus('current')
udditDeleteservice = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditDeleteservice.setStatus('current')
udditDeletetModel = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditDeletetModel.setStatus('current')
udditDiscardauthToken = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditDiscardauthToken.setStatus('current')
udditDoping = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditDoping.setStatus('current')
udditFindbinding = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditFindbinding.setStatus('current')
udditFindbusiness = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditFindbusiness.setStatus('current')
udditFindrelatedBusinesses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditFindrelatedBusinesses.setStatus('current')
udditFindservice = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditFindservice.setStatus('current')
udditFindtModel = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditFindtModel.setStatus('current')
udditGetassertionStatusReport = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditGetassertionStatusReport.setStatus('current')
udditGetauthToken = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditGetauthToken.setStatus('current')
udditGetbindingDetail = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditGetbindingDetail.setStatus('current')
udditGetbusinessDetail = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditGetbusinessDetail.setStatus('current')
udditGetbusinessDetailExt = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditGetbusinessDetailExt.setStatus('current')
udditGetchangeRecords = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditGetchangeRecords.setStatus('current')
udditGethighWaterMarks = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditGethighWaterMarks.setStatus('current')
udditGetpublisherAssertions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditGetpublisherAssertions.setStatus('current')
udditGetregisteredInfo = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditGetregisteredInfo.setStatus('current')
udditGetrelatedCategories = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditGetrelatedCategories.setStatus('current')
udditGetserviceDetail = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditGetserviceDetail.setStatus('current')
udditGettModelDetail = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditGettModelDetail.setStatus('current')
udditNotifychangeRecordAvailable = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditNotifychangeRecordAvailable.setStatus('current')
udditSavebinding = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditSavebinding.setStatus('current')
udditSavebusiness = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditSavebusiness.setStatus('current')
udditSaveservice = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditSaveservice.setStatus('current')
udditSavetModel = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditSavetModel.setStatus('current')
udditSetpublisherAssertions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditSetpublisherAssertions.setStatus('current')
udditValidatecategorization = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 2, 162, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udditValidatecategorization.setStatus('current')
w3svcW3WPTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163), )
if mibBuilder.loadTexts: w3svcW3WPTable.setStatus('current')
w3svcW3WPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1), ).setIndexNames((0, "INFORMANT-ADV", "w3svcInstance"))
if mibBuilder.loadTexts: w3svcW3WPEntry.setStatus('current')
w3svcInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcInstance.setStatus('current')
w3svcActiveFlushedEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcActiveFlushedEntries.setStatus('current')
w3svcActiveRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcActiveRequests.setStatus('current')
w3svcActiveThreadsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcActiveThreadsCount.setStatus('current')
w3svcCurrentFileCacheMemoryUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcCurrentFileCacheMemoryUsage.setStatus('current')
w3svcCurrentFilesCached = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcCurrentFilesCached.setStatus('current')
w3svcCurrentMetadataCached = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcCurrentMetadataCached.setStatus('current')
w3svcCurrentURIsCached = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcCurrentURIsCached.setStatus('current')
w3svcFileCacheFlushes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcFileCacheFlushes.setStatus('current')
w3svcFileCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcFileCacheHits.setStatus('current')
w3svcFileCacheHitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcFileCacheHitsPerSec.setStatus('current')
w3svcFileCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcFileCacheMisses.setStatus('current')
w3svcFileCacheMissesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcFileCacheMissesPerSec.setStatus('current')
w3svcMaximumFileCacheMemoryUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcMaximumFileCacheMemoryUsage.setStatus('current')
w3svcMaximumThreadsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcMaximumThreadsCount.setStatus('current')
w3svcMetadataCacheFlushes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcMetadataCacheFlushes.setStatus('current')
w3svcMetadataCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcMetadataCacheHits.setStatus('current')
w3svcMetadataCacheHitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcMetadataCacheHitsPerSec.setStatus('current')
w3svcMetadataCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcMetadataCacheMisses.setStatus('current')
w3svcMetadataCacheMissesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcMetadataCacheMissesPerSec.setStatus('current')
w3svcOutputCacheCurrentFlushItem = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcOutputCacheCurrentFlushItem.setStatus('current')
w3svcOutputCacheCurrentItems = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcOutputCacheCurrentItems.setStatus('current')
w3svcOutputCacheCurrentMemUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcOutputCacheCurrentMemUsage.setStatus('current')
w3svcOutputCacheHitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcOutputCacheHitsPerSec.setStatus('current')
w3svcOutputCacheMissesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcOutputCacheMissesPerSec.setStatus('current')
w3svcOutputCacheTotalFlushItems = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcOutputCacheTotalFlushItems.setStatus('current')
w3svcOutputCacheTotalFlushes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcOutputCacheTotalFlushes.setStatus('current')
w3svcOutputCacheTotalHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcOutputCacheTotalHits.setStatus('current')
w3svcOutputCacheTotalMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcOutputCacheTotalMisses.setStatus('current')
w3svcRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcRequestsPerSec.setStatus('current')
w3svcTotalFilesCached = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcTotalFilesCached.setStatus('current')
w3svcTotalFlushedFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcTotalFlushedFiles.setStatus('current')
w3svcTotalFlushedMetadata = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcTotalFlushedMetadata.setStatus('current')
w3svcTotalFlushedURIs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcTotalFlushedURIs.setStatus('current')
w3svcTotalHTTPRequestsServed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcTotalHTTPRequestsServed.setStatus('current')
w3svcTotalMetadataCached = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcTotalMetadataCached.setStatus('current')
w3svcTotalThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcTotalThreads.setStatus('current')
w3svcTotalURIsCached = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcTotalURIsCached.setStatus('current')
w3svcURICacheFlushes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcURICacheFlushes.setStatus('current')
w3svcURICacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcURICacheHits.setStatus('current')
w3svcURICacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcURICacheMisses.setStatus('current')
w3svcUriCacheHitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcUriCacheHitsPerSec.setStatus('current')
w3svcUriCacheMissesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 163, 1, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: w3svcUriCacheMissesPerSec.setStatus('current')
wasW3WPTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 164), )
if mibBuilder.loadTexts: wasW3WPTable.setStatus('current')
wasW3WPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1), ).setIndexNames((0, "INFORMANT-ADV", "wasInstance"))
if mibBuilder.loadTexts: wasW3WPEntry.setStatus('current')
wasInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wasInstance.setStatus('current')
wasActiveListenerChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wasActiveListenerChannels.setStatus('current')
wasActiveProtocolHandlers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wasActiveProtocolHandlers.setStatus('current')
wasHealthPingReplyLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wasHealthPingReplyLatency.setStatus('current')
wasTotalHealthPings = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wasTotalHealthPings.setStatus('current')
wasTotalMessagesSentToWAS = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wasTotalMessagesSentToWAS.setStatus('current')
wasTotalRequestsServed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wasTotalRequestsServed.setStatus('current')
wasTotalRuntimeStatusQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wasTotalRuntimeStatusQueries.setStatus('current')
wasTotalWASMessagesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 164, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wasTotalWASMessagesReceived.setStatus('current')
wsrmPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 165), )
if mibBuilder.loadTexts: wsrmPolicyTable.setStatus('current')
wsrmPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 165, 1), ).setIndexNames((0, "INFORMANT-ADV", "wsrmplInstance"))
if mibBuilder.loadTexts: wsrmPolicyEntry.setStatus('current')
wsrmplInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 165, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsrmplInstance.setStatus('current')
wsrmplSystemManagedCPUPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 165, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsrmplSystemManagedCPUPercent.setStatus('current')
wsrmProcessTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 166), )
if mibBuilder.loadTexts: wsrmProcessTable.setStatus('current')
wsrmProcessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 166, 1), ).setIndexNames((0, "INFORMANT-ADV", "wsrmprInstance"))
if mibBuilder.loadTexts: wsrmProcessEntry.setStatus('current')
wsrmprInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 166, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsrmprInstance.setStatus('current')
wsrmprActualManagedCPUPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 166, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsrmprActualManagedCPUPercent.setStatus('current')
wsrmProcessMatchingCriteriaTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 2, 167), )
if mibBuilder.loadTexts: wsrmProcessMatchingCriteriaTable.setStatus('current')
wsrmProcessMatchingCriteriaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 2, 167, 1), ).setIndexNames((0, "INFORMANT-ADV", "wsrmpmcInstance"))
if mibBuilder.loadTexts: wsrmProcessMatchingCriteriaEntry.setStatus('current')
wsrmpmcInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 167, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsrmpmcInstance.setStatus('current')
wsrmpmcActualManagedCPUPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 167, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsrmpmcActualManagedCPUPercent.setStatus('current')
wsrmpmcManagedCPUPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 167, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsrmpmcManagedCPUPercent.setStatus('current')
wsrmpmcPageFileMBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 167, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsrmpmcPageFileMBytes.setStatus('current')
wsrmpmcProcessCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 167, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsrmpmcProcessCount.setStatus('current')
wsrmpmcTargetManagedCPUPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 167, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsrmpmcTargetManagedCPUPercent.setStatus('current')
wsrmpmcWorkingSetMBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 2, 167, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wsrmpmcWorkingSetMBytes.setStatus('current')
mibBuilder.exportSymbols("INFORMANT-ADV", tcpV4SegmentsRetransmittedPerSec=tcpV4SegmentsRetransmittedPerSec, dsPhantomsCleanedPerSec=dsPhantomsCleanedPerSec, frsFetchBlocksSent=frsFetchBlocksSent, adnRequestsDisconnected=adnRequestsDisconnected, memoryPagesInputPerSec=memoryPagesInputPerSec, sme3TransactionsFlowedPerSecond=sme3TransactionsFlowedPerSecond, mfsMaxNonPagedMemory=mfsMaxNonPagedMemory, nntpCmdsIHaveCmds=nntpCmdsIHaveCmds, netlogonTable=netlogonTable, dtcAbortedTransactionsPerSec=dtcAbortedTransactionsPerSec, tssPrivateBytes=tssPrivateBytes, dnsZoneTransferRequestReceived=dnsZoneTransferRequestReceived, adnApplAuditSuccessEventsRaised=adnApplAuditSuccessEventsRaised, dtcb3AvgParticipantPrepRspnsTime=dtcb3AvgParticipantPrepRspnsTime, spxFramesPerSec=spxFramesPerSec, msmqsOutgoingBytesPerSec=msmqsOutgoingBytesPerSec, ipxFailuresLink=ipxFailuresLink, cachePinReadsPerSec=cachePinReadsPerSec, snfsV301GetAttributes=snfsV301GetAttributes, winsServer=winsServer, tssWorkingSetPeak=tssWorkingSetPeak, dnsAXFRRequestReceived=dnsAXFRRequestReceived, wsServiceUptime=wsServiceUptime, icpBadAuthenticatorsPerSec=icpBadAuthenticatorsPerSec, adnAppl1SessionStateSvrConnTotal=adnAppl1SessionStateSvrConnTotal, dsBaseSearchesPerSec=dsBaseSearchesPerSec, pDiskAvgDiskReadQueueLength=pDiskAvgDiskReadQueueLength, idxSvcWordLists=idxSvcWordLists, memoryStbyCacheNormPriorityMByte=memoryStbyCacheNormPriorityMByte, adn2StateServerSessionsTimedOut=adn2StateServerSessionsTimedOut, wwfWorkflowsCreatedPerSec=wwfWorkflowsCreatedPerSec, npsaupRequestTimeouts=npsaupRequestTimeouts, smtpSrvrMsgBytesRcvdTotal=smtpSrvrMsgBytesRcvdTotal, iucBadAuthenticatorsPerSec=iucBadAuthenticatorsPerSec, wsTotalOtherRqstMethods=wsTotalOtherRqstMethods, adnAppl2FormsAuthenticationSucc=adnAppl2FormsAuthenticationSucc, aspRequestBytesInTotal=aspRequestBytesInTotal, dotNETCLRLocksAndThreadsTable=dotNETCLRLocksAndThreadsTable, nwBytesTotalPerSec=nwBytesTotalPerSec, adbiPagesConverted=adbiPagesConverted, wsHeadRqstsPerSec=wsHeadRqstsPerSec, sppsContextHandles=sppsContextHandles, snfsV214MakeDirectory=snfsV214MakeDirectory, ntdsDSDirectoryReadsPerSec=ntdsDSDirectoryReadsPerSec, nntpCmdsNewgroupsCmds=nntpCmdsNewgroupsCmds, ntdsDRAOutboundBytesCBSBCPerSec=ntdsDRAOutboundBytesCBSBCPerSec, wmusHTTPStreamsStreamingBody=wmusHTTPStreamsStreamingBody, PYSNMP_MODULE_ID=advanced, frsInstance=frsInstance, msmqSvcOutgoingMessagesPerSec=msmqSvcOutgoingMessagesPerSec, pDiskDiskBytesPerSec=pDiskDiskBytesPerSec, tssPageFileBytesPeak=tssPageFileBytesPeak, ftpSvcTotalLogonAttempts=ftpSvcTotalLogonAttempts, snfsV217StatFileSystem=snfsV217StatFileSystem, cpuPercentDPCTime=cpuPercentDPCTime, rasPortBytesTransmitted=rasPortBytesTransmitted, usbControlDataBytesPerSec=usbControlDataBytesPerSec, dsSAMGCEvaluationsPerSec=dsSAMGCEvaluationsPerSec, npsaupAccessRejects=npsaupAccessRejects, smtpSrvrRouteTableLookupsPerSec=smtpSrvrRouteTableLookupsPerSec, adn1RequestExecutionTime=adn1RequestExecutionTime, nceNumOfFiltersPerSec=nceNumOfFiltersPerSec, npsAuthenticationProxy=npsAuthenticationProxy, dfsrfRDCCompressSizeOfFilesRcvd=dfsrfRDCCompressSizeOfFilesRcvd, jodPageFaultsPerSec=jodPageFaultsPerSec, siMasterIndexLevel=siMasterIndexLevel, adnApplTransactionsPerSec=adnApplTransactionsPerSec, netPacketsReceivedDiscarded=netPacketsReceivedDiscarded, dsDRAInValuesDNsOnlyPerSec=dsDRAInValuesDNsOnlyPerSec, snfsV206Read=snfsV206Read, smtpSrvrCatRcptsNDRdForwardLoop=smtpSrvrCatRcptsNDRdForwardLoop, adbIPerODatabaseWritesAvgLatency=adbIPerODatabaseWritesAvgLatency, jodIDProcess=jodIDProcess, npsaccUnknownType=npsaccUnknownType, frsRemoteChgOrdersReceived=frsRemoteChgOrdersReceived, npsracsAccountingResponses=npsracsAccountingResponses, pSchedFlowPktsScheduledPerSec=pSchedFlowPktsScheduledPerSec, frcCommunicationTimeouts=frcCommunicationTimeouts, snfsV312Remove=snfsV312Remove, dtcb3PreparedRetryCountPerSec=dtcb3PreparedRetryCountPerSec, processTable=processTable, authorizationManagerApplEntry=authorizationManagerApplEntry, smtpSrvrCatLDAPSrchsPerSec=smtpSrvrCatLDAPSrchsPerSec, npsaccMalformedPackets=npsaccMalformedPackets, npsaupRequestTimeoutsPerSec=npsaupRequestTimeoutsPerSec, icsPacketsSent=icsPacketsSent, pop3Service=pop3Service, tcpV6ConnectionsReset=tcpV6ConnectionsReset, adnAppl2CacheTotalHits=adnAppl2CacheTotalHits, wsrmpmcPageFileMBytes=wsrmpmcPageFileMBytes, dfsrsvDatabaseCommits=dfsrsvDatabaseCommits, lDiskDiskReadsPerSec=lDiskDiskReadsPerSec, mfsMaximumSessions=mfsMaximumSessions, ntdsABANRPerSec=ntdsABANRPerSec, pSchedPipeBadPacketsSchedPerSec=pSchedPipeBadPacketsSchedPerSec, siPersistentIndexesL7=siPersistentIndexesL7, ntdsDSPercentSearchesFromNSPI=ntdsDSPercentSearchesFromNSPI, processPageFileKBytesPeak=processPageFileKBytesPeak, ipxDatagramBytesSentPerSec=ipxDatagramBytesSentPerSec, dnsTotalQueryReceived=dnsTotalQueryReceived, wFPv6=wFPv6, adnAppl2OutputCacheHits=adnAppl2OutputCacheHits, nwServerSessions=nwServerSessions, swqWorkItemShortages=swqWorkItemShortages, npsacsDroppedPacketsPerSec=npsacsDroppedPacketsPerSec, smtpSrvrRemoteRetryQueueLength=smtpSrvrRemoteRetryQueueLength, pop3SvcBytesReceivePerSec=pop3SvcBytesReceivePerSec, sgpNotModified=sgpNotModified, npsaupDroppedPacketsPerSec=npsaupDroppedPacketsPerSec, aspDotNETApplicationsV2Entry=aspDotNETApplicationsV2Entry, wmppTotalOutDistConnections=wmppTotalOutDistConnections, dfsrcTotalBytesReceived=dfsrcTotalBytesReceived, giaipIKEMainModeNegotiationTime=giaipIKEMainModeNegotiationTime, dnsTotalResponseSentPerSec=dnsTotalResponseSentPerSec, adnAppl2SessionsAbandoned=adnAppl2SessionsAbandoned, netBEUIResourceUsedAverage=netBEUIResourceUsedAverage, ipsi6FailedQuickModeNegotiations=ipsi6FailedQuickModeNegotiations, browserMailslotOpensFailedPerSec=browserMailslotOpensFailedPerSec, ncmNumGen2Collections=ncmNumGen2Collections, smtpSrvrMsgsPendingRoute=smtpSrvrMsgsPendingRoute, adn2RequestsQueued=adn2RequestsQueued, directoryServicesTable=directoryServicesTable, ntdsSAMPasswordChangesPerSec=ntdsSAMPasswordChangesPerSec, dfsrcRDCBytesReceived=dfsrcRDCBytesReceived, uddicSavebusiness=uddicSavebusiness, printQueueTotalPagesPrinted=printQueueTotalPagesPrinted, sgFilterProcessCreated=sgFilterProcessCreated, printQueueJobs=printQueueJobs, wsMaximumCALCountForAuthdUsers=wsMaximumCALCountForAuthdUsers, npsaccPacketsReceived=npsaccPacketsReceived, searchGathererProjectsEntry=searchGathererProjectsEntry, npsausFullAccessDecisions=npsausFullAccessDecisions, udpV6=udpV6, aspDotNETApplicationsV2Table=aspDotNETApplicationsV2Table, ipV6DatagramsForwardedPerSec=ipV6DatagramsForwardedPerSec, icmpV6=icmpV6, netBEUIConnectionsOpen=netBEUIConnectionsOpen, snfsV314Rename=snfsV314Rename, ircsPendingRequests=ircsPendingRequests, iusDuplicateAccessRequestsPerSec=iusDuplicateAccessRequestsPerSec, memoryCacheKBytesPeak=memoryCacheKBytesPeak, smtpSrvrETRNMsgsPerSec=smtpSrvrETRNMsgsPerSec, searchIndexerEntry=searchIndexerEntry, aspDotNETApplicationsV1Entry=aspDotNETApplicationsV1Entry, npsausPacketsSentPerSec=npsausPacketsSentPerSec, ipsdPendingSecurityAssociations=ipsdPendingSecurityAssociations, wsTraceRqstsPerSec=wsTraceRqstsPerSec, ipsi6MainModeNegotRqstRcvdPerSec=ipsi6MainModeNegotRqstRcvdPerSec, ntdsDSSecurityDescPropEvents=ntdsDSSecurityDescPropEvents, nntpSrvrBytesTotalPerSec=nntpSrvrBytesTotalPerSec, smtpSrvrCatLDAPSrchsCmpltdPerSec=smtpSrvrCatLDAPSrchsCmpltdPerSec, ipsa4FailExtendedModeNegotiation=ipsa4FailExtendedModeNegotiation, sgServerObjectsCreated=sgServerObjectsCreated, wsMaximumISAPIExtensionRqsts=wsMaximumISAPIExtensionRqsts, smsh3UrisRegisteredForNetTcp=smsh3UrisRegisteredForNetTcp, ncnConnectionsEstablished=ncnConnectionsEstablished, ntdsDSSecurityDescPropAvgExTime=ntdsDSSecurityDescPropAvgExTime, nntpSrvrTotalPushFeeds=nntpSrvrTotalPushFeeds, ncsPercentTimeInRTChecks=ncsPercentTimeInRTChecks, iscsiSessionCxnTimeoutErrors=iscsiSessionCxnTimeoutErrors, dsSAMNonTransitiveMembEvalPerSec=dsSAMNonTransitiveMembEvalPerSec, redirWritePacketsSmallPerSec=redirWritePacketsSmallPerSec, ntdsLDAPNewConnectionsPerSec=ntdsLDAPNewConnectionsPerSec, adbiTableOpenCacheMissesPerSec=adbiTableOpenCacheMissesPerSec, memorySystemDriverTotalKBytes=memorySystemDriverTotalKBytes, dfsReplicationServiceVolumeEntry=dfsReplicationServiceVolumeEntry, ntdsDSPercentReadsFromSAM=ntdsDSPercentReadsFromSAM, netBEUIFrameBytesSentPerSec=netBEUIFrameBytesSentPerSec, nntpSrvrModeratedPostingsFailed=nntpSrvrModeratedPostingsFailed, ntdsDSPercentSearchesFromKCC=ntdsDSPercentSearchesFromKCC, npsaupProbationDecisions=npsaupProbationDecisions, processPageFileBytes=processPageFileBytes, hrasHCEPSuccessfulRequests=hrasHCEPSuccessfulRequests, uddicSavetModel=uddicSavetModel, aspInMemoryTemplateCacheHitRate=aspInMemoryTemplateCacheHitRate, idxSvcFilterIdxSpeedMBPerHr=idxSvcFilterIdxSpeedMBPerHr, npsacsDupAccountingRequests=npsacsDupAccountingRequests, adnApplCacheAPITrims=adnApplCacheAPITrims, adnApplCacheTotalMisses=adnApplCacheTotalMisses, tcpV6SegmentsPerSec=tcpV6SegmentsPerSec, wsUnlockRqstsPerSec=wsUnlockRqstsPerSec, jodPageFileBytes=jodPageFileBytes, npsausBadAuthenticators=npsausBadAuthenticators, sgpDocumentMoveAndRenameRate=sgpDocumentMoveAndRenameRate, adnApplPipelineInstanceCount=adnApplPipelineInstanceCount, adnApplSessionsAbandoned=adnApplSessionsAbandoned, smtpSrvrCatCatsCmpltd=smtpSrvrCatCatsCmpltd, ntdsDRAInboundPropAppliedPerSec=ntdsDRAInboundPropAppliedPerSec, nntpSrvrInstance=nntpSrvrInstance, jobObjectTable=jobObjectTable, tsgConnectionRequestAuthTime=tsgConnectionRequestAuthTime, is4iReceiveHeapSize=is4iReceiveHeapSize, cacheSyncMDLReadsPerSec=cacheSyncMDLReadsPerSec, ntdsSAMGCEvaluationsPerSec=ntdsSAMGCEvaluationsPerSec, snfsV209Create=snfsV209Create, terminalServiceGateway=terminalServiceGateway, rpcpFailLoadBalBrokerRqstsPerSec=rpcpFailLoadBalBrokerRqstsPerSec, frsLocalChgOrdersSent=frsLocalChgOrdersSent, tsActiveSessions=tsActiveSessions, atATPRetriesLocal=atATPRetriesLocal, aspDotNETv1=aspDotNETv1, atAverageTimePerATPPacket=atAverageTimePerATPPacket, frsChgOrdersEvaporated=frsChgOrdersEvaporated, lDiskSplitIOPerSec=lDiskSplitIOPerSec, npsrausAccessRequests=npsrausAccessRequests, adnAppl2CacheAPIHitRatio=adnAppl2CacheAPIHitRatio, ircsRequestTimeoutsPerSec=ircsRequestTimeoutsPerSec, tcpV4ConnectionsPassive=tcpV4ConnectionsPassive, npsaupQuarantineDecisions=npsaupQuarantineDecisions, ntdsNTLMAuthentications=ntdsNTLMAuthentications, lDiskPercentDiskReadTime=lDiskPercentDiskReadTime, activeServerPages=activeServerPages, smtpSrvrCatCatsFailNonRetryError=smtpSrvrCatCatsFailNonRetryError, adnAppl2CacheTotalMisses=adnAppl2CacheTotalMisses, ncnBytesSent=ncnBytesSent, atATPRecvdReleasePerSec=atATPRecvdReleasePerSec, rasPortFramesTransmitted=rasPortFramesTransmitted, frcBindingsInError=frcBindingsInError, nwWritePacketsPerSec=nwWritePacketsPerSec, giaipPacketsReceivedPerSec=giaipPacketsReceivedPerSec, dsDRAInCmpBtwSitesBeforCmpPerSec=dsDRAInCmpBtwSitesBeforCmpPerSec, wmppCurStreamingMMSPlayers=wmppCurStreamingMMSPlayers, aspRequestsSucceeded=aspRequestsSucceeded, snsdInstance=snsdInstance, netlogonEntry=netlogonEntry, udditGetchangeRecords=udditGetchangeRecords, wmsPeakPlayerSendRateKbps=wmsPeakPlayerSendRateKbps, nwPacketsReceivedPerSec=nwPacketsReceivedPerSec, serverPoolNonpagedKBytes=serverPoolNonpagedKBytes, adbiRecordsConverted=adbiRecordsConverted, npsPolicyEngine=npsPolicyEngine, sgpErrorRate=sgpErrorRate, pSchedPipeFlowModsRejected=pSchedPipeFlowModsRejected, icpInvalidAddresses=icpInvalidAddresses, icmpV4RcvdParameterProblem=icmpV4RcvdParameterProblem, nwLinkNetBIOSEntry=nwLinkNetBIOSEntry, nbtConnectionBytesTotalPerSec=nbtConnectionBytesTotalPerSec, snfsV302SetAttributes=snfsV302SetAttributes, nntpServerEntry=nntpServerEntry, faxsPagesSent=faxsPagesSent, memoryPoolPagedResidentKBytes=memoryPoolPagedResidentKBytes, sgpDocumentsOnHold=sgpDocumentsOnHold, dnsRecursiveQueriesPerSec=dnsRecursiveQueriesPerSec, nntpSrvrBytesReceivedPerSec=nntpSrvrBytesReceivedPerSec, rasTotalFramesTransmitted=rasTotalFramesTransmitted, adbDatabaseCacheSize=adbDatabaseCacheSize, rpcpsCurrentNumberOfBackendConns=rpcpsCurrentNumberOfBackendConns, idxSvcTotalNumOfQueries=idxSvcTotalNumOfQueries, winsSrvrQueriesPerSec=winsSrvrQueriesPerSec, amaTotalNumberOfScopes=amaTotalNumberOfScopes, smtpSrvrCatAddrLookups=smtpSrvrCatAddrLookups, dotNETCLRJitTable=dotNETCLRJitTable, jodElapsedTime=jodElapsedTime, systemFloatingEmulationsPerSec=systemFloatingEmulationsPerSec)
mibBuilder.exportSymbols("INFORMANT-ADV", sgpSuccessRate=sgpSuccessRate, adnApplApplLifetimeEventsPerSec=adnApplApplLifetimeEventsPerSec, nntpCmdsStatCmdsPerSec=nntpCmdsStatCmdsPerSec, siPersistentIndexesL2=siPersistentIndexesL2, winsSrvrTotalNumRenewalsPerSec=winsSrvrTotalNumRenewalsPerSec, npsacsServerResetTime=npsacsServerResetTime, memoryPoolPagedBytes=memoryPoolPagedBytes, smtpSrvrMsgBytesTotal=smtpSrvrMsgBytesTotal, iupAccessChallenges=iupAccessChallenges, wmsTotalPlayerBytesSent=wmsTotalPlayerBytesSent, httpsugBytesSentRate=httpsugBytesSentRate, dsDRASyncFailsOnSchemaMismatch=dsDRASyncFailsOnSchemaMismatch, npsacpDroppedPackets=npsacpDroppedPackets, atATPALOResponsePerSec=atATPALOResponsePerSec, rpcpCurrentNumberOfUniqueUsers=rpcpCurrentNumberOfUniqueUsers, browserMailslotReceivesFailed=browserMailslotReceivesFailed, pSchedPipeBadPacketsXmitedPerSec=pSchedPipeBadPacketsXmitedPerSec, ntdsDSPercentSearchesFromNTDSAPI=ntdsDSPercentSearchesFromNTDSAPI, dhcpSrvRequestsPerSec=dhcpSrvRequestsPerSec, redirBytesTransmittedPerSec=redirBytesTransmittedPerSec, ntdsDRAInLnkValUpdsRemainInPckt=ntdsDRAInLnkValUpdsRemainInPckt, systemSystemUpTime=systemSystemUpTime, w3svcOutputCacheTotalHits=w3svcOutputCacheTotalHits, rsvpIfRESVTEARMsgsReceived=rsvpIfRESVTEARMsgsReceived, nceNumOfFinallysPerSec=nceNumOfFinallysPerSec, wwfWorkflowsLoadedPerSec=wwfWorkflowsLoadedPerSec, npsaucAccessRequestsPerSec=npsaucAccessRequestsPerSec, pSchedFlowInstance=pSchedFlowInstance, nntpCmdsXPatCmdsPerSec=nntpCmdsXPatCmdsPerSec, pDiskAvgDiskWriteQueueLength=pDiskAvgDiskWriteQueueLength, iusAccessAccepts=iusAccessAccepts, rasPortTotalErrorsPerSec=rasPortTotalErrorsPerSec, swqBytesSentPerSec=swqBytesSentPerSec, ipsa6QuickModeNegotiationsPerSec=ipsa6QuickModeNegotiationsPerSec, netBEUIFrameBytesPerSec=netBEUIFrameBytesPerSec, wFPv6InConnectionsBlockedPerSec=wFPv6InConnectionsBlockedPerSec, ncrContextProxies=ncrContextProxies, icmpV4SentDestinationUnreachable=icmpV4SentDestinationUnreachable, ntdsDSPercentWritesFromKCC=ntdsDSPercentWritesFromKCC, mfsDataReceivedPerSec=mfsDataReceivedPerSec, netBEUIFramesReceivedPerSec=netBEUIFramesReceivedPerSec, ncmProcessID=ncmProcessID, adn2StateServerSessionsAbandoned=adn2StateServerSessionsAbandoned, wmppTotalStreamErrors=wmppTotalStreamErrors, adnAppl1OutputCacheHitRatio=adnAppl1OutputCacheHitRatio, objectsEvents=objectsEvents, ipsdPacketsFailedReplayDetection=ipsdPacketsFailedReplayDetection, pSchedFlowBytesTransmitted=pSchedFlowBytesTransmitted, rpcpTotalOutBandwidthBackEndSrvr=rpcpTotalOutBandwidthBackEndSrvr, msmqSvcMSMQOutgoingMessages=msmqSvcMSMQOutgoingMessages, tcpV4ConnectionsReset=tcpV4ConnectionsReset, npsrausAccessRejects=npsrausAccessRejects, giaipAuthIPQuickModeNegotTime=giaipAuthIPQuickModeNegotTime, nntpCmdsXReplicCmdsPerSec=nntpCmdsXReplicCmdsPerSec, certificationAuthorityConnEntry=certificationAuthorityConnEntry, netBIOSFrameBytesReceivedPerSec=netBIOSFrameBytesReceivedPerSec, sgHeartbeats=sgHeartbeats, udditSavebinding=udditSavebinding, adnAppl2CacheAPITrims=adnAppl2CacheAPITrims, iccAccountingRequests=iccAccountingRequests, memoryCommitLimitKBytes=memoryCommitLimitKBytes, jobObjectDetailsEntry=jobObjectDetailsEntry, npsaupAccessAccepts=npsaupAccessAccepts, wmsTotalStreamErrors=wmsTotalStreamErrors, adnAppl2RequestsPerSec=adnAppl2RequestsPerSec, hrasNPSValidationTimeMs=hrasNPSValidationTimeMs, systemFileWriteBytesPerSec=systemFileWriteBytesPerSec, ftpSvcCurrentAnonymousUsers=ftpSvcCurrentAnonymousUsers, processHandleCount=processHandleCount, tssTotalCompressFlushes=tssTotalCompressFlushes, wsGetRqstsPerSec=wsGetRqstsPerSec, npsacpRequestTimeouts=npsacpRequestTimeouts, ntdsDRAPendingReplicationSync=ntdsDRAPendingReplicationSync, tcpV6ConnectionsEstablished=tcpV6ConnectionsEstablished, ntdsDSPercentReadsOther=ntdsDSPercentReadsOther, iisGlobalCurBlockAsyncIORequests=iisGlobalCurBlockAsyncIORequests, memorySystemCacheResidentMBytes=memorySystemCacheResidentMBytes, frsRemoteChgOrdersPropagated=frsRemoteChgOrdersPropagated, processIODataOperationsPerSec=processIODataOperationsPerSec, wsTotalTraceRqsts=wsTotalTraceRqsts, msmqitIncomingHTTPBytesPerSec=msmqitIncomingHTTPBytesPerSec, npsacsPacketsReceived=npsacsPacketsReceived, iisGlobalActiveFlushedEntries=iisGlobalActiveFlushedEntries, tssPoolPagedBytes=tssPoolPagedBytes, ntdsDatabaseModifysPerSec=ntdsDatabaseModifysPerSec, is4dActiveSecurityAssociations=is4dActiveSecurityAssociations, nntpSrvrTotalAnonymousUsers=nntpSrvrTotalAnonymousUsers, adnApplRequestWaitTime=adnApplRequestWaitTime, icpAccountingRequestsPerSec=icpAccountingRequestsPerSec, adnAppl1CacheTotalHits=adnAppl1CacheTotalHits, ncjILBytesJittedPerSec=ncjILBytesJittedPerSec, adnAppl1SessionsActive=adnAppl1SessionsActive, joProcessCountTerminated=joProcessCountTerminated, processWorkingSetMPrivate=processWorkingSetMPrivate, tssProtocolSvScrnBtmpCachHts=tssProtocolSvScrnBtmpCachHts, iusMalformedPackets=iusMalformedPackets, rsvpIfSendMsgsErrorsBigMsgs=rsvpIfSendMsgsErrorsBigMsgs, processPrivateKBytes=processPrivateKBytes, usbInstance=usbInstance, smtpSrvrCatLDAPSrchsPendingCmplt=smtpSrvrCatLDAPSrchsPendingCmplt, adbInstance=adbInstance, siL8MergeSpeedAverage=siL8MergeSpeedAverage, atAverageTimePerNBPPacket=atAverageTimePerNBPPacket, iupMalformedPacketsPerSec=iupMalformedPacketsPerSec, iisGlobalTotalBLOBsCached=iisGlobalTotalBLOBsCached, pDiskAvgDiskBytesPerTransfer=pDiskAvgDiskBytesPerTransfer, icsServerUpTime=icsServerUpTime, npsacpMalformedPacketsPerSec=npsacpMalformedPacketsPerSec, sgServerObjects=sgServerObjects, sswsActiveSChannelSessionCache=sswsActiveSChannelSessionCache, dotNETCLRInteropTable=dotNETCLRInteropTable, hcapcPostureValidFailureResponse=hcapcPostureValidFailureResponse, advDatabaseInstancesTable=advDatabaseInstancesTable, adbIPerODatabaseReadsPerSec=adbIPerODatabaseReadsPerSec, msmqosInstance=msmqosInstance, wsCurrentISAPIExtensionRqsts=wsCurrentISAPIExtensionRqsts, icmpV6ReceivedNeighborAdvert=icmpV6ReceivedNeighborAdvert, ircsDroppedPacketsPerSec=ircsDroppedPacketsPerSec, adnApplAuditFailureEventsRaised=adnApplAuditFailureEventsRaised, iisGlobalURICacheHits=iisGlobalURICacheHits, ipSecV4Driver=ipSecV4Driver, sgpStatusError=sgpStatusError, faxsReceivedFaxes=faxsReceivedFaxes, serverPoolPagedMBytes=serverPoolPagedMBytes, ipsa6ExtendModeNegotiationPerSec=ipsa6ExtendModeNegotiationPerSec, frsChgOrdersIssued=frsChgOrdersIssued, ntdsSAMMembershipChangesPerSec=ntdsSAMMembershipChangesPerSec, ntdsDSSecurityDescSubopPerSec=ntdsDSSecurityDescSubopPerSec, udditGetassertionStatusReport=udditGetassertionStatusReport, adnApplCacheTotalEntries=adnApplCacheTotalEntries, wFPv6ActiveInConnections=wFPv6ActiveInConnections, msmqomsOutgoingMulticastMessages=msmqomsOutgoingMulticastMessages, hcapcPostureValidationRequests=hcapcPostureValidationRequests, npsacpInvalidAddressesPerSec=npsacpInvalidAddressesPerSec, npsaccDupAccountingRequestPerSec=npsaccDupAccountingRequestPerSec, npsaucQuarantineDecisions=npsaucQuarantineDecisions, wFP=wFP, adnAppl1CompilationsTotal=adnAppl1CompilationsTotal, wsrmpmcWorkingSetMBytes=wsrmpmcWorkingSetMBytes, ntdsDSDirectorySearchesPerSec=ntdsDSDirectorySearchesPerSec, adnApplRequestsNotFound=adnApplRequestsNotFound, httpServiceUrlGroupsEntry=httpServiceUrlGroupsEntry, dnsZoneTransferSuccess=dnsZoneTransferSuccess, netBIOSPiggybackAckQueuedPerSec=netBIOSPiggybackAckQueuedPerSec, dfsReplicatedFoldersTable=dfsReplicatedFoldersTable, npsrausRequestTimeoutsPerSec=npsrausRequestTimeoutsPerSec, snfsV212Link=snfsV212Link, lDiskPercentDiskWriteTime=lDiskPercentDiskWriteTime, uddicFindtModel=uddicFindtModel, iscsiInstance=iscsiInstance, npsacsServerUpTime=npsacsServerUpTime, memoryFreeZeroPageListKBytes=memoryFreeZeroPageListKBytes, redirNetworkErrorsPerSec=redirNetworkErrorsPerSec, netBEUIPacketsReceivedPerSec=netBEUIPacketsReceivedPerSec, netBIOSFramesPerSec=netBIOSFramesPerSec, dsDRAInObjectUpdRemainInPkt=dsDRAInObjectUpdRemainInPkt, wmppCurStreamErrorRate=wmppCurStreamErrorRate, dnsWINSReverseLookupReceived=dnsWINSReverseLookupReceived, wsBytesReceivedPerSec=wsBytesReceivedPerSec, msmqOutMulticastSessionTable=msmqOutMulticastSessionTable, ncltCurrentQueueLength=ncltCurrentQueueLength, iusUnknownType=iusUnknownType, tssInputWdBytes=tssInputWdBytes, sms3QueuedMessagesDropped=sms3QueuedMessagesDropped, frsLocalChgOrdersRetriedInstall=frsLocalChgOrdersRetriedInstall, dsDSMonitorListSize=dsDSMonitorListSize, rpcpsInstance=rpcpsInstance, serviceModelEndpoint3Table=serviceModelEndpoint3Table, npsaupInvalidAddressesPerSec=npsaupInvalidAddressesPerSec, snfsBytesRead=snfsBytesRead, adnApplRequestsPerSec=adnApplRequestsPerSec, tssTotalAsyncOverrun=tssTotalAsyncOverrun, icpAccountingRequests=icpAccountingRequests, wmppCurPlayerAllocBandwidthKbps=wmppCurPlayerAllocBandwidthKbps, adnAppl1ErrorsTotal=adnAppl1ErrorsTotal, nntpCmdsNextCmdsPerSec=nntpCmdsNextCmdsPerSec, iccAccountingRequestsPerSec=iccAccountingRequestsPerSec, smsh3ConnsDispatchedOverNetTcp=smsh3ConnsDispatchedOverNetTcp, dsSAMUniversalGrpMembEvalPerSec=dsSAMUniversalGrpMembEvalPerSec, w3svcTotalFlushedFiles=w3svcTotalFlushedFiles, siL4MergeSpeedAverage=siL4MergeSpeedAverage, siL0MergeFlushSpeedLast=siL0MergeFlushSpeedLast, pSchedFlowPktsTransmittedPerSec=pSchedFlowPktsTransmittedPerSec, swqQueueLength=swqQueueLength, smtpSrvrCatRcptsNDRdAmbigsAddr=smtpSrvrCatRcptsNDRdAmbigsAddr, is4iTotalNegotiationFailures=is4iTotalNegotiationFailures, browserMailslotWritesPerSec=browserMailslotWritesPerSec, wsTotalLogonAtmps=wsTotalLogonAtmps, snfsV307Write=snfsV307Write, serverPoolPagedFailures=serverPoolPagedFailures, iisGlobalBLOBCacheFlushes=iisGlobalBLOBCacheFlushes, adnAppl2RequestWaitTime=adnAppl2RequestWaitTime, is4dTotalOffloadedBytesSent=is4dTotalOffloadedBytesSent, adnApplCacheTotalTrims=adnApplCacheTotalTrims, adn2WorkerProcessesRunning=adn2WorkerProcessesRunning, iasRemoteAccountingServersEntry=iasRemoteAccountingServersEntry, tssOutputCompressedBytes=tssOutputCompressedBytes, adn2RequestWaitTime=adn2RequestWaitTime, ntdsDRAInboundObjUpdsRemainInPkt=ntdsDRAInboundObjUpdsRemainInPkt, icpBadAuthenticators=icpBadAuthenticators, ncdSQLClntCurNumPoolConns=ncdSQLClntCurNumPoolConns, tssInputAsyncParityError=tssInputAsyncParityError, cacheFastReadResourceMissPerSec=cacheFastReadResourceMissPerSec, iisGlobalCurBLOBsCached=iisGlobalCurBLOBsCached, adnAppl2MembershipAuthFailure=adnAppl2MembershipAuthFailure, rpcpAttemptLoadBalDecisionPerSec=rpcpAttemptLoadBalDecisionPerSec, snfsXDRFailures=snfsXDRFailures, icsAccountingResponsesPerSec=icsAccountingResponsesPerSec, irusDroppedPacketsPerSec=irusDroppedPacketsPerSec, cacheSyncFastReadsPerSec=cacheSyncFastReadsPerSec, smtpSrvrCatLDAPPagedSrchs=smtpSrvrCatLDAPPagedSrchs, wsFilesReceivedPerSec=wsFilesReceivedPerSec, iupUnknownTypePerSec=iupUnknownTypePerSec, adnAppl2CacheTotalEntries=adnAppl2CacheTotalEntries, npsrausBadAuthenticatorsPerSec=npsrausBadAuthenticatorsPerSec, icmpV6SentNeighborSolicit=icmpV6SentNeighborSolicit, winsSrvrFailedReleasesPerSec=winsSrvrFailedReleasesPerSec, ntdsDRAInboundBytesNotCWSSBoot=ntdsDRAInboundBytesNotCWSSBoot, adnAppl2ReqErrorEventRaisePerSec=adnAppl2ReqErrorEventRaisePerSec, adnApplOutputCacheMisses=adnApplOutputCacheMisses, frcFetchBlocksSent=frcFetchBlocksSent, ipsi6SuccessMainModeNegotPerSec=ipsi6SuccessMainModeNegotPerSec, tssProtocolBitmapCacheHits=tssProtocolBitmapCacheHits, smtpNTFSStoreDriverEntry=smtpNTFSStoreDriverEntry, w3svcOutputCacheCurrentFlushItem=w3svcOutputCacheCurrentFlushItem, sms3CallsDuration=sms3CallsDuration, atPacketsRoutedInPerSec=atPacketsRoutedInPerSec, ntdsDSPercentReadsFromLSA=ntdsDSPercentReadsFromLSA, wmppInstance=wmppInstance, dsDSPercentSearchesFromNTDSAPI=dsDSPercentSearchesFromNTDSAPI, systemFileControlBytesPerSec=systemFileControlBytesPerSec, dsABSearchesPerSec=dsABSearchesPerSec, ipsdPacketsFailUDPESPValidation=ipsdPacketsFailUDPESPValidation, snfsRPCCallPacketsCreated=snfsRPCCallPacketsCreated, mfsDataReadPerSec=mfsDataReadPerSec, rsvpIfRESVERRMsgsSent=rsvpIfRESVERRMsgsSent, faxsTotalBytes=faxsTotalBytes, adnApplRequestsFailed=adnApplRequestsFailed, nntpSrvrXoverEntries=nntpSrvrXoverEntries, adnAppl2TransactionsTotal=adnAppl2TransactionsTotal, udpV6DatagramsSentPerSec=udpV6DatagramsSentPerSec, pSchedPipeTable=pSchedPipeTable, dsDRAInPropertiesFilteredPerSec=dsDRAInPropertiesFilteredPerSec, ipsa4PendingMainModeNegotiations=ipsa4PendingMainModeNegotiations, icmpV4SentEchoReplyPerSec=icmpV4SentEchoReplyPerSec, msmqsOutgoingMessagesPerSec=msmqsOutgoingMessagesPerSec, icsBadAuthenticatorsPerSec=icsBadAuthenticatorsPerSec, smtpSrvrCatLDAPSrchsAbandoned=smtpSrvrCatLDAPSrchsAbandoned, sgFilterProcessesMax=sgFilterProcessesMax, smtpSrvrMsgsCurrUndeliverable=smtpSrvrMsgsCurrUndeliverable, wscURICacheFlushes=wscURICacheFlushes, icmpV4SentAddressMask=icmpV4SentAddressMask, acsPerRsvpSvcRSVPSessions=acsPerRsvpSvcRSVPSessions, sswsSSLServerSideReconHandshakes=sswsSSLServerSideReconHandshakes)
mibBuilder.exportSymbols("INFORMANT-ADV", faxsBytesReceived=faxsBytesReceived, searchGatherer=searchGatherer, cacheDataMapHitsPercent=cacheDataMapHitsPercent, sms3QueuedPoisonMessagesPerSec=sms3QueuedPoisonMessagesPerSec, icmpV6SentEchoPerSec=icmpV6SentEchoPerSec, adbiSessionsInUse=adbiSessionsInUse, npsausAccessRequestsPerSec=npsausAccessRequestsPerSec, redirConnectsLanManager21=redirConnectsLanManager21, sgpStatusSuccess=sgpStatusSuccess, cpuInterruptsPerSec=cpuInterruptsPerSec, udpV6DatagramsPerSec=udpV6DatagramsPerSec, nciNumOfMarshalling=nciNumOfMarshalling, nbtConnectionInstance=nbtConnectionInstance, frsPacketsReceivedInError=frsPacketsReceivedInError, spxFrameBytesReceivedPerSec=spxFrameBytesReceivedPerSec, ntdsKDCASRequests=ntdsKDCASRequests, ipsa6FailedQuickModeNegotiations=ipsa6FailedQuickModeNegotiations, aspRequestsPerSec=aspRequestsPerSec, ncnDatagramsSent=ncnDatagramsSent, frsBytesOfStagingFetched=frsBytesOfStagingFetched, icsAccountingRequestsPerSec=icsAccountingRequestsPerSec, nceThrowToCatchDepthPerSec=nceThrowToCatchDepthPerSec, usbControllerWorkSignalsPerSec=usbControllerWorkSignalsPerSec, adnAppl2SessionStateSvrConnTotal=adnAppl2SessionStateSvrConnTotal, netBIOSDatagramBytesRcvdPerSec=netBIOSDatagramBytesRcvdPerSec, spxDatagramBytesSentPerSec=spxDatagramBytesSentPerSec, serverPoolNonpagedBytes=serverPoolNonpagedBytes, msmqSessionTable=msmqSessionTable, frcLocalChangeOrdersSentAtJoin=frcLocalChangeOrdersSentAtJoin, tsgSuccessfulConnections=tsgSuccessfulConnections, msmqBytesInJournalQueue=msmqBytesInJournalQueue, printQueueJobErrors=printQueueJobErrors, wsLogonAtmpsPerSec=wsLogonAtmpsPerSec, nntpCmdsNextCmds=nntpCmdsNextCmds, wsPostRqstsPerSec=wsPostRqstsPerSec, ipsa4FailQuickModeNegPerSec=ipsa4FailQuickModeNegPerSec, aspSessionDuration=aspSessionDuration, wmsCurPlayerAllocBandwidthKbps=wmsCurPlayerAllocBandwidthKbps, smtpSrvrCatRcptsBeforeCat=smtpSrvrCatRcptsBeforeCat, msmqsOutgoingMessages=msmqsOutgoingMessages, joTotalMSecUserMode=joTotalMSecUserMode, frsDSObjectsInError=frsDSObjectsInError, smtpSrvrCatCatsCmpltdSuccess=smtpSrvrCatCatsCmpltdSuccess, sme3ReliableSessionsFaultPerSec=sme3ReliableSessionsFaultPerSec, ipV6FragmentsRcvdPerSec=ipV6FragmentsRcvdPerSec, acsPerRsvpSvcQoSSockets=acsPerRsvpSvcQoSSockets, smtpSrvrCatMsgsSubmittedPerSec=smtpSrvrCatMsgsSubmittedPerSec, frsStagingFilesGenerated=frsStagingFilesGenerated, aspDotNETStateService=aspDotNETStateService, wmusPluginErrors=wmusPluginErrors, adn1StateServerSessionsActive=adn1StateServerSessionsActive, iasRemoteAuthenticationSrvrEntry=iasRemoteAuthenticationSrvrEntry, npspeMatchedRemoteAccessPolicies=npspeMatchedRemoteAccessPolicies, adnErrorEventsRaised=adnErrorEventsRaised, siShadowMergeLevels=siShadowMergeLevels, wmusConnectedClients=wmusConnectedClients, ipsa4FailExtendModeNegotPerSec=ipsa4FailExtendModeNegotPerSec, dsDSPercentSearchesFromLDAP=dsDSPercentSearchesFromLDAP, processorEntry=processorEntry, icmpV4RcvdEchoReplyPerSec=icmpV4RcvdEchoReplyPerSec, browserEnumerationsOtherPerSec=browserEnumerationsOtherPerSec, snfsNFSErrorsV3=snfsNFSErrorsV3, irusRequestTimeouts=irusRequestTimeouts, snfsV320PathConfiguration=snfsV320PathConfiguration, wscKernelTotalFlushedURIs=wscKernelTotalFlushedURIs, wsTotalCountFailCALRqstsSSLConns=wsTotalCountFailCALRqstsSSLConns, spxBytesTotalPerSec=spxBytesTotalPerSec, npsaupPendingRequests=npsaupPendingRequests, adnAppl2RequestsExecuting=adnAppl2RequestsExecuting, is4iMainModeSAListEntries=is4iMainModeSAListEntries, wsCurrentBlkdBandwidthBytes=wsCurrentBlkdBandwidthBytes, wscOutputCacheTotalHits=wscOutputCacheTotalHits, acsPerRsvpServiceEntry=acsPerRsvpServiceEntry, smtpSrvrTotalDSNFail=smtpSrvrTotalDSNFail, sgThreadsInPlugIns=sgThreadsInPlugIns, frsKBOfStagingSpaceInUse=frsKBOfStagingSpaceInUse, adbIODatabaseWriteAverageLatency=adbIODatabaseWriteAverageLatency, wwfWorkflowsPersistedPerSec=wwfWorkflowsPersistedPerSec, ipsi6MainModeNegotiationRqstRcvd=ipsi6MainModeNegotiationRqstRcvd, wsTotalCGIRqsts=wsTotalCGIRqsts, ipsdPacketsNotDecrypted=ipsdPacketsNotDecrypted, msmqSvcTotalBytesInAllQueues=msmqSvcTotalBytesInAllQueues, ipsa4FailedQuickModeNegotiations=ipsa4FailedQuickModeNegotiations, browserIllegalDatagramsPerSec=browserIllegalDatagramsPerSec, cacheMDLReadsPerSec=cacheMDLReadsPerSec, snsdOpenMessageStreams=snsdOpenMessageStreams, dfsrfStagingBytesGenerated=dfsrfStagingBytesGenerated, sgThreadsAccessingNetwork=sgThreadsAccessingNetwork, iupDroppedPackets=iupDroppedPackets, dnsTCPQueryReceivedPerSec=dnsTCPQueryReceivedPerSec, ipV6DatagramsRcvdUnknownProtocol=ipV6DatagramsRcvdUnknownProtocol, frsLocalChgOrdersRetriedFetch=frsLocalChgOrdersRetriedFetch, icmpV6SentNeighborAdvert=icmpV6SentNeighborAdvert, ntdsSAMSuccessCompCreationPerSec=ntdsSAMSuccessCompCreationPerSec, processWorkingSetPeak=processWorkingSetPeak, rasTotalSerialOverrunErrors=rasTotalSerialOverrunErrors, wmsCurStreamErrorRate=wmsCurStreamErrorRate, adnAppl1ErrorDuringPreprocessing=adnAppl1ErrorDuringPreprocessing, dsDRAThreadsNCChgHoldSemaphore=dsDRAThreadsNCChgHoldSemaphore, threadPercentUserTime=threadPercentUserTime, uddicAddpublisherAssertions=uddicAddpublisherAssertions, ntdsDRAInboundBytesCBSBCSBoot=ntdsDRAInboundBytesCBSBCSBoot, ircsPacketsReceived=ircsPacketsReceived, iucPacketsReceivedPerSec=iucPacketsReceivedPerSec, ipxFramesReSentPerSec=ipxFramesReSentPerSec, iisGlobalURICacheMisses=iisGlobalURICacheMisses, wscKernelURICacheHitsPercent=wscKernelURICacheHitsPercent, adn2ApplicationsRunning=adn2ApplicationsRunning, dnsIXFRTCPSuccessReceived=dnsIXFRTCPSuccessReceived, adnAppl2CachePctMachMemLimUsed=adnAppl2CachePctMachMemLimUsed, iupInvalidAddresses=iupInvalidAddresses, netOutputQueueLength=netOutputQueueLength, ipV6FragmentedDatagramsPerSec=ipV6FragmentedDatagramsPerSec, sme3CallsFaultedPerSecond=sme3CallsFaultedPerSecond, ntdsSAMSuccessUserCreatePerSec=ntdsSAMSuccessUserCreatePerSec, httpServiceRequestQueuesTable=httpServiceRequestQueuesTable, smtpSrvrOutboundConnsRfsd=smtpSrvrOutboundConnsRfsd, ipxFailuresResourceRemote=ipxFailuresResourceRemote, npsracsAccountingRequestsPerSec=npsracsAccountingRequestsPerSec, nntpCmdsLogonFailures=nntpCmdsLogonFailures, smo3CallsOutstanding=smo3CallsOutstanding, dnsTCPMessageMemory=dnsTCPMessageMemory, processIOOtherBytesPerSec=processIOOtherBytesPerSec, rsvpSvcNetworkInterfaces=rsvpSvcNetworkInterfaces, wsInstance=wsInstance, npsracsRequestTimeouts=npsracsRequestTimeouts, adnApplErrorsTotalPerSec=adnApplErrorsTotalPerSec, ipxFailuresAdapter=ipxFailuresAdapter, ipsdIncorrectSPIPackets=ipsdIncorrectSPIPackets, adnAppl2ApplLifetimeEventsPerSec=adnAppl2ApplLifetimeEventsPerSec, adbtcCacheSizeMB=adbtcCacheSizeMB, joPagesPerSec=joPagesPerSec, dsDRAThreadsGettingNCChanges=dsDRAThreadsGettingNCChanges, sms3TransactedOpsAborted=sms3TransactedOpsAborted, ipsa4MainModeNegRequestRcvPerSec=ipsa4MainModeNegRequestRcvPerSec, udditSavebusiness=udditSavebusiness, wmusActiveStreams=wmusActiveStreams, iccBadAuthenticatorsPerSec=iccBadAuthenticatorsPerSec, sme3CallsNotAuthorized=sme3CallsNotAuthorized, udditGetbusinessDetail=udditGetbusinessDetail, rasTotalTotalConnections=rasTotalTotalConnections, udditValidatecategorization=udditValidatecategorization, sswsKDCASRequests=sswsKDCASRequests, spxExpirationsResponse=spxExpirationsResponse, dotNETCLRRemotingTable=dotNETCLRRemotingTable, rasPortInstance=rasPortInstance, tcpV6ConnectionsActive=tcpV6ConnectionsActive, sms3CallsFaultedPerSecond=sms3CallsFaultedPerSecond, icmpV4RcvdTimestampReplyPerSec=icmpV4RcvdTimestampReplyPerSec, sms3ReliableMessagesDropPerSec=sms3ReliableMessagesDropPerSec, nntpCmdsNewnewsCmds=nntpCmdsNewnewsCmds, dsDSSecurityDescPropAvgExclTime=dsDSSecurityDescPropAvgExclTime, sgpDocumentMovesPerRenames=sgpDocumentMovesPerRenames, npsaccBadAuthenticatorsPerSec=npsaccBadAuthenticatorsPerSec, sgDocumentEntries=sgDocumentEntries, icsPacketsSentPerSec=icsPacketsSentPerSec, pSchedPipeFlowsModified=pSchedPipeFlowsModified, dsDRAInObjectsFilteredPerSec=dsDRAInObjectsFilteredPerSec, frsBindingsInError=frsBindingsInError, adnAppl2RequestEventsRaisePerSec=adnAppl2RequestEventsRaisePerSec, winsSrvrUniqueConflictsPerSec=winsSrvrUniqueConflictsPerSec, netBIOSConnectionsWithRetries=netBIOSConnectionsWithRetries, sswsSSLClientSideFullHandshakes=sswsSSLClientSideFullHandshakes, smtpSrvrBytesRcvdPerSec=smtpSrvrBytesRcvdPerSec, objectsProcesses=objectsProcesses, uddicGetbusinessDetailExt=uddicGetbusinessDetailExt, dnsUDPResponseSent=dnsUDPResponseSent, smtpSrvrNumberOfQueueFilesOpen=smtpSrvrNumberOfQueueFilesOpen, spxExpirationsAck=spxExpirationsAck, nbtConnectionBytesReceivedPerSec=nbtConnectionBytesReceivedPerSec, npsaupFullAccessDecisions=npsaupFullAccessDecisions, ntdsSAMUserCreateAttemptsPerSec=ntdsSAMUserCreateAttemptsPerSec, wscMetadataCacheFlushes=wscMetadataCacheFlushes, ircsAccountingRequests=ircsAccountingRequests, smtpSrvrRemoteQueueLength=smtpSrvrRemoteQueueLength, wsPutRqstsPerSec=wsPutRqstsPerSec, smtpSrvrCatAddrLookupCmpltPerSec=smtpSrvrCatAddrLookupCmpltPerSec, irusBadAuthenticators=irusBadAuthenticators, smtpSrvrCatMsgsCategorized=smtpSrvrCatMsgsCategorized, adnApplRequestsRejected=adnApplRequestsRejected, mfsDataWrittenPerSec=mfsDataWrittenPerSec, wscTotalFlushedMetadata=wscTotalFlushedMetadata, dsDSDirectoryWritesPerSec=dsDSDirectoryWritesPerSec, wwfWorkflowsLoaded=wwfWorkflowsLoaded, frcInboundChangeOrdersDampened=frcInboundChangeOrdersDampened, ipsi4ActiveQuickModeSAs=ipsi4ActiveQuickModeSAs, npsausUnknownType=npsausUnknownType, ncjNumOfILBytesJitted=ncjNumOfILBytesJitted, ipsa6SuccExtendModeNegotPerSec=ipsa6SuccExtendModeNegotPerSec, is4dTotalOffloadedBytesReceived=is4dTotalOffloadedBytesReceived, wsTotalMkcolRqsts=wsTotalMkcolRqsts, ncjInstance=ncjInstance, npsracsRetransmissionsPerSec=npsracsRetransmissionsPerSec, ipsi6PendingMainModeNegotiations=ipsi6PendingMainModeNegotiations, snfsV315Link=snfsV315Link, icmpV4RcvdSourceQuench=icmpV4RcvdSourceQuench, lDiskPercentFreeSpace=lDiskPercentFreeSpace, tssTotalBytes=tssTotalBytes, browserMissedMailslotDatagrams=browserMissedMailslotDatagrams, frsStagingFilesRegenerated=frsStagingFilesRegenerated, frsDSPolls=frsDSPolls, usbAvgMsLatencyForISOTransfers=usbAvgMsLatencyForISOTransfers, dsLDAPSuccessfulBindsPerSec=dsLDAPSuccessfulBindsPerSec, sgpWaitingDocuments=sgpWaitingDocuments, memoryPageReadsPerSec=memoryPageReadsPerSec, w3svcFileCacheMissesPerSec=w3svcFileCacheMissesPerSec, irusPacketsReceived=irusPacketsReceived, wmsCurLateReadRate=wmsCurLateReadRate, ipsdBytesRcvdInTunnelModePerSec=ipsdBytesRcvdInTunnelModePerSec, nwPacketBurstWriteTimeoutsPerSec=nwPacketBurstWriteTimeoutsPerSec, redirConnectsWindowsNT=redirConnectsWindowsNT, nciNumOfCCWs=nciNumOfCCWs, ntdsSAMMachineCreateAtpsPerSec=ntdsSAMMachineCreateAtpsPerSec, tssTotalCompressedBytes=tssTotalCompressedBytes, msmqOutgoingHTTPSessionTable=msmqOutgoingHTTPSessionTable, npsausPacketsReceivedPerSec=npsausPacketsReceivedPerSec, joThisPeriodMSecKernelMode=joThisPeriodMSecKernelMode, frcUnjoins=frcUnjoins, wsSearchRqstsPerSec=wsSearchRqstsPerSec, iucUnknownType=iucUnknownType, is4dTotalPktsNotAuthenticated=is4dTotalPktsNotAuthenticated, irusAccessRejectsPerSec=irusAccessRejectsPerSec, is4iQuickModeSAListEntries=is4iQuickModeSAListEntries, netBEUIFailuresResourceLocal=netBEUIFailuresResourceLocal, wFPv4InConnectionsAllowedPerSec=wFPv4InConnectionsAllowedPerSec, rpcpTotalInBandwidthBackEndSrvrs=rpcpTotalInBandwidthBackEndSrvrs, netBEUIResourceEntry=netBEUIResourceEntry, cacheAsyncCopyReadsPerSec=cacheAsyncCopyReadsPerSec, icmpV6MessagesSentPerSec=icmpV6MessagesSentPerSec, telephonyTelephoneDevices=telephonyTelephoneDevices, is4dTotalTransportBytesReceived=is4dTotalTransportBytesReceived, pSchedPipeBadPacketsSched=pSchedPipeBadPacketsSched, mfsCurrentPagedMemory=mfsCurrentPagedMemory, iisGlobalCurURIsCached=iisGlobalCurURIsCached, dsDatabaseDeletesPerSec=dsDatabaseDeletesPerSec, caInstance=caInstance, siWorkItemsDeleted=siWorkItemsDeleted, adnAppl2ErrorUnhandledExecPerSec=adnAppl2ErrorUnhandledExecPerSec, wsTotalPostRqsts=wsTotalPostRqsts, sgpFileErrorsRate=sgpFileErrorsRate, dtcb3FaultsSentCountPerSec=dtcb3FaultsSentCountPerSec, dotNETCLRJitEntry=dotNETCLRJitEntry, spxDatagramBytesPerSec=spxDatagramBytesPerSec, iupPacketsReceived=iupPacketsReceived, wwfWorkflowsUnloaded=wwfWorkflowsUnloaded, udditSavetModel=udditSavetModel, irusPendingRequests=irusPendingRequests, memorySystemCacheResidentKBytes=memorySystemCacheResidentKBytes, ntdsLDAPWritesPerSec=ntdsLDAPWritesPerSec, ntdsLDAPNewSSLConnectionsPerSec=ntdsLDAPNewSSLConnectionsPerSec, wmsCurStreamingRTSPPlayers=wmsCurStreamingRTSPPlayers, rasTotalAlignmentErrors=rasTotalAlignmentErrors, smtpSrvrMsgsRcvdPerSec=smtpSrvrMsgsRcvdPerSec, nclPercentTimeLoading=nclPercentTimeLoading)
mibBuilder.exportSymbols("INFORMANT-ADV", dfsrcSizeOfFilesReceived=dfsrcSizeOfFilesReceived, frsFetchRequestsReceived=frsFetchRequestsReceived, wmppCurStreamingPlayers=wmppCurStreamingPlayers, adbDatabaseCachePercentHit=adbDatabaseCachePercentHit, nclTotalAssemblies=nclTotalAssemblies, ipsi6QuickModeNegotiations=ipsi6QuickModeNegotiations, giaipSuccessfulNegotiationPerSec=giaipSuccessfulNegotiationPerSec, advDatabaseTableClassesTable=advDatabaseTableClassesTable, redirReadBytesNetworkPerSec=redirReadBytesNetworkPerSec, dtcResponseTimeMaximum=dtcResponseTimeMaximum, redirPacketsPerSec=redirPacketsPerSec, nclTotalClassesLoaded=nclTotalClassesLoaded, adnApplErrorsUnhandledExec=adnApplErrorsUnhandledExec, wmsTotalStreamingPlayers=wmsTotalStreamingPlayers, bnuPercentIGDFree=bnuPercentIGDFree, snfsRPCFailures=snfsRPCFailures, frsUsnReads=frsUsnReads, wmppCurLateReadRate=wmppCurLateReadRate, nntpSrvrModeratedPostingsSent=nntpSrvrModeratedPostingsSent, pSchedPipeFlowsOpened=pSchedPipeFlowsOpened, uddicGetpublisherAssertions=uddicGetpublisherAssertions, jodPoolPagedBytes=jodPoolPagedBytes, wsCurrentAnonymousUsers=wsCurrentAnonymousUsers, uddicGetregisteredInfo=uddicGetregisteredInfo, wwfWorkflowsAbortedPerSec=wwfWorkflowsAbortedPerSec, snfsPendingDRCPackets=snfsPendingDRCPackets, ircsPacketsReceivedPerSec=ircsPacketsReceivedPerSec, browserElectionPacketsPerSec=browserElectionPacketsPerSec, adbiRecordsConvertedPerSec=adbiRecordsConvertedPerSec, npsaucAccessRejectsPerSec=npsaucAccessRejectsPerSec, pSchedPipeAvgPacketsInNetcard=pSchedPipeAvgPacketsInNetcard, wFPProviderCount=wFPProviderCount, frcFetchBlocksReceived=frcFetchBlocksReceived, dhcpSrvInformsPerSec=dhcpSrvInformsPerSec, iccMalformedPacketsPerSec=iccMalformedPacketsPerSec, npsacpPacketsReceivedPerSec=npsacpPacketsReceivedPerSec, npsrausDroppedPacketsPerSec=npsrausDroppedPacketsPerSec, ipxInstance=ipxInstance, snfsMV301Mount=snfsMV301Mount, sgpFilteredOfficeRate=sgpFilteredOfficeRate, ipxConnectionsNoRetries=ipxConnectionsNoRetries, wasActiveProtocolHandlers=wasActiveProtocolHandlers, tcpV6=tcpV6, serverLogonTotal=serverLogonTotal, adbiLogGenCheckpointDepthMax=adbiLogGenCheckpointDepthMax, sgpHistoryRecoveryProgress=sgpHistoryRecoveryProgress, mfsCurrentFilesOpen=mfsCurrentFilesOpen, wsTotalLockedErrors=wsTotalLockedErrors, msmqMessagesInJournalQueue=msmqMessagesInJournalQueue, wFPv6InConnections=wFPv6InConnections, aspTransactionsCommitted=aspTransactionsCommitted, rsvpIfReceiveMsgsErrorsNoMemory=rsvpIfReceiveMsgsErrorsNoMemory, ipV6FragmentsReassembledPerSec=ipV6FragmentsReassembledPerSec, ntdsDRAPendReplicationOps=ntdsDRAPendReplicationOps, ncsInstance=ncsInstance, cacheMDLReadHitsPercent=cacheMDLReadHitsPercent, joProcessCountActive=joProcessCountActive, atPacketsDropped=atPacketsDropped, adnAppl2ViewstateMACValidFailure=adnAppl2ViewstateMACValidFailure, msmqInMulticastSessionEntry=msmqInMulticastSessionEntry, smo3CallsNotAuthorizedPerSec=smo3CallsNotAuthorizedPerSec, ipsi6QuickModeNegotiationsPerSec=ipsi6QuickModeNegotiationsPerSec, adnRequestsQueued=adnRequestsQueued, ntdsDRAThreadsGettingNCChanges=ntdsDRAThreadsGettingNCChanges, udpV6DatagramsReceivedPerSec=udpV6DatagramsReceivedPerSec, processWorkingSetMBytesPeak=processWorkingSetMBytesPeak, iusInvalidRequestsPerSec=iusInvalidRequestsPerSec, dfsrfConflictFolderCleanupsComp=dfsrfConflictFolderCleanupsComp, npsacsPacketsSentPerSec=npsacsPacketsSentPerSec, wwfInstance=wwfInstance, rsvpIfRESVMsgsSent=rsvpIfRESVMsgsSent, spxConnectionsCanceled=spxConnectionsCanceled, tssOutputTransportErrors=tssOutputTransportErrors, npsaccAccountingRequests=npsaccAccountingRequests, npsausAccessRejects=npsausAccessRejects, ipsi6FailedQuickModeNegotPerSec=ipsi6FailedQuickModeNegotPerSec, browserAnnouncementsServerPerSec=browserAnnouncementsServerPerSec, ipsa6QuickModeNegotiations=ipsa6QuickModeNegotiations, ntdsDSPercentSearchesFromSAM=ntdsDSPercentSearchesFromSAM, adbIOLogReadsPerSec=adbIOLogReadsPerSec, snfsRPCReplyPacketsCreated=snfsRPCReplyPacketsCreated, is4dTotalTransportBytesSent=is4dTotalTransportBytesSent, adnAppl2AuditFailureEventsRaised=adnAppl2AuditFailureEventsRaised, npsrausLastRoundTripTime=npsrausLastRoundTripTime, uddicDeletebusiness=uddicDeletebusiness, appleTalkTable=appleTalkTable, ircsBadAuthenticators=ircsBadAuthenticators, adnAppl2TransactionsCommitted=adnAppl2TransactionsCommitted, npspeLastRoundTripTime=npspeLastRoundTripTime, smo3CallFailedPerSecond=smo3CallFailedPerSecond, ipsi4SuccessQuickModeNegotiation=ipsi4SuccessQuickModeNegotiation, npsracsInstance=npsracsInstance, rsvpIfReservedBandwidth=rsvpIfReservedBandwidth, wmssControllers=wmssControllers, dsNegotiatedBindsPerSec=dsNegotiatedBindsPerSec, adnAppl2OutputCacheMisses=adnAppl2OutputCacheMisses, iupAccessRequests=iupAccessRequests, systemAlignmentFixupsPerSec=systemAlignmentFixupsPerSec, icmpV6ReceivedPacketTooBig=icmpV6ReceivedPacketTooBig, npsshvInstance=npsshvInstance, adbRecordsConverted=adbRecordsConverted, dfsrfRDCNumberOfFilesReceived=dfsrfRDCNumberOfFilesReceived, ntdsDSPercentReadsFromDRA=ntdsDSPercentReadsFromDRA, printQueueAddNetworkPrinterCalls=printQueueAddNetworkPrinterCalls, ntdsSAMAccountGroupEvalLatency=ntdsSAMAccountGroupEvalLatency, wwfWorkflowsInMemory=wwfWorkflowsInMemory, frsLocalChgOrdersRetried=frsLocalChgOrdersRetried, httpServiceTotalUrisCached=httpServiceTotalUrisCached, dtcb3CommitRetryCountPerSec=dtcb3CommitRetryCountPerSec, adnAppl2PipelineInstanceCount=adnAppl2PipelineInstanceCount, iusDuplicateAccessRequests=iusDuplicateAccessRequests, dfsrfSizeOfFilesReceived=dfsrfSizeOfFilesReceived, udditGetauthToken=udditGetauthToken, adbPagesConvertedPerSec=adbPagesConvertedPerSec, ntdsDSNameCacheHitRate=ntdsDSNameCacheHitRate, adbIPerODatabaseWritesPerSec=adbIPerODatabaseWritesPerSec, npsacpAccountingRequests=npsacpAccountingRequests, irusAccessRequests=irusAccessRequests, pop3SvcMailboxesInAuthState=pop3SvcMailboxesInAuthState, adbDatabaseCacheSizeMB=adbDatabaseCacheSizeMB, processVirtualKBytes=processVirtualKBytes, sme3Instance=sme3Instance, dfsrfConflictBytesCleanedUp=dfsrfConflictBytesCleanedUp, tssProtocolGlyphCacheReads=tssProtocolGlyphCacheReads, npsacpUnknownTypePerSec=npsacpUnknownTypePerSec, nntpSrvrTotalPullFeeds=nntpSrvrTotalPullFeeds, nclCurrentAssemblies=nclCurrentAssemblies, caRequestCryptographicSignTimeMs=caRequestCryptographicSignTimeMs, wmppCurOutDistConnections=wmppCurOutDistConnections, iisGlobalURICacheHitsPercent=iisGlobalURICacheHitsPercent, rasTotalBytesTransmittedPerSec=rasTotalBytesTransmittedPerSec, adnAppl2OutputCacheTurnoverRate=adnAppl2OutputCacheTurnoverRate, wsPropfindRqstsPerSec=wsPropfindRqstsPerSec, serverBytesReceivedPerSec=serverBytesReceivedPerSec, netBIOSConnectionsNoRetries=netBIOSConnectionsNoRetries, netPacketsRcvdNonUnicastPerSec=netPacketsRcvdNonUnicastPerSec, ntdsDRAInboundBytesNotCWSPerSec=ntdsDRAInboundBytesNotCWSPerSec, pSchedFlowTable=pSchedFlowTable, smtpSrvrDirDropsTotal=smtpSrvrDirDropsTotal, ipV4DatagramsRcvdUnknownProtocol=ipV4DatagramsRcvdUnknownProtocol, dtcCommittedTransactions=dtcCommittedTransactions, snfsTotalRPCRepliesReceived=snfsTotalRPCRepliesReceived, wsMaximumAnonymousUsers=wsMaximumAnonymousUsers, adnApplInfraErrEventRaisedPerSec=adnApplInfraErrEventRaisedPerSec, smtpSrvrConnErrorsPerSec=smtpSrvrConnErrorsPerSec, sme3CallsFailedPerSecond=sme3CallsFailedPerSecond, serverLogonPerSec=serverLogonPerSec, dhcpServer=dhcpServer, smtpSrvrCatRcptsAfterCat=smtpSrvrCatRcptsAfterCat, ipsa4FailedMainModeNegPerSec=ipsa4FailedMainModeNegPerSec, adnAppl1RequestBytesOutTotal=adnAppl1RequestBytesOutTotal, caRetrievalProcessingTimeMs=caRetrievalProcessingTimeMs, physicalDiskEntry=physicalDiskEntry, wsFilesPerSec=wsFilesPerSec, winsSrvrGroupRenewalsPerSec=winsSrvrGroupRenewalsPerSec, smtpSrvrAvgRetriesPerMsgDlvrd=smtpSrvrAvgRetriesPerMsgDlvrd, tssTotalAsyncFrameError=tssTotalAsyncFrameError, npsracsAccountingRequests=npsracsAccountingRequests, snfsDRCSendErrors=snfsDRCSendErrors, ipsa6ExtendedModeSAsUsedImperson=ipsa6ExtendedModeSAsUsedImperson, ntdsDSMonitorListSize=ntdsDSMonitorListSize, processPoolPagedMBytes=processPoolPagedMBytes, amaNumberOfScopesLoadedInMemory=amaNumberOfScopesLoadedInMemory, dotNETCLRMemoryTable=dotNETCLRMemoryTable, udditFindservice=udditFindservice, tssPageFileBytes=tssPageFileBytes, aspDotNETApplicationsEntry=aspDotNETApplicationsEntry, siL7MergeSpeedLast=siL7MergeSpeedLast, adnAppl1CacheTotalEntries=adnAppl1CacheTotalEntries, sme3CallsFaulted=sme3CallsFaulted, serverPoolPagedMBytesPeak=serverPoolPagedMBytesPeak, vschdGPUContext=vschdGPUContext, wFPv4BlockedBinds=wFPv4BlockedBinds, sme3ValidationAuthFailPerSec=sme3ValidationAuthFailPerSec, iscsiSessionDigestErrors=iscsiSessionDigestErrors, iupPendingRequests=iupPendingRequests, adnApplRequestsDisconnected=adnApplRequestsDisconnected, httpServiceUriCacheFlushes=httpServiceUriCacheFlushes, ncdInstance=ncdInstance, pSchedPipeOutOfPackets=pSchedPipeOutOfPackets, npsRemoteAuthServersEntry=npsRemoteAuthServersEntry, irusAccessAcceptsPerSec=irusAccessAcceptsPerSec, iccDroppedPacketsPerSec=iccDroppedPacketsPerSec, wasTotalRequestsServed=wasTotalRequestsServed, ntdsSAMEnumerationsPerSec=ntdsSAMEnumerationsPerSec, serverSessionsErroredOut=serverSessionsErroredOut, nclRateOfAppdomains=nclRateOfAppdomains, is4iTotalMainModeSAs=is4iTotalMainModeSAs, icmpV4SentAddressMaskReply=icmpV4SentAddressMaskReply, acsPerRsvpSvcFailedQoSSends=acsPerRsvpSvcFailedQoSSends, aspRequestsExecuting=aspRequestsExecuting, icmpV6ReceivedRouterSolicit=icmpV6ReceivedRouterSolicit, ftpSvcBytesReceivedPerSec=ftpSvcBytesReceivedPerSec, wsCurrentNonAnonymousUsers=wsCurrentNonAnonymousUsers, smtpSrvrBadMailMsgsGeneralFail=smtpSrvrBadMailMsgsGeneralFail, udditDeleteservice=udditDeleteservice, dtcb3FaultsReceivedCountPerSec=dtcb3FaultsReceivedCountPerSec, adnApplReqErrorEventRaisedPerSec=adnApplReqErrorEventRaisedPerSec, iupRetransmissionsPerSec=iupRetransmissionsPerSec, iusPacketsSent=iusPacketsSent, giaipInvalidPacketReceivedPerSec=giaipInvalidPacketReceivedPerSec, iisGlobalBLOBCacheMisses=iisGlobalBLOBCacheMisses, wFPv4=wFPv4, msmqSvcIncomingMessagesPerSec=msmqSvcIncomingMessagesPerSec, memoryCacheKBytes=memoryCacheKBytes, npsrausRequestTimeouts=npsrausRequestTimeouts, tssProtocolBitmapCacheReads=tssProtocolBitmapCacheReads, snfsMV104UnmountAll=snfsMV104UnmountAll, iusAccessRequestsPerSec=iusAccessRequestsPerSec, ntdsDRAInboundObjsFilteredPerSec=ntdsDRAInboundObjsFilteredPerSec, wmsTotalUDPResendsSent=wmsTotalUDPResendsSent, msmqosOutgoingHTTPMessages=msmqosOutgoingHTTPMessages, nclBytesInLoaderHeap=nclBytesInLoaderHeap, dhcpSrvConflictCheckQueueLength=dhcpSrvConflictCheckQueueLength, wFPv4ActiveInConnections=wFPv4ActiveInConnections, ipSecIKEv6=ipSecIKEv6, npsaccNoRecordPerSec=npsaccNoRecordPerSec, processThreadCount=processThreadCount, redirWritesLargePerSec=redirWritesLargePerSec, icsAccountingResponses=icsAccountingResponses, cpuInstance=cpuInstance, ipsi4PendingQuickModeNegotiation=ipsi4PendingQuickModeNegotiation, fileReplicaConnTable=fileReplicaConnTable, snfsUnrecognizedRPCPackets=snfsUnrecognizedRPCPackets, netPacketsReceivedErrors=netPacketsReceivedErrors, pDiskAvgDiskSecPerTransfer=pDiskAvgDiskSecPerTransfer, npsaupUnknownTypePerSec=npsaupUnknownTypePerSec, jodVirtualBytes=jodVirtualBytes, iucAccessRejectsPerSec=iucAccessRejectsPerSec, rasPortBytesReceived=rasPortBytesReceived, tssProtocolBrushCacheHits=tssProtocolBrushCacheHits, advDatabaseInstancesEntry=advDatabaseInstancesEntry, adnAppl2RequestsFailed=adnAppl2RequestsFailed, dhcpSrvMillisecondsPerPacketAvg=dhcpSrvMillisecondsPerPacketAvg, nclRateOfClassesLoaded=nclRateOfClassesLoaded, bitsNetUtilization=bitsNetUtilization, ntdsExternalBindsPerSec=ntdsExternalBindsPerSec, iusMalformedPacketsPerSec=iusMalformedPacketsPerSec, msmqSvcIncomingMulticastSessions=msmqSvcIncomingMulticastSessions, dsDRAOutCmpBtwSitesAftCmpPerSec=dsDRAOutCmpBtwSitesAftCmpPerSec, httpsrqRejectionRate=httpsrqRejectionRate, adn1RequestsQueued=adn1RequestsQueued, iucUnknownTypePerSec=iucUnknownTypePerSec, sgFilterProcesses=sgFilterProcesses, wmusHTTPStreamsReadingHeader=wmusHTTPStreamsReadingHeader, iisGlobalFileCacheHitsPercent=iisGlobalFileCacheHitsPercent, netBEUIExpirationsResponse=netBEUIExpirationsResponse, redirWriteBytesNetworkPerSec=redirWriteBytesNetworkPerSec, svcHost3=svcHost3, sgpDocumentModifiesRate=sgpDocumentModifiesRate, adnStateServerSessionsAbandoned=adnStateServerSessionsAbandoned, icpPendingRequests=icpPendingRequests, httpsrqCacheHitRate=httpsrqCacheHitRate, winsSrvrUniqueRegsPerSec=winsSrvrUniqueRegsPerSec)
mibBuilder.exportSymbols("INFORMANT-ADV", hrasHCEPFailedRequests=hrasHCEPFailedRequests, npsaupMalformedPacketsPerSec=npsaupMalformedPacketsPerSec, w3svcURICacheMisses=w3svcURICacheMisses, dhcpSrvAcksPerSec=dhcpSrvAcksPerSec, cpuPercentIdleTime=cpuPercentIdleTime, msmqSvcOutgoingHTTPSessions=msmqSvcOutgoingHTTPSessions, ntdsDSSearchSuboperationsPerSec=ntdsDSSearchSuboperationsPerSec, adbiInstance=adbiInstance, nwBytesReceivedPerSec=nwBytesReceivedPerSec, wmiObjects=wmiObjects, udpV4=udpV4, ipsa4QuickModeNegotiations=ipsa4QuickModeNegotiations, npsaccAccountingResponsesPerSec=npsaccAccountingResponsesPerSec, netBytesTotalPerSec=netBytesTotalPerSec, redirFileReadOperationsPerSec=redirFileReadOperationsPerSec, ipV4DatagramsOutboundDiscarded=ipV4DatagramsOutboundDiscarded, netBIOSFailuresNotFound=netBIOSFailuresNotFound, smtpSrvrOutboundConnsTotal=smtpSrvrOutboundConnsTotal, tssInputAsyncOverflow=tssInputAsyncOverflow, wFPv6ActiveOutConnections=wFPv6ActiveOutConnections, adn2RequestExecutionTime=adn2RequestExecutionTime, dnsDynamicUpdateReceived=dnsDynamicUpdateReceived, icmpV4MessagesPerSec=icmpV4MessagesPerSec, msmqSvcMSMQIncomingMessages=msmqSvcMSMQIncomingMessages, dfsrsvDatabaseLookups=dfsrsvDatabaseLookups, frsChgOrdersSent=frsChgOrdersSent, httpService=httpService, searchGathererProjectsTable=searchGathererProjectsTable, frsPacketsReceivedInBytes=frsPacketsReceivedInBytes, wmppPeakOutDistAllocBandwdthKbps=wmppPeakOutDistAllocBandwdthKbps, certificationAuthorityTable=certificationAuthorityTable, ftpSvcCurrentConnections=ftpSvcCurrentConnections, ipV4FragmentsCreatedPerSec=ipV4FragmentsCreatedPerSec, tssProtocolGlyphCacheHitRatio=tssProtocolGlyphCacheHitRatio, wmsPeakPlayerAllocBandwidthKbps=wmsPeakPlayerAllocBandwidthKbps, msmqsIncomingBytesPerSec=msmqsIncomingBytesPerSec, adnssSessionsAbandoned=adnssSessionsAbandoned, pSchedFlowNonconfPktsSched=pSchedFlowNonconfPktsSched, dsDRAOutCmpBtwSitesBfrCmpPerSec=dsDRAOutCmpBtwSitesBfrCmpPerSec, serverFilesOpenedTotal=serverFilesOpenedTotal, smtpSrvrBadMailMsgsHopCntExceed=smtpSrvrBadMailMsgsHopCntExceed, dsDSDirectoryReadsPerSec=dsDSDirectoryReadsPerSec, browserMailslotAllocationsFailed=browserMailslotAllocationsFailed, ipsa6FailQuickModeNegotPerSec=ipsa6FailQuickModeNegotPerSec, npsaucUnknownTypePerSec=npsaucUnknownTypePerSec, npsaccPacketsReceivedPerSec=npsaccPacketsReceivedPerSec, frsChgOrdersRetried=frsChgOrdersRetried, nntpSrvrBytesSentPerSec=nntpSrvrBytesSentPerSec, netBEUIFramesPerSec=netBEUIFramesPerSec, rsvpSvcQoSenabledReceivers=rsvpSvcQoSenabledReceivers, netBIOSPiggybackAckTimeouts=netBIOSPiggybackAckTimeouts, tssInstance=tssInstance, tssPoolNonpagedBytes=tssPoolNonpagedBytes, smo3ValidationAuthFailPerSec=smo3ValidationAuthFailPerSec, tssInputAsyncOverrun=tssInputAsyncOverrun, ntdsDSPercentSearchesFromXDS=ntdsDSPercentSearchesFromXDS, adbiSessionsPercentUsed=adbiSessionsPercentUsed, smtpSrvrCatLDAPPagedSrchsCmpltd=smtpSrvrCatLDAPPagedSrchsCmpltd, wmsCurFileReadRateKbps=wmsCurFileReadRateKbps, ftpSvcCurrentNonAnonymousUsers=ftpSvcCurrentNonAnonymousUsers, ipsa4ExtendedModeNegotiations=ipsa4ExtendedModeNegotiations, snsdOpenMessageBodies=snsdOpenMessageBodies, npsrausFullAccessDecisionsPerSec=npsrausFullAccessDecisionsPerSec, frsRemoteChgOrdersRetriedFetch=frsRemoteChgOrdersRetriedFetch, sms3TransactionsFlowed=sms3TransactionsFlowed, smsh3UrisRegisteredForNetPipe=smsh3UrisRegisteredForNetPipe, rsvpSvcInstance=rsvpSvcInstance, lDiskAvgDiskQueueLength=lDiskAvgDiskQueueLength, pagingFileInstance=pagingFileInstance, frsChgOrdersRetired=frsChgOrdersRetired, indexingServiceEntry=indexingServiceEntry, npsacsUnknownType=npsacsUnknownType, ipxFailuresNoListen=ipxFailuresNoListen, pDiskPercentDiskWriteTime=pDiskPercentDiskWriteTime, adnAppl2RequestEventsRaised=adnAppl2RequestEventsRaised, netBIOSInstance=netBIOSInstance, wsTotalRejectedAsyncIORqsts=wsTotalRejectedAsyncIORqsts, adnInfrastructErrorEventsRaised=adnInfrastructErrorEventsRaised, icmpV4MessagesReceivedPerSec=icmpV4MessagesReceivedPerSec, icmpV6MessagesReceivedErrors=icmpV6MessagesReceivedErrors, nntpCmdsNewgroupsCmdsPerSec=nntpCmdsNewgroupsCmdsPerSec, ftpSvcMaximumAnonymousUsers=ftpSvcMaximumAnonymousUsers, nntpSrvrControlMessagesReceived=nntpSrvrControlMessagesReceived, redirBytesTotalPerSec=redirBytesTotalPerSec, cacheSyncPinReadsPerSec=cacheSyncPinReadsPerSec, wmppCurStreamingHTTPPlayers=wmppCurStreamingHTTPPlayers, msmqsIncomingMessages=msmqsIncomingMessages, cachePinReadHitsPercent=cachePinReadHitsPercent, npsaupRetransmissions=npsaupRetransmissions, netBIOSExpirationsResponse=netBIOSExpirationsResponse, w3svcMetadataCacheHits=w3svcMetadataCacheHits, ipV6DatagramsOutboundDiscarded=ipV6DatagramsOutboundDiscarded, dsLDAPSearchesPerSec=dsLDAPSearchesPerSec, npsrausAccessAccepts=npsrausAccessAccepts, processWorkingSetKPrivate=processWorkingSetKPrivate, uddicDeleteservice=uddicDeleteservice, ipsa4FailedMainModeNegotiations=ipsa4FailedMainModeNegotiations, snfsMV100NULLMount=snfsMV100NULLMount, wsTotalOptionsRqsts=wsTotalOptionsRqsts, udditSetpublisherAssertions=udditSetpublisherAssertions, nceInstance=nceInstance, ipxDatagramBytesPerSec=ipxDatagramBytesPerSec, ntdsDRAInTotalUpdsRemainInPacket=ntdsDRAInTotalUpdsRemainInPacket, udpV4DatagramsReceivedErrors=udpV4DatagramsReceivedErrors, memoryAvailableKBytes=memoryAvailableKBytes, adnApplErrorsCompilation=adnApplErrorsCompilation, ntdsDSPercentReadsFromXDS=ntdsDSPercentReadsFromXDS, redirServerDisconnects=redirServerDisconnects, ipxPiggybackAckQueuedPerSec=ipxPiggybackAckQueuedPerSec, msmqBytesInQueue=msmqBytesInQueue, pop3SvcTotalFailedLogons=pop3SvcTotalFailedLogons, siL1MergesNow=siL1MergesNow, snfsV319FileSystemInfo=snfsV319FileSystemInfo, ncdSQLClntTotalNumFailedConnects=ncdSQLClntTotalNumFailedConnects, smtpSrvrDirDropsPerSec=smtpSrvrDirDropsPerSec, wFPv6InPacketsDiscardedPerSec=wFPv6InPacketsDiscardedPerSec, adnApplTransactionsTotal=adnApplTransactionsTotal, serverSessionsTimedOut=serverSessionsTimedOut, uddicNotifychangeRecordAvailable=uddicNotifychangeRecordAvailable, ntdsDRASyncRequestsMade=ntdsDRASyncRequestsMade, uddicFindbusiness=uddicFindbusiness, smtpSrvrLocalRetryQueueLength=smtpSrvrLocalRetryQueueLength, ocspscInstance=ocspscInstance, adnApplDebuggingRequests=adnApplDebuggingRequests, npsaucInstance=npsaucInstance, dnsDynamicUpdateWriteToDB=dnsDynamicUpdateWriteToDB, icpUnknownType=icpUnknownType, dsDRAInNotCmpWithinSiteSinceBoot=dsDRAInNotCmpWithinSiteSinceBoot, npsAccountingClientsEntry=npsAccountingClientsEntry, siDirtyWidSets=siDirtyWidSets, frsUsnRecordsAccepted=frsUsnRecordsAccepted, nntpCmdsTakethisCmds=nntpCmdsTakethisCmds, spxDatagramBytesReceivedPerSec=spxDatagramBytesReceivedPerSec, tcpV4=tcpV4, dfsrfConflictBytesGenerated=dfsrfConflictBytesGenerated, frcPacketsSentInBytes=frcPacketsSentInBytes, dsDatabaseAddsPerSec=dsDatabaseAddsPerSec, adnAppl1OutputCacheTurnoverRate=adnAppl1OutputCacheTurnoverRate, adnApplCacheAPITurnoverRate=adnApplCacheAPITurnoverRate, nntpCmdsCheckCmdsPerSec=nntpCmdsCheckCmdsPerSec, iisGlobalCurFileCacheMemUsage=iisGlobalCurFileCacheMemUsage, ntdsDSServerNameTranslatePerSec=ntdsDSServerNameTranslatePerSec, tssTotalWaitForOutBuf=tssTotalWaitForOutBuf, ipsa6SuccessMainModeNegotPerSec=ipsa6SuccessMainModeNegotPerSec, netPacketsOutboundErrors=netPacketsOutboundErrors, wmsCurConnectedPlayers=wmsCurConnectedPlayers, memoryFreeZeroPageListBytes=memoryFreeZeroPageListBytes, ipSecAuthIPv6=ipSecAuthIPv6, udditGettModelDetail=udditGettModelDetail, redirBytesReceivedPerSec=redirBytesReceivedPerSec, npsaccAccountingResponses=npsaccAccountingResponses, irusAccessRequestsPerSec=irusAccessRequestsPerSec, joTotalMSecProcessor=joTotalMSecProcessor, dhcpSrvDuplicatesDroppedPerSec=dhcpSrvDuplicatesDroppedPerSec, ntdsLDAPSuccessfulBinds=ntdsLDAPSuccessfulBinds, smtpSrvrBadMailMsgsNDROfDSN=smtpSrvrBadMailMsgsNDROfDSN, aspRequestsRejected=aspRequestsRejected, nntpCmdsPostCmdsPerSec=nntpCmdsPostCmdsPerSec, msmqimsIncomingMulticastBytes=msmqimsIncomingMulticastBytes, adnApplOutputCacheHitRatio=adnApplOutputCacheHitRatio, wscCurrentFileCacheMemoryUsage=wscCurrentFileCacheMemoryUsage, adnApplTransactionsAborted=adnApplTransactionsAborted, dnsAXFRSuccessReceived=dnsAXFRSuccessReceived, faxsFailedFaxesTransmissions=faxsFailedFaxesTransmissions, cacheDataMapsPerSec=cacheDataMapsPerSec, memoryFreeSystemPageTableEntries=memoryFreeSystemPageTableEntries, netBEUIDatagramBytesRcvdPerSec=netBEUIDatagramBytesRcvdPerSec, ntdsLDAPClosedConnectionsPerSec=ntdsLDAPClosedConnectionsPerSec, ncdSQLClntCurNumConns=ncdSQLClntCurNumConns, lDiskDiskWritesPerSec=lDiskDiskWritesPerSec, netBIOSWindowSendMaximum=netBIOSWindowSendMaximum, giaipFailedNegotiations=giaipFailedNegotiations, faxsBytesSent=faxsBytesSent, netlogonSemaphoreAcquires=netlogonSemaphoreAcquires, ntdsDRAOutboundBytesTotalPerSec=ntdsDRAOutboundBytesTotalPerSec, npsrausAccessChallenges=npsrausAccessChallenges, adnAppl2RequestErrorEventsRaised=adnAppl2RequestErrorEventsRaised, udpV4DatagramsPerSec=udpV4DatagramsPerSec, ntdsDRAOutboundBytesNotCWSPerSec=ntdsDRAOutboundBytesNotCWSPerSec, dsDRAInCmpBtwSiteAftCmpSinceBoot=dsDRAInCmpBtwSiteAftCmpSinceBoot, msmqomsInstance=msmqomsInstance, w3svcW3WPTable=w3svcW3WPTable, uddicFindservice=uddicFindservice, redirFileDataOperationsPerSec=redirFileDataOperationsPerSec, browserEnumerationsTotalPerSec=browserEnumerationsTotalPerSec, dsDRAOutboundObjectsPerSec=dsDRAOutboundObjectsPerSec, lDiskAvgDiskSecPerWrite=lDiskAvgDiskSecPerWrite, wscCurrentFilesCached=wscCurrentFilesCached, hcapcAverageNPSValidationTime=hcapcAverageNPSValidationTime, ipsa4MainModeNegRqstReceived=ipsa4MainModeNegRqstReceived, ipsa6PendExtendModeNegotiations=ipsa6PendExtendModeNegotiations, ipV6DatagramsPerSec=ipV6DatagramsPerSec, netBEUIPacketsPerSec=netBEUIPacketsPerSec, npsshvShvServerCommFailures=npsshvShvServerCommFailures, redirReadBytesCachePerSec=redirReadBytesCachePerSec, smtpSrvrCatLDAPSrchsCmpltd=smtpSrvrCatLDAPSrchsCmpltd, tcpV4SegmentsReceivedPerSec=tcpV4SegmentsReceivedPerSec, icpUnknownTypePerSec=icpUnknownTypePerSec, dsDSPercentSearchesFromDRA=dsDSPercentSearchesFromDRA, netBIOSConnectionsOpen=netBIOSConnectionsOpen, memoryPoolNonpagedBytes=memoryPoolNonpagedBytes, processIDProcess=processIDProcess, giaipIKEQuickModeNegotiationTime=giaipIKEQuickModeNegotiationTime, wsrmprInstance=wsrmprInstance, rsvpIfMaximumAdmittedBandwidth=rsvpIfMaximumAdmittedBandwidth, aspTransactionsTotal=aspTransactionsTotal, wmppCurOutDistAllocBandwidthKbps=wmppCurOutDistAllocBandwidthKbps, jodThreadCount=jodThreadCount, dsDSPercentReadsFromKCC=dsDSPercentReadsFromKCC, siPersistentIndexesL3=siPersistentIndexesL3, dtcResponseTimeAverage=dtcResponseTimeAverage, ntdsATQEstimatedQueueDelay=ntdsATQEstimatedQueueDelay, w3svcFileCacheMisses=w3svcFileCacheMisses, siL4MergeCount=siL4MergeCount, dnsIXFRRequestReceived=dnsIXFRRequestReceived, wsrmpmcInstance=wsrmpmcInstance, ipsa6FailedExtendModeNegotPerSec=ipsa6FailedExtendModeNegotPerSec, msmqosOutgoingHTTPBytes=msmqosOutgoingHTTPBytes, memoryStbyCacheCoreMBytes=memoryStbyCacheCoreMBytes, npsausPacketsSent=npsausPacketsSent, adnAppl2SessionsTotal=adnAppl2SessionsTotal, wwfWorkflowsPending=wwfWorkflowsPending, ipsi6FailedMainModeNegotPerSec=ipsi6FailedMainModeNegotPerSec, siQueries=siQueries, npsaccUnknownTypePerSec=npsaccUnknownTypePerSec, adnAppl2ErrorsTotalPerSec=adnAppl2ErrorsTotalPerSec, ipV4DatagramsForwardedPerSec=ipV4DatagramsForwardedPerSec, pagingFilePercentUsagePeak=pagingFilePercentUsagePeak, npsacpDroppedPacketsPerSec=npsacpDroppedPacketsPerSec, sms3Calls=sms3Calls, dhcpSrvNacksPerSec=dhcpSrvNacksPerSec, tcpV6SegmentsRetransmittedPerSec=tcpV6SegmentsRetransmittedPerSec, ipsa6MainModeSAUseImpersonPerSec=ipsa6MainModeSAUseImpersonPerSec, telephony=telephony, adnApplTransactionsPending=adnApplTransactionsPending, webServiceCache=webServiceCache, wsTotalBytesReceived=wsTotalBytesReceived, udditFindtModel=udditFindtModel, msmqOutgoingHTTPSessionEntry=msmqOutgoingHTTPSessionEntry, npsracsMalformedPackets=npsracsMalformedPackets, adnApplRequestsExecuting=adnApplRequestsExecuting, nntpCmdsTakethisCmdsPerSec=nntpCmdsTakethisCmdsPerSec, icsMalformedPacketsPerSec=icsMalformedPacketsPerSec, idxSvcTotalNumDocuments=idxSvcTotalNumDocuments, netBEUIEntry=netBEUIEntry, ntdsKerberosAuthentications=ntdsKerberosAuthentications, dsDRAInCmpBtwSitesAfterCmpPerSec=dsDRAInCmpBtwSitesAfterCmpPerSec, ncrContextBoundClassesLoaded=ncrContextBoundClassesLoaded, smtpSrvrCatRcptsNDRdByCategorize=smtpSrvrCatRcptsNDRdByCategorize, netPacketsSentPerSec=netPacketsSentPerSec, siL3MergesNow=siL3MergesNow, hraStatistics=hraStatistics, wsMaximumCGIRqsts=wsMaximumCGIRqsts, rsvpSvcTimers=rsvpSvcTimers)
mibBuilder.exportSymbols("INFORMANT-ADV", adnApplSessionStateSrvrConnTotal=adnApplSessionStateSrvrConnTotal, icmpV4SentSourceQuench=icmpV4SentSourceQuench, icmpV6MessagesOutboundErrors=icmpV6MessagesOutboundErrors, swqCurrentClients=swqCurrentClients, swqWriteBytesPerSec=swqWriteBytesPerSec, npsausAccessChallengesPerSec=npsausAccessChallengesPerSec, smtpSrvrCatLDAPSrchFail=smtpSrvrCatLDAPSrchFail, adnAppl2TransactionsPending=adnAppl2TransactionsPending, printQueueMaxReferences=printQueueMaxReferences, dnsIXFRUDPSuccessReceived=dnsIXFRUDPSuccessReceived, ntdsOnelevelSearchesPerSec=ntdsOnelevelSearchesPerSec, dotNETCLRLocksAndThreadsEntry=dotNETCLRLocksAndThreadsEntry, iisGlobalMaxFileCacheMemUsage=iisGlobalMaxFileCacheMemUsage, smtpSrvrMsgBytesTotalPerSec=smtpSrvrMsgBytesTotalPerSec, snfsRPCRepliesReceivedPerSec=snfsRPCRepliesReceivedPerSec, idxSvcFilesToBeIndexed=idxSvcFilesToBeIndexed, smo3CallsFaultedPerSecond=smo3CallsFaultedPerSecond, wscFileCacheMisses=wscFileCacheMisses, smtpSrvrCatMailmsgDupCollisions=smtpSrvrCatMailmsgDupCollisions, ipsdOffloadedBytesSentPerSec=ipsdOffloadedBytesSentPerSec, ntdsDSServerBindsPerSec=ntdsDSServerBindsPerSec, msmqsOutgoingBytes=msmqsOutgoingBytes, siL1MergeCount=siL1MergeCount, iupAccessRejects=iupAccessRejects, atPacketsOutPerSec=atPacketsOutPerSec, adnAppl2ErrorsDuringCompilation=adnAppl2ErrorsDuringCompilation, adnssSessionsTimedOut=adnssSessionsTimedOut, tssInputErrors=tssInputErrors, dsLinkValuesCleanedPerSec=dsLinkValuesCleanedPerSec, dsDRAHighestUSNIssuedHighPart=dsDRAHighestUSNIssuedHighPart, wasW3WPTable=wasW3WPTable, frsInboundChgOrdersDampened=frsInboundChgOrdersDampened, wsrmProcessMatchingCriteriaEntry=wsrmProcessMatchingCriteriaEntry, ipsi4ActiveMainModeSAs=ipsi4ActiveMainModeSAs, browserServerListRequestsPerSec=browserServerListRequestsPerSec, wsrmpmcProcessCount=wsrmpmcProcessCount, dsSAMMachineCreationAttpsPerSec=dsSAMMachineCreationAttpsPerSec, pSchedFlowPktsScheduled=pSchedFlowPktsScheduled, wmusActiveUDPStreams=wmusActiveUDPStreams, frsReplicaSetsCreated=frsReplicaSetsCreated, siL0IndexesWordlists=siL0IndexesWordlists, adnAppl1ErrorsDuringExecution=adnAppl1ErrorsDuringExecution, sgWordBreakersCached=sgWordBreakersCached, ntdsDRAOutboundPropertiesPerSec=ntdsDRAOutboundPropertiesPerSec, wFPv4OutConnectionsAllowedPerSec=wFPv4OutConnectionsAllowedPerSec, iisGlobalMeasuredAsyncIOBwUsage=iisGlobalMeasuredAsyncIOBwUsage, wsTotalFilesSent=wsTotalFilesSent, iasRemoteAuthenticationSrvrTable=iasRemoteAuthenticationSrvrTable, httpsugGetRequests=httpsugGetRequests, ipsa4PendingQuickModeNegotiation=ipsa4PendingQuickModeNegotiation, wFPv6OutConnectionsBlockedPerSec=wFPv6OutConnectionsBlockedPerSec, npsshvShvNonCompliances=npsshvShvNonCompliances, udditFindrelatedBusinesses=udditFindrelatedBusinesses, memorySystemDriverTotalBytes=memorySystemDriverTotalBytes, ipxConnectionSessionTimeouts=ipxConnectionSessionTimeouts, frsRemoteChgOrdersSent=frsRemoteChgOrdersSent, ipV4FragmentationFailures=ipV4FragmentationFailures, icmpV6SentRedirectPerSec=icmpV6SentRedirectPerSec, dfsrfDeletedBytesCleanedUp=dfsrfDeletedBytesCleanedUp, ipsi4SuccessQuickModeNegotPerSec=ipsi4SuccessQuickModeNegotPerSec, nntpSrvrArticlesPostedPerSec=nntpSrvrArticlesPostedPerSec, ntdsDRAOutboundValuesTotalPerSec=ntdsDRAOutboundValuesTotalPerSec, adnAppl2MembershipAuthSuccess=adnAppl2MembershipAuthSuccess, icpAccountingResponses=icpAccountingResponses, pSchedFlowBytesScheduled=pSchedFlowBytesScheduled, pagingFileEntry=pagingFileEntry, snfsV205ReadLink=snfsV205ReadLink, is4dOffloadedSecurityAssociation=is4dOffloadedSecurityAssociation, smtpSrvrLocalQueueLength=smtpSrvrLocalQueueLength, nclCurrentAppdomains=nclCurrentAppdomains, wFPv4OutConnectionsBlockedPerSec=wFPv4OutConnectionsBlockedPerSec, dsDSServerNameTranslationsPerSec=dsDSServerNameTranslationsPerSec, dsDSPercentWritesOther=dsDSPercentWritesOther, ipsi4QuickModeNegotiations=ipsi4QuickModeNegotiations, nwFileReadOperationsPerSec=nwFileReadOperationsPerSec, ntdsDatabaseAddsPerSec=ntdsDatabaseAddsPerSec, httpServiceTotalFlushedUris=httpServiceTotalFlushedUris, siL6MergeSpeedAverage=siL6MergeSpeedAverage, adbiTableOpenCacheHitsPerSec=adbiTableOpenCacheHitsPerSec, adnAppl1OutputCacheHits=adnAppl1OutputCacheHits, iisGlobalTotalURIsCached=iisGlobalTotalURIsCached, indexingServiceTable=indexingServiceTable, smtpSrvrPercentRcpntsRemote=smtpSrvrPercentRcpntsRemote, smtpSrvrTotalConnErrors=smtpSrvrTotalConnErrors, npsshvShvOtherFailures=npsshvShvOtherFailures, wsrmpmcTargetManagedCPUPercent=wsrmpmcTargetManagedCPUPercent, processVirtualMBytes=processVirtualMBytes, snfsBytesReadPerSec=snfsBytesReadPerSec, siL5MergesNow=siL5MergesNow, adnStateServerSessionsTotal=adnStateServerSessionsTotal, netBEUIConnectionsCanceled=netBEUIConnectionsCanceled, wwfWorkflowsTerminated=wwfWorkflowsTerminated, wscKernelURICacheHits=wscKernelURICacheHits, adbTableOpenCachePercentHit=adbTableOpenCachePercentHit, npsacpRetransmissions=npsacpRetransmissions, w3svcOutputCacheTotalMisses=w3svcOutputCacheTotalMisses, dnsUDPResponseSentPerSec=dnsUDPResponseSentPerSec, serverPoolNonpagedFailures=serverPoolNonpagedFailures, wsDeleteRqstsPerSec=wsDeleteRqstsPerSec, aspErrorsPerSec=aspErrorsPerSec, ntdsABPropertyReadsPerSec=ntdsABPropertyReadsPerSec, objectsMutexes=objectsMutexes, processPoolNonpagedKBytes=processPoolNonpagedKBytes, iisGlobalTotalBlockAsyncIOReqs=iisGlobalTotalBlockAsyncIOReqs, systemFileReadOperationsPerSec=systemFileReadOperationsPerSec, dnsIXFRResponseReceived=dnsIXFRResponseReceived, ncmPromotFinalizationMemoryGen0=ncmPromotFinalizationMemoryGen0, dsDRAOutboundValuesDNsOnlyPerSec=dsDRAOutboundValuesDNsOnlyPerSec, rpcpNumFailBackEndConnAttmPerSec=rpcpNumFailBackEndConnAttmPerSec, acsPerRsvpSvcQoSEnabledSenders=acsPerRsvpSvcQoSEnabledSenders, memoryPoolNonpagedMBytes=memoryPoolNonpagedMBytes, npsRemoteAuthServersTable=npsRemoteAuthServersTable, iucMalformedPacketsPerSec=iucMalformedPacketsPerSec, ipxWindowSendAverage=ipxWindowSendAverage, frsDSBindings=frsDSBindings, wmusHTTPStreams=wmusHTTPStreams, dtcCommittedTransactionsPerSec=dtcCommittedTransactionsPerSec, memoryStbyCacheReserveBytes=memoryStbyCacheReserveBytes, adbIOLogWritesAverageLatency=adbIOLogWritesAverageLatency, tsgFailedConnectionAuthorization=tsgFailedConnectionAuthorization, memoryPoolPagedResidentMBytes=memoryPoolPagedResidentMBytes, httpsrqRejectedRequests=httpsrqRejectedRequests, npsaupMalformedPackets=npsaupMalformedPackets, sgpProcessedDocumentsRate=sgpProcessedDocumentsRate, netBIOSPacketsReceivedPerSec=netBIOSPacketsReceivedPerSec, ipsa4MainModeNegotiationsPerSec=ipsa4MainModeNegotiationsPerSec, wsTotalFilesTransferred=wsTotalFilesTransferred, idxSvcIndexSizeMB=idxSvcIndexSizeMB, smtpSrvrMsgsSentPerSec=smtpSrvrMsgsSentPerSec, adnAppl2RequestsTimedOut=adnAppl2RequestsTimedOut, nntpCmdsSearchCmds=nntpCmdsSearchCmds, serverWorkQueuesEntry=serverWorkQueuesEntry, wmsCurLateSendRate=wmsCurLateSendRate, adnssSessionsActive=adnssSessionsActive, icsDroppedPacketsPerSec=icsDroppedPacketsPerSec, ipSecAuthIPv4=ipSecAuthIPv4, adnApplCacheTotalTurnoverRate=adnApplCacheTotalTurnoverRate, rasTotal=rasTotal, adnAppl1AnonymousRequestsPerSec=adnAppl1AnonymousRequestsPerSec, netBIOSFailuresResourceRemote=netBIOSFailuresResourceRemote, siDocumentsFiltered=siDocumentsFiltered, pagingFileTable=pagingFileTable, videoSchedulerTable=videoSchedulerTable, npsacpBadAuthenticatorsPerSec=npsacpBadAuthenticatorsPerSec, sgServersCurrentlyUnavailable=sgServersCurrentlyUnavailable, wsrmpmcActualManagedCPUPercent=wsrmpmcActualManagedCPUPercent, dhcpSrvOffersPerSec=dhcpSrvOffersPerSec, ipsa6PendingMainModeNegotiations=ipsa6PendingMainModeNegotiations, spxDatagramsPerSec=spxDatagramsPerSec, pop3SvcTotalConnections=pop3SvcTotalConnections, systemProcessorQueueLength=systemProcessorQueueLength, npsrausDroppedPackets=npsrausDroppedPackets, npsracsPortNumber=npsracsPortNumber, ipxFrameBytesRejectedPerSec=ipxFrameBytesRejectedPerSec, iusDroppedPacketsPerSec=iusDroppedPacketsPerSec, dsFastBindsPerSec=dsFastBindsPerSec, fileReplicaSetEntry=fileReplicaSetEntry, udditNotifychangeRecordAvailable=udditNotifychangeRecordAvailable, nciNumOfTLBImportsPerSec=nciNumOfTLBImportsPerSec, sswsKerberosAuthentications=sswsKerberosAuthentications, ntdsDSDirectoryWritesPerSec=ntdsDSDirectoryWritesPerSec, sgHeartbeatsRate=sgHeartbeatsRate, lDiskAvgDiskWriteQueueLength=lDiskAvgDiskWriteQueueLength, rsvpSvcFailedQoSSends=rsvpSvcFailedQoSSends, adn2WorkerProcessRestarts=adn2WorkerProcessRestarts, npsrausAccessChallengesPerSec=npsrausAccessChallengesPerSec, dnsRecursiveTimeOutPerSec=dnsRecursiveTimeOutPerSec, ncltRateOfRecognizedThreadPerSec=ncltRateOfRecognizedThreadPerSec, irusAccessRejects=irusAccessRejects, sms3ValidationAuthFail=sms3ValidationAuthFail, ipV4DatagramsPerSec=ipV4DatagramsPerSec, jodPrivateBytes=jodPrivateBytes, tssTotalAsyncOverflow=tssTotalAsyncOverflow, uddicDeletetModel=uddicDeletetModel, netBEUIPacketsSentPerSec=netBEUIPacketsSentPerSec, tssProtocolBrushCacheReads=tssProtocolBrushCacheReads, directoryServicesEntry=directoryServicesEntry, spxConnectionsOpen=spxConnectionsOpen, ipsi4QuickModeNegotiationsPerSec=ipsi4QuickModeNegotiationsPerSec, siPersistentIndexesL8=siPersistentIndexesL8, ntdsDRAInboundValuesTotalPerSec=ntdsDRAInboundValuesTotalPerSec, rsvpIfNumOfActiveFlows=rsvpIfNumOfActiveFlows, wsTotalAnonymousUsers=wsTotalAnonymousUsers, siPersistentIndexes=siPersistentIndexes, nntpCmdsXHdrCmdsPerSec=nntpCmdsXHdrCmdsPerSec, adnAppl1TransactionsPerSec=adnAppl1TransactionsPerSec, adbiStreamBackupPagesReadPerSec=adbiStreamBackupPagesReadPerSec, npsrausQuarantineDecisionsPerSec=npsrausQuarantineDecisionsPerSec, wsISAPIExtensionRqstsPerSec=wsISAPIExtensionRqstsPerSec, memoryPoolNonpagedKBytes=memoryPoolNonpagedKBytes, iccPacketsReceivedPerSec=iccPacketsReceivedPerSec, serverErrorsGrantedAccess=serverErrorsGrantedAccess, redirWritePacketsPerSec=redirWritePacketsPerSec, printQueueTotalJobsPrinted=printQueueTotalJobsPrinted, terminalServicesSessionEntry=terminalServicesSessionEntry, netPacketsOutboundDiscarded=netPacketsOutboundDiscarded, hrasSuccessCertificationRequests=hrasSuccessCertificationRequests, wmsTotalStreamDenials=wmsTotalStreamDenials, lDiskAvgDiskBytesPerRead=lDiskAvgDiskBytesPerRead, serverWorkItemShortages=serverWorkItemShortages, rsvpIfPATHERRMsgsReceived=rsvpIfPATHERRMsgsReceived, npsrausAccessAcceptsPerSec=npsrausAccessAcceptsPerSec, nntpCmdsXReplicCmds=nntpCmdsXReplicCmds, netBEUIDatagramsPerSec=netBEUIDatagramsPerSec, dhcpSrvReleasesPerSec=dhcpSrvReleasesPerSec, spxPiggybackAckQueuedPerSec=spxPiggybackAckQueuedPerSec, wmppPeakConnectedPlayers=wmppPeakConnectedPlayers, wsTotalUnlockRqsts=wsTotalUnlockRqsts, ntdsDSPercentWritesOther=ntdsDSPercentWritesOther, snfsRPCCallsReceivedPerSec=snfsRPCCallsReceivedPerSec, snfsThreadsWaiting=snfsThreadsWaiting, ftpSvcTotalFilesSent=ftpSvcTotalFilesSent, frcFetchBlocksReceivedInBytes=frcFetchBlocksReceivedInBytes, pDiskAvgDiskSecPerWrite=pDiskAvgDiskSecPerWrite, frsLocalChgOrdersRetired=frsLocalChgOrdersRetired, jodIOReadOperationsPerSec=jodIOReadOperationsPerSec, memoryPoolPagedMBytes=memoryPoolPagedMBytes, ntdsSAMAccountGroupMemEvalPerSec=ntdsSAMAccountGroupMemEvalPerSec, systemProcesses=systemProcesses, wscTotalFlushedURIs=wscTotalFlushedURIs, smo3ValidationAuthFail=smo3ValidationAuthFail, ipsa6ActiveQuickModeSAs=ipsa6ActiveQuickModeSAs, adnApplRequestsTotal=adnApplRequestsTotal, smtpSrvrAvgRetriesPerMsgSent=smtpSrvrAvgRetriesPerMsgSent, wmppPeakStreamingPlayers=wmppPeakStreamingPlayers, smo3TransactionsFlowed=smo3TransactionsFlowed, npsshvShvClientComponentFailSec=npsshvShvClientComponentFailSec, adnAppl1PipelineInstanceCount=adnAppl1PipelineInstanceCount, jodPoolNonpagedBytes=jodPoolNonpagedBytes, dsLDAPUDPOperationsPerSec=dsLDAPUDPOperationsPerSec, giaipFailedNegotiationsPerSec=giaipFailedNegotiationsPerSec, adnApplRequestEventsRaised=adnApplRequestEventsRaised, wmppPeakPlayerAllocBandwidthKbps=wmppPeakPlayerAllocBandwidthKbps, smtpSrvrMsgSendRetries=smtpSrvrMsgSendRetries, npsaucAccessChallenges=npsaucAccessChallenges, telephonyCurrentIncomingCalls=telephonyCurrentIncomingCalls, mfsMaximumThreads=mfsMaximumThreads, wscMetadataCacheHitsPercent=wscMetadataCacheHitsPercent, adnAppl1RequestsFailed=adnAppl1RequestsFailed, snfsV216ReadDirectory=snfsV216ReadDirectory, objectsThreads=objectsThreads, ipV6DatagramsRcvdHeaderErrors=ipV6DatagramsRcvdHeaderErrors, adnAppl2AnonymousRequests=adnAppl2AnonymousRequests, npsaupInvalidAddresses=npsaupInvalidAddresses, ntdsDSPercentWritesFromSAM=ntdsDSPercentWritesFromSAM, systemFileControlOperationPerSec=systemFileControlOperationPerSec, npsaucDuplicateAccessRequests=npsaucDuplicateAccessRequests, terminalServicesSessionTable=terminalServicesSessionTable, rsvpIfResourceControlFailures=rsvpIfResourceControlFailures, pSchedPipeFlowsClosed=pSchedPipeFlowsClosed, ncmGen2HeapSize=ncmGen2HeapSize, frsAuthenticationsInError=frsAuthenticationsInError, iucDroppedPacketsPerSec=iucDroppedPacketsPerSec, frsKBOfStagingSpaceFree=frsKBOfStagingSpaceFree)
mibBuilder.exportSymbols("INFORMANT-ADV", ntdsDSSecurityDescPropRunQueue=ntdsDSSecurityDescPropRunQueue, nntpCmdsQuitCmdsPerSec=nntpCmdsQuitCmdsPerSec, winsSrvrTotalNumConflictsPerSec=winsSrvrTotalNumConflictsPerSec, ipsdPacketsFailedESPValidation=ipsdPacketsFailedESPValidation, aspSessionsTimedOut=aspSessionsTimedOut, sme3CallsNotAuthorizedPerSecond=sme3CallsNotAuthorizedPerSecond, ircsRetransmissionsPerSec=ircsRetransmissionsPerSec, ntdsDRAHighestUSNCommitLowPart=ntdsDRAHighestUSNCommitLowPart, jodWorkingSet=jodWorkingSet, usbTransferErrorsPerSec=usbTransferErrorsPerSec, icmpV6ReceivedParameterProblem=icmpV6ReceivedParameterProblem, httpsugAllRequests=httpsugAllRequests, wsrmProcessTable=wsrmProcessTable, wFPv6OutPacketsDiscardedPerSec=wFPv6OutPacketsDiscardedPerSec, iccAccountingResponses=iccAccountingResponses, adnAppl1CacheAPIHits=adnAppl1CacheAPIHits, sme3ValidationAuthFail=sme3ValidationAuthFail, npsacpPacketsReceived=npsacpPacketsReceived, frsChgOrdersRetriedInstall=frsChgOrdersRetriedInstall, netBIOSFailuresNoListen=netBIOSFailuresNoListen, dsDSClientBindsPerSec=dsDSClientBindsPerSec, ipxFramesPerSec=ipxFramesPerSec, icmpV4RcvdRedirectPerSec=icmpV4RcvdRedirectPerSec, tcpV6ConnectionsPassive=tcpV6ConnectionsPassive, dsSubtreeSearchesPerSec=dsSubtreeSearchesPerSec, icsInvalidRequests=icsInvalidRequests, iusAccessRejectsPerSec=iusAccessRejectsPerSec, frsPacketsSent=frsPacketsSent, nwPacketBurstIOPerSec=nwPacketBurstIOPerSec, iisGlobalTotalAllowedAsyncIOReqs=iisGlobalTotalAllowedAsyncIOReqs, tssPercentUserTime=tssPercentUserTime, ipsi4FailedMainModeNegotPerSec=ipsi4FailedMainModeNegotPerSec, icmpV4RcvdAddressMask=icmpV4RcvdAddressMask, dotNETCLRSecurityEntry=dotNETCLRSecurityEntry, tssOutputWaitForOutBuf=tssOutputWaitForOutBuf, wwfWorkflowsUnloadedPerSec=wwfWorkflowsUnloadedPerSec, iSCSIInitiatorInstanceTable=iSCSIInitiatorInstanceTable, serverContextBlocksQueuedPerSec=serverContextBlocksQueuedPerSec, dsLDAPWritesPerSec=dsLDAPWritesPerSec, wsTotalDeleteRqsts=wsTotalDeleteRqsts, ncmNumBytesInAllHeaps=ncmNumBytesInAllHeaps, cpuDPCsQueuedPerSec=cpuDPCsQueuedPerSec, adnApplCacheAPIHitRatio=adnApplCacheAPIHitRatio, netPacketsReceivedPerSec=netPacketsReceivedPerSec, spxFrameBytesRejectedPerSec=spxFrameBytesRejectedPerSec, ipsdOffloadedBytesReceivedPerSec=ipsdOffloadedBytesReceivedPerSec, usbControllerPCIInterruptsPerSec=usbControllerPCIInterruptsPerSec, jodCreatingProcessID=jodCreatingProcessID, smtpSrvrMsgsRfsdForSize=smtpSrvrMsgsRfsdForSize, dnsIXFRSuccessSent=dnsIXFRSuccessSent, nwPacketsPerSec=nwPacketsPerSec, dotNETCLRDataEntry=dotNETCLRDataEntry, icpInvalidAddressesPerSec=icpInvalidAddressesPerSec, ipsi6PendingQuickModeNegotiation=ipsi6PendingQuickModeNegotiation, aspInMemoryTemplatesCached=aspInMemoryTemplatesCached, ipsa4MainModeSAUseImpersonPerSec=ipsa4MainModeSAUseImpersonPerSec, threadElapsedTime=threadElapsedTime, jodPercentProcessorTime=jodPercentProcessorTime, pSchedPipeAvgPacketsInShaper=pSchedPipeAvgPacketsInShaper, ipV6FragmentsCreatedPerSec=ipV6FragmentsCreatedPerSec, nntpSrvrHistoryMapEntries=nntpSrvrHistoryMapEntries, telephonyIncomingCallsPerSec=telephonyIncomingCallsPerSec, icmpV4RcvdDestUnreachable=icmpV4RcvdDestUnreachable, wsOptionsRqstsPerSec=wsOptionsRqstsPerSec, frcLocalChangeOrdersSent=frcLocalChangeOrdersSent, bnuNetcardSpeedBitsPerSec=bnuNetcardSpeedBitsPerSec, dnsNotifySent=dnsNotifySent, npsausDuplicateAccessRequests=npsausDuplicateAccessRequests, atRTMPPacketsPerSec=atRTMPPacketsPerSec, sgpProcessedDocuments=sgpProcessedDocuments, ntdsSAMResourceGrpMemEvalPerSec=ntdsSAMResourceGrpMemEvalPerSec, bnuIGDSpeedBitsPerSec=bnuIGDSpeedBitsPerSec, adnAppl2EventsRaisedPerSec=adnAppl2EventsRaisedPerSec, dsDRAOutCmpBtwSitesBfrCmpSinceBt=dsDRAOutCmpBtwSitesBfrCmpSinceBt, adnAppl2CacheTotalHitRatio=adnAppl2CacheTotalHitRatio, smtpSrvrPercentRcpntsLocal=smtpSrvrPercentRcpntsLocal, sgpRetriesRate=sgpRetriesRate, sme3ReliableMessagesDropped=sme3ReliableMessagesDropped, siL2MergesNow=siL2MergesNow, siMasterMergesToDate=siMasterMergesToDate, npsracsPacketsReceived=npsracsPacketsReceived, msmqIncomingHTTPTraffic=msmqIncomingHTTPTraffic, adnAppl1RequestsTotal=adnAppl1RequestsTotal, faxsTotalFaxesSentAndReceived=faxsTotalFaxesSentAndReceived, acsPerRsvpSvcNetworkInterfaces=acsPerRsvpSvcNetworkInterfaces, npsaucAccessRejects=npsaucAccessRejects, atAverageTimePerAARPPacket=atAverageTimePerAARPPacket, siL3MergeCount=siL3MergeCount, smtpSrvrAvgRcpntsPerMsgRcvd=smtpSrvrAvgRcpntsPerMsgRcvd, iccUnknownTypePerSec=iccUnknownTypePerSec, rasPortTable=rasPortTable, systemExceptionDispatchesPerSec=systemExceptionDispatchesPerSec, sms3CallsFaulted=sms3CallsFaulted, wmppTotalPlayerBytesSent=wmppTotalPlayerBytesSent, serverPoolPagedKBytes=serverPoolPagedKBytes, adnAppl1CacheTotalTurnoverRate=adnAppl1CacheTotalTurnoverRate, ipsi6ActiveQuickModeSAs=ipsi6ActiveQuickModeSAs, sgpCrawlsInProgress=sgpCrawlsInProgress, dsABBrowsesPerSec=dsABBrowsesPerSec, smtpSrvrCatCatsFailDSConnFail=smtpSrvrCatCatsFailDSConnFail, npsaucAccessChallengesPerSec=npsaucAccessChallengesPerSec, ntdsDRAInboundObjsAppliedPerSec=ntdsDRAInboundObjsAppliedPerSec, frcOutboundChangeOrdersDampened=frcOutboundChangeOrdersDampened, nwConnectNetWare4X=nwConnectNetWare4X, wsCurrentBlkdAsyncIORqsts=wsCurrentBlkdAsyncIORqsts, npsrausRetransmissions=npsrausRetransmissions, ntdsDSThreadsInUse=ntdsDSThreadsInUse, ntdsSimpleBindsPerSec=ntdsSimpleBindsPerSec, netBIOSPacketsPerSec=netBIOSPacketsPerSec, msmqSvcOutgoingMulticastSessions=msmqSvcOutgoingMulticastSessions, dsDRAInFullSyncObjectsRemaining=dsDRAInFullSyncObjectsRemaining, msmqimsInMulticastMessagesPerSec=msmqimsInMulticastMessagesPerSec, npsacsAccountingResponsesPerSec=npsacsAccountingResponsesPerSec, pSchedFlowEntry=pSchedFlowEntry, siL8MergeCount=siL8MergeCount, ncdSQLClntPeakNumPoolConns=ncdSQLClntPeakNumPoolConns, joCurrentPercentProcessorTime=joCurrentPercentProcessorTime, ipxFramesRejectedPerSec=ipxFramesRejectedPerSec, ntdsDRAInboundPropTotalPerSec=ntdsDRAInboundPropTotalPerSec, netBEUIInstance=netBEUIInstance, ntdsDSClientBindsPerSec=ntdsDSClientBindsPerSec, ipxBytesTotalPerSec=ipxBytesTotalPerSec, iupAccessAccepts=iupAccessAccepts, amaInstance=amaInstance, ntdsABSearchesPerSec=ntdsABSearchesPerSec, adbIPerODatabaseReadsAvgLatency=adbIPerODatabaseReadsAvgLatency, ftpServiceTable=ftpServiceTable, wmsTotalLateSends=wmsTotalLateSends, networkInterfaceEntry=networkInterfaceEntry, pDiskDiskWritesPerSec=pDiskDiskWritesPerSec, msmqomsOutMulticastMessagePerSec=msmqomsOutMulticastMessagePerSec, frsChgOrdersMorphed=frsChgOrdersMorphed, netBEUIExpirationsAck=netBEUIExpirationsAck, snfsV316ReadDirectory=snfsV316ReadDirectory, smtpSrvrCatCatsFailSinkRetryErr=smtpSrvrCatCatsFailSinkRetryErr, npsrausUnknownTypePerSec=npsrausUnknownTypePerSec, npsaucPacketsSentPerSec=npsaucPacketsSentPerSec, nntpSrvrMaximumNonAnonymousUsers=nntpSrvrMaximumNonAnonymousUsers, dnsDynamicUpdateNoOpPerSec=dnsDynamicUpdateNoOpPerSec, wwfWorkflowsExecuting=wwfWorkflowsExecuting, cacheDataFlushesPerSec=cacheDataFlushesPerSec, npsrausMalformedPacketsPerSec=npsrausMalformedPacketsPerSec, idxSvcDeferredForIndexing=idxSvcDeferredForIndexing, cpuPercentC1Time=cpuPercentC1Time, securityPerProcessStatisticTable=securityPerProcessStatisticTable, w3svcActiveFlushedEntries=w3svcActiveFlushedEntries, frsPacketsSentInBytes=frsPacketsSentInBytes, wmppCurFileReadRateKbps=wmppCurFileReadRateKbps, icmpV4MessagesSentPerSec=icmpV4MessagesSentPerSec, rasTotalBytesTransmitted=rasTotalBytesTransmitted, uddicDeletepublisherAssertions=uddicDeletepublisherAssertions, rsvpInterfacesEntry=rsvpInterfacesEntry, wsCurrentCALCountForAuthdUsers=wsCurrentCALCountForAuthdUsers, processVirtualBytesPeak=processVirtualBytesPeak, w3svcTotalThreads=w3svcTotalThreads, distributeTransactionCoordinator=distributeTransactionCoordinator, smtpSrvrMsgsRfsdForAddrObjects=smtpSrvrMsgsRfsdForAddrObjects, dhcpSrvPacketsReceivedPerSec=dhcpSrvPacketsReceivedPerSec, ntdsABProxyLookupsPerSec=ntdsABProxyLookupsPerSec, wmssStations=wmssStations, sgpDocumentDeletes=sgpDocumentDeletes, ntdsLDAPClientSessions=ntdsLDAPClientSessions, netBytesReceivedPerSec=netBytesReceivedPerSec, pop3SvcTotalBytesTransmitted=pop3SvcTotalBytesTransmitted, npsaucFullAccessDecisions=npsaucFullAccessDecisions, nntpCmdsArticleCmds=nntpCmdsArticleCmds, pSchedPipeMaxSimultaneousFlows=pSchedPipeMaxSimultaneousFlows, wmppTotalLateReads=wmppTotalLateReads, faxsTotalPages=faxsTotalPages, tssWorkingSet=tssWorkingSet, dfsrfConflictFilesGenerated=dfsrfConflictFilesGenerated, systemFileReadBytesPerSec=systemFileReadBytesPerSec, npsacsNoRecordPerSec=npsacsNoRecordPerSec, icpRetransmissionsPerSec=icpRetransmissionsPerSec, smtpSrvrNDRsGenerated=smtpSrvrNDRsGenerated, dnsDynamicUpdateReceivedPerSec=dnsDynamicUpdateReceivedPerSec, snfsMV300NULLMount=snfsMV300NULLMount, rasTotalBufferOverrunErrors=rasTotalBufferOverrunErrors, siUniqueKeys=siUniqueKeys, sgpFileErrors=sgpFileErrors, rasTotalPercentCompressionOut=rasTotalPercentCompressionOut, dfsrfConflictFilesCleanedUp=dfsrfConflictFilesCleanedUp, faxsFaxesSent=faxsFaxesSent, smsh3DispatchFailuresOverNetTcp=smsh3DispatchFailuresOverNetTcp, dfsrfConflictSpaceInUse=dfsrfConflictSpaceInUse, serverBytesTotalPerSec=serverBytesTotalPerSec, smtpSrvrDNSQueriesTotal=smtpSrvrDNSQueriesTotal, wscKernelUriCacheHitsPerSec=wscKernelUriCacheHitsPerSec, ntdsSubtreeSearchesPerSec=ntdsSubtreeSearchesPerSec, rasTotalBytesReceived=rasTotalBytesReceived, printQueueInstance=printQueueInstance, adnApplFormAuthenticationSuccess=adnApplFormAuthenticationSuccess, siL0MergesFlushesNow=siL0MergesFlushesNow, rsvpIfSendMsgsErrorsNoMemory=rsvpIfSendMsgsErrorsNoMemory, hcapCounters=hcapCounters, ipsi4FailedMainModeNegotiations=ipsi4FailedMainModeNegotiations, ftpSvcTotalConnAttemptsAllInst=ftpSvcTotalConnAttemptsAllInst, memoryCacheBytesPeak=memoryCacheBytesPeak, ircsAccountingResponses=ircsAccountingResponses, memoryPoolPagedAllocs=memoryPoolPagedAllocs, smtpSrvrBadMailMsgsTrigViaEvent=smtpSrvrBadMailMsgsTrigViaEvent, cacheFastReadNotPossiblesPerSec=cacheFastReadNotPossiblesPerSec, adnRequestsRejected=adnRequestsRejected, iucDroppedPackets=iucDroppedPackets, dhcpSrvPacketsExpiredPerSec=dhcpSrvPacketsExpiredPerSec, snfsMV304UnmountAll=snfsMV304UnmountAll, wmsPeakStreamingPlayers=wmsPeakStreamingPlayers, adnAppl2TransactionsPerSec=adnAppl2TransactionsPerSec, spxFailuresNoListen=spxFailuresNoListen, frsThreadsExited=frsThreadsExited, caRequestsPerSec=caRequestsPerSec, tsgFailedResourceAuthoization=tsgFailedResourceAuthoization, icpDroppedPackets=icpDroppedPackets, dsLDAPBindTime=dsLDAPBindTime, ncmGen1PromotedBytesPerSec=ncmGen1PromotedBytesPerSec, mfsMaximumFilesOpen=mfsMaximumFilesOpen, ntdsDSPercentWritesFromNSPI=ntdsDSPercentWritesFromNSPI, threadIDThread=threadIDThread, tcpV6ConnectionFailures=tcpV6ConnectionFailures, ncmNumOfPinnedObjects=ncmNumOfPinnedObjects, adnAppl1RequestsNotFound=adnAppl1RequestsNotFound, w3svcMetadataCacheMisses=w3svcMetadataCacheMisses, spxFramesReceivedPerSec=spxFramesReceivedPerSec, wmsPeakConnectedPlayers=wmsPeakConnectedPlayers, npspeMatchRemoteAccPolicyPerSec=npspeMatchRemoteAccPolicyPerSec, udpV4DatagramsSentPerSec=udpV4DatagramsSentPerSec, frsDSSearches=frsDSSearches, mfsFailedLogons=mfsFailedLogons, wasW3WPEntry=wasW3WPEntry, adnApplCompilationsTotal=adnApplCompilationsTotal, dsATQThreadsTotal=dsATQThreadsTotal, dsDRAOutboundPropertiesPerSec=dsDRAOutboundPropertiesPerSec, dsDSThreadsInUse=dsDSThreadsInUse, atCurrentNonPagedPool=atCurrentNonPagedPool, frsRemoteChgOrdersRetried=frsRemoteChgOrdersRetried, lDiskPercentDiskTime=lDiskPercentDiskTime, pSchedFlowBytesTransmittedPerSec=pSchedFlowBytesTransmittedPerSec, dfsrcRDCSizeOfFilesReceived=dfsrcRDCSizeOfFilesReceived, netBEUIFailuresAdapter=netBEUIFailuresAdapter, netBIOSFailuresAdapter=netBIOSFailuresAdapter, tssInputCompressionRatio=tssInputCompressionRatio, netBEUIWindowSendAverage=netBEUIWindowSendAverage, adnAppl2OutputCacheEntries=adnAppl2OutputCacheEntries, uddicGetbusinessDetail=uddicGetbusinessDetail, adnApplRequestBytesOutTotal=adnApplRequestBytesOutTotal, iccDuplicateAccountingRequests=iccDuplicateAccountingRequests, iusPacketsSentPerSec=iusPacketsSentPerSec, netBEUIDatagramBytesSentPerSec=netBEUIDatagramBytesSentPerSec, ircsDroppedPackets=ircsDroppedPackets, siL7MergesNow=siL7MergesNow, npsacpRequestTimeoutsPerSec=npsacpRequestTimeoutsPerSec, wmsTotalOutDistBytesSent=wmsTotalOutDistBytesSent, netBEUIResourceTimesExhausted=netBEUIResourceTimesExhausted, ipxFrameBytesReceivedPerSec=ipxFrameBytesReceivedPerSec)
mibBuilder.exportSymbols("INFORMANT-ADV", npsaucFullAccessDecisionsPerSec=npsaucFullAccessDecisionsPerSec, ipxConnectionsCanceled=ipxConnectionsCanceled, frcPacketsSentInError=frcPacketsSentInError, npsacsInvalidRequestsPerSec=npsacsInvalidRequestsPerSec, npsAuthenticationClientsTable=npsAuthenticationClientsTable, smtpSrvrBadMailMsgsNoRcpnts=smtpSrvrBadMailMsgsNoRcpnts, udditDeletepublisherAssertions=udditDeletepublisherAssertions, sgStemmersCached=sgStemmersCached, systemSystemCallsPerSec=systemSystemCallsPerSec, ntdsDSPercentReadsFromKCC=ntdsDSPercentReadsFromKCC, siL2MergeSpeedAverage=siL2MergeSpeedAverage, netBIOSFramesRejectedPerSec=netBIOSFramesRejectedPerSec, wscTotalMetadataCached=wscTotalMetadataCached, ftpSvcMaximumConnections=ftpSvcMaximumConnections, swqTotalBytesPerSec=swqTotalBytesPerSec, adnApplReqErrorEventRaised=adnApplReqErrorEventRaised, ipsa6MainModeNegotiationsPerSec=ipsa6MainModeNegotiationsPerSec, iasAccountingClientsTable=iasAccountingClientsTable, redirWriteBytesPagingPerSec=redirWriteBytesPagingPerSec, sms3QueuedMessagesDroppedPerSec=sms3QueuedMessagesDroppedPerSec, acsPerRsvpSvcFailedQoSRequests=acsPerRsvpSvcFailedQoSRequests, nntpCmdsHelpCmds=nntpCmdsHelpCmds, usbInterruptBytesPerSec=usbInterruptBytesPerSec, wFPv4PacketsDiscardedPerSec=wFPv4PacketsDiscardedPerSec, memorySystemDriverResidentMBytes=memorySystemDriverResidentMBytes, ipV4DatagramsSentPerSec=ipV4DatagramsSentPerSec, frsRemoteChgOrdersRetriedRename=frsRemoteChgOrdersRetriedRename, aspRequestsFailedTotal=aspRequestsFailedTotal, rsvpSvcNetworkSockets=rsvpSvcNetworkSockets, dsDRAInValuesTotalPerSec=dsDRAInValuesTotalPerSec, dsDRAPendingReplicationOperation=dsDRAPendingReplicationOperation, frsChgOrdersAborted=frsChgOrdersAborted, tssPageFaultsPerSec=tssPageFaultsPerSec, smo3CallsFailed=smo3CallsFailed, frcFetchRequestsReceived=frcFetchRequestsReceived, dsDSPercentWritesFromDRA=dsDSPercentWritesFromDRA, dnsTotalQueryReceivedPerSec=dnsTotalQueryReceivedPerSec, nbtConnectionBytesSentPerSec=nbtConnectionBytesSentPerSec, adbIODatabaseReadsPerSec=adbIODatabaseReadsPerSec, wFPv6OutConnections=wFPv6OutConnections, smtpSrvrCatRcptsNDRdSinkRecipErr=smtpSrvrCatRcptsNDRdSinkRecipErr, pDiskAvgDiskBytesPerRead=pDiskAvgDiskBytesPerRead, wscKernelURICacheMisses=wscKernelURICacheMisses, sme3CallsFailed=sme3CallsFailed, frsDSBindingsInError=frsDSBindingsInError, netBEUIConnectionsWithRetries=netBEUIConnectionsWithRetries, aspTemplateNotifications=aspTemplateNotifications, wmsPeakOutDistConnections=wmsPeakOutDistConnections, caRequestPolicyModulePrcTimeMs=caRequestPolicyModulePrcTimeMs, ipsi6SuccessQuickModeNegotPerSec=ipsi6SuccessQuickModeNegotPerSec, npsracsUnknownType=npsracsUnknownType, hcapcVersionNegotiationRequests=hcapcVersionNegotiationRequests, sswsNTLMAuthentications=sswsNTLMAuthentications, smtpSrvrMsgsDlvrdPerSec=smtpSrvrMsgsDlvrdPerSec, rsvpIfPolicyControlFailures=rsvpIfPolicyControlFailures, iusPacketsReceived=iusPacketsReceived, iusUnknownTypePerSec=iusUnknownTypePerSec, wsMoveRqstsPerSec=wsMoveRqstsPerSec, faxsMinutesReceiving=faxsMinutesReceiving, memoryStbyCacheCoreKBytes=memoryStbyCacheCoreKBytes, adnAppl2AuditSuccessEventsRaised=adnAppl2AuditSuccessEventsRaised, icsUnknownType=icsUnknownType, memoryPoolNonpagedAllocs=memoryPoolNonpagedAllocs, iccAccountingResponsesPerSec=iccAccountingResponsesPerSec, snfsV309MakeDirectory=snfsV309MakeDirectory, processIOWriteBytesPerSec=processIOWriteBytesPerSec, adnRequestErrorEventsRaised=adnRequestErrorEventsRaised, adn2RequestsCurrent=adn2RequestsCurrent, rasPortBufferOverrunErrors=rasPortBufferOverrunErrors, tssProtocolSvScrnBtmpCachReads=tssProtocolSvScrnBtmpCachReads, tcpV6SegmentsReceivedPerSec=tcpV6SegmentsReceivedPerSec, dsDSDirectorySearchesPerSec=dsDSDirectorySearchesPerSec, npsaupPacketsReceivedPerSec=npsaupPacketsReceivedPerSec, sms3CallsNotAuthorizedPerSec=sms3CallsNotAuthorizedPerSec, is4dTotalPktsFailReplayDetection=is4dTotalPktsFailReplayDetection, memoryPoolPagedKBytes=memoryPoolPagedKBytes, ftpSvcBytesSentPerSec=ftpSvcBytesSentPerSec, nwLinkSPXEntry=nwLinkSPXEntry, npsaccBadAuthenticators=npsaccBadAuthenticators, iucDuplicateAccessRequestsPerSec=iucDuplicateAccessRequestsPerSec, adnAppl1RequestBytesInTotal=adnAppl1RequestBytesInTotal, caFailedRequestsPerSec=caFailedRequestsPerSec, dsSAMMembershipChangesPerSec=dsSAMMembershipChangesPerSec, adnApplRequestsSucceeded=adnApplRequestsSucceeded, ircsAccountingRequestsPerSec=ircsAccountingRequestsPerSec, ntds=ntds, sme3TransactionsFlowed=sme3TransactionsFlowed, adnAppl2RequestExecutionTime=adnAppl2RequestExecutionTime, ipV6=ipV6, frsBytesOfStagingRegenerated=frsBytesOfStagingRegenerated, iucPacketsSent=iucPacketsSent, sms3TransactedOpsCommit=sms3TransactedOpsCommit, adnApplCachePrcntPrcMemLimitUsed=adnApplCachePrcntPrcMemLimitUsed, smtpSrvrTotalMsgsSubmitted=smtpSrvrTotalMsgsSubmitted, nntpCmdsIHaveCmdsPerSec=nntpCmdsIHaveCmdsPerSec, iasAuthenticationProxy=iasAuthenticationProxy, spxInstance=spxInstance, netBEUIDisconnectsRemote=netBEUIDisconnectsRemote, npsaupProbationDecisionsPerSec=npsaupProbationDecisionsPerSec, wsTotalProppatchRqsts=wsTotalProppatchRqsts, lDiskAvgDiskSecPerRead=lDiskAvgDiskSecPerRead, wmusStreamTerminations=wmusStreamTerminations, ipsa4MainModeSAsUseImpersonation=ipsa4MainModeSAsUseImpersonation, dotNETCLRMemoryEntry=dotNETCLRMemoryEntry, wmsTotalOutDistConnections=wmsTotalOutDistConnections, npsSystemHealthValidatorsEntry=npsSystemHealthValidatorsEntry, wsrmpmcManagedCPUPercent=wsrmpmcManagedCPUPercent, tsgFailedConnections=tsgFailedConnections, adnAppl1CacheAPIHitRatio=adnAppl1CacheAPIHitRatio, npsracsDroppedPacketsPerSec=npsracsDroppedPacketsPerSec, jodPageFileBytesPeak=jodPageFileBytesPeak, ntdsDSPercentWritesFromDRA=ntdsDSPercentWritesFromDRA, spxWindowSendMaximum=spxWindowSendMaximum, rsvpServiceEntry=rsvpServiceEntry, ntdsSAMResourceGroupEvalLatency=ntdsSAMResourceGroupEvalLatency, siL6MergeCount=siL6MergeCount, cacheAsyncFastReadsPerSec=cacheAsyncFastReadsPerSec, ircsMalformedPackets=ircsMalformedPackets, atInstance=atInstance, dnsTCPQueryReceived=dnsTCPQueryReceived, irusRequestTimeoutsPerSec=irusRequestTimeoutsPerSec, windowsMediaPublishingPointEntry=windowsMediaPublishingPointEntry, npsrausFullAccessDecisions=npsrausFullAccessDecisions, ncmNumTotalCommittedBytes=ncmNumTotalCommittedBytes, pDiskDiskWriteBytesPerSec=pDiskDiskWriteBytesPerSec, msmqsInstance=msmqsInstance, wasTotalRuntimeStatusQueries=wasTotalRuntimeStatusQueries, ipsdActiveSecurityAssociations=ipsdActiveSecurityAssociations, snfsNFSErrorsV2=snfsNFSErrorsV2, frsLocalChgOrdersRetriedRename=frsLocalChgOrdersRetriedRename, wmppTotalStreamingPlayers=wmppTotalStreamingPlayers, ntdsDRAInboundFullSyncObjsRemain=ntdsDRAInboundFullSyncObjsRemain, adnAppl1SessionsTimedOut=adnAppl1SessionsTimedOut, pSchedPipeEntry=pSchedPipeEntry, iisGlobalCurFilesCached=iisGlobalCurFilesCached, iusAccessChallenges=iusAccessChallenges, smtpSrvrCurrentMsgsInLocalDlvry=smtpSrvrCurrentMsgsInLocalDlvry, adn1RequestsRejected=adn1RequestsRejected, adn1WorkerProcessesRunning=adn1WorkerProcessesRunning, ipsa4SuccessQuickModeNegotiation=ipsa4SuccessQuickModeNegotiation, npsausServerUpTime=npsausServerUpTime, w3svcOutputCacheTotalFlushItems=w3svcOutputCacheTotalFlushItems, dtcForceCommittedTransactions=dtcForceCommittedTransactions, adnApplAnonymousRequestsPerSec=adnApplAnonymousRequestsPerSec, jodHandleCount=jodHandleCount, netBIOSFrameBytesRejectedPerSec=netBIOSFrameBytesRejectedPerSec, npsacsInvalidRequests=npsacsInvalidRequests, system=system, netBEUIDisconnectsLocal=netBEUIDisconnectsLocal, ntdsDSPercentSearchesFromLDAP=ntdsDSPercentSearchesFromLDAP, ntdsDRAInboundBytesTotalPerSec=ntdsDRAInboundBytesTotalPerSec, iasAuthenticationClientsTable=iasAuthenticationClientsTable, icmpV6ReceivedRedirectPerSec=icmpV6ReceivedRedirectPerSec, snfsV200NULL=snfsV200NULL, smsh3RegActiveForNetPipe=smsh3RegActiveForNetPipe, iupBadAuthenticatorsPerSec=iupBadAuthenticatorsPerSec, nntpSrvrArticlesReceivedPerSec=nntpSrvrArticlesReceivedPerSec, iccDuplicateAccountingRqstPerSec=iccDuplicateAccountingRqstPerSec, telephonyActiveTelephones=telephonyActiveTelephones, ncmGen0HeapSize=ncmGen0HeapSize, wscMetadataCacheMisses=wscMetadataCacheMisses, caPendingRequestsPerSec=caPendingRequestsPerSec, netBEUIFramesReSentPerSec=netBEUIFramesReSentPerSec, serverPoolPagedKBytesPeak=serverPoolPagedKBytesPeak, wmppTotalOutDistBytesSent=wmppTotalOutDistBytesSent, memorySystemCodeTotalBytes=memorySystemCodeTotalBytes, ntdsDRAHighestUSNIssuedHighPart=ntdsDRAHighestUSNIssuedHighPart, dnsUDPQueryReceivedPerSec=dnsUDPQueryReceivedPerSec, printQueueNotReadyErrors=printQueueNotReadyErrors, dfsrsvInstance=dfsrsvInstance, wsConnAtmpsPerSec=wsConnAtmpsPerSec, adbIODatabaseWritesPerSec=adbIODatabaseWritesPerSec, ipsa4SuccessMainModeNegotPerSec=ipsa4SuccessMainModeNegotPerSec, w3svcTotalFlushedMetadata=w3svcTotalFlushedMetadata, ncnInstance=ncnInstance, systemThreads=systemThreads, dsDRAOutNotCmpWithinSiteSinceBt=dsDRAOutNotCmpWithinSiteSinceBt, ipsdByteSntInTransportModePerSec=ipsdByteSntInTransportModePerSec, frsDSSearchesInError=frsDSSearchesInError, tssVirtualBytes=tssVirtualBytes, dsDSPercentSearchesOther=dsDSPercentSearchesOther, ipsdOffloadedSecurityAssociation=ipsdOffloadedSecurityAssociation, w3svcTotalMetadataCached=w3svcTotalMetadataCached, caRetrievalsPerSec=caRetrievalsPerSec, ipsa6ActiveExtendedModeSAs=ipsa6ActiveExtendedModeSAs, pDiskPercentIdleTime=pDiskPercentIdleTime, netBIOSPacketsSentPerSec=netBIOSPacketsSentPerSec, ntdsDSNotifyQueueSize=ntdsDSNotifyQueueSize, wsNotFoundErrorsPerSec=wsNotFoundErrorsPerSec, adnAppl2SessionSQLSvrConnTotal=adnAppl2SessionSQLSvrConnTotal, lDiskAvgDiskBytesPerTransfer=lDiskAvgDiskBytesPerTransfer, wscCurrentURIsCached=wscCurrentURIsCached, icmpV4RcvdTimeExceeded=icmpV4RcvdTimeExceeded, dnsTCPResponseSent=dnsTCPResponseSent, icsInvalidRequestsPerSec=icsInvalidRequestsPerSec, processPoolNonpagedBytes=processPoolNonpagedBytes, w3svcFileCacheHits=w3svcFileCacheHits, wscOutputCacheTotalFlushedItems=wscOutputCacheTotalFlushedItems, nntpCmdsLogonAttempts=nntpCmdsLogonAttempts, smo3Calls=smo3Calls, icsMalformedPackets=icsMalformedPackets, serviceModelOperation3Entry=serviceModelOperation3Entry, idxSvcSavedIndexes=idxSvcSavedIndexes, dnsDynamicUpdateNoOperation=dnsDynamicUpdateNoOperation, spxFailuresNotFound=spxFailuresNotFound, netInstance=netInstance, npsacsAccountingResponses=npsacsAccountingResponses, ntdsDRASyncFailOnSchemaMismatch=ntdsDRASyncFailOnSchemaMismatch, adnApplRequestsTimedOut=adnApplRequestsTimedOut, tssOutputAsyncParityError=tssOutputAsyncParityError, cacheLazyWritePagesPerSec=cacheLazyWritePagesPerSec, dnsUDPQueryReceived=dnsUDPQueryReceived, memoryStbyCacheNormPriorityBytes=memoryStbyCacheNormPriorityBytes, sme3ReliableMessagesDropPerSec=sme3ReliableMessagesDropPerSec, tssOutputFrames=tssOutputFrames, browser=browser, ntdsNTLMBindsPerSec=ntdsNTLMBindsPerSec, sgTimeOuts=sgTimeOuts, w3svcUriCacheMissesPerSec=w3svcUriCacheMissesPerSec, adbRecordsConvertedPerSec=adbRecordsConvertedPerSec, sgNotificationSources=sgNotificationSources, npsaucAccessRequests=npsaucAccessRequests, dsDRAInLinkValueUpdRemainInPkt=dsDRAInLinkValueUpdRemainInPkt, npsAccountingServer=npsAccountingServer, wFPv4AllowedClassifiesPerSec=wFPv4AllowedClassifiesPerSec, uddiAPICounts=uddiAPICounts, ipsa4ExtModeSAsThatUsedImperson=ipsa4ExtModeSAsThatUsedImperson, joThisPeriodMSecProcessor=joThisPeriodMSecProcessor, iusAccessRejects=iusAccessRejects, bnuBITSDownloadResponseIntvlMsec=bnuBITSDownloadResponseIntvlMsec, dsDRAOutboundBytesTotalSinceBoot=dsDRAOutboundBytesTotalSinceBoot, dsSAMSuccessUserCreationsPerSec=dsSAMSuccessUserCreationsPerSec, dfsReplicationConnectionsEntry=dfsReplicationConnectionsEntry, tssOutputCompressFlushes=tssOutputCompressFlushes, adbSessionsPercentUsed=adbSessionsPercentUsed, dfsrcRDCCompressSizeOfFilesRcvd=dfsrcRDCCompressSizeOfFilesRcvd, ntdsSAMDisplayInfoQueriesPerSec=ntdsSAMDisplayInfoQueriesPerSec, adbiVersionBucketsAllocated=adbiVersionBucketsAllocated, nclTotalAppdomains=nclTotalAppdomains, dsDRAInCmpBtwSiteBfrCmpSinceBoot=dsDRAInCmpBtwSiteBfrCmpSinceBoot, dnsRecordFlowMemory=dnsRecordFlowMemory, ipsa6MainModeNegotRqstRcvdPerSec=ipsa6MainModeNegotRqstRcvdPerSec, cpuPercentProcessorTime=cpuPercentProcessorTime, memoryModifiedPageListMBytes=memoryModifiedPageListMBytes, smtpSrvrCatMsgsAborted=smtpSrvrCatMsgsAborted, serverPoolPagedPeak=serverPoolPagedPeak, adnApplErrorsUnhandledExecPerSec=adnApplErrorsUnhandledExecPerSec, redirReadPacketsPerSec=redirReadPacketsPerSec, wmusAuthenticationsDenied=wmusAuthenticationsDenied, adnAppl1RequestsInApplQueue=adnAppl1RequestsInApplQueue, w3svcCurrentMetadataCached=w3svcCurrentMetadataCached, wFPv6AllowedClassifiesPerSec=wFPv6AllowedClassifiesPerSec, jodIODataOperationsPerSec=jodIODataOperationsPerSec, ntdsATQThreadsOther=ntdsATQThreadsOther)
mibBuilder.exportSymbols("INFORMANT-ADV", sms3CallsPerSecond=sms3CallsPerSecond, wwfWorkflowsTerminatedPerSec=wwfWorkflowsTerminatedPerSec, adnApplErrorEventsRaisedPerSec=adnApplErrorEventsRaisedPerSec, frcRemoteChangeOrdersReceived=frcRemoteChangeOrdersReceived, ircsInstance=ircsInstance, w3svcTotalFlushedURIs=w3svcTotalFlushedURIs, sms3Instances=sms3Instances, ntdsABMatchesPerSec=ntdsABMatchesPerSec, advDatabaseTableClassesEntry=advDatabaseTableClassesEntry, dsDigestBindsPerSec=dsDigestBindsPerSec, iisGlobalTotalFlushedURIs=iisGlobalTotalFlushedURIs, npsacsMalformedPackets=npsacsMalformedPackets, adnAppl2TransactionsAborted=adnAppl2TransactionsAborted, advanced=advanced, dsLDAPNewConnectionsPerSec=dsLDAPNewConnectionsPerSec, processIOReadOperationsPerSec=processIOReadOperationsPerSec, ircsMalformedPacketsPerSec=ircsMalformedPacketsPerSec, memoryPagesPerSec=memoryPagesPerSec, dfsReplicationConnectionsTable=dfsReplicationConnectionsTable, dnsIXFRRequestSent=dnsIXFRRequestSent, redirServerSessions=redirServerSessions, npsaccMalformedPacketsPerSec=npsaccMalformedPacketsPerSec, iasAccountingServer=iasAccountingServer, adnAppl1Instance=adnAppl1Instance, ncltNumOfTotalRecognizedThread=ncltNumOfTotalRecognizedThread, memoryAvailableBytes=memoryAvailableBytes, tcpV4SegmentsSentPerSec=tcpV4SegmentsSentPerSec, irusPacketsReceivedPerSec=irusPacketsReceivedPerSec, frcJoins=frcJoins, usbHostControllerAsyncIdle=usbHostControllerAsyncIdle, memoryTranPagesRePurposedPerSec=memoryTranPagesRePurposedPerSec, irusUnknownType=irusUnknownType, npsaupBadAuthenticatorsPerSec=npsaupBadAuthenticatorsPerSec, ncjNumOfMethodsJitted=ncjNumOfMethodsJitted, wsTotalCountFailCALRqstsAuthdUsr=wsTotalCountFailCALRqstsAuthdUsr, npsrausPortNumber=npsrausPortNumber, snfsV308Create=snfsV308Create, iupDroppedPacketsPerSec=iupDroppedPacketsPerSec, smo3CallsFaulted=smo3CallsFaulted, iasRemoteAccountingServersTable=iasRemoteAccountingServersTable, ipsdBytesSentInTunnelModePerSec=ipsdBytesSentInTunnelModePerSec, ncrContextBoundObjsAllocPerSec=ncrContextBoundObjsAllocPerSec, sms3TransactedOpsCommitPerSec=sms3TransactedOpsCommitPerSec, smtpSrvrCatMsgsBifurcated=smtpSrvrCatMsgsBifurcated, ncmFinalizationSurvivors=ncmFinalizationSurvivors, wmsCurConnectionRate=wmsCurConnectionRate, adnAppl1AnonymousRequests=adnAppl1AnonymousRequests, netBEUIFailuresNotFound=netBEUIFailuresNotFound, dsDSNameCacheHitRate=dsDSNameCacheHitRate, dsDSNotifyQueueSize=dsDSNotifyQueueSize, aspRequestWaitTime=aspRequestWaitTime, ntdsDSPercentWritesFromLDAP=ntdsDSPercentWritesFromLDAP, frsLocalChgOrdersMorphed=frsLocalChgOrdersMorphed, adnApplOutputCacheTurnoverRate=adnApplOutputCacheTurnoverRate, wmusUDPResendRequests=wmusUDPResendRequests, siCleanWidSets=siCleanWidSets, frsLocalChgOrdersAborted=frsLocalChgOrdersAborted, is4iTotalQuickModeSAs=is4iTotalQuickModeSAs, nclCurrentClassesLoaded=nclCurrentClassesLoaded, udpV6DatagramsNoPortPerSec=udpV6DatagramsNoPortPerSec, wsCurrentCALCountForSSLConns=wsCurrentCALCountForSSLConns, wmusLateReads=wmusLateReads, wFPv4InConnections=wFPv4InConnections, w3svcCurrentFileCacheMemoryUsage=w3svcCurrentFileCacheMemoryUsage, ftpSvcTotalFilesTransferred=ftpSvcTotalFilesTransferred, winsSrvrFailedQueriesPerSec=winsSrvrFailedQueriesPerSec, adbIOLogWritesPerSec=adbIOLogWritesPerSec, wwfWorkflowsCompleted=wwfWorkflowsCompleted, netBEUIWindowSendMaximum=netBEUIWindowSendMaximum, adbDatabasePageFaultStallsPerSec=adbDatabasePageFaultStallsPerSec, udditDeletetModel=udditDeletetModel, vschdDMABufferPreemptedPerSec=vschdDMABufferPreemptedPerSec, smtpSrvrMsgsDlvrdTotal=smtpSrvrMsgsDlvrdTotal, snfsBytesWritten=snfsBytesWritten, wmsCurUDPResendRequestsRate=wmsCurUDPResendRequestsRate, idxSvcFilterBindingTimeMsec=idxSvcFilterBindingTimeMsec, lDiskCurrentDiskQueueLength=lDiskCurrentDiskQueueLength, adnApplRequestExecutionTime=adnApplRequestExecutionTime, udditGetbindingDetail=udditGetbindingDetail, npsausAccessRejectsPerSec=npsausAccessRejectsPerSec, httpsrqMaxQueueItemAge=httpsrqMaxQueueItemAge, icmpV6ReceivedDestUnreachable=icmpV6ReceivedDestUnreachable, dsSAMDomainLocalGrpMemEvalPerSec=dsSAMDomainLocalGrpMemEvalPerSec, wmsTotalConnectedPlayers=wmsTotalConnectedPlayers, msmqimsInMulticastBytesPerSec=msmqimsInMulticastBytesPerSec, smtpSrvrCatCatsFailDSLogonFail=smtpSrvrCatCatsFailDSLogonFail, cacheAsyncDataMapsPerSec=cacheAsyncDataMapsPerSec, nwFileDataOperationsPerSec=nwFileDataOperationsPerSec, threadPriorityCurrent=threadPriorityCurrent, memorySystemCodeResidentBytes=memorySystemCodeResidentBytes, httpsrqInstance=httpsrqInstance, pSchedFlowAveragePktsInNetcard=pSchedFlowAveragePktsInNetcard, netlogonInstance=netlogonInstance, snfsMV302DumpMounts=snfsMV302DumpMounts, snfsV210Remove=snfsV210Remove, memoryModifiedPageListKBytes=memoryModifiedPageListKBytes, uddicGethighWaterMarks=uddicGethighWaterMarks, frsDSPollsWithoutChgs=frsDSPollsWithoutChgs, wscURICacheHitsPercent=wscURICacheHitsPercent, wmssStreams=wmssStreams, wsTotalBlkdBandwidthBytes=wsTotalBlkdBandwidthBytes, logicalDiskTable=logicalDiskTable, iupAccessChallengesPerSec=iupAccessChallengesPerSec, memorySystemCodeResidentMBytes=memorySystemCodeResidentMBytes, adnAppl2CacheAPIHits=adnAppl2CacheAPIHits, npsrausProbationDecisionsPerSec=npsrausProbationDecisionsPerSec, objects=objects, npsshvShvCompliancesPerSec=npsshvShvCompliancesPerSec, wsCopyRqstsPerSec=wsCopyRqstsPerSec, wscKernelURICacheFlushes=wscKernelURICacheFlushes, dsABProxyLookupsPerSec=dsABProxyLookupsPerSec, browserAnnouncementsDomainPerSec=browserAnnouncementsDomainPerSec, rsvpSvcRSVPSessions=rsvpSvcRSVPSessions, winsSrvrGroupConflictsPerSec=winsSrvrGroupConflictsPerSec, pDiskDiskTransfersPerSec=pDiskDiskTransfersPerSec, w3svcActiveRequests=w3svcActiveRequests, threadIDProcess=threadIDProcess, rpcpRPCPerHTTPRequestsPerSecond=rpcpRPCPerHTTPRequestsPerSecond, smsh3ConnsAcceptedOverNetPipe=smsh3ConnsAcceptedOverNetPipe, frsFetchRequestsSent=frsFetchRequestsSent, smtpSrvrPickupDirMsgsRtrvdPerSec=smtpSrvrPickupDirMsgsRtrvdPerSec, adbSessionsInUse=adbSessionsInUse, ncmInstance=ncmInstance, npsracsLastRoundTripTime=npsracsLastRoundTripTime, wwfWorkflowsRunnable=wwfWorkflowsRunnable, nciNumOfTLBExportsPerSec=nciNumOfTLBExportsPerSec, rasTotalFramesTransmittedPerSec=rasTotalFramesTransmittedPerSec, npsausPacketsReceived=npsausPacketsReceived, w3svcURICacheHits=w3svcURICacheHits, spxWindowSendAverage=spxWindowSendAverage, wFPv4InPacketsDiscardedPerSec=wFPv4InPacketsDiscardedPerSec, ntdsDRASyncRequestsSuccessful=ntdsDRASyncRequestsSuccessful, wsMaximumCALCountForSSLConns=wsMaximumCALCountForSSLConns, sgpInstance=sgpInstance, uddicSaveservice=uddicSaveservice, w3svcActiveThreadsCount=w3svcActiveThreadsCount, redirReadOperationsRandomPerSec=redirReadOperationsRandomPerSec, ncjStandardJitFailures=ncjStandardJitFailures, dfsReplicatedFoldersEntry=dfsReplicatedFoldersEntry, printQueueTable=printQueueTable, rasPortFramesTransmittedPerSec=rasPortFramesTransmittedPerSec, adnApplAnonymousRequests=adnApplAnonymousRequests, redirConnectsLanManager20=redirConnectsLanManager20, sgpAccessedFileRate=sgpAccessedFileRate, sms3ReliableSessionsFaulted=sms3ReliableSessionsFaulted, memoryTransPagesRePurposedPerSec=memoryTransPagesRePurposedPerSec, dnsWINSResponseSentPerSec=dnsWINSResponseSentPerSec, rasPortSerialOverrunErrors=rasPortSerialOverrunErrors, dfsrcBytesReceivedPerSecond=dfsrcBytesReceivedPerSecond, iupRetransmissions=iupRetransmissions, rsvpIfPATHERRMsgsSent=rsvpIfPATHERRMsgsSent, netBEUIDatagramsReceivedPerSec=netBEUIDatagramsReceivedPerSec, iucInstance=iucInstance, siL5MergeSpeedAverage=siL5MergeSpeedAverage, nntpSrvrCurrentNonAnonymousUsers=nntpSrvrCurrentNonAnonymousUsers, nntpCmdsLastCmdsPerSec=nntpCmdsLastCmdsPerSec, iisGlobalFileCacheHits=iisGlobalFileCacheHits, wscMetadataCacheHits=wscMetadataCacheHits, dsSAMUserCreationAttemptsPerSec=dsSAMUserCreationAttemptsPerSec, snfsV204Lookup=snfsV204Lookup, cacheCopyReadHitsPercent=cacheCopyReadHitsPercent, wFPv6BlockedBinds=wFPv6BlockedBinds, smtpSrvrCatRcptsInCat=smtpSrvrCatRcptsInCat, usbHostControllerIdle=usbHostControllerIdle, wscURICacheHits=wscURICacheHits, jodIOOtherBytesPerSec=jodIOOtherBytesPerSec, iusPacketsReceivedPerSec=iusPacketsReceivedPerSec, pop3SvcFreeThreads=pop3SvcFreeThreads, dsDSPercentReadsFromDRA=dsDSPercentReadsFromDRA, memoryCacheBytes=memoryCacheBytes, ftpSvcFTPServiceUptime=ftpSvcFTPServiceUptime, ncrInstance=ncrInstance, wmusAllocatedBandwidth=wmusAllocatedBandwidth, udditDiscardauthToken=udditDiscardauthToken, dotNETCLRNetworkingEntry=dotNETCLRNetworkingEntry, icsBadAuthenticators=icsBadAuthenticators, idxSvcMergeProgress=idxSvcMergeProgress, nntpCmdsListCmdsPerSec=nntpCmdsListCmdsPerSec, ntdsDRAOutboundValuesDNsPerSec=ntdsDRAOutboundValuesDNsPerSec, tssOutputTimeouts=tssOutputTimeouts, webServiceTable=webServiceTable, adn1RequestsDisconnected=adn1RequestsDisconnected, hrasSumOfTimePerRequestMs=hrasSumOfTimePerRequestMs, iccNoRecord=iccNoRecord, netBIOSFramesSentPerSec=netBIOSFramesSentPerSec, uddicFindrelatedBusinesses=uddicFindrelatedBusinesses, npsracsUnknownTypePerSec=npsracsUnknownTypePerSec, is4dPendingKeyExchangeOperations=is4dPendingKeyExchangeOperations, wmusPluginEvents=wmusPluginEvents, adnAppl1SessionsAbandoned=adnAppl1SessionsAbandoned, ipsa6FailedMainModeNegotiations=ipsa6FailedMainModeNegotiations, ncrChannels=ncrChannels, pop3SvcTotalBytesReceived=pop3SvcTotalBytesReceived, sswsSchannelSessionCacheEntries=sswsSchannelSessionCacheEntries, adn2ErrorEventsRaised=adn2ErrorEventsRaised, sgpDocumentModifies=sgpDocumentModifies, ntdsPhantomsVisitedPerSec=ntdsPhantomsVisitedPerSec, wscOutputCacheTotalMisses=wscOutputCacheTotalMisses, adnAppl1TransactionsCommitted=adnAppl1TransactionsCommitted, iccDroppedPackets=iccDroppedPackets, dnsUDPMessageMemory=dnsUDPMessageMemory, icpPacketsReceivedPerSec=icpPacketsReceivedPerSec, nntpSrvrArticlesSentPerSec=nntpSrvrArticlesSentPerSec, dfsrfDeletedFilesGenerated=dfsrfDeletedFilesGenerated, sgExtNotificationsReceived=sgExtNotificationsReceived, browserEnumerationsDomainPerSec=browserEnumerationsDomainPerSec, cacheLazyWriteFlushesPerSec=cacheLazyWriteFlushesPerSec, pSchedFlowAveragePktsInShaper=pSchedFlowAveragePktsInShaper, winsSrvrUniqueRenewalsPerSec=winsSrvrUniqueRenewalsPerSec, icmpV6MessagesPerSec=icmpV6MessagesPerSec, irusUnknownTypePerSec=irusUnknownTypePerSec, netBIOSDatagramsSentPerSec=netBIOSDatagramsSentPerSec, iusServerUpTime=iusServerUpTime, adbTableOpensPerSec=adbTableOpensPerSec, nntpSrvrControlMessagesFailed=nntpSrvrControlMessagesFailed, uddicDiscardauthToken=uddicDiscardauthToken, npsrausAccessRejectsPerSec=npsrausAccessRejectsPerSec, atATPRetriesRemote=atATPRetriesRemote, dsDatabaseModifysPerSec=dsDatabaseModifysPerSec, udditGetrelatedCategories=udditGetrelatedCategories, w3svcTotalHTTPRequestsServed=w3svcTotalHTTPRequestsServed, spxConnectionsWithRetries=spxConnectionsWithRetries, npsrausAccessRequestsPerSec=npsrausAccessRequestsPerSec, adbiTableOpensPerSec=adbiTableOpensPerSec, adnRequestExecutionTime=adnRequestExecutionTime, processElapsedTime=processElapsedTime, rsvpIfBlockedRESVs=rsvpIfBlockedRESVs, wsTotalCopyRqsts=wsTotalCopyRqsts, usbPercentTotalBWUsedInterrupt=usbPercentTotalBWUsedInterrupt, wsrmPolicyEntry=wsrmPolicyEntry, icpAccountingResponsesPerSec=icpAccountingResponsesPerSec, netBEUIResourceUsedMaximum=netBEUIResourceUsedMaximum, ncltQueueLengthPerSec=ncltQueueLengthPerSec, webServiceEntry=webServiceEntry, npsshvShvOtherFailuresPerSec=npsshvShvOtherFailuresPerSec, wsrmplInstance=wsrmplInstance, wsCGIRqstsPerSec=wsCGIRqstsPerSec, nntpSrvrArticlesReceived=nntpSrvrArticlesReceived, rasPortPercentCompressionOut=rasPortPercentCompressionOut, ipV4DatagramsRcvdDeliveredPerSec=ipV4DatagramsRcvdDeliveredPerSec, smtpSrvrPickupDirMsgsRtrvdTotal=smtpSrvrPickupDirMsgsRtrvdTotal, serverErrorsAccessPermissions=serverErrorsAccessPermissions, smsh3ConnsAcceptedOverNetTcp=smsh3ConnsAcceptedOverNetTcp, lDiskDiskBytesPerSec=lDiskDiskBytesPerSec, npsaucDroppedPacketsPerSec=npsaucDroppedPacketsPerSec, wmsCurStreamingPlayers=wmsCurStreamingPlayers, uddicSetpublisherAssertions=uddicSetpublisherAssertions, wmsPeakOutDistAllocBandwidthKbps=wmsPeakOutDistAllocBandwidthKbps, rsvpIfReceiveMsgsErrorsBigMsgs=rsvpIfReceiveMsgsErrorsBigMsgs, ntdsLDAPSuccessfulBindsPerSec=ntdsLDAPSuccessfulBindsPerSec, ipsa4SuccExtendModeNegotPerSec=ipsa4SuccExtendModeNegotPerSec, npsacsUnknownTypePerSec=npsacsUnknownTypePerSec, memoryDemandZeroFaultsPerSec=memoryDemandZeroFaultsPerSec, jodPriorityBase=jodPriorityBase)
mibBuilder.exportSymbols("INFORMANT-ADV", npsausAccessAcceptsPerSec=npsausAccessAcceptsPerSec, dhcpSrvDeclinesPerSec=dhcpSrvDeclinesPerSec, npsaucAccessAccepts=npsaucAccessAccepts, networkInterfaceTable=networkInterfaceTable, dns=dns, ipxFailuresNotFound=ipxFailuresNotFound, snfsDRCReplyPresent=snfsDRCReplyPresent, spxFailuresLink=spxFailuresLink, adnAppl1ErrorsTotalPerSec=adnAppl1ErrorsTotalPerSec, netlogonSemaphoreHolders=netlogonSemaphoreHolders, udditFindbinding=udditFindbinding, wsMeasuredAsyncIOBandwidthUsage=wsMeasuredAsyncIOBandwidthUsage, usbAvgBytesPerTransfer=usbAvgBytesPerTransfer, adnAppl1RequestsTimedOut=adnAppl1RequestsTimedOut, tsTotalSessions=tsTotalSessions, adnApplErrorsExecution=adnApplErrorsExecution, ftpSvcTotalFilesReceived=ftpSvcTotalFilesReceived, nntpSrvrMaximumAnonymousUsers=nntpSrvrMaximumAnonymousUsers, udditDeletebinding=udditDeletebinding, memoryCacheMBytes=memoryCacheMBytes, npsacpUnknownType=npsacpUnknownType, nwPacketsTransmittedPerSec=nwPacketsTransmittedPerSec, ncmPercentTimeInGC=ncmPercentTimeInGC, sgpStartedDocuments=sgpStartedDocuments, adnAppl2OutputCacheHitRatio=adnAppl2OutputCacheHitRatio, physicalDiskTable=physicalDiskTable, siL4MergeSpeedLast=siL4MergeSpeedLast, netBEUIFailuresNoListen=netBEUIFailuresNoListen, ntdsABBrowsesPerSec=ntdsABBrowsesPerSec, cacheAsyncMDLReadsPerSec=cacheAsyncMDLReadsPerSec, snfsV203Root=snfsV203Root, npsaucBadAuthenticators=npsaucBadAuthenticators, dnsWINSLookupReceived=dnsWINSLookupReceived, frsUnjoins=frsUnjoins, ntdsDRAOutboundBytesCBSBCSBoot=ntdsDRAOutboundBytesCBSBCSBoot, swqContextBlocksQueuedPerSec=swqContextBlocksQueuedPerSec, msmqitIncomingHTTPMessages=msmqitIncomingHTTPMessages, snfsMV303Unmount=snfsMV303Unmount, aspRequestsQueued=aspRequestsQueued, rasTotalTotalErrors=rasTotalTotalErrors, atZIPPacketsPerSec=atZIPPacketsPerSec, dnsIXFRSuccessReceived=dnsIXFRSuccessReceived, frsRemoteChgOrdersMorphed=frsRemoteChgOrdersMorphed, tssOutputAsyncFrameError=tssOutputAsyncFrameError, dsDSPercentSearchesFromLSA=dsDSPercentSearchesFromLSA, dfsrcInstance=dfsrcInstance, iusServerResetTime=iusServerResetTime, udditGetpublisherAssertions=udditGetpublisherAssertions, wmsCurCacheDownloads=wmsCurCacheDownloads, irusLastRoundTripTime=irusLastRoundTripTime, sgDocumentsFiltered=sgDocumentsFiltered, cacheFastReadsPerSec=cacheFastReadsPerSec, cacheSyncDataMapsPerSec=cacheSyncDataMapsPerSec, netPacketsReceivedUnicastPerSec=netPacketsReceivedUnicastPerSec, adnAppl2CacheTotalTrims=adnAppl2CacheTotalTrims, adnAppl1TransactionsTotal=adnAppl1TransactionsTotal, npsaccDupAccountingRequests=npsaccDupAccountingRequests, icmpV4SentTimestampPerSec=icmpV4SentTimestampPerSec, mfsCurrentSessions=mfsCurrentSessions, iisGlobalBLOBCacheHits=iisGlobalBLOBCacheHits, adnAppl1RequestsExecuting=adnAppl1RequestsExecuting, dsSAMTransitiveMemberEvalPerSec=dsSAMTransitiveMemberEvalPerSec, msmqSessionEntry=msmqSessionEntry, redirConnectsCore=redirConnectsCore, usbHostControllerPerdiodicIdle=usbHostControllerPerdiodicIdle, adnApplEventsRaisedPerSec=adnApplEventsRaisedPerSec, icsDuplicateAccountingRequests=icsDuplicateAccountingRequests, tssPercentProcessorTime=tssPercentProcessorTime, rasPortTimeoutErrors=rasPortTimeoutErrors, npsausAccessAccepts=npsausAccessAccepts, ntdsDRAOutboundBytesCBSACSBoot=ntdsDRAOutboundBytesCBSACSBoot, dfsReplicationServiceVolumeTable=dfsReplicationServiceVolumeTable, siL0MergeFlushCount=siL0MergeFlushCount, nntpCmdsStatCmds=nntpCmdsStatCmds, smtpSrvrCatLDAPSrchCmpltFail=smtpSrvrCatLDAPSrchCmpltFail, adnApplMembershipAuthSuccess=adnApplMembershipAuthSuccess, ipxFramesSentPerSec=ipxFramesSentPerSec, ncmGen0PromotedBytesPerSec=ncmGen0PromotedBytesPerSec, smtpSrvrBytesTotalPerSec=smtpSrvrBytesTotalPerSec, adnAppl2ErrorUnhandledDuringExec=adnAppl2ErrorUnhandledDuringExec, sgFilterObjects=sgFilterObjects, irusPortNumber=irusPortNumber, uddicGetbindingDetail=uddicGetbindingDetail, iusAccessAcceptsPerSec=iusAccessAcceptsPerSec, wwfWorkflowsCompletedPerSec=wwfWorkflowsCompletedPerSec, adn2InfraErrorEventsRaised=adn2InfraErrorEventsRaised, irusAccessAccepts=irusAccessAccepts, adbiTableOpenCachePercentHit=adbiTableOpenCachePercentHit, spxFramesReSentPerSec=spxFramesReSentPerSec, ntdsDRAInboundPropFilteredPerSec=ntdsDRAInboundPropFilteredPerSec, lDiskAvgDiskReadQueueLength=lDiskAvgDiskReadQueueLength, aspRequestsTimedOut=aspRequestsTimedOut, ipsa6SuccessMainModeNegotiations=ipsa6SuccessMainModeNegotiations, sgpURLsInHistory=sgpURLsInHistory, sgPerformanceLevel=sgPerformanceLevel, sms3TransactionsFlowedPerSec=sms3TransactionsFlowedPerSec, swqAvailableWorkItems=swqAvailableWorkItems, rasPortAlignmentErrors=rasPortAlignmentErrors, smtpSrvrBytesSentTotal=smtpSrvrBytesSentTotal, adnAuditSuccessEventsRaised=adnAuditSuccessEventsRaised, netBEUIResourceInstance=netBEUIResourceInstance, wscOutputCacheCurrentItems=wscOutputCacheCurrentItems, dsDRAHighestUSNCommittedHighPart=dsDRAHighestUSNCommittedHighPart, dnsRecursiveQueryFailure=dnsRecursiveQueryFailure, aspRequestExecutionTime=aspRequestExecutionTime, wasHealthPingReplyLatency=wasHealthPingReplyLatency, npsaucDroppedPackets=npsaucDroppedPackets, tssInputWdFrames=tssInputWdFrames, dsDRAInTotalUpdRemainInPkt=dsDRAInTotalUpdRemainInPkt, adnAppl2CompilationsTotal=adnAppl2CompilationsTotal, nclTotalNumOfLoadFailures=nclTotalNumOfLoadFailures, rsvpIfPATHStateBlockTimeouts=rsvpIfPATHStateBlockTimeouts, dnsZoneTransferFailure=dnsZoneTransferFailure, processCreatingProcessID=processCreatingProcessID, smtpSrvrBytesSentPerSec=smtpSrvrBytesSentPerSec, dnsDynamicUpdateWriteToDBPerSec=dnsDynamicUpdateWriteToDBPerSec, rsvpSvcQoSNotifications=rsvpSvcQoSNotifications, npsausFullAccessDecisionsPerSec=npsausFullAccessDecisionsPerSec, ipsi6MainModeNegotiationsPerSec=ipsi6MainModeNegotiationsPerSec, uddicGettModelDetail=uddicGettModelDetail, netBEUIPiggybackAckQueuedPerSec=netBEUIPiggybackAckQueuedPerSec, browserAnnouncementsTotalPerSec=browserAnnouncementsTotalPerSec, ntdsSAMTransitiveMembEvalPerSec=ntdsSAMTransitiveMembEvalPerSec, frsDSPollsWithChgs=frsDSPollsWithChgs, dsDSPercentWritesFromNTDSAPI=dsDSPercentWritesFromNTDSAPI, rasTotalTimeoutErrors=rasTotalTimeoutErrors, rasPortFramesReceivedPerSec=rasPortFramesReceivedPerSec, nclInstance=nclInstance, wFPv4OutPacketsDiscardedPerSec=wFPv4OutPacketsDiscardedPerSec, udditDeletebusiness=udditDeletebusiness, idxSvcNumDocumentsIndexed=idxSvcNumDocumentsIndexed, wsTotalNotFoundErrors=wsTotalNotFoundErrors, ntdsSAMSuccessMachineCreatPerSec=ntdsSAMSuccessMachineCreatPerSec, wsFilesSentPerSec=wsFilesSentPerSec, npsacpPendingRequests=npsacpPendingRequests, cacheSyncCopyReadsPerSec=cacheSyncCopyReadsPerSec, rpcPerHTTPProxyPerServerTable=rpcPerHTTPProxyPerServerTable, adnAppl2Instance=adnAppl2Instance, dnsAXFRRequestSent=dnsAXFRRequestSent, aspTransactionsPending=aspTransactionsPending, frsPacketsSentInError=frsPacketsSentInError, nntpSrvrCurrentConnections=nntpSrvrCurrentConnections, frsRemoteChgOrdersIssued=frsRemoteChgOrdersIssued, wsTotalMethodRqstsPerSec=wsTotalMethodRqstsPerSec, msmqomsOutMulticastBytesPerSec=msmqomsOutMulticastBytesPerSec, wmppPeakOutDistConnections=wmppPeakOutDistConnections, adbtcInstance=adbtcInstance, sms3InstancesCreatedPerSecond=sms3InstancesCreatedPerSecond, ipsi6ActiveMainModeSAs=ipsi6ActiveMainModeSAs, npsaupFullAccessDecisionsPerSec=npsaupFullAccessDecisionsPerSec, smtpSrvrMsgBytesSentTotal=smtpSrvrMsgBytesSentTotal, httpsugBytesTransferredRate=httpsugBytesTransferredRate, iccMalformedPackets=iccMalformedPackets, dnsWINSLookupReceivedPerSec=dnsWINSLookupReceivedPerSec, genericIKEAndAuthIP=genericIKEAndAuthIP, dsDSPercentWritesFromKCC=dsDSPercentWritesFromKCC, dtcActiveTransactions=dtcActiveTransactions, aspDebuggingRequests=aspDebuggingRequests, jodIOOtherOperationsPerSec=jodIOOtherOperationsPerSec, ntdsLDAPActiveThreads=ntdsLDAPActiveThreads, adnApplApplicationLifetimeEvents=adnApplApplicationLifetimeEvents, wmppTotalConnectedPlayers=wmppTotalConnectedPlayers, dtcb3AvgParticipantCmtRspnsTime=dtcb3AvgParticipantCmtRspnsTime, httpsrqArrivalRate=httpsrqArrivalRate, tssTotalProtocolCacheReads=tssTotalProtocolCacheReads, nwServerReconnects=nwServerReconnects, dsDRAOutboundBytesTotalPerSec=dsDRAOutboundBytesTotalPerSec, ipsdByteRcvInTransportModePerSec=ipsdByteRcvInTransportModePerSec, npsracsRequestTimeoutsPerSec=npsracsRequestTimeoutsPerSec, sgpDocumentAdditions=sgpDocumentAdditions, cacheDataMapPinsPerSec=cacheDataMapPinsPerSec, icmpV6SentParameterProblem=icmpV6SentParameterProblem, usbIsochronousBytesPerSec=usbIsochronousBytesPerSec, is4dTotalPktsNotDecrypted=is4dTotalPktsNotDecrypted, dnsAXFRSuccessSent=dnsAXFRSuccessSent, icmpV6SentMembershipQuery=icmpV6SentMembershipQuery, snfsV211Rename=snfsV211Rename, netBIOSDatagramsReceivedPerSec=netBIOSDatagramsReceivedPerSec, snfsV313RemoveDirectory=snfsV313RemoveDirectory, smtpSrvrCatMsgsSubmitted=smtpSrvrCatMsgsSubmitted, caRequestProcessingTimeMs=caRequestProcessingTimeMs, sms3CallsFailed=sms3CallsFailed, w3svcUriCacheHitsPerSec=w3svcUriCacheHitsPerSec, atAARPPacketsPerSec=atAARPPacketsPerSec, adbiPagesConvertedPerSec=adbiPagesConvertedPerSec, adnAppl2ErrorEventsRaised=adnAppl2ErrorEventsRaised, faxsFailedOutgoingConnections=faxsFailedOutgoingConnections, icmpV4SentEchoPerSec=icmpV4SentEchoPerSec, printQueueReferences=printQueueReferences, smtpSrvrCatCatsFailRetryError=smtpSrvrCatCatsFailRetryError, adn1ApplicationsRunning=adn1ApplicationsRunning, certificationAuthorityConnTable=certificationAuthorityConnTable, joCurrentPercentKernelModeTime=joCurrentPercentKernelModeTime, udditGethighWaterMarks=udditGethighWaterMarks, w3svcMetadataCacheMissesPerSec=w3svcMetadataCacheMissesPerSec, iupMalformedPackets=iupMalformedPackets, ntdsDSPercentSearchesFromLSA=ntdsDSPercentSearchesFromLSA, pSchedFlowNonconfPktsXmitd=pSchedFlowNonconfPktsXmitd, sgpGathererPausedFlag=sgpGathererPausedFlag, redirPacketsReceivedPerSec=redirPacketsReceivedPerSec, netPacketsSentNonUnicastPerSec=netPacketsSentNonUnicastPerSec, snfsTotalNFSCallsV2=snfsTotalNFSCallsV2, tssThreadCount=tssThreadCount, nwPacketBurstReadNCPCountPerSec=nwPacketBurstReadNCPCountPerSec, adbDatabasePageEvictionsPerSec=adbDatabasePageEvictionsPerSec, wsBytesSentPerSec=wsBytesSentPerSec, adnApplFormAuthenticationFailure=adnApplFormAuthenticationFailure, vschdInstance=vschdInstance, npsacpAccountingResponses=npsacpAccountingResponses, nntpCmdsModeCmds=nntpCmdsModeCmds, adnApplViewstateMACValidFailure=adnApplViewstateMACValidFailure, ntdsLinkValuesCleanedPerSec=ntdsLinkValuesCleanedPerSec, acsPerRsvpServiceTable=acsPerRsvpServiceTable, httpsugInstance=httpsugInstance, vschdDMABufferCompletedPerSec=vschdDMABufferCompletedPerSec, ipsa6MainModeSAsUseImpersonation=ipsa6MainModeSAsUseImpersonation, tbscCurrentResources=tbscCurrentResources, adnRequestWaitTime=adnRequestWaitTime, dnsRecursiveSendTimeOuts=dnsRecursiveSendTimeOuts, nclAssemblySearchLength=nclAssemblySearchLength, tssPercentPrivilegedTime=tssPercentPrivilegedTime, frsFetchBlocksReceivedInBytes=frsFetchBlocksReceivedInBytes, npsracsDroppedPackets=npsracsDroppedPackets, netBEUIFrameBytesReceivedPerSec=netBEUIFrameBytesReceivedPerSec, cpuC2TransitionsPerSec=cpuC2TransitionsPerSec, snfsV304Access=snfsV304Access, icmpV6ReceivedEchoReplyPerSec=icmpV6ReceivedEchoReplyPerSec, ipsi6SuccessMainModeNegotiations=ipsi6SuccessMainModeNegotiations, tssOutputWdBytes=tssOutputWdBytes, netBIOSFailuresLink=netBIOSFailuresLink, iucDuplicateAccessRequests=iucDuplicateAccessRequests, snsdMessagesAllocated=snsdMessagesAllocated, dfsrfUpdatesDropped=dfsrfUpdatesDropped, is4dTotalBadSPIPackets=is4dTotalBadSPIPackets, adnAppl2FormsAuthenticationFail=adnAppl2FormsAuthenticationFail, sswsSSLServerSideFullHandshakes=sswsSSLServerSideFullHandshakes, netBEUIResourceTable=netBEUIResourceTable, ipsdPlaintextPacketsReceived=ipsdPlaintextPacketsReceived, iusDroppedPackets=iusDroppedPackets, iucPacketsSentPerSec=iucPacketsSentPerSec, joTotalMSecKernelMode=joTotalMSecKernelMode, w3svcOutputCacheCurrentItems=w3svcOutputCacheCurrentItems, dsSAMAccountGroupEvalLatency=dsSAMAccountGroupEvalLatency, dsSAMDisplayInfoQueriesPerSec=dsSAMDisplayInfoQueriesPerSec, npsracsRetransmissions=npsracsRetransmissions, npsacsPacketsReceivedPerSec=npsacsPacketsReceivedPerSec, snfsV310SymbolicLink=snfsV310SymbolicLink, npsrausInstance=npsrausInstance, adbLogThreadsWaiting=adbLogThreadsWaiting, adnAppl1ErrorUnhandledExecPerSec=adnAppl1ErrorUnhandledExecPerSec, ntdsLDAPSearchesPerSec=ntdsLDAPSearchesPerSec, adnAppl2RequestBytesInTotal=adnAppl2RequestBytesInTotal, dnsNbstatMemory=dnsNbstatMemory, wmppCurConnectedPlayers=wmppCurConnectedPlayers)
mibBuilder.exportSymbols("INFORMANT-ADV", sswsSSLClientSideReconHandshakes=sswsSSLClientSideReconHandshakes, memoryStbyCacheCoreBytes=memoryStbyCacheCoreBytes, netBIOSDisconnectsLocal=netBIOSDisconnectsLocal, lDiskDiskReadBytesPerSec=lDiskDiskReadBytesPerSec, smtpSrvrCatRcptsNDRdIllegalAddr=smtpSrvrCatRcptsNDRdIllegalAddr, processVirtualKBytesPeak=processVirtualKBytesPeak, npsaccDroppedPackets=npsaccDroppedPackets, npsausProbationDecisions=npsausProbationDecisions, ntdsDRAInboundValuesDNsPerSec=ntdsDRAInboundValuesDNsPerSec, dnsAXFRResponseReceived=dnsAXFRResponseReceived, spxDisconnectsRemote=spxDisconnectsRemote, dotNETCLRRemotingEntry=dotNETCLRRemotingEntry, ipsa6FailMainModeNegotPerSec=ipsa6FailMainModeNegotPerSec, npsausQuarantineDecisionsPerSec=npsausQuarantineDecisionsPerSec, frsCommunicationTimeouts=frsCommunicationTimeouts, pDiskPercentDiskReadTime=pDiskPercentDiskReadTime, ntdsDRAOutboundBytesNotCWSSBoot=ntdsDRAOutboundBytesNotCWSSBoot, browserMailslotWritesFailed=browserMailslotWritesFailed, ntdsDRAInboundObjectsPerSec=ntdsDRAInboundObjectsPerSec, tssInputTransportErrors=tssInputTransportErrors, memoryCommitLimitMBytes=memoryCommitLimitMBytes, dsDRAInNotCmpWithinSitePerSec=dsDRAInNotCmpWithinSitePerSec, spxFailuresAdapter=spxFailuresAdapter, atAverageTimePerDDPPacket=atAverageTimePerDDPPacket, ipsa6MainModeNegotiationRqstRcvd=ipsa6MainModeNegotiationRqstRcvd, sgExtNotificationsRate=sgExtNotificationsRate, nntpSrvrTotalOutboundConnections=nntpSrvrTotalOutboundConnections, w3svcOutputCacheTotalFlushes=w3svcOutputCacheTotalFlushes, msmqQueueTable=msmqQueueTable, ipSecV4IKE=ipSecV4IKE, wsTotalNonAnonymousUsers=wsTotalNonAnonymousUsers, smtpSrvrMsgsRfsdForMailObjects=smtpSrvrMsgsRfsdForMailObjects, iucAccessRejects=iucAccessRejects, wsMkcolRqstsPerSec=wsMkcolRqstsPerSec, wasTotalHealthPings=wasTotalHealthPings, msmqSvcIPSessions=msmqSvcIPSessions, ipsa6ExtendedModeNegotiations=ipsa6ExtendedModeNegotiations, memoryPercentCommittedBytesInUse=memoryPercentCommittedBytesInUse, acsPerRsvpSvcNetworkSockets=acsPerRsvpSvcNetworkSockets, nntpSrvrTotalNonAnonymousUsers=nntpSrvrTotalNonAnonymousUsers, redirServerReconnects=redirServerReconnects, wscOutputCacheCurrentMemoryUsage=wscOutputCacheCurrentMemoryUsage, dsDSPercentWritesFromLSA=dsDSPercentWritesFromLSA, nwLinkSPXTable=nwLinkSPXTable, wmppTotalAdvertisements=wmppTotalAdvertisements, icpPacketsReceived=icpPacketsReceived, frsBytesOfFilesInstalled=frsBytesOfFilesInstalled, msmqService=msmqService, jodIOReadBytesPerSec=jodIOReadBytesPerSec, tssInputTimeouts=tssInputTimeouts, rasTotalBytesReceivedPerSec=rasTotalBytesReceivedPerSec, ipsa6MainModeNegotiations=ipsa6MainModeNegotiations, pop3SvcConnectionsPerSec=pop3SvcConnectionsPerSec, adn2AuditFailureEventsRaised=adn2AuditFailureEventsRaised, npsacsAccountingRequestsPerSec=npsacsAccountingRequestsPerSec, w3svcTotalFilesCached=w3svcTotalFilesCached, acsPerRsvpSvcQoSEnabledReceivers=acsPerRsvpSvcQoSEnabledReceivers, frsJoinNotificationsSent=frsJoinNotificationsSent, ntdsDSPercentWritesFromNTDSAPI=ntdsDSPercentWritesFromNTDSAPI, irusRetransmissionsPerSec=irusRetransmissionsPerSec, wsTotalMethodRqsts=wsTotalMethodRqsts, wscOutputCacheCurrentHitsPercent=wscOutputCacheCurrentHitsPercent, dsLDAPNewSSLConnectionsPerSec=dsLDAPNewSSLConnectionsPerSec, sgpIncrementalCrawls=sgpIncrementalCrawls, nntpCmdsCheckCmds=nntpCmdsCheckCmds, nntpCmdsGroupCmdsPerSec=nntpCmdsGroupCmdsPerSec, ipxFrameBytesPerSec=ipxFrameBytesPerSec, ncmNumGen0Collections=ncmNumGen0Collections, pSchedPipeFlowsRejected=pSchedPipeFlowsRejected, rasPortTotalErrors=rasPortTotalErrors, wmiObjectsHiPerfValidity=wmiObjectsHiPerfValidity, frsBytesOfStagingGenerated=frsBytesOfStagingGenerated, iupInvalidAddressesPerSec=iupInvalidAddressesPerSec, adnAppl2EventsRaised=adnAppl2EventsRaised, adn1StateServerSessionsTotal=adn1StateServerSessionsTotal, snfsMV102DumpMounts=snfsMV102DumpMounts, icpRetransmissions=icpRetransmissions, dsDSPercentWritesFromLDAP=dsDSPercentWritesFromLDAP, snfsV318FileSystemStat=snfsV318FileSystemStat, memoryPageFaultsPerSec=memoryPageFaultsPerSec, npsrausQuarantineDecisions=npsrausQuarantineDecisions, cpuDPCRate=cpuDPCRate, ocspServerConnectionsTable=ocspServerConnectionsTable, sme3Calls=sme3Calls, adnAppl2DebuggingRequests=adnAppl2DebuggingRequests, tcpV6SegmentsSentPerSec=tcpV6SegmentsSentPerSec, smtpServerTable=smtpServerTable, adnAppl1RequestsNotAuthorized=adnAppl1RequestsNotAuthorized, nclTotalAppdomainsUnloaded=nclTotalAppdomainsUnloaded, pSchedPipeMaxPacketsInSequencer=pSchedPipeMaxPacketsInSequencer, dnsCachingMemory=dnsCachingMemory, cacheCopyReadsPerSec=cacheCopyReadsPerSec, wmusPendingConnections=wmusPendingConnections, nwLinkIPXEntry=nwLinkIPXEntry, icpDroppedPacketsPerSec=icpDroppedPacketsPerSec, spxPacketsSentPerSec=spxPacketsSentPerSec, pDiskDiskReadBytesPerSec=pDiskDiskReadBytesPerSec, rasPortFramesReceived=rasPortFramesReceived, rsvpSvcBytesInQoSNotifications=rsvpSvcBytesInQoSNotifications, smtpSrvrCatAddrLookupsNotFound=smtpSrvrCatAddrLookupsNotFound, npsshvShvServerCompFailurePerSec=npsshvShvServerCompFailurePerSec, uddicSavebinding=uddicSavebinding, pDiskDiskReadsPerSec=pDiskDiskReadsPerSec, wmusActiveLiveUnicastStreams=wmusActiveLiveUnicastStreams, smo3Instance=smo3Instance, dnsZoneTransferSOARequestSent=dnsZoneTransferSOARequestSent, icmpV6SentRouterSolicit=icmpV6SentRouterSolicit, netBEUIConnectionsNoRetries=netBEUIConnectionsNoRetries, sgpAccessedFiles=sgpAccessedFiles, adnAppl2ErrorsDuringExecution=adnAppl2ErrorsDuringExecution, nwBytesTransmittedPerSec=nwBytesTransmittedPerSec, iasAccountingProxy=iasAccountingProxy, usbTable=usbTable, snfsV306Read=snfsV306Read, logicalDiskEntry=logicalDiskEntry, swqReadOperationsPerSec=swqReadOperationsPerSec, iupUnknownType=iupUnknownType, smsh3ProtocolFailuresOverNetTcp=smsh3ProtocolFailuresOverNetTcp, httpsugConnectionAttempts=httpsugConnectionAttempts, siPersistentIndexesL5=siPersistentIndexesL5, cpuPercentInterruptTime=cpuPercentInterruptTime, msmqSvcIPXSessions=msmqSvcIPXSessions, tssTotalProtocolCacheHitRatio=tssTotalProtocolCacheHitRatio, adnApplSessionsActive=adnApplSessionsActive, pSchedFlowPktsDropped=pSchedFlowPktsDropped, aspRequestsNotAuthorized=aspRequestsNotAuthorized, frsRemoteChgOrdersRetriedInstall=frsRemoteChgOrdersRetriedInstall, icmpV6ReceivedRouterAdvert=icmpV6ReceivedRouterAdvert, tssProtocolGlyphCacheHits=tssProtocolGlyphCacheHits, netlogonAverageSemaphoreHoldTime=netlogonAverageSemaphoreHoldTime, spxDatagramsReceivedPerSec=spxDatagramsReceivedPerSec, adnApplSessionsTimedOut=adnApplSessionsTimedOut, frsLocalChgOrdersRetriedGenerate=frsLocalChgOrdersRetriedGenerate, usbPercentTotalBWUseIsoTransfers=usbPercentTotalBWUseIsoTransfers, udditAddpublisherAssertions=udditAddpublisherAssertions, ncmNumInducedGC=ncmNumInducedGC, fileReplicaSetTable=fileReplicaSetTable, nwFileWriteOperationsPerSec=nwFileWriteOperationsPerSec, memoryAvailableMBytes=memoryAvailableMBytes, browserDuplicateMasterAnnounce=browserDuplicateMasterAnnounce, ipxDisconnectsLocal=ipxDisconnectsLocal, uddicDoping=uddicDoping, idxSvcFilterInstance=idxSvcFilterInstance, hrasNPSSuccessfulRequests=hrasNPSSuccessfulRequests, frsAuthentications=frsAuthentications, uddicGetrelatedCategories=uddicGetrelatedCategories, adn1WorkerProcessRestarts=adn1WorkerProcessRestarts, wsrmplSystemManagedCPUPercent=wsrmplSystemManagedCPUPercent, sgNotificationsRate=sgNotificationsRate, spxConnectionsNoRetries=spxConnectionsNoRetries, adbTableOpenCacheMissesPerSec=adbTableOpenCacheMissesPerSec, adnApplInstance=adnApplInstance, nwReadPacketsPerSec=nwReadPacketsPerSec, wscFileCacheHitsPercent=wscFileCacheHitsPercent, dfsrfDeletedBytesGenerated=dfsrfDeletedBytesGenerated, sgpIteratingHistInProgressFlag=sgpIteratingHistInProgressFlag, ncltInstance=ncltInstance, wasTotalWASMessagesReceived=wasTotalWASMessagesReceived, smtpSrvrCatLDAPBinds=smtpSrvrCatLDAPBinds, hcapcPostureValidSuccessResponse=hcapcPostureValidSuccessResponse, tssOutputAsyncOverrun=tssOutputAsyncOverrun, lDiskInstance=lDiskInstance, wasActiveListenerChannels=wasActiveListenerChannels, iucPacketsReceived=iucPacketsReceived, smsh3ProtocolFailuresOverNetPipe=smsh3ProtocolFailuresOverNetPipe, aspTransactionsAborted=aspTransactionsAborted, udpV4DatagramsNoPortPerSec=udpV4DatagramsNoPortPerSec, ipV4DatagramsRcvdAddressErrors=ipV4DatagramsRcvdAddressErrors, wmsCurPlayerSendRateKbps=wmsCurPlayerSendRateKbps, serverSessionsLoggedOff=serverSessionsLoggedOff, nntpSrvrArticlesPosted=nntpSrvrArticlesPosted, npsaupQuarantineDecisionsPerSec=npsaupQuarantineDecisionsPerSec, siWorkItemsCreated=siWorkItemsCreated, frcFetchBlocksSentInBytes=frcFetchBlocksSentInBytes, adbLogWritesPerSec=adbLogWritesPerSec, ipsa4SuccExtendedModeNegotiation=ipsa4SuccExtendedModeNegotiation, icsServerResetTime=icsServerResetTime, ipSecIKEv4=ipSecIKEv4, smtpSrvrCatLDAPPageSrchCmpltFail=smtpSrvrCatLDAPPageSrchCmpltFail, nntpCmdsModeCmdsPerSec=nntpCmdsModeCmdsPerSec, windowsMediaServices=windowsMediaServices, idxSvcRunningQueries=idxSvcRunningQueries, dsDRASyncRequestsSuccessful=dsDRASyncRequestsSuccessful, dsExternalBindsPerSec=dsExternalBindsPerSec, npsrausPacketsReceivedPerSec=npsrausPacketsReceivedPerSec, icmpV6ReceivedTimeExceeded=icmpV6ReceivedTimeExceeded, ircsBadAuthenticatorsPerSec=ircsBadAuthenticatorsPerSec, msmqMessagesInQueue=msmqMessagesInQueue, spxPiggybackAckTimeouts=spxPiggybackAckTimeouts, wsBytesTotalPerSec=wsBytesTotalPerSec, nntpSrvrTotalConnections=nntpSrvrTotalConnections, cpuPercentC2Time=cpuPercentC2Time, threadPercentPrivilegedTime=threadPercentPrivilegedTime, httpsugBytesReceivedRate=httpsugBytesReceivedRate, spxFramesRejectedPerSec=spxFramesRejectedPerSec, ipsa4ActiveQuickModeSAs=ipsa4ActiveQuickModeSAs, usbHostControlAsyncCacheFlush=usbHostControlAsyncCacheFlush, frsRemoteChgOrdersRetriedGenerat=frsRemoteChgOrdersRetriedGenerat, ntdsDigestBindsPerSec=ntdsDigestBindsPerSec, wsTotalConnAtmpsAllInstances=wsTotalConnAtmpsAllInstances, ipxDatagramBytesReceivedPerSec=ipxDatagramBytesReceivedPerSec, smsh3DispatchFailuresOverNetPipe=smsh3DispatchFailuresOverNetPipe, adnAppl2InfraErrEventRaisePerSec=adnAppl2InfraErrEventRaisePerSec, w3svcURICacheFlushes=w3svcURICacheFlushes, wscOutputCacheCurrentFlushedItem=wscOutputCacheCurrentFlushedItem, smtpSrvrDNSQueriesPerSec=smtpSrvrDNSQueriesPerSec, msmqsIncomingMessagesPerSec=msmqsIncomingMessagesPerSec, mfsCurrentNonPagedMemory=mfsCurrentNonPagedMemory, ntdsDRAThdsGetNCChngsHoldSmphr=ntdsDRAThdsGetNCChngsHoldSmphr, iSCSIInitiatorInstanceEntry=iSCSIInitiatorInstanceEntry, w3svcFileCacheFlushes=w3svcFileCacheFlushes, smtpSrvrMsgBytesRcvdPerSec=smtpSrvrMsgBytesRcvdPerSec, netBIOSWindowSendAverage=netBIOSWindowSendAverage, wmsTotalStreamTerminations=wmsTotalStreamTerminations, netBEUIDatagramsSentPerSec=netBEUIDatagramsSentPerSec, mfsCurrentThreads=mfsCurrentThreads, rasTotalFramesReceived=rasTotalFramesReceived, smtpSrvrCatSendersUnresolved=smtpSrvrCatSendersUnresolved, dsATQThreadsOther=dsATQThreadsOther, adnApplSessionSQLSrvrConnTotal=adnApplSessionSQLSrvrConnTotal, aspScriptEnginesCached=aspScriptEnginesCached, iucAccessRequestsPerSec=iucAccessRequestsPerSec, dtcb3ReplayRetryCountPerSec=dtcb3ReplayRetryCountPerSec, dsABClientSessions=dsABClientSessions, dfsrfStagingBytesCleanedUp=dfsrfStagingBytesCleanedUp, npsracsBadAuthenticatorsPerSec=npsracsBadAuthenticatorsPerSec, wasInstance=wasInstance, memoryFreeZeroPageListMBytes=memoryFreeZeroPageListMBytes, wsrmPolicyTable=wsrmPolicyTable, w3svcMetadataCacheHitsPerSec=w3svcMetadataCacheHitsPerSec, adbIPerOLogWritesAverageLatency=adbIPerOLogWritesAverageLatency, telephonyOutgoingCallsPerSec=telephonyOutgoingCallsPerSec, adn2AuditSuccessEventsRaised=adn2AuditSuccessEventsRaised, dfsrfStagingSpaceInUse=dfsrfStagingSpaceInUse, icmpV4MessagesOutboundErrors=icmpV4MessagesOutboundErrors, ntdsATQRequestLatency=ntdsATQRequestLatency, siL3MergeSpeedLast=siL3MergeSpeedLast, pop3SvcSocketsInUse=pop3SvcSocketsInUse, nntpCmdsLogonAttemptsPerSec=nntpCmdsLogonAttemptsPerSec, uddicGetserviceDetail=uddicGetserviceDetail, wwfWorkflowsSuspendedPerSec=wwfWorkflowsSuspendedPerSec, atNBPPacketsPerSec=atNBPPacketsPerSec, wmsTotalLateReads=wmsTotalLateReads, uddicGetassertionStatusReport=uddicGetassertionStatusReport, spxFrameBytesReSentPerSec=spxFrameBytesReSentPerSec, wmsCurOutDistConnections=wmsCurOutDistConnections, processPageFileKBytes=processPageFileKBytes, ipxPacketsReceivedPerSec=ipxPacketsReceivedPerSec, sms3ReliableMessagesDrop=sms3ReliableMessagesDrop, ftpSvcTotalAnonymousUsers=ftpSvcTotalAnonymousUsers, wmusConnectionRate=wmusConnectionRate, cacheAsyncPinReadsPerSec=cacheAsyncPinReadsPerSec, serverPoolNonpagedMBytesPeak=serverPoolNonpagedMBytesPeak, netBIOSConnectionsCanceled=netBIOSConnectionsCanceled)
mibBuilder.exportSymbols("INFORMANT-ADV", dsDSPercentWritesFromNSPI=dsDSPercentWritesFromNSPI, dtcResponseTimeMinimum=dtcResponseTimeMinimum, tcpV4ConnectionsEstablished=tcpV4ConnectionsEstablished, aspDotNETv2=aspDotNETv2, httpsugHeadRequests=httpsugHeadRequests, ncltNumOfCurrentLogicalThread=ncltNumOfCurrentLogicalThread, msmqosOutgoingHTTPMessagesPerSec=msmqosOutgoingHTTPMessagesPerSec, nntpCommandsTable=nntpCommandsTable, threadInstance=threadInstance, npsrausRetransmissionsPerSec=npsrausRetransmissionsPerSec, iasAccountingClientsEntry=iasAccountingClientsEntry, ipsi4FailedQuickModeNegotiations=ipsi4FailedQuickModeNegotiations, netBEUIFramesSentPerSec=netBEUIFramesSentPerSec, aspRequestsNotFound=aspRequestsNotFound, httpsrqCurrentQueueSize=httpsrqCurrentQueueSize, wscMaximumFileCacheMemoryUsage=wscMaximumFileCacheMemoryUsage, tssHandleCount=tssHandleCount, ircsLastRoundTripTime=ircsLastRoundTripTime, processPageFileBytesPeak=processPageFileBytesPeak, serverServerSessions=serverServerSessions, adnApplCacheAPIMisses=adnApplCacheAPIMisses, tssTotalTransportErrors=tssTotalTransportErrors, dsABMatchesPerSec=dsABMatchesPerSec, npsshvShvServerCommnFailPerSec=npsshvShvServerCommnFailPerSec, nwServerDisconnects=nwServerDisconnects, adn1RequestWaitTime=adn1RequestWaitTime, siActiveConnections=siActiveConnections, frsReplicaSetsRemoved=frsReplicaSetsRemoved, ntdsATQThreadsTotal=ntdsATQThreadsTotal, rsvpIfRESVTEARMsgsSent=rsvpIfRESVTEARMsgsSent, npsacsNoRecord=npsacsNoRecord, tssOutputAsyncOverflow=tssOutputAsyncOverflow, icpRequestTimeouts=icpRequestTimeouts, acsPerRsvpSvcTimers=acsPerRsvpSvcTimers, wFPv4OutConnections=wFPv4OutConnections, systemPercentRegistryQuotaInUse=systemPercentRegistryQuotaInUse, wsCurrentCGIRqsts=wsCurrentCGIRqsts, dsDSClientNameTranslationsPerSec=dsDSClientNameTranslationsPerSec, dotNETCLRNetworkingTable=dotNETCLRNetworkingTable, udditDoping=udditDoping, uddicFindbinding=uddicFindbinding, adnAppl1CacheTotalMisses=adnAppl1CacheTotalMisses, aspRequestsDisconnected=aspRequestsDisconnected, jodIODataBytesPerSec=jodIODataBytesPerSec, dsDSPercentSearchesFromKCC=dsDSPercentSearchesFromKCC, memoryCacheMBytesPeak=memoryCacheMBytesPeak, tssTotalProtocolCacheHits=tssTotalProtocolCacheHits, npsacsMalformedPacketsPerSec=npsacsMalformedPacketsPerSec, npsausServerResetTime=npsausServerResetTime, icmpV6ReceivedMembershipReport=icmpV6ReceivedMembershipReport, smtpSrvrBadMailMsgsBadPickupFile=smtpSrvrBadMailMsgsBadPickupFile, wsTotalPropfindRqsts=wsTotalPropfindRqsts, dsABANRPerSec=dsABANRPerSec, jodIOWriteOperationsPerSec=jodIOWriteOperationsPerSec, rsvpIfGeneralFailures=rsvpIfGeneralFailures, rsvpServiceTable=rsvpServiceTable, nntpCommandsEntry=nntpCommandsEntry, sms3Instance=sms3Instance, dsDRAOutCmpBtwSitesAftCmpSinceBt=dsDRAOutCmpBtwSitesAftCmpSinceBt, dfsrfRDCBytesReceived=dfsrfRDCBytesReceived, ipsa6SuccessQuickModeNegotPerSec=ipsa6SuccessQuickModeNegotPerSec, adnAppl2RequestsNotAuthorized=adnAppl2RequestsNotAuthorized, processPercentProcessorTime=processPercentProcessorTime, acsPerRsvpSvcInstance=acsPerRsvpSvcInstance, nntpCmdsXHdrCmds=nntpCmdsXHdrCmds, processPageFaultsPerSec=processPageFaultsPerSec, dsDSSecurityDescPropRuntimeQueue=dsDSSecurityDescPropRuntimeQueue, sgpUniqueDocuments=sgpUniqueDocuments, ncmNumTotalReservedBytes=ncmNumTotalReservedBytes, redirWritesDeniedPerSec=redirWritesDeniedPerSec, siL6MergeSpeedLast=siL6MergeSpeedLast, pSchedPipeBadPacketsXmited=pSchedPipeBadPacketsXmited, wmsCurStreamingHTTPPlayers=wmsCurStreamingHTTPPlayers, iisGlobalBLOBCacheHitsPercent=iisGlobalBLOBCacheHitsPercent, rsvpIfPATHTEARMsgsSent=rsvpIfPATHTEARMsgsSent, icpRequestTimeoutsPerSec=icpRequestTimeoutsPerSec, ncmPromotFinalizationMemoryGen1=ncmPromotFinalizationMemoryGen1, httpServiceUrlGroupsTable=httpServiceUrlGroupsTable, vschdGPUContextSwitchPerSec=vschdGPUContextSwitchPerSec, nwWriteOperationsRandomPerSec=nwWriteOperationsRandomPerSec, pSchedPipeInstance=pSchedPipeInstance, netPacketsPerSec=netPacketsPerSec, dfsrfTotalFilesReceived=dfsrfTotalFilesReceived, iupRequestTimeouts=iupRequestTimeouts, dsATQOutstandingQueuedRequests=dsATQOutstandingQueuedRequests, pDiskCurrentDiskQueueLength=pDiskCurrentDiskQueueLength, authorizationManagerApplTable=authorizationManagerApplTable, atATPResponseTimouts=atATPResponseTimouts, icsNoRecordPerSec=icsNoRecordPerSec, rasPortBytesTransmittedPerSec=rasPortBytesTransmittedPerSec, sgpDocumentsInProgress=sgpDocumentsInProgress, printQueueJobsSpooling=printQueueJobsSpooling, npsaucBadAuthenticatorsPerSec=npsaucBadAuthenticatorsPerSec, ntdsDRAInboundBytesTotalBoot=ntdsDRAInboundBytesTotalBoot, netBEUITable=netBEUITable, ftpSvcMaximumNonAnonymousUsers=ftpSvcMaximumNonAnonymousUsers, ntdsABClientSessions=ntdsABClientSessions, serverPoolNonpagedPeak=serverPoolNonpagedPeak, netPacketsReceivedUnknown=netPacketsReceivedUnknown, browserServerAllocFailedPerSec=browserServerAllocFailedPerSec, nntpSrvrArticlesSent=nntpSrvrArticlesSent, adnAppl1CacheAPIMisses=adnAppl1CacheAPIMisses, irusDroppedPackets=irusDroppedPackets, nntpSrvrCurrentAnonymousUsers=nntpSrvrCurrentAnonymousUsers, adnAppl1SessionsTotal=adnAppl1SessionsTotal, smtpSrvrAvgRcpntsPerMsgSent=smtpSrvrAvgRcpntsPerMsgSent, siL1MergeSpeedLast=siL1MergeSpeedLast, aspRequestBytesOutTotal=aspRequestBytesOutTotal, serverForNFS=serverForNFS, smtpSrvrCatSendersAmbigsAddr=smtpSrvrCatSendersAmbigsAddr, pSchedFlowPktsTransmitted=pSchedFlowPktsTransmitted, icmpV6MessagesReceivedPerSec=icmpV6MessagesReceivedPerSec, dotNETCLRDataTable=dotNETCLRDataTable, ntdsFastBindsPerSec=ntdsFastBindsPerSec, serverPoolNonpagedMBytes=serverPoolNonpagedMBytes, iccPacketsSent=iccPacketsSent, sgAllNotificationsReceived=sgAllNotificationsReceived, ncdSQLClntCurNumConnPools=ncdSQLClntCurNumConnPools, httpServiceCurrentUrisCached=httpServiceCurrentUrisCached, iasAuthenticationClientsEntry=iasAuthenticationClientsEntry, dsSAMPasswordChangesPerSec=dsSAMPasswordChangesPerSec, npsaccInstance=npsaccInstance, processWorkingSetKBytesPeak=processWorkingSetKBytesPeak, iupAccessRequestsPerSec=iupAccessRequestsPerSec, wsTotalLockRqsts=wsTotalLockRqsts, rpcpNumBackEndConnAttemptsPerSec=rpcpNumBackEndConnAttemptsPerSec, msmqQueueEntry=msmqQueueEntry, nntpSrvrHistoryMapEntriesPerSec=nntpSrvrHistoryMapEntriesPerSec, npsRemoteAccountingServersEntry=npsRemoteAccountingServersEntry, is4iAcquireHeapSize=is4iAcquireHeapSize, npsAccountingClientsTable=npsAccountingClientsTable, jodVirtualBytesPeak=jodVirtualBytesPeak, wsProppatchRqstsPerSec=wsProppatchRqstsPerSec, snfsV207WriteCache=snfsV207WriteCache, tbscCurrentContexts=tbscCurrentContexts, aspDotNET=aspDotNET, bnuBITSDownloadBlockSizeBytes=bnuBITSDownloadBlockSizeBytes, npsacpInvalidAddresses=npsacpInvalidAddresses, smo3CallsNotAuthorized=smo3CallsNotAuthorized, dsDRAInPropertiesTotalPerSec=dsDRAInPropertiesTotalPerSec, faxService=faxService, npsracsBadAuthenticators=npsracsBadAuthenticators, npsacpAccountingResponsesPerSec=npsacpAccountingResponsesPerSec, siL7MergeSpeedAverage=siL7MergeSpeedAverage, snfsThreadsTotal=snfsThreadsTotal, siL5MergeCount=siL5MergeCount, adnApplCacheTotalHits=adnApplCacheTotalHits, ircsRequestTimeouts=ircsRequestTimeouts, wFPv6PacketsDiscardedPerSec=wFPv6PacketsDiscardedPerSec, msmqitIncomingHTTPMessagesPerSec=msmqitIncomingHTTPMessagesPerSec, siPersistentIndexesL6=siPersistentIndexesL6, giaipAuthIPMainModeNegotTime=giaipAuthIPMainModeNegotTime, wsMaximumConns=wsMaximumConns, printQueueBytesPrintedPerSec=printQueueBytesPrintedPerSec, netBytesSentPerSec=netBytesSentPerSec, siL5MergeSpeedLast=siL5MergeSpeedLast, redirReadBytesPagingPerSec=redirReadBytesPagingPerSec, ncmLargeObjectHeapSize=ncmLargeObjectHeapSize, w3svcMaximumThreadsCount=w3svcMaximumThreadsCount, npsshvShvNoneFailures=npsshvShvNoneFailures, smtpSrvrETRNMsgsTotal=smtpSrvrETRNMsgsTotal, pDiskAvgDiskQueueLength=pDiskAvgDiskQueueLength, iucAccessChallengesPerSec=iucAccessChallengesPerSec, tssTotalErrors=tssTotalErrors, sms3TransactedOpsInDoubt=sms3TransactedOpsInDoubt, wmsCurOutDistSendRateKbps=wmsCurOutDistSendRateKbps, winsSrvrTotalNumRegsPerSec=winsSrvrTotalNumRegsPerSec, ncrRemoteCallsPerSec=ncrRemoteCallsPerSec, snfsV201GetAttributes=snfsV201GetAttributes, iisGlobalTotalFlushedBLOBs=iisGlobalTotalFlushedBLOBs, memorySystemDriverResidentKBytes=memorySystemDriverResidentKBytes, sme3CallsPerSecond=sme3CallsPerSecond, sms3CallsNotAuthorized=sms3CallsNotAuthorized, adnAppl2RequestsDisconnected=adnAppl2RequestsDisconnected, tssOutputErrors=tssOutputErrors, npsaupDroppedPackets=npsaupDroppedPackets, npsausDroppedPacketsPerSec=npsausDroppedPacketsPerSec, msmqosOutgoingHTTPBytesPerSec=msmqosOutgoingHTTPBytesPerSec, pagingFilePercentUsage=pagingFilePercentUsage, netBEUIConnectionSessionTimeouts=netBEUIConnectionSessionTimeouts, adn1StateServerSessionsAbandoned=adn1StateServerSessionsAbandoned, ipV6DatagramsRcvdDiscarded=ipV6DatagramsRcvdDiscarded, ncsPercentTimeSigAuthenticating=ncsPercentTimeSigAuthenticating, nntpCmdsSearchCmdsPerSec=nntpCmdsSearchCmdsPerSec, serviceModelEndpoint3Entry=serviceModelEndpoint3Entry, sgReasonToBackOff=sgReasonToBackOff, adnAppl2CachePctProcMemLimUsed=adnAppl2CachePctProcMemLimUsed, pDiskPercentDiskTime=pDiskPercentDiskTime, nntpCmdsPostCmds=nntpCmdsPostCmds, adnAppl2CacheAPITurnoverRate=adnAppl2CacheAPITurnoverRate, iccPacketsReceived=iccPacketsReceived, udpV6DatagramsReceivedErrors=udpV6DatagramsReceivedErrors, ipsa6PendingQuickModeNegotiation=ipsa6PendingQuickModeNegotiation, ipsdSecurityAssociationsAdded=ipsdSecurityAssociationsAdded, ipxConnectionsWithRetries=ipxConnectionsWithRetries, ipxPiggybackAckTimeouts=ipxPiggybackAckTimeouts, msmqsIncomingBytes=msmqsIncomingBytes, aspSessionsCurrent=aspSessionsCurrent, pDiskAvgDiskBytesPerWrite=pDiskAvgDiskBytesPerWrite, dsDRAOutObjectsFilteredPerSec=dsDRAOutObjectsFilteredPerSec, smtpSrvrMsgDlvryRetries=smtpSrvrMsgDlvryRetries, irusInstance=irusInstance, ntdsKDCTGSRequests=ntdsKDCTGSRequests, wsTotalSearchRqsts=wsTotalSearchRqsts, adnApplicationRestarts=adnApplicationRestarts, wFPv6InConnectionsAllowedPerSec=wFPv6InConnectionsAllowedPerSec, dsDRAInObjectsPerSec=dsDRAInObjectsPerSec, acsPerRsvpSvcBytesInQoSNotify=acsPerRsvpSvcBytesInQoSNotify, printQueueOutOfPaperErrors=printQueueOutOfPaperErrors, processPercentPrivilegedTime=processPercentPrivilegedTime, rsvpIfInstance=rsvpIfInstance, securityPerProcessStatisticEntry=securityPerProcessStatisticEntry, smsh3UrisUnregisteredForNetTcp=smsh3UrisUnregisteredForNetTcp, atDDPPacketsPerSec=atDDPPacketsPerSec, dsDRAInBytesTotalSinceBoot=dsDRAInBytesTotalSinceBoot, msmqOutMulticastSessionEntry=msmqOutMulticastSessionEntry, npsSystemHealthValidatorsTable=npsSystemHealthValidatorsTable, ipsdSARekeys=ipsdSARekeys, ipSecDriver=ipSecDriver, wmppTotalStreamTerminations=wmppTotalStreamTerminations, winsSrvrSuccessfulReleasesPerSec=winsSrvrSuccessfulReleasesPerSec, tssOutputCompressionRatio=tssOutputCompressionRatio, npsaccAccountingRequestsPerSec=npsaccAccountingRequestsPerSec, wsAnonymousUsersPerSec=wsAnonymousUsersPerSec, irusMalformedPackets=irusMalformedPackets, ipxDatagramsReceivedPerSec=ipxDatagramsReceivedPerSec, nntpSrvrArticlesDeleted=nntpSrvrArticlesDeleted, npsrausPendingRequests=npsrausPendingRequests, nciInstance=nciInstance, dnsSecureUpdateFailure=dnsSecureUpdateFailure, snfsTotalMountCallsV1=snfsTotalMountCallsV1, memorySystemCodeTotalMBytes=memorySystemCodeTotalMBytes, serverSessionsForcedOff=serverSessionsForcedOff, ntdsDSPercentReadsFromNSPI=ntdsDSPercentReadsFromNSPI, windowsMediaUnicastService=windowsMediaUnicastService, snfsTotalNFSCallsV3=snfsTotalNFSCallsV3, nntpSrvrArticlesDeletedPerSec=nntpSrvrArticlesDeletedPerSec, spxFrameBytesSentPerSec=spxFrameBytesSentPerSec, npsshvShvServerComponentFailures=npsshvShvServerComponentFailures, dnsDatabaseNodeMemory=dnsDatabaseNodeMemory, wscFileCacheFlushes=wscFileCacheFlushes, idxSvcInstance=idxSvcInstance, lDiskAvgDiskBytesPerWrite=lDiskAvgDiskBytesPerWrite, sppsCredentialHandles=sppsCredentialHandles, cpuPercentC3Time=cpuPercentC3Time, dnsTotalResponseSent=dnsTotalResponseSent, ipsdPacketsReceivedOverWrongSA=ipsdPacketsReceivedOverWrongSA, spxDisconnectsLocal=spxDisconnectsLocal, nclRateOfAppdomainsUnloaded=nclRateOfAppdomainsUnloaded, ipsi4SuccessMainModeNegotPerSec=ipsi4SuccessMainModeNegotPerSec, w3svcRequestsPerSec=w3svcRequestsPerSec, npsaupBadAuthenticators=npsaupBadAuthenticators, dfsrcRDCNumberOfFilesReceived=dfsrcRDCNumberOfFilesReceived, jodPercentPrivilegedTime=jodPercentPrivilegedTime)
mibBuilder.exportSymbols("INFORMANT-ADV", ftpSvcTotalNonAnonymousUsers=ftpSvcTotalNonAnonymousUsers, adnAppl2CacheAPIEntries=adnAppl2CacheAPIEntries, smtpSrvrCategorizerQueueLength=smtpSrvrCategorizerQueueLength, tssOutputBytes=tssOutputBytes, wsTotalHeadRqsts=wsTotalHeadRqsts, ircsUnknownType=ircsUnknownType, ntdsDSPercentWritesFromXDS=ntdsDSPercentWritesFromXDS, processIOWriteOperationsPerSec=processIOWriteOperationsPerSec, redirWriteBytesCachePerSec=redirWriteBytesCachePerSec, rsvpIfPATHTEARMsgsReceived=rsvpIfPATHTEARMsgsReceived, systemFileWriteOperationsPerSec=systemFileWriteOperationsPerSec, wsNonAnonymousUsersPerSec=wsNonAnonymousUsersPerSec, frsThreadsStarted=frsThreadsStarted, npsaupAccessRequestsPerSec=npsaupAccessRequestsPerSec, wscKernelTotalURIsCached=wscKernelTotalURIsCached, msmqInMulticastSessionTable=msmqInMulticastSessionTable, nclRateOfAssemblies=nclRateOfAssemblies, memorySystemCodeTotalKBytes=memorySystemCodeTotalKBytes, npsaucPacketsReceivedPerSec=npsaucPacketsReceivedPerSec, smo3CallsPerSecond=smo3CallsPerSecond, dfsrfFileInstallsRetried=dfsrfFileInstallsRetried, irusMalformedPacketsPerSec=irusMalformedPacketsPerSec, wFPv4ActiveOutConnections=wFPv4ActiveOutConnections, ncsNumLinkTimeChecks=ncsNumLinkTimeChecks, browserEnumerationsServerPerSec=browserEnumerationsServerPerSec, memoryPagesOutputPerSec=memoryPagesOutputPerSec, ipxFrameBytesSentPerSec=ipxFrameBytesSentPerSec, frsChgOrdersRetriedFetch=frsChgOrdersRetriedFetch, pSchedFlowMaxPktsInSequencer=pSchedFlowMaxPktsInSequencer, ircsUnknownTypePerSec=ircsUnknownTypePerSec, ntdsDRAHighestUSNIssuedLowPart=ntdsDRAHighestUSNIssuedLowPart, adnApplRequestBytesInTotal=adnApplRequestBytesInTotal, msmqSvcSessions=msmqSvcSessions, redirector=redirector, wmusAuthorizationsRefused=wmusAuthorizationsRefused, adn2ApplicationRestarts=adn2ApplicationRestarts, dnsWINSReverseResponseSent=dnsWINSReverseResponseSent, wmppTotalFileBytesRead=wmppTotalFileBytesRead, dsDSPercentReadsFromNSPI=dsDSPercentReadsFromNSPI, npsacsPacketsSent=npsacsPacketsSent, spxConnectionSessionTimeouts=spxConnectionSessionTimeouts, processPoolPagedBytes=processPoolPagedBytes, msmqInstance=msmqInstance, ipsa4MainModeNegotiations=ipsa4MainModeNegotiations, dotNETCLRExceptionsEntry=dotNETCLRExceptionsEntry, icmpV4SentRedirectPerSec=icmpV4SentRedirectPerSec, npsaucProbationDecisions=npsaucProbationDecisions, smtpSrvrCatAddrLookupsPerSec=smtpSrvrCatAddrLookupsPerSec, memorySystemCacheResidentBytes=memorySystemCacheResidentBytes, adnAppl1RequestsSucceeded=adnAppl1RequestsSucceeded, snfsV300NULL=snfsV300NULL, ncmAllocatedBytesPerSec=ncmAllocatedBytesPerSec, dsSAMResourceGroupEvalLatency=dsSAMResourceGroupEvalLatency, netCurrentBandwidth=netCurrentBandwidth, serverBlockingRequestsRejected=serverBlockingRequestsRejected, memoryStbyCacheReserveMBytes=memoryStbyCacheReserveMBytes, npsaucPacketsReceived=npsaucPacketsReceived, iisGlobalTotalFilesCached=iisGlobalTotalFilesCached, siIndexSize=siIndexSize, atPacketsInPerSec=atPacketsInPerSec, tssInputCompressFlushes=tssInputCompressFlushes, dsATQRequestLatency=dsATQRequestLatency, npsshvShvClientComponentFailures=npsshvShvClientComponentFailures, adn1StateServerSessionsTimedOut=adn1StateServerSessionsTimedOut, aspTemplatesCached=aspTemplatesCached, dotNETCLRInteropEntry=dotNETCLRInteropEntry, memorySystemDriverTotalMBytes=memorySystemDriverTotalMBytes, systemContextSwitchesPerSec=systemContextSwitchesPerSec, frsLocalChgOrdersIssued=frsLocalChgOrdersIssued, wmsCurUDPResendsSentRate=wmsCurUDPResendsSentRate, frcJoinNotificationsSent=frcJoinNotificationsSent, icpMalformedPacketsPerSec=icpMalformedPacketsPerSec, ipV4FragmentedDatagramsPerSec=ipV4FragmentedDatagramsPerSec, rasPortCRCErrors=rasPortCRCErrors, netBIOSBytesTotalPerSec=netBIOSBytesTotalPerSec, processIOOtherOperationsPerSec=processIOOtherOperationsPerSec, mfsCurrentQueueLength=mfsCurrentQueueLength, ntdsATQOutstandingQueuedRequests=ntdsATQOutstandingQueuedRequests, msmqitIncomingHTTPBytes=msmqitIncomingHTTPBytes, snfsTotalRPCCallsReceived=snfsTotalRPCCallsReceived, ipV6DatagramsRcvdPerSec=ipV6DatagramsRcvdPerSec, tsInactiveSessions=tsInactiveSessions, vschdPercentGPUBusy=vschdPercentGPUBusy, frcAuthenticationsInError=frcAuthenticationsInError, dnsTCPResponseSentPerSec=dnsTCPResponseSentPerSec, dnsRecursiveQueries=dnsRecursiveQueries, adbiLogGenCheckpointDepth=adbiLogGenCheckpointDepth, dsDSPercentReadsOther=dsDSPercentReadsOther, smtpSrvrMsgsSentTotal=smtpSrvrMsgsSentTotal, rpcPerHTTPProxy=rpcPerHTTPProxy, adnApplCachePrcntMchneMemLimUsed=adnApplCachePrcntMchneMemLimUsed, iusAccessChallengesPerSec=iusAccessChallengesPerSec, sms3QueuedPoisonMessages=sms3QueuedPoisonMessages, siL8MergeSpeedLast=siL8MergeSpeedLast, ipV6DatagramsSentPerSec=ipV6DatagramsSentPerSec, rasTotalTotalErrorsPerSec=rasTotalTotalErrorsPerSec, redirWriteBytesNonPagingPerSec=redirWriteBytesNonPagingPerSec, npsaupAccessChallengesPerSec=npsaupAccessChallengesPerSec, frsStagingFilesFetched=frsStagingFilesFetched, smtpSrvrInboundConnsCurrent=smtpSrvrInboundConnsCurrent, npsaucMalformedPacketsPerSec=npsaucMalformedPacketsPerSec, sgpRetries=sgpRetries, ipsi4MainModeNegotiationsPerSec=ipsi4MainModeNegotiationsPerSec, processVirtualBytes=processVirtualBytes, jobObjectEntry=jobObjectEntry, snsdMessagesDeleted=snsdMessagesDeleted, memoryCommittedBytes=memoryCommittedBytes, iasAuthenticationServer=iasAuthenticationServer, siL3MergeSpeedAverage=siL3MergeSpeedAverage, dotNETCLRSecurityTable=dotNETCLRSecurityTable, usbHostControlPeriodicCacheFlush=usbHostControlPeriodicCacheFlush, netBEUIFrameBytesRejectedPerSec=netBEUIFrameBytesRejectedPerSec, swqTotalOperationsPerSec=swqTotalOperationsPerSec, wmsCurStreamingMMSPlayers=wmsCurStreamingMMSPlayers, bnuEstBWAvailRemoteBitsPerSec=bnuEstBWAvailRemoteBitsPerSec, ipsa6SuccessQuickModeNegotiation=ipsa6SuccessQuickModeNegotiation, ipsa4ActiveMainModeSAs=ipsa4ActiveMainModeSAs, ntdsXDSClientSessions=ntdsXDSClientSessions, frsChgOrdersRetriedRename=frsChgOrdersRetriedRename, npsaupAccessRequests=npsaupAccessRequests, server=server, smtpSrvrCatLDAPBindFail=smtpSrvrCatLDAPBindFail, tssTotalWdBytes=tssTotalWdBytes, cacInstance=cacInstance, ipsa6SuccExtendedModeNegotiation=ipsa6SuccExtendedModeNegotiation, telephonyLines=telephonyLines, smsh3ConnsDispatchedOverNetPipe=smsh3ConnsDispatchedOverNetPipe, netBEUIFrameBytesReSentPerSec=netBEUIFrameBytesReSentPerSec, udditGetbusinessDetailExt=udditGetbusinessDetailExt, adbDatabasePageFaultsPerSec=adbDatabasePageFaultsPerSec, smtpSrvrCatCatsInProgress=smtpSrvrCatCatsInProgress, npsausUnknownTypePerSec=npsausUnknownTypePerSec, iucAccessChallenges=iucAccessChallenges, dsLDAPClosedConnectionsPerSec=dsLDAPClosedConnectionsPerSec, memoryTranFaultsPerSec=memoryTranFaultsPerSec, rsvpIfRESVStateBlockTimeouts=rsvpIfRESVStateBlockTimeouts, ipxWindowSendMaximum=ipxWindowSendMaximum, mfsMaximumQueueLength=mfsMaximumQueueLength, npsAuthenticationServer=npsAuthenticationServer, rsvpIfRESVCONFIRMMsgsReceived=rsvpIfRESVCONFIRMMsgsReceived, pDiskAvgDiskSecPerRead=pDiskAvgDiskSecPerRead, internetInformationServiceGlobal=internetInformationServiceGlobal, wsCurrentConns=wsCurrentConns, npsaupPacketsReceived=npsaupPacketsReceived, sms3CallsFailedPerSecond=sms3CallsFailedPerSecond, npspePendingRequests=npspePendingRequests, spxFramesSentPerSec=spxFramesSentPerSec, iusBadAuthenticatorsPerSec=iusBadAuthenticatorsPerSec, iucAccessAcceptsPerSec=iucAccessAcceptsPerSec, wscOutputCacheTotalFlushes=wscOutputCacheTotalFlushes, rsvpIfRESVCONFIRMMsgsSent=rsvpIfRESVCONFIRMMsgsSent, wFPv4InConnectionsBlockedPerSec=wFPv4InConnectionsBlockedPerSec, frcBindings=frcBindings, ncmPromotedMemoryFromGen1=ncmPromotedMemoryFromGen1, wmusSchedulingRate=wmusSchedulingRate, ntdsSAMNonTransMemEvalPerSec=ntdsSAMNonTransMemEvalPerSec, dfsrfFileInstallsSucceeded=dfsrfFileInstallsSucceeded, nwConnectNetWare3X=nwConnectNetWare3X, joInstance=joInstance, iisGlobalTotalFlushedFiles=iisGlobalTotalFlushedFiles, spxDatagramsSentPerSec=spxDatagramsSentPerSec, smtpSrvrMsgBytesSentPerSec=smtpSrvrMsgBytesSentPerSec, tbsCounters=tbsCounters, dfsrfDeletedSpaceInUse=dfsrfDeletedSpaceInUse, nntpCmdsNewnewsCmdsPerSec=nntpCmdsNewnewsCmdsPerSec, dsDSServerBindsPerSec=dsDSServerBindsPerSec, adnAppl2RequestsRejected=adnAppl2RequestsRejected, cacheDataFlushPagesPerSec=cacheDataFlushPagesPerSec, ntdsDRAOutboundBytesTotalBoot=ntdsDRAOutboundBytesTotalBoot, rasPortPercentCompressionIn=rasPortPercentCompressionIn, frsStagingFilesGeneratedWithErr=frsStagingFilesGeneratedWithErr, wmsCurConnectionQueueLength=wmsCurConnectionQueueLength, smtpSrvrMsgsRcvdTotal=smtpSrvrMsgsRcvdTotal, windowsMediaPublishingPointTable=windowsMediaPublishingPointTable, wmusAuthorizationRequests=wmusAuthorizationRequests, npsaccDroppedPacketsPerSec=npsaccDroppedPacketsPerSec, pop3SvcMailboxesInTranState=pop3SvcMailboxesInTranState, siQueriesFailed=siQueriesFailed, icsPacketsReceived=icsPacketsReceived, rasTotalCRCErrors=rasTotalCRCErrors, nclRateOfLoadFailures=nclRateOfLoadFailures, threadContextSwitchesPerSec=threadContextSwitchesPerSec, wmusActiveTCPStreams=wmusActiveTCPStreams, serviceModelOperation3Table=serviceModelOperation3Table, ipsi4PendingMainModeNegotiations=ipsi4PendingMainModeNegotiations, is4dTotalBytesReceivedInTunnels=is4dTotalBytesReceivedInTunnels, siPersistentIndexesL4=siPersistentIndexesL4, adbLogRecordStallsPerSec=adbLogRecordStallsPerSec, ipV6DatagramsOutboundNoRoute=ipV6DatagramsOutboundNoRoute, vschdPresentPerSec=vschdPresentPerSec, nntpCmdsInstance=nntpCmdsInstance, dsSAMGlobalGroupMembEvalPerSec=dsSAMGlobalGroupMembEvalPerSec, ntdsLDAPBindTime=ntdsLDAPBindTime, mfsDataTransmittedPerSec=mfsDataTransmittedPerSec, nntpSrvrTotalOutboundConnsFailed=nntpSrvrTotalOutboundConnsFailed, npsrausProbationDecisions=npsrausProbationDecisions, processInstance=processInstance, tssProtocolBitmapCacheHitRatio=tssProtocolBitmapCacheHitRatio, dfsrfDeletedFilesCleanedUp=dfsrfDeletedFilesCleanedUp, netBIOSDatagramBytesSentPerSec=netBIOSDatagramBytesSentPerSec, siMasterMergeProgress=siMasterMergeProgress, npsshvShvClientCommFailures=npsshvShvClientCommFailures, netBIOSFrameBytesPerSec=netBIOSFrameBytesPerSec, idxSvcFilterTotalIdxSpeedMBPerHr=idxSvcFilterTotalIdxSpeedMBPerHr, frcInstance=frcInstance, icmpV6SentRouterAdvert=icmpV6SentRouterAdvert, uddicGetauthToken=uddicGetauthToken, pSchedFlowAveragePktsInSequencer=pSchedFlowAveragePktsInSequencer, ipxDatagramsPerSec=ipxDatagramsPerSec, frsFilesInstalledWithError=frsFilesInstalledWithError, snsdMessagesEnumerated=snsdMessagesEnumerated, adbLogBytesWritePerSec=adbLogBytesWritePerSec, ncmNumOfSinkBlocksInUse=ncmNumOfSinkBlocksInUse, httpServiceRequestQueuesEntry=httpServiceRequestQueuesEntry, httpServiceUriCacheMisses=httpServiceUriCacheMisses, adn2RequestsDisconnected=adn2RequestsDisconnected, iisGlobalTotalRejectedAsyncIOReq=iisGlobalTotalRejectedAsyncIOReq, iupAccessRejectsPerSec=iupAccessRejectsPerSec, ftpServiceEntry=ftpServiceEntry, usbBulkBytesPerSec=usbBulkBytesPerSec, processPoolPagedKBytes=processPoolPagedKBytes, wscURICacheMisses=wscURICacheMisses, ipxPacketsPerSec=ipxPacketsPerSec, ntdsDSClientNameTranslatePerSec=ntdsDSClientNameTranslatePerSec, ipxExpirationsAck=ipxExpirationsAck, npsacpBadAuthenticators=npsacpBadAuthenticators, siL0MergeFlushSpeedAverage=siL0MergeFlushSpeedAverage, npsaupAccessRejectsPerSec=npsaupAccessRejectsPerSec, adbPagesConverted=adbPagesConverted, smtpSrvrCatAddrLookupCmplt=smtpSrvrCatAddrLookupCmplt, pDiskSplitIOPerSec=pDiskSplitIOPerSec, dfsrcCompressedSizeOfFilesRcvd=dfsrcCompressedSizeOfFilesRcvd, snfsV202SetAttributes=snfsV202SetAttributes, serverWorkQueuesTable=serverWorkQueuesTable, dtcInDoubtTransactions=dtcInDoubtTransactions, smtpSrvrCatLDAPConnFail=smtpSrvrCatLDAPConnFail, frcJoinNotificationsReceived=frcJoinNotificationsReceived, dsDRAHighestUSNCommittedLowPart=dsDRAHighestUSNCommittedLowPart, npsausInvalidRequests=npsausInvalidRequests, dsSimpleBindsPerSec=dsSimpleBindsPerSec, dsSAMSuccCmpCrtPerSecInclAllRqst=dsSAMSuccCmpCrtPerSecInclAllRqst, wmsPeakOutDistSendRateKbps=wmsPeakOutDistSendRateKbps, ipV4FragmentsReassembledPerSec=ipV4FragmentsReassembledPerSec, wmusAggregateReadRate=wmusAggregateReadRate, adbIPerOLogReadsPerSec=adbIPerOLogReadsPerSec, snfsV321Commit=snfsV321Commit, dsDSPercentWritesFromSAM=dsDSPercentWritesFromSAM, sgpFilteringDocuments=sgpFilteringDocuments, httpServiceUriCacheHits=httpServiceUriCacheHits, snfsMOUNTErrorsV3=snfsMOUNTErrorsV3, joCurrentPercentUserModeTime=joCurrentPercentUserModeTime, smtpSrvrCatCatsFailOutOfMemory=smtpSrvrCatCatsFailOutOfMemory, printQueueMaxJobsSpooling=printQueueMaxJobsSpooling, adnAppl1OutputCacheEntries=adnAppl1OutputCacheEntries)
mibBuilder.exportSymbols("INFORMANT-ADV", sme3CallsOutstanding=sme3CallsOutstanding, frsPacketsReceived=frsPacketsReceived, wsTotalBytesTransfered=wsTotalBytesTransfered, adnAppl2CacheAPIMisses=adnAppl2CacheAPIMisses, adnApplErrorsPreprocessing=adnApplErrorsPreprocessing, windowsWorkflowFoundationEntry=windowsWorkflowFoundationEntry, uddiAPITimes=uddiAPITimes, redirReadBytesNonPagingPerSec=redirReadBytesNonPagingPerSec, netBIOSFailuresResourceLocal=netBIOSFailuresResourceLocal, msmqimsInstance=msmqimsInstance, cache=cache, adnAppl2RequestsNotFound=adnAppl2RequestsNotFound, dsABPropertyReadsPerSec=dsABPropertyReadsPerSec, tssProtocolSvScrnBtmpCachHtRatio=tssProtocolSvScrnBtmpCachHtRatio, ntdsDSPercentSearchesOther=ntdsDSPercentSearchesOther, smtpNTFSStoreDriverTable=smtpNTFSStoreDriverTable, uddicDeletebinding=uddicDeletebinding, wmiObjectsHiPerfClasses=wmiObjectsHiPerfClasses, dsDRASyncRequestsMade=dsDRASyncRequestsMade, wsTotalISAPIExtensionRqsts=wsTotalISAPIExtensionRqsts, adbIODatabaseReadsAverageLatency=adbIODatabaseReadsAverageLatency, fileReplicaConnEntry=fileReplicaConnEntry, npsaccPacketsSentPerSec=npsaccPacketsSentPerSec, rsvpIfNumOfIncomingMsgsDropped=rsvpIfNumOfIncomingMsgsDropped, rsvpSvcQoSClients=rsvpSvcQoSClients, dotNETCLRExceptionsTable=dotNETCLRExceptionsTable, jodInstance=jodInstance, netBEUIFailuresResourceRemote=netBEUIFailuresResourceRemote, adnApplRequestsInApplQueue=adnApplRequestsInApplQueue, ntdsATQThreadsLDAP=ntdsATQThreadsLDAP, wmusAggregateSendRate=wmusAggregateSendRate, is4iTotalSoftAssociations=is4iTotalSoftAssociations, securitySystemWideStatistics=securitySystemWideStatistics, macFileServer=macFileServer, iisGlobalFileCacheMisses=iisGlobalFileCacheMisses, ipV4DatagramsRcvdHeaderErrors=ipV4DatagramsRcvdHeaderErrors, icmpV6SentPacketTooBig=icmpV6SentPacketTooBig, snfsDRCHits=snfsDRCHits, snfsAnonymousAccesses=snfsAnonymousAccesses, spxFrameBytesPerSec=spxFrameBytesPerSec, ntdsSAMUniversalGrpMemEvalPerSec=ntdsSAMUniversalGrpMemEvalPerSec, nntpCmdsArticleCmdsPerSec=nntpCmdsArticleCmdsPerSec, lDiskAvgDiskSecPerTransfer=lDiskAvgDiskSecPerTransfer, faxsFailedReceptions=faxsFailedReceptions, smtpSrvrNumberOfMailFilesOpen=smtpSrvrNumberOfMailFilesOpen, frsDSObjects=frsDSObjects, appleTalkEntry=appleTalkEntry, siMasterMergesNow=siMasterMergesNow, adnApplCacheAPIHits=adnApplCacheAPIHits, threadTable=threadTable, serverErrorsLogon=serverErrorsLogon, pSchedPipeMaxPacketsInNetcard=pSchedPipeMaxPacketsInNetcard, dnsSecureUpdateReceivedPerSec=dnsSecureUpdateReceivedPerSec, terminalServices=terminalServices, smo3CallsDuration=smo3CallsDuration, siShadowMergeLevelsThreshold=siShadowMergeLevelsThreshold, snfsBytesWrittenPerSec=snfsBytesWrittenPerSec, dsDSPercentSearchesFromNSPI=dsDSPercentSearchesFromNSPI, sme3CallsDuration=sme3CallsDuration, swqActiveThreads=swqActiveThreads, npsaucMalformedPackets=npsaucMalformedPackets, wscKernelCurrentURIsCached=wscKernelCurrentURIsCached, dsInstance=dsInstance, iisGlobalFileCacheFlushes=iisGlobalFileCacheFlushes, netBIOSFramesReSentPerSec=netBIOSFramesReSentPerSec, smtpSrvrRouteTableLookupsTotal=smtpSrvrRouteTableLookupsTotal, dsDSPercentReadsFromSAM=dsDSPercentReadsFromSAM, wsTotalBytesSent=wsTotalBytesSent, aspDotNETApplicationsV1Table=aspDotNETApplicationsV1Table, sgpRecoveryInProgressFlag=sgpRecoveryInProgressFlag, adn2StateServerSessionsTotal=adn2StateServerSessionsTotal, smo3TransactionsFlowedPerSecond=smo3TransactionsFlowedPerSecond, rasPortEntry=rasPortEntry, frsChgOrdersReceived=frsChgOrdersReceived, icmpV6SentMembershipReduction=icmpV6SentMembershipReduction, nntpSrvrTotalSSLConnections=nntpSrvrTotalSSLConnections, cpuC1TransitionsPerSec=cpuC1TransitionsPerSec, icmpV4SentTimestampReplyPerSec=icmpV4SentTimestampReplyPerSec, printQueueEnumNetworkPrinterCall=printQueueEnumNetworkPrinterCall, rsvpIfRESVERRMsgsReceived=rsvpIfRESVERRMsgsReceived, adn2RequestsRejected=adn2RequestsRejected, npsracsAccountingResponsesPerSec=npsracsAccountingResponsesPerSec, sgAdminClients=sgAdminClients, sgIdleThreads=sgIdleThreads, icmpV4=icmpV4, hcapcVersionNegotiationResponses=hcapcVersionNegotiationResponses, sgFilteringThreads=sgFilteringThreads, frsReplicaSetsStarted=frsReplicaSetsStarted, nwPacketBurstWriteNCPCountPerSec=nwPacketBurstWriteNCPCountPerSec, icsAccountingRequests=icsAccountingRequests, wsLockedErrorsPerSec=wsLockedErrorsPerSec, ipsi4SuccessMainModeNegotiations=ipsi4SuccessMainModeNegotiations, dnsWINSResponseSent=dnsWINSResponseSent, frcFetchRequestsSent=frcFetchRequestsSent, dtcAbortedTransactions=dtcAbortedTransactions, httpsugMaxConnections=httpsugMaxConnections, icsNoRecord=icsNoRecord, netBEUIDatagramBytesPerSec=netBEUIDatagramBytesPerSec, nntpSrvrCurrentOutboundConns=nntpSrvrCurrentOutboundConns, processPrivateMBytes=processPrivateMBytes, siL2MergeSpeedLast=siL2MergeSpeedLast, atAverageTimePerZIPPacket=atAverageTimePerZIPPacket, udpV4DatagramsReceivedPerSec=udpV4DatagramsReceivedPerSec, npsshvShvNoneFailuresPerSec=npsshvShvNoneFailuresPerSec, snfsV317ReadDirectory=snfsV317ReadDirectory, adnssSessionsTotal=adnssSessionsTotal, dtcActiveTransactionsMaximum=dtcActiveTransactionsMaximum, ntdsLDAPUDPOperationsPerSec=ntdsLDAPUDPOperationsPerSec, icmpV4SentParameterProblem=icmpV4SentParameterProblem, ntdsDRAOutboundObjectsPerSec=ntdsDRAOutboundObjectsPerSec, netBEUIBytesTotalPerSec=netBEUIBytesTotalPerSec, mfsMaxPagedMemory=mfsMaxPagedMemory, sgpChangedDocuments=sgpChangedDocuments, ipxDisconnectsRemote=ipxDisconnectsRemote, wmppCurStreamingRTSPPlayers=wmppCurStreamingRTSPPlayers, adnApplCacheTotalHitRatio=adnApplCacheTotalHitRatio, wmsTotalServerUptime=wmsTotalServerUptime, npsacsDroppedPackets=npsacsDroppedPackets, dsOnelevelSearchesPerSec=dsOnelevelSearchesPerSec, npsausMalformedPacketsPerSec=npsausMalformedPacketsPerSec, adnApplRequestEventsRaisedPerSec=adnApplRequestEventsRaisedPerSec, serviceModelService3Table=serviceModelService3Table, ncltContentionRatePerSec=ncltContentionRatePerSec, tssInputAsyncFrameError=tssInputAsyncFrameError, bnuRemoteServerSpeedBitsPerSec=bnuRemoteServerSpeedBitsPerSec, rsvpIfSignalingBytesReceived=rsvpIfSignalingBytesReceived, wsTotalAllowedAsyncIORqsts=wsTotalAllowedAsyncIORqsts, atBytesOutPerSec=atBytesOutPerSec, ncsStackWalkDepth=ncsStackWalkDepth, smtpServerEntry=smtpServerEntry, dsSAMEnumerationsPerSec=dsSAMEnumerationsPerSec, sgDocumentsDelayedRetry=sgDocumentsDelayedRetry, acsPerRsvpSvcQoSNotifications=acsPerRsvpSvcQoSNotifications, adnAppl2RequestsTotal=adnAppl2RequestsTotal, wsTotalMoveRqsts=wsTotalMoveRqsts, netBIOSExpirationsAck=netBIOSExpirationsAck, adbiLogThreadsWaiting=adbiLogThreadsWaiting, vschdDMABufferSubmittedPerSec=vschdDMABufferSubmittedPerSec, adnAppl2ErrorDuringPreprocessing=adnAppl2ErrorDuringPreprocessing, ntdsDSPercentWritesFromLSA=ntdsDSPercentWritesFromLSA, adnAppl2RequestsSucceeded=adnAppl2RequestsSucceeded, wsMaximumNonAnonymousUsers=wsMaximumNonAnonymousUsers, siPersistentIndexesL1=siPersistentIndexesL1, iusAccessRequests=iusAccessRequests, ipV4DatagramsRcvdDiscarded=ipV4DatagramsRcvdDiscarded, adnAppl1ErrorUnhandledDuringExec=adnAppl1ErrorUnhandledDuringExec, sms3CallsOutstanding=sms3CallsOutstanding, ncmPromotedMemoryFromGen0=ncmPromotedMemoryFromGen0, processPageFileMBytesPeak=processPageFileMBytesPeak, adbiLogRecordStallsPerSec=adbiLogRecordStallsPerSec, giaipSuccessfulNegotiations=giaipSuccessfulNegotiations, snfsMV101Mount=snfsMV101Mount, pSchedPipeAvgPacketsInSequencer=pSchedPipeAvgPacketsInSequencer, memoryStbyCacheReserveKBytes=memoryStbyCacheReserveKBytes, npsaucUnknownType=npsaucUnknownType, aspEngineFlushNotifications=aspEngineFlushNotifications, frsRemoteChgOrdersAborted=frsRemoteChgOrdersAborted, adn2StateServerSessionsActive=adn2StateServerSessionsActive, dsDSSearchSubOperationsPerSec=dsDSSearchSubOperationsPerSec, ntdsDSPercentReadsFromNTDSAPI=ntdsDSPercentReadsFromNTDSAPI, smtpSrvrCatCatsCmpltdPerSec=smtpSrvrCatCatsCmpltdPerSec, faxsReceivedPages=faxsReceivedPages, rsvpInterfacesTable=rsvpInterfacesTable, atATPXOResponsePerSec=atATPXOResponsePerSec, wmusStreamErrors=wmusStreamErrors, adnAppl2InfraErrorEventsRaised=adnAppl2InfraErrorEventsRaised, joProcessCountTotal=joProcessCountTotal, snfsV311MakeNode=snfsV311MakeNode, adnApplEventsRaised=adnApplEventsRaised, iccNoRecordPerSec=iccNoRecordPerSec, npsausQuarantineDecisions=npsausQuarantineDecisions, ipxConnectionsOpen=ipxConnectionsOpen, adnAppl2SessionsTimedOut=adnAppl2SessionsTimedOut, tssInputWaitForOutBuf=tssInputWaitForOutBuf, ncsTotalRuntimeChecks=ncsTotalRuntimeChecks, ipsa6FailExtendModeNegotiations=ipsa6FailExtendModeNegotiations, sswsDigestAuthentications=sswsDigestAuthentications, sms3ValidationAuthFailPerSec=sms3ValidationAuthFailPerSec, windowsWorkflowFoundationTable=windowsWorkflowFoundationTable, npsshvShvLastRoundTripTime=npsshvShvLastRoundTripTime, memoryCacheFaultsPerSec=memoryCacheFaultsPerSec, ncmGen1HeapSize=ncmGen1HeapSize, netlogonSemaphoreTimeouts=netlogonSemaphoreTimeouts, icmpV4RcvdAddressMaskReply=icmpV4RcvdAddressMaskReply, indexingServiceFilterTable=indexingServiceFilterTable, snfsMV103Unmount=snfsMV103Unmount, frsBindings=frsBindings, npsshvShvClientCommFailurePerSec=npsshvShvClientCommFailurePerSec, frsReplicaSetsDeleted=frsReplicaSetsDeleted, udditGetregisteredInfo=udditGetregisteredInfo, jodIOWriteBytesPerSec=jodIOWriteBytesPerSec, adnApplErrorsTotal=adnApplErrorsTotal, adnAppl1DebuggingRequests=adnAppl1DebuggingRequests, ipV4=ipV4, telephonyClientApps=telephonyClientApps, threadPercentProcessorTime=threadPercentProcessorTime, lDiskPercentIdleTime=lDiskPercentIdleTime, sgDelayedDocuments=sgDelayedDocuments, msmqSvcTotalMessagesInAllQueues=msmqSvcTotalMessagesInAllQueues, wsTotalPutRqsts=wsTotalPutRqsts, advDatabaseEntry=advDatabaseEntry, browserMissedServerAnnouncements=browserMissedServerAnnouncements, ntdsDSPercentSearchesFromDRA=ntdsDSPercentSearchesFromDRA, nwPacketBurstReadTimeoutsPerSec=nwPacketBurstReadTimeoutsPerSec, snfsTotalMountCallsV3=snfsTotalMountCallsV3, icmpV4RcvdTimestampPerSec=icmpV4RcvdTimestampPerSec, netBIOSConnectionSessionTimeouts=netBIOSConnectionSessionTimeouts, adnWorkerProcessesRunning=adnWorkerProcessesRunning, atPacketsRoutedOutPerSec=atPacketsRoutedOutPerSec, ipsi4FailedQuickModeNegotPerSec=ipsi4FailedQuickModeNegotPerSec, tssTotalTimeouts=tssTotalTimeouts, spxPacketsReceivedPerSec=spxPacketsReceivedPerSec, memoryModifiedPageListBytes=memoryModifiedPageListBytes, netBIOSDatagramsPerSec=netBIOSDatagramsPerSec, wFPv6OutConnectionsAllowedPerSec=wFPv6OutConnectionsAllowedPerSec, adnAppl1CacheAPITurnoverRate=adnAppl1CacheAPITurnoverRate, dsDSSecurityDescSubOpsPerSec=dsDSSecurityDescSubOpsPerSec, icmpV4RcvdEchoPerSec=icmpV4RcvdEchoPerSec, ipV6DatagramsRcvdAddressErrors=ipV6DatagramsRcvdAddressErrors, serviceModelService3Entry=serviceModelService3Entry, dsDSSecurityDescriptorPropEvents=dsDSSecurityDescriptorPropEvents, adnRequestsCurrent=adnRequestsCurrent, nntpSrvrArticlesTotal=nntpSrvrArticlesTotal, nntpSrvrArticleMapEntriesPerSec=nntpSrvrArticleMapEntriesPerSec, adnApplOutputCacheHits=adnApplOutputCacheHits, ipV4DatagramsOutboundNoRoute=ipV4DatagramsOutboundNoRoute, sgpDocumentDeleteRate=sgpDocumentDeleteRate, msmqimsIncomingMulticastMessages=msmqimsIncomingMulticastMessages, serverFilesOpen=serverFilesOpen, redirReadsLargePerSec=redirReadsLargePerSec, memorySystemDriverResidentBytes=memorySystemDriverResidentBytes, ntdsSAMDomLocGrpMembEvalsPerSec=ntdsSAMDomLocGrpMembEvalsPerSec, spxFailuresResourceRemote=spxFailuresResourceRemote, npsracsPacketsReceivedPerSec=npsracsPacketsReceivedPerSec, tcpV4ConnectionFailures=tcpV4ConnectionFailures, npsausProbationDecisionsPerSec=npsausProbationDecisionsPerSec, tssVirtualBytesPeak=tssVirtualBytesPeak, lDiskDiskWriteBytesPerSec=lDiskDiskWriteBytesPerSec, pDiskInstance=pDiskInstance, processWorkingSetPrivate=processWorkingSetPrivate, threadStartAddress=threadStartAddress, adnApplOutputCacheEntries=adnApplOutputCacheEntries, ntdsTombstonesVisitedPerSec=ntdsTombstonesVisitedPerSec, nntpCmdsXOverCmdsPerSec=nntpCmdsXOverCmdsPerSec, npsaucPacketsSent=npsaucPacketsSent, ncltNumOfCurrentRecognizedThread=ncltNumOfCurrentRecognizedThread, spxFailuresResourceLocal=spxFailuresResourceLocal, adnAppl2ApplLifetimeEvents=adnAppl2ApplLifetimeEvents, dfsrfCompressedSizeOfFilesRcvd=dfsrfCompressedSizeOfFilesRcvd, smtpSrvrInboundConnsTotal=smtpSrvrInboundConnsTotal, ocspscActiveConnections=ocspscActiveConnections, joThisPeriodMSecUserMode=joThisPeriodMSecUserMode, pSchedFlowNonconfPktsSchedPerSec=pSchedFlowNonconfPktsSchedPerSec, serverBytesTransmittedPerSec=serverBytesTransmittedPerSec)
mibBuilder.exportSymbols("INFORMANT-ADV", aspErrorsFromScriptCompilers=aspErrorsFromScriptCompilers, threadThreadWaitReason=threadThreadWaitReason, ipsa4SuccessQuickModeNegotPerSec=ipsa4SuccessQuickModeNegotPerSec, npsaupRetransmissionsPerSec=npsaupRetransmissionsPerSec, npsacsDupAccountingRequestPerSec=npsacsDupAccountingRequestPerSec, dsNTLMBindsPerSec=dsNTLMBindsPerSec, dsLDAPClientSessions=dsLDAPClientSessions, sgSystemIOTrafficRate=sgSystemIOTrafficRate, snfsDiscardedDRCPackets=snfsDiscardedDRCPackets, irusRetransmissions=irusRetransmissions, sgServersUnavailable=sgServersUnavailable, iucBadAuthenticators=iucBadAuthenticators, indexingServiceFilterEntry=indexingServiceFilterEntry, ircsRetransmissions=ircsRetransmissions, ntdsDRAInboundBytesCBSACSBoot=ntdsDRAInboundBytesCBSACSBoot, sgpDocumentAddRate=sgpDocumentAddRate, icsDuplicateAccountingRqstPerSec=icsDuplicateAccountingRqstPerSec, memoryPoolPagedResidentBytes=memoryPoolPagedResidentBytes, wmsCurIncomingBandwidthKbps=wmsCurIncomingBandwidthKbps, ipsa4ActiveExtendedModeSAs=ipsa4ActiveExtendedModeSAs, frsFetchBlocksReceived=frsFetchBlocksReceived, processPageFileMBytes=processPageFileMBytes, tssOutputWdFrames=tssOutputWdFrames, processWorkingSetMBytes=processWorkingSetMBytes, processVirtualMBytesPeak=processVirtualMBytesPeak, icmpV6ReceivedMembershipQuery=icmpV6ReceivedMembershipQuery, redirFileWriteOperationsPerSec=redirFileWriteOperationsPerSec, icpMalformedPackets=icpMalformedPackets, tssInputFrames=tssInputFrames, adbTableOpenCacheHitsPerSec=adbTableOpenCacheHitsPerSec, adbIPerOLogWritesPerSec=adbIPerOLogWritesPerSec, jodWorkingSetPeak=jodWorkingSetPeak, wsrmProcessMatchingCriteriaTable=wsrmProcessMatchingCriteriaTable, iucAccessRequests=iucAccessRequests, sms3ReliableSessionFaultedPerSec=sms3ReliableSessionFaultedPerSec, redirPacketsTransmittedPerSec=redirPacketsTransmittedPerSec, rsvpIfSignalingBytesSent=rsvpIfSignalingBytesSent, sgDocumentsSuccessfullyFiltered=sgDocumentsSuccessfullyFiltered, ntdsBaseSearchesPerSec=ntdsBaseSearchesPerSec, ipV6FragmentReassemblyFailures=ipV6FragmentReassemblyFailures, ipV4DatagramsRcvdPerSec=ipV4DatagramsRcvdPerSec, redirCurrentCommands=redirCurrentCommands, swqAvailableThreads=swqAvailableThreads, wsLockRqstsPerSec=wsLockRqstsPerSec, dsDRAOutboundValuesTotalPerSec=dsDRAOutboundValuesTotalPerSec, npsaccPacketsSent=npsaccPacketsSent, smtpSrvrCatLDAPConnsCurrOpen=smtpSrvrCatLDAPConnsCurrOpen, adnStateServerSessionsActive=adnStateServerSessionsActive, processIOReadBytesPerSec=processIOReadBytesPerSec, frsFilesInstalled=frsFilesInstalled, rsvpIfRESVMsgsReceived=rsvpIfRESVMsgsReceived, atAverageTimePerRTMPPacket=atAverageTimePerRTMPPacket, snfsMV305ExportList=snfsMV305ExportList, uddicValidatecategorization=uddicValidatecategorization, w3svcInstance=w3svcInstance, ncrContexts=ncrContexts, sgpFilteredText=sgpFilteredText, sppsInstance=sppsInstance, wsrmprActualManagedCPUPercent=wsrmprActualManagedCPUPercent, adnAppl1RequestsPerSec=adnAppl1RequestsPerSec, snfsV305ReadLinkV3=snfsV305ReadLinkV3, windowsMediaStationService=windowsMediaStationService, npsrausBadAuthenticators=npsrausBadAuthenticators, iupBadAuthenticators=iupBadAuthenticators, wscTotalFilesCached=wscTotalFilesCached, processWorkingSetKBytes=processWorkingSetKBytes, udditSaveservice=udditSaveservice, adnApplicationsRunning=adnApplicationsRunning, smtpSrvrCatRcptsNDRdUnresolved=smtpSrvrCatRcptsNDRdUnresolved, npsAccountingProxy=npsAccountingProxy, ntdsDRAOutboundObjsFilterPerSec=ntdsDRAOutboundObjsFilterPerSec, sms3TransactedOpsInDoubtPerSec=sms3TransactedOpsInDoubtPerSec, smtpSrvrOutboundConnsCurrent=smtpSrvrOutboundConnsCurrent, processIODataBytesPerSec=processIODataBytesPerSec, processEntry=processEntry, ocspServerConnectionsEntry=ocspServerConnectionsEntry, ipsi6MainModeNegotiations=ipsi6MainModeNegotiations, adnApplSessionsTotal=adnApplSessionsTotal, frsUsnRecordsRejected=frsUsnRecordsRejected, w3svcOutputCacheCurrentMemUsage=w3svcOutputCacheCurrentMemUsage, netBEUIFailuresLink=netBEUIFailuresLink, dtcTransactionsPerSec=dtcTransactionsPerSec, cpuC3TransitionsPerSec=cpuC3TransitionsPerSec, aspSessionsTotal=aspSessionsTotal, nntpCmdsHelpCmdsPerSec=nntpCmdsHelpCmdsPerSec, ncjTotalNumOfILBytesJitted=ncjTotalNumOfILBytesJitted, npsausDupAccessRequestsPerSec=npsausDupAccessRequestsPerSec, smtpSrvrCatLDAPConns=smtpSrvrCatLDAPConns, wmsTotalAdvertisements=wmsTotalAdvertisements, ntdsSAMGlbGrpMembpEvalsPerSec=ntdsSAMGlbGrpMembpEvalsPerSec, rsvpSvcQoSenabledSenders=rsvpSvcQoSenabledSenders, frcRemoteChangeOrdersSent=frcRemoteChangeOrdersSent, iusBadAuthenticators=iusBadAuthenticators, nwLinkNetBIOSTable=nwLinkNetBIOSTable, dfsrfStagingFilesCleanedUp=dfsrfStagingFilesCleanedUp, irusAccessChallenges=irusAccessChallenges, rpcpCurNumInRPCOverHTTPConn=rpcpCurNumInRPCOverHTTPConn, usbIsoPacketErrorsPerSec=usbIsoPacketErrorsPerSec, dfsrfInstance=dfsrfInstance, rsvpIfPATHMsgsReceived=rsvpIfPATHMsgsReceived, aspScriptEngineCacheHitRate=aspScriptEngineCacheHitRate, w3svcMaximumFileCacheMemoryUsage=w3svcMaximumFileCacheMemoryUsage, adn2RequestErrorEventsRaised=adn2RequestErrorEventsRaised, dotNETCLRLoadingTable=dotNETCLRLoadingTable, is4dTotalSARekeys=is4dTotalSARekeys, siL8MergesNow=siL8MergesNow, tssInputBytes=tssInputBytes, hrasCertificationTimeMs=hrasCertificationTimeMs, adbVersionBucketsAllocated=adbVersionBucketsAllocated, lDiskFreeMegabytes=lDiskFreeMegabytes, smtpSrvrInstance=smtpSrvrInstance, wscTotalURIsCached=wscTotalURIsCached, icmpV6SentTimeExceeded=icmpV6SentTimeExceeded, dsDRAInPropertiesAppliedPerSec=dsDRAInPropertiesAppliedPerSec, frsOutboundChgOrdersDampened=frsOutboundChgOrdersDampened, ipsi4MainModeNegotRqstRcvdPerSec=ipsi4MainModeNegotRqstRcvdPerSec, aspErrorsFromASPPreprocessor=aspErrorsFromASPPreprocessor, dnsDynamicUpdateQueued=dnsDynamicUpdateQueued, cpuPercentUserTime=cpuPercentUserTime, wwfWorkflowsPersisted=wwfWorkflowsPersisted, dsDRAInObjectsAppliedPerSec=dsDRAInObjectsAppliedPerSec, ipsi4MainModeNegotiations=ipsi4MainModeNegotiations, ncltTotalNumOfContentions=ncltTotalNumOfContentions, iccInstance=iccInstance, serverErrorsSystem=serverErrorsSystem, lDiskDiskTransfersPerSec=lDiskDiskTransfersPerSec, tssTotalWdFrames=tssTotalWdFrames, dsLDAPActiveThreads=dsLDAPActiveThreads, dsDRAHighestUSNIssuedLowPart=dsDRAHighestUSNIssuedLowPart, aspTemplateCacheHitRate=aspTemplateCacheHitRate, snsdMessagesInTheQueueDirectory=snsdMessagesInTheQueueDirectory, tsgCurrentConnections=tsgCurrentConnections, memorySystemCodeResidentKBytes=memorySystemCodeResidentKBytes, siL4MergesNow=siL4MergesNow, dotNETCLRLoadingEntry=dotNETCLRLoadingEntry, npsausAccessChallenges=npsausAccessChallenges, is4dTotalBytesSentInTunnels=is4dTotalBytesSentInTunnels, snfsV213SymbolicLink=snfsV213SymbolicLink, adn1RequestsCurrent=adn1RequestsCurrent, processPoolNonpagedMBytes=processPoolNonpagedMBytes, snfsV215RemoveDirectory=snfsV215RemoveDirectory, dhcpSrvDiscoversPerSec=dhcpSrvDiscoversPerSec, iccPacketsSentPerSec=iccPacketsSentPerSec, wsTotalGetRqsts=wsTotalGetRqsts, dnsDynamicUpdateTimeOuts=dnsDynamicUpdateTimeOuts, adn1ApplicationRestarts=adn1ApplicationRestarts, dfsrcTotalFilesReceived=dfsrcTotalFilesReceived, objectsSemaphores=objectsSemaphores, dsTombstonesGarbageCollPerSec=dsTombstonesGarbageCollPerSec, adnAppl1TransactionsPending=adnAppl1TransactionsPending, npsrausPacketsReceived=npsrausPacketsReceived, dsATQThreadsLDAP=dsATQThreadsLDAP, w3svcW3WPEntry=w3svcW3WPEntry, ntdsDRAHighestUSNCommitHighPart=ntdsDRAHighestUSNCommitHighPart, ncmNumGen1Collections=ncmNumGen1Collections, adnApplCacheAPIEntries=adnApplCacheAPIEntries, aspRequestsTotal=aspRequestsTotal, dnsNotifyReceived=dnsNotifyReceived, ipsi4MainModeNegotiationRqstRcvd=ipsi4MainModeNegotiationRqstRcvd, ncnDatagramsReceived=ncnDatagramsReceived, netBEUIFramesRejectedPerSec=netBEUIFramesRejectedPerSec, ipV4FragmentReassemblyFailures=ipV4FragmentReassemblyFailures, adnAppl2AnonymousRequestsPerSec=adnAppl2AnonymousRequestsPerSec, netBIOSFramesReceivedPerSec=netBIOSFramesReceivedPerSec, rasTotalFramesReceivedPerSec=rasTotalFramesReceivedPerSec, iusInvalidRequests=iusInvalidRequests, swqBytesTransferredPerSec=swqBytesTransferredPerSec, tssInputCompressedBytes=tssInputCompressedBytes, redirReadsDeniedPerSec=redirReadsDeniedPerSec, dtcb3PrepareRetryCountPerSec=dtcb3PrepareRetryCountPerSec, smsh3UrisUnregisteredForNetPipe=smsh3UrisUnregisteredForNetPipe, npsaupAccessChallenges=npsaupAccessChallenges, w3svcTotalURIsCached=w3svcTotalURIsCached, advDatabaseTable=advDatabaseTable, tssTotalCompressionRatio=tssTotalCompressionRatio, dfsrfBandwidthSavings=dfsrfBandwidthSavings, dfsrcBandwidthSavings=dfsrcBandwidthSavings, npsracsMalformedPacketsPerSec=npsracsMalformedPacketsPerSec, dsATQEstimatedQueueDelay=dsATQEstimatedQueueDelay, redirServerSessionsHung=redirServerSessionsHung, siL1MergeSpeedAverage=siL1MergeSpeedAverage, smtpSrvrCatLDAPGeneralCmpltFail=smtpSrvrCatLDAPGeneralCmpltFail, telephonyActiveLines=telephonyActiveLines, sgpFilteredTextRate=sgpFilteredTextRate, dnsDynamicUpdateRejected=dnsDynamicUpdateRejected, adnAppl2ErrorEventsRaisedPerSec=adnAppl2ErrorEventsRaisedPerSec, frsUsnRecordsExamined=frsUsnRecordsExamined, adnApplTransactionsCommitted=adnApplTransactionsCommitted, ntdsDRAInboundBytesCBSACPerSec=ntdsDRAInboundBytesCBSACPerSec, iupRequestTimeoutsPerSec=iupRequestTimeoutsPerSec, nntpCmdsLogonFailuresPerSec=nntpCmdsLogonFailuresPerSec, nbtConnectionTable=nbtConnectionTable, certificationAuthorityEntry=certificationAuthorityEntry, iscsiSessionsFailed=iscsiSessionsFailed, processWorkingSet=processWorkingSet, processPercentUserTime=processPercentUserTime, sms3TransactedOpsAbortedPerSec=sms3TransactedOpsAbortedPerSec, nwReadOperationsRandomPerSec=nwReadOperationsRandomPerSec, pop3SvcMessagesDeliveredPerSec=pop3SvcMessagesDeliveredPerSec, npsrausMalformedPackets=npsrausMalformedPackets, dsPhantomsVisitedPerSec=dsPhantomsVisitedPerSec, memoryStbyCacheNormPriorityKByte=memoryStbyCacheNormPriorityKByte, dsDSPercentReadsFromLSA=dsDSPercentReadsFromLSA, pop3SvcTotalMessagesDelivered=pop3SvcTotalMessagesDelivered, swqInstance=swqInstance, wmsTotalUDPResendRequests=wmsTotalUDPResendRequests, adbiLogBytesWritePerSec=adbiLogBytesWritePerSec, processPriorityBase=processPriorityBase, nntpSrvrMaximumConnections=nntpSrvrMaximumConnections, rpcpAttemptLoadBalBrkRqstsPerSec=rpcpAttemptLoadBalBrkRqstsPerSec, hcapcLastNPSValidationTime=hcapcLastNPSValidationTime, sgDocumentsSuccessFilteredRate=sgDocumentsSuccessFilteredRate, nntpCmdsListCmds=nntpCmdsListCmds, adnApplRequestsNotAuthorized=adnApplRequestsNotAuthorized, adnApplErrorEventsRaised=adnApplErrorEventsRaised, npsausBadAuthenticatorsPerSec=npsausBadAuthenticatorsPerSec, npsAuthenticationClientsEntry=npsAuthenticationClientsEntry, adnWorkerProcessRestarts=adnWorkerProcessRestarts, iupAccessAcceptsPerSec=iupAccessAcceptsPerSec, ipsdPacketsNotAuthenticated=ipsdPacketsNotAuthenticated, npsacsBadAuthenticators=npsacsBadAuthenticators, npsshvShvCompliances=npsshvShvCompliances, npsshvShvNonCompliancesPerSec=npsshvShvNonCompliancesPerSec, w3svcCurrentURIsCached=w3svcCurrentURIsCached, wmusAuthenticationRequests=wmusAuthenticationRequests, netBIOSFrameBytesReSentPerSec=netBIOSFrameBytesReSentPerSec, ncltNumOfCurrentPhysicalThread=ncltNumOfCurrentPhysicalThread, siL2MergeCount=siL2MergeCount, tcpV4ConnectionsActive=tcpV4ConnectionsActive, netBIOSDatagramBytesPerSec=netBIOSDatagramBytesPerSec, ircsPortNumber=ircsPortNumber, nntpCmdsLastCmds=nntpCmdsLastCmds, ipxFrameBytesReSentPerSec=ipxFrameBytesReSentPerSec, dsDSPercentSearchesFromSAM=dsDSPercentSearchesFromSAM, npsaucProbationDecisionsPerSec=npsaucProbationDecisionsPerSec, pSchedFlowMaxPktsInShaper=pSchedFlowMaxPktsInShaper, ipsa4QuickModeNegotiationsPerSec=ipsa4QuickModeNegotiationsPerSec, siQueriesSucceeded=siQueriesSucceeded, tcpV4SegmentsPerSec=tcpV4SegmentsPerSec, aspDotNETApplicationsTable=aspDotNETApplicationsTable, frsRemoteChgOrdersRetired=frsRemoteChgOrdersRetired, iucMalformedPackets=iucMalformedPackets, nntpCmdsXPatCmds=nntpCmdsXPatCmds, wsOtherRqstMethodsPerSec=wsOtherRqstMethodsPerSec, sms3QueuedMessagesRejected=sms3QueuedMessagesRejected, ipsi6FailedMainModeNegotiations=ipsi6FailedMainModeNegotiations, swqWriteOperationsPerSec=swqWriteOperationsPerSec, sme3ReliableSessionsFaulted=sme3ReliableSessionsFaulted, frsJoins=frsJoins, frsJoinNotificationsReceived=frsJoinNotificationsReceived, tssTotalAsyncParityError=tssTotalAsyncParityError, wwfWorkflowsCreated=wwfWorkflowsCreated, memoryWriteCopiesPerSec=memoryWriteCopiesPerSec, dfsrsvUSNJournalRecordsAccepted=dfsrsvUSNJournalRecordsAccepted)
mibBuilder.exportSymbols("INFORMANT-ADV", cacActiveConnections=cacActiveConnections, adnAppl2RequestBytesOutTotal=adnAppl2RequestBytesOutTotal, ntdsDRAInboundBytesCBSBCPerSec=ntdsDRAInboundBytesCBSBCPerSec, dfsrsvUSNJournalUnreadPercentage=dfsrsvUSNJournalUnreadPercentage, adnApplInfraErrEventRaised=adnApplInfraErrEventRaised, netBIOSDisconnectsRemote=netBIOSDisconnectsRemote, snfsDRCReplies=snfsDRCReplies, dnsWINSReverseLookupRcvPerSec=dnsWINSReverseLookupRcvPerSec, nntpSrvrTotalPassiveFeeds=nntpSrvrTotalPassiveFeeds, dfsrsvUSNJournalRecordsRead=dfsrsvUSNJournalRecordsRead, memory=memory, w3svcCurrentFilesCached=w3svcCurrentFilesCached, atBytesInPerSec=atBytesInPerSec, cacheReadAheadsPerSec=cacheReadAheadsPerSec, npsracsPendingRequests=npsracsPendingRequests, gatewayServiceForNetWare=gatewayServiceForNetWare, w3svcOutputCacheHitsPerSec=w3svcOutputCacheHitsPerSec, pop3SvcBytesTransmittedPerSec=pop3SvcBytesTransmittedPerSec, nntpSrvrArticleMapEntries=nntpSrvrArticleMapEntries, swqBorrowedWorkItems=swqBorrowedWorkItems, faxsTotalMinutesSendAndReceive=faxsTotalMinutesSendAndReceive, ftpSvcBytesTotalPerSec=ftpSvcBytesTotalPerSec, adnAppl1CacheTotalHitRatio=adnAppl1CacheTotalHitRatio, irusAccessChallengesPerSec=irusAccessChallengesPerSec, ncrTotalRemoteCalls=ncrTotalRemoteCalls, icsUnknownTypePerSec=icsUnknownTypePerSec, wscTotalFlushedFiles=wscTotalFlushedFiles, dtcForceAbortedTransactions=dtcForceAbortedTransactions, ncjPercentTimeInJit=ncjPercentTimeInJit, iscsiSessionFormatErrors=iscsiSessionFormatErrors, dtcb3MessageSendFailuresPerSec=dtcb3MessageSendFailuresPerSec, is4iTotalAuthenticationFailures=is4iTotalAuthenticationFailures, nntpCmdsQuitCmds=nntpCmdsQuitCmds, rpcpFailLoadBalDecisionsPerSec=rpcpFailLoadBalDecisionsPerSec, nwConnectNetWare2X=nwConnectNetWare2X, netBIOSFrameBytesSentPerSec=netBIOSFrameBytesSentPerSec, systemFileDataOperationsPerSec=systemFileDataOperationsPerSec, udditFindbusiness=udditFindbusiness, npsRemoteAccountingServersTable=npsRemoteAccountingServersTable, printQueueEntry=printQueueEntry, sgThreadsBlockedDueToBackOff=sgThreadsBlockedDueToBackOff, iccUnknownType=iccUnknownType, npsaupAccessAcceptsPerSec=npsaupAccessAcceptsPerSec, adnAppl1TransactionsAborted=adnAppl1TransactionsAborted, adnAppl2SessionsActive=adnAppl2SessionsActive, npsausInvalidRequestsPerSec=npsausInvalidRequestsPerSec, ntdsDRAOutboundBytesCBSACPerSec=ntdsDRAOutboundBytesCBSACPerSec, wscFileCacheHits=wscFileCacheHits, tssProtocolBrushCacheHitRatio=tssProtocolBrushCacheHitRatio, ipsa4PendExtendModeNegotiations=ipsa4PendExtendModeNegotiations, adnStateServerSessionsTimedOut=adnStateServerSessionsTimedOut, sgActiveQueueLength=sgActiveQueueLength, nntpCmdsXOverCmds=nntpCmdsXOverCmds, pSchedFlowBytesScheduledPerSec=pSchedFlowBytesScheduledPerSec, rsvpIfPATHMsgsSent=rsvpIfPATHMsgsSent, udditGetserviceDetail=udditGetserviceDetail, pSchedPipeMaxPacketsInShaper=pSchedPipeMaxPacketsInShaper, nntpServerTable=nntpServerTable, npsacsBadAuthenticatorsPerSec=npsacsBadAuthenticatorsPerSec, atATPPacketsPerSec=atATPPacketsPerSec, netBEUIPiggybackAckTimeouts=netBEUIPiggybackAckTimeouts, threadPriorityBase=threadPriorityBase, giaipExtendedModeNegotiationTime=giaipExtendedModeNegotiationTime, adnAppl2OutputCacheTrims=adnAppl2OutputCacheTrims, objectsSections=objectsSections, dnsRecursiveQueryFailurePerSec=dnsRecursiveQueryFailurePerSec, ipsi6SuccessfulQuickModeNegot=ipsi6SuccessfulQuickModeNegot, adnAppl2ErrorsTotal=adnAppl2ErrorsTotal, smsh3RegActiveForNetTcp=smsh3RegActiveForNetTcp, npsaucQuarantineDecisionsPerSec=npsaucQuarantineDecisionsPerSec, frsChgOrdersPropagated=frsChgOrdersPropagated, icmpV6SentEchoReplyPerSec=icmpV6SentEchoReplyPerSec, msmqomsOutgoingMulticastBytes=msmqomsOutgoingMulticastBytes, wmusUDPResendsSent=wmusUDPResendsSent, dsTombstonesVisitedPerSec=dsTombstonesVisitedPerSec, irusBadAuthenticatorsPerSec=irusBadAuthenticatorsPerSec, wmsCurOutDistAllocBandwidthKbps=wmsCurOutDistAllocBandwidthKbps, iccBadAuthenticators=iccBadAuthenticators, ipxFramesReceivedPerSec=ipxFramesReceivedPerSec, npsrausUnknownType=npsrausUnknownType, ntdsPhantomsCleanedPerSec=ntdsPhantomsCleanedPerSec, videoSchedulerEntry=videoSchedulerEntry, wwfWorkflowsAborted=wwfWorkflowsAborted, jobObjectDetailsTable=jobObjectDetailsTable, npsacsAccountingRequests=npsacsAccountingRequests, caIssuedRequestsPerSec=caIssuedRequestsPerSec, rasPortBytesReceivedPerSec=rasPortBytesReceivedPerSec, winsSrvrReleasesPerSec=winsSrvrReleasesPerSec, sgpDelayedDocuments=sgpDelayedDocuments, threadEntry=threadEntry, adnAuditFailureEventsRaised=adnAuditFailureEventsRaised, processorTable=processorTable, smtpSrvrBytesRcvdTotal=smtpSrvrBytesRcvdTotal, nciNumOfStubs=nciNumOfStubs, dsDSPercentReadsFromNTDSAPI=dsDSPercentReadsFromNTDSAPI, snfsV208Write=snfsV208Write, npsacpRetransmissionsPerSec=npsacpRetransmissionsPerSec, icmpV4MessagesReceivedErrors=icmpV4MessagesReceivedErrors, aspErrorsDuringScriptRuntime=aspErrorsDuringScriptRuntime, netlogonSemaphoreWaiters=netlogonSemaphoreWaiters, npsaupUnknownType=npsaupUnknownType, sgpAdaptiveCrawlErrors=sgpAdaptiveCrawlErrors, icmpV6ReceivedEchoPerSec=icmpV6ReceivedEchoPerSec, adbiLogWritesPerSec=adbiLogWritesPerSec, dsDRAOutNotCmpWithinSitePerSec=dsDRAOutNotCmpWithinSitePerSec, npsausDroppedPackets=npsausDroppedPackets, siInstance=siInstance, ipxFailuresResourceLocal=ipxFailuresResourceLocal, icsDroppedPackets=icsDroppedPackets, ipV6DatagramsRcvdDeliveredPerSec=ipV6DatagramsRcvdDeliveredPerSec, ipxDatagramsSentPerSec=ipxDatagramsSentPerSec, rsvpSvcFailedQoSRequests=rsvpSvcFailedQoSRequests, icmpV6SentMembershipReport=icmpV6SentMembershipReport, dsDRAPendingReplicationSync=dsDRAPendingReplicationSync, npsacpAccountingRequestsPerSec=npsacpAccountingRequestsPerSec, siL6MergesNow=siL6MergesNow, npsaccNoRecord=npsaccNoRecord, browserMissedServerListRequests=browserMissedServerListRequests, snfsMV105ExportList=snfsMV105ExportList, sgDocumentsFilteredRate=sgDocumentsFilteredRate, tssTotalFrames=tssTotalFrames, npsausAccessRequests=npsausAccessRequests, wmppTotalStreamDenials=wmppTotalStreamDenials, ftpSvcInstance=ftpSvcInstance, iisGlobalURICacheFlushes=iisGlobalURICacheFlushes, nwLinkIPXTable=nwLinkIPXTable, ipxExpirationsResponse=ipxExpirationsResponse, ntdsNegotiatedBindsPerSec=ntdsNegotiatedBindsPerSec, nntpSrvrXoverEntriesPerSec=nntpSrvrXoverEntriesPerSec, iucAccessAccepts=iucAccessAccepts, nceNumOfExcepsThrown=nceNumOfExcepsThrown, swqReadBytesPerSec=swqReadBytesPerSec, siL7MergeCount=siL7MergeCount, nceNumOfExcepsThrownPerSec=nceNumOfExcepsThrownPerSec, icmpV6ReceivedMembershipReduct=icmpV6ReceivedMembershipReduct, serverPoolPagedBytes=serverPoolPagedBytes, wscCurrentMetadataCached=wscCurrentMetadataCached, w3svcFileCacheHitsPerSec=w3svcFileCacheHitsPerSec, frsChgOrdersRetriedGenerate=frsChgOrdersRetriedGenerate, sms3QueuedMessagesRejectedPerSec=sms3QueuedMessagesRejectedPerSec, idxSvcUniqueKeys=idxSvcUniqueKeys, adnAppl1ErrorsDuringCompilation=adnAppl1ErrorsDuringCompilation, jodPercentUserTime=jodPercentUserTime, ncdSQLClntTotalNumFailedCommands=ncdSQLClntTotalNumFailedCommands, ntdsDatabaseDeletesPerSec=ntdsDatabaseDeletesPerSec, uddicGetchangeRecords=uddicGetchangeRecords, frsLocalChgOrdersPropagated=frsLocalChgOrdersPropagated, ipV4FragmentsRcvdPerSec=ipV4FragmentsRcvdPerSec, smtpSrvrCatLDAPPagedSrchFail=smtpSrvrCatLDAPPagedSrchFail, npsaucAccessAcceptsPerSec=npsaucAccessAcceptsPerSec, rsvpIfNumOfOutgoingMsgsDropped=rsvpIfNumOfOutgoingMsgsDropped, dsDRAInBytesTotalPerSec=dsDRAInBytesTotalPerSec, snfsWorkQueueSize=snfsWorkQueueSize, rasTotalPercentCompressionIn=rasTotalPercentCompressionIn, adbiLogGenLossResiliencyDepth=adbiLogGenLossResiliencyDepth, memoryPageWritesPerSec=memoryPageWritesPerSec, iupPacketsReceivedPerSec=iupPacketsReceivedPerSec, pSchedFlowMaximumPktsInNetcard=pSchedFlowMaximumPktsInNetcard, wwfWorkflowsIdlePerSec=wwfWorkflowsIdlePerSec, ncltQueueLengthPeak=ncltQueueLengthPeak, nbtConnectionEntry=nbtConnectionEntry, icmpV6SentDestinationUnreachable=icmpV6SentDestinationUnreachable, smtpSrvrCatLDAPSrchs=smtpSrvrCatLDAPSrchs, wscActiveFlushedEntries=wscActiveFlushedEntries, cpuPercentPrivilegedTime=cpuPercentPrivilegedTime, wwfWorkflowsSuspended=wwfWorkflowsSuspended, npsacpMalformedPackets=npsacpMalformedPackets, searchIndexerTable=searchIndexerTable, w3svcMetadataCacheFlushes=w3svcMetadataCacheFlushes, memoryCommitLimit=memoryCommitLimit, netPacketsSentUnicastPerSec=netPacketsSentUnicastPerSec, sswsKDCTGSRequests=sswsKDCTGSRequests, frcAuthentications=frcAuthentications, nntpSrvrSessionsFlowControlled=nntpSrvrSessionsFlowControlled, processPrivateBytes=processPrivateBytes, dnsSecureUpdateReceived=dnsSecureUpdateReceived, hrasHCEPRequests=hrasHCEPRequests, wsrmProcessEntry=wsrmProcessEntry, frsLocalChgOrdersSentJoin=frsLocalChgOrdersSentJoin, npsaucDupAccessRequestsPerSec=npsaucDupAccessRequestsPerSec, ntdsTombstonesGarbageCollPerSec=ntdsTombstonesGarbageCollPerSec, swqBytesReceivedPerSec=swqBytesReceivedPerSec, aspTransactionsPerSec=aspTransactionsPerSec, serverPoolNonpagedKBytesPeak=serverPoolNonpagedKBytesPeak, ipsa4ExtendModeNegotiationPerSec=ipsa4ExtendModeNegotiationPerSec, frsFetchBlocksSentInBytes=frsFetchBlocksSentInBytes, w3svcOutputCacheMissesPerSec=w3svcOutputCacheMissesPerSec, memoryCommittedMBytes=memoryCommittedMBytes, dnsWINSReverseResponseSentPerSec=dnsWINSReverseResponseSentPerSec, faxsMinutesSending=faxsMinutesSending, winsSrvrGroupRegsPerSec=winsSrvrGroupRegsPerSec, redirWriteOperationsRandomPerSec=redirWriteOperationsRandomPerSec, icmpV6ReceivedNeighborSolicit=icmpV6ReceivedNeighborSolicit, ipV6FragmentationFailures=ipV6FragmentationFailures, ncmNumGCHandles=ncmNumGCHandles, wsTotalFilesReceived=wsTotalFilesReceived, ipxPacketsSentPerSec=ipxPacketsSentPerSec, dhcpSrvActiveQueueLength=dhcpSrvActiveQueueLength, frcPacketsSent=frcPacketsSent, bnuPercentNetcardFree=bnuPercentNetcardFree, nntpCmdsGroupCmds=nntpCmdsGroupCmds, ipsa4SuccessMainModeNegotiations=ipsa4SuccessMainModeNegotiations, adnApplOutputCacheTrims=adnApplOutputCacheTrims, ircsAccountingResponsesPerSec=ircsAccountingResponsesPerSec, npsausMalformedPackets=npsausMalformedPackets, memoryCommittedKBytes=memoryCommittedKBytes, adnAppl2RequestsInApplQueue=adnAppl2RequestsInApplQueue, nntpSrvrFailedOutboundLogons=nntpSrvrFailedOutboundLogons, dfsrfRDCSizeOfFilesReceived=dfsrfRDCSizeOfFilesReceived, sgpFilteredOffice=sgpFilteredOffice, rpcPerHTTPProxyPerServerEntry=rpcPerHTTPProxyPerServerEntry, icsPacketsReceivedPerSec=icsPacketsReceivedPerSec, dtcBridge3=dtcBridge3, ipsa6ActiveMainModeSAs=ipsa6ActiveMainModeSAs, ncnBytesReceived=ncnBytesReceived, adnApplMembershipAuthFailure=adnApplMembershipAuthFailure, redirReadPacketsSmallPerSec=redirReadPacketsSmallPerSec, adnAppl1OutputCacheMisses=adnAppl1OutputCacheMisses, adnAppl1SessionSQLSvrConnTotal=adnAppl1SessionSQLSvrConnTotal, dfsrfStagingFilesGenerated=dfsrfStagingFilesGenerated, winsSrvrSuccessfulQueriesPerSec=winsSrvrSuccessfulQueriesPerSec, adnAppl2CacheTotalTurnoverRate=adnAppl2CacheTotalTurnoverRate, snfsV303Lookup=snfsV303Lookup, wasTotalMessagesSentToWAS=wasTotalMessagesSentToWAS, spxPacketsPerSec=spxPacketsPerSec, smtpSrvrBytesTotal=smtpSrvrBytesTotal, telephonyCurrentOutgoingCalls=telephonyCurrentOutgoingCalls, usbEntry=usbEntry, adnAppl1CacheAPIEntries=adnAppl1CacheAPIEntries, httpsugCurrentConnections=httpsugCurrentConnections, wsTotalBlkdAsyncIORqsts=wsTotalBlkdAsyncIORqsts, pSchedFlowPktsDroppedPerSec=pSchedFlowPktsDroppedPerSec, serverFileDirectorySearches=serverFileDirectorySearches, snfsMOUNTErrorsV1=snfsMOUNTErrorsV1, threadThreadState=threadThreadState, pSchedFlowNonconfPktsXmitdPerSec=pSchedFlowNonconfPktsXmitdPerSec, icmpV4SentTimeExceeded=icmpV4SentTimeExceeded)
