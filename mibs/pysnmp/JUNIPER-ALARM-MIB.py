#
# PySNMP MIB module JUNIPER-ALARM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-ALARM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:47:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
jnxMibs, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxMibs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, Gauge32, Integer32, MibIdentifier, Counter64, NotificationType, IpAddress, ModuleIdentity, TimeTicks, iso, ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Gauge32", "Integer32", "MibIdentifier", "Counter64", "NotificationType", "IpAddress", "ModuleIdentity", "TimeTicks", "iso", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits")
TimeStamp, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TextualConvention", "DisplayString")
jnxAlarms = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 4))
if mibBuilder.loadTexts: jnxAlarms.setLastUpdated('200307182153Z')
if mibBuilder.loadTexts: jnxAlarms.setOrganization('Juniper Networks, Inc.')
jnxCraftAlarms = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2))
jnxAlarmRelayMode = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("passOn", 2), ("cutOff", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxAlarmRelayMode.setStatus('current')
jnxYellowAlarms = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2, 2))
jnxYellowAlarmState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("on", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxYellowAlarmState.setStatus('current')
jnxYellowAlarmCount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2, 2, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxYellowAlarmCount.setStatus('current')
jnxYellowAlarmLastChange = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2, 2, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxYellowAlarmLastChange.setStatus('current')
jnxRedAlarms = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2, 3))
jnxRedAlarmState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("off", 2), ("on", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxRedAlarmState.setStatus('current')
jnxRedAlarmCount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2, 3, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxRedAlarmCount.setStatus('current')
jnxRedAlarmLastChange = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 4, 2, 3, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxRedAlarmLastChange.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-ALARM-MIB", jnxCraftAlarms=jnxCraftAlarms, jnxYellowAlarmLastChange=jnxYellowAlarmLastChange, jnxYellowAlarmCount=jnxYellowAlarmCount, jnxRedAlarmState=jnxRedAlarmState, jnxRedAlarmCount=jnxRedAlarmCount, jnxRedAlarms=jnxRedAlarms, jnxAlarmRelayMode=jnxAlarmRelayMode, jnxAlarms=jnxAlarms, jnxYellowAlarmState=jnxYellowAlarmState, jnxRedAlarmLastChange=jnxRedAlarmLastChange, PYSNMP_MODULE_ID=jnxAlarms, jnxYellowAlarms=jnxYellowAlarms)
