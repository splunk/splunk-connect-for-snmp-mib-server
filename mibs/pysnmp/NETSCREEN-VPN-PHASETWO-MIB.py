#
# PySNMP MIB module NETSCREEN-VPN-PHASETWO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-VPN-PHASETWO-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
netscreenVpnMibModule, netscreenVpn = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenVpnMibModule", "netscreenVpn")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, ObjectIdentity, IpAddress, Gauge32, iso, Integer32, TimeTicks, MibIdentifier, NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "IpAddress", "Gauge32", "iso", "Integer32", "TimeTicks", "MibIdentifier", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
netscreenVpnPhasetwoMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 4, 0, 6))
netscreenVpnPhasetwoMibModule.setRevisions(('2004-05-03 00:00', '2004-03-03 00:00', '2003-11-13 00:00', '2001-09-28 00:00', '2001-05-14 00:00',))
if mibBuilder.loadTexts: netscreenVpnPhasetwoMibModule.setLastUpdated('200405032022Z')
if mibBuilder.loadTexts: netscreenVpnPhasetwoMibModule.setOrganization('Juniper Networks, Inc.')
nsVpnPhaseTwoCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 4, 6))
nsVpnPhTwoTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1), )
if mibBuilder.loadTexts: nsVpnPhTwoTable.setStatus('current')
nsVpnPhTwoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1), ).setIndexNames((0, "NETSCREEN-VPN-PHASETWO-MIB", "nsVpnPhTwoIndex"))
if mibBuilder.loadTexts: nsVpnPhTwoEntry.setStatus('current')
nsVpnPhTwoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoIndex.setStatus('current')
nsVpnPhTwoName = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoName.setStatus('current')
nsVpnPhTwoPFS = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoPFS.setStatus('current')
nsVpnPhTwoEncapMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ah", 0), ("esp", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoEncapMethod.setStatus('current')
nsVpnPhTwoESPEncryp = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("null", 0), ("des", 1), ("triple-des", 2), ("aes", 3), ("aes-192", 4), ("aes-256", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoESPEncryp.setStatus('current')
nsVpnPhTwoESPAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("null", 0), ("md5", 1), ("sha", 2), ("sha-256", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoESPAuth.setStatus('current')
nsVpnPhTwoAhAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("null", 0), ("md5", 1), ("sha", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoAhAuth.setStatus('current')
nsVpnPhTwoLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoLifetime.setStatus('current')
nsVpnPhTwoLifetimeMeasure = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("second", 0), ("minute", 1), ("hours", 2), ("days", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoLifetimeMeasure.setStatus('current')
nsVpnPhTwoLifetimeKb = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoLifetimeKb.setStatus('current')
nsVpnPhTwoVsys = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 6, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnPhTwoVsys.setStatus('current')
mibBuilder.exportSymbols("NETSCREEN-VPN-PHASETWO-MIB", nsVpnPhTwoName=nsVpnPhTwoName, nsVpnPhTwoLifetimeKb=nsVpnPhTwoLifetimeKb, nsVpnPhTwoVsys=nsVpnPhTwoVsys, nsVpnPhTwoAhAuth=nsVpnPhTwoAhAuth, nsVpnPhTwoEntry=nsVpnPhTwoEntry, nsVpnPhTwoIndex=nsVpnPhTwoIndex, nsVpnPhaseTwoCfg=nsVpnPhaseTwoCfg, nsVpnPhTwoEncapMethod=nsVpnPhTwoEncapMethod, nsVpnPhTwoESPEncryp=nsVpnPhTwoESPEncryp, nsVpnPhTwoESPAuth=nsVpnPhTwoESPAuth, nsVpnPhTwoLifetime=nsVpnPhTwoLifetime, nsVpnPhTwoLifetimeMeasure=nsVpnPhTwoLifetimeMeasure, nsVpnPhTwoPFS=nsVpnPhTwoPFS, netscreenVpnPhasetwoMibModule=netscreenVpnPhasetwoMibModule, PYSNMP_MODULE_ID=netscreenVpnPhasetwoMibModule, nsVpnPhTwoTable=nsVpnPhTwoTable)
