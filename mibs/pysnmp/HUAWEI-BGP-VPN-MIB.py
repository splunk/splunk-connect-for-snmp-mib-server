#
# PySNMP MIB module HUAWEI-BGP-VPN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-BGP-VPN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:31:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
ifName, ifIndex = mibBuilder.importSymbols("IF-MIB", "ifName", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
mplsL3VpnVrfPerfCurrNumRoutes, mplsL3VpnVrfConfMidRteThresh = mibBuilder.importSymbols("MPLS-L3VPN-STD-MIB", "mplsL3VpnVrfPerfCurrNumRoutes", "mplsL3VpnVrfConfMidRteThresh")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Bits, Unsigned32, IpAddress, Gauge32, TimeTicks, iso, NotificationType, ObjectIdentity, Counter64, MibIdentifier, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Unsigned32", "IpAddress", "Gauge32", "TimeTicks", "iso", "NotificationType", "ObjectIdentity", "Counter64", "MibIdentifier", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hwBgpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177))
hwBgpMIB.setRevisions(('2015-02-10 10:10', '2015-01-31 14:35', '2015-01-19 11:15', '2014-11-20 11:15', '2014-06-18 11:40', '2014-05-30 15:40', '2014-03-18 15:02', '2014-03-10 09:55', '2008-12-26 09:55',))
if mibBuilder.loadTexts: hwBgpMIB.setLastUpdated('201502101010Z')
if mibBuilder.loadTexts: hwBgpMIB.setOrganization('Huawei Technologies Co.,Ltd.')
class HWBgpAfi(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 25, 196))
    namedValues = NamedValues(("ipv4", 1), ("ipv6", 2), ("vpls", 25), ("l2vpn", 196))

class HWBgpSafi(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 65, 66, 128, 132))
    namedValues = NamedValues(("unicast", 1), ("multicast", 2), ("mpls", 4), ("mcast-vpn", 5), ("vpls", 65), ("mdt", 66), ("vpn", 128), ("route-target", 132))

class MplsL3VpnName(TextualConvention, OctetString):
    reference = "RFC 2685 Fox B., et al, 'Virtual Private Networks Identifier', September 1999."
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 31)

hwBgpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1))
hwBgpPeers = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1))
hwBgpPeerAddrFamilyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 1), )
if mibBuilder.loadTexts: hwBgpPeerAddrFamilyTable.setStatus('current')
hwBgpPeerAddrFamilyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 1, 1), ).setIndexNames((0, "HUAWEI-BGP-VPN-MIB", "hwBgpPeerInstanceId"), (0, "HUAWEI-BGP-VPN-MIB", "hwBgpPeerAddrFamilyAfi"), (0, "HUAWEI-BGP-VPN-MIB", "hwBgpPeerAddrFamilySafi"), (0, "HUAWEI-BGP-VPN-MIB", "hwBgpPeerType"), (0, "HUAWEI-BGP-VPN-MIB", "hwBgpPeerIPAddr"))
if mibBuilder.loadTexts: hwBgpPeerAddrFamilyEntry.setStatus('current')
hwBgpPeerInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hwBgpPeerInstanceId.setStatus('current')
hwBgpPeerAddrFamilyAfi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 1, 1, 2), HWBgpAfi())
if mibBuilder.loadTexts: hwBgpPeerAddrFamilyAfi.setStatus('current')
hwBgpPeerAddrFamilySafi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 1, 1, 3), HWBgpSafi())
if mibBuilder.loadTexts: hwBgpPeerAddrFamilySafi.setStatus('current')
hwBgpPeerType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 1, 1, 4), InetAddressType())
if mibBuilder.loadTexts: hwBgpPeerType.setStatus('current')
hwBgpPeerIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 1, 1, 5), InetAddress())
if mibBuilder.loadTexts: hwBgpPeerIPAddr.setStatus('current')
hwBgpPeerVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 1, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerVrfName.setStatus('current')
hwBgpPeerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 2), )
if mibBuilder.loadTexts: hwBgpPeerTable.setStatus('current')
hwBgpPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 2, 1), )
hwBgpPeerAddrFamilyEntry.registerAugmentions(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerEntry"))
hwBgpPeerEntry.setIndexNames(*hwBgpPeerAddrFamilyEntry.getIndexNames())
if mibBuilder.loadTexts: hwBgpPeerEntry.setStatus('current')
hwBgpPeerNegotiatedVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerNegotiatedVersion.setStatus('current')
hwBgpPeerRemoteAs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerRemoteAs.setStatus('current')
hwBgpPeerRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 2, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerRemoteAddr.setStatus('current')
hwBgpPeerState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("idle", 1), ("connect", 2), ("active", 3), ("opensent", 4), ("openconfirm", 5), ("established", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerState.setStatus('current')
hwBgpPeerFsmEstablishedCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBgpPeerFsmEstablishedCounter.setStatus('current')
hwBgpPeerFsmEstablishedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerFsmEstablishedTime.setStatus('current')
hwBgpPeerGRStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("peerNotBeingHelped", 1), ("peerRestarting", 2), ("peerFinishRestart", 3), ("peerHelping", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBgpPeerGRStatus.setStatus('current')
hwBgpPeerLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 2, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerLastError.setStatus('current')
hwBgpPeerUnAvaiReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerUnAvaiReason.setStatus('current')
hwBgpPeerRouteTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 3), )
if mibBuilder.loadTexts: hwBgpPeerRouteTable.setStatus('current')
hwBgpPeerRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 3, 1), )
hwBgpPeerAddrFamilyEntry.registerAugmentions(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerRouteEntry"))
hwBgpPeerRouteEntry.setIndexNames(*hwBgpPeerAddrFamilyEntry.getIndexNames())
if mibBuilder.loadTexts: hwBgpPeerRouteEntry.setStatus('current')
hwBgpPeerPrefixRcvCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerPrefixRcvCounter.setStatus('current')
hwBgpPeerPrefixActiveCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerPrefixActiveCounter.setStatus('current')
hwBgpPeerPrefixAdvCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerPrefixAdvCounter.setStatus('current')
hwBgpPeerMessageTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 4), )
if mibBuilder.loadTexts: hwBgpPeerMessageTable.setStatus('current')
hwBgpPeerMessageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 4, 1), )
hwBgpPeerAddrFamilyEntry.registerAugmentions(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerMessageEntry"))
hwBgpPeerMessageEntry.setIndexNames(*hwBgpPeerAddrFamilyEntry.getIndexNames())
if mibBuilder.loadTexts: hwBgpPeerMessageEntry.setStatus('current')
hwBgpPeerInTotalMsgCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerInTotalMsgCounter.setStatus('current')
hwBgpPeerOutTotalMsgCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerOutTotalMsgCounter.setStatus('current')
hwBgpPeerInOpenMsgCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerInOpenMsgCounter.setStatus('current')
hwBgpPeerInUpdateMsgCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerInUpdateMsgCounter.setStatus('current')
hwBgpPeerInNotificationMsgCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerInNotificationMsgCounter.setStatus('current')
hwBgpPeerInKeepAliveMsgCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerInKeepAliveMsgCounter.setStatus('current')
hwBgpPeerInRouteFreshMsgCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerInRouteFreshMsgCounter.setStatus('current')
hwBgpPeerOutOpenMsgCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerOutOpenMsgCounter.setStatus('current')
hwBgpPeerOutUpdateMsgCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerOutUpdateMsgCounter.setStatus('current')
hwBgpPeerOutNotificationMsgCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerOutNotificationMsgCounter.setStatus('current')
hwBgpPeerOutKeepAliveMsgCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerOutKeepAliveMsgCounter.setStatus('current')
hwBgpPeerOutRouteFreshMsgCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerOutRouteFreshMsgCounter.setStatus('current')
hwBgpPeerConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 5), )
if mibBuilder.loadTexts: hwBgpPeerConfigTable.setStatus('current')
hwBgpPeerConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 5, 1), )
hwBgpPeerAddrFamilyEntry.registerAugmentions(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerConfigEntry"))
hwBgpPeerConfigEntry.setIndexNames(*hwBgpPeerAddrFamilyEntry.getIndexNames())
if mibBuilder.loadTexts: hwBgpPeerConfigEntry.setStatus('current')
hwBgpPeerConfigRouteLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerConfigRouteLimitNum.setStatus('current')
hwBgpPeerConfigRouteLimitThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerConfigRouteLimitThreshold.setStatus('current')
hwBgpPeerSessionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 6), )
if mibBuilder.loadTexts: hwBgpPeerSessionTable.setStatus('current')
hwBgpPeerSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 6, 1), ).setIndexNames((0, "HUAWEI-BGP-VPN-MIB", "hwBgpPeerSessionVrfName"), (0, "HUAWEI-BGP-VPN-MIB", "hwBgpPeerSessionRemoteAddrType"), (0, "HUAWEI-BGP-VPN-MIB", "hwBgpPeerSessionRemoteAddr"))
if mibBuilder.loadTexts: hwBgpPeerSessionEntry.setStatus('current')
hwBgpPeerSessionVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 6, 1, 1), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBgpPeerSessionVrfName.setStatus('current')
hwBgpPeerSessionRemoteAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 6, 1, 2), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBgpPeerSessionRemoteAddrType.setStatus('current')
hwBgpPeerSessionRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 6, 1, 3), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBgpPeerSessionRemoteAddr.setStatus('current')
hwBgpPeerSessionLocalAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 6, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerSessionLocalAddrType.setStatus('current')
hwBgpPeerSessionLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 6, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerSessionLocalAddr.setStatus('current')
hwBgpPeerSessionUnavailableType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("uptodown", 1), ("alwaysdown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerSessionUnavailableType.setStatus('current')
hwBgpPeerSessionLocalIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 6, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerSessionLocalIfName.setStatus('current')
hwBgpPeerSessionReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 100))).clone(namedValues=NamedValues(("configurationLeadPeerDown", 1), ("receiveNotification", 2), ("receiveErrorPacket", 3), ("holdTimerExpire", 4), ("remotePeerNotReachable", 5), ("directConnectInterfaceDown", 6), ("routeLimit", 7), ("peerIsNotUpForASpecifiedPeriodOfTime", 8), ("alarmClear", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerSessionReason.setStatus('current')
hwBgpRoute = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 2))
hwBgpRouteLimitTable = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 2, 1))
hwBgpRouteLimitindex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2), ("ipv4vrf", 3), ("ipv6vrf", 4), ("ipv4public", 5), ("ipv6public", 6), ("l2ad", 7)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBgpRouteLimitindex.setStatus('current')
hwBgpRouteCurNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 2, 1, 2), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBgpRouteCurNum.setStatus('current')
hwBgpRouteMaxNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 2, 1, 3), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBgpRouteMaxNum.setStatus('current')
hwBgpRouteThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 2, 1, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBgpRouteThreshold.setStatus('current')
hwBgpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 3))
hwBgpPeerRouteNumThresholdExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 3, 1)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerConfigRouteLimitNum"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerConfigRouteLimitThreshold"))
if mibBuilder.loadTexts: hwBgpPeerRouteNumThresholdExceed.setStatus('current')
hwBgpPeerRouteNumThresholdClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 3, 2)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerConfigRouteLimitNum"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerConfigRouteLimitThreshold"))
if mibBuilder.loadTexts: hwBgpPeerRouteNumThresholdClear.setStatus('current')
hwBgpPeerGRStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 3, 3)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerGRStatus"))
if mibBuilder.loadTexts: hwBgpPeerGRStatusChange.setStatus('current')
hwBgpPeerUnavailable = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 3, 4)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerSessionLocalAddrType"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerSessionLocalAddr"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerSessionUnavailableType"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerSessionLocalIfName"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerSessionReason"))
if mibBuilder.loadTexts: hwBgpPeerUnavailable.setStatus('current')
hwBgpPeerAvailable = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 3, 5)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerSessionLocalAddrType"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerSessionLocalAddr"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerSessionUnavailableType"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerSessionLocalIfName"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerSessionReason"))
if mibBuilder.loadTexts: hwBgpPeerAvailable.setStatus('current')
hwBgpPeerRouteExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 3, 6)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerConfigRouteLimitNum"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerConfigRouteLimitThreshold"))
if mibBuilder.loadTexts: hwBgpPeerRouteExceed.setStatus('current')
hwBgpPeerRouteExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 3, 7)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerConfigRouteLimitNum"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerConfigRouteLimitThreshold"))
if mibBuilder.loadTexts: hwBgpPeerRouteExceedClear.setStatus('current')
hwL3vpnVrfRouteMidThreshCleared = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 3, 8)).setObjects(("MPLS-L3VPN-STD-MIB", "mplsL3VpnVrfPerfCurrNumRoutes"), ("MPLS-L3VPN-STD-MIB", "mplsL3VpnVrfConfMidRteThresh"))
if mibBuilder.loadTexts: hwL3vpnVrfRouteMidThreshCleared.setStatus('current')
hwBgpPeerEstablished = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 3, 9)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerLastError"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerState"))
if mibBuilder.loadTexts: hwBgpPeerEstablished.setStatus('current')
hwBgpPeerBackwardTransition = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 3, 10)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerLastError"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerState"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerUnAvaiReason"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwBgpPeerBackwardTransition.setStatus('current')
hwBgpRouteThresholdExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 3, 11)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpRouteLimitindex"), ("HUAWEI-BGP-VPN-MIB", "hwBgpRouteCurNum"), ("HUAWEI-BGP-VPN-MIB", "hwBgpRouteThreshold"), ("HUAWEI-BGP-VPN-MIB", "hwBgpRouteMaxNum"))
if mibBuilder.loadTexts: hwBgpRouteThresholdExceed.setStatus('current')
hwBgpRouteThresholdClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 3, 12)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpRouteLimitindex"))
if mibBuilder.loadTexts: hwBgpRouteThresholdClear.setStatus('current')
hwBgpRouteMaxExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 3, 13)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpRouteLimitindex"), ("HUAWEI-BGP-VPN-MIB", "hwBgpRouteMaxNum"))
if mibBuilder.loadTexts: hwBgpRouteMaxExceed.setStatus('current')
hwBgpRouteMaxClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 3, 14)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpRouteLimitindex"))
if mibBuilder.loadTexts: hwBgpRouteMaxClear.setStatus('current')
hwBgpPeerSessionExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 3, 15)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerSessionMaxNum"))
if mibBuilder.loadTexts: hwBgpPeerSessionExceed.setStatus('current')
hwBgpPeerSessionExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 3, 16)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerSessionMaxNum"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerSessionNum"))
if mibBuilder.loadTexts: hwBgpPeerSessionExceedClear.setStatus('current')
hwBgpScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 4))
hwBgpPeerSessionNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 4, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerSessionNum.setStatus('current')
hwIBgpPeerSessionNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 4, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIBgpPeerSessionNum.setStatus('current')
hwEBgpPeerSessionNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 4, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwEBgpPeerSessionNum.setStatus('current')
hwBgpPeerSessionMaxNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 1, 4, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpPeerSessionMaxNum.setStatus('current')
hwBgpVpnObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2))
hwBgpVpnTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1), )
if mibBuilder.loadTexts: hwBgpVpnTunnelTable.setStatus('current')
hwBgpVpnTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1), ).setIndexNames((0, "HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelVrfName"), (0, "HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelPublicNetNextHop"), (0, "HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelId"))
if mibBuilder.loadTexts: hwBgpVpnTunnelEntry.setStatus('current')
hwBgpVpnTunnelVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwBgpVpnTunnelVrfName.setStatus('current')
hwBgpVpnTunnelPublicNetNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: hwBgpVpnTunnelPublicNetNextHop.setStatus('current')
hwBgpVpnTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: hwBgpVpnTunnelId.setStatus('current')
hwBgpVpnTunnelDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpVpnTunnelDestAddr.setStatus('current')
hwBgpVpnTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpVpnTunnelType.setStatus('current')
hwBgpVpnTunnelSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpVpnTunnelSrcAddr.setStatus('current')
hwBgpVpnTunnelOutIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpVpnTunnelOutIfName.setStatus('current')
hwBgpVpnTunnelIsLoadBalance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpVpnTunnelIsLoadBalance.setStatus('current')
hwBgpVpnTunnelLspIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpVpnTunnelLspIndex.setStatus('current')
hwBgpVpnTunnelLspOutIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpVpnTunnelLspOutIfName.setStatus('current')
hwBgpVpnTunnelLspOutLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpVpnTunnelLspOutLabel.setStatus('current')
hwBgpVpnTunnelLspNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpVpnTunnelLspNextHop.setStatus('current')
hwBgpVpnTunnelLspFec = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1, 13), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpVpnTunnelLspFec.setStatus('current')
hwBgpVpnTunnelLspFecPfxLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpVpnTunnelLspFecPfxLen.setStatus('current')
hwBgpVpnTunnelLspIsBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpVpnTunnelLspIsBackup.setStatus('current')
hwBgpVpnTunnelSignalProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpVpnTunnelSignalProtocol.setStatus('current')
hwBgpVpnTunnelSessionTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpVpnTunnelSessionTunnelId.setStatus('current')
hwBgpVpnTunnelTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 1, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpVpnTunnelTunnelName.setStatus('current')
hwBgpVpnServiceIdTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 2), )
if mibBuilder.loadTexts: hwBgpVpnServiceIdTable.setStatus('current')
hwBgpVpnServiceIdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 2, 1), ).setIndexNames((0, "HUAWEI-BGP-VPN-MIB", "hwBgpVpnServiceIdVrfName"))
if mibBuilder.loadTexts: hwBgpVpnServiceIdEntry.setStatus('current')
hwBgpVpnServiceIdVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: hwBgpVpnServiceIdVrfName.setStatus('current')
hwBgpVpnServiceIdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 2, 1, 2), Unsigned32().clone(0)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBgpVpnServiceIdValue.setStatus('current')
hwBgpVpnScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 3))
hwConfiguredVrfs = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 3, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwConfiguredVrfs.setStatus('current')
hwConfiguredIpv4Vrfs = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 3, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwConfiguredIpv4Vrfs.setStatus('current')
hwConfiguredIpv6Vrfs = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 2, 3, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwConfiguredIpv6Vrfs.setStatus('current')
hwBgpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 3))
hwBgpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 3, 1))
hwBgpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 3, 1, 1)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpPeer"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerRoute"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerMessage"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBgpCompliance = hwBgpCompliance.setStatus('current')
hwBgpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 3, 2))
hwBgpPeerAddrFamily = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 3, 2, 1)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerVrfName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBgpPeerAddrFamily = hwBgpPeerAddrFamily.setStatus('current')
hwBgpPeer = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 3, 2, 2)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerNegotiatedVersion"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerRemoteAs"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerRemoteAddr"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerState"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerFsmEstablishedCounter"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerGRStatus"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerFsmEstablishedTime"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerLastError"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerUnAvaiReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBgpPeer = hwBgpPeer.setStatus('current')
hwBgpPeerRoute = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 3, 2, 3)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerPrefixRcvCounter"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerPrefixActiveCounter"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerPrefixAdvCounter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBgpPeerRoute = hwBgpPeerRoute.setStatus('current')
hwBgpPeerMessage = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 3, 2, 4)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerInTotalMsgCounter"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerOutTotalMsgCounter"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerInOpenMsgCounter"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerInUpdateMsgCounter"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerInNotificationMsgCounter"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerInKeepAliveMsgCounter"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerInRouteFreshMsgCounter"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerOutOpenMsgCounter"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerOutUpdateMsgCounter"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerOutNotificationMsgCounter"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerOutKeepAliveMsgCounter"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerOutRouteFreshMsgCounter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBgpPeerMessage = hwBgpPeerMessage.setStatus('current')
hwBgpPeerConfig = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 3, 2, 5)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerConfigRouteLimitNum"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerConfigRouteLimitThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBgpPeerConfig = hwBgpPeerConfig.setStatus('current')
hwBgpTrap = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 3, 2, 6)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpPeerRouteNumThresholdExceed"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerRouteNumThresholdClear"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerGRStatusChange"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerEstablished"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerBackwardTransition"), ("HUAWEI-BGP-VPN-MIB", "hwL3vpnVrfRouteMidThreshCleared"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerUnavailable"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerRouteExceed"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerRouteExceedClear"), ("HUAWEI-BGP-VPN-MIB", "hwBgpPeerAvailable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBgpTrap = hwBgpTrap.setStatus('current')
hwBgpVpnConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 5))
hwBgpVpnCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 5, 1))
hwBgpVpnCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 5, 1, 1)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelGroup"), ("HUAWEI-BGP-VPN-MIB", "hwBgpVpnServiceIdGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBgpVpnCompliance = hwBgpVpnCompliance.setStatus('current')
hwBgpVpnExtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 5, 2))
hwBgpVpnTunnelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 5, 2, 1)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelDestAddr"), ("HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelType"), ("HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelSrcAddr"), ("HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelIsLoadBalance"), ("HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelLspIndex"), ("HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelLspOutLabel"), ("HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelLspNextHop"), ("HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelLspFec"), ("HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelLspFecPfxLen"), ("HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelOutIfName"), ("HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelLspOutIfName"), ("HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelLspIsBackup"), ("HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelTunnelName"), ("HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelSessionTunnelId"), ("HUAWEI-BGP-VPN-MIB", "hwBgpVpnTunnelSignalProtocol"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBgpVpnTunnelGroup = hwBgpVpnTunnelGroup.setStatus('current')
hwBgpVpnServiceIdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 5, 2, 2)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwBgpVpnServiceIdValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBgpVpnServiceIdGroup = hwBgpVpnServiceIdGroup.setStatus('current')
hwTnl2VpnTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 6))
hwTnl2VpnTrapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 6, 1), )
if mibBuilder.loadTexts: hwTnl2VpnTrapTable.setStatus('current')
hwTnl2VpnTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 6, 1, 1), ).setIndexNames((0, "HUAWEI-BGP-VPN-MIB", "hwVpnId"))
if mibBuilder.loadTexts: hwTnl2VpnTrapEntry.setStatus('current')
hwVpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 6, 1, 1, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwVpnId.setStatus('current')
hwVpnPublicNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 6, 1, 1, 2), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwVpnPublicNextHop.setStatus('current')
hwTunnelReachablityEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 6, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwTunnelReachablityEvent.setStatus('current')
hwVpnTrapCkeyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 6, 1, 1, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwVpnTrapCkeyValue.setStatus('current')
hwTnl2VpnTrapConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 7))
hwTnl2VpnTrapConformances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 7, 1))
hwTnl2VpnTrapCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 7, 1, 1)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwTnl2VpnTrapGroup"), ("HUAWEI-BGP-VPN-MIB", "hwTnl2VpnTrapNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTnl2VpnTrapCompliance = hwTnl2VpnTrapCompliance.setStatus('current')
hwTnl2VpnTrapGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 7, 2))
hwTnl2VpnTrapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 7, 2, 1)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwVpnId"), ("HUAWEI-BGP-VPN-MIB", "hwVpnPublicNextHop"), ("HUAWEI-BGP-VPN-MIB", "hwVpnTrapCkeyValue"), ("HUAWEI-BGP-VPN-MIB", "hwTunnelReachablityEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTnl2VpnTrapGroup = hwTnl2VpnTrapGroup.setStatus('current')
hwTnl2VpnTrapNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 7, 2, 2)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwTnl2VpnTrapEvent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwTnl2VpnTrapNotificationGroup = hwTnl2VpnTrapNotificationGroup.setStatus('current')
hwTnl2VpnTrapNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 8))
hwTnl2VpnTrapEvent = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 8, 1)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwVpnId"), ("HUAWEI-BGP-VPN-MIB", "hwVpnPublicNextHop"), ("HUAWEI-BGP-VPN-MIB", "hwVpnTrapCkeyValue"), ("HUAWEI-BGP-VPN-MIB", "hwTunnelReachablityEvent"))
if mibBuilder.loadTexts: hwTnl2VpnTrapEvent.setStatus('current')
hwPeerDistributeObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 9))
hwBgpTotalRouteNumber = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 9, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwBgpTotalRouteNumber.setStatus('current')
hwOsNodeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 9, 2), )
if mibBuilder.loadTexts: hwOsNodeTable.setStatus('current')
hwOsNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 9, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hwOsNodeEntry.setStatus('current')
hwCurrSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 9, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCurrSlot.setStatus('current')
hwPeerNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 9, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPeerNumber.setStatus('current')
hwRouteNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 9, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRouteNumber.setStatus('current')
hwDistributeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 9, 3), )
if mibBuilder.loadTexts: hwDistributeTable.setStatus('current')
hwDistributeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 9, 3, 1), ).setIndexNames((0, "HUAWEI-BGP-VPN-MIB", "hwDistributeName"))
if mibBuilder.loadTexts: hwDistributeEntry.setStatus('current')
hwDistributeLocId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 9, 3, 1, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwDistributeLocId.setStatus('current')
hwDistributeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 9, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwDistributeName.setStatus('current')
hwMigrateSrcSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 9, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMigrateSrcSlot.setStatus('current')
hwMigrateDestSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 9, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMigrateDestSlot.setStatus('current')
hwMigrateReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 9, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("memoryoverload", 1), ("cpuoverload", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMigrateReason.setStatus('current')
hwPeerDistributeTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 9, 4))
hwRpkiObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 11))
hwRpkiSessions = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 11, 1))
hwRpkiSessionTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 11, 1, 1), )
if mibBuilder.loadTexts: hwRpkiSessionTable.setStatus('current')
hwRpkiSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 11, 1, 1, 1), ).setIndexNames((0, "HUAWEI-BGP-VPN-MIB", "hwRpkiSessionVrfName"), (0, "HUAWEI-BGP-VPN-MIB", "hwRpkiSessionType"), (0, "HUAWEI-BGP-VPN-MIB", "hwSessionIPAddr"))
if mibBuilder.loadTexts: hwRpkiSessionEntry.setStatus('current')
hwRpkiSessionVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 11, 1, 1, 1, 1), MplsL3VpnName())
if mibBuilder.loadTexts: hwRpkiSessionVrfName.setStatus('current')
hwRpkiSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 11, 1, 1, 1, 2), InetAddressType())
if mibBuilder.loadTexts: hwRpkiSessionType.setStatus('current')
hwSessionIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 11, 1, 1, 1, 3), InetAddress())
if mibBuilder.loadTexts: hwSessionIPAddr.setStatus('current')
hwRpkiSessionRoaLimitNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 11, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwRpkiSessionRoaLimitNum.setStatus('current')
hwRpkiTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 11, 2))
hwRpkiSessionRoaExceed = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 11, 2, 1)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwRpkiSessionRoaLimitNum"))
if mibBuilder.loadTexts: hwRpkiSessionRoaExceed.setStatus('current')
hwRpkiSessionRoaExceedClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 11, 2, 2)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwRpkiSessionRoaLimitNum"))
if mibBuilder.loadTexts: hwRpkiSessionRoaExceedClear.setStatus('current')
hwRpkiConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 11, 3))
hwRpkiCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 11, 3, 1))
hwRpkiCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 11, 3, 1, 1)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwRpkiSession"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRpkiCompliance = hwRpkiCompliance.setStatus('current')
hwRpkiGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 11, 3, 2))
hwRpkiSession = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 11, 3, 2, 1)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwRpkiSessionVrfName"), ("HUAWEI-BGP-VPN-MIB", "hwRpkiSessionType"), ("HUAWEI-BGP-VPN-MIB", "hwSessionIPAddr"), ("HUAWEI-BGP-VPN-MIB", "hwRpkiSessionRoaLimitNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRpkiSession = hwRpkiSession.setStatus('current')
hwRpkiTrap = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 177, 11, 3, 2, 2)).setObjects(("HUAWEI-BGP-VPN-MIB", "hwRpkiSessionRoaExceed"), ("HUAWEI-BGP-VPN-MIB", "hwRpkiSessionRoaExceedClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwRpkiTrap = hwRpkiTrap.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-BGP-VPN-MIB", hwBgpPeerSessionRemoteAddr=hwBgpPeerSessionRemoteAddr, hwTnl2VpnTrapGroup=hwTnl2VpnTrapGroup, hwBgpPeerInKeepAliveMsgCounter=hwBgpPeerInKeepAliveMsgCounter, hwBgpPeerConfigRouteLimitNum=hwBgpPeerConfigRouteLimitNum, hwBgpTraps=hwBgpTraps, hwBgpVpnTunnelLspOutLabel=hwBgpVpnTunnelLspOutLabel, hwOsNodeTable=hwOsNodeTable, hwBgpPeerConfigTable=hwBgpPeerConfigTable, hwBgpPeerSessionLocalAddrType=hwBgpPeerSessionLocalAddrType, hwBgpPeerSessionVrfName=hwBgpPeerSessionVrfName, HWBgpSafi=HWBgpSafi, hwBgpPeerEstablished=hwBgpPeerEstablished, hwPeerDistributeObjects=hwPeerDistributeObjects, hwBgpPeerOutOpenMsgCounter=hwBgpPeerOutOpenMsgCounter, hwBgpPeerType=hwBgpPeerType, hwRpkiSessionRoaLimitNum=hwRpkiSessionRoaLimitNum, hwBgpPeerSessionExceedClear=hwBgpPeerSessionExceedClear, hwBgpRouteMaxNum=hwBgpRouteMaxNum, hwBgpPeerMessageEntry=hwBgpPeerMessageEntry, hwBgpRouteThreshold=hwBgpRouteThreshold, hwRouteNumber=hwRouteNumber, hwBgpPeerTable=hwBgpPeerTable, hwBgpPeer=hwBgpPeer, hwDistributeTable=hwDistributeTable, hwTunnelReachablityEvent=hwTunnelReachablityEvent, hwRpkiCompliance=hwRpkiCompliance, hwTnl2VpnTrapConformance=hwTnl2VpnTrapConformance, hwMigrateSrcSlot=hwMigrateSrcSlot, hwBgpPeerInstanceId=hwBgpPeerInstanceId, hwBgpPeerRouteTable=hwBgpPeerRouteTable, hwBgpPeerSessionMaxNum=hwBgpPeerSessionMaxNum, hwBgpTrap=hwBgpTrap, hwBgpPeerSessionExceed=hwBgpPeerSessionExceed, PYSNMP_MODULE_ID=hwBgpMIB, hwBgpPeerRouteNumThresholdExceed=hwBgpPeerRouteNumThresholdExceed, hwBgpMIB=hwBgpMIB, hwBgpVpnTunnelSessionTunnelId=hwBgpVpnTunnelSessionTunnelId, hwVpnTrapCkeyValue=hwVpnTrapCkeyValue, hwBgpPeerAddrFamilyEntry=hwBgpPeerAddrFamilyEntry, hwBgpPeerOutUpdateMsgCounter=hwBgpPeerOutUpdateMsgCounter, hwBgpVpnExtGroups=hwBgpVpnExtGroups, hwBgpPeerInOpenMsgCounter=hwBgpPeerInOpenMsgCounter, hwBgpScalars=hwBgpScalars, hwBgpVpnCompliances=hwBgpVpnCompliances, hwTnl2VpnTrapConformances=hwTnl2VpnTrapConformances, hwBgpPeerAvailable=hwBgpPeerAvailable, hwTnl2VpnTrapGroups=hwTnl2VpnTrapGroups, hwBgpPeerUnAvaiReason=hwBgpPeerUnAvaiReason, hwBgpRouteLimitindex=hwBgpRouteLimitindex, hwRpkiSessionVrfName=hwRpkiSessionVrfName, hwBgpPeerPrefixActiveCounter=hwBgpPeerPrefixActiveCounter, hwBgpVpnTunnelLspFecPfxLen=hwBgpVpnTunnelLspFecPfxLen, hwRpkiConformance=hwRpkiConformance, hwBgpVpnCompliance=hwBgpVpnCompliance, hwBgpRouteLimitTable=hwBgpRouteLimitTable, hwBgpVpnScalars=hwBgpVpnScalars, hwBgpPeerUnavailable=hwBgpPeerUnavailable, hwBgpPeerInUpdateMsgCounter=hwBgpPeerInUpdateMsgCounter, hwVpnPublicNextHop=hwVpnPublicNextHop, hwBgpPeerPrefixAdvCounter=hwBgpPeerPrefixAdvCounter, hwBgpPeerConfigEntry=hwBgpPeerConfigEntry, hwMigrateDestSlot=hwMigrateDestSlot, hwPeerNumber=hwPeerNumber, hwTnl2VpnTrapObjects=hwTnl2VpnTrapObjects, hwBgpVpnTunnelLspFec=hwBgpVpnTunnelLspFec, hwBgpVpnServiceIdVrfName=hwBgpVpnServiceIdVrfName, hwBgpVpnTunnelGroup=hwBgpVpnTunnelGroup, hwBgpPeerGRStatus=hwBgpPeerGRStatus, hwSessionIPAddr=hwSessionIPAddr, hwBgpRouteThresholdClear=hwBgpRouteThresholdClear, hwBgpPeerRemoteAs=hwBgpPeerRemoteAs, hwBgpObjects=hwBgpObjects, hwConfiguredIpv6Vrfs=hwConfiguredIpv6Vrfs, HWBgpAfi=HWBgpAfi, hwBgpPeerMessageTable=hwBgpPeerMessageTable, hwTnl2VpnTrapCompliance=hwTnl2VpnTrapCompliance, hwBgpPeerOutTotalMsgCounter=hwBgpPeerOutTotalMsgCounter, hwDistributeName=hwDistributeName, hwBgpPeerRemoteAddr=hwBgpPeerRemoteAddr, hwBgpVpnServiceIdValue=hwBgpVpnServiceIdValue, hwConfiguredIpv4Vrfs=hwConfiguredIpv4Vrfs, hwBgpPeerOutKeepAliveMsgCounter=hwBgpPeerOutKeepAliveMsgCounter, hwBgpRouteThresholdExceed=hwBgpRouteThresholdExceed, hwBgpVpnTunnelPublicNetNextHop=hwBgpVpnTunnelPublicNetNextHop, hwBgpVpnTunnelSignalProtocol=hwBgpVpnTunnelSignalProtocol, hwBgpPeerFsmEstablishedTime=hwBgpPeerFsmEstablishedTime, hwRpkiSessionType=hwRpkiSessionType, hwBgpVpnServiceIdGroup=hwBgpVpnServiceIdGroup, MplsL3VpnName=MplsL3VpnName, hwBgpPeerNegotiatedVersion=hwBgpPeerNegotiatedVersion, hwBgpPeerSessionEntry=hwBgpPeerSessionEntry, hwBgpPeerSessionRemoteAddrType=hwBgpPeerSessionRemoteAddrType, hwBgpPeerAddrFamilyTable=hwBgpPeerAddrFamilyTable, hwBgpPeerEntry=hwBgpPeerEntry, hwBgpPeerSessionLocalAddr=hwBgpPeerSessionLocalAddr, hwRpkiSessionRoaExceed=hwRpkiSessionRoaExceed, hwRpkiSessions=hwRpkiSessions, hwRpkiTraps=hwRpkiTraps, hwBgpPeerInRouteFreshMsgCounter=hwBgpPeerInRouteFreshMsgCounter, hwBgpPeerAddrFamily=hwBgpPeerAddrFamily, hwRpkiSessionTable=hwRpkiSessionTable, hwDistributeLocId=hwDistributeLocId, hwBgpVpnTunnelVrfName=hwBgpVpnTunnelVrfName, hwBgpGroups=hwBgpGroups, hwBgpPeerOutRouteFreshMsgCounter=hwBgpPeerOutRouteFreshMsgCounter, hwBgpPeerInNotificationMsgCounter=hwBgpPeerInNotificationMsgCounter, hwBgpPeerAddrFamilyAfi=hwBgpPeerAddrFamilyAfi, hwBgpVpnTunnelTable=hwBgpVpnTunnelTable, hwBgpPeerFsmEstablishedCounter=hwBgpPeerFsmEstablishedCounter, hwBgpPeerPrefixRcvCounter=hwBgpPeerPrefixRcvCounter, hwBgpPeerRoute=hwBgpPeerRoute, hwTnl2VpnTrapTable=hwTnl2VpnTrapTable, hwBgpRouteCurNum=hwBgpRouteCurNum, hwDistributeEntry=hwDistributeEntry, hwBgpVpnTunnelLspNextHop=hwBgpVpnTunnelLspNextHop, hwBgpVpnServiceIdTable=hwBgpVpnServiceIdTable, hwBgpPeerSessionNum=hwBgpPeerSessionNum, hwCurrSlot=hwCurrSlot, hwBgpRouteMaxClear=hwBgpRouteMaxClear, hwRpkiTrap=hwRpkiTrap, hwBgpCompliance=hwBgpCompliance, hwBgpVpnTunnelLspIsBackup=hwBgpVpnTunnelLspIsBackup, hwBgpVpnTunnelType=hwBgpVpnTunnelType, hwBgpPeerSessionReason=hwBgpPeerSessionReason, hwBgpPeerRouteExceed=hwBgpPeerRouteExceed, hwL3vpnVrfRouteMidThreshCleared=hwL3vpnVrfRouteMidThreshCleared, hwBgpPeerInTotalMsgCounter=hwBgpPeerInTotalMsgCounter, hwBgpPeerVrfName=hwBgpPeerVrfName, hwBgpVpnTunnelLspOutIfName=hwBgpVpnTunnelLspOutIfName, hwMigrateReason=hwMigrateReason, hwBgpPeerSessionUnavailableType=hwBgpPeerSessionUnavailableType, hwRpkiSession=hwRpkiSession, hwBgpRoute=hwBgpRoute, hwIBgpPeerSessionNum=hwIBgpPeerSessionNum, hwBgpPeerBackwardTransition=hwBgpPeerBackwardTransition, hwBgpVpnTunnelIsLoadBalance=hwBgpVpnTunnelIsLoadBalance, hwBgpPeerState=hwBgpPeerState, hwBgpVpnTunnelTunnelName=hwBgpVpnTunnelTunnelName, hwBgpPeerSessionTable=hwBgpPeerSessionTable, hwBgpVpnConformance=hwBgpVpnConformance, hwBgpVpnObjects=hwBgpVpnObjects, hwTnl2VpnTrapEntry=hwTnl2VpnTrapEntry, hwRpkiObjects=hwRpkiObjects, hwTnl2VpnTrapNotificationGroup=hwTnl2VpnTrapNotificationGroup, hwBgpCompliances=hwBgpCompliances, hwVpnId=hwVpnId, hwRpkiSessionEntry=hwRpkiSessionEntry, hwBgpVpnTunnelEntry=hwBgpVpnTunnelEntry, hwBgpPeerRouteEntry=hwBgpPeerRouteEntry, hwBgpPeerMessage=hwBgpPeerMessage, hwBgpPeerIPAddr=hwBgpPeerIPAddr, hwBgpPeerOutNotificationMsgCounter=hwBgpPeerOutNotificationMsgCounter, hwBgpConformance=hwBgpConformance, hwBgpVpnTunnelOutIfName=hwBgpVpnTunnelOutIfName, hwBgpPeerConfig=hwBgpPeerConfig, hwBgpVpnTunnelSrcAddr=hwBgpVpnTunnelSrcAddr, hwBgpPeerRouteNumThresholdClear=hwBgpPeerRouteNumThresholdClear, hwBgpVpnTunnelLspIndex=hwBgpVpnTunnelLspIndex, hwTnl2VpnTrapNotification=hwTnl2VpnTrapNotification, hwEBgpPeerSessionNum=hwEBgpPeerSessionNum, hwBgpTotalRouteNumber=hwBgpTotalRouteNumber, hwBgpVpnServiceIdEntry=hwBgpVpnServiceIdEntry, hwRpkiGroups=hwRpkiGroups, hwBgpPeerConfigRouteLimitThreshold=hwBgpPeerConfigRouteLimitThreshold, hwTnl2VpnTrapEvent=hwTnl2VpnTrapEvent, hwOsNodeEntry=hwOsNodeEntry, hwBgpPeers=hwBgpPeers, hwBgpVpnTunnelDestAddr=hwBgpVpnTunnelDestAddr, hwBgpPeerLastError=hwBgpPeerLastError, hwPeerDistributeTraps=hwPeerDistributeTraps, hwBgpRouteMaxExceed=hwBgpRouteMaxExceed, hwBgpPeerRouteExceedClear=hwBgpPeerRouteExceedClear, hwConfiguredVrfs=hwConfiguredVrfs, hwBgpPeerAddrFamilySafi=hwBgpPeerAddrFamilySafi, hwRpkiCompliances=hwRpkiCompliances, hwBgpPeerSessionLocalIfName=hwBgpPeerSessionLocalIfName, hwBgpPeerGRStatusChange=hwBgpPeerGRStatusChange, hwBgpVpnTunnelId=hwBgpVpnTunnelId, hwRpkiSessionRoaExceedClear=hwRpkiSessionRoaExceedClear)
