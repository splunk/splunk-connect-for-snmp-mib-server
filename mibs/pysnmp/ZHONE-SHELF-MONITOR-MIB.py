#
# PySNMP MIB module ZHONE-SHELF-MONITOR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZHONE-SHELF-MONITOR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:41:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Integer32, IpAddress, iso, Gauge32, Unsigned32, Bits, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, TimeTicks, Counter32, MibIdentifier, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Integer32", "IpAddress", "iso", "Gauge32", "Unsigned32", "Bits", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "TimeTicks", "Counter32", "MibIdentifier", "NotificationType")
TimeStamp, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TruthValue", "TextualConvention", "DisplayString")
zhoneShelf, zhoneSlotIndex, zhoneShelfIndex, zhoneModules = mibBuilder.importSymbols("Zhone", "zhoneShelf", "zhoneSlotIndex", "zhoneShelfIndex", "zhoneModules")
ZhoneCardType, ZhoneAdminString, ZhoneCardLineType = mibBuilder.importSymbols("Zhone-TC", "ZhoneCardType", "ZhoneAdminString", "ZhoneCardLineType")
zhoneShelfMonitorModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 6, 7))
zhoneShelfMonitorModule.setRevisions(('2011-12-02 11:14', '2011-05-24 10:25', '2010-08-10 15:08', '2006-08-31 10:58', '2004-05-11 22:03', '2003-10-28 15:31', '2003-09-17 18:56', '2003-07-16 16:30', '2002-08-19 10:02', '2002-07-09 10:36', '2002-05-28 18:08', '2002-02-12 09:54', '2001-09-10 18:34', '2001-09-10 16:16', '2000-10-24 16:18', '2000-10-13 16:42', '2000-09-27 16:25', '2000-09-12 11:26',))
if mibBuilder.loadTexts: zhoneShelfMonitorModule.setLastUpdated('201112021020Z')
if mibBuilder.loadTexts: zhoneShelfMonitorModule.setOrganization('Zhone Technologies, Inc')
shelfDataTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 2, 1), )
if mibBuilder.loadTexts: shelfDataTable.setStatus('current')
shelfDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 2, 1, 1), ).setIndexNames((0, "Zhone", "zhoneShelfIndex"))
if mibBuilder.loadTexts: shelfDataEntry.setStatus('current')
shelfMfgCLEICode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 1, 1, 1), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfMfgCLEICode.setStatus('current')
shelfMonitorSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 1, 1, 2), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfMonitorSerialNumber.setStatus('current')
shelfMonitorRevisionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 1, 1, 3), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfMonitorRevisionCode.setStatus('current')
shelfBkplaneSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 1, 1, 4), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBkplaneSerialNumber.setStatus('current')
shelfBkplaneRevisionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 1, 1, 5), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBkplaneRevisionCode.setStatus('current')
shelfFanTraySerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 1, 1, 6), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfFanTraySerialNumber.setStatus('current')
shelfFanTrayRevisionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 1, 1, 7), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfFanTrayRevisionCode.setStatus('current')
shelfSlotCount = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfSlotCount.setStatus('current')
shelfFeatureBits = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfFeatureBits.setStatus('current')
shelfFanTrayType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 1, 1, 10), ZhoneCardType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfFanTrayType.setStatus('current')
shelfIOAlarmBoardPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 1, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfIOAlarmBoardPresent.setStatus('current')
shelfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 2, 2), )
if mibBuilder.loadTexts: shelfStatusTable.setStatus('current')
shelfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 2, 2, 1), ).setIndexNames((0, "Zhone", "zhoneShelfIndex"))
if mibBuilder.loadTexts: shelfStatusEntry.setStatus('current')
shelfAPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("powerOk", 1), ("powerNotOk", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfAPowerStatus.setStatus('current')
shelfBPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("powerOk", 1), ("powerNotOk", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBPowerStatus.setStatus('current')
shelfTemperatureStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("aboveNormal", 2), ("belowNormal", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfTemperatureStatus.setStatus('current')
shelfFanTrayStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("operational", 1), ("partiallyOperational", 2), ("notOperational", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfFanTrayStatus.setStatus('current')
shelfAlarmContactsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 2, 1, 5), Bits().clone(namedValues=NamedValues(("contactAlarm0", 0), ("contactAlarm1", 1), ("contactAlarm2", 2), ("contactAlarm3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfAlarmContactsStatus.setStatus('current')
shelfCardStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 2, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCardStatus.setStatus('current')
shelfLedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 2, 1, 7), Bits().clone(namedValues=NamedValues(("battAPower", 0), ("battBPower", 1), ("fanAlarm", 2), ("minorAlarm", 3), ("majorAlarm", 4), ("criticalAlarm", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfLedStatus.setStatus('current')
shelfAdminResets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfAdminResets.setStatus('current')
shelfFaultResets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfFaultResets.setStatus('current')
shelfPowerResets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfPowerResets.setStatus('current')
shelfCPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("powerOk", 1), ("powerNotOk", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfCPowerStatus.setStatus('current')
shelfDPowerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("powerOk", 1), ("powerNotOk", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfDPowerStatus.setStatus('current')
shelfBatteryAVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 2, 1, 13), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBatteryAVoltage.setStatus('current')
shelfBatteryBVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 2, 1, 14), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfBatteryBVoltage.setStatus('current')
shelfChassisReturnVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 2, 1, 15), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfChassisReturnVoltage.setStatus('current')
shelfFanTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 2, 3), )
if mibBuilder.loadTexts: shelfFanTable.setStatus('current')
shelfFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 2, 3, 1), ).setIndexNames((0, "Zhone", "zhoneShelfIndex"), (0, "ZHONE-SHELF-MONITOR-MIB", "shelfFanIndex"))
if mibBuilder.loadTexts: shelfFanEntry.setStatus('current')
shelfFanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: shelfFanIndex.setStatus('current')
shelfFanSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfFanSpeed.setStatus('current')
shelfFanLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 3, 1, 3), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfFanLocation.setStatus('current')
shelfFanLowSpeedThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfFanLowSpeedThreshold.setStatus('current')
shelfTemperatureTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 2, 4), )
if mibBuilder.loadTexts: shelfTemperatureTable.setStatus('current')
shelfTemperatureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 2, 4, 1), ).setIndexNames((0, "Zhone", "zhoneShelfIndex"), (0, "ZHONE-SHELF-MONITOR-MIB", "shelfTemperatureIndex"))
if mibBuilder.loadTexts: shelfTemperatureEntry.setStatus('current')
shelfTemperatureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: shelfTemperatureIndex.setStatus('current')
shelfTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfTemperature.setStatus('current')
shelfTemperatureLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 4, 1, 3), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfTemperatureLocation.setStatus('current')
shelfTemperatureHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfTemperatureHighThreshold.setStatus('current')
shelfTemperatureLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: shelfTemperatureLowThreshold.setStatus('current')
shelfCardTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 3, 2, 5), )
if mibBuilder.loadTexts: shelfCardTable.setStatus('current')
shelfCardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 3, 2, 5, 1), ).setIndexNames((0, "Zhone", "zhoneShelfIndex"), (0, "Zhone", "zhoneSlotIndex"))
if mibBuilder.loadTexts: shelfCardEntry.setStatus('current')
cardType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 5, 1, 1), ZhoneCardType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardType.setStatus('current')
cardSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 5, 1, 2), ZhoneCardType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardSubType.setStatus('current')
cardLineType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 5, 1, 3), ZhoneCardLineType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardLineType.setStatus('current')
cardVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 5, 1, 4), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardVersion.setStatus('current')
cardEepromVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 5, 1, 5), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardEepromVersion.setStatus('current')
cardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 5, 1, 6), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardSerialNumber.setStatus('current')
cardCLEICode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 5, 1, 7), ZhoneAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardCLEICode.setStatus('current')
cardFeatureBits = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 5, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardFeatureBits.setStatus('current')
cardState = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("cardStateNone", 0), ("cardStateBooting", 1), ("cardStatePost", 2), ("cardStateLoading", 3), ("cardStateConfiguring", 4), ("cardStateRunning", 5), ("cardStateResetHold", 6), ("cardStateDumping", 7), ("cardStateFault", 8), ("cardStateReset", 9), ("cardNotPresent", 10), ("cardNotProvisioned", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardState.setStatus('current')
cardAdminResets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 5, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardAdminResets.setStatus('current')
cardFaultResets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 5, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardFaultResets.setStatus('current')
cardReboot = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 3, 2, 5, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cardReboot.setStatus('current')
zhoneShelfStatus = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35))).clone(namedValues=NamedValues(("leftOutletTempOverLimit", 1), ("leftOutletTempNormal", 2), ("rightOutletTempOverLimit", 3), ("rightOutletTempNormal", 4), ("powerSupplyAFailure", 5), ("powerSupplyAOK", 6), ("powerSupplyBFailure", 7), ("powerSupplyBOK", 8), ("fanSpeedError", 9), ("shelfControllerFault", 10), ("tempOverLimit", 11), ("tempUnderLimit", 12), ("tempNormal", 13), ("fanPowerSupplyAFailure", 14), ("fanPowerSupplyAOK", 15), ("fanPowerSupplyBFailure", 16), ("fanPowerSupplyBOK", 17), ("fanTrayAdded", 18), ("fanTrayRemoved", 19), ("fanSpeedOK", 20), ("fanAFailure", 21), ("fanAOK", 22), ("fanBFailure", 23), ("fanBOK", 24), ("fanPowerSupplyCFailure", 25), ("fanPowerSupplyCOK", 26), ("fanPowerSupplyDFailure", 27), ("fanPowerSupplyDOK", 28), ("shelfControllerCleared", 29), ("fanCFailure", 30), ("fanCOK", 31), ("fanDFailure", 32), ("fanDOK", 33), ("fanEFailure", 34), ("fanEOK", 35)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneShelfStatus.setStatus('current')
zhoneCardStatus = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("cardRemoved", 1), ("cardAdded", 2), ("cardTimeoutError", 3), ("cardFaultError", 4), ("cardReset", 5), ("cardRunning", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneCardStatus.setStatus('current')
zhoneShelfStatusLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 2, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneShelfStatusLastChange.setStatus('current')
zhoneCardStatusLastChange = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 2, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhoneCardStatusLastChange.setStatus('current')
zhoneTrapShelfMonitorV2Traps = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 3, 2, 12))
if mibBuilder.loadTexts: zhoneTrapShelfMonitorV2Traps.setStatus('current')
zhoneTrapShelfMonitorGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5504, 3, 2, 12, 1)).setObjects(("ZHONE-SHELF-MONITOR-MIB", "zhoneTrapShelfStatusChange"), ("ZHONE-SHELF-MONITOR-MIB", "zhoneTrapCardStatusChange"), ("ZHONE-SHELF-MONITOR-MIB", "zhoneTrapCardVersionCheck"), ("ZHONE-SHELF-MONITOR-MIB", "zhoneTrapFlashCardStatusChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneTrapShelfMonitorGroup = zhoneTrapShelfMonitorGroup.setStatus('current')
zhoneTrapShelfStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 2, 12, 2)).setObjects(("ZHONE-SHELF-MONITOR-MIB", "zhoneShelfStatus"))
if mibBuilder.loadTexts: zhoneTrapShelfStatusChange.setStatus('current')
zhoneTrapCardStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 2, 12, 3)).setObjects(("ZHONE-SHELF-MONITOR-MIB", "zhoneCardStatus"))
if mibBuilder.loadTexts: zhoneTrapCardStatusChange.setStatus('current')
zhoneTrapCardVersionCheck = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 2, 12, 4)).setObjects(("ZHONE-SHELF-MONITOR-MIB", "cardVersion"))
if mibBuilder.loadTexts: zhoneTrapCardVersionCheck.setStatus('current')
zhoneTrapFlashCardStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 2, 12, 5)).setObjects(("ZHONE-SHELF-MONITOR-MIB", "zhoneFlashCardStatusChange"))
if mibBuilder.loadTexts: zhoneTrapFlashCardStatusChange.setStatus('current')
zhoneTrapCardToBkplaneStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 5504, 3, 2, 12, 6)).setObjects(("ZHONE-SHELF-MONITOR-MIB", "zhoneCardLinkToBkplaneStatus"))
if mibBuilder.loadTexts: zhoneTrapCardToBkplaneStatusChange.setStatus('current')
zhoneShelfStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 3, 2, 13)).setObjects(("ZHONE-SHELF-MONITOR-MIB", "shelfMfgCLEICode"), ("ZHONE-SHELF-MONITOR-MIB", "shelfMonitorSerialNumber"), ("ZHONE-SHELF-MONITOR-MIB", "shelfMonitorRevisionCode"), ("ZHONE-SHELF-MONITOR-MIB", "shelfBkplaneSerialNumber"), ("ZHONE-SHELF-MONITOR-MIB", "shelfBkplaneRevisionCode"), ("ZHONE-SHELF-MONITOR-MIB", "shelfFanTraySerialNumber"), ("ZHONE-SHELF-MONITOR-MIB", "shelfFanTrayRevisionCode"), ("ZHONE-SHELF-MONITOR-MIB", "shelfSlotCount"), ("ZHONE-SHELF-MONITOR-MIB", "shelfFeatureBits"), ("ZHONE-SHELF-MONITOR-MIB", "shelfAPowerStatus"), ("ZHONE-SHELF-MONITOR-MIB", "shelfBPowerStatus"), ("ZHONE-SHELF-MONITOR-MIB", "shelfFanTrayStatus"), ("ZHONE-SHELF-MONITOR-MIB", "shelfAlarmContactsStatus"), ("ZHONE-SHELF-MONITOR-MIB", "shelfCardStatus"), ("ZHONE-SHELF-MONITOR-MIB", "shelfLedStatus"), ("ZHONE-SHELF-MONITOR-MIB", "shelfAdminResets"), ("ZHONE-SHELF-MONITOR-MIB", "shelfFaultResets"), ("ZHONE-SHELF-MONITOR-MIB", "shelfPowerResets"), ("ZHONE-SHELF-MONITOR-MIB", "zhoneShelfStatus"), ("ZHONE-SHELF-MONITOR-MIB", "zhoneCardStatus"), ("ZHONE-SHELF-MONITOR-MIB", "zhoneShelfStatusLastChange"), ("ZHONE-SHELF-MONITOR-MIB", "zhoneCardStatusLastChange"), ("ZHONE-SHELF-MONITOR-MIB", "shelfFanSpeed"), ("ZHONE-SHELF-MONITOR-MIB", "shelfFanLocation"), ("ZHONE-SHELF-MONITOR-MIB", "shelfFanLowSpeedThreshold"), ("ZHONE-SHELF-MONITOR-MIB", "shelfTemperature"), ("ZHONE-SHELF-MONITOR-MIB", "shelfTemperatureLocation"), ("ZHONE-SHELF-MONITOR-MIB", "shelfTemperatureHighThreshold"), ("ZHONE-SHELF-MONITOR-MIB", "zhoneFlashCardStatusChange"), ("ZHONE-SHELF-MONITOR-MIB", "shelfTemperatureLowThreshold"), ("ZHONE-SHELF-MONITOR-MIB", "shelfTemperatureStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneShelfStatusGroup = zhoneShelfStatusGroup.setStatus('current')
zhoneStatusLastChangeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 3, 2, 14)).setObjects(("ZHONE-SHELF-MONITOR-MIB", "zhoneShelfStatusLastChange"), ("ZHONE-SHELF-MONITOR-MIB", "zhoneCardStatusLastChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneStatusLastChangeGroup = zhoneStatusLastChangeGroup.setStatus('current')
zhoneCardStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 3, 2, 15)).setObjects(("ZHONE-SHELF-MONITOR-MIB", "cardType"), ("ZHONE-SHELF-MONITOR-MIB", "cardSubType"), ("ZHONE-SHELF-MONITOR-MIB", "cardLineType"), ("ZHONE-SHELF-MONITOR-MIB", "cardVersion"), ("ZHONE-SHELF-MONITOR-MIB", "cardEepromVersion"), ("ZHONE-SHELF-MONITOR-MIB", "cardSerialNumber"), ("ZHONE-SHELF-MONITOR-MIB", "cardCLEICode"), ("ZHONE-SHELF-MONITOR-MIB", "cardFeatureBits"), ("ZHONE-SHELF-MONITOR-MIB", "cardState"), ("ZHONE-SHELF-MONITOR-MIB", "cardAdminResets"), ("ZHONE-SHELF-MONITOR-MIB", "cardFaultResets"), ("ZHONE-SHELF-MONITOR-MIB", "cardReboot"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    zhoneCardStatusGroup = zhoneCardStatusGroup.setStatus('current')
zhoneFlashCardStatusChange = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 2, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("flashCardPort1Installed", 1), ("flashCardPort1Removed", 2), ("flashCardPort2Installed", 3), ("flashCardPort2Removed", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneFlashCardStatusChange.setStatus('current')
zhoneCardLinkToBkplaneStatus = MibScalar((1, 3, 6, 1, 4, 1, 5504, 3, 2, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cardToBkpLinkNotPresent", 1), ("cardToBkpLinkPresent", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: zhoneCardLinkToBkplaneStatus.setStatus('current')
mibBuilder.exportSymbols("ZHONE-SHELF-MONITOR-MIB", shelfStatusEntry=shelfStatusEntry, shelfTemperatureLocation=shelfTemperatureLocation, shelfAlarmContactsStatus=shelfAlarmContactsStatus, shelfIOAlarmBoardPresent=shelfIOAlarmBoardPresent, shelfDataEntry=shelfDataEntry, PYSNMP_MODULE_ID=zhoneShelfMonitorModule, shelfMonitorSerialNumber=shelfMonitorSerialNumber, zhoneTrapCardStatusChange=zhoneTrapCardStatusChange, shelfFaultResets=shelfFaultResets, shelfTemperatureHighThreshold=shelfTemperatureHighThreshold, cardState=cardState, zhoneShelfStatus=zhoneShelfStatus, shelfSlotCount=shelfSlotCount, zhoneTrapCardToBkplaneStatusChange=zhoneTrapCardToBkplaneStatusChange, shelfCPowerStatus=shelfCPowerStatus, shelfFanLowSpeedThreshold=shelfFanLowSpeedThreshold, cardSerialNumber=cardSerialNumber, zhoneTrapShelfStatusChange=zhoneTrapShelfStatusChange, shelfCardTable=shelfCardTable, shelfAPowerStatus=shelfAPowerStatus, shelfTemperatureStatus=shelfTemperatureStatus, zhoneTrapFlashCardStatusChange=zhoneTrapFlashCardStatusChange, shelfFanTrayRevisionCode=shelfFanTrayRevisionCode, shelfBkplaneSerialNumber=shelfBkplaneSerialNumber, shelfCardEntry=shelfCardEntry, cardSubType=cardSubType, shelfBatteryBVoltage=shelfBatteryBVoltage, shelfLedStatus=shelfLedStatus, shelfTemperatureTable=shelfTemperatureTable, shelfTemperatureLowThreshold=shelfTemperatureLowThreshold, zhoneShelfMonitorModule=zhoneShelfMonitorModule, shelfFanEntry=shelfFanEntry, cardType=cardType, zhoneCardStatusLastChange=zhoneCardStatusLastChange, shelfFanTraySerialNumber=shelfFanTraySerialNumber, zhoneCardLinkToBkplaneStatus=zhoneCardLinkToBkplaneStatus, zhoneTrapShelfMonitorV2Traps=zhoneTrapShelfMonitorV2Traps, shelfFanSpeed=shelfFanSpeed, cardCLEICode=cardCLEICode, shelfDPowerStatus=shelfDPowerStatus, cardAdminResets=cardAdminResets, shelfPowerResets=shelfPowerResets, zhoneCardStatusGroup=zhoneCardStatusGroup, shelfBatteryAVoltage=shelfBatteryAVoltage, shelfAdminResets=shelfAdminResets, shelfFanLocation=shelfFanLocation, cardFeatureBits=cardFeatureBits, zhoneFlashCardStatusChange=zhoneFlashCardStatusChange, shelfMonitorRevisionCode=shelfMonitorRevisionCode, zhoneShelfStatusLastChange=zhoneShelfStatusLastChange, cardReboot=cardReboot, shelfFanTrayStatus=shelfFanTrayStatus, shelfStatusTable=shelfStatusTable, shelfFanTable=shelfFanTable, shelfFanTrayType=shelfFanTrayType, shelfFanIndex=shelfFanIndex, shelfFeatureBits=shelfFeatureBits, shelfTemperatureEntry=shelfTemperatureEntry, cardEepromVersion=cardEepromVersion, zhoneCardStatus=zhoneCardStatus, shelfChassisReturnVoltage=shelfChassisReturnVoltage, zhoneTrapShelfMonitorGroup=zhoneTrapShelfMonitorGroup, zhoneShelfStatusGroup=zhoneShelfStatusGroup, shelfCardStatus=shelfCardStatus, shelfMfgCLEICode=shelfMfgCLEICode, zhoneStatusLastChangeGroup=zhoneStatusLastChangeGroup, cardFaultResets=cardFaultResets, cardLineType=cardLineType, shelfDataTable=shelfDataTable, zhoneTrapCardVersionCheck=zhoneTrapCardVersionCheck, shelfTemperatureIndex=shelfTemperatureIndex, shelfTemperature=shelfTemperature, shelfBPowerStatus=shelfBPowerStatus, shelfBkplaneRevisionCode=shelfBkplaneRevisionCode, cardVersion=cardVersion)
