#
# PySNMP MIB module CISCO-IETF-NAT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IETF-NAT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:43:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter32, Counter64, MibIdentifier, Bits, NotificationType, ObjectIdentity, iso, Unsigned32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, IpAddress, Gauge32, mib_2, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Counter64", "MibIdentifier", "Bits", "NotificationType", "ObjectIdentity", "iso", "Unsigned32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "IpAddress", "Gauge32", "mib-2", "ModuleIdentity")
TextualConvention, RowStatus, DisplayString, StorageType = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "StorageType")
ciscoIetfNatMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 77))
ciscoIetfNatMIB.setRevisions(('2001-03-01 00:00',))
if mibBuilder.loadTexts: ciscoIetfNatMIB.setLastUpdated('200103010000Z')
if mibBuilder.loadTexts: ciscoIetfNatMIB.setOrganization('Cisco Systems, Inc')
ciscoNatMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 77, 1))
cnatConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1))
cnatBind = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2))
cnatStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3))
class NATProtocolType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("other", 1), ("icmp", 2), ("udp", 3), ("tcp", 4))

cnatConfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 1), )
if mibBuilder.loadTexts: cnatConfTable.setStatus('current')
cnatConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 1, 1), ).setIndexNames((1, "CISCO-IETF-NAT-MIB", "cnatConfName"))
if mibBuilder.loadTexts: cnatConfEntry.setStatus('current')
cnatConfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cnatConfName.setStatus('current')
cnatConfServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("basicNat", 1), ("napt", 2), ("bidirectionalNat", 3), ("twiceNat", 4), ("multihomedNat", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfServiceType.setStatus('current')
cnatConfTimeoutIcmpIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfTimeoutIcmpIdle.setStatus('current')
cnatConfTimeoutUdpIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(300)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfTimeoutUdpIdle.setStatus('current')
cnatConfTimeoutTcpIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(86400)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfTimeoutTcpIdle.setStatus('current')
cnatConfTimeoutTcpNeg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(60)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfTimeoutTcpNeg.setStatus('current')
cnatConfTimeoutOther = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfTimeoutOther.setStatus('current')
cnatConfMaxBindLeaseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfMaxBindLeaseTime.setStatus('current')
cnatConfMaxBindIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfMaxBindIdleTime.setStatus('current')
cnatConfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 1, 1, 10), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfStorageType.setStatus('current')
cnatConfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfStatus.setStatus('current')
cnatConfStaticAddrMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 2), )
if mibBuilder.loadTexts: cnatConfStaticAddrMapTable.setStatus('current')
cnatConfStaticAddrMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-IETF-NAT-MIB", "cnatConfName"), (0, "CISCO-IETF-NAT-MIB", "cnatConfStaticAddrMapName"))
if mibBuilder.loadTexts: cnatConfStaticAddrMapEntry.setStatus('current')
cnatConfStaticAddrMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cnatConfStaticAddrMapName.setStatus('current')
cnatConfStaticAddrMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("both", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfStaticAddrMapType.setStatus('current')
cnatConfStaticLocalAddrFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 2, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfStaticLocalAddrFrom.setStatus('current')
cnatConfStaticLocalAddrTo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 2, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfStaticLocalAddrTo.setStatus('current')
cnatConfStaticLocalPortFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfStaticLocalPortFrom.setStatus('current')
cnatConfStaticLocalPortTo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfStaticLocalPortTo.setStatus('current')
cnatConfStaticGlobalAddrFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 2, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfStaticGlobalAddrFrom.setStatus('current')
cnatConfStaticGlobalAddrTo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 2, 1, 8), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfStaticGlobalAddrTo.setStatus('current')
cnatConfStaticGlobalPortFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfStaticGlobalPortFrom.setStatus('current')
cnatConfStaticGlobalPortTo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfStaticGlobalPortTo.setStatus('current')
cnatConfStaticProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 2, 1, 11), Bits().clone(namedValues=NamedValues(("all", 0), ("other", 1), ("icmp", 2), ("udp", 3), ("tcp", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfStaticProtocol.setStatus('current')
cnatConfStaticAddrMapStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 2, 1, 12), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfStaticAddrMapStorageType.setStatus('current')
cnatConfStaticAddrMapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 2, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfStaticAddrMapStatus.setStatus('current')
cnatConfDynAddrMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 3), )
if mibBuilder.loadTexts: cnatConfDynAddrMapTable.setStatus('current')
cnatConfDynAddrMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-IETF-NAT-MIB", "cnatConfName"), (0, "CISCO-IETF-NAT-MIB", "cnatConfDynAddrMapName"))
if mibBuilder.loadTexts: cnatConfDynAddrMapEntry.setStatus('current')
cnatConfDynAddrMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 3, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cnatConfDynAddrMapName.setStatus('current')
cnatConfDynAddressMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("both", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfDynAddressMapType.setStatus('current')
cnatConfDynLocalAddrFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 3, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfDynLocalAddrFrom.setStatus('current')
cnatConfDynLocalAddrTo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 3, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfDynLocalAddrTo.setStatus('current')
cnatConfDynLocalPortFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfDynLocalPortFrom.setStatus('current')
cnatConfDynLocalPortTo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatConfDynLocalPortTo.setStatus('current')
cnatConfDynGlobalAddrFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 3, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfDynGlobalAddrFrom.setStatus('current')
cnatConfDynGlobalAddrTo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 3, 1, 8), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfDynGlobalAddrTo.setStatus('current')
cnatConfDynGlobalPortFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfDynGlobalPortFrom.setStatus('current')
cnatConfDynGlobalPortTo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfDynGlobalPortTo.setStatus('current')
cnatConfDynProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 3, 1, 11), Bits().clone(namedValues=NamedValues(("all", 0), ("other", 1), ("icmp", 2), ("udp", 3), ("tcp", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfDynProtocol.setStatus('current')
cnatConfDynAddrMapStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 3, 1, 12), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfDynAddrMapStorageType.setStatus('current')
cnatConfDynAddrMapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 3, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatConfDynAddrMapStatus.setStatus('current')
cnatInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 4), )
if mibBuilder.loadTexts: cnatInterfaceTable.setStatus('current')
cnatInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-IETF-NAT-MIB", "cnatInterfaceIndex"))
if mibBuilder.loadTexts: cnatInterfaceEntry.setStatus('current')
cnatInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cnatInterfaceIndex.setStatus('current')
cnatInterfaceRealm = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("private", 1), ("public", 2))).clone('public')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatInterfaceRealm.setStatus('current')
cnatInterfaceStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 4, 1, 3), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatInterfaceStorageType.setStatus('current')
cnatInterfaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 1, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cnatInterfaceStatus.setStatus('current')
cnatAddrBindNumberOfEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrBindNumberOfEntries.setStatus('current')
cnatAddrBindTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 2), )
if mibBuilder.loadTexts: cnatAddrBindTable.setStatus('current')
cnatAddrBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-IETF-NAT-MIB", "cnatAddrBindLocalAddr"))
if mibBuilder.loadTexts: cnatAddrBindEntry.setStatus('current')
cnatAddrBindLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: cnatAddrBindLocalAddr.setStatus('current')
cnatAddrBindGlobalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrBindGlobalAddr.setStatus('current')
cnatAddrBindId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrBindId.setStatus('current')
cnatAddrBindDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("uniDirectional", 1), ("biDirectional", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrBindDirection.setStatus('current')
cnatAddrBindType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrBindType.setStatus('current')
cnatAddrBindConfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 2, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrBindConfName.setStatus('current')
cnatAddrBindSessionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrBindSessionCount.setStatus('current')
cnatAddrBindCurrentIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 2, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrBindCurrentIdleTime.setStatus('current')
cnatAddrBindInTranslate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrBindInTranslate.setStatus('current')
cnatAddrBindOutTranslate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrBindOutTranslate.setStatus('current')
cnatAddrPortBindNumberOfEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrPortBindNumberOfEntries.setStatus('current')
cnatAddrPortBindTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 4), )
if mibBuilder.loadTexts: cnatAddrPortBindTable.setStatus('current')
cnatAddrPortBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 4, 1), ).setIndexNames((0, "CISCO-IETF-NAT-MIB", "cnatAddrPortBindLocalAddr"), (0, "CISCO-IETF-NAT-MIB", "cnatAddrPortBindLocalPort"), (0, "CISCO-IETF-NAT-MIB", "cnatAddrPortBindProtocol"))
if mibBuilder.loadTexts: cnatAddrPortBindEntry.setStatus('current')
cnatAddrPortBindLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 4, 1, 1), IpAddress())
if mibBuilder.loadTexts: cnatAddrPortBindLocalAddr.setStatus('current')
cnatAddrPortBindLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: cnatAddrPortBindLocalPort.setStatus('current')
cnatAddrPortBindProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 4, 1, 3), Bits().clone(namedValues=NamedValues(("all", 0), ("other", 1), ("icmp", 2), ("udp", 3), ("tcp", 4))))
if mibBuilder.loadTexts: cnatAddrPortBindProtocol.setStatus('current')
cnatAddrPortBindGlobalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 4, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrPortBindGlobalAddr.setStatus('current')
cnatAddrPortBindGlobalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrPortBindGlobalPort.setStatus('current')
cnatAddrPortBindId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 4, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrPortBindId.setStatus('current')
cnatAddrPortBindDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("uniDirectional", 1), ("biDirectional", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrPortBindDirection.setStatus('current')
cnatAddrPortBindType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrPortBindType.setStatus('current')
cnatAddrPortBindConfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 4, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrPortBindConfName.setStatus('current')
cnatAddrPortBindSessionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 4, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrPortBindSessionCount.setStatus('current')
cnatAddrPortBindCurrentIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 4, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrPortBindCurrentIdleTime.setStatus('current')
cnatAddrPortBindInTranslate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrPortBindInTranslate.setStatus('current')
cnatAddrPortBindOutTranslate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrPortBindOutTranslate.setStatus('current')
cnatSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5), )
if mibBuilder.loadTexts: cnatSessionTable.setStatus('current')
cnatSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5, 1), ).setIndexNames((0, "CISCO-IETF-NAT-MIB", "cnatSessionBindId"), (0, "CISCO-IETF-NAT-MIB", "cnatSessionId"))
if mibBuilder.loadTexts: cnatSessionEntry.setStatus('current')
cnatSessionBindId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cnatSessionBindId.setStatus('current')
cnatSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cnatSessionId.setStatus('current')
cnatSessionDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatSessionDirection.setStatus('current')
cnatSessionUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatSessionUpTime.setStatus('current')
cnatSessionProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5, 1, 5), NATProtocolType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatSessionProtocolType.setStatus('current')
cnatSessionOrigPrivateAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatSessionOrigPrivateAddr.setStatus('current')
cnatSessionTransPrivateAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatSessionTransPrivateAddr.setStatus('current')
cnatSessionOrigPrivatePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatSessionOrigPrivatePort.setStatus('current')
cnatSessionTransPrivatePort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatSessionTransPrivatePort.setStatus('current')
cnatSessionOrigPublicAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatSessionOrigPublicAddr.setStatus('current')
cnatSessionTransPublicAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatSessionTransPublicAddr.setStatus('current')
cnatSessionOrigPublicPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatSessionOrigPublicPort.setStatus('current')
cnatSessionTransPublicPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatSessionTransPublicPort.setStatus('current')
cnatSessionCurrentIdletime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5, 1, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatSessionCurrentIdletime.setStatus('current')
cnatSessionSecondBindId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatSessionSecondBindId.setStatus('current')
cnatSessionInTranslate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatSessionInTranslate.setStatus('current')
cnatSessionOutTranslate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 2, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatSessionOutTranslate.setStatus('current')
cnatProtocolStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3, 1), )
if mibBuilder.loadTexts: cnatProtocolStatsTable.setStatus('current')
cnatProtocolStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-IETF-NAT-MIB", "cnatProtocolStatsName"))
if mibBuilder.loadTexts: cnatProtocolStatsEntry.setStatus('current')
cnatProtocolStatsName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3, 1, 1, 1), NATProtocolType())
if mibBuilder.loadTexts: cnatProtocolStatsName.setStatus('current')
cnatProtocolStatsInTranslate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatProtocolStatsInTranslate.setStatus('current')
cnatProtocolStatsOutTranslate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatProtocolStatsOutTranslate.setStatus('current')
cnatProtocolStatsRejectCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatProtocolStatsRejectCount.setStatus('current')
cnatAddrMapStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3, 2), )
if mibBuilder.loadTexts: cnatAddrMapStatsTable.setStatus('current')
cnatAddrMapStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-IETF-NAT-MIB", "cnatAddrMapStatsConfName"), (0, "CISCO-IETF-NAT-MIB", "cnatAddrMapStatsMapName"))
if mibBuilder.loadTexts: cnatAddrMapStatsEntry.setStatus('current')
cnatAddrMapStatsConfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cnatAddrMapStatsConfName.setStatus('current')
cnatAddrMapStatsMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cnatAddrMapStatsMapName.setStatus('current')
cnatAddrMapStatsInTranslate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrMapStatsInTranslate.setStatus('current')
cnatAddrMapStatsOutTranslate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrMapStatsOutTranslate.setStatus('current')
cnatAddrMapStatsNoResource = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrMapStatsNoResource.setStatus('current')
cnatAddrMapStatsAddrUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatAddrMapStatsAddrUsed.setStatus('current')
cnatInterfaceStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3, 3), )
if mibBuilder.loadTexts: cnatInterfaceStatsTable.setStatus('current')
cnatInterfaceStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3, 3, 1), )
cnatInterfaceEntry.registerAugmentions(("CISCO-IETF-NAT-MIB", "cnatInterfaceStatsEntry"))
cnatInterfaceStatsEntry.setIndexNames(*cnatInterfaceEntry.getIndexNames())
if mibBuilder.loadTexts: cnatInterfaceStatsEntry.setStatus('current')
cnatInterfacePktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatInterfacePktsIn.setStatus('current')
cnatInterfacePktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 77, 1, 3, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cnatInterfacePktsOut.setStatus('current')
ciscoNatMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 77, 2))
ciscoNatMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 77, 2, 0))
ciscoNatMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 77, 3))
ciscoNatMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 77, 3, 1))
ciscoNatMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 77, 3, 2))
ciscoNatMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 77, 3, 1, 1)).setObjects(("CISCO-IETF-NAT-MIB", "cnatConfigGroup"), ("CISCO-IETF-NAT-MIB", "cnatBindGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoNatMIBCompliance = ciscoNatMIBCompliance.setStatus('current')
cnatConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 77, 3, 2, 1)).setObjects(("CISCO-IETF-NAT-MIB", "cnatConfServiceType"), ("CISCO-IETF-NAT-MIB", "cnatConfTimeoutIcmpIdle"), ("CISCO-IETF-NAT-MIB", "cnatConfTimeoutUdpIdle"), ("CISCO-IETF-NAT-MIB", "cnatConfTimeoutTcpIdle"), ("CISCO-IETF-NAT-MIB", "cnatConfTimeoutTcpNeg"), ("CISCO-IETF-NAT-MIB", "cnatConfTimeoutOther"), ("CISCO-IETF-NAT-MIB", "cnatConfMaxBindLeaseTime"), ("CISCO-IETF-NAT-MIB", "cnatConfMaxBindIdleTime"), ("CISCO-IETF-NAT-MIB", "cnatConfStorageType"), ("CISCO-IETF-NAT-MIB", "cnatConfStatus"), ("CISCO-IETF-NAT-MIB", "cnatConfStaticAddrMapType"), ("CISCO-IETF-NAT-MIB", "cnatConfStaticLocalAddrFrom"), ("CISCO-IETF-NAT-MIB", "cnatConfStaticLocalAddrTo"), ("CISCO-IETF-NAT-MIB", "cnatConfStaticLocalPortFrom"), ("CISCO-IETF-NAT-MIB", "cnatConfStaticLocalPortTo"), ("CISCO-IETF-NAT-MIB", "cnatConfStaticGlobalAddrFrom"), ("CISCO-IETF-NAT-MIB", "cnatConfStaticGlobalAddrTo"), ("CISCO-IETF-NAT-MIB", "cnatConfStaticGlobalPortFrom"), ("CISCO-IETF-NAT-MIB", "cnatConfStaticGlobalPortTo"), ("CISCO-IETF-NAT-MIB", "cnatConfStaticProtocol"), ("CISCO-IETF-NAT-MIB", "cnatConfStaticAddrMapStorageType"), ("CISCO-IETF-NAT-MIB", "cnatConfStaticAddrMapStatus"), ("CISCO-IETF-NAT-MIB", "cnatConfDynAddressMapType"), ("CISCO-IETF-NAT-MIB", "cnatConfDynLocalAddrFrom"), ("CISCO-IETF-NAT-MIB", "cnatConfDynLocalAddrTo"), ("CISCO-IETF-NAT-MIB", "cnatConfDynLocalPortFrom"), ("CISCO-IETF-NAT-MIB", "cnatConfDynLocalPortTo"), ("CISCO-IETF-NAT-MIB", "cnatConfDynGlobalAddrFrom"), ("CISCO-IETF-NAT-MIB", "cnatConfDynGlobalAddrTo"), ("CISCO-IETF-NAT-MIB", "cnatConfDynGlobalPortFrom"), ("CISCO-IETF-NAT-MIB", "cnatConfDynGlobalPortTo"), ("CISCO-IETF-NAT-MIB", "cnatConfDynProtocol"), ("CISCO-IETF-NAT-MIB", "cnatConfDynAddrMapStorageType"), ("CISCO-IETF-NAT-MIB", "cnatConfDynAddrMapStatus"), ("CISCO-IETF-NAT-MIB", "cnatInterfaceRealm"), ("CISCO-IETF-NAT-MIB", "cnatInterfaceStorageType"), ("CISCO-IETF-NAT-MIB", "cnatInterfaceStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cnatConfigGroup = cnatConfigGroup.setStatus('current')
cnatBindGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 77, 3, 2, 2)).setObjects(("CISCO-IETF-NAT-MIB", "cnatAddrBindNumberOfEntries"), ("CISCO-IETF-NAT-MIB", "cnatAddrBindGlobalAddr"), ("CISCO-IETF-NAT-MIB", "cnatAddrBindId"), ("CISCO-IETF-NAT-MIB", "cnatAddrBindDirection"), ("CISCO-IETF-NAT-MIB", "cnatAddrBindType"), ("CISCO-IETF-NAT-MIB", "cnatAddrBindConfName"), ("CISCO-IETF-NAT-MIB", "cnatAddrBindSessionCount"), ("CISCO-IETF-NAT-MIB", "cnatAddrBindCurrentIdleTime"), ("CISCO-IETF-NAT-MIB", "cnatAddrBindInTranslate"), ("CISCO-IETF-NAT-MIB", "cnatAddrBindOutTranslate"), ("CISCO-IETF-NAT-MIB", "cnatAddrPortBindNumberOfEntries"), ("CISCO-IETF-NAT-MIB", "cnatAddrPortBindGlobalAddr"), ("CISCO-IETF-NAT-MIB", "cnatAddrPortBindGlobalPort"), ("CISCO-IETF-NAT-MIB", "cnatAddrPortBindId"), ("CISCO-IETF-NAT-MIB", "cnatAddrPortBindDirection"), ("CISCO-IETF-NAT-MIB", "cnatAddrPortBindType"), ("CISCO-IETF-NAT-MIB", "cnatAddrPortBindConfName"), ("CISCO-IETF-NAT-MIB", "cnatAddrPortBindSessionCount"), ("CISCO-IETF-NAT-MIB", "cnatAddrPortBindCurrentIdleTime"), ("CISCO-IETF-NAT-MIB", "cnatAddrPortBindInTranslate"), ("CISCO-IETF-NAT-MIB", "cnatAddrPortBindOutTranslate"), ("CISCO-IETF-NAT-MIB", "cnatSessionDirection"), ("CISCO-IETF-NAT-MIB", "cnatSessionUpTime"), ("CISCO-IETF-NAT-MIB", "cnatSessionProtocolType"), ("CISCO-IETF-NAT-MIB", "cnatSessionOrigPrivateAddr"), ("CISCO-IETF-NAT-MIB", "cnatSessionTransPrivateAddr"), ("CISCO-IETF-NAT-MIB", "cnatSessionOrigPrivatePort"), ("CISCO-IETF-NAT-MIB", "cnatSessionTransPrivatePort"), ("CISCO-IETF-NAT-MIB", "cnatSessionOrigPublicAddr"), ("CISCO-IETF-NAT-MIB", "cnatSessionTransPublicAddr"), ("CISCO-IETF-NAT-MIB", "cnatSessionOrigPublicPort"), ("CISCO-IETF-NAT-MIB", "cnatSessionTransPublicPort"), ("CISCO-IETF-NAT-MIB", "cnatSessionCurrentIdletime"), ("CISCO-IETF-NAT-MIB", "cnatSessionSecondBindId"), ("CISCO-IETF-NAT-MIB", "cnatSessionInTranslate"), ("CISCO-IETF-NAT-MIB", "cnatSessionOutTranslate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cnatBindGroup = cnatBindGroup.setStatus('current')
cnatStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 77, 3, 2, 3)).setObjects(("CISCO-IETF-NAT-MIB", "cnatProtocolStatsInTranslate"), ("CISCO-IETF-NAT-MIB", "cnatProtocolStatsOutTranslate"), ("CISCO-IETF-NAT-MIB", "cnatProtocolStatsRejectCount"), ("CISCO-IETF-NAT-MIB", "cnatAddrMapStatsInTranslate"), ("CISCO-IETF-NAT-MIB", "cnatAddrMapStatsOutTranslate"), ("CISCO-IETF-NAT-MIB", "cnatAddrMapStatsNoResource"), ("CISCO-IETF-NAT-MIB", "cnatAddrMapStatsAddrUsed"), ("CISCO-IETF-NAT-MIB", "cnatInterfacePktsIn"), ("CISCO-IETF-NAT-MIB", "cnatInterfacePktsOut"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cnatStatsGroup = cnatStatsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-IETF-NAT-MIB", cnatConfStaticAddrMapStorageType=cnatConfStaticAddrMapStorageType, cnatAddrMapStatsEntry=cnatAddrMapStatsEntry, cnatConfMaxBindIdleTime=cnatConfMaxBindIdleTime, cnatConfDynLocalPortFrom=cnatConfDynLocalPortFrom, cnatConfDynAddrMapStorageType=cnatConfDynAddrMapStorageType, cnatConfDynAddrMapStatus=cnatConfDynAddrMapStatus, cnatConfDynGlobalPortTo=cnatConfDynGlobalPortTo, cnatAddrMapStatsAddrUsed=cnatAddrMapStatsAddrUsed, cnatSessionOrigPublicAddr=cnatSessionOrigPublicAddr, cnatSessionDirection=cnatSessionDirection, cnatInterfaceIndex=cnatInterfaceIndex, cnatAddrPortBindOutTranslate=cnatAddrPortBindOutTranslate, cnatSessionTransPrivateAddr=cnatSessionTransPrivateAddr, ciscoIetfNatMIB=ciscoIetfNatMIB, cnatConfStaticGlobalAddrFrom=cnatConfStaticGlobalAddrFrom, cnatConfig=cnatConfig, cnatSessionCurrentIdletime=cnatSessionCurrentIdletime, PYSNMP_MODULE_ID=ciscoIetfNatMIB, cnatAddrBindInTranslate=cnatAddrBindInTranslate, cnatAddrPortBindInTranslate=cnatAddrPortBindInTranslate, ciscoNatMIBCompliances=ciscoNatMIBCompliances, cnatProtocolStatsName=cnatProtocolStatsName, cnatConfDynLocalAddrTo=cnatConfDynLocalAddrTo, cnatConfStaticAddrMapName=cnatConfStaticAddrMapName, cnatAddrPortBindEntry=cnatAddrPortBindEntry, cnatSessionTransPublicAddr=cnatSessionTransPublicAddr, cnatInterfacePktsIn=cnatInterfacePktsIn, cnatAddrPortBindGlobalPort=cnatAddrPortBindGlobalPort, cnatAddrBindEntry=cnatAddrBindEntry, cnatAddrPortBindGlobalAddr=cnatAddrPortBindGlobalAddr, cnatAddrPortBindNumberOfEntries=cnatAddrPortBindNumberOfEntries, cnatAddrMapStatsInTranslate=cnatAddrMapStatsInTranslate, cnatInterfaceStorageType=cnatInterfaceStorageType, cnatInterfaceStatsEntry=cnatInterfaceStatsEntry, cnatSessionUpTime=cnatSessionUpTime, cnatProtocolStatsRejectCount=cnatProtocolStatsRejectCount, cnatConfDynLocalAddrFrom=cnatConfDynLocalAddrFrom, cnatAddrMapStatsConfName=cnatAddrMapStatsConfName, cnatInterfaceStatsTable=cnatInterfaceStatsTable, cnatSessionBindId=cnatSessionBindId, cnatConfDynGlobalAddrFrom=cnatConfDynGlobalAddrFrom, cnatSessionOrigPrivatePort=cnatSessionOrigPrivatePort, cnatBind=cnatBind, cnatConfDynGlobalAddrTo=cnatConfDynGlobalAddrTo, cnatConfStaticAddrMapStatus=cnatConfStaticAddrMapStatus, cnatConfTimeoutTcpIdle=cnatConfTimeoutTcpIdle, cnatConfStaticLocalPortTo=cnatConfStaticLocalPortTo, cnatConfDynProtocol=cnatConfDynProtocol, cnatAddrPortBindId=cnatAddrPortBindId, cnatConfStaticAddrMapEntry=cnatConfStaticAddrMapEntry, cnatSessionTable=cnatSessionTable, cnatSessionId=cnatSessionId, cnatAddrBindNumberOfEntries=cnatAddrBindNumberOfEntries, cnatConfStaticProtocol=cnatConfStaticProtocol, cnatAddrMapStatsNoResource=cnatAddrMapStatsNoResource, cnatProtocolStatsTable=cnatProtocolStatsTable, cnatConfStaticAddrMapType=cnatConfStaticAddrMapType, cnatBindGroup=cnatBindGroup, cnatConfStaticLocalAddrFrom=cnatConfStaticLocalAddrFrom, cnatInterfaceEntry=cnatInterfaceEntry, cnatAddrBindCurrentIdleTime=cnatAddrBindCurrentIdleTime, cnatConfTimeoutIcmpIdle=cnatConfTimeoutIcmpIdle, cnatConfStorageType=cnatConfStorageType, cnatSessionOrigPublicPort=cnatSessionOrigPublicPort, ciscoNatMIBObjects=ciscoNatMIBObjects, cnatAddrPortBindTable=cnatAddrPortBindTable, cnatConfStaticGlobalPortTo=cnatConfStaticGlobalPortTo, cnatAddrBindConfName=cnatAddrBindConfName, cnatAddrPortBindCurrentIdleTime=cnatAddrPortBindCurrentIdleTime, cnatInterfaceTable=cnatInterfaceTable, cnatInterfaceStatus=cnatInterfaceStatus, ciscoNatMIBCompliance=ciscoNatMIBCompliance, cnatConfMaxBindLeaseTime=cnatConfMaxBindLeaseTime, cnatAddrBindGlobalAddr=cnatAddrBindGlobalAddr, ciscoNatMIBNotificationPrefix=ciscoNatMIBNotificationPrefix, cnatAddrBindTable=cnatAddrBindTable, cnatAddrPortBindType=cnatAddrPortBindType, ciscoNatMIBGroups=ciscoNatMIBGroups, cnatAddrBindId=cnatAddrBindId, cnatConfTimeoutTcpNeg=cnatConfTimeoutTcpNeg, cnatConfEntry=cnatConfEntry, cnatAddrBindType=cnatAddrBindType, cnatAddrPortBindLocalAddr=cnatAddrPortBindLocalAddr, cnatConfigGroup=cnatConfigGroup, cnatAddrBindDirection=cnatAddrBindDirection, cnatInterfacePktsOut=cnatInterfacePktsOut, cnatConfTimeoutOther=cnatConfTimeoutOther, cnatConfStaticAddrMapTable=cnatConfStaticAddrMapTable, cnatConfStaticGlobalPortFrom=cnatConfStaticGlobalPortFrom, cnatSessionEntry=cnatSessionEntry, cnatProtocolStatsEntry=cnatProtocolStatsEntry, cnatConfStaticLocalPortFrom=cnatConfStaticLocalPortFrom, cnatConfDynAddressMapType=cnatConfDynAddressMapType, cnatConfStaticLocalAddrTo=cnatConfStaticLocalAddrTo, cnatConfName=cnatConfName, cnatConfDynGlobalPortFrom=cnatConfDynGlobalPortFrom, cnatSessionTransPrivatePort=cnatSessionTransPrivatePort, cnatConfDynAddrMapTable=cnatConfDynAddrMapTable, cnatConfDynAddrMapName=cnatConfDynAddrMapName, cnatAddrBindLocalAddr=cnatAddrBindLocalAddr, ciscoNatMIBConformance=ciscoNatMIBConformance, cnatSessionOrigPrivateAddr=cnatSessionOrigPrivateAddr, cnatConfTable=cnatConfTable, cnatSessionSecondBindId=cnatSessionSecondBindId, cnatAddrPortBindProtocol=cnatAddrPortBindProtocol, cnatSessionTransPublicPort=cnatSessionTransPublicPort, cnatStatistics=cnatStatistics, cnatAddrMapStatsOutTranslate=cnatAddrMapStatsOutTranslate, cnatProtocolStatsOutTranslate=cnatProtocolStatsOutTranslate, cnatAddrPortBindConfName=cnatAddrPortBindConfName, cnatConfStaticGlobalAddrTo=cnatConfStaticGlobalAddrTo, cnatAddrPortBindSessionCount=cnatAddrPortBindSessionCount, cnatConfStatus=cnatConfStatus, cnatAddrPortBindDirection=cnatAddrPortBindDirection, cnatAddrMapStatsMapName=cnatAddrMapStatsMapName, cnatSessionInTranslate=cnatSessionInTranslate, cnatProtocolStatsInTranslate=cnatProtocolStatsInTranslate, cnatConfDynLocalPortTo=cnatConfDynLocalPortTo, cnatConfDynAddrMapEntry=cnatConfDynAddrMapEntry, cnatAddrBindSessionCount=cnatAddrBindSessionCount, cnatInterfaceRealm=cnatInterfaceRealm, cnatSessionOutTranslate=cnatSessionOutTranslate, cnatConfTimeoutUdpIdle=cnatConfTimeoutUdpIdle, ciscoNatMIBNotifications=ciscoNatMIBNotifications, cnatAddrMapStatsTable=cnatAddrMapStatsTable, cnatAddrBindOutTranslate=cnatAddrBindOutTranslate, cnatSessionProtocolType=cnatSessionProtocolType, NATProtocolType=NATProtocolType, cnatAddrPortBindLocalPort=cnatAddrPortBindLocalPort, cnatConfServiceType=cnatConfServiceType, cnatStatsGroup=cnatStatsGroup)
