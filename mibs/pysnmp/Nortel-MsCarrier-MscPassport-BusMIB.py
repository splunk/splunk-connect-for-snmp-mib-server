#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-BusMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-BusMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:20:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
mscShelf, mscShelfCardIndex, mscShelfCard, mscShelfIndex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelf", "mscShelfCardIndex", "mscShelfCard", "mscShelfIndex")
DisplayString, Unsigned32, StorageType, RowStatus, Integer32 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "DisplayString", "Unsigned32", "StorageType", "RowStatus", "Integer32")
NonReplicated, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "NonReplicated")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, ModuleIdentity, Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32, Gauge32, TimeTicks, MibIdentifier, Bits, Integer32, Counter32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ModuleIdentity", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32", "Gauge32", "TimeTicks", "MibIdentifier", "Bits", "Integer32", "Counter32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
busMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 144))
mscShelfCardBusTap = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2))
mscShelfCardBusTapRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 1), )
if mibBuilder.loadTexts: mscShelfCardBusTapRowStatusTable.setStatus('mandatory')
mscShelfCardBusTapRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfCardBusTapIndex"))
if mibBuilder.loadTexts: mscShelfCardBusTapRowStatusEntry.setStatus('mandatory')
mscShelfCardBusTapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapRowStatus.setStatus('mandatory')
mscShelfCardBusTapComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapComponentName.setStatus('mandatory')
mscShelfCardBusTapStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapStorageType.setStatus('mandatory')
mscShelfCardBusTapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x", 0), ("y", 1))))
if mibBuilder.loadTexts: mscShelfCardBusTapIndex.setStatus('mandatory')
mscShelfCardBusTapStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 10), )
if mibBuilder.loadTexts: mscShelfCardBusTapStateTable.setStatus('mandatory')
mscShelfCardBusTapStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfCardBusTapIndex"))
if mibBuilder.loadTexts: mscShelfCardBusTapStateEntry.setStatus('mandatory')
mscShelfCardBusTapAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapAdminState.setStatus('mandatory')
mscShelfCardBusTapOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapOperationalState.setStatus('mandatory')
mscShelfCardBusTapUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapUsageState.setStatus('mandatory')
mscShelfCardBusTapAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapAvailabilityStatus.setStatus('mandatory')
mscShelfCardBusTapProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapProceduralStatus.setStatus('mandatory')
mscShelfCardBusTapControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapControlStatus.setStatus('mandatory')
mscShelfCardBusTapAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 10, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapAlarmStatus.setStatus('mandatory')
mscShelfCardBusTapStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapStandbyStatus.setStatus('mandatory')
mscShelfCardBusTapUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapUnknownStatus.setStatus('mandatory')
mscShelfCardBusTapOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 11), )
if mibBuilder.loadTexts: mscShelfCardBusTapOperTable.setStatus('mandatory')
mscShelfCardBusTapOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfCardBusTapIndex"))
if mibBuilder.loadTexts: mscShelfCardBusTapOperEntry.setStatus('mandatory')
mscShelfCardBusTapFailuresInEffect = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 11, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapFailuresInEffect.setStatus('mandatory')
mscShelfCardBusTapDependenciesInEffect = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 11, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapDependenciesInEffect.setStatus('mandatory')
mscShelfCardBusTapCardsAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 11, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapCardsAvailable.setStatus('mandatory')
mscShelfCardBusTapCardsTxTo = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapCardsTxTo.setStatus('mandatory')
mscShelfCardBusTapErrorsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 12), )
if mibBuilder.loadTexts: mscShelfCardBusTapErrorsTable.setStatus('mandatory')
mscShelfCardBusTapErrorsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfCardBusTapIndex"))
if mibBuilder.loadTexts: mscShelfCardBusTapErrorsEntry.setStatus('mandatory')
mscShelfCardBusTapSelfTestErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapSelfTestErrorCode.setStatus('mandatory')
mscShelfCardBusTapClockErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapClockErrors.setStatus('mandatory')
mscShelfCardBusTapEndOfCellErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapEndOfCellErrors.setStatus('mandatory')
mscShelfCardBusTapParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapParityErrors.setStatus('mandatory')
mscShelfCardBusTapFrmCongestionErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapFrmCongestionErrors.setStatus('mandatory')
mscShelfCardBusTapFrmCollisionErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapFrmCollisionErrors.setStatus('mandatory')
mscShelfCardBusTapFrmTimeoutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 12, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapFrmTimeoutErrors.setStatus('mandatory')
mscShelfCardBusTapFrmDeliveryErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 12, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapFrmDeliveryErrors.setStatus('mandatory')
mscShelfCardBusTapFrmSizeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 2, 2, 12, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfCardBusTapFrmSizeErrors.setStatus('mandatory')
mscShelfBus = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3))
mscShelfBusRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 1), )
if mibBuilder.loadTexts: mscShelfBusRowStatusTable.setStatus('mandatory')
mscShelfBusRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusIndex"))
if mibBuilder.loadTexts: mscShelfBusRowStatusEntry.setStatus('mandatory')
mscShelfBusRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusRowStatus.setStatus('mandatory')
mscShelfBusComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusComponentName.setStatus('mandatory')
mscShelfBusStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusStorageType.setStatus('mandatory')
mscShelfBusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x", 0), ("y", 1))))
if mibBuilder.loadTexts: mscShelfBusIndex.setStatus('mandatory')
mscShelfBusStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 10), )
if mibBuilder.loadTexts: mscShelfBusStateTable.setStatus('mandatory')
mscShelfBusStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusIndex"))
if mibBuilder.loadTexts: mscShelfBusStateEntry.setStatus('mandatory')
mscShelfBusAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusAdminState.setStatus('mandatory')
mscShelfBusOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusOperationalState.setStatus('mandatory')
mscShelfBusUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusUsageState.setStatus('mandatory')
mscShelfBusAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusAvailabilityStatus.setStatus('mandatory')
mscShelfBusProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusProceduralStatus.setStatus('mandatory')
mscShelfBusControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusControlStatus.setStatus('mandatory')
mscShelfBusAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 10, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusAlarmStatus.setStatus('mandatory')
mscShelfBusStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusStandbyStatus.setStatus('mandatory')
mscShelfBusUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusUnknownStatus.setStatus('mandatory')
mscShelfBusOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 11), )
if mibBuilder.loadTexts: mscShelfBusOperTable.setStatus('mandatory')
mscShelfBusOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusIndex"))
if mibBuilder.loadTexts: mscShelfBusOperEntry.setStatus('mandatory')
mscShelfBusClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("activeCP", 0), ("alternate", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusClockSource.setStatus('mandatory')
mscShelfBusUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusUtilization.setStatus('mandatory')
mscShelfBusBusTapStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 246), )
if mibBuilder.loadTexts: mscShelfBusBusTapStatusTable.setStatus('mandatory')
mscShelfBusBusTapStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 246, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusBusTapStatusIndex"))
if mibBuilder.loadTexts: mscShelfBusBusTapStatusEntry.setStatus('mandatory')
mscShelfBusBusTapStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 246, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscShelfBusBusTapStatusIndex.setStatus('mandatory')
mscShelfBusBusTapStatusValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 246, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ok", 0), ("failed", 1), ("none", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusBusTapStatusValue.setStatus('mandatory')
mscShelfBusClockSourceStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 247), )
if mibBuilder.loadTexts: mscShelfBusClockSourceStatusTable.setStatus('mandatory')
mscShelfBusClockSourceStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 247, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusClockSourceStatusIndex"))
if mibBuilder.loadTexts: mscShelfBusClockSourceStatusEntry.setStatus('mandatory')
mscShelfBusClockSourceStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 247, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("activeCP", 0), ("alternate", 1))))
if mibBuilder.loadTexts: mscShelfBusClockSourceStatusIndex.setStatus('mandatory')
mscShelfBusClockSourceStatusValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 247, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("ok", 0), ("failed", 1), ("unknown", 2), ("testInProgress", 3), ("notApplicable", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusClockSourceStatusValue.setStatus('mandatory')
mscShelfBusTest = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2))
mscShelfBusTestRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 1), )
if mibBuilder.loadTexts: mscShelfBusTestRowStatusTable.setStatus('mandatory')
mscShelfBusTestRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusTestIndex"))
if mibBuilder.loadTexts: mscShelfBusTestRowStatusEntry.setStatus('mandatory')
mscShelfBusTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusTestRowStatus.setStatus('mandatory')
mscShelfBusTestComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusTestComponentName.setStatus('mandatory')
mscShelfBusTestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusTestStorageType.setStatus('mandatory')
mscShelfBusTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscShelfBusTestIndex.setStatus('mandatory')
mscShelfBusTestStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 10), )
if mibBuilder.loadTexts: mscShelfBusTestStateTable.setStatus('mandatory')
mscShelfBusTestStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusTestIndex"))
if mibBuilder.loadTexts: mscShelfBusTestStateEntry.setStatus('mandatory')
mscShelfBusTestAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusTestAdminState.setStatus('mandatory')
mscShelfBusTestOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusTestOperationalState.setStatus('mandatory')
mscShelfBusTestUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusTestUsageState.setStatus('mandatory')
mscShelfBusTestSetupTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 11), )
if mibBuilder.loadTexts: mscShelfBusTestSetupTable.setStatus('mandatory')
mscShelfBusTestSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusTestIndex"))
if mibBuilder.loadTexts: mscShelfBusTestSetupEntry.setStatus('mandatory')
mscShelfBusTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 43200)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscShelfBusTestDuration.setStatus('mandatory')
mscShelfBusTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 12), )
if mibBuilder.loadTexts: mscShelfBusTestResultsTable.setStatus('mandatory')
mscShelfBusTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusTestIndex"))
if mibBuilder.loadTexts: mscShelfBusTestResultsEntry.setStatus('mandatory')
mscShelfBusTestElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 43200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusTestElapsedTime.setStatus('mandatory')
mscShelfBusTestTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 43200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusTestTimeRemaining.setStatus('mandatory')
mscShelfBusTestCauseOfTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("neverStarted", 0), ("testRunning", 1), ("testTimeExpired", 2), ("stoppedByOperator", 3), ("selfTestFailure", 4), ("clockSourceFailure", 5), ("broadcastFailure", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusTestCauseOfTermination.setStatus('mandatory')
mscShelfBusTestTestsDone = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 12, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusTestTestsDone.setStatus('mandatory')
mscShelfBusTestSelfTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 248), )
if mibBuilder.loadTexts: mscShelfBusTestSelfTestResultsTable.setStatus('mandatory')
mscShelfBusTestSelfTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 248, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusTestIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusTestSelfTestResultsIndex"))
if mibBuilder.loadTexts: mscShelfBusTestSelfTestResultsEntry.setStatus('mandatory')
mscShelfBusTestSelfTestResultsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 248, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscShelfBusTestSelfTestResultsIndex.setStatus('mandatory')
mscShelfBusTestSelfTestResultsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 248, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("x", 0), ("n1", 1), ("n2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusTestSelfTestResultsValue.setStatus('mandatory')
mscShelfBusTestClockSourceTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 249), )
if mibBuilder.loadTexts: mscShelfBusTestClockSourceTestResultsTable.setStatus('mandatory')
mscShelfBusTestClockSourceTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 249, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusTestIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusTestClockSourceTestResultsSourceIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusTestClockSourceTestResultsCardIndex"))
if mibBuilder.loadTexts: mscShelfBusTestClockSourceTestResultsEntry.setStatus('mandatory')
mscShelfBusTestClockSourceTestResultsSourceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 249, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("activeCP", 0), ("alternate", 1))))
if mibBuilder.loadTexts: mscShelfBusTestClockSourceTestResultsSourceIndex.setStatus('mandatory')
mscShelfBusTestClockSourceTestResultsCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 249, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscShelfBusTestClockSourceTestResultsCardIndex.setStatus('mandatory')
mscShelfBusTestClockSourceTestResultsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 249, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("x", 0), ("n1", 1), ("n2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusTestClockSourceTestResultsValue.setStatus('mandatory')
mscShelfBusTestBroadcastTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 250), )
if mibBuilder.loadTexts: mscShelfBusTestBroadcastTestResultsTable.setStatus('mandatory')
mscShelfBusTestBroadcastTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 250, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusTestIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusTestBroadcastTestResultsTxCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusTestBroadcastTestResultsRxCardIndex"))
if mibBuilder.loadTexts: mscShelfBusTestBroadcastTestResultsEntry.setStatus('mandatory')
mscShelfBusTestBroadcastTestResultsTxCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 250, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscShelfBusTestBroadcastTestResultsTxCardIndex.setStatus('mandatory')
mscShelfBusTestBroadcastTestResultsRxCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 250, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscShelfBusTestBroadcastTestResultsRxCardIndex.setStatus('mandatory')
mscShelfBusTestBroadcastTestResultsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 250, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("x", 0), ("n1", 1), ("n2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusTestBroadcastTestResultsValue.setStatus('mandatory')
mscShelfBusTestPingTestsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 251), )
if mibBuilder.loadTexts: mscShelfBusTestPingTestsTable.setStatus('mandatory')
mscShelfBusTestPingTestsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 251, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusTestIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusTestPingTestsTxCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusTestPingTestsRxCardIndex"))
if mibBuilder.loadTexts: mscShelfBusTestPingTestsEntry.setStatus('mandatory')
mscShelfBusTestPingTestsTxCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 251, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscShelfBusTestPingTestsTxCardIndex.setStatus('mandatory')
mscShelfBusTestPingTestsRxCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 251, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscShelfBusTestPingTestsRxCardIndex.setStatus('mandatory')
mscShelfBusTestPingTestsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 251, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusTestPingTestsValue.setStatus('mandatory')
mscShelfBusTestPingFailuresTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 252), )
if mibBuilder.loadTexts: mscShelfBusTestPingFailuresTable.setStatus('mandatory')
mscShelfBusTestPingFailuresEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 252, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusTestIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusTestPingFailuresTxCardIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfBusTestPingFailuresRxCardIndex"))
if mibBuilder.loadTexts: mscShelfBusTestPingFailuresEntry.setStatus('mandatory')
mscShelfBusTestPingFailuresTxCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 252, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscShelfBusTestPingFailuresTxCardIndex.setStatus('mandatory')
mscShelfBusTestPingFailuresRxCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 252, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscShelfBusTestPingFailuresRxCardIndex.setStatus('mandatory')
mscShelfBusTestPingFailuresValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 3, 2, 252, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfBusTestPingFailuresValue.setStatus('mandatory')
mscShelfTest = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 4))
mscShelfTestRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 4, 1), )
if mibBuilder.loadTexts: mscShelfTestRowStatusTable.setStatus('mandatory')
mscShelfTestRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfTestIndex"))
if mibBuilder.loadTexts: mscShelfTestRowStatusEntry.setStatus('mandatory')
mscShelfTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfTestRowStatus.setStatus('mandatory')
mscShelfTestComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfTestComponentName.setStatus('mandatory')
mscShelfTestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfTestStorageType.setStatus('mandatory')
mscShelfTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscShelfTestIndex.setStatus('mandatory')
mscShelfTestProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 4, 10), )
if mibBuilder.loadTexts: mscShelfTestProvTable.setStatus('mandatory')
mscShelfTestProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfTestIndex"))
if mibBuilder.loadTexts: mscShelfTestProvEntry.setStatus('mandatory')
mscShelfTestAutomaticBusClockTest = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscShelfTestAutomaticBusClockTest.setStatus('mandatory')
mscShelfTestSetupTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 4, 11), )
if mibBuilder.loadTexts: mscShelfTestSetupTable.setStatus('mandatory')
mscShelfTestSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfTestIndex"))
if mibBuilder.loadTexts: mscShelfTestSetupEntry.setStatus('mandatory')
mscShelfTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("busClock", 0))).clone('busClock')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscShelfTestType.setStatus('mandatory')
mscShelfTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 4, 12), )
if mibBuilder.loadTexts: mscShelfTestResultsTable.setStatus('mandatory')
mscShelfTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 4, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscShelfIndex"), (0, "Nortel-MsCarrier-MscPassport-BusMIB", "mscShelfTestIndex"))
if mibBuilder.loadTexts: mscShelfTestResultsEntry.setStatus('mandatory')
mscShelfTestBusClockTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 13, 4, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noTest", 0), ("fail", 1), ("pass", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscShelfTestBusClockTestResult.setStatus('mandatory')
busGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 144, 1))
busGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 144, 1, 1))
busGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 144, 1, 1, 3))
busGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 144, 1, 1, 3, 2))
busCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 144, 3))
busCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 144, 3, 1))
busCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 144, 3, 1, 3))
busCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 144, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-BusMIB", mscShelfBusTestResultsTable=mscShelfBusTestResultsTable, mscShelfBusBusTapStatusIndex=mscShelfBusBusTapStatusIndex, mscShelfBusTestSelfTestResultsEntry=mscShelfBusTestSelfTestResultsEntry, mscShelfBusTestClockSourceTestResultsCardIndex=mscShelfBusTestClockSourceTestResultsCardIndex, mscShelfCardBusTapSelfTestErrorCode=mscShelfCardBusTapSelfTestErrorCode, mscShelfBusBusTapStatusTable=mscShelfBusBusTapStatusTable, mscShelfBusTestClockSourceTestResultsEntry=mscShelfBusTestClockSourceTestResultsEntry, busCapabilitiesCA=busCapabilitiesCA, mscShelfBus=mscShelfBus, mscShelfBusTestPingTestsTable=mscShelfBusTestPingTestsTable, mscShelfBusTestTimeRemaining=mscShelfBusTestTimeRemaining, mscShelfBusStateEntry=mscShelfBusStateEntry, mscShelfCardBusTapClockErrors=mscShelfCardBusTapClockErrors, mscShelfCardBusTapControlStatus=mscShelfCardBusTapControlStatus, mscShelfBusTestSetupTable=mscShelfBusTestSetupTable, mscShelfCardBusTapAdminState=mscShelfCardBusTapAdminState, mscShelfBusTestStateEntry=mscShelfBusTestStateEntry, mscShelfCardBusTapStateTable=mscShelfCardBusTapStateTable, mscShelfBusTestBroadcastTestResultsTable=mscShelfBusTestBroadcastTestResultsTable, mscShelfBusTestCauseOfTermination=mscShelfBusTestCauseOfTermination, mscShelfBusTestPingFailuresValue=mscShelfBusTestPingFailuresValue, mscShelfBusClockSourceStatusEntry=mscShelfBusClockSourceStatusEntry, mscShelfBusComponentName=mscShelfBusComponentName, mscShelfCardBusTapFrmTimeoutErrors=mscShelfCardBusTapFrmTimeoutErrors, mscShelfCardBusTapErrorsTable=mscShelfCardBusTapErrorsTable, mscShelfBusUtilization=mscShelfBusUtilization, mscShelfBusTestSelfTestResultsValue=mscShelfBusTestSelfTestResultsValue, mscShelfCardBusTapAlarmStatus=mscShelfCardBusTapAlarmStatus, mscShelfCardBusTapCardsAvailable=mscShelfCardBusTapCardsAvailable, busCapabilities=busCapabilities, mscShelfBusTestPingFailuresEntry=mscShelfBusTestPingFailuresEntry, mscShelfBusTestBroadcastTestResultsRxCardIndex=mscShelfBusTestBroadcastTestResultsRxCardIndex, mscShelfBusTestDuration=mscShelfBusTestDuration, mscShelfBusTest=mscShelfBusTest, mscShelfBusControlStatus=mscShelfBusControlStatus, mscShelfBusTestStateTable=mscShelfBusTestStateTable, mscShelfTestAutomaticBusClockTest=mscShelfTestAutomaticBusClockTest, mscShelfCardBusTapAvailabilityStatus=mscShelfCardBusTapAvailabilityStatus, mscShelfBusTestRowStatusEntry=mscShelfBusTestRowStatusEntry, mscShelfBusTestSelfTestResultsIndex=mscShelfBusTestSelfTestResultsIndex, mscShelfTestType=mscShelfTestType, mscShelfCardBusTapRowStatus=mscShelfCardBusTapRowStatus, mscShelfBusTestPingFailuresTxCardIndex=mscShelfBusTestPingFailuresTxCardIndex, mscShelfTestBusClockTestResult=mscShelfTestBusClockTestResult, mscShelfBusTestPingTestsEntry=mscShelfBusTestPingTestsEntry, busCapabilitiesCA02=busCapabilitiesCA02, mscShelfCardBusTapEndOfCellErrors=mscShelfCardBusTapEndOfCellErrors, mscShelfBusTestSetupEntry=mscShelfBusTestSetupEntry, mscShelfBusTestBroadcastTestResultsEntry=mscShelfBusTestBroadcastTestResultsEntry, mscShelfBusBusTapStatusValue=mscShelfBusBusTapStatusValue, mscShelfBusTestRowStatusTable=mscShelfBusTestRowStatusTable, mscShelfCardBusTapUsageState=mscShelfCardBusTapUsageState, busCapabilitiesCA02A=busCapabilitiesCA02A, mscShelfCardBusTapStateEntry=mscShelfCardBusTapStateEntry, mscShelfBusTestTestsDone=mscShelfBusTestTestsDone, mscShelfBusTestSelfTestResultsTable=mscShelfBusTestSelfTestResultsTable, mscShelfBusOperEntry=mscShelfBusOperEntry, mscShelfCardBusTapIndex=mscShelfCardBusTapIndex, mscShelfCardBusTapRowStatusEntry=mscShelfCardBusTapRowStatusEntry, mscShelfCardBusTapFrmDeliveryErrors=mscShelfCardBusTapFrmDeliveryErrors, busGroupCA02=busGroupCA02, mscShelfCardBusTapOperEntry=mscShelfCardBusTapOperEntry, mscShelfTestComponentName=mscShelfTestComponentName, mscShelfBusTestElapsedTime=mscShelfBusTestElapsedTime, mscShelfBusIndex=mscShelfBusIndex, mscShelfTestStorageType=mscShelfTestStorageType, mscShelfTestProvTable=mscShelfTestProvTable, mscShelfCardBusTapStorageType=mscShelfCardBusTapStorageType, mscShelfCardBusTapFrmCongestionErrors=mscShelfCardBusTapFrmCongestionErrors, mscShelfTestRowStatusTable=mscShelfTestRowStatusTable, mscShelfCardBusTapRowStatusTable=mscShelfCardBusTapRowStatusTable, mscShelfTestResultsEntry=mscShelfTestResultsEntry, mscShelfBusTestIndex=mscShelfBusTestIndex, mscShelfTestRowStatus=mscShelfTestRowStatus, mscShelfBusTestPingFailuresTable=mscShelfBusTestPingFailuresTable, mscShelfBusTestAdminState=mscShelfBusTestAdminState, mscShelfBusAvailabilityStatus=mscShelfBusAvailabilityStatus, mscShelfBusTestRowStatus=mscShelfBusTestRowStatus, mscShelfBusRowStatusTable=mscShelfBusRowStatusTable, mscShelfCardBusTapCardsTxTo=mscShelfCardBusTapCardsTxTo, mscShelfCardBusTapOperationalState=mscShelfCardBusTapOperationalState, mscShelfBusTestBroadcastTestResultsValue=mscShelfBusTestBroadcastTestResultsValue, mscShelfTestSetupTable=mscShelfTestSetupTable, mscShelfCardBusTapComponentName=mscShelfCardBusTapComponentName, mscShelfBusRowStatus=mscShelfBusRowStatus, mscShelfCardBusTapStandbyStatus=mscShelfCardBusTapStandbyStatus, mscShelfBusTestClockSourceTestResultsSourceIndex=mscShelfBusTestClockSourceTestResultsSourceIndex, mscShelfBusTestPingFailuresRxCardIndex=mscShelfBusTestPingFailuresRxCardIndex, mscShelfBusTestClockSourceTestResultsValue=mscShelfBusTestClockSourceTestResultsValue, mscShelfBusOperTable=mscShelfBusOperTable, mscShelfBusOperationalState=mscShelfBusOperationalState, mscShelfTest=mscShelfTest, mscShelfTestSetupEntry=mscShelfTestSetupEntry, mscShelfBusBusTapStatusEntry=mscShelfBusBusTapStatusEntry, mscShelfBusTestComponentName=mscShelfBusTestComponentName, mscShelfCardBusTapFrmSizeErrors=mscShelfCardBusTapFrmSizeErrors, mscShelfCardBusTapUnknownStatus=mscShelfCardBusTapUnknownStatus, mscShelfBusRowStatusEntry=mscShelfBusRowStatusEntry, mscShelfCardBusTapParityErrors=mscShelfCardBusTapParityErrors, mscShelfBusProceduralStatus=mscShelfBusProceduralStatus, busGroupCA=busGroupCA, mscShelfCardBusTapErrorsEntry=mscShelfCardBusTapErrorsEntry, mscShelfBusTestOperationalState=mscShelfBusTestOperationalState, busGroupCA02A=busGroupCA02A, mscShelfTestResultsTable=mscShelfTestResultsTable, mscShelfBusClockSourceStatusTable=mscShelfBusClockSourceStatusTable, busMIB=busMIB, mscShelfBusClockSourceStatusValue=mscShelfBusClockSourceStatusValue, mscShelfBusStateTable=mscShelfBusStateTable, mscShelfBusUsageState=mscShelfBusUsageState, mscShelfBusTestResultsEntry=mscShelfBusTestResultsEntry, mscShelfTestRowStatusEntry=mscShelfTestRowStatusEntry, mscShelfBusStorageType=mscShelfBusStorageType, mscShelfBusTestPingTestsTxCardIndex=mscShelfBusTestPingTestsTxCardIndex, mscShelfTestIndex=mscShelfTestIndex, mscShelfBusClockSourceStatusIndex=mscShelfBusClockSourceStatusIndex, busGroup=busGroup, mscShelfBusUnknownStatus=mscShelfBusUnknownStatus, mscShelfBusTestUsageState=mscShelfBusTestUsageState, mscShelfCardBusTap=mscShelfCardBusTap, mscShelfCardBusTapProceduralStatus=mscShelfCardBusTapProceduralStatus, mscShelfBusStandbyStatus=mscShelfBusStandbyStatus, mscShelfCardBusTapOperTable=mscShelfCardBusTapOperTable, mscShelfBusClockSource=mscShelfBusClockSource, mscShelfBusTestPingTestsRxCardIndex=mscShelfBusTestPingTestsRxCardIndex, mscShelfCardBusTapFailuresInEffect=mscShelfCardBusTapFailuresInEffect, mscShelfCardBusTapDependenciesInEffect=mscShelfCardBusTapDependenciesInEffect, mscShelfBusAdminState=mscShelfBusAdminState, mscShelfCardBusTapFrmCollisionErrors=mscShelfCardBusTapFrmCollisionErrors, mscShelfBusTestPingTestsValue=mscShelfBusTestPingTestsValue, mscShelfBusAlarmStatus=mscShelfBusAlarmStatus, mscShelfTestProvEntry=mscShelfTestProvEntry, mscShelfBusTestClockSourceTestResultsTable=mscShelfBusTestClockSourceTestResultsTable, mscShelfBusTestBroadcastTestResultsTxCardIndex=mscShelfBusTestBroadcastTestResultsTxCardIndex, mscShelfBusTestStorageType=mscShelfBusTestStorageType)
