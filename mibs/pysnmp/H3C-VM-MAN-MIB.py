#
# PySNMP MIB module H3C-VM-MAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-VM-MAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:11:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
entPhysicalAssetID, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalAssetID")
h3cSurveillanceMIB, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cSurveillanceMIB")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, NotificationType, ModuleIdentity, Gauge32, TimeTicks, Integer32, Unsigned32, Bits, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "NotificationType", "ModuleIdentity", "Gauge32", "TimeTicks", "Integer32", "Unsigned32", "Bits", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "iso", "MibIdentifier")
DateAndTime, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TextualConvention")
h3cVMMan = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1))
if mibBuilder.loadTexts: h3cVMMan.setLastUpdated('200704130000Z')
if mibBuilder.loadTexts: h3cVMMan.setOrganization('H3C Technologies Co., Ltd.')
h3cVMManMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 1))
h3cVMCapabilitySet = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 1, 1), Bits().clone(namedValues=NamedValues(("cms", 0), ("css", 1), ("dm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVMCapabilitySet.setStatus('current')
h3cVMStat = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 1, 2))
h3cVMStatTotalConnEstablishRequests = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 1, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVMStatTotalConnEstablishRequests.setStatus('current')
h3cVMStatSuccConnEstablishRequests = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 1, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVMStatSuccConnEstablishRequests.setStatus('current')
h3cVMStatFailConnEstablishRequests = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 1, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVMStatFailConnEstablishRequests.setStatus('current')
h3cVMStatTotalConnReleaseRequests = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVMStatTotalConnReleaseRequests.setStatus('current')
h3cVMStatSuccConnReleaseRequests = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 1, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVMStatSuccConnReleaseRequests.setStatus('current')
h3cVMStatFailConnReleaseRequests = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVMStatFailConnReleaseRequests.setStatus('current')
h3cVMStatExceptionTerminationConn = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 1, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cVMStatExceptionTerminationConn.setStatus('current')
h3cVMManMIBTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2))
h3cVMManTrapPrex = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0))
h3cVMManDeviceOnlineTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 1)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevName"))
if mibBuilder.loadTexts: h3cVMManDeviceOnlineTrap.setStatus('current')
h3cVMManDeviceOfflineTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 2)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevName"))
if mibBuilder.loadTexts: h3cVMManDeviceOfflineTrap.setStatus('current')
h3cVMManForwardDeviceExternalSemaphoreTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 3)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevName"), ("H3C-VM-MAN-MIB", "h3cVMManPUExternalInputAlarmChannelID"))
if mibBuilder.loadTexts: h3cVMManForwardDeviceExternalSemaphoreTrap.setStatus('current')
h3cVMManForwardDeviceVideoLossTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 4)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevName"), ("H3C-VM-MAN-MIB", "h3cVMManPUECVideoChannelName"))
if mibBuilder.loadTexts: h3cVMManForwardDeviceVideoLossTrap.setStatus('current')
h3cVMManForwardDeviceVideoRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 5)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevName"), ("H3C-VM-MAN-MIB", "h3cVMManPUECVideoChannelName"))
if mibBuilder.loadTexts: h3cVMManForwardDeviceVideoRecoverTrap.setStatus('current')
h3cVMManForwardDeviceMotionDetectTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 6)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevName"), ("H3C-VM-MAN-MIB", "h3cVMManPUECVideoChannelName"), ("H3C-VM-MAN-MIB", "h3cVMManRegionCoordinateX1"), ("H3C-VM-MAN-MIB", "h3cVMManRegionCoordinateY1"), ("H3C-VM-MAN-MIB", "h3cVMManRegionCoordinateX2"), ("H3C-VM-MAN-MIB", "h3cVMManRegionCoordinateY2"))
if mibBuilder.loadTexts: h3cVMManForwardDeviceMotionDetectTrap.setStatus('current')
h3cVMManForwardDeviceCoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 7)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevName"), ("H3C-VM-MAN-MIB", "h3cVMManPUECVideoChannelName"), ("H3C-VM-MAN-MIB", "h3cVMManRegionCoordinateX1"), ("H3C-VM-MAN-MIB", "h3cVMManRegionCoordinateY1"), ("H3C-VM-MAN-MIB", "h3cVMManRegionCoordinateX2"), ("H3C-VM-MAN-MIB", "h3cVMManRegionCoordinateY2"))
if mibBuilder.loadTexts: h3cVMManForwardDeviceCoverTrap.setStatus('current')
h3cVMManForwardDeviceCpuUsageThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 8)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevName"), ("H3C-VM-MAN-MIB", "h3cVMManCpuUsage"), ("H3C-VM-MAN-MIB", "h3cVMManCpuUsageThreshold"))
if mibBuilder.loadTexts: h3cVMManForwardDeviceCpuUsageThresholdTrap.setStatus('current')
h3cVMManForwardDeviceMemUsageThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 9)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevName"), ("H3C-VM-MAN-MIB", "h3cVMManMemUsage"), ("H3C-VM-MAN-MIB", "h3cVMManMemUsageThreshold"))
if mibBuilder.loadTexts: h3cVMManForwardDeviceMemUsageThresholdTrap.setStatus('current')
h3cVMManForwardDeviceHardDiskUsageThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 10)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevName"), ("H3C-VM-MAN-MIB", "h3cVMManHardDiskUsage"), ("H3C-VM-MAN-MIB", "h3cVMManHardDiskUsageThreshold"))
if mibBuilder.loadTexts: h3cVMManForwardDeviceHardDiskUsageThresholdTrap.setStatus('current')
h3cVMManForwardDeviceTemperatureThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 11)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevName"), ("H3C-VM-MAN-MIB", "h3cVMManTemperature"), ("H3C-VM-MAN-MIB", "h3cVMManTemperatureThreshold"))
if mibBuilder.loadTexts: h3cVMManForwardDeviceTemperatureThresholdTrap.setStatus('current')
h3cVMManForwardDeviceStartKinescopeTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 12)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevName"), ("H3C-VM-MAN-MIB", "h3cVMManPUECVideoChannelName"))
if mibBuilder.loadTexts: h3cVMManForwardDeviceStartKinescopeTrap.setStatus('current')
h3cVMManForwardDeviceStopKinescopeTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 13)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevName"), ("H3C-VM-MAN-MIB", "h3cVMManPUECVideoChannelName"))
if mibBuilder.loadTexts: h3cVMManForwardDeviceStopKinescopeTrap.setStatus('current')
h3cVMManClientReportTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 14)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManClientIP"), ("H3C-VM-MAN-MIB", "h3cVMManUserName"), ("H3C-VM-MAN-MIB", "h3cVMManReportContent"))
if mibBuilder.loadTexts: h3cVMManClientReportTrap.setStatus('current')
h3cVMManClientRealtimeSurveillanceNoVideoTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 15)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManClientIP"), ("H3C-VM-MAN-MIB", "h3cVMManUserName"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevName"), ("H3C-VM-MAN-MIB", "h3cVMManPUECVideoChannelName"))
if mibBuilder.loadTexts: h3cVMManClientRealtimeSurveillanceNoVideoTrap.setStatus('current')
h3cVMManClientVODNoVideoTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 16)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManClientIP"), ("H3C-VM-MAN-MIB", "h3cVMManUserName"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevName"), ("H3C-VM-MAN-MIB", "h3cVMManPUECVideoChannelName"), ("H3C-VM-MAN-MIB", "h3cVMManClientVODStart"), ("H3C-VM-MAN-MIB", "h3cVMManClientVODEnd"), ("H3C-VM-MAN-MIB", "h3cVMManIPSANDevIP"))
if mibBuilder.loadTexts: h3cVMManClientVODNoVideoTrap.setStatus('current')
h3cVMManClientRealtimeSurveillanceVideoStreamDiscontinuityTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 17)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManClientIP"), ("H3C-VM-MAN-MIB", "h3cVMManUserName"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevName"), ("H3C-VM-MAN-MIB", "h3cVMManPUECVideoChannelName"), ("H3C-VM-MAN-MIB", "h3cVMManClientVideoStreamDiscontinuityInterval"), ("H3C-VM-MAN-MIB", "h3cVMManClientVideoStreamDiscontinuityIntervalThreshold"), ("H3C-VM-MAN-MIB", "h3cVMManClientStatPeriod"))
if mibBuilder.loadTexts: h3cVMManClientRealtimeSurveillanceVideoStreamDiscontinuityTrap.setStatus('current')
h3cVMManClientVODVideoStreamDiscontinuityTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 18)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManClientIP"), ("H3C-VM-MAN-MIB", "h3cVMManUserName"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevName"), ("H3C-VM-MAN-MIB", "h3cVMManPUECVideoChannelName"), ("H3C-VM-MAN-MIB", "h3cVMManClientVODStart"), ("H3C-VM-MAN-MIB", "h3cVMManClientVODEnd"), ("H3C-VM-MAN-MIB", "h3cVMManIPSANDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManClientVideoStreamDiscontinuityInterval"), ("H3C-VM-MAN-MIB", "h3cVMManClientVideoStreamDiscontinuityIntervalThreshold"), ("H3C-VM-MAN-MIB", "h3cVMManClientStatPeriod"))
if mibBuilder.loadTexts: h3cVMManClientVODVideoStreamDiscontinuityTrap.setStatus('current')
h3cVMManClientCtlConnExceptionTerminationTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 19)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManClientIP"), ("H3C-VM-MAN-MIB", "h3cVMManUserName"))
if mibBuilder.loadTexts: h3cVMManClientCtlConnExceptionTerminationTrap.setStatus('current')
h3cVMManClientFrequencyLoginFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 20)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManClientIP"), ("H3C-VM-MAN-MIB", "h3cVMManUserName"), ("H3C-VM-MAN-MIB", "h3cVMManClientLoginFailNum"), ("H3C-VM-MAN-MIB", "h3cVMManClientLoginFailNumThreshold"), ("H3C-VM-MAN-MIB", "h3cVMManClientStatPeriod"))
if mibBuilder.loadTexts: h3cVMManClientFrequencyLoginFailTrap.setStatus('current')
h3cVMManClientFrequencyVODFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 21)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManClientIP"), ("H3C-VM-MAN-MIB", "h3cVMManUserName"), ("H3C-VM-MAN-MIB", "h3cVMManClientVODFailNum"), ("H3C-VM-MAN-MIB", "h3cVMManClientVODFailNumThreshold"), ("H3C-VM-MAN-MIB", "h3cVMManClientStatPeriod"))
if mibBuilder.loadTexts: h3cVMManClientFrequencyVODFailTrap.setStatus('current')
h3cVMManDMECDisobeyStorageScheduleTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 22)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManPUECVideoChannelName"))
if mibBuilder.loadTexts: h3cVMManDMECDisobeyStorageScheduleTrap.setStatus('current')
h3cVMManDMECDisobeyStorageScheduleRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 0, 23)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("H3C-VM-MAN-MIB", "h3cVMManRegDevIP"), ("H3C-VM-MAN-MIB", "h3cVMManPUECVideoChannelName"))
if mibBuilder.loadTexts: h3cVMManDMECDisobeyStorageScheduleRecoverTrap.setStatus('current')
h3cVMManTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1))
h3cVMManIPSANDevIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 1), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManIPSANDevIP.setStatus('current')
h3cVMManRegDevIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 2), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManRegDevIP.setStatus('current')
h3cVMManRegDevName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManRegDevName.setStatus('current')
h3cVMManRegionCoordinateX1 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManRegionCoordinateX1.setStatus('current')
h3cVMManRegionCoordinateY1 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 5), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManRegionCoordinateY1.setStatus('current')
h3cVMManRegionCoordinateX2 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 6), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManRegionCoordinateX2.setStatus('current')
h3cVMManRegionCoordinateY2 = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 7), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManRegionCoordinateY2.setStatus('current')
h3cVMManCpuUsage = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManCpuUsage.setStatus('current')
h3cVMManCpuUsageThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManCpuUsageThreshold.setStatus('current')
h3cVMManMemUsage = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManMemUsage.setStatus('current')
h3cVMManMemUsageThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManMemUsageThreshold.setStatus('current')
h3cVMManHardDiskUsage = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManHardDiskUsage.setStatus('current')
h3cVMManHardDiskUsageThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManHardDiskUsageThreshold.setStatus('current')
h3cVMManTemperature = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 14), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManTemperature.setStatus('current')
h3cVMManTemperatureThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 15), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManTemperatureThreshold.setStatus('current')
h3cVMManClientIP = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 16), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManClientIP.setStatus('current')
h3cVMManUserName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManUserName.setStatus('current')
h3cVMManReportContent = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManReportContent.setStatus('current')
h3cVMManClientVideoStreamDiscontinuityInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 19), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManClientVideoStreamDiscontinuityInterval.setStatus('current')
h3cVMManClientVideoStreamDiscontinuityIntervalThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 20), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManClientVideoStreamDiscontinuityIntervalThreshold.setStatus('current')
h3cVMManClientStatPeriod = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 21), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManClientStatPeriod.setStatus('current')
h3cVMManClientLoginFailNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 22), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManClientLoginFailNum.setStatus('current')
h3cVMManClientLoginFailNumThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 23), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManClientLoginFailNumThreshold.setStatus('current')
h3cVMManClientVODFailNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 24), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManClientVODFailNum.setStatus('current')
h3cVMManClientVODFailNumThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 25), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManClientVODFailNumThreshold.setStatus('current')
h3cVMManClientVODStart = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 26), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManClientVODStart.setStatus('current')
h3cVMManClientVODEnd = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 27), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManClientVODEnd.setStatus('current')
h3cVMManPUExternalInputAlarmChannelID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 28), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManPUExternalInputAlarmChannelID.setStatus('current')
h3cVMManPUECVideoChannelName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 9, 1, 2, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cVMManPUECVideoChannelName.setStatus('current')
mibBuilder.exportSymbols("H3C-VM-MAN-MIB", h3cVMManForwardDeviceVideoLossTrap=h3cVMManForwardDeviceVideoLossTrap, h3cVMManClientRealtimeSurveillanceVideoStreamDiscontinuityTrap=h3cVMManClientRealtimeSurveillanceVideoStreamDiscontinuityTrap, h3cVMStat=h3cVMStat, h3cVMManForwardDeviceStopKinescopeTrap=h3cVMManForwardDeviceStopKinescopeTrap, h3cVMManMemUsage=h3cVMManMemUsage, h3cVMManClientFrequencyVODFailTrap=h3cVMManClientFrequencyVODFailTrap, h3cVMManClientLoginFailNumThreshold=h3cVMManClientLoginFailNumThreshold, h3cVMManForwardDeviceExternalSemaphoreTrap=h3cVMManForwardDeviceExternalSemaphoreTrap, h3cVMManDeviceOnlineTrap=h3cVMManDeviceOnlineTrap, h3cVMManDeviceOfflineTrap=h3cVMManDeviceOfflineTrap, h3cVMManTrapObjects=h3cVMManTrapObjects, h3cVMManForwardDeviceStartKinescopeTrap=h3cVMManForwardDeviceStartKinescopeTrap, h3cVMStatSuccConnEstablishRequests=h3cVMStatSuccConnEstablishRequests, h3cVMManCpuUsageThreshold=h3cVMManCpuUsageThreshold, h3cVMManClientVideoStreamDiscontinuityInterval=h3cVMManClientVideoStreamDiscontinuityInterval, h3cVMManClientVODFailNum=h3cVMManClientVODFailNum, h3cVMMan=h3cVMMan, h3cVMManForwardDeviceMemUsageThresholdTrap=h3cVMManForwardDeviceMemUsageThresholdTrap, h3cVMStatExceptionTerminationConn=h3cVMStatExceptionTerminationConn, h3cVMManHardDiskUsageThreshold=h3cVMManHardDiskUsageThreshold, h3cVMManClientVODEnd=h3cVMManClientVODEnd, h3cVMManPUECVideoChannelName=h3cVMManPUECVideoChannelName, h3cVMManClientVODFailNumThreshold=h3cVMManClientVODFailNumThreshold, h3cVMManForwardDeviceVideoRecoverTrap=h3cVMManForwardDeviceVideoRecoverTrap, h3cVMManForwardDeviceCpuUsageThresholdTrap=h3cVMManForwardDeviceCpuUsageThresholdTrap, h3cVMManMIBObjects=h3cVMManMIBObjects, h3cVMManDMECDisobeyStorageScheduleRecoverTrap=h3cVMManDMECDisobeyStorageScheduleRecoverTrap, h3cVMCapabilitySet=h3cVMCapabilitySet, h3cVMManHardDiskUsage=h3cVMManHardDiskUsage, h3cVMManRegDevIP=h3cVMManRegDevIP, h3cVMManTemperatureThreshold=h3cVMManTemperatureThreshold, h3cVMManClientIP=h3cVMManClientIP, h3cVMManPUExternalInputAlarmChannelID=h3cVMManPUExternalInputAlarmChannelID, h3cVMManClientStatPeriod=h3cVMManClientStatPeriod, h3cVMManTemperature=h3cVMManTemperature, h3cVMStatFailConnReleaseRequests=h3cVMStatFailConnReleaseRequests, h3cVMManRegionCoordinateX1=h3cVMManRegionCoordinateX1, h3cVMStatTotalConnReleaseRequests=h3cVMStatTotalConnReleaseRequests, h3cVMStatSuccConnReleaseRequests=h3cVMStatSuccConnReleaseRequests, h3cVMManUserName=h3cVMManUserName, h3cVMManClientReportTrap=h3cVMManClientReportTrap, h3cVMManReportContent=h3cVMManReportContent, h3cVMManClientVideoStreamDiscontinuityIntervalThreshold=h3cVMManClientVideoStreamDiscontinuityIntervalThreshold, h3cVMManClientVODVideoStreamDiscontinuityTrap=h3cVMManClientVODVideoStreamDiscontinuityTrap, h3cVMManRegDevName=h3cVMManRegDevName, h3cVMManClientVODNoVideoTrap=h3cVMManClientVODNoVideoTrap, h3cVMManClientFrequencyLoginFailTrap=h3cVMManClientFrequencyLoginFailTrap, h3cVMManForwardDeviceCoverTrap=h3cVMManForwardDeviceCoverTrap, h3cVMStatFailConnEstablishRequests=h3cVMStatFailConnEstablishRequests, h3cVMManIPSANDevIP=h3cVMManIPSANDevIP, h3cVMStatTotalConnEstablishRequests=h3cVMStatTotalConnEstablishRequests, h3cVMManRegionCoordinateX2=h3cVMManRegionCoordinateX2, h3cVMManRegionCoordinateY2=h3cVMManRegionCoordinateY2, h3cVMManForwardDeviceMotionDetectTrap=h3cVMManForwardDeviceMotionDetectTrap, h3cVMManRegionCoordinateY1=h3cVMManRegionCoordinateY1, h3cVMManCpuUsage=h3cVMManCpuUsage, h3cVMManForwardDeviceTemperatureThresholdTrap=h3cVMManForwardDeviceTemperatureThresholdTrap, h3cVMManClientLoginFailNum=h3cVMManClientLoginFailNum, h3cVMManDMECDisobeyStorageScheduleTrap=h3cVMManDMECDisobeyStorageScheduleTrap, h3cVMManForwardDeviceHardDiskUsageThresholdTrap=h3cVMManForwardDeviceHardDiskUsageThresholdTrap, h3cVMManClientRealtimeSurveillanceNoVideoTrap=h3cVMManClientRealtimeSurveillanceNoVideoTrap, h3cVMManMemUsageThreshold=h3cVMManMemUsageThreshold, h3cVMManMIBTrap=h3cVMManMIBTrap, PYSNMP_MODULE_ID=h3cVMMan, h3cVMManClientCtlConnExceptionTerminationTrap=h3cVMManClientCtlConnExceptionTerminationTrap, h3cVMManClientVODStart=h3cVMManClientVODStart, h3cVMManTrapPrex=h3cVMManTrapPrex)
