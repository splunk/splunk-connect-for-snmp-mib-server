#
# PySNMP MIB module HH3C-E1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-E1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:13:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, NotificationType, ObjectIdentity, Counter64, IpAddress, Unsigned32, iso, TimeTicks, Gauge32, Integer32, ModuleIdentity, Counter32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "NotificationType", "ObjectIdentity", "Counter64", "IpAddress", "Unsigned32", "iso", "TimeTicks", "Gauge32", "Integer32", "ModuleIdentity", "Counter32", "MibIdentifier")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
hh3cE1 = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 28))
hh3cE1.setRevisions(('2012-07-16 17:41', '2010-04-08 18:55', '2009-06-08 17:41', '2004-12-01 14:36',))
if mibBuilder.loadTexts: hh3cE1.setLastUpdated('201207161741Z')
if mibBuilder.loadTexts: hh3cE1.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
hh3ce1InterfaceStatusTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 28, 1), )
if mibBuilder.loadTexts: hh3ce1InterfaceStatusTable.setStatus('current')
hh3ce1InterfaceStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 28, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3ce1InterfaceStatusEntry.setStatus('current')
hh3ce1InterfaceInErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1InterfaceInErrs.setStatus('current')
hh3ce1InterfaceInRuntsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1InterfaceInRuntsErrs.setStatus('current')
hh3ce1InterfaceInGiantsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1InterfaceInGiantsErrs.setStatus('current')
hh3ce1InterfaceInCrcErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1InterfaceInCrcErrs.setStatus('current')
hh3ce1InterfaceInAlignErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1InterfaceInAlignErrs.setStatus('current')
hh3ce1InterfaceInOverRunsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1InterfaceInOverRunsErrs.setStatus('current')
hh3ce1InterfaceInDribblesErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1InterfaceInDribblesErrs.setStatus('current')
hh3ce1InterfaceInAbortedSeqErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1InterfaceInAbortedSeqErrs.setStatus('current')
hh3ce1InterfaceInNoBufferErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1InterfaceInNoBufferErrs.setStatus('current')
hh3ce1InterfaceInFramingErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1InterfaceInFramingErrs.setStatus('current')
hh3ce1InterfaceOutputErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1InterfaceOutputErrs.setStatus('current')
hh3ce1InterfaceOutUnderRunErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1InterfaceOutUnderRunErrs.setStatus('current')
hh3ce1InterfaceOutCollisonsErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1InterfaceOutCollisonsErrs.setStatus('current')
hh3ce1InterfaceOutDeferedErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1InterfaceOutDeferedErrs.setStatus('current')
hh3ce1Table = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 28, 2), )
if mibBuilder.loadTexts: hh3ce1Table.setStatus('current')
hh3ce1Entry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 28, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3ce1Entry.setStatus('current')
class Hh3cE1TimeSlot(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

hh3ce1Type = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 2, 1, 1), Bits().clone(namedValues=NamedValues(("voice", 0), ("pos", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1Type.setStatus('current')
hh3ce1Clock = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("slave", 1), ("master", 2), ("internal", 3), ("line", 4), ("linePri", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3ce1Clock.setStatus('current')
hh3ce1FrameFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("crc4", 1), ("nocrc4", 2))).clone('crc4')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3ce1FrameFormat.setStatus('current')
hh3ce1LineCode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("ami", 1), ("hdb3", 3))).clone('hdb3')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3ce1LineCode.setStatus('current')
hh3ce1PriSetTimeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 2, 1, 5), Hh3cE1TimeSlot()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3ce1PriSetTimeSlot.setStatus('current')
hh3ce1DChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1DChannelIndex.setStatus('current')
hh3ce1SubScribLineChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1SubScribLineChannelIndex.setStatus('current')
hh3ce1FcmChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1FcmChannelIndex.setStatus('current')
hh3ce1InterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 28, 3), )
if mibBuilder.loadTexts: hh3ce1InterfaceTable.setStatus('current')
hh3ce1InterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 28, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3ce1InterfaceEntry.setStatus('current')
hh3ce1ControllerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3ce1ControllerIndex.setStatus('current')
hh3ce1TimeSlotSetTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 28, 4), )
if mibBuilder.loadTexts: hh3ce1TimeSlotSetTable.setStatus('current')
hh3ce1TimeSlotSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 28, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3ce1TimeSlotSetEntry.setStatus('current')
hh3ce1TimeSlotSetGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3ce1TimeSlotSetGroupId.setStatus('current')
hh3ce1TimeSlotSetSignalType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unkown", 1), ("em-delay", 2), ("em-immediate", 3), ("em-wink", 4), ("fxo-ground", 5), ("fxo-loop", 6), ("fxs-ground", 7), ("fxs-loop", 8), ("r2", 9)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3ce1TimeSlotSetSignalType.setStatus('current')
hh3ce1TimeSlotSetList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 4, 1, 3), Hh3cE1TimeSlot()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3ce1TimeSlotSetList.setStatus('current')
hh3ce1TimeSlotSetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 28, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3ce1TimeSlotSetRowStatus.setStatus('current')
mibBuilder.exportSymbols("HH3C-E1-MIB", hh3ce1SubScribLineChannelIndex=hh3ce1SubScribLineChannelIndex, Hh3cE1TimeSlot=Hh3cE1TimeSlot, hh3ce1InterfaceInAbortedSeqErrs=hh3ce1InterfaceInAbortedSeqErrs, hh3ce1Clock=hh3ce1Clock, hh3ce1InterfaceOutputErrs=hh3ce1InterfaceOutputErrs, hh3ce1FcmChannelIndex=hh3ce1FcmChannelIndex, hh3ce1LineCode=hh3ce1LineCode, hh3ce1TimeSlotSetRowStatus=hh3ce1TimeSlotSetRowStatus, hh3ce1DChannelIndex=hh3ce1DChannelIndex, hh3ce1InterfaceInGiantsErrs=hh3ce1InterfaceInGiantsErrs, hh3ce1InterfaceInDribblesErrs=hh3ce1InterfaceInDribblesErrs, hh3ce1TimeSlotSetList=hh3ce1TimeSlotSetList, hh3ce1Table=hh3ce1Table, hh3ce1InterfaceStatusTable=hh3ce1InterfaceStatusTable, hh3ce1InterfaceInNoBufferErrs=hh3ce1InterfaceInNoBufferErrs, hh3ce1PriSetTimeSlot=hh3ce1PriSetTimeSlot, hh3ce1FrameFormat=hh3ce1FrameFormat, hh3ce1InterfaceOutUnderRunErrs=hh3ce1InterfaceOutUnderRunErrs, hh3ce1InterfaceOutCollisonsErrs=hh3ce1InterfaceOutCollisonsErrs, hh3cE1=hh3cE1, PYSNMP_MODULE_ID=hh3cE1, hh3ce1InterfaceInAlignErrs=hh3ce1InterfaceInAlignErrs, hh3ce1Type=hh3ce1Type, hh3ce1InterfaceTable=hh3ce1InterfaceTable, hh3ce1InterfaceEntry=hh3ce1InterfaceEntry, hh3ce1TimeSlotSetSignalType=hh3ce1TimeSlotSetSignalType, hh3ce1InterfaceInRuntsErrs=hh3ce1InterfaceInRuntsErrs, hh3ce1TimeSlotSetEntry=hh3ce1TimeSlotSetEntry, hh3ce1TimeSlotSetTable=hh3ce1TimeSlotSetTable, hh3ce1InterfaceOutDeferedErrs=hh3ce1InterfaceOutDeferedErrs, hh3ce1Entry=hh3ce1Entry, hh3ce1ControllerIndex=hh3ce1ControllerIndex, hh3ce1TimeSlotSetGroupId=hh3ce1TimeSlotSetGroupId, hh3ce1InterfaceInErrs=hh3ce1InterfaceInErrs, hh3ce1InterfaceStatusEntry=hh3ce1InterfaceStatusEntry, hh3ce1InterfaceInFramingErrs=hh3ce1InterfaceInFramingErrs, hh3ce1InterfaceInCrcErrs=hh3ce1InterfaceInCrcErrs, hh3ce1InterfaceInOverRunsErrs=hh3ce1InterfaceInOverRunsErrs)
