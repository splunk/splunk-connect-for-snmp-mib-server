#
# PySNMP MIB module SNANET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SNANET-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:59:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, enterprises, Bits, TimeTicks, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Integer32, ModuleIdentity, Counter64, ObjectIdentity, Unsigned32, IpAddress, MibIdentifier, Counter32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "enterprises", "Bits", "TimeTicks", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Integer32", "ModuleIdentity", "Counter64", "ObjectIdentity", "Unsigned32", "IpAddress", "MibIdentifier", "Counter32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
unisys = MibIdentifier((1, 3, 6, 1, 4, 1, 223))
dcp = MibIdentifier((1, 3, 6, 1, 4, 1, 223, 8))
snanet = MibIdentifier((1, 3, 6, 1, 4, 1, 223, 8, 3))
prodInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 223, 8, 3, 1))
t5node = MibIdentifier((1, 3, 6, 1, 4, 1, 223, 8, 3, 2))
subarea = MibIdentifier((1, 3, 6, 1, 4, 1, 223, 8, 3, 3))
snaNau = MibIdentifier((1, 3, 6, 1, 4, 1, 223, 8, 3, 4))
snaSession = MibIdentifier((1, 3, 6, 1, 4, 1, 223, 8, 3, 5))
snaLink = MibIdentifier((1, 3, 6, 1, 4, 1, 223, 8, 3, 6))
prodInfoDesc = MibScalar((1, 3, 6, 1, 4, 1, 223, 8, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prodInfoDesc.setStatus('mandatory')
prodInfoFeatures = MibScalar((1, 3, 6, 1, 4, 1, 223, 8, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prodInfoFeatures.setStatus('mandatory')
t5nodeTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 1), )
if mibBuilder.loadTexts: t5nodeTable.setStatus('mandatory')
t5nodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 1, 1), ).setIndexNames((0, "SNANET-MIB", "t5nodeIndex"))
if mibBuilder.loadTexts: t5nodeEntry.setStatus('mandatory')
t5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5nodeIndex.setStatus('mandatory')
t5nodeDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5nodeDomainName.setStatus('mandatory')
t5nodeOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("up", 2), ("down", 3), ("standby", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5nodeOperState.setStatus('mandatory')
t5nodeSubareaNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5nodeSubareaNumber.setStatus('mandatory')
t5nodeSscpName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5nodeSscpName.setStatus('mandatory')
t5nodeNetworkName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5nodeNetworkName.setStatus('mandatory')
t5nodeSscpId = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5nodeSscpId.setStatus('mandatory')
t5nodePuName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5nodePuName.setStatus('mandatory')
t5CdrmTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 2), )
if mibBuilder.loadTexts: t5CdrmTable.setStatus('mandatory')
t5CdrmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 2, 1), ).setIndexNames((0, "SNANET-MIB", "t5CdrmT5nodeIndex"), (0, "SNANET-MIB", "t5CdrmName"))
if mibBuilder.loadTexts: t5CdrmEntry.setStatus('mandatory')
t5CdrmT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CdrmT5nodeIndex.setStatus('mandatory')
t5CdrmName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CdrmName.setStatus('mandatory')
t5CdrmSnaName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CdrmSnaName.setStatus('mandatory')
t5CdrmType = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("external", 1), ("snanet", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CdrmType.setStatus('mandatory')
t5CdrmAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("up", 2), ("down", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t5CdrmAdminState.setStatus('mandatory')
t5CdrmOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CdrmOperState.setStatus('mandatory')
t5CdrmSubareaNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CdrmSubareaNumber.setStatus('mandatory')
t5CdrmNetworkName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CdrmNetworkName.setStatus('mandatory')
t5CdrmElementAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CdrmElementAddress.setStatus('mandatory')
t5CdrscTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 3), )
if mibBuilder.loadTexts: t5CdrscTable.setStatus('mandatory')
t5CdrscEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 3, 1), ).setIndexNames((0, "SNANET-MIB", "t5CdrscT5nodeIndex"), (0, "SNANET-MIB", "t5CdrscName"))
if mibBuilder.loadTexts: t5CdrscEntry.setStatus('mandatory')
t5CdrscT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CdrscT5nodeIndex.setStatus('mandatory')
t5CdrscName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CdrscName.setStatus('mandatory')
t5CdrscSnaName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CdrscSnaName.setStatus('mandatory')
t5CdrscCdrmName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CdrscCdrmName.setStatus('mandatory')
t5CdrscAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("up", 2), ("down", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t5CdrscAdminState.setStatus('mandatory')
t5CdrscOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CdrscOperState.setStatus('mandatory')
t5CdrscSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CdrscSessions.setStatus('mandatory')
t5CdrscDlmName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CdrscDlmName.setStatus('mandatory')
t5CdrscCosName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 3, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CdrscCosName.setStatus('mandatory')
t5DlmTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4), )
if mibBuilder.loadTexts: t5DlmTable.setStatus('mandatory')
t5DlmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4, 1), ).setIndexNames((0, "SNANET-MIB", "t5DlmT5nodeIndex"), (0, "SNANET-MIB", "t5DlmName"))
if mibBuilder.loadTexts: t5DlmEntry.setStatus('mandatory')
t5DlmT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5DlmT5nodeIndex.setStatus('mandatory')
t5DlmName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5DlmName.setStatus('mandatory')
t5DlmSnaName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5DlmSnaName.setStatus('mandatory')
t5DlmFmprof = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5DlmFmprof.setStatus('mandatory')
t5DlmTsprof = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5DlmTsprof.setStatus('mandatory')
t5DlmPriprot = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5DlmPriprot.setStatus('mandatory')
t5DlmSecprot = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5DlmSecprot.setStatus('mandatory')
t5DlmComprot = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5DlmComprot.setStatus('mandatory')
t5DlmRusizes = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5DlmRusizes.setStatus('mandatory')
t5DlmPservic = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5DlmPservic.setStatus('mandatory')
t5DlmPsndpac = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5DlmPsndpac.setStatus('mandatory')
t5DlmPrcvpac = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5DlmPrcvpac.setStatus('mandatory')
t5DlmSsndpac = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5DlmSsndpac.setStatus('mandatory')
t5DlmSrcvpac = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5DlmSrcvpac.setStatus('mandatory')
t5DlmEncr = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5DlmEncr.setStatus('mandatory')
t5DlmBindType = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5DlmBindType.setStatus('mandatory')
t5DlmCos = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 4, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5DlmCos.setStatus('mandatory')
t5CosTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 5), )
if mibBuilder.loadTexts: t5CosTable.setStatus('mandatory')
t5CosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 5, 1), ).setIndexNames((0, "SNANET-MIB", "t5CosT5nodeIndex"), (0, "SNANET-MIB", "t5CosName"))
if mibBuilder.loadTexts: t5CosEntry.setStatus('mandatory')
t5CosT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CosT5nodeIndex.setStatus('mandatory')
t5CosName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CosName.setStatus('mandatory')
t5CosSnaName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CosSnaName.setStatus('mandatory')
t5CosVrids = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5CosVrids.setStatus('mandatory')
t5AliasTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 6), )
if mibBuilder.loadTexts: t5AliasTable.setStatus('mandatory')
t5AliasEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 6, 1), ).setIndexNames((0, "SNANET-MIB", "t5AliasT5nodeIndex"), (0, "SNANET-MIB", "t5AliasName"))
if mibBuilder.loadTexts: t5AliasEntry.setStatus('mandatory')
t5AliasT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5AliasT5nodeIndex.setStatus('mandatory')
t5AliasName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5AliasName.setStatus('mandatory')
t5AliasResourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 2, 6, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t5AliasResourceId.setStatus('mandatory')
saErTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 1), )
if mibBuilder.loadTexts: saErTable.setStatus('mandatory')
saErEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 1, 1), ).setIndexNames((0, "SNANET-MIB", "saErT5nodeIndex"), (0, "SNANET-MIB", "saErDestinationSubarea"), (0, "SNANET-MIB", "saErNumber"))
if mibBuilder.loadTexts: saErEntry.setStatus('mandatory')
saErT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saErT5nodeIndex.setStatus('mandatory')
saErDestinationSubarea = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saErDestinationSubarea.setStatus('mandatory')
saErNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saErNumber.setStatus('mandatory')
saErTgNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saErTgNumber.setStatus('mandatory')
saErOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("inoperative", 2), ("operative", 3), ("actPend", 4), ("innActPend", 5), ("innAct", 6), ("actNoSend", 7), ("active", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saErOperState.setStatus('mandatory')
saVrTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 2), )
if mibBuilder.loadTexts: saVrTable.setStatus('mandatory')
saVrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 2, 1), ).setIndexNames((0, "SNANET-MIB", "saVrT5nodeIndex"), (0, "SNANET-MIB", "saVrErNumber"), (0, "SNANET-MIB", "saVrNumber"), (0, "SNANET-MIB", "saVrTransmissionPriority"))
if mibBuilder.loadTexts: saVrEntry.setStatus('mandatory')
saVrT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saVrT5nodeIndex.setStatus('mandatory')
saVrErNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saVrErNumber.setStatus('mandatory')
saVrNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saVrNumber.setStatus('mandatory')
saVrTransmissionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saVrTransmissionPriority.setStatus('mandatory')
saVrWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saVrWindowSize.setStatus('mandatory')
saVrMinWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saVrMinWindowSize.setStatus('mandatory')
saVrMaxWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saVrMaxWindowSize.setStatus('mandatory')
saVrPacingCount = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saVrPacingCount.setStatus('mandatory')
saTransmissionGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3))
saTgTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 1), )
if mibBuilder.loadTexts: saTgTable.setStatus('mandatory')
saTgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 1, 1), ).setIndexNames((0, "SNANET-MIB", "saTgT5nodeIndex"), (0, "SNANET-MIB", "saTgNumber"), (0, "SNANET-MIB", "saTgAdjacentSubarea"))
if mibBuilder.loadTexts: saTgEntry.setStatus('mandatory')
saTgT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgT5nodeIndex.setStatus('mandatory')
saTgNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgNumber.setStatus('mandatory')
saTgAdjacentSubarea = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgAdjacentSubarea.setStatus('mandatory')
saTgOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2), ("pendActive", 3), ("pendInactive", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgOperState.setStatus('mandatory')
saTgMaxSendPiuSize = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65565))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgMaxSendPiuSize.setStatus('mandatory')
saTgMaxReceivePiuSize = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgMaxReceivePiuSize.setStatus('mandatory')
saTgActiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 1, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgActiveTime.setStatus('mandatory')
saTgLastStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 1, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgLastStateChange.setStatus('mandatory')
saTgSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgSentBytes.setStatus('mandatory')
saTgReceivedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgReceivedBytes.setStatus('mandatory')
saTgSentBtus = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgSentBtus.setStatus('mandatory')
saTgReceivedBtus = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgReceivedBtus.setStatus('mandatory')
saTgLinkTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 2), )
if mibBuilder.loadTexts: saTgLinkTable.setStatus('mandatory')
saTgLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 2, 1), ).setIndexNames((0, "SNANET-MIB", "saTgLinkT5nodeIndex"), (0, "SNANET-MIB", "saTgLinkIndex"))
if mibBuilder.loadTexts: saTgLinkEntry.setStatus('mandatory')
saTgLinkT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgLinkT5nodeIndex.setStatus('mandatory')
saTgLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgLinkIndex.setStatus('mandatory')
saTgLinkTgNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgLinkTgNumber.setStatus('mandatory')
saTgLinkAdjacentSubarea = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgLinkAdjacentSubarea.setStatus('mandatory')
saTgLinkName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgLinkName.setStatus('mandatory')
saTgLinkOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgLinkOperState.setStatus('mandatory')
saTgLinkAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("up", 2), ("down", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: saTgLinkAdminState.setStatus('mandatory')
saTgLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("internal", 1), ("link8022", 2), ("qllc", 3), ("sdlc", 4), ("channel", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgLinkType.setStatus('mandatory')
saTgLinkSpecific = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 2, 1, 9), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgLinkSpecific.setStatus('mandatory')
saTgLinkActiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 2, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgLinkActiveTime.setStatus('mandatory')
saTgLinkLastStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 2, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgLinkLastStateChange.setStatus('mandatory')
saTgLinkSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgLinkSentBytes.setStatus('mandatory')
saTgLinkReceivedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgLinkReceivedBytes.setStatus('mandatory')
saTgLinkSentBtus = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgLinkSentBtus.setStatus('mandatory')
saTgLinkReceivedBtus = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 3, 3, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: saTgLinkReceivedBtus.setStatus('mandatory')
t2node = MibIdentifier((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1))
snaLu = MibIdentifier((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 2))
applicationLu = MibIdentifier((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3))
t2nodeTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 1), )
if mibBuilder.loadTexts: t2nodeTable.setStatus('mandatory')
t2nodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 1, 1), ).setIndexNames((0, "SNANET-MIB", "t2nodeT5nodeIndex"), (0, "SNANET-MIB", "t2nodeIndex"))
if mibBuilder.loadTexts: t2nodeEntry.setStatus('mandatory')
t2nodeT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeT5nodeIndex.setStatus('mandatory')
t2nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeIndex.setStatus('mandatory')
t2nodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeName.setStatus('mandatory')
t2nodeType = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("pu20prim", 2), ("pu20sec", 3), ("t21LEN", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeType.setStatus('mandatory')
t2nodeBlockNum = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeBlockNum.setStatus('mandatory')
t2nodeIdNum = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeIdNum.setStatus('mandatory')
t2nodeMaxPiu = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeMaxPiu.setStatus('mandatory')
t2nodeLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("internal", 1), ("link8022", 2), ("qllc", 3), ("sdlc", 4), ("channelAttach", 5), ("tcpip", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeLinkType.setStatus('mandatory')
t2nodeLinkSpecific = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 1, 1, 9), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeLinkSpecific.setStatus('mandatory')
t2nodeOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3), ("active", 4), ("busy", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeOperState.setStatus('mandatory')
t2nodeAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("start", 2), ("stop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t2nodeAdminState.setStatus('mandatory')
t2nodeStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 1, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeStartTime.setStatus('mandatory')
t2nodeLastStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 1, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeLastStateChange.setStatus('mandatory')
t2nodeActFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeActFailureReason.setStatus('mandatory')
t2nodeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 2), )
if mibBuilder.loadTexts: t2nodeStatsTable.setStatus('mandatory')
t2nodeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 2, 1), ).setIndexNames((0, "SNANET-MIB", "t2nodeStatsT5nodeIndex"), (0, "SNANET-MIB", "t2nodeStatsIndex"))
if mibBuilder.loadTexts: t2nodeStatsEntry.setStatus('mandatory')
t2nodeStatsT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeStatsT5nodeIndex.setStatus('mandatory')
t2nodeStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeStatsIndex.setStatus('mandatory')
t2nodeStatsSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeStatsSentBytes.setStatus('mandatory')
t2nodeStatsReceivedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeStatsReceivedBytes.setStatus('mandatory')
t2nodeStatsSentPius = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeStatsSentPius.setStatus('mandatory')
t2nodeStatsReceivedPius = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeStatsReceivedPius.setStatus('mandatory')
t2nodeStatsSentNegativeResps = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeStatsSentNegativeResps.setStatus('mandatory')
t2nodeStatsReceivedNegativeResps = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeStatsReceivedNegativeResps.setStatus('mandatory')
t2nodeStatsActiveLus = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeStatsActiveLus.setStatus('mandatory')
t2nodeStatsActLus = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeStatsActLus.setStatus('mandatory')
t2nodeStatsInActLus = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeStatsInActLus.setStatus('mandatory')
t2nodeStatsBindLus = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 1, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t2nodeStatsBindLus.setStatus('mandatory')
snaLuTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 2, 1), )
if mibBuilder.loadTexts: snaLuTable.setStatus('mandatory')
snaLuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 2, 1, 1), ).setIndexNames((0, "SNANET-MIB", "snaLuT5nodeIndex"), (0, "SNANET-MIB", "snaLuT2nodeIndex"), (0, "SNANET-MIB", "snaLuIndex"))
if mibBuilder.loadTexts: snaLuEntry.setStatus('mandatory')
snaLuT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuT5nodeIndex.setStatus('mandatory')
snaLuT2nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuT2nodeIndex.setStatus('mandatory')
snaLuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuIndex.setStatus('mandatory')
snaLuName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuName.setStatus('mandatory')
snaLuType = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("lu0", 2), ("lu1", 3), ("lu2", 4), ("lu3", 5), ("lu62", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuType.setStatus('mandatory')
snaLuLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 2, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuLocalAddress.setStatus('mandatory')
snaLuUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 2, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuUserName.setStatus('mandatory')
snaLuPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 2, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuPoolName.setStatus('mandatory')
snaLuOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuOperState.setStatus('mandatory')
snaLuAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("up", 2), ("down", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snaLuAdminState.setStatus('mandatory')
snaLuLastStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 2, 1, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuLastStateChange.setStatus('mandatory')
snaLuActiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 2, 1, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuActiveTime.setStatus('mandatory')
snaLuBindFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 2, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLuBindFailureReason.setStatus('mandatory')
applicationLuTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 1), )
if mibBuilder.loadTexts: applicationLuTable.setStatus('mandatory')
appLuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 1, 1), ).setIndexNames((0, "SNANET-MIB", "appLuT5nodeIndex"), (0, "SNANET-MIB", "appLuIndex"))
if mibBuilder.loadTexts: appLuEntry.setStatus('mandatory')
appLuT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appLuT5nodeIndex.setStatus('mandatory')
appLuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appLuIndex.setStatus('mandatory')
appLuName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appLuName.setStatus('mandatory')
appLuConversionType = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("interactive", 1), ("transparent", 2), ("native", 3), ("netvOper", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appLuConversionType.setStatus('mandatory')
appLuHostInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("interactive", 1), ("outbound", 2), ("appc", 3), ("batch", 4), ("rbfte", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appLuHostInterfaceType.setStatus('mandatory')
appLuApplicationName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appLuApplicationName.setStatus('mandatory')
appLuGatewayName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appLuGatewayName.setStatus('mandatory')
appLuAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("up", 2), ("down", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appLuAdminState.setStatus('mandatory')
appLuOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("inactive", 3), ("active", 4), ("busy", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appLuOperState.setStatus('mandatory')
appLuActiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 1, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appLuActiveTime.setStatus('mandatory')
appLuLastStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 1, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appLuLastStateChange.setStatus('mandatory')
appLuBindFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appLuBindFailureReason.setStatus('mandatory')
appLuBatchDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 2), )
if mibBuilder.loadTexts: appLuBatchDeviceTable.setStatus('mandatory')
appLuBatchDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 2, 1), ).setIndexNames((0, "SNANET-MIB", "appLuBatchDeviceT5nodeIndex"), (0, "SNANET-MIB", "appLuBatchDeviceLuIndex"), (0, "SNANET-MIB", "appLuBatchDeviceName"))
if mibBuilder.loadTexts: appLuBatchDeviceEntry.setStatus('mandatory')
appLuBatchDeviceT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appLuBatchDeviceT5nodeIndex.setStatus('mandatory')
appLuBatchDeviceLuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appLuBatchDeviceLuIndex.setStatus('mandatory')
appLuBatchDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appLuBatchDeviceName.setStatus('mandatory')
appLuBatchDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("console", 1), ("cardreader", 2), ("cardpunch", 3), ("printer", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appLuBatchDeviceType.setStatus('mandatory')
appLuBatchDeviceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 4, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appLuBatchDeviceNumber.setStatus('mandatory')
snaSessionTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1), )
if mibBuilder.loadTexts: snaSessionTable.setStatus('mandatory')
snaSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1), ).setIndexNames((0, "SNANET-MIB", "snaSessT5nodeIndex"), (0, "SNANET-MIB", "snaSessNauName"), (0, "SNANET-MIB", "snaSessNauSessNumber"))
if mibBuilder.loadTexts: snaSessionEntry.setStatus('mandatory')
snaSessT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessT5nodeIndex.setStatus('mandatory')
snaSessNauName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessNauName.setStatus('mandatory')
snaSessNauSessNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessNauSessNumber.setStatus('mandatory')
snaSessType = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sscp-sscp", 1), ("lu-lu", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessType.setStatus('mandatory')
snaSessNauElementAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessNauElementAddress.setStatus('mandatory')
snaSessState = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("initiating", 1), ("terminating", 2), ("queued", 3), ("active", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessState.setStatus('mandatory')
snaSessActiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessActiveTime.setStatus('mandatory')
snaSessSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessSentBytes.setStatus('mandatory')
snaSessReceivedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessReceivedBytes.setStatus('mandatory')
snaSessSentRus = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessSentRus.setStatus('mandatory')
snaSessReceivedRus = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessReceivedRus.setStatus('mandatory')
snaSessSentNegativeResps = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessSentNegativeResps.setStatus('mandatory')
snaSessReceivedNegativeResps = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessReceivedNegativeResps.setStatus('mandatory')
snaSessPartnerNauName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessPartnerNauName.setStatus('mandatory')
snaSessPartnerNauSubarea = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessPartnerNauSubarea.setStatus('mandatory')
snaSessPartnerNauElementAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessPartnerNauElementAddress.setStatus('mandatory')
snaSessVirtualRouteNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessVirtualRouteNumber.setStatus('mandatory')
snaSessTransmissionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessTransmissionPriority.setStatus('mandatory')
snaSessProcCorrelationId = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessProcCorrelationId.setStatus('mandatory')
snaSessPluIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("plu", 2), ("slu", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessPluIndicator.setStatus('mandatory')
snaSessModeName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 5, 1, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaSessModeName.setStatus('mandatory')
snaLink802Dot2Table = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 1), )
if mibBuilder.loadTexts: snaLink802Dot2Table.setStatus('mandatory')
snaLink802Dot2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 1, 1), ).setIndexNames((0, "SNANET-MIB", "snaLink802Dot2T5nodeIndex"), (0, "SNANET-MIB", "snaLink802Dot2Index"))
if mibBuilder.loadTexts: snaLink802Dot2Entry.setStatus('mandatory')
snaLink802Dot2T5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLink802Dot2T5nodeIndex.setStatus('mandatory')
snaLink802Dot2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLink802Dot2Index.setStatus('mandatory')
snaLink802Dot2SourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLink802Dot2SourceAddress.setStatus('mandatory')
snaLink802Dot2SourceSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLink802Dot2SourceSAP.setStatus('mandatory')
snaLink802Dot2DestinationAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLink802Dot2DestinationAddress.setStatus('mandatory')
snaLink802Dot2DestinationSAP = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLink802Dot2DestinationSAP.setStatus('mandatory')
snaLink802Dot2MediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLink802Dot2MediaType.setStatus('mandatory')
snaLink802Dot2Role = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("secondary", 1), ("primary", 2), ("negotiable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLink802Dot2Role.setStatus('mandatory')
snaLink802Dot2LineName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLink802Dot2LineName.setStatus('mandatory')
snaLink802Dot2Port = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLink802Dot2Port.setStatus('mandatory')
snaLink802Dot2IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLink802Dot2IfIndex.setStatus('mandatory')
snaLinkSdlcTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 2), )
if mibBuilder.loadTexts: snaLinkSdlcTable.setStatus('mandatory')
snaLinkSdlcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 2, 1), ).setIndexNames((0, "SNANET-MIB", "snaLinkSdlcT5nodeIndex"), (0, "SNANET-MIB", "snaLinkSdlcIndex"))
if mibBuilder.loadTexts: snaLinkSdlcEntry.setStatus('mandatory')
snaLinkSdlcT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkSdlcT5nodeIndex.setStatus('mandatory')
snaLinkSdlcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkSdlcIndex.setStatus('mandatory')
snaLinkSdlcDestinationStationAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkSdlcDestinationStationAddr.setStatus('mandatory')
snaLinkSdlcStationRole = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("secondary", 1), ("primary", 2), ("negotiable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkSdlcStationRole.setStatus('mandatory')
snaLinkSdlcLineName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkSdlcLineName.setStatus('mandatory')
snaLinkSdlcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkSdlcPort.setStatus('mandatory')
snaLinkSdlcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkSdlcIfIndex.setStatus('mandatory')
snaLinkQllcTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 3), )
if mibBuilder.loadTexts: snaLinkQllcTable.setStatus('mandatory')
snaLinkQllcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 3, 1), ).setIndexNames((0, "SNANET-MIB", "snaLinkQllcT5nodeIndex"), (0, "SNANET-MIB", "snaLinkQllcIndex"))
if mibBuilder.loadTexts: snaLinkQllcEntry.setStatus('mandatory')
snaLinkQllcT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkQllcT5nodeIndex.setStatus('mandatory')
snaLinkQllcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkQllcIndex.setStatus('mandatory')
snaLinkQllcLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkQllcLcn.setStatus('mandatory')
snaLinkQllcSourceDteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkQllcSourceDteAddr.setStatus('mandatory')
snaLinkQllcDestinationDteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkQllcDestinationDteAddr.setStatus('mandatory')
snaLinkQllcRole = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("secondary", 1), ("primary", 2), ("negotiable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkQllcRole.setStatus('mandatory')
snaLinkQllcPdnGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkQllcPdnGroupName.setStatus('mandatory')
snaLinkQllcLineName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkQllcLineName.setStatus('mandatory')
snaLinkQllcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 3, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkQllcPort.setStatus('mandatory')
snaLinkQllcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkQllcIfIndex.setStatus('mandatory')
snaLinkChannelTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 4), )
if mibBuilder.loadTexts: snaLinkChannelTable.setStatus('mandatory')
snaLinkChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 4, 1), ).setIndexNames((0, "SNANET-MIB", "snaLinkChannelT5nodeIndex"), (0, "SNANET-MIB", "snaLinkChannelIndex"))
if mibBuilder.loadTexts: snaLinkChannelEntry.setStatus('mandatory')
snaLinkChannelT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkChannelT5nodeIndex.setStatus('mandatory')
snaLinkChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkChannelIndex.setStatus('mandatory')
snaLinkChannelLineName = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkChannelLineName.setStatus('mandatory')
snaLinkChannelPort = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkChannelPort.setStatus('mandatory')
snaLinkChannelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkChannelIfIndex.setStatus('mandatory')
snaLinkIntTable = MibTable((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 5), )
if mibBuilder.loadTexts: snaLinkIntTable.setStatus('mandatory')
snaLinkIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 5, 1), ).setIndexNames((0, "SNANET-MIB", "snaLinkIntT5nodeIndex"), (0, "SNANET-MIB", "snaLinkIntIndex"))
if mibBuilder.loadTexts: snaLinkIntEntry.setStatus('mandatory')
snaLinkIntT5nodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkIntT5nodeIndex.setStatus('mandatory')
snaLinkIntIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkIntIndex.setStatus('mandatory')
snaLinkIntServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tglink", 1), ("uniscope", 2), ("ds3270", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkIntServiceType.setStatus('mandatory')
snaLinkIntOutputCredit = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkIntOutputCredit.setStatus('mandatory')
snaLinkIntOutputPacing = MibTableColumn((1, 3, 6, 1, 4, 1, 223, 8, 3, 6, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snaLinkIntOutputPacing.setStatus('mandatory')
mibBuilder.exportSymbols("SNANET-MIB", t2nodeAdminState=t2nodeAdminState, prodInfoDesc=prodInfoDesc, snaLinkSdlcIfIndex=snaLinkSdlcIfIndex, snaLuEntry=snaLuEntry, snaLuLastStateChange=snaLuLastStateChange, saVrMaxWindowSize=saVrMaxWindowSize, t5CdrscOperState=t5CdrscOperState, appLuGatewayName=appLuGatewayName, saTgAdjacentSubarea=saTgAdjacentSubarea, snaLinkQllcDestinationDteAddr=snaLinkQllcDestinationDteAddr, snaLinkIntT5nodeIndex=snaLinkIntT5nodeIndex, appLuBindFailureReason=appLuBindFailureReason, t2nodeStatsSentNegativeResps=t2nodeStatsSentNegativeResps, t5CdrmType=t5CdrmType, appLuName=appLuName, snaLinkIntIndex=snaLinkIntIndex, saVrT5nodeIndex=saVrT5nodeIndex, t2nodeLinkSpecific=t2nodeLinkSpecific, snaLinkSdlcIndex=snaLinkSdlcIndex, t2nodeOperState=t2nodeOperState, t5CdrmOperState=t5CdrmOperState, saErOperState=saErOperState, t2nodeLinkType=t2nodeLinkType, saTgLinkAdjacentSubarea=saTgLinkAdjacentSubarea, snaLinkQllcPdnGroupName=snaLinkQllcPdnGroupName, snaLinkChannelEntry=snaLinkChannelEntry, snaLinkSdlcLineName=snaLinkSdlcLineName, snaLinkQllcSourceDteAddr=snaLinkQllcSourceDteAddr, saTgLinkTgNumber=saTgLinkTgNumber, t5nodeIndex=t5nodeIndex, t2nodeIdNum=t2nodeIdNum, snaLink802Dot2SourceSAP=snaLink802Dot2SourceSAP, snaLink802Dot2IfIndex=snaLink802Dot2IfIndex, appLuBatchDeviceLuIndex=appLuBatchDeviceLuIndex, t5CdrmAdminState=t5CdrmAdminState, saVrPacingCount=saVrPacingCount, prodInfoFeatures=prodInfoFeatures, saTgLinkT5nodeIndex=saTgLinkT5nodeIndex, t5DlmCos=t5DlmCos, saTgLinkSpecific=saTgLinkSpecific, saTgLinkAdminState=saTgLinkAdminState, snaLinkSdlcDestinationStationAddr=snaLinkSdlcDestinationStationAddr, t5nodePuName=t5nodePuName, unisys=unisys, snaSessVirtualRouteNumber=snaSessVirtualRouteNumber, saTgLinkSentBytes=saTgLinkSentBytes, saTransmissionGroup=saTransmissionGroup, snaLuOperState=snaLuOperState, saTgT5nodeIndex=saTgT5nodeIndex, snaLink802Dot2SourceAddress=snaLink802Dot2SourceAddress, t2nodeStatsReceivedBytes=t2nodeStatsReceivedBytes, t2nodeStatsActiveLus=t2nodeStatsActiveLus, snaSessNauSessNumber=snaSessNauSessNumber, saErTable=saErTable, appLuBatchDeviceEntry=appLuBatchDeviceEntry, appLuBatchDeviceT5nodeIndex=appLuBatchDeviceT5nodeIndex, snaLink802Dot2DestinationSAP=snaLink802Dot2DestinationSAP, t5CdrscSnaName=t5CdrscSnaName, snaLinkSdlcEntry=snaLinkSdlcEntry, snaLinkChannelTable=snaLinkChannelTable, snaLinkIntOutputCredit=snaLinkIntOutputCredit, saTgEntry=saTgEntry, t5nodeDomainName=t5nodeDomainName, dcp=dcp, saTgLinkIndex=saTgLinkIndex, t5node=t5node, snaLinkQllcTable=snaLinkQllcTable, t5CdrmT5nodeIndex=t5CdrmT5nodeIndex, snaLinkIntEntry=snaLinkIntEntry, t5nodeSubareaNumber=t5nodeSubareaNumber, t2nodeLastStateChange=t2nodeLastStateChange, t2nodeStatsT5nodeIndex=t2nodeStatsT5nodeIndex, appLuBatchDeviceType=appLuBatchDeviceType, t5DlmT5nodeIndex=t5DlmT5nodeIndex, saTgOperState=saTgOperState, t2nodeStartTime=t2nodeStartTime, t5DlmName=t5DlmName, t5DlmPservic=t5DlmPservic, t5AliasT5nodeIndex=t5AliasT5nodeIndex, saTgLinkReceivedBtus=saTgLinkReceivedBtus, snaLinkSdlcT5nodeIndex=snaLinkSdlcT5nodeIndex, snaLinkSdlcPort=snaLinkSdlcPort, t2nodeStatsInActLus=t2nodeStatsInActLus, saTgLinkReceivedBytes=saTgLinkReceivedBytes, saVrNumber=saVrNumber, saErEntry=saErEntry, saTgSentBtus=saTgSentBtus, snaLuActiveTime=snaLuActiveTime, t5nodeOperState=t5nodeOperState, snaLuLocalAddress=snaLuLocalAddress, snaLink=snaLink, snaLuT2nodeIndex=snaLuT2nodeIndex, snaSessSentBytes=snaSessSentBytes, snaLuUserName=snaLuUserName, saTgLinkOperState=saTgLinkOperState, t2nodeStatsReceivedPius=t2nodeStatsReceivedPius, appLuApplicationName=appLuApplicationName, snaLinkSdlcTable=snaLinkSdlcTable, snaLinkChannelIfIndex=snaLinkChannelIfIndex, appLuBatchDeviceNumber=appLuBatchDeviceNumber, t5DlmFmprof=t5DlmFmprof, t2nodeTable=t2nodeTable, snaLu=snaLu, appLuT5nodeIndex=appLuT5nodeIndex, snaLink802Dot2Index=snaLink802Dot2Index, snaLuPoolName=snaLuPoolName, saTgReceivedBytes=saTgReceivedBytes, snaLuBindFailureReason=snaLuBindFailureReason, subarea=subarea, t5CosT5nodeIndex=t5CosT5nodeIndex, t2nodeT5nodeIndex=t2nodeT5nodeIndex, t5CdrscTable=t5CdrscTable, snaLinkChannelT5nodeIndex=snaLinkChannelT5nodeIndex, snaLinkQllcPort=snaLinkQllcPort, snaLinkChannelLineName=snaLinkChannelLineName, t5DlmPrcvpac=t5DlmPrcvpac, saTgLinkName=saTgLinkName, saTgMaxSendPiuSize=saTgMaxSendPiuSize, applicationLu=applicationLu, t5CdrscT5nodeIndex=t5CdrscT5nodeIndex, appLuBatchDeviceName=appLuBatchDeviceName, snaLinkQllcT5nodeIndex=snaLinkQllcT5nodeIndex, t5DlmEntry=t5DlmEntry, saTgLinkActiveTime=saTgLinkActiveTime, snaLuName=snaLuName, snaLinkQllcRole=snaLinkQllcRole, t5AliasTable=t5AliasTable, snaLuAdminState=snaLuAdminState, snaLinkIntOutputPacing=snaLinkIntOutputPacing, snaLink802Dot2Table=snaLink802Dot2Table, appLuBatchDeviceTable=appLuBatchDeviceTable, t5CdrscDlmName=t5CdrscDlmName, t2nodeIndex=t2nodeIndex, t5DlmSrcvpac=t5DlmSrcvpac, t5CdrmSubareaNumber=t5CdrmSubareaNumber, appLuActiveTime=appLuActiveTime, snaSessState=snaSessState, snaSessSentRus=snaSessSentRus, t5AliasResourceId=t5AliasResourceId, snaLinkQllcLcn=snaLinkQllcLcn, t2nodeName=t2nodeName, snaSessPartnerNauSubarea=snaSessPartnerNauSubarea, saTgActiveTime=saTgActiveTime, t2nodeStatsEntry=t2nodeStatsEntry, saVrTable=saVrTable, saErTgNumber=saErTgNumber, t5DlmBindType=t5DlmBindType, t5CdrscCosName=t5CdrscCosName, saTgLinkEntry=saTgLinkEntry, t5nodeTable=t5nodeTable, t5CosName=t5CosName, snaLinkQllcIndex=snaLinkQllcIndex, t5DlmPsndpac=t5DlmPsndpac, snaLinkChannelPort=snaLinkChannelPort, saTgLinkLastStateChange=saTgLinkLastStateChange, appLuOperState=appLuOperState, snaLinkQllcIfIndex=snaLinkQllcIfIndex, saErDestinationSubarea=saErDestinationSubarea, snaSessT5nodeIndex=snaSessT5nodeIndex, t5CdrmEntry=t5CdrmEntry, t2nodeStatsActLus=t2nodeStatsActLus, t5DlmRusizes=t5DlmRusizes, t5nodeSscpName=t5nodeSscpName, saErNumber=saErNumber, t2node=t2node, t2nodeEntry=t2nodeEntry, snaSessNauName=snaSessNauName, t2nodeStatsIndex=t2nodeStatsIndex, saTgLinkType=saTgLinkType, snaSessPartnerNauName=snaSessPartnerNauName, snaLink802Dot2MediaType=snaLink802Dot2MediaType, snaSessProcCorrelationId=snaSessProcCorrelationId, t2nodeMaxPiu=t2nodeMaxPiu, t5CdrscEntry=t5CdrscEntry, saTgMaxReceivePiuSize=saTgMaxReceivePiuSize, snaSessTransmissionPriority=snaSessTransmissionPriority, t5CdrscName=t5CdrscName, appLuIndex=appLuIndex, snaSession=snaSession, snaLinkIntServiceType=snaLinkIntServiceType, saVrTransmissionPriority=saVrTransmissionPriority, t5CdrscSessions=t5CdrscSessions, saTgTable=saTgTable, snaSessionEntry=snaSessionEntry, snaLuTable=snaLuTable, saVrWindowSize=saVrWindowSize, saErT5nodeIndex=saErT5nodeIndex, saVrErNumber=saVrErNumber, t5nodeNetworkName=t5nodeNetworkName, t5nodeSscpId=t5nodeSscpId, t5CdrmElementAddress=t5CdrmElementAddress, t5DlmPriprot=t5DlmPriprot, t5CdrmSnaName=t5CdrmSnaName, t2nodeType=t2nodeType, t2nodeStatsSentBytes=t2nodeStatsSentBytes, applicationLuTable=applicationLuTable, snaLink802Dot2Role=snaLink802Dot2Role, t5CdrscAdminState=t5CdrscAdminState, t5DlmSsndpac=t5DlmSsndpac, snaSessPluIndicator=snaSessPluIndicator, appLuConversionType=appLuConversionType, snaNau=snaNau, t5CosTable=t5CosTable, snaSessModeName=snaSessModeName, snaLink802Dot2DestinationAddress=snaLink802Dot2DestinationAddress, t5CdrmTable=t5CdrmTable, snaSessReceivedNegativeResps=snaSessReceivedNegativeResps, t5CdrscCdrmName=t5CdrscCdrmName, snaSessionTable=snaSessionTable, appLuLastStateChange=appLuLastStateChange, t5DlmSecprot=t5DlmSecprot, snaSessReceivedRus=snaSessReceivedRus, t5DlmTsprof=t5DlmTsprof, saTgReceivedBtus=saTgReceivedBtus, snaLinkIntTable=snaLinkIntTable, t5DlmComprot=t5DlmComprot, snaLuT5nodeIndex=snaLuT5nodeIndex, saVrMinWindowSize=saVrMinWindowSize, snaLinkChannelIndex=snaLinkChannelIndex, t2nodeStatsTable=t2nodeStatsTable, snaLink802Dot2T5nodeIndex=snaLink802Dot2T5nodeIndex, t5CdrmName=t5CdrmName, t2nodeStatsSentPius=t2nodeStatsSentPius, appLuAdminState=appLuAdminState, snaSessNauElementAddress=snaSessNauElementAddress, snaSessActiveTime=snaSessActiveTime, t5CosEntry=t5CosEntry, saTgNumber=saTgNumber, t5nodeEntry=t5nodeEntry, saTgLastStateChange=saTgLastStateChange, t5CosVrids=t5CosVrids, t2nodeActFailureReason=t2nodeActFailureReason, snaSessType=snaSessType, snaLink802Dot2Entry=snaLink802Dot2Entry, snaLinkSdlcStationRole=snaLinkSdlcStationRole, snaLink802Dot2LineName=snaLink802Dot2LineName, appLuHostInterfaceType=appLuHostInterfaceType, snaLinkQllcEntry=snaLinkQllcEntry, snaSessPartnerNauElementAddress=snaSessPartnerNauElementAddress, snaLink802Dot2Port=snaLink802Dot2Port, t5DlmSnaName=t5DlmSnaName, t5AliasName=t5AliasName, t5CosSnaName=t5CosSnaName, t2nodeBlockNum=t2nodeBlockNum, snanet=snanet, snaSessSentNegativeResps=snaSessSentNegativeResps, t5DlmTable=t5DlmTable, appLuEntry=appLuEntry, snaLuIndex=snaLuIndex, snaSessReceivedBytes=snaSessReceivedBytes, snaLinkQllcLineName=snaLinkQllcLineName, saVrEntry=saVrEntry, saTgSentBytes=saTgSentBytes, saTgLinkTable=saTgLinkTable)
mibBuilder.exportSymbols("SNANET-MIB", prodInfo=prodInfo, t2nodeStatsBindLus=t2nodeStatsBindLus, t5DlmEncr=t5DlmEncr, saTgLinkSentBtus=saTgLinkSentBtus, t5CdrmNetworkName=t5CdrmNetworkName, t5AliasEntry=t5AliasEntry, t2nodeStatsReceivedNegativeResps=t2nodeStatsReceivedNegativeResps, snaLuType=snaLuType)
