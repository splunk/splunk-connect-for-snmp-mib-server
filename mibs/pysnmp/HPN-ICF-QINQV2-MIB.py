#
# PySNMP MIB module HPN-ICF-QINQV2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-QINQV2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, iso, NotificationType, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32, IpAddress, ObjectIdentity, ModuleIdentity, Counter32, TimeTicks, Integer32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "iso", "NotificationType", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32", "IpAddress", "ObjectIdentity", "ModuleIdentity", "Counter32", "TimeTicks", "Integer32", "Gauge32")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
hpnicfQinQv2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 137))
hpnicfQinQv2.setRevisions(('2013-03-08 00:00',))
if mibBuilder.loadTexts: hpnicfQinQv2.setLastUpdated('201303080000Z')
if mibBuilder.loadTexts: hpnicfQinQv2.setOrganization('')
hpnicfQinQv2MibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 137, 1))
hpnicfQinQv2ScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 137, 1, 1))
hpnicfQinQv2ServiceTPID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 137, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfQinQv2ServiceTPID.setStatus('current')
hpnicfQinQv2CustomerTPID = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 137, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfQinQv2CustomerTPID.setStatus('current')
hpnicfQinQv2IfCfgTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 137, 1, 2), )
if mibBuilder.loadTexts: hpnicfQinQv2IfCfgTable.setStatus('current')
hpnicfQinQv2IfCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 137, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfQinQv2IfCfgEntry.setStatus('current')
hpnicfQinQv2IfState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 137, 1, 2, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfQinQv2IfState.setStatus('current')
hpnicfQinQv2IfServiceTPID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 137, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfQinQv2IfServiceTPID.setStatus('current')
hpnicfQinQv2IfCustomerTPID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 137, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfQinQv2IfCustomerTPID.setStatus('current')
hpnicfQinQv2IfTransVlanList = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 137, 1, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 512)).setFixedLength(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfQinQv2IfTransVlanList.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-QINQV2-MIB", hpnicfQinQv2IfTransVlanList=hpnicfQinQv2IfTransVlanList, hpnicfQinQv2ScalarObjects=hpnicfQinQv2ScalarObjects, hpnicfQinQv2IfState=hpnicfQinQv2IfState, PYSNMP_MODULE_ID=hpnicfQinQv2, hpnicfQinQv2ServiceTPID=hpnicfQinQv2ServiceTPID, hpnicfQinQv2IfServiceTPID=hpnicfQinQv2IfServiceTPID, hpnicfQinQv2=hpnicfQinQv2, hpnicfQinQv2IfCustomerTPID=hpnicfQinQv2IfCustomerTPID, hpnicfQinQv2IfCfgTable=hpnicfQinQv2IfCfgTable, hpnicfQinQv2CustomerTPID=hpnicfQinQv2CustomerTPID, hpnicfQinQv2IfCfgEntry=hpnicfQinQv2IfCfgEntry, hpnicfQinQv2MibObject=hpnicfQinQv2MibObject)
