#
# PySNMP MIB module HPN-ICF-VSAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-VSAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:26:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
HpnicfFcDomainId, HpnicfFcVsanIndex, HpnicfFcDomainIdOrZero, HpnicfFcNameId, HpnicfFcDomainPriority, HpnicfFcDomainIdList, HpnicfFcDmState, HpnicfFcNameIdOrZero = mibBuilder.importSymbols("HPN-ICF-FC-TC-MIB", "HpnicfFcDomainId", "HpnicfFcVsanIndex", "HpnicfFcDomainIdOrZero", "HpnicfFcNameId", "HpnicfFcDomainPriority", "HpnicfFcDomainIdList", "HpnicfFcDmState", "HpnicfFcNameIdOrZero")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, MibIdentifier, NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, Bits, ModuleIdentity, Integer32, Counter64, Gauge32, Counter32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibIdentifier", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "Bits", "ModuleIdentity", "Integer32", "Counter64", "Gauge32", "Counter32", "IpAddress")
TextualConvention, TruthValue, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "RowStatus")
hpnicfSan = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127))
hpnicfSan.setRevisions(('2014-03-04 15:50', '2013-02-28 09:40',))
if mibBuilder.loadTexts: hpnicfSan.setLastUpdated('201403041550Z')
if mibBuilder.loadTexts: hpnicfSan.setOrganization('')
hpnicfVsan = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1))
hpnicfVsanMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1))
hpnicfVsanDmConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1))
hpnicfVsanTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 1), )
if mibBuilder.loadTexts: hpnicfVsanTable.setStatus('current')
hpnicfVsanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"))
if mibBuilder.loadTexts: hpnicfVsanEntry.setStatus('current')
hpnicfVsanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 1, 1, 1), HpnicfFcVsanIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfVsanIndex.setStatus('current')
hpnicfVsanCoreSwitchName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 1, 1, 2), HpnicfFcNameIdOrZero().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVsanCoreSwitchName.setStatus('current')
hpnicfVsanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfVsanRowStatus.setStatus('current')
hpnicfVsanDmTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2), )
if mibBuilder.loadTexts: hpnicfVsanDmTable.setStatus('current')
hpnicfVsanDmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"))
if mibBuilder.loadTexts: hpnicfVsanDmEntry.setStatus('current')
hpnicfVsanDmDomainConfigureEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVsanDmDomainConfigureEnable.setStatus('current')
hpnicfVsanDmFabricNameConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1, 2), HpnicfFcNameIdOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVsanDmFabricNameConfigured.setStatus('current')
hpnicfVsanDmPriorityConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1, 3), HpnicfFcDomainPriority().clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVsanDmPriorityConfigured.setStatus('current')
hpnicfVsanDmAllowedDomainIdList = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1, 4), HpnicfFcDomainIdList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVsanDmAllowedDomainIdList.setStatus('current')
hpnicfVsanDmDomainIdConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1, 5), HpnicfFcDomainIdOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVsanDmDomainIdConfigured.setStatus('current')
hpnicfVsanDmDomainIdTypeConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("preferred", 2))).clone('preferred')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVsanDmDomainIdTypeConfigured.setStatus('current')
hpnicfVsanDmAutoReconfigureEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVsanDmAutoReconfigureEnable.setStatus('current')
hpnicfVsanDmDomainRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noOperation", 1), ("nonDisruptive", 2), ("disruptive", 3))).clone('noOperation')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVsanDmDomainRestart.setStatus('current')
hpnicfVsanDmState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1, 9), HpnicfFcDmState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVsanDmState.setStatus('current')
hpnicfVsanDmDomainIdAssigned = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1, 10), HpnicfFcDomainIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVsanDmDomainIdAssigned.setStatus('current')
hpnicfVsanDmPrincipalSwitchWWN = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1, 11), HpnicfFcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVsanDmPrincipalSwitchWWN.setStatus('current')
hpnicfVsanDmLocalSwitchWWN = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1, 12), HpnicfFcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVsanDmLocalSwitchWWN.setStatus('current')
hpnicfVsanDmPrincipalSwRunPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1, 13), HpnicfFcDomainPriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVsanDmPrincipalSwRunPriority.setStatus('current')
hpnicfVsanDmLocalSwRunPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1, 14), HpnicfFcDomainPriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVsanDmLocalSwRunPriority.setStatus('current')
hpnicfVsanDmPrincipalSwSlctCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVsanDmPrincipalSwSlctCnt.setStatus('current')
hpnicfVsanDmLocalPrincipalSwSlctCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVsanDmLocalPrincipalSwSlctCnt.setStatus('current')
hpnicfVsanDmBFCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVsanDmBFCnt.setStatus('current')
hpnicfVsanDmRCFCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVsanDmRCFCnt.setStatus('current')
hpnicfVsanDmIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 3), )
if mibBuilder.loadTexts: hpnicfVsanDmIfConfigTable.setStatus('current')
hpnicfVsanDmIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"))
if mibBuilder.loadTexts: hpnicfVsanDmIfConfigEntry.setStatus('current')
hpnicfVsanDmIfConfigRcfReject = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 1, 3, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVsanDmIfConfigRcfReject.setStatus('current')
hpnicfVsanDmInformation = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 2))
hpnicfVsanDmDatabaseTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 2, 1), )
if mibBuilder.loadTexts: hpnicfVsanDmDatabaseTable.setStatus('current')
hpnicfVsanDmDatabaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), (0, "HPN-ICF-VSAN-MIB", "hpnicfVsanDmDatabaseDomainId"))
if mibBuilder.loadTexts: hpnicfVsanDmDatabaseEntry.setStatus('current')
hpnicfVsanDmDatabaseDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 2, 1, 1, 1), HpnicfFcDomainId())
if mibBuilder.loadTexts: hpnicfVsanDmDatabaseDomainId.setStatus('current')
hpnicfVsanDmDatabaseSwitchWWN = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 2, 1, 1, 2), HpnicfFcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVsanDmDatabaseSwitchWWN.setStatus('current')
hpnicfVsanDmIfInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 2, 2), )
if mibBuilder.loadTexts: hpnicfVsanDmIfInfoTable.setStatus('current')
hpnicfVsanDmIfInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"))
if mibBuilder.loadTexts: hpnicfVsanDmIfInfoEntry.setStatus('current')
hpnicfVsanDmIfInfoRole = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nonPrincipal", 1), ("principalUpstream", 2), ("principalDownstream", 3), ("isolated", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfVsanDmIfInfoRole.setStatus('current')
hpnicfVsanDmNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 3))
hpnicfVsanDmNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 3, 0))
hpnicfVsanDmDomainIdNotAssignedNotify = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 3, 0, 1)).setObjects(("HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), ("HPN-ICF-VSAN-MIB", "hpnicfVsanDmLocalSwitchWWN"))
if mibBuilder.loadTexts: hpnicfVsanDmDomainIdNotAssignedNotify.setStatus('current')
hpnicfVsanDmNewPrincipalSwitchNotify = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 3, 0, 2)).setObjects(("HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), ("HPN-ICF-VSAN-MIB", "hpnicfVsanDmLocalSwitchWWN"))
if mibBuilder.loadTexts: hpnicfVsanDmNewPrincipalSwitchNotify.setStatus('current')
hpnicfVsanDmFabricChangeNotify = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 3, 0, 3)).setObjects(("HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"))
if mibBuilder.loadTexts: hpnicfVsanDmFabricChangeNotify.setStatus('current')
hpnicfVsanDmDomainIdChangeNotify = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 3, 0, 4)).setObjects(("HPN-ICF-VSAN-MIB", "hpnicfVsanIndex"), ("HPN-ICF-VSAN-MIB", "hpnicfVsanDmDomainIdAssigned"), ("HPN-ICF-VSAN-MIB", "hpnicfVsanDmLocalSwitchWWN"))
if mibBuilder.loadTexts: hpnicfVsanDmDomainIdChangeNotify.setStatus('current')
hpnicfVsanDmNotificationSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 3, 1))
hpnicfVsanDmFabricChangeNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 3, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVsanDmFabricChangeNotifyEnable.setStatus('current')
hpnicfVsanDmDomainIdChangeNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 1, 1, 3, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfVsanDmDomainIdChangeNotifyEnable.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-VSAN-MIB", hpnicfVsanDmDatabaseEntry=hpnicfVsanDmDatabaseEntry, hpnicfVsan=hpnicfVsan, hpnicfVsanDmPrincipalSwitchWWN=hpnicfVsanDmPrincipalSwitchWWN, hpnicfVsanMibObjects=hpnicfVsanMibObjects, hpnicfVsanDmPriorityConfigured=hpnicfVsanDmPriorityConfigured, hpnicfVsanDmDomainIdConfigured=hpnicfVsanDmDomainIdConfigured, hpnicfVsanDmDomainIdChangeNotify=hpnicfVsanDmDomainIdChangeNotify, hpnicfVsanDmState=hpnicfVsanDmState, hpnicfVsanDmAllowedDomainIdList=hpnicfVsanDmAllowedDomainIdList, hpnicfVsanEntry=hpnicfVsanEntry, hpnicfVsanDmDomainIdTypeConfigured=hpnicfVsanDmDomainIdTypeConfigured, hpnicfVsanTable=hpnicfVsanTable, hpnicfVsanDmAutoReconfigureEnable=hpnicfVsanDmAutoReconfigureEnable, hpnicfVsanDmPrincipalSwRunPriority=hpnicfVsanDmPrincipalSwRunPriority, hpnicfVsanDmLocalPrincipalSwSlctCnt=hpnicfVsanDmLocalPrincipalSwSlctCnt, hpnicfVsanDmNotifications=hpnicfVsanDmNotifications, hpnicfVsanDmFabricChangeNotify=hpnicfVsanDmFabricChangeNotify, hpnicfSan=hpnicfSan, hpnicfVsanCoreSwitchName=hpnicfVsanCoreSwitchName, hpnicfVsanDmIfConfigTable=hpnicfVsanDmIfConfigTable, hpnicfVsanDmDatabaseSwitchWWN=hpnicfVsanDmDatabaseSwitchWWN, hpnicfVsanDmNewPrincipalSwitchNotify=hpnicfVsanDmNewPrincipalSwitchNotify, hpnicfVsanDmNotificationSwitch=hpnicfVsanDmNotificationSwitch, hpnicfVsanDmIfInfoRole=hpnicfVsanDmIfInfoRole, hpnicfVsanDmDomainIdChangeNotifyEnable=hpnicfVsanDmDomainIdChangeNotifyEnable, hpnicfVsanDmNotificationPrefix=hpnicfVsanDmNotificationPrefix, hpnicfVsanDmLocalSwitchWWN=hpnicfVsanDmLocalSwitchWWN, hpnicfVsanDmDatabaseDomainId=hpnicfVsanDmDatabaseDomainId, hpnicfVsanDmInformation=hpnicfVsanDmInformation, hpnicfVsanIndex=hpnicfVsanIndex, hpnicfVsanDmConfiguration=hpnicfVsanDmConfiguration, hpnicfVsanDmIfConfigRcfReject=hpnicfVsanDmIfConfigRcfReject, hpnicfVsanDmLocalSwRunPriority=hpnicfVsanDmLocalSwRunPriority, hpnicfVsanDmIfInfoEntry=hpnicfVsanDmIfInfoEntry, hpnicfVsanDmDatabaseTable=hpnicfVsanDmDatabaseTable, hpnicfVsanDmTable=hpnicfVsanDmTable, hpnicfVsanDmPrincipalSwSlctCnt=hpnicfVsanDmPrincipalSwSlctCnt, hpnicfVsanDmRCFCnt=hpnicfVsanDmRCFCnt, hpnicfVsanDmIfInfoTable=hpnicfVsanDmIfInfoTable, hpnicfVsanDmFabricChangeNotifyEnable=hpnicfVsanDmFabricChangeNotifyEnable, hpnicfVsanDmEntry=hpnicfVsanDmEntry, hpnicfVsanDmDomainIdAssigned=hpnicfVsanDmDomainIdAssigned, hpnicfVsanDmDomainIdNotAssignedNotify=hpnicfVsanDmDomainIdNotAssignedNotify, hpnicfVsanDmIfConfigEntry=hpnicfVsanDmIfConfigEntry, hpnicfVsanDmDomainConfigureEnable=hpnicfVsanDmDomainConfigureEnable, hpnicfVsanDmFabricNameConfigured=hpnicfVsanDmFabricNameConfigured, hpnicfVsanRowStatus=hpnicfVsanRowStatus, hpnicfVsanDmDomainRestart=hpnicfVsanDmDomainRestart, PYSNMP_MODULE_ID=hpnicfSan, hpnicfVsanDmBFCnt=hpnicfVsanDmBFCnt)
