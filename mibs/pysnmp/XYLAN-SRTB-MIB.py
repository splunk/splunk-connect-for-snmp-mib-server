#
# PySNMP MIB module XYLAN-SRTB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XYLAN-SRTB-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:39:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
MacAddress, = mibBuilder.importSymbols("BRIDGE-MIB", "MacAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, ModuleIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Bits, MibIdentifier, IpAddress, ObjectIdentity, Integer32, NotificationType, Gauge32, Counter32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ModuleIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Bits", "MibIdentifier", "IpAddress", "ObjectIdentity", "Integer32", "NotificationType", "Gauge32", "Counter32", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
xylanSrtbArch, = mibBuilder.importSymbols("XYLAN-BASE-MIB", "xylanSrtbArch")
xylanSRTB = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 24, 1))
srtbConfigTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 24, 1, 1), )
if mibBuilder.loadTexts: srtbConfigTable.setStatus('mandatory')
srtbConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 24, 1, 1, 1), ).setIndexNames((0, "XYLAN-SRTB-MIB", "srtbGroupID"))
if mibBuilder.loadTexts: srtbConfigEntry.setStatus('mandatory')
srtbGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 24, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtbGroupID.setStatus('mandatory')
srtbOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 24, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srtbOperStatus.setStatus('mandatory')
srtbEthernetRingId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 24, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srtbEthernetRingId.setStatus('mandatory')
srtbExplorerTypeToSend = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 24, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 2, 1))).clone(namedValues=NamedValues(("notAvailable", 3), ("typeSTE", 2), ("typeARE", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srtbExplorerTypeToSend.setStatus('mandatory')
srtbRIFTable = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 24, 1, 2), )
if mibBuilder.loadTexts: srtbRIFTable.setStatus('mandatory')
srtbRIFEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 24, 1, 2, 1), ).setIndexNames((0, "XYLAN-SRTB-MIB", "srtbRIFMac"), (0, "XYLAN-SRTB-MIB", "srtbRIFGroupID"))
if mibBuilder.loadTexts: srtbRIFEntry.setStatus('mandatory')
srtbRIFMac = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 24, 1, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtbRIFMac.setStatus('mandatory')
srtbRIFGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 24, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtbRIFGroupID.setStatus('mandatory')
srtbRIFString = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 24, 1, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srtbRIFString.setStatus('mandatory')
srtbRIFPurge = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 24, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noAction", 1), ("purgeRif", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srtbRIFPurge.setStatus('mandatory')
mibBuilder.exportSymbols("XYLAN-SRTB-MIB", xylanSRTB=xylanSRTB, srtbExplorerTypeToSend=srtbExplorerTypeToSend, srtbRIFTable=srtbRIFTable, srtbRIFGroupID=srtbRIFGroupID, srtbGroupID=srtbGroupID, srtbConfigEntry=srtbConfigEntry, srtbRIFEntry=srtbRIFEntry, srtbOperStatus=srtbOperStatus, srtbEthernetRingId=srtbEthernetRingId, srtbConfigTable=srtbConfigTable, srtbRIFPurge=srtbRIFPurge, srtbRIFMac=srtbRIFMac, srtbRIFString=srtbRIFString)
