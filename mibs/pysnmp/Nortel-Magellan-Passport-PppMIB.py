#
# PySNMP MIB module Nortel-Magellan-Passport-PppMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-PppMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:18:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
Integer32, RowStatus, Gauge32, StorageType, Counter32, Unsigned32, DisplayString, InterfaceIndex = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "Integer32", "RowStatus", "Gauge32", "StorageType", "Counter32", "Unsigned32", "DisplayString", "InterfaceIndex")
NonReplicated, Link = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "NonReplicated", "Link")
components, passportMIBs = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "components", "passportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, iso, TimeTicks, MibIdentifier, NotificationType, Gauge32, Counter32, ModuleIdentity, Unsigned32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Bits, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "iso", "TimeTicks", "MibIdentifier", "NotificationType", "Gauge32", "Counter32", "ModuleIdentity", "Unsigned32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Bits", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
pppMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 33))
ppp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102))
pppRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 1), )
if mibBuilder.loadTexts: pppRowStatusTable.setStatus('mandatory')
pppRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"))
if mibBuilder.loadTexts: pppRowStatusEntry.setStatus('mandatory')
pppRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppRowStatus.setStatus('mandatory')
pppComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppComponentName.setStatus('mandatory')
pppStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppStorageType.setStatus('mandatory')
pppIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: pppIndex.setStatus('mandatory')
pppCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 20), )
if mibBuilder.loadTexts: pppCidDataTable.setStatus('mandatory')
pppCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 20, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"))
if mibBuilder.loadTexts: pppCidDataEntry.setStatus('mandatory')
pppCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 20, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppCustomerIdentifier.setStatus('mandatory')
pppIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 21), )
if mibBuilder.loadTexts: pppIfEntryTable.setStatus('mandatory')
pppIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 21, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"))
if mibBuilder.loadTexts: pppIfEntryEntry.setStatus('mandatory')
pppIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 21, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppIfAdminStatus.setStatus('mandatory')
pppIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 21, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppIfIndex.setStatus('mandatory')
pppMpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 22), )
if mibBuilder.loadTexts: pppMpTable.setStatus('mandatory')
pppMpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 22, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"))
if mibBuilder.loadTexts: pppMpEntry.setStatus('mandatory')
pppLinkToProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 22, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppLinkToProtocolPort.setStatus('mandatory')
pppStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 23), )
if mibBuilder.loadTexts: pppStateTable.setStatus('mandatory')
pppStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 23, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"))
if mibBuilder.loadTexts: pppStateEntry.setStatus('mandatory')
pppAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 23, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppAdminState.setStatus('mandatory')
pppOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 23, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppOperationalState.setStatus('mandatory')
pppUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 23, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppUsageState.setStatus('mandatory')
pppOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 24), )
if mibBuilder.loadTexts: pppOperStatusTable.setStatus('mandatory')
pppOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 24, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"))
if mibBuilder.loadTexts: pppOperStatusEntry.setStatus('mandatory')
pppSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 24, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppSnmpOperStatus.setStatus('mandatory')
pppLnk = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2))
pppLnkRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 1), )
if mibBuilder.loadTexts: pppLnkRowStatusTable.setStatus('mandatory')
pppLnkRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppLnkIndex"))
if mibBuilder.loadTexts: pppLnkRowStatusEntry.setStatus('mandatory')
pppLnkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLnkRowStatus.setStatus('mandatory')
pppLnkComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLnkComponentName.setStatus('mandatory')
pppLnkStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLnkStorageType.setStatus('mandatory')
pppLnkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: pppLnkIndex.setStatus('mandatory')
pppLnkProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 10), )
if mibBuilder.loadTexts: pppLnkProvTable.setStatus('mandatory')
pppLnkProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppLnkIndex"))
if mibBuilder.loadTexts: pppLnkProvEntry.setStatus('mandatory')
pppLnkConfigInitialMru = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(68, 18000)).clone(18000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppLnkConfigInitialMru.setStatus('mandatory')
pppLnkConfigMagicNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppLnkConfigMagicNumber.setStatus('mandatory')
pppLnkRestartTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 10000)).clone(3000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppLnkRestartTimer.setStatus('mandatory')
pppLnkContinuityMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppLnkContinuityMonitor.setStatus('mandatory')
pppLnkNegativeAckTries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppLnkNegativeAckTries.setStatus('mandatory')
pppLnkQualityThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 99)).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppLnkQualityThreshold.setStatus('mandatory')
pppLnkQualityWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 400)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppLnkQualityWindow.setStatus('mandatory')
pppLnkTerminateRequestTries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppLnkTerminateRequestTries.setStatus('mandatory')
pppLnkConfigureRequestTries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 10, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(1000000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppLnkConfigureRequestTries.setStatus('mandatory')
pppLnkOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 11), )
if mibBuilder.loadTexts: pppLnkOperTable.setStatus('mandatory')
pppLnkOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppLnkIndex"))
if mibBuilder.loadTexts: pppLnkOperEntry.setStatus('mandatory')
pppLnkOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqsent", 6), ("ackrcvd", 7), ("acksent", 8), ("opened", 9))).clone('initial')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLnkOperState.setStatus('mandatory')
pppLnkLineCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 4))).clone(namedValues=NamedValues(("ok", 0), ("looped", 1), ("noClock", 3), ("badLineCondition", 4))).clone('ok')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLnkLineCondition.setStatus('mandatory')
pppLnkBadAddresses = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLnkBadAddresses.setStatus('mandatory')
pppLnkBadControls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLnkBadControls.setStatus('mandatory')
pppLnkPacketTooLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLnkPacketTooLongs.setStatus('mandatory')
pppLnkBadFcss = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLnkBadFcss.setStatus('mandatory')
pppLnkLocalMru = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 11, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483648)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLnkLocalMru.setStatus('mandatory')
pppLnkRemoteMru = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 11, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483648))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLnkRemoteMru.setStatus('mandatory')
pppLnkTransmitFcsSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 11, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLnkTransmitFcsSize.setStatus('mandatory')
pppLnkReceiveFcsSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 2, 11, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLnkReceiveFcsSize.setStatus('mandatory')
pppLqm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3))
pppLqmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3, 1), )
if mibBuilder.loadTexts: pppLqmRowStatusTable.setStatus('mandatory')
pppLqmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppLqmIndex"))
if mibBuilder.loadTexts: pppLqmRowStatusEntry.setStatus('mandatory')
pppLqmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLqmRowStatus.setStatus('mandatory')
pppLqmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLqmComponentName.setStatus('mandatory')
pppLqmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLqmStorageType.setStatus('mandatory')
pppLqmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: pppLqmIndex.setStatus('mandatory')
pppLqmProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3, 10), )
if mibBuilder.loadTexts: pppLqmProvTable.setStatus('mandatory')
pppLqmProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppLqmIndex"))
if mibBuilder.loadTexts: pppLqmProvEntry.setStatus('mandatory')
pppLqmConfigPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppLqmConfigPeriod.setStatus('mandatory')
pppLqmConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppLqmConfigStatus.setStatus('mandatory')
pppLqmOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3, 11), )
if mibBuilder.loadTexts: pppLqmOperTable.setStatus('mandatory')
pppLqmOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppLqmIndex"))
if mibBuilder.loadTexts: pppLqmOperEntry.setStatus('mandatory')
pppLqmQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("good", 1), ("bad", 2), ("notDetermined", 3))).clone('notDetermined')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLqmQuality.setStatus('mandatory')
pppLqmInGoodOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLqmInGoodOctets.setStatus('mandatory')
pppLqmLocalPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLqmLocalPeriod.setStatus('mandatory')
pppLqmRemotePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLqmRemotePeriod.setStatus('mandatory')
pppLqmOutLqrs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLqmOutLqrs.setStatus('mandatory')
pppLqmInLqrs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 3, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLqmInLqrs.setStatus('mandatory')
pppNcp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4))
pppNcpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 1), )
if mibBuilder.loadTexts: pppNcpRowStatusTable.setStatus('mandatory')
pppNcpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppNcpIndex"))
if mibBuilder.loadTexts: pppNcpRowStatusEntry.setStatus('mandatory')
pppNcpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpRowStatus.setStatus('mandatory')
pppNcpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpComponentName.setStatus('mandatory')
pppNcpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpStorageType.setStatus('mandatory')
pppNcpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: pppNcpIndex.setStatus('mandatory')
pppNcpBprovTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 11), )
if mibBuilder.loadTexts: pppNcpBprovTable.setStatus('mandatory')
pppNcpBprovEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppNcpIndex"))
if mibBuilder.loadTexts: pppNcpBprovEntry.setStatus('mandatory')
pppNcpBConfigTinygram = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppNcpBConfigTinygram.setStatus('mandatory')
pppNcpBConfigLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppNcpBConfigLanId.setStatus('mandatory')
pppNcpIpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 12), )
if mibBuilder.loadTexts: pppNcpIpOperTable.setStatus('mandatory')
pppNcpIpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppNcpIndex"))
if mibBuilder.loadTexts: pppNcpIpOperEntry.setStatus('mandatory')
pppNcpIpOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqsent", 6), ("ackrcvd", 7), ("acksent", 8), ("opened", 9))).clone('initial')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpIpOperState.setStatus('mandatory')
pppNcpBoperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 14), )
if mibBuilder.loadTexts: pppNcpBoperTable.setStatus('mandatory')
pppNcpBoperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppNcpIndex"))
if mibBuilder.loadTexts: pppNcpBoperEntry.setStatus('mandatory')
pppNcpBOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqsent", 6), ("ackrcvd", 7), ("acksent", 8), ("opened", 9))).clone('initial')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpBOperState.setStatus('mandatory')
pppNcpBLocalToRemoteTinygramComp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpBLocalToRemoteTinygramComp.setStatus('mandatory')
pppNcpBRemoteToLocalTinygramComp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpBRemoteToLocalTinygramComp.setStatus('mandatory')
pppNcpBLocalToRemoteLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 14, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpBLocalToRemoteLanId.setStatus('mandatory')
pppNcpBRemoteToLocalLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 14, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpBRemoteToLocalLanId.setStatus('mandatory')
pppNcpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 16), )
if mibBuilder.loadTexts: pppNcpOperTable.setStatus('mandatory')
pppNcpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 16, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppNcpIndex"))
if mibBuilder.loadTexts: pppNcpOperEntry.setStatus('mandatory')
pppNcpAppletalkOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqsent", 6), ("ackrcvd", 7), ("acksent", 8), ("opened", 9))).clone('initial')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpAppletalkOperState.setStatus('mandatory')
pppNcpIpxOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqsent", 6), ("ackrcvd", 7), ("acksent", 8), ("opened", 9))).clone('initial')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpIpxOperState.setStatus('mandatory')
pppNcpXnsOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqsent", 6), ("ackrcvd", 7), ("acksent", 8), ("opened", 9))).clone('initial')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpXnsOperState.setStatus('mandatory')
pppNcpDecnetOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqsent", 6), ("ackrcvd", 7), ("acksent", 8), ("opened", 9))).clone('initial')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpDecnetOperState.setStatus('mandatory')
pppNcpBmcEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 2))
pppNcpBmcEntryRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 2, 1), )
if mibBuilder.loadTexts: pppNcpBmcEntryRowStatusTable.setStatus('mandatory')
pppNcpBmcEntryRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppNcpIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppNcpBmcEntryMacTypeIndex"))
if mibBuilder.loadTexts: pppNcpBmcEntryRowStatusEntry.setStatus('mandatory')
pppNcpBmcEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppNcpBmcEntryRowStatus.setStatus('mandatory')
pppNcpBmcEntryComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpBmcEntryComponentName.setStatus('mandatory')
pppNcpBmcEntryStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpBmcEntryStorageType.setStatus('mandatory')
pppNcpBmcEntryMacTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ethernet", 1), ("tokenBus", 2), ("tokenRing", 3), ("fddi", 4))))
if mibBuilder.loadTexts: pppNcpBmcEntryMacTypeIndex.setStatus('mandatory')
pppNcpBmcEntryProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 2, 10), )
if mibBuilder.loadTexts: pppNcpBmcEntryProvTable.setStatus('mandatory')
pppNcpBmcEntryProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppNcpIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppNcpBmcEntryMacTypeIndex"))
if mibBuilder.loadTexts: pppNcpBmcEntryProvEntry.setStatus('mandatory')
pppNcpBmcEntryLocalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("accept", 1))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppNcpBmcEntryLocalStatus.setStatus('mandatory')
pppNcpBmEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 3))
pppNcpBmEntryRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 3, 1), )
if mibBuilder.loadTexts: pppNcpBmEntryRowStatusTable.setStatus('mandatory')
pppNcpBmEntryRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppNcpIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppNcpBmEntryMacTypeIndex"))
if mibBuilder.loadTexts: pppNcpBmEntryRowStatusEntry.setStatus('mandatory')
pppNcpBmEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpBmEntryRowStatus.setStatus('mandatory')
pppNcpBmEntryComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpBmEntryComponentName.setStatus('mandatory')
pppNcpBmEntryStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpBmEntryStorageType.setStatus('mandatory')
pppNcpBmEntryMacTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ethernet", 1), ("tokenBus", 2), ("tokenRing", 3), ("fddi", 4))))
if mibBuilder.loadTexts: pppNcpBmEntryMacTypeIndex.setStatus('mandatory')
pppNcpBmEntryOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 3, 10), )
if mibBuilder.loadTexts: pppNcpBmEntryOperTable.setStatus('mandatory')
pppNcpBmEntryOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppNcpIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppNcpBmEntryMacTypeIndex"))
if mibBuilder.loadTexts: pppNcpBmEntryOperEntry.setStatus('mandatory')
pppNcpBmEntryLocalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("accept", 1), ("dontAccept", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpBmEntryLocalStatus.setStatus('mandatory')
pppNcpBmEntryRemoteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 4, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("accept", 1), ("dontAccept", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppNcpBmEntryRemoteStatus.setStatus('mandatory')
pppFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5))
pppFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 1), )
if mibBuilder.loadTexts: pppFramerRowStatusTable.setStatus('mandatory')
pppFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppFramerIndex"))
if mibBuilder.loadTexts: pppFramerRowStatusEntry.setStatus('mandatory')
pppFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppFramerRowStatus.setStatus('mandatory')
pppFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppFramerComponentName.setStatus('mandatory')
pppFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppFramerStorageType.setStatus('mandatory')
pppFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: pppFramerIndex.setStatus('mandatory')
pppFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 10), )
if mibBuilder.loadTexts: pppFramerProvTable.setStatus('mandatory')
pppFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppFramerIndex"))
if mibBuilder.loadTexts: pppFramerProvEntry.setStatus('mandatory')
pppFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppFramerInterfaceName.setStatus('mandatory')
pppFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 12), )
if mibBuilder.loadTexts: pppFramerStateTable.setStatus('mandatory')
pppFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppFramerIndex"))
if mibBuilder.loadTexts: pppFramerStateEntry.setStatus('mandatory')
pppFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppFramerAdminState.setStatus('mandatory')
pppFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppFramerOperationalState.setStatus('mandatory')
pppFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppFramerUsageState.setStatus('mandatory')
pppFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 13), )
if mibBuilder.loadTexts: pppFramerStatsTable.setStatus('mandatory')
pppFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppFramerIndex"))
if mibBuilder.loadTexts: pppFramerStatsEntry.setStatus('mandatory')
pppFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppFramerFrmToIf.setStatus('mandatory')
pppFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppFramerFrmFromIf.setStatus('mandatory')
pppFramerAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppFramerAborts.setStatus('mandatory')
pppFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppFramerCrcErrors.setStatus('mandatory')
pppFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppFramerLrcErrors.setStatus('mandatory')
pppFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppFramerNonOctetErrors.setStatus('mandatory')
pppFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppFramerOverruns.setStatus('mandatory')
pppFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppFramerUnderruns.setStatus('mandatory')
pppFramerLargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppFramerLargeFrmErrors.setStatus('mandatory')
pppFramerUtilTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 14), )
if mibBuilder.loadTexts: pppFramerUtilTable.setStatus('mandatory')
pppFramerUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppFramerIndex"))
if mibBuilder.loadTexts: pppFramerUtilEntry.setStatus('mandatory')
pppFramerNormPrioLinkUtilToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 14, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppFramerNormPrioLinkUtilToIf.setStatus('mandatory')
pppFramerNormPrioLinkUtilFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 5, 14, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppFramerNormPrioLinkUtilFromIf.setStatus('mandatory')
pppLeq = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6))
pppLeqRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 1), )
if mibBuilder.loadTexts: pppLeqRowStatusTable.setStatus('mandatory')
pppLeqRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppLeqIndex"))
if mibBuilder.loadTexts: pppLeqRowStatusEntry.setStatus('mandatory')
pppLeqRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppLeqRowStatus.setStatus('mandatory')
pppLeqComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqComponentName.setStatus('mandatory')
pppLeqStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqStorageType.setStatus('mandatory')
pppLeqIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: pppLeqIndex.setStatus('mandatory')
pppLeqProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 10), )
if mibBuilder.loadTexts: pppLeqProvTable.setStatus('mandatory')
pppLeqProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppLeqIndex"))
if mibBuilder.loadTexts: pppLeqProvEntry.setStatus('mandatory')
pppLeqMaxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppLeqMaxPackets.setStatus('mandatory')
pppLeqMaxMsecData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppLeqMaxMsecData.setStatus('mandatory')
pppLeqMaxPercentMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppLeqMaxPercentMulticast.setStatus('mandatory')
pppLeqTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppLeqTimeToLive.setStatus('mandatory')
pppLeqStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 11), )
if mibBuilder.loadTexts: pppLeqStatsTable.setStatus('mandatory')
pppLeqStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppLeqIndex"))
if mibBuilder.loadTexts: pppLeqStatsEntry.setStatus('mandatory')
pppLeqTimedOutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqTimedOutPkt.setStatus('mandatory')
pppLeqHardwareForcedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqHardwareForcedPkt.setStatus('mandatory')
pppLeqForcedPktDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqForcedPktDiscards.setStatus('mandatory')
pppLeqQueuePurgeDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqQueuePurgeDiscards.setStatus('mandatory')
pppLeqTStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 12), )
if mibBuilder.loadTexts: pppLeqTStatsTable.setStatus('mandatory')
pppLeqTStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppLeqIndex"))
if mibBuilder.loadTexts: pppLeqTStatsEntry.setStatus('mandatory')
pppLeqTotalPktHandled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqTotalPktHandled.setStatus('mandatory')
pppLeqTotalPktForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqTotalPktForwarded.setStatus('mandatory')
pppLeqTotalPktQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqTotalPktQueued.setStatus('mandatory')
pppLeqTotalMulticastPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqTotalMulticastPkt.setStatus('mandatory')
pppLeqTotalPktDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 12, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqTotalPktDiscards.setStatus('mandatory')
pppLeqCStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 13), )
if mibBuilder.loadTexts: pppLeqCStatsTable.setStatus('mandatory')
pppLeqCStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppLeqIndex"))
if mibBuilder.loadTexts: pppLeqCStatsEntry.setStatus('mandatory')
pppLeqCurrentPktQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 13, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqCurrentPktQueued.setStatus('mandatory')
pppLeqCurrentBytesQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 13, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqCurrentBytesQueued.setStatus('mandatory')
pppLeqCurrentMulticastQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 13, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqCurrentMulticastQueued.setStatus('mandatory')
pppLeqThrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 14), )
if mibBuilder.loadTexts: pppLeqThrStatsTable.setStatus('mandatory')
pppLeqThrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-PppMIB", "pppIndex"), (0, "Nortel-Magellan-Passport-PppMIB", "pppLeqIndex"))
if mibBuilder.loadTexts: pppLeqThrStatsEntry.setStatus('mandatory')
pppLeqQueuePktThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqQueuePktThreshold.setStatus('mandatory')
pppLeqPktThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqPktThresholdExceeded.setStatus('mandatory')
pppLeqQueueByteThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 14, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqQueueByteThreshold.setStatus('mandatory')
pppLeqByteThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqByteThresholdExceeded.setStatus('mandatory')
pppLeqQueueMulticastThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqQueueMulticastThreshold.setStatus('mandatory')
pppLeqMulThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 14, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqMulThresholdExceeded.setStatus('mandatory')
pppLeqMemThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 102, 6, 14, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppLeqMemThresholdExceeded.setStatus('mandatory')
pppGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 33, 1))
pppGroupBC = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 33, 1, 3))
pppGroupBC02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 33, 1, 3, 3))
pppGroupBC02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 33, 1, 3, 3, 2))
pppCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 33, 3))
pppCapabilitiesBC = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 33, 3, 3))
pppCapabilitiesBC02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 33, 3, 3, 3))
pppCapabilitiesBC02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 33, 3, 3, 3, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-PppMIB", pppLeqTimeToLive=pppLeqTimeToLive, pppLnkStorageType=pppLnkStorageType, pppLqmOutLqrs=pppLqmOutLqrs, pppLeqRowStatus=pppLeqRowStatus, pppFramerInterfaceName=pppFramerInterfaceName, pppNcpBConfigLanId=pppNcpBConfigLanId, pppFramerRowStatusEntry=pppFramerRowStatusEntry, pppLnkTransmitFcsSize=pppLnkTransmitFcsSize, pppLnkQualityWindow=pppLnkQualityWindow, pppNcpBmcEntryLocalStatus=pppNcpBmcEntryLocalStatus, pppLeqThrStatsTable=pppLeqThrStatsTable, pppNcpBmEntryOperEntry=pppNcpBmEntryOperEntry, pppCidDataTable=pppCidDataTable, pppLnkConfigInitialMru=pppLnkConfigInitialMru, pppNcpIndex=pppNcpIndex, pppLeqTotalPktQueued=pppLeqTotalPktQueued, pppGroupBC02A=pppGroupBC02A, pppMpTable=pppMpTable, pppNcp=pppNcp, pppNcpBprovEntry=pppNcpBprovEntry, pppNcpBmEntry=pppNcpBmEntry, pppNcpIpOperEntry=pppNcpIpOperEntry, pppLeqStorageType=pppLeqStorageType, pppLqmQuality=pppLqmQuality, pppNcpBprovTable=pppNcpBprovTable, pppNcpBLocalToRemoteLanId=pppNcpBLocalToRemoteLanId, pppIfAdminStatus=pppIfAdminStatus, pppCapabilitiesBC02A=pppCapabilitiesBC02A, pppFramerAdminState=pppFramerAdminState, pppLnkProvEntry=pppLnkProvEntry, pppNcpBmEntryRowStatusTable=pppNcpBmEntryRowStatusTable, pppLeqThrStatsEntry=pppLeqThrStatsEntry, pppLqmConfigStatus=pppLqmConfigStatus, pppNcpRowStatus=pppNcpRowStatus, pppFramerNormPrioLinkUtilFromIf=pppFramerNormPrioLinkUtilFromIf, pppFramerStateTable=pppFramerStateTable, pppLnk=pppLnk, pppGroupBC=pppGroupBC, pppLnkReceiveFcsSize=pppLnkReceiveFcsSize, pppNcpBmcEntryRowStatusTable=pppNcpBmcEntryRowStatusTable, pppLnkConfigMagicNumber=pppLnkConfigMagicNumber, ppp=ppp, pppLeqForcedPktDiscards=pppLeqForcedPktDiscards, pppNcpRowStatusEntry=pppNcpRowStatusEntry, pppLnkContinuityMonitor=pppLnkContinuityMonitor, pppLeqHardwareForcedPkt=pppLeqHardwareForcedPkt, pppNcpBmEntryRemoteStatus=pppNcpBmEntryRemoteStatus, pppNcpBmEntryLocalStatus=pppNcpBmEntryLocalStatus, pppFramerUnderruns=pppFramerUnderruns, pppFramerNormPrioLinkUtilToIf=pppFramerNormPrioLinkUtilToIf, pppLeqStatsEntry=pppLeqStatsEntry, pppLeqRowStatusTable=pppLeqRowStatusTable, pppNcpBmEntryMacTypeIndex=pppNcpBmEntryMacTypeIndex, pppLeqProvEntry=pppLeqProvEntry, pppLeqMulThresholdExceeded=pppLeqMulThresholdExceeded, pppLeqCurrentBytesQueued=pppLeqCurrentBytesQueued, pppGroup=pppGroup, pppFramerOperationalState=pppFramerOperationalState, pppLeq=pppLeq, pppNcpBOperState=pppNcpBOperState, pppFramer=pppFramer, pppLqmRowStatusEntry=pppLqmRowStatusEntry, pppNcpIpOperState=pppNcpIpOperState, pppNcpXnsOperState=pppNcpXnsOperState, pppLqmIndex=pppLqmIndex, pppNcpBmcEntryProvTable=pppNcpBmcEntryProvTable, pppLnkLineCondition=pppLnkLineCondition, pppLqmComponentName=pppLqmComponentName, pppLeqMaxPackets=pppLeqMaxPackets, pppLqmStorageType=pppLqmStorageType, pppLeqTimedOutPkt=pppLeqTimedOutPkt, pppLeqTotalPktHandled=pppLeqTotalPktHandled, pppNcpIpxOperState=pppNcpIpxOperState, pppLeqTotalPktForwarded=pppLeqTotalPktForwarded, pppRowStatusTable=pppRowStatusTable, pppLqmInLqrs=pppLqmInLqrs, pppLnkRemoteMru=pppLnkRemoteMru, pppLnkTerminateRequestTries=pppLnkTerminateRequestTries, pppLnkConfigureRequestTries=pppLnkConfigureRequestTries, pppLnkBadAddresses=pppLnkBadAddresses, pppNcpBmcEntryProvEntry=pppNcpBmcEntryProvEntry, pppStateTable=pppStateTable, pppCapabilities=pppCapabilities, pppFramerNonOctetErrors=pppFramerNonOctetErrors, pppIfEntryEntry=pppIfEntryEntry, pppLqm=pppLqm, pppNcpBRemoteToLocalLanId=pppNcpBRemoteToLocalLanId, pppIndex=pppIndex, pppUsageState=pppUsageState, pppLqmConfigPeriod=pppLqmConfigPeriod, pppLnkOperEntry=pppLnkOperEntry, pppLqmRemotePeriod=pppLqmRemotePeriod, pppLeqProvTable=pppLeqProvTable, pppLeqMaxMsecData=pppLeqMaxMsecData, pppGroupBC02=pppGroupBC02, pppFramerUtilTable=pppFramerUtilTable, pppCapabilitiesBC02=pppCapabilitiesBC02, pppCapabilitiesBC=pppCapabilitiesBC, pppFramerLargeFrmErrors=pppFramerLargeFrmErrors, pppLnkRowStatusTable=pppLnkRowStatusTable, pppLnkBadControls=pppLnkBadControls, pppLeqByteThresholdExceeded=pppLeqByteThresholdExceeded, pppLeqPktThresholdExceeded=pppLeqPktThresholdExceeded, pppStorageType=pppStorageType, pppFramerIndex=pppFramerIndex, pppFramerOverruns=pppFramerOverruns, pppLeqCStatsEntry=pppLeqCStatsEntry, pppNcpOperTable=pppNcpOperTable, pppLnkRowStatusEntry=pppLnkRowStatusEntry, pppLeqStatsTable=pppLeqStatsTable, pppOperStatusEntry=pppOperStatusEntry, pppLeqCurrentPktQueued=pppLeqCurrentPktQueued, pppLeqQueueMulticastThreshold=pppLeqQueueMulticastThreshold, pppLeqTStatsEntry=pppLeqTStatsEntry, pppLnkProvTable=pppLnkProvTable, pppRowStatus=pppRowStatus, pppNcpBLocalToRemoteTinygramComp=pppNcpBLocalToRemoteTinygramComp, pppNcpComponentName=pppNcpComponentName, pppLqmOperEntry=pppLqmOperEntry, pppLeqCStatsTable=pppLeqCStatsTable, pppLqmProvTable=pppLqmProvTable, pppNcpBmEntryRowStatus=pppNcpBmEntryRowStatus, pppLeqTStatsTable=pppLeqTStatsTable, pppFramerLrcErrors=pppFramerLrcErrors, pppLqmRowStatusTable=pppLqmRowStatusTable, pppNcpBmEntryComponentName=pppNcpBmEntryComponentName, pppFramerProvTable=pppFramerProvTable, pppNcpAppletalkOperState=pppNcpAppletalkOperState, pppNcpBConfigTinygram=pppNcpBConfigTinygram, pppFramerStorageType=pppFramerStorageType, pppCustomerIdentifier=pppCustomerIdentifier, pppLnkQualityThreshold=pppLnkQualityThreshold, pppNcpBmcEntryComponentName=pppNcpBmcEntryComponentName, pppNcpBmcEntryRowStatusEntry=pppNcpBmcEntryRowStatusEntry, pppLeqMaxPercentMulticast=pppLeqMaxPercentMulticast, pppNcpBoperTable=pppNcpBoperTable, pppLnkLocalMru=pppLnkLocalMru, pppFramerCrcErrors=pppFramerCrcErrors, pppNcpRowStatusTable=pppNcpRowStatusTable, pppLeqMemThresholdExceeded=pppLeqMemThresholdExceeded, pppLnkBadFcss=pppLnkBadFcss, pppNcpBoperEntry=pppNcpBoperEntry, pppCidDataEntry=pppCidDataEntry, pppNcpBRemoteToLocalTinygramComp=pppNcpBRemoteToLocalTinygramComp, pppIfEntryTable=pppIfEntryTable, pppFramerStatsTable=pppFramerStatsTable, pppNcpBmEntryRowStatusEntry=pppNcpBmEntryRowStatusEntry, pppLnkIndex=pppLnkIndex, pppStateEntry=pppStateEntry, pppLeqIndex=pppLeqIndex, pppFramerStateEntry=pppFramerStateEntry, pppComponentName=pppComponentName, pppLnkComponentName=pppLnkComponentName, pppNcpBmEntryStorageType=pppNcpBmEntryStorageType, pppLeqRowStatusEntry=pppLeqRowStatusEntry, pppLeqComponentName=pppLeqComponentName, pppLeqTotalMulticastPkt=pppLeqTotalMulticastPkt, pppAdminState=pppAdminState, pppSnmpOperStatus=pppSnmpOperStatus, pppRowStatusEntry=pppRowStatusEntry, pppNcpBmcEntry=pppNcpBmcEntry, pppNcpBmEntryOperTable=pppNcpBmEntryOperTable, pppLeqQueueByteThreshold=pppLeqQueueByteThreshold, pppMpEntry=pppMpEntry, pppLnkPacketTooLongs=pppLnkPacketTooLongs, pppFramerStatsEntry=pppFramerStatsEntry, pppLeqQueuePurgeDiscards=pppLeqQueuePurgeDiscards, pppLnkRestartTimer=pppLnkRestartTimer, pppIfIndex=pppIfIndex, pppFramerRowStatusTable=pppFramerRowStatusTable, pppFramerRowStatus=pppFramerRowStatus, pppNcpBmcEntryMacTypeIndex=pppNcpBmcEntryMacTypeIndex, pppLnkNegativeAckTries=pppLnkNegativeAckTries, pppFramerFrmToIf=pppFramerFrmToIf, pppOperationalState=pppOperationalState, pppLnkOperTable=pppLnkOperTable, pppLqmRowStatus=pppLqmRowStatus, pppFramerAborts=pppFramerAborts, pppNcpIpOperTable=pppNcpIpOperTable, pppNcpDecnetOperState=pppNcpDecnetOperState, pppMIB=pppMIB, pppLqmOperTable=pppLqmOperTable, pppLeqQueuePktThreshold=pppLeqQueuePktThreshold, pppLinkToProtocolPort=pppLinkToProtocolPort, pppNcpBmcEntryRowStatus=pppNcpBmcEntryRowStatus, pppLqmLocalPeriod=pppLqmLocalPeriod, pppLnkOperState=pppLnkOperState, pppNcpBmcEntryStorageType=pppNcpBmcEntryStorageType, pppNcpOperEntry=pppNcpOperEntry, pppFramerUsageState=pppFramerUsageState, pppFramerUtilEntry=pppFramerUtilEntry, pppOperStatusTable=pppOperStatusTable, pppLeqCurrentMulticastQueued=pppLeqCurrentMulticastQueued, pppLnkRowStatus=pppLnkRowStatus, pppLeqTotalPktDiscards=pppLeqTotalPktDiscards, pppFramerComponentName=pppFramerComponentName, pppLqmProvEntry=pppLqmProvEntry, pppNcpStorageType=pppNcpStorageType, pppFramerFrmFromIf=pppFramerFrmFromIf, pppFramerProvEntry=pppFramerProvEntry, pppLqmInGoodOctets=pppLqmInGoodOctets)
