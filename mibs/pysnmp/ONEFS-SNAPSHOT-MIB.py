#
# PySNMP MIB module ONEFS-SNAPSHOT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ONEFS-SNAPSHOT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:25:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
TimeTicks64, onefs = mibBuilder.importSymbols("ONEFS-MIB", "TimeTicks64", "onefs")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32, ModuleIdentity, Integer32, NotificationType, iso, Counter64, ObjectIdentity, Unsigned32, MibIdentifier, Counter32, Bits, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32", "ModuleIdentity", "Integer32", "NotificationType", "iso", "Counter64", "ObjectIdentity", "Unsigned32", "MibIdentifier", "Counter32", "Bits", "IpAddress")
MacAddress, PhysAddress, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "PhysAddress", "TextualConvention", "DisplayString")
oneFSss = ModuleIdentity((1, 3, 6, 1, 4, 1, 12124, 3))
if mibBuilder.loadTexts: oneFSss.setLastUpdated('0201172301Z')
if mibBuilder.loadTexts: oneFSss.setOrganization('COMPANY_NAME')
ssVersion = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssVersion.setStatus('current')
ssLocalNodeId = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssLocalNodeId.setStatus('current')
ssTimeStart = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 3), TimeTicks64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssTimeStart.setStatus('current')
ssTimeEnd = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 4), TimeTicks64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssTimeEnd.setStatus('current')
ssGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 3, 5))
ssNodeInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 3, 6))
ssDisk = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 3, 5, 1))
ssNet = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 3, 5, 2))
ssSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 12124, 3, 5, 3))
ssFreeBlocks = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssFreeBlocks.setStatus('current')
ssTotalBlocks = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssTotalBlocks.setStatus('current')
ssAvailableBlocks = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssAvailableBlocks.setStatus('current')
ssBlockSize = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssBlockSize.setStatus('current')
ssNetBytesIn = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 5, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNetBytesIn.setStatus('current')
ssNetBytesOut = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 5, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNetBytesOut.setStatus('current')
ssFilesystemBytesIn = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 5, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssFilesystemBytesIn.setStatus('current')
ssFilesystemBytesOut = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 5, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssFilesystemBytesOut.setStatus('current')
ssNetBitsPerSecIn = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 5, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNetBitsPerSecIn.setStatus('current')
ssNetBitsPerSecOut = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 5, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNetBitsPerSecOut.setStatus('current')
ssFilesystemBitsPerSecIn = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 5, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssFilesystemBitsPerSecIn.setStatus('current')
ssFilesystemBitsPerSecOut = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 5, 2, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssFilesystemBitsPerSecOut.setStatus('current')
ssClusterName = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 5, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssClusterName.setStatus('current')
ssClusterHealth = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 5, 3, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssClusterHealth.setStatus('current')
ssConfiguredNodes = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 5, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssConfiguredNodes.setStatus('current')
ssOnlineNodes = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 5, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssOnlineNodes.setStatus('current')
ssNodeTable = MibTable((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1), )
if mibBuilder.loadTexts: ssNodeTable.setStatus('current')
ssNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1), ).setIndexNames((0, "ONEFS-SNAPSHOT-MIB", "ssNodeIndex"))
if mibBuilder.loadTexts: ssNodeEntry.setStatus('current')
ssNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeIndex.setStatus('current')
ssNodeFreeBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeFreeBlocks.setStatus('current')
ssNodeTotalBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeTotalBlocks.setStatus('current')
ssNodeAvailBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeAvailBlocks.setStatus('current')
ssNodeLnn = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeLnn.setStatus('current')
ssNodeDiskless = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeDiskless.setStatus('current')
ssNodeNetBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeNetBytesIn.setStatus('current')
ssNodeNetBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeNetBytesOut.setStatus('current')
ssNodeMACaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 9), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeMACaddress.setStatus('current')
ssNodeIPaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeIPaddress.setStatus('current')
ssNodeVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeVersion.setStatus('current')
ssNodeBoottime = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 12), TimeTicks64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeBoottime.setStatus('current')
ssNodeHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeHealth.setStatus('current')
ssNodeCPUload = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeCPUload.setStatus('current')
ssNodeFilesystemBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeFilesystemBytesIn.setStatus('current')
ssNodeFilesystemBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeFilesystemBytesOut.setStatus('current')
ssNodeNumberOfDisks = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeNumberOfDisks.setStatus('current')
ssNodeNumberOfSensors = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeNumberOfSensors.setStatus('current')
ssNodeNetBitsPerSecIn = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeNetBitsPerSecIn.setStatus('current')
ssNodeNetBitsPerSecOut = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeNetBitsPerSecOut.setStatus('current')
ssNodeFilesystemBitsPerSecIn = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeFilesystemBitsPerSecIn.setStatus('current')
ssNodeFilesystemBitsPerSecOut = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeFilesystemBitsPerSecOut.setStatus('current')
ssNodeCPUuser = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeCPUuser.setStatus('current')
ssNodeCPUnice = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeCPUnice.setStatus('current')
ssNodeCPUsystem = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeCPUsystem.setStatus('current')
ssNodeCPUinterrupt = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeCPUinterrupt.setStatus('current')
ssNodeCPUidle = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeCPUidle.setStatus('current')
ssNodeDevId = MibScalar((1, 3, 6, 1, 4, 1, 12124, 3, 6, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssNodeDevId.setStatus('current')
ssDiskInfoTable = MibTable((1, 3, 6, 1, 4, 1, 12124, 3, 6, 2), )
if mibBuilder.loadTexts: ssDiskInfoTable.setStatus('current')
ssDiskInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12124, 3, 6, 2, 1), ).setIndexNames((0, "ONEFS-SNAPSHOT-MIB", "ssNodeIndex"), (0, "ONEFS-SNAPSHOT-MIB", "ssDiskIndex"))
if mibBuilder.loadTexts: ssDiskInfoEntry.setStatus('current')
ssDiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssDiskIndex.setStatus('current')
ssDiskName = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssDiskName.setStatus('current')
ssDiskHealth = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("red", 0), ("green", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssDiskHealth.setStatus('current')
ssDiskBytesRead = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssDiskBytesRead.setStatus('current')
ssDiskBytesWritten = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssDiskBytesWritten.setStatus('current')
ssDiskNumXfers = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssDiskNumXfers.setStatus('current')
ssDiskBitsPerSecRead = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssDiskBitsPerSecRead.setStatus('current')
ssDiskBitsPerSecWritten = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssDiskBitsPerSecWritten.setStatus('current')
ssDiskXfersPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssDiskXfersPerSec.setStatus('current')
ssSensorInfoTable = MibTable((1, 3, 6, 1, 4, 1, 12124, 3, 6, 3), )
if mibBuilder.loadTexts: ssSensorInfoTable.setStatus('current')
ssSensorInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12124, 3, 6, 3, 1), ).setIndexNames((0, "ONEFS-SNAPSHOT-MIB", "ssNodeIndex"), (0, "ONEFS-SNAPSHOT-MIB", "ssDiskIndex"))
if mibBuilder.loadTexts: ssSensorInfoEntry.setStatus('current')
ssSensorDescriptionName = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssSensorDescriptionName.setStatus('current')
ssSensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssSensorType.setStatus('current')
ssSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 12124, 3, 6, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssSensorValue.setStatus('current')
mibBuilder.exportSymbols("ONEFS-SNAPSHOT-MIB", ssDiskIndex=ssDiskIndex, ssTimeStart=ssTimeStart, ssDiskXfersPerSec=ssDiskXfersPerSec, ssNodeCPUload=ssNodeCPUload, ssNodeEntry=ssNodeEntry, ssNodeCPUuser=ssNodeCPUuser, ssAvailableBlocks=ssAvailableBlocks, ssSensorType=ssSensorType, ssGlobal=ssGlobal, oneFSss=oneFSss, ssNodeTotalBlocks=ssNodeTotalBlocks, ssFilesystemBitsPerSecIn=ssFilesystemBitsPerSecIn, ssNodeCPUidle=ssNodeCPUidle, ssSystem=ssSystem, ssSensorDescriptionName=ssSensorDescriptionName, ssClusterName=ssClusterName, ssNodeFilesystemBytesOut=ssNodeFilesystemBytesOut, ssNodeNumberOfSensors=ssNodeNumberOfSensors, ssNodeDevId=ssNodeDevId, ssDiskBytesRead=ssDiskBytesRead, ssSensorValue=ssSensorValue, ssNodeFreeBlocks=ssNodeFreeBlocks, ssFilesystemBitsPerSecOut=ssFilesystemBitsPerSecOut, ssNodeDiskless=ssNodeDiskless, ssNetBitsPerSecIn=ssNetBitsPerSecIn, ssDiskNumXfers=ssDiskNumXfers, ssVersion=ssVersion, ssNodeNetBytesOut=ssNodeNetBytesOut, ssNodeBoottime=ssNodeBoottime, ssBlockSize=ssBlockSize, ssNodeAvailBlocks=ssNodeAvailBlocks, ssNodeVersion=ssNodeVersion, ssNodeFilesystemBytesIn=ssNodeFilesystemBytesIn, ssNodeNumberOfDisks=ssNodeNumberOfDisks, ssNodeNetBytesIn=ssNodeNetBytesIn, ssNodeMACaddress=ssNodeMACaddress, ssNodeNetBitsPerSecOut=ssNodeNetBitsPerSecOut, ssDiskHealth=ssDiskHealth, ssNodeCPUsystem=ssNodeCPUsystem, ssFilesystemBytesIn=ssFilesystemBytesIn, ssSensorInfoTable=ssSensorInfoTable, ssDiskInfoTable=ssDiskInfoTable, ssDisk=ssDisk, ssNetBytesIn=ssNetBytesIn, ssDiskBitsPerSecWritten=ssDiskBitsPerSecWritten, PYSNMP_MODULE_ID=oneFSss, ssNet=ssNet, ssNodeTable=ssNodeTable, ssNodeCPUnice=ssNodeCPUnice, ssNodeFilesystemBitsPerSecIn=ssNodeFilesystemBitsPerSecIn, ssNodeInfo=ssNodeInfo, ssClusterHealth=ssClusterHealth, ssConfiguredNodes=ssConfiguredNodes, ssOnlineNodes=ssOnlineNodes, ssFreeBlocks=ssFreeBlocks, ssNodeCPUinterrupt=ssNodeCPUinterrupt, ssNetBytesOut=ssNetBytesOut, ssDiskName=ssDiskName, ssNetBitsPerSecOut=ssNetBitsPerSecOut, ssNodeNetBitsPerSecIn=ssNodeNetBitsPerSecIn, ssFilesystemBytesOut=ssFilesystemBytesOut, ssTimeEnd=ssTimeEnd, ssLocalNodeId=ssLocalNodeId, ssNodeLnn=ssNodeLnn, ssDiskBitsPerSecRead=ssDiskBitsPerSecRead, ssNodeFilesystemBitsPerSecOut=ssNodeFilesystemBitsPerSecOut, ssNodeIPaddress=ssNodeIPaddress, ssSensorInfoEntry=ssSensorInfoEntry, ssNodeIndex=ssNodeIndex, ssDiskBytesWritten=ssDiskBytesWritten, ssNodeHealth=ssNodeHealth, ssTotalBlocks=ssTotalBlocks, ssDiskInfoEntry=ssDiskInfoEntry)
