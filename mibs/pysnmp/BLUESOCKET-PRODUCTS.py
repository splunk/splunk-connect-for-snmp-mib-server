#
# PySNMP MIB module BLUESOCKET-PRODUCTS (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BLUESOCKET-PRODUCTS
# Produced by pysmi-0.3.4 at Mon Apr 29 17:22:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
blueSocket, = mibBuilder.importSymbols("BLUESOCKET-ROOT", "blueSocket")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Unsigned32, iso, Bits, Counter64, NotificationType, MibIdentifier, TimeTicks, Counter32, ObjectIdentity, Gauge32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Unsigned32", "iso", "Bits", "Counter64", "NotificationType", "MibIdentifier", "TimeTicks", "Counter32", "ObjectIdentity", "Gauge32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
blueProducts = ModuleIdentity((1, 3, 6, 1, 4, 1, 9967, 100))
if mibBuilder.loadTexts: blueProducts.setLastUpdated('200809280000Z')
if mibBuilder.loadTexts: blueProducts.setOrganization('Bluesocket Inc.')
blue1000 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 1000))
blue1100 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 1100))
blue2000 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 2000))
blue2100 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 2100))
blue5000 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 5000))
blue600 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 600))
blue1200 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 1200))
blue2200 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 2200))
blue3200 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 3200))
blue5200 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 5200))
blue7200 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 7200))
gw1000_810 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 1000, 1)).setLabel("gw1000-810")
gw1000_815 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 1000, 2)).setLabel("gw1000-815")
gw1100 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 1100, 1))
gw2000 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 2000, 1))
gw2000_TF = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 2000, 2)).setLabel("gw2000-TF")
gw2000_FT = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 2000, 3)).setLabel("gw2000-FT")
gw2000_FF = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 2000, 4)).setLabel("gw2000-FF")
gw2100 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 2100, 1))
gw2100_TF = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 2100, 2)).setLabel("gw2100-TF")
gw2100_FT = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 2100, 3)).setLabel("gw2100-FT")
gw2100_FF = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 2100, 4)).setLabel("gw2100-FF")
gw5000 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 5000, 1))
gw5000_TF = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 5000, 2)).setLabel("gw5000-TF")
gw5000_FT = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 5000, 3)).setLabel("gw5000-FT")
gw5000_FF = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 5000, 4)).setLabel("gw5000-FF")
gw600 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 600, 1))
gw1200 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 1200, 1))
gw2200 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 2200, 1))
gw2200_FF = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 2200, 4)).setLabel("gw2200-FF")
gw2200C = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 2200, 5))
gw2200C_FF = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 2200, 8)).setLabel("gw2200C-FF")
gw3200 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 3200, 1))
gw3200_FF = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 3200, 4)).setLabel("gw3200-FF")
gw3200C = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 3200, 5))
gw3200C_FF = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 3200, 8)).setLabel("gw3200C-FF")
gw5200 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 5200, 1))
gw5200_FF = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 5200, 4)).setLabel("gw5200-FF")
gw5200C = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 5200, 5))
gw5200C_FF = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 5200, 8)).setLabel("gw5200C-FF")
gw7200 = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 7200, 1))
gw7200_FF = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 7200, 4)).setLabel("gw7200-FF")
gw7200C = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 7200, 5))
gw7200C_FF = MibIdentifier((1, 3, 6, 1, 4, 1, 9967, 100, 7200, 8)).setLabel("gw7200C-FF")
mibBuilder.exportSymbols("BLUESOCKET-PRODUCTS", PYSNMP_MODULE_ID=blueProducts, blue5000=blue5000, gw5000_FF=gw5000_FF, gw5000_TF=gw5000_TF, gw7200C=gw7200C, gw2100=gw2100, gw2000_FF=gw2000_FF, gw2200C_FF=gw2200C_FF, gw3200_FF=gw3200_FF, gw2100_FF=gw2100_FF, gw2000_FT=gw2000_FT, gw2200C=gw2200C, blue1100=blue1100, blue7200=blue7200, gw5200C=gw5200C, gw3200C_FF=gw3200C_FF, gw5200C_FF=gw5200C_FF, gw7200=gw7200, gw1000_810=gw1000_810, gw2100_TF=gw2100_TF, blue600=blue600, gw600=gw600, gw2200_FF=gw2200_FF, gw3200C=gw3200C, blue1200=blue1200, blue3200=blue3200, gw5200_FF=gw5200_FF, blueProducts=blueProducts, gw5000=gw5000, blue1000=blue1000, blue2100=blue2100, blue5200=blue5200, gw2000_TF=gw2000_TF, gw2100_FT=gw2100_FT, gw2000=gw2000, gw1200=gw1200, gw3200=gw3200, gw5000_FT=gw5000_FT, blue2200=blue2200, gw1000_815=gw1000_815, gw7200_FF=gw7200_FF, gw2200=gw2200, gw7200C_FF=gw7200C_FF, gw1100=gw1100, gw5200=gw5200, blue2000=blue2000)
