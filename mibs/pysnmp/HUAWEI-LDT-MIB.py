#
# PySNMP MIB module HUAWEI-LDT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-LDT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:34:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
TimeTicks, ModuleIdentity, Counter64, IpAddress, Unsigned32, MibIdentifier, Gauge32, iso, Counter32, ObjectIdentity, Bits, Integer32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ModuleIdentity", "Counter64", "IpAddress", "Unsigned32", "MibIdentifier", "Gauge32", "iso", "Counter32", "ObjectIdentity", "Bits", "Integer32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
hwLdtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174))
if mibBuilder.loadTexts: hwLdtMIB.setLastUpdated('200807171700Z')
if mibBuilder.loadTexts: hwLdtMIB.setOrganization('Huawei Technologies co.,Ltd.')
hwLdtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1))
hwLdtPortTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 2))
hwLdtTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 3))
hwLdtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 4))
hwLdtConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1))
hwLdtEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLdtEnable.setStatus('current')
hwLdtIntervalTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLdtIntervalTime.setStatus('current')
hwLdtVlanListLow = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLdtVlanListLow.setStatus('current')
hwLdtVlanListHigh = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLdtVlanListHigh.setStatus('current')
hwLdtPortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 5), )
if mibBuilder.loadTexts: hwLdtPortConfigTable.setStatus('current')
hwLdtPortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 5, 1), ).setIndexNames((0, "HUAWEI-LDT-MIB", "hwLdtInterfaceIndex"))
if mibBuilder.loadTexts: hwLdtPortConfigEntry.setStatus('current')
hwLdtInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 5, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwLdtInterfaceIndex.setStatus('current')
hwLdtInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLdtInterfaceName.setStatus('current')
hwLdtPortLdtEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLdtPortLdtEnable.setStatus('current')
hwLdtPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("trap", 1), ("blocking", 2), ("noLearning", 3), ("shutdown", 4))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLdtPortMode.setStatus('current')
hwLdtPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("blocking", 2), ("noLearning", 3), ("shutdown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLdtPortStatus.setStatus('current')
hwLdtPortRecoveryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLdtPortRecoveryTime.setStatus('current')
hwLdtPortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 6), )
if mibBuilder.loadTexts: hwLdtPortStatusTable.setStatus('current')
hwLdtPortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 6, 1), ).setIndexNames((0, "HUAWEI-LDT-MIB", "hwLdtInterfaceIndex"), (0, "HUAWEI-LDT-MIB", "hwLdtPortVlanIDIndex"))
if mibBuilder.loadTexts: hwLdtPortStatusEntry.setStatus('current')
hwLdtPortVlanIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 6, 1, 1), VlanId())
if mibBuilder.loadTexts: hwLdtPortVlanIDIndex.setStatus('current')
hwLdtPortVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("blocking", 2), ("noLearning", 3), ("shutdown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLdtPortVlanStatus.setStatus('current')
hwPortLoopDetectTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 7), )
if mibBuilder.loadTexts: hwPortLoopDetectTable.setStatus('current')
hwPortLoopDetectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 7, 1), ).setIndexNames((0, "HUAWEI-LDT-MIB", "hwPortLoopDetectIfIndex"))
if mibBuilder.loadTexts: hwPortLoopDetectEntry.setStatus('current')
hwPortLoopDetectIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 7, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwPortLoopDetectIfIndex.setStatus('current')
hwLPortLoopDetectIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwLPortLoopDetectIfName.setStatus('current')
hwPortLoopDetectEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 7, 1, 3), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortLoopDetectEnabled.setStatus('current')
hwPortLoopDetectRecoveryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortLoopDetectRecoveryTime.setStatus('current')
hwPortLoopDetectAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("shutdown", 1), ("blocking", 2), ("trap", 3), ("noLearning", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortLoopDetectAction.setStatus('current')
hwPortLoopDetectStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("normal", 1), ("blocking", 2), ("shutdown", 3), ("trap", 4), ("noLearning", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPortLoopDetectStatus.setStatus('current')
hwPortLoopDetectProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 7, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortLoopDetectProtocol.setStatus('current')
hwPortLoopDetectVlanLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 7, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortLoopDetectVlanLow.setStatus('current')
hwPortLoopDetectVlanHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 7, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortLoopDetectVlanHigh.setStatus('current')
hwLoopDetectInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLoopDetectInterval.setStatus('current')
hwLoopDetectSendingPacketInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwLoopDetectSendingPacketInterval.setStatus('current')
hwLdtPortLoopVlanListLow = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 2, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwLdtPortLoopVlanListLow.setStatus('current')
hwLdtPortLoopVlanListHigh = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 2, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwLdtPortLoopVlanListHigh.setStatus('current')
hwLdtPortRecoverVlanListLow = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 2, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwLdtPortRecoverVlanListLow.setStatus('current')
hwLdtPortRecoverVlanListHigh = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 2, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwLdtPortRecoverVlanListHigh.setStatus('current')
hwLdtPortLoopDetectVlanList = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 2, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwLdtPortLoopDetectVlanList.setStatus('current')
hwLdtPortLoop = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 3, 1)).setObjects(("HUAWEI-LDT-MIB", "hwLdtInterfaceName"), ("HUAWEI-LDT-MIB", "hwLdtPortLoopVlanListLow"), ("HUAWEI-LDT-MIB", "hwLdtPortLoopVlanListHigh"))
if mibBuilder.loadTexts: hwLdtPortLoop.setStatus('current')
hwLdtPortRecovry = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 3, 2)).setObjects(("HUAWEI-LDT-MIB", "hwLdtInterfaceName"), ("HUAWEI-LDT-MIB", "hwLdtPortRecoverVlanListLow"), ("HUAWEI-LDT-MIB", "hwLdtPortRecoverVlanListHigh"))
if mibBuilder.loadTexts: hwLdtPortRecovry.setStatus('current')
hwLdtPortLoopDetect = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 3, 3)).setObjects(("HUAWEI-LDT-MIB", "hwLPortLoopDetectIfName"), ("HUAWEI-LDT-MIB", "hwLdtPortLoopDetectVlanList"), ("HUAWEI-LDT-MIB", "hwPortLoopDetectStatus"))
if mibBuilder.loadTexts: hwLdtPortLoopDetect.setStatus('current')
hwLdtPortLoopDetectRecovery = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 3, 4)).setObjects(("HUAWEI-LDT-MIB", "hwLPortLoopDetectIfName"), ("HUAWEI-LDT-MIB", "hwPortLoopDetectStatus"))
if mibBuilder.loadTexts: hwLdtPortLoopDetectRecovery.setStatus('current')
hwLdtConformances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 4, 1))
hwLdtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 4, 2))
hwLdtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 4, 1, 1)).setObjects(("HUAWEI-LDT-MIB", "hwLdtConfigGroup"), ("HUAWEI-LDT-MIB", "hwLdtPortConfigGroup"), ("HUAWEI-LDT-MIB", "hwLdtTrapPortGroup"), ("HUAWEI-LDT-MIB", "hwLdtTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLdtCompliance = hwLdtCompliance.setStatus('current')
hwLdtConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 4, 2, 1)).setObjects(("HUAWEI-LDT-MIB", "hwLdtEnable"), ("HUAWEI-LDT-MIB", "hwLdtIntervalTime"), ("HUAWEI-LDT-MIB", "hwLdtVlanListLow"), ("HUAWEI-LDT-MIB", "hwLdtVlanListHigh"), ("HUAWEI-LDT-MIB", "hwLoopDetectInterval"), ("HUAWEI-LDT-MIB", "hwLoopDetectSendingPacketInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLdtConfigGroup = hwLdtConfigGroup.setStatus('current')
hwLdtPortConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 4, 2, 2)).setObjects(("HUAWEI-LDT-MIB", "hwLdtPortLdtEnable"), ("HUAWEI-LDT-MIB", "hwLdtInterfaceName"), ("HUAWEI-LDT-MIB", "hwLdtPortMode"), ("HUAWEI-LDT-MIB", "hwLdtPortStatus"), ("HUAWEI-LDT-MIB", "hwLdtPortRecoveryTime"), ("HUAWEI-LDT-MIB", "hwLPortLoopDetectIfName"), ("HUAWEI-LDT-MIB", "hwPortLoopDetectEnabled"), ("HUAWEI-LDT-MIB", "hwPortLoopDetectRecoveryTime"), ("HUAWEI-LDT-MIB", "hwPortLoopDetectAction"), ("HUAWEI-LDT-MIB", "hwPortLoopDetectStatus"), ("HUAWEI-LDT-MIB", "hwPortLoopDetectProtocol"), ("HUAWEI-LDT-MIB", "hwPortLoopDetectVlanLow"), ("HUAWEI-LDT-MIB", "hwPortLoopDetectVlanHigh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLdtPortConfigGroup = hwLdtPortConfigGroup.setStatus('current')
hwLdtTrapPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 4, 2, 3)).setObjects(("HUAWEI-LDT-MIB", "hwLdtPortLoopVlanListLow"), ("HUAWEI-LDT-MIB", "hwLdtPortLoopVlanListHigh"), ("HUAWEI-LDT-MIB", "hwLdtPortRecoverVlanListLow"), ("HUAWEI-LDT-MIB", "hwLdtPortRecoverVlanListHigh"), ("HUAWEI-LDT-MIB", "hwLdtPortLoopDetectVlanList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLdtTrapPortGroup = hwLdtTrapPortGroup.setStatus('current')
hwLdtTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 174, 4, 2, 4)).setObjects(("HUAWEI-LDT-MIB", "hwLdtPortLoop"), ("HUAWEI-LDT-MIB", "hwLdtPortRecovry"), ("HUAWEI-LDT-MIB", "hwLdtPortLoopDetect"), ("HUAWEI-LDT-MIB", "hwLdtPortLoopDetectRecovery"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwLdtTrapGroup = hwLdtTrapGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-LDT-MIB", hwLdtInterfaceName=hwLdtInterfaceName, hwLdtPortVlanStatus=hwLdtPortVlanStatus, hwPortLoopDetectRecoveryTime=hwPortLoopDetectRecoveryTime, hwLdtPortStatusEntry=hwLdtPortStatusEntry, hwLdtPortLoopVlanListLow=hwLdtPortLoopVlanListLow, hwLoopDetectInterval=hwLoopDetectInterval, hwLdtVlanListLow=hwLdtVlanListLow, hwLdtPortConfigTable=hwLdtPortConfigTable, hwLdtPortLdtEnable=hwLdtPortLdtEnable, hwLdtPortRecoverVlanListLow=hwLdtPortRecoverVlanListLow, hwLoopDetectSendingPacketInterval=hwLoopDetectSendingPacketInterval, hwLdtVlanListHigh=hwLdtVlanListHigh, hwPortLoopDetectEnabled=hwPortLoopDetectEnabled, hwLdtConformance=hwLdtConformance, hwLdtConfiguration=hwLdtConfiguration, hwPortLoopDetectProtocol=hwPortLoopDetectProtocol, hwLdtPortMode=hwLdtPortMode, hwLdtGroups=hwLdtGroups, hwLdtObjects=hwLdtObjects, hwLdtEnable=hwLdtEnable, hwLdtPortRecoveryTime=hwLdtPortRecoveryTime, hwLdtTraps=hwLdtTraps, hwLdtPortVlanIDIndex=hwLdtPortVlanIDIndex, hwPortLoopDetectTable=hwPortLoopDetectTable, hwPortLoopDetectIfIndex=hwPortLoopDetectIfIndex, hwLdtPortLoopDetectRecovery=hwLdtPortLoopDetectRecovery, hwLdtConfigGroup=hwLdtConfigGroup, hwPortLoopDetectVlanHigh=hwPortLoopDetectVlanHigh, hwLdtPortLoopDetectVlanList=hwLdtPortLoopDetectVlanList, hwLdtMIB=hwLdtMIB, PYSNMP_MODULE_ID=hwLdtMIB, hwLdtCompliance=hwLdtCompliance, hwLdtTrapGroup=hwLdtTrapGroup, hwPortLoopDetectEntry=hwPortLoopDetectEntry, hwPortLoopDetectAction=hwPortLoopDetectAction, hwLdtConformances=hwLdtConformances, hwLdtTrapPortGroup=hwLdtTrapPortGroup, hwLdtPortRecovry=hwLdtPortRecovry, hwLdtPortLoopVlanListHigh=hwLdtPortLoopVlanListHigh, hwLdtPortStatusTable=hwLdtPortStatusTable, hwLdtPortRecoverVlanListHigh=hwLdtPortRecoverVlanListHigh, hwLdtPortConfigEntry=hwLdtPortConfigEntry, hwPortLoopDetectVlanLow=hwPortLoopDetectVlanLow, hwLdtPortLoop=hwLdtPortLoop, hwPortLoopDetectStatus=hwPortLoopDetectStatus, hwLdtIntervalTime=hwLdtIntervalTime, hwLdtPortStatus=hwLdtPortStatus, hwLdtPortConfigGroup=hwLdtPortConfigGroup, hwLPortLoopDetectIfName=hwLPortLoopDetectIfName, hwLdtPortTrapObjects=hwLdtPortTrapObjects, hwLdtPortLoopDetect=hwLdtPortLoopDetect, hwLdtInterfaceIndex=hwLdtInterfaceIndex)
