#
# PySNMP MIB module CISCO-IETF-PIM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IETF-PIM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:43:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
cIpMRouteSourceMask, cIpMRouteNextHopIfIndex, cIpMRouteNextHopSourceMask, cIpMRouteAddrType, cIpMRouteNextHopGroup, cIpMRouteNextHopSource, cIpMRouteNextHopAddrType, cIpMRouteNextHopAddress, cIpMRouteSource, cIpMRouteGroup = mibBuilder.importSymbols("CISCO-IETF-IPMROUTE-MIB", "cIpMRouteSourceMask", "cIpMRouteNextHopIfIndex", "cIpMRouteNextHopSourceMask", "cIpMRouteAddrType", "cIpMRouteNextHopGroup", "cIpMRouteNextHopSource", "cIpMRouteNextHopAddrType", "cIpMRouteNextHopAddress", "cIpMRouteSource", "cIpMRouteGroup")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressType, InetVersion, InetAddressPrefixLength, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetVersion", "InetAddressPrefixLength", "InetAddress")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
IpAddress, Bits, Unsigned32, Integer32, MibIdentifier, Counter64, NotificationType, Gauge32, ModuleIdentity, TimeTicks, iso, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Bits", "Unsigned32", "Integer32", "MibIdentifier", "Counter64", "NotificationType", "Gauge32", "ModuleIdentity", "TimeTicks", "iso", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
RowStatus, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "DisplayString", "TextualConvention")
ciscoIetfPimMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 119))
ciscoIetfPimMIB.setRevisions(('2005-02-22 00:00',))
if mibBuilder.loadTexts: ciscoIetfPimMIB.setLastUpdated('200502220000Z')
if mibBuilder.loadTexts: ciscoIetfPimMIB.setOrganization('Cisco Systems, Inc.')
cPimNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 119, 0))
cPimMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 119, 1))
cPim = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1))
cPimJoinPruneInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cPimJoinPruneInterval.setStatus('current')
cPimIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 2), )
if mibBuilder.loadTexts: cPimIfTable.setStatus('current')
cPimIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-IETF-PIM-MIB", "cPimIfIndex"), (0, "CISCO-IETF-PIM-MIB", "cPimIfInetVersion"))
if mibBuilder.loadTexts: cPimIfEntry.setStatus('current')
cPimIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cPimIfIndex.setStatus('current')
cPimIfInetVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 2, 1, 2), InetVersion())
if mibBuilder.loadTexts: cPimIfInetVersion.setStatus('current')
cPimIfAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 2, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cPimIfAddressType.setStatus('current')
cPimIfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 2, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cPimIfAddress.setStatus('current')
cPimIfNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 2, 1, 5), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPimIfNetMask.setStatus('current')
cPimIfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dense", 1), ("sparse", 2), ("sparseDense", 3))).clone('dense')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cPimIfMode.setStatus('current')
cPimIfDR = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 2, 1, 7), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPimIfDR.setStatus('current')
cPimIfHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cPimIfHelloInterval.setStatus('current')
cPimIfJoinPruneInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cPimIfJoinPruneInterval.setStatus('current')
cPimIfCBSRPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cPimIfCBSRPreference.setStatus('current')
cPimIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 2, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cPimIfStatus.setStatus('current')
cPimNbrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 3), )
if mibBuilder.loadTexts: cPimNbrTable.setStatus('current')
cPimNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-IETF-PIM-MIB", "cPimNbrIfIndex"), (0, "CISCO-IETF-PIM-MIB", "cPimNbrAddressType"), (0, "CISCO-IETF-PIM-MIB", "cPimNbrAddress"))
if mibBuilder.loadTexts: cPimNbrEntry.setStatus('current')
cPimNbrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cPimNbrIfIndex.setStatus('current')
cPimNbrAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 3, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cPimNbrAddressType.setStatus('current')
cPimNbrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 3, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: cPimNbrAddress.setStatus('current')
cPimNbrUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 3, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPimNbrUpTime.setStatus('current')
cPimNbrExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 3, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPimNbrExpiryTime.setStatus('current')
cPimInetMRouteTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 4), )
if mibBuilder.loadTexts: cPimInetMRouteTable.setStatus('current')
cPimInetMRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-IETF-IPMROUTE-MIB", "cIpMRouteAddrType"), (0, "CISCO-IETF-IPMROUTE-MIB", "cIpMRouteGroup"), (0, "CISCO-IETF-IPMROUTE-MIB", "cIpMRouteSource"), (0, "CISCO-IETF-IPMROUTE-MIB", "cIpMRouteSourceMask"))
if mibBuilder.loadTexts: cPimInetMRouteEntry.setStatus('current')
cPimInetMRouteUpstreamAssertTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 4, 1, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPimInetMRouteUpstreamAssertTime.setStatus('current')
cPimInetMRouteAssertMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPimInetMRouteAssertMetric.setStatus('current')
cPimInetMRouteAssertMetricPref = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPimInetMRouteAssertMetricPref.setStatus('current')
cPimInetMRouteAssertRPTBit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 4, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPimInetMRouteAssertRPTBit.setStatus('current')
cPimInetMRouteFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 4, 1, 5), Bits().clone(namedValues=NamedValues(("rpt", 0), ("spt", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPimInetMRouteFlags.setStatus('current')
cPimInetMRouteNextHopTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 5), )
if mibBuilder.loadTexts: cPimInetMRouteNextHopTable.setStatus('current')
cPimInetMRouteNextHopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-IETF-IPMROUTE-MIB", "cIpMRouteNextHopAddrType"), (0, "CISCO-IETF-IPMROUTE-MIB", "cIpMRouteNextHopGroup"), (0, "CISCO-IETF-IPMROUTE-MIB", "cIpMRouteNextHopSource"), (0, "CISCO-IETF-IPMROUTE-MIB", "cIpMRouteNextHopSourceMask"), (0, "CISCO-IETF-IPMROUTE-MIB", "cIpMRouteNextHopIfIndex"), (0, "CISCO-IETF-IPMROUTE-MIB", "cIpMRouteNextHopAddress"))
if mibBuilder.loadTexts: cPimInetMRouteNextHopEntry.setStatus('current')
cPimInetMRouteNextHopPruneReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("prune", 2), ("assert", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPimInetMRouteNextHopPruneReason.setStatus('current')
cPimRPMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 6), )
if mibBuilder.loadTexts: cPimRPMapTable.setStatus('current')
cPimRPMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 6, 1), ).setIndexNames((0, "CISCO-IETF-PIM-MIB", "cPimRPMapComponent"), (0, "CISCO-IETF-PIM-MIB", "cPimRPMapAddrType"), (0, "CISCO-IETF-PIM-MIB", "cPimRPMapGroupAddress"), (0, "CISCO-IETF-PIM-MIB", "cPimRPMapGroupMask"), (0, "CISCO-IETF-PIM-MIB", "cPimRPMapAddress"))
if mibBuilder.loadTexts: cPimRPMapEntry.setStatus('current')
cPimRPMapComponent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: cPimRPMapComponent.setStatus('current')
cPimRPMapAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 6, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cPimRPMapAddrType.setStatus('current')
cPimRPMapGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 6, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: cPimRPMapGroupAddress.setStatus('current')
cPimRPMapGroupMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 6, 1, 4), InetAddressPrefixLength())
if mibBuilder.loadTexts: cPimRPMapGroupMask.setStatus('current')
cPimRPMapAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 6, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: cPimRPMapAddress.setStatus('current')
cPimRPMapHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 6, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cPimRPMapHoldTime.setStatus('current')
cPimRPMapExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 6, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cPimRPMapExpiryTime.setStatus('current')
cPimCRPTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 7), )
if mibBuilder.loadTexts: cPimCRPTable.setStatus('current')
cPimCRPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 7, 1), ).setIndexNames((0, "CISCO-IETF-PIM-MIB", "cPimCRPAddrType"), (0, "CISCO-IETF-PIM-MIB", "cPimCRPGroupAddress"), (0, "CISCO-IETF-PIM-MIB", "cPimCRPGroupMask"))
if mibBuilder.loadTexts: cPimCRPEntry.setStatus('current')
cPimCRPAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 7, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cPimCRPAddrType.setStatus('current')
cPimCRPGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 7, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: cPimCRPGroupAddress.setStatus('current')
cPimCRPGroupMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 7, 1, 3), InetAddressPrefixLength())
if mibBuilder.loadTexts: cPimCRPGroupMask.setStatus('current')
cPimCRPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 7, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cPimCRPAddress.setStatus('current')
cPimCRPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 7, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cPimCRPRowStatus.setStatus('current')
cPimComponentTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 8), )
if mibBuilder.loadTexts: cPimComponentTable.setStatus('current')
cPimComponentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 8, 1), ).setIndexNames((0, "CISCO-IETF-PIM-MIB", "cPimComponentIndex"))
if mibBuilder.loadTexts: cPimComponentEntry.setStatus('current')
cPimComponentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: cPimComponentIndex.setStatus('current')
cPimComponentBSRAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 8, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cPimComponentBSRAddrType.setStatus('current')
cPimComponentBSRAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 8, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cPimComponentBSRAddress.setStatus('current')
cPimComponentBSRExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 8, 1, 4), TimeTicks()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cPimComponentBSRExpiryTime.setStatus('current')
cPimComponentCRPHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 8, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cPimComponentCRPHoldTime.setStatus('current')
cPimComponentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 119, 1, 1, 8, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cPimComponentStatus.setStatus('current')
cPimNbrLoss = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 119, 0, 2)).setObjects(("CISCO-IETF-PIM-MIB", "cPimNbrUpTime"))
if mibBuilder.loadTexts: cPimNbrLoss.setStatus('current')
cPimMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 119, 2))
cPimMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 119, 2, 1))
cPimMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 119, 2, 2))
cPimSparseV2MIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 119, 2, 1, 1)).setObjects(("CISCO-IETF-PIM-MIB", "cPimV2MIBGroup"), ("CISCO-IETF-PIM-MIB", "cPimV2CRPMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cPimSparseV2MIBCompliance = cPimSparseV2MIBCompliance.setStatus('current')
cPimDenseV2MIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 119, 2, 1, 2)).setObjects(("CISCO-IETF-PIM-MIB", "cPimDenseV2MIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cPimDenseV2MIBCompliance = cPimDenseV2MIBCompliance.setStatus('current')
cPimNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 10, 119, 2, 2, 1)).setObjects(("CISCO-IETF-PIM-MIB", "cPimNbrLoss"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cPimNotificationGroup = cPimNotificationGroup.setStatus('current')
cPimV2MIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 119, 2, 2, 2)).setObjects(("CISCO-IETF-PIM-MIB", "cPimJoinPruneInterval"), ("CISCO-IETF-PIM-MIB", "cPimNbrUpTime"), ("CISCO-IETF-PIM-MIB", "cPimNbrExpiryTime"), ("CISCO-IETF-PIM-MIB", "cPimIfAddressType"), ("CISCO-IETF-PIM-MIB", "cPimIfAddress"), ("CISCO-IETF-PIM-MIB", "cPimIfNetMask"), ("CISCO-IETF-PIM-MIB", "cPimIfDR"), ("CISCO-IETF-PIM-MIB", "cPimIfHelloInterval"), ("CISCO-IETF-PIM-MIB", "cPimIfStatus"), ("CISCO-IETF-PIM-MIB", "cPimIfJoinPruneInterval"), ("CISCO-IETF-PIM-MIB", "cPimIfCBSRPreference"), ("CISCO-IETF-PIM-MIB", "cPimIfMode"), ("CISCO-IETF-PIM-MIB", "cPimRPMapHoldTime"), ("CISCO-IETF-PIM-MIB", "cPimRPMapExpiryTime"), ("CISCO-IETF-PIM-MIB", "cPimComponentBSRAddrType"), ("CISCO-IETF-PIM-MIB", "cPimComponentBSRAddress"), ("CISCO-IETF-PIM-MIB", "cPimComponentBSRExpiryTime"), ("CISCO-IETF-PIM-MIB", "cPimComponentCRPHoldTime"), ("CISCO-IETF-PIM-MIB", "cPimComponentStatus"), ("CISCO-IETF-PIM-MIB", "cPimInetMRouteFlags"), ("CISCO-IETF-PIM-MIB", "cPimInetMRouteUpstreamAssertTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cPimV2MIBGroup = cPimV2MIBGroup.setStatus('current')
cPimDenseV2MIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 119, 2, 2, 3)).setObjects(("CISCO-IETF-PIM-MIB", "cPimNbrUpTime"), ("CISCO-IETF-PIM-MIB", "cPimNbrExpiryTime"), ("CISCO-IETF-PIM-MIB", "cPimIfAddress"), ("CISCO-IETF-PIM-MIB", "cPimIfNetMask"), ("CISCO-IETF-PIM-MIB", "cPimIfDR"), ("CISCO-IETF-PIM-MIB", "cPimIfHelloInterval"), ("CISCO-IETF-PIM-MIB", "cPimIfStatus"), ("CISCO-IETF-PIM-MIB", "cPimIfMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cPimDenseV2MIBGroup = cPimDenseV2MIBGroup.setStatus('current')
cPimV2CRPMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 119, 2, 2, 4)).setObjects(("CISCO-IETF-PIM-MIB", "cPimCRPAddress"), ("CISCO-IETF-PIM-MIB", "cPimCRPRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cPimV2CRPMIBGroup = cPimV2CRPMIBGroup.setStatus('current')
cPimNextHopGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 119, 2, 2, 5)).setObjects(("CISCO-IETF-PIM-MIB", "cPimInetMRouteNextHopPruneReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cPimNextHopGroup = cPimNextHopGroup.setStatus('current')
cPimAssertGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 119, 2, 2, 6)).setObjects(("CISCO-IETF-PIM-MIB", "cPimInetMRouteAssertMetric"), ("CISCO-IETF-PIM-MIB", "cPimInetMRouteAssertMetricPref"), ("CISCO-IETF-PIM-MIB", "cPimInetMRouteAssertRPTBit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cPimAssertGroup = cPimAssertGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-IETF-PIM-MIB", cPimIfNetMask=cPimIfNetMask, cPimNextHopGroup=cPimNextHopGroup, cPimInetMRouteFlags=cPimInetMRouteFlags, cPimRPMapExpiryTime=cPimRPMapExpiryTime, cPimIfInetVersion=cPimIfInetVersion, cPimRPMapGroupMask=cPimRPMapGroupMask, cPimCRPEntry=cPimCRPEntry, cPimIfAddressType=cPimIfAddressType, cPimInetMRouteAssertMetricPref=cPimInetMRouteAssertMetricPref, cPimNbrAddressType=cPimNbrAddressType, cPimCRPGroupMask=cPimCRPGroupMask, cPimInetMRouteTable=cPimInetMRouteTable, cPimCRPAddrType=cPimCRPAddrType, cPimInetMRouteNextHopPruneReason=cPimInetMRouteNextHopPruneReason, cPimCRPRowStatus=cPimCRPRowStatus, cPimComponentBSRExpiryTime=cPimComponentBSRExpiryTime, cPimComponentCRPHoldTime=cPimComponentCRPHoldTime, cPimRPMapGroupAddress=cPimRPMapGroupAddress, cPimRPMapAddress=cPimRPMapAddress, cPimComponentBSRAddress=cPimComponentBSRAddress, cPimNbrIfIndex=cPimNbrIfIndex, cPimNbrTable=cPimNbrTable, cPimRPMapAddrType=cPimRPMapAddrType, cPimNotifs=cPimNotifs, cPimInetMRouteAssertRPTBit=cPimInetMRouteAssertRPTBit, cPimIfHelloInterval=cPimIfHelloInterval, PYSNMP_MODULE_ID=ciscoIetfPimMIB, cPimCRPTable=cPimCRPTable, cPimMIBObjects=cPimMIBObjects, cPimNbrAddress=cPimNbrAddress, cPimComponentBSRAddrType=cPimComponentBSRAddrType, cPimIfStatus=cPimIfStatus, cPimDenseV2MIBGroup=cPimDenseV2MIBGroup, cPimIfAddress=cPimIfAddress, cPimIfMode=cPimIfMode, cPimIfDR=cPimIfDR, cPimNbrExpiryTime=cPimNbrExpiryTime, cPimCRPAddress=cPimCRPAddress, cPimNbrEntry=cPimNbrEntry, cPimComponentTable=cPimComponentTable, cPimJoinPruneInterval=cPimJoinPruneInterval, cPimRPMapEntry=cPimRPMapEntry, cPimComponentEntry=cPimComponentEntry, cPimSparseV2MIBCompliance=cPimSparseV2MIBCompliance, cPimIfIndex=cPimIfIndex, cPimMIBConformance=cPimMIBConformance, cPimInetMRouteAssertMetric=cPimInetMRouteAssertMetric, cPimMIBCompliances=cPimMIBCompliances, cPimRPMapTable=cPimRPMapTable, cPimNbrUpTime=cPimNbrUpTime, cPimNbrLoss=cPimNbrLoss, cPimRPMapComponent=cPimRPMapComponent, ciscoIetfPimMIB=ciscoIetfPimMIB, cPimInetMRouteNextHopTable=cPimInetMRouteNextHopTable, cPimMIBGroups=cPimMIBGroups, cPimV2CRPMIBGroup=cPimV2CRPMIBGroup, cPimRPMapHoldTime=cPimRPMapHoldTime, cPimAssertGroup=cPimAssertGroup, cPimIfCBSRPreference=cPimIfCBSRPreference, cPim=cPim, cPimV2MIBGroup=cPimV2MIBGroup, cPimComponentStatus=cPimComponentStatus, cPimIfTable=cPimIfTable, cPimCRPGroupAddress=cPimCRPGroupAddress, cPimIfEntry=cPimIfEntry, cPimComponentIndex=cPimComponentIndex, cPimInetMRouteUpstreamAssertTime=cPimInetMRouteUpstreamAssertTime, cPimDenseV2MIBCompliance=cPimDenseV2MIBCompliance, cPimInetMRouteNextHopEntry=cPimInetMRouteNextHopEntry, cPimInetMRouteEntry=cPimInetMRouteEntry, cPimIfJoinPruneInterval=cPimIfJoinPruneInterval, cPimNotificationGroup=cPimNotificationGroup)
