#
# PySNMP MIB module A3COM0304-RESILIENTLINKS (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM0304-RESILIENTLINKS
# Produced by pysmi-0.3.4 at Mon Apr 29 16:54:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, NotificationType, Gauge32, Counter32, enterprises, iso, Integer32, Bits, MibIdentifier, NotificationType, IpAddress, Unsigned32, Counter64, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "NotificationType", "Gauge32", "Counter32", "enterprises", "iso", "Integer32", "Bits", "MibIdentifier", "NotificationType", "IpAddress", "Unsigned32", "Counter64", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
a3Com = MibIdentifier((1, 3, 6, 1, 4, 1, 43))
generic = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10))
mrmResilience = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 10, 15))
resTable = MibTable((1, 3, 6, 1, 4, 1, 43, 10, 15, 1), )
if mibBuilder.loadTexts: resTable.setStatus('mandatory')
resTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 10, 15, 1, 1), ).setIndexNames((0, "A3COM0304-RESILIENTLINKS", "resRepeater"), (0, "A3COM0304-RESILIENTLINKS", "resMainSlot"), (0, "A3COM0304-RESILIENTLINKS", "resMainPort"))
if mibBuilder.loadTexts: resTableEntry.setStatus('mandatory')
resRepeater = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resRepeater.setStatus('mandatory')
resMainSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resMainSlot.setStatus('mandatory')
resMainPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resMainPort.setStatus('mandatory')
resMainState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("ok", 2), ("ok-and-active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: resMainState.setStatus('mandatory')
resStandbySlot = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resStandbySlot.setStatus('mandatory')
resStandbyPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resStandbyPort.setStatus('mandatory')
resStandbyState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("failed", 1), ("ok", 2), ("ok-and-active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: resStandbyState.setStatus('mandatory')
resPairState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("invalid", 1), ("operational", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: resPairState.setStatus('mandatory')
resPairModificationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("under-modification", 1), ("stable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resPairModificationStatus.setStatus('mandatory')
resPairAction = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("create", 1), ("delete", 2), ("togglePort", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resPairAction.setStatus('mandatory')
resPairEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resPairEnable.setStatus('mandatory')
resPairMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no-switch-back", 1), ("switch-back-to-main", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resPairMode.setStatus('mandatory')
resPairName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resPairName.setStatus('mandatory')
resStandbyMapTable = MibTable((1, 3, 6, 1, 4, 1, 43, 10, 15, 2), )
if mibBuilder.loadTexts: resStandbyMapTable.setStatus('mandatory')
resStandbyMapTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 10, 15, 2, 1), ).setIndexNames((0, "A3COM0304-RESILIENTLINKS", "resSbRepeater"), (0, "A3COM0304-RESILIENTLINKS", "resSbSlot"), (0, "A3COM0304-RESILIENTLINKS", "resSbPort"))
if mibBuilder.loadTexts: resStandbyMapTableEntry.setStatus('mandatory')
resSbRepeater = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resSbRepeater.setStatus('mandatory')
resSbSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resSbSlot.setStatus('mandatory')
resSbPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resSbPort.setStatus('mandatory')
resSbType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("main", 1), ("standby", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: resSbType.setStatus('mandatory')
resSbMainSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resSbMainSlot.setStatus('mandatory')
resSbMainPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 15, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resSbMainPort.setStatus('mandatory')
resFlushTable = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 15, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resFlushTable.setStatus('mandatory')
resResilienceSwitch = NotificationType((1, 3, 6, 1, 4, 1, 43) + (0,43)).setObjects(("A3COM0304-RESILIENTLINKS", "resMainState"), ("A3COM0304-RESILIENTLINKS", "resStandbyState"))
resStateChange = NotificationType((1, 3, 6, 1, 4, 1, 43) + (0,44)).setObjects(("A3COM0304-RESILIENTLINKS", "resMainState"), ("A3COM0304-RESILIENTLINKS", "resStandbyState"))
mibBuilder.exportSymbols("A3COM0304-RESILIENTLINKS", resStandbyPort=resStandbyPort, resMainPort=resMainPort, resStandbyMapTableEntry=resStandbyMapTableEntry, generic=generic, resStateChange=resStateChange, resPairAction=resPairAction, resPairName=resPairName, resStandbySlot=resStandbySlot, resSbRepeater=resSbRepeater, resSbMainPort=resSbMainPort, resFlushTable=resFlushTable, resTable=resTable, resSbType=resSbType, resPairModificationStatus=resPairModificationStatus, resRepeater=resRepeater, a3Com=a3Com, resMainState=resMainState, resStandbyMapTable=resStandbyMapTable, resPairEnable=resPairEnable, resTableEntry=resTableEntry, resSbSlot=resSbSlot, resStandbyState=resStandbyState, resSbPort=resSbPort, resResilienceSwitch=resResilienceSwitch, resPairState=resPairState, resPairMode=resPairMode, mrmResilience=mrmResilience, resMainSlot=resMainSlot, resSbMainSlot=resSbMainSlot)
