#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-AtmUniMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-AtmUniMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:19:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
mscAtmIfIndex, mscAtmIfVptIndex, mscAtmIf, mscAtmIfVpt = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex", "mscAtmIfVptIndex", "mscAtmIf", "mscAtmIfVpt")
Integer32, Counter32, DisplayString, Gauge32, Unsigned32, StorageType, RowStatus = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Integer32", "Counter32", "DisplayString", "Gauge32", "Unsigned32", "StorageType", "RowStatus")
HexString, NonReplicated, Hex, AsciiString, AsciiStringIndex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "HexString", "NonReplicated", "Hex", "AsciiString", "AsciiStringIndex")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, ObjectIdentity, ModuleIdentity, Bits, Counter32, IpAddress, Gauge32, NotificationType, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ObjectIdentity", "ModuleIdentity", "Bits", "Counter32", "IpAddress", "Gauge32", "NotificationType", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "Counter64", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
atmUniMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 69))
mscAtmIfUni = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6))
mscAtmIfUniRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 1), )
if mibBuilder.loadTexts: mscAtmIfUniRowStatusTable.setStatus('mandatory')
mscAtmIfUniRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"))
if mibBuilder.loadTexts: mscAtmIfUniRowStatusEntry.setStatus('mandatory')
mscAtmIfUniRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniRowStatus.setStatus('mandatory')
mscAtmIfUniComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniComponentName.setStatus('mandatory')
mscAtmIfUniStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniStorageType.setStatus('mandatory')
mscAtmIfUniIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfUniIndex.setStatus('mandatory')
mscAtmIfUniProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 10), )
if mibBuilder.loadTexts: mscAtmIfUniProvTable.setStatus('mandatory')
mscAtmIfUniProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"))
if mibBuilder.loadTexts: mscAtmIfUniProvEntry.setStatus('mandatory')
mscAtmIfUniVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 5))).clone(namedValues=NamedValues(("atmForum30", 0), ("atmForum31", 1), ("atmForum40", 5))).clone('atmForum40')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniVersion.setStatus('mandatory')
mscAtmIfUniSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("network", 0), ("user", 1))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniSide.setStatus('mandatory')
mscAtmIfUniSoftPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniSoftPvcRetryPeriod.setStatus('obsolete')
mscAtmIfUniSoftPvpAndPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniSoftPvpAndPvcRetryPeriod.setStatus('mandatory')
mscAtmIfUniSoftPvpAndPvcHoldOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(50, 20000), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniSoftPvpAndPvcHoldOffTime.setStatus('mandatory')
mscAtmIfUniLoopPrevention = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniLoopPrevention.setStatus('mandatory')
mscAtmIfUniOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 11), )
if mibBuilder.loadTexts: mscAtmIfUniOperTable.setStatus('mandatory')
mscAtmIfUniOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"))
if mibBuilder.loadTexts: mscAtmIfUniOperEntry.setStatus('mandatory')
mscAtmIfUniMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 11, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniMacAddress.setStatus('mandatory')
mscAtmIfUniAcctOptTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 12), )
if mibBuilder.loadTexts: mscAtmIfUniAcctOptTable.setStatus('mandatory')
mscAtmIfUniAcctOptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"))
if mibBuilder.loadTexts: mscAtmIfUniAcctOptEntry.setStatus('mandatory')
mscAtmIfUniAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 12, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniAccountCollection.setStatus('mandatory')
mscAtmIfUniAccountConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("origTerm", 0), ("intermediate", 1))).clone('origTerm')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniAccountConnectionType.setStatus('mandatory')
mscAtmIfUniAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniAccountClass.setStatus('mandatory')
mscAtmIfUniServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniServiceExchange.setStatus('mandatory')
mscAtmIfUniIlmi = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2))
mscAtmIfUniIlmiRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfUniIlmiRowStatusTable.setStatus('mandatory')
mscAtmIfUniIlmiRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIlmiIndex"))
if mibBuilder.loadTexts: mscAtmIfUniIlmiRowStatusEntry.setStatus('mandatory')
mscAtmIfUniIlmiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniIlmiRowStatus.setStatus('mandatory')
mscAtmIfUniIlmiComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniIlmiComponentName.setStatus('mandatory')
mscAtmIfUniIlmiStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniIlmiStorageType.setStatus('mandatory')
mscAtmIfUniIlmiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfUniIlmiIndex.setStatus('mandatory')
mscAtmIfUniIlmiStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 10), )
if mibBuilder.loadTexts: mscAtmIfUniIlmiStateTable.setStatus('mandatory')
mscAtmIfUniIlmiStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIlmiIndex"))
if mibBuilder.loadTexts: mscAtmIfUniIlmiStateEntry.setStatus('mandatory')
mscAtmIfUniIlmiAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniIlmiAdminState.setStatus('mandatory')
mscAtmIfUniIlmiOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniIlmiOperationalState.setStatus('mandatory')
mscAtmIfUniIlmiUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniIlmiUsageState.setStatus('mandatory')
mscAtmIfUniIlmiProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 11), )
if mibBuilder.loadTexts: mscAtmIfUniIlmiProvTable.setStatus('mandatory')
mscAtmIfUniIlmiProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIlmiIndex"))
if mibBuilder.loadTexts: mscAtmIfUniIlmiProvEntry.setStatus('mandatory')
mscAtmIfUniIlmiVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniIlmiVci.setStatus('mandatory')
mscAtmIfUniIlmiOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("addressRegEnabled", 0), ("addressRegDisabled", 1), ("ilmiDisabled", 2))).clone('addressRegEnabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniIlmiOperatingMode.setStatus('mandatory')
mscAtmIfUniIlmiStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 12), )
if mibBuilder.loadTexts: mscAtmIfUniIlmiStatsTable.setStatus('mandatory')
mscAtmIfUniIlmiStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIlmiIndex"))
if mibBuilder.loadTexts: mscAtmIfUniIlmiStatsEntry.setStatus('mandatory')
mscAtmIfUniIlmiTxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniIlmiTxPdus.setStatus('mandatory')
mscAtmIfUniIlmiRxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniIlmiRxPdus.setStatus('mandatory')
mscAtmIfUniIlmiRxBadPdusDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniIlmiRxBadPdusDiscarded.setStatus('mandatory')
mscAtmIfUniIlmiPrefixToRegisterTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 287), )
if mibBuilder.loadTexts: mscAtmIfUniIlmiPrefixToRegisterTable.setStatus('mandatory')
mscAtmIfUniIlmiPrefixToRegisterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 287, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIlmiIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIlmiPrefixToRegisterValue"))
if mibBuilder.loadTexts: mscAtmIfUniIlmiPrefixToRegisterEntry.setStatus('mandatory')
mscAtmIfUniIlmiPrefixToRegisterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 287, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(26, 26)).setFixedLength(26)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniIlmiPrefixToRegisterValue.setStatus('mandatory')
mscAtmIfUniIlmiPrefixToRegisterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 287, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscAtmIfUniIlmiPrefixToRegisterRowStatus.setStatus('mandatory')
mscAtmIfUniIlmiEsiToRegisterTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 288), )
if mibBuilder.loadTexts: mscAtmIfUniIlmiEsiToRegisterTable.setStatus('mandatory')
mscAtmIfUniIlmiEsiToRegisterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 288, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIlmiIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIlmiEsiToRegisterValue"))
if mibBuilder.loadTexts: mscAtmIfUniIlmiEsiToRegisterEntry.setStatus('mandatory')
mscAtmIfUniIlmiEsiToRegisterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 288, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniIlmiEsiToRegisterValue.setStatus('mandatory')
mscAtmIfUniIlmiEsiToRegisterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 2, 288, 1, 2), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscAtmIfUniIlmiEsiToRegisterRowStatus.setStatus('mandatory')
mscAtmIfUniSig = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3))
mscAtmIfUniSigRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 1), )
if mibBuilder.loadTexts: mscAtmIfUniSigRowStatusTable.setStatus('mandatory')
mscAtmIfUniSigRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfUniSigRowStatusEntry.setStatus('mandatory')
mscAtmIfUniSigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigRowStatus.setStatus('mandatory')
mscAtmIfUniSigComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigComponentName.setStatus('mandatory')
mscAtmIfUniSigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigStorageType.setStatus('mandatory')
mscAtmIfUniSigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfUniSigIndex.setStatus('mandatory')
mscAtmIfUniSigProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 10), )
if mibBuilder.loadTexts: mscAtmIfUniSigProvTable.setStatus('mandatory')
mscAtmIfUniSigProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfUniSigProvEntry.setStatus('mandatory')
mscAtmIfUniSigVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniSigVci.setStatus('mandatory')
mscAtmIfUniSigAddressConversion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("nativeE164", 1), ("nsap", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniSigAddressConversion.setStatus('mandatory')
mscAtmIfUniSigOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("provisionedOnly", 1))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniSigOperatingMode.setStatus('mandatory')
mscAtmIfUniSigStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 11), )
if mibBuilder.loadTexts: mscAtmIfUniSigStateTable.setStatus('mandatory')
mscAtmIfUniSigStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfUniSigStateEntry.setStatus('mandatory')
mscAtmIfUniSigAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigAdminState.setStatus('mandatory')
mscAtmIfUniSigOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigOperationalState.setStatus('mandatory')
mscAtmIfUniSigUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigUsageState.setStatus('mandatory')
mscAtmIfUniSigOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 12), )
if mibBuilder.loadTexts: mscAtmIfUniSigOperTable.setStatus('mandatory')
mscAtmIfUniSigOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfUniSigOperEntry.setStatus('mandatory')
mscAtmIfUniSigLastTxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigLastTxCauseCode.setStatus('mandatory')
mscAtmIfUniSigLastTxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 12, 1, 2), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigLastTxDiagCode.setStatus('mandatory')
mscAtmIfUniSigLastRxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigLastRxCauseCode.setStatus('mandatory')
mscAtmIfUniSigLastRxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 12, 1, 4), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigLastRxDiagCode.setStatus('mandatory')
mscAtmIfUniSigStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 13), )
if mibBuilder.loadTexts: mscAtmIfUniSigStatsTable.setStatus('mandatory')
mscAtmIfUniSigStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfUniSigStatsEntry.setStatus('mandatory')
mscAtmIfUniSigCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigCurrentConnections.setStatus('obsolete')
mscAtmIfUniSigPeakConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 13, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigPeakConnections.setStatus('mandatory')
mscAtmIfUniSigSuccessfulConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigSuccessfulConnections.setStatus('mandatory')
mscAtmIfUniSigFailedConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigFailedConnections.setStatus('mandatory')
mscAtmIfUniSigTxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigTxPdus.setStatus('mandatory')
mscAtmIfUniSigRxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigRxPdus.setStatus('mandatory')
mscAtmIfUniSigCurrentPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 13, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigCurrentPmpConnections.setStatus('mandatory')
mscAtmIfUniSigPeakPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 13, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigPeakPmpConnections.setStatus('mandatory')
mscAtmIfUniSigSuccessfulPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigSuccessfulPmpConnections.setStatus('mandatory')
mscAtmIfUniSigFailedPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigFailedPmpConnections.setStatus('mandatory')
mscAtmIfUniSigNewCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 13, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigNewCurrentConnections.setStatus('mandatory')
mscAtmIfUniSigVcd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2))
mscAtmIfUniSigVcdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfUniSigVcdRowStatusTable.setStatus('mandatory')
mscAtmIfUniSigVcdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniSigIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniSigVcdIndex"))
if mibBuilder.loadTexts: mscAtmIfUniSigVcdRowStatusEntry.setStatus('mandatory')
mscAtmIfUniSigVcdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniSigVcdRowStatus.setStatus('mandatory')
mscAtmIfUniSigVcdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigVcdComponentName.setStatus('mandatory')
mscAtmIfUniSigVcdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniSigVcdStorageType.setStatus('mandatory')
mscAtmIfUniSigVcdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfUniSigVcdIndex.setStatus('mandatory')
mscAtmIfUniSigVcdProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 10), )
if mibBuilder.loadTexts: mscAtmIfUniSigVcdProvTable.setStatus('mandatory')
mscAtmIfUniSigVcdProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniSigIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniSigVcdIndex"))
if mibBuilder.loadTexts: mscAtmIfUniSigVcdProvEntry.setStatus('mandatory')
mscAtmIfUniSigVcdTrafficDescType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 6, 7, 8))).clone(namedValues=NamedValues(("n3", 3), ("n6", 6), ("n7", 7), ("n8", 8))).clone('n6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniSigVcdTrafficDescType.setStatus('mandatory')
mscAtmIfUniSigVcdAtmServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unspecifiedBitRate", 0), ("constantBitRate", 1), ("rtVariableBitRate", 2), ("nrtVariableBitRate", 3))).clone('rtVariableBitRate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniSigVcdAtmServiceCategory.setStatus('mandatory')
mscAtmIfUniSigVcdWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ValueRangeConstraint(65535, 65535), )).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniSigVcdWeight.setStatus('mandatory')
mscAtmIfUniSigVcdQosClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4))).clone('n2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniSigVcdQosClass.setStatus('mandatory')
mscAtmIfUniSigVcdTrafficShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 10, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniSigVcdTrafficShaping.setStatus('mandatory')
mscAtmIfUniSigVcdUnshapedTransmitQueueing = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 10, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("common", 1), ("sameAsCa", 3))).clone('sameAsCa')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniSigVcdUnshapedTransmitQueueing.setStatus('mandatory')
mscAtmIfUniSigVcdUsageParameterControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 10, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniSigVcdUsageParameterControl.setStatus('mandatory')
mscAtmIfUniSigVcdTdpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 387), )
if mibBuilder.loadTexts: mscAtmIfUniSigVcdTdpTable.setStatus('mandatory')
mscAtmIfUniSigVcdTdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 387, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniSigIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniSigVcdIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniSigVcdTdpIndex"))
if mibBuilder.loadTexts: mscAtmIfUniSigVcdTdpEntry.setStatus('mandatory')
mscAtmIfUniSigVcdTdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 387, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: mscAtmIfUniSigVcdTdpIndex.setStatus('mandatory')
mscAtmIfUniSigVcdTdpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 3, 2, 387, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniSigVcdTdpValue.setStatus('mandatory')
mscAtmIfUniAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4))
mscAtmIfUniAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 1), )
if mibBuilder.loadTexts: mscAtmIfUniAddrRowStatusTable.setStatus('mandatory')
mscAtmIfUniAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniAddrAddressTypeIndex"))
if mibBuilder.loadTexts: mscAtmIfUniAddrRowStatusEntry.setStatus('mandatory')
mscAtmIfUniAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniAddrRowStatus.setStatus('mandatory')
mscAtmIfUniAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniAddrComponentName.setStatus('mandatory')
mscAtmIfUniAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniAddrStorageType.setStatus('mandatory')
mscAtmIfUniAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: mscAtmIfUniAddrAddressIndex.setStatus('mandatory')
mscAtmIfUniAddrAddressTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("primary", 0), ("alternate", 1), ("registered", 2), ("default", 3))))
if mibBuilder.loadTexts: mscAtmIfUniAddrAddressTypeIndex.setStatus('mandatory')
mscAtmIfUniAddrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 10), )
if mibBuilder.loadTexts: mscAtmIfUniAddrOperTable.setStatus('mandatory')
mscAtmIfUniAddrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniAddrAddressTypeIndex"))
if mibBuilder.loadTexts: mscAtmIfUniAddrOperEntry.setStatus('mandatory')
mscAtmIfUniAddrScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniAddrScope.setStatus('mandatory')
mscAtmIfUniAddrReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniAddrReachability.setStatus('mandatory')
mscAtmIfUniAddrTermSP = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 2))
mscAtmIfUniAddrTermSPRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfUniAddrTermSPRowStatusTable.setStatus('mandatory')
mscAtmIfUniAddrTermSPRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniAddrAddressTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniAddrTermSPIndex"))
if mibBuilder.loadTexts: mscAtmIfUniAddrTermSPRowStatusEntry.setStatus('mandatory')
mscAtmIfUniAddrTermSPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniAddrTermSPRowStatus.setStatus('mandatory')
mscAtmIfUniAddrTermSPComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniAddrTermSPComponentName.setStatus('mandatory')
mscAtmIfUniAddrTermSPStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniAddrTermSPStorageType.setStatus('mandatory')
mscAtmIfUniAddrTermSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfUniAddrTermSPIndex.setStatus('mandatory')
mscAtmIfUniAddrPnniInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 3))
mscAtmIfUniAddrPnniInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 3, 1), )
if mibBuilder.loadTexts: mscAtmIfUniAddrPnniInfoRowStatusTable.setStatus('mandatory')
mscAtmIfUniAddrPnniInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniAddrAddressTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniAddrPnniInfoIndex"))
if mibBuilder.loadTexts: mscAtmIfUniAddrPnniInfoRowStatusEntry.setStatus('mandatory')
mscAtmIfUniAddrPnniInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniAddrPnniInfoRowStatus.setStatus('mandatory')
mscAtmIfUniAddrPnniInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniAddrPnniInfoComponentName.setStatus('mandatory')
mscAtmIfUniAddrPnniInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniAddrPnniInfoStorageType.setStatus('mandatory')
mscAtmIfUniAddrPnniInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfUniAddrPnniInfoIndex.setStatus('mandatory')
mscAtmIfUniAddrPnniInfoProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 3, 10), )
if mibBuilder.loadTexts: mscAtmIfUniAddrPnniInfoProvTable.setStatus('mandatory')
mscAtmIfUniAddrPnniInfoProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniAddrAddressTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniAddrPnniInfoIndex"))
if mibBuilder.loadTexts: mscAtmIfUniAddrPnniInfoProvEntry.setStatus('mandatory')
mscAtmIfUniAddrPnniInfoScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniAddrPnniInfoScope.setStatus('mandatory')
mscAtmIfUniAddrPnniInfoReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 4, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniAddrPnniInfoReachability.setStatus('mandatory')
mscAtmIfUniCallingAScr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5))
mscAtmIfUniCallingAScrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 1), )
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrRowStatusTable.setStatus('mandatory')
mscAtmIfUniCallingAScrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniCallingAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrRowStatusEntry.setStatus('mandatory')
mscAtmIfUniCallingAScrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrRowStatus.setStatus('mandatory')
mscAtmIfUniCallingAScrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrComponentName.setStatus('mandatory')
mscAtmIfUniCallingAScrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrStorageType.setStatus('mandatory')
mscAtmIfUniCallingAScrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrIndex.setStatus('mandatory')
mscAtmIfUniCallingAScrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 10), )
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrProvTable.setStatus('mandatory')
mscAtmIfUniCallingAScrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniCallingAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrProvEntry.setStatus('mandatory')
mscAtmIfUniCallingAScrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrAdminStatus.setStatus('mandatory')
mscAtmIfUniCallingAScrDefaultInsertionAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 10, 1, 2), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrDefaultInsertionAddress.setStatus('mandatory')
mscAtmIfUniCallingAScrStatTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 11), )
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrStatTable.setStatus('mandatory')
mscAtmIfUniCallingAScrStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniCallingAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrStatEntry.setStatus('mandatory')
mscAtmIfUniCallingAScrAcceptedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrAcceptedCalls.setStatus('mandatory')
mscAtmIfUniCallingAScrRejectedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrRejectedCalls.setStatus('mandatory')
mscAtmIfUniCallingAScrUnmatchedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrUnmatchedCalls.setStatus('mandatory')
mscAtmIfUniCallingAScrAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 2))
mscAtmIfUniCallingAScrAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrAddrRowStatusTable.setStatus('mandatory')
mscAtmIfUniCallingAScrAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniCallingAScrIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniCallingAScrAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniCallingAScrAddrAddressActionIndex"))
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrAddrRowStatusEntry.setStatus('mandatory')
mscAtmIfUniCallingAScrAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrAddrRowStatus.setStatus('mandatory')
mscAtmIfUniCallingAScrAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrAddrComponentName.setStatus('mandatory')
mscAtmIfUniCallingAScrAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrAddrStorageType.setStatus('mandatory')
mscAtmIfUniCallingAScrAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 2, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrAddrAddressIndex.setStatus('mandatory')
mscAtmIfUniCallingAScrAddrAddressActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 5, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("accept", 0), ("reject", 1))))
if mibBuilder.loadTexts: mscAtmIfUniCallingAScrAddrAddressActionIndex.setStatus('mandatory')
mscAtmIfUniCalledAScr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6))
mscAtmIfUniCalledAScrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 1), )
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrRowStatusTable.setStatus('mandatory')
mscAtmIfUniCalledAScrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniCalledAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrRowStatusEntry.setStatus('mandatory')
mscAtmIfUniCalledAScrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrRowStatus.setStatus('mandatory')
mscAtmIfUniCalledAScrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrComponentName.setStatus('mandatory')
mscAtmIfUniCalledAScrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrStorageType.setStatus('mandatory')
mscAtmIfUniCalledAScrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrIndex.setStatus('mandatory')
mscAtmIfUniCalledAScrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 10), )
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrProvTable.setStatus('mandatory')
mscAtmIfUniCalledAScrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniCalledAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrProvEntry.setStatus('mandatory')
mscAtmIfUniCalledAScrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrAdminStatus.setStatus('mandatory')
mscAtmIfUniCalledAScrStatTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 11), )
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrStatTable.setStatus('mandatory')
mscAtmIfUniCalledAScrStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniCalledAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrStatEntry.setStatus('mandatory')
mscAtmIfUniCalledAScrAcceptedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrAcceptedCalls.setStatus('mandatory')
mscAtmIfUniCalledAScrRejectedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrRejectedCalls.setStatus('mandatory')
mscAtmIfUniCalledAScrUnmatchedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrUnmatchedCalls.setStatus('mandatory')
mscAtmIfUniCalledAScrAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 2))
mscAtmIfUniCalledAScrAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrAddrRowStatusTable.setStatus('mandatory')
mscAtmIfUniCalledAScrAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniCalledAScrIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniCalledAScrAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfUniCalledAScrAddrAddressActionIndex"))
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrAddrRowStatusEntry.setStatus('mandatory')
mscAtmIfUniCalledAScrAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrAddrRowStatus.setStatus('mandatory')
mscAtmIfUniCalledAScrAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrAddrComponentName.setStatus('mandatory')
mscAtmIfUniCalledAScrAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrAddrStorageType.setStatus('mandatory')
mscAtmIfUniCalledAScrAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 2, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrAddrAddressIndex.setStatus('mandatory')
mscAtmIfUniCalledAScrAddrAddressActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 6, 6, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("accept", 0), ("reject", 1))))
if mibBuilder.loadTexts: mscAtmIfUniCalledAScrAddrAddressActionIndex.setStatus('mandatory')
mscAtmIfVptUni = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8))
mscAtmIfVptUniRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 1), )
if mibBuilder.loadTexts: mscAtmIfVptUniRowStatusTable.setStatus('mandatory')
mscAtmIfVptUniRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniRowStatusEntry.setStatus('mandatory')
mscAtmIfVptUniRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniRowStatus.setStatus('mandatory')
mscAtmIfVptUniComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniComponentName.setStatus('mandatory')
mscAtmIfVptUniStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniStorageType.setStatus('mandatory')
mscAtmIfVptUniIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptUniIndex.setStatus('mandatory')
mscAtmIfVptUniProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 10), )
if mibBuilder.loadTexts: mscAtmIfVptUniProvTable.setStatus('mandatory')
mscAtmIfVptUniProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniProvEntry.setStatus('mandatory')
mscAtmIfVptUniVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 5))).clone(namedValues=NamedValues(("atmForum30", 0), ("atmForum31", 1), ("atmForum40", 5))).clone('atmForum40')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniVersion.setStatus('mandatory')
mscAtmIfVptUniSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("network", 0), ("user", 1))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniSide.setStatus('mandatory')
mscAtmIfVptUniSoftPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniSoftPvcRetryPeriod.setStatus('obsolete')
mscAtmIfVptUniSoftPvpAndPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniSoftPvpAndPvcRetryPeriod.setStatus('mandatory')
mscAtmIfVptUniSoftPvpAndPvcHoldOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(50, 20000), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniSoftPvpAndPvcHoldOffTime.setStatus('mandatory')
mscAtmIfVptUniLoopPrevention = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniLoopPrevention.setStatus('mandatory')
mscAtmIfVptUniAcctOptTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 11), )
if mibBuilder.loadTexts: mscAtmIfVptUniAcctOptTable.setStatus('mandatory')
mscAtmIfVptUniAcctOptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniAcctOptEntry.setStatus('mandatory')
mscAtmIfVptUniAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 11, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniAccountCollection.setStatus('mandatory')
mscAtmIfVptUniAccountConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("origTerm", 0), ("intermediate", 1))).clone('origTerm')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniAccountConnectionType.setStatus('mandatory')
mscAtmIfVptUniAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniAccountClass.setStatus('mandatory')
mscAtmIfVptUniServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniServiceExchange.setStatus('mandatory')
mscAtmIfVptUniVProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 12), )
if mibBuilder.loadTexts: mscAtmIfVptUniVProvTable.setStatus('mandatory')
mscAtmIfVptUniVProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniVProvEntry.setStatus('mandatory')
mscAtmIfVptUniVpci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniVpci.setStatus('mandatory')
mscAtmIfVptUniSig = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2))
mscAtmIfVptUniSigRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfVptUniSigRowStatusTable.setStatus('mandatory')
mscAtmIfVptUniSigRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniSigRowStatusEntry.setStatus('mandatory')
mscAtmIfVptUniSigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigRowStatus.setStatus('mandatory')
mscAtmIfVptUniSigComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigComponentName.setStatus('mandatory')
mscAtmIfVptUniSigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigStorageType.setStatus('mandatory')
mscAtmIfVptUniSigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptUniSigIndex.setStatus('mandatory')
mscAtmIfVptUniSigProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 10), )
if mibBuilder.loadTexts: mscAtmIfVptUniSigProvTable.setStatus('mandatory')
mscAtmIfVptUniSigProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniSigProvEntry.setStatus('mandatory')
mscAtmIfVptUniSigVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniSigVci.setStatus('mandatory')
mscAtmIfVptUniSigAddressConversion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("nativeE164", 1), ("nsap", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniSigAddressConversion.setStatus('mandatory')
mscAtmIfVptUniSigOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("provisionedOnly", 1))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniSigOperatingMode.setStatus('mandatory')
mscAtmIfVptUniSigStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 11), )
if mibBuilder.loadTexts: mscAtmIfVptUniSigStateTable.setStatus('mandatory')
mscAtmIfVptUniSigStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniSigStateEntry.setStatus('mandatory')
mscAtmIfVptUniSigAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigAdminState.setStatus('mandatory')
mscAtmIfVptUniSigOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigOperationalState.setStatus('mandatory')
mscAtmIfVptUniSigUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigUsageState.setStatus('mandatory')
mscAtmIfVptUniSigOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 12), )
if mibBuilder.loadTexts: mscAtmIfVptUniSigOperTable.setStatus('mandatory')
mscAtmIfVptUniSigOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniSigOperEntry.setStatus('mandatory')
mscAtmIfVptUniSigLastTxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigLastTxCauseCode.setStatus('mandatory')
mscAtmIfVptUniSigLastTxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 12, 1, 2), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigLastTxDiagCode.setStatus('mandatory')
mscAtmIfVptUniSigLastRxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigLastRxCauseCode.setStatus('mandatory')
mscAtmIfVptUniSigLastRxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 12, 1, 4), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigLastRxDiagCode.setStatus('mandatory')
mscAtmIfVptUniSigStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 13), )
if mibBuilder.loadTexts: mscAtmIfVptUniSigStatsTable.setStatus('mandatory')
mscAtmIfVptUniSigStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniSigIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniSigStatsEntry.setStatus('mandatory')
mscAtmIfVptUniSigCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigCurrentConnections.setStatus('obsolete')
mscAtmIfVptUniSigPeakConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 13, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigPeakConnections.setStatus('mandatory')
mscAtmIfVptUniSigSuccessfulConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigSuccessfulConnections.setStatus('mandatory')
mscAtmIfVptUniSigFailedConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigFailedConnections.setStatus('mandatory')
mscAtmIfVptUniSigTxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigTxPdus.setStatus('mandatory')
mscAtmIfVptUniSigRxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigRxPdus.setStatus('mandatory')
mscAtmIfVptUniSigCurrentPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 13, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigCurrentPmpConnections.setStatus('mandatory')
mscAtmIfVptUniSigPeakPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 13, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigPeakPmpConnections.setStatus('mandatory')
mscAtmIfVptUniSigSuccessfulPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigSuccessfulPmpConnections.setStatus('mandatory')
mscAtmIfVptUniSigFailedPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigFailedPmpConnections.setStatus('mandatory')
mscAtmIfVptUniSigNewCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 13, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigNewCurrentConnections.setStatus('mandatory')
mscAtmIfVptUniSigVcd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2))
mscAtmIfVptUniSigVcdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdRowStatusTable.setStatus('mandatory')
mscAtmIfVptUniSigVcdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniSigIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniSigVcdIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdRowStatusEntry.setStatus('mandatory')
mscAtmIfVptUniSigVcdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdRowStatus.setStatus('mandatory')
mscAtmIfVptUniSigVcdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdComponentName.setStatus('mandatory')
mscAtmIfVptUniSigVcdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdStorageType.setStatus('mandatory')
mscAtmIfVptUniSigVcdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdIndex.setStatus('mandatory')
mscAtmIfVptUniSigVcdProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 10), )
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdProvTable.setStatus('mandatory')
mscAtmIfVptUniSigVcdProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniSigIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniSigVcdIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdProvEntry.setStatus('mandatory')
mscAtmIfVptUniSigVcdTrafficDescType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 6, 7, 8))).clone(namedValues=NamedValues(("n3", 3), ("n6", 6), ("n7", 7), ("n8", 8))).clone('n6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdTrafficDescType.setStatus('mandatory')
mscAtmIfVptUniSigVcdAtmServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unspecifiedBitRate", 0), ("constantBitRate", 1), ("rtVariableBitRate", 2), ("nrtVariableBitRate", 3))).clone('rtVariableBitRate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdAtmServiceCategory.setStatus('mandatory')
mscAtmIfVptUniSigVcdWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ValueRangeConstraint(65535, 65535), )).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdWeight.setStatus('mandatory')
mscAtmIfVptUniSigVcdQosClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4))).clone('n2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdQosClass.setStatus('mandatory')
mscAtmIfVptUniSigVcdTrafficShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 10, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdTrafficShaping.setStatus('mandatory')
mscAtmIfVptUniSigVcdUnshapedTransmitQueueing = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 10, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("common", 1), ("sameAsCa", 3))).clone('sameAsCa')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdUnshapedTransmitQueueing.setStatus('mandatory')
mscAtmIfVptUniSigVcdUsageParameterControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 10, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdUsageParameterControl.setStatus('mandatory')
mscAtmIfVptUniSigVcdTdpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 387), )
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdTdpTable.setStatus('mandatory')
mscAtmIfVptUniSigVcdTdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 387, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniSigIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniSigVcdIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniSigVcdTdpIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdTdpEntry.setStatus('mandatory')
mscAtmIfVptUniSigVcdTdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 387, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdTdpIndex.setStatus('mandatory')
mscAtmIfVptUniSigVcdTdpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 2, 2, 387, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniSigVcdTdpValue.setStatus('mandatory')
mscAtmIfVptUniAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3))
mscAtmIfVptUniAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 1), )
if mibBuilder.loadTexts: mscAtmIfVptUniAddrRowStatusTable.setStatus('mandatory')
mscAtmIfVptUniAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniAddrAddressTypeIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniAddrRowStatusEntry.setStatus('mandatory')
mscAtmIfVptUniAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniAddrRowStatus.setStatus('mandatory')
mscAtmIfVptUniAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniAddrComponentName.setStatus('mandatory')
mscAtmIfVptUniAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniAddrStorageType.setStatus('mandatory')
mscAtmIfVptUniAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: mscAtmIfVptUniAddrAddressIndex.setStatus('mandatory')
mscAtmIfVptUniAddrAddressTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("primary", 0), ("alternate", 1), ("registered", 2), ("default", 3))))
if mibBuilder.loadTexts: mscAtmIfVptUniAddrAddressTypeIndex.setStatus('mandatory')
mscAtmIfVptUniAddrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 10), )
if mibBuilder.loadTexts: mscAtmIfVptUniAddrOperTable.setStatus('mandatory')
mscAtmIfVptUniAddrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniAddrAddressTypeIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniAddrOperEntry.setStatus('mandatory')
mscAtmIfVptUniAddrScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniAddrScope.setStatus('mandatory')
mscAtmIfVptUniAddrReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniAddrReachability.setStatus('mandatory')
mscAtmIfVptUniAddrTermSP = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 2))
mscAtmIfVptUniAddrTermSPRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfVptUniAddrTermSPRowStatusTable.setStatus('mandatory')
mscAtmIfVptUniAddrTermSPRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniAddrAddressTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniAddrTermSPIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniAddrTermSPRowStatusEntry.setStatus('mandatory')
mscAtmIfVptUniAddrTermSPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniAddrTermSPRowStatus.setStatus('mandatory')
mscAtmIfVptUniAddrTermSPComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniAddrTermSPComponentName.setStatus('mandatory')
mscAtmIfVptUniAddrTermSPStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniAddrTermSPStorageType.setStatus('mandatory')
mscAtmIfVptUniAddrTermSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptUniAddrTermSPIndex.setStatus('mandatory')
mscAtmIfVptUniAddrPnniInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 3))
mscAtmIfVptUniAddrPnniInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 3, 1), )
if mibBuilder.loadTexts: mscAtmIfVptUniAddrPnniInfoRowStatusTable.setStatus('mandatory')
mscAtmIfVptUniAddrPnniInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniAddrAddressTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniAddrPnniInfoIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniAddrPnniInfoRowStatusEntry.setStatus('mandatory')
mscAtmIfVptUniAddrPnniInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniAddrPnniInfoRowStatus.setStatus('mandatory')
mscAtmIfVptUniAddrPnniInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniAddrPnniInfoComponentName.setStatus('mandatory')
mscAtmIfVptUniAddrPnniInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniAddrPnniInfoStorageType.setStatus('mandatory')
mscAtmIfVptUniAddrPnniInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptUniAddrPnniInfoIndex.setStatus('mandatory')
mscAtmIfVptUniAddrPnniInfoProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 3, 10), )
if mibBuilder.loadTexts: mscAtmIfVptUniAddrPnniInfoProvTable.setStatus('mandatory')
mscAtmIfVptUniAddrPnniInfoProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniAddrAddressTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniAddrPnniInfoIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniAddrPnniInfoProvEntry.setStatus('mandatory')
mscAtmIfVptUniAddrPnniInfoScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniAddrPnniInfoScope.setStatus('mandatory')
mscAtmIfVptUniAddrPnniInfoReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 3, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniAddrPnniInfoReachability.setStatus('mandatory')
mscAtmIfVptUniCallingAScr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4))
mscAtmIfVptUniCallingAScrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 1), )
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrRowStatusTable.setStatus('mandatory')
mscAtmIfVptUniCallingAScrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniCallingAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrRowStatusEntry.setStatus('mandatory')
mscAtmIfVptUniCallingAScrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrRowStatus.setStatus('mandatory')
mscAtmIfVptUniCallingAScrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrComponentName.setStatus('mandatory')
mscAtmIfVptUniCallingAScrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrStorageType.setStatus('mandatory')
mscAtmIfVptUniCallingAScrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrIndex.setStatus('mandatory')
mscAtmIfVptUniCallingAScrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 10), )
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrProvTable.setStatus('mandatory')
mscAtmIfVptUniCallingAScrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniCallingAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrProvEntry.setStatus('mandatory')
mscAtmIfVptUniCallingAScrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrAdminStatus.setStatus('mandatory')
mscAtmIfVptUniCallingAScrDefaultInsertionAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 10, 1, 2), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrDefaultInsertionAddress.setStatus('mandatory')
mscAtmIfVptUniCallingAScrStatTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 11), )
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrStatTable.setStatus('mandatory')
mscAtmIfVptUniCallingAScrStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniCallingAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrStatEntry.setStatus('mandatory')
mscAtmIfVptUniCallingAScrAcceptedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrAcceptedCalls.setStatus('mandatory')
mscAtmIfVptUniCallingAScrRejectedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrRejectedCalls.setStatus('mandatory')
mscAtmIfVptUniCallingAScrUnmatchedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrUnmatchedCalls.setStatus('mandatory')
mscAtmIfVptUniCallingAScrAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 2))
mscAtmIfVptUniCallingAScrAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrAddrRowStatusTable.setStatus('mandatory')
mscAtmIfVptUniCallingAScrAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniCallingAScrIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniCallingAScrAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniCallingAScrAddrAddressActionIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrAddrRowStatusEntry.setStatus('mandatory')
mscAtmIfVptUniCallingAScrAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrAddrRowStatus.setStatus('mandatory')
mscAtmIfVptUniCallingAScrAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrAddrComponentName.setStatus('mandatory')
mscAtmIfVptUniCallingAScrAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrAddrStorageType.setStatus('mandatory')
mscAtmIfVptUniCallingAScrAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 2, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrAddrAddressIndex.setStatus('mandatory')
mscAtmIfVptUniCallingAScrAddrAddressActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 4, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("accept", 0), ("reject", 1))))
if mibBuilder.loadTexts: mscAtmIfVptUniCallingAScrAddrAddressActionIndex.setStatus('mandatory')
mscAtmIfVptUniCalledAScr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5))
mscAtmIfVptUniCalledAScrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 1), )
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrRowStatusTable.setStatus('mandatory')
mscAtmIfVptUniCalledAScrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniCalledAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrRowStatusEntry.setStatus('mandatory')
mscAtmIfVptUniCalledAScrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrRowStatus.setStatus('mandatory')
mscAtmIfVptUniCalledAScrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrComponentName.setStatus('mandatory')
mscAtmIfVptUniCalledAScrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrStorageType.setStatus('mandatory')
mscAtmIfVptUniCalledAScrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrIndex.setStatus('mandatory')
mscAtmIfVptUniCalledAScrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 10), )
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrProvTable.setStatus('mandatory')
mscAtmIfVptUniCalledAScrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniCalledAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrProvEntry.setStatus('mandatory')
mscAtmIfVptUniCalledAScrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrAdminStatus.setStatus('mandatory')
mscAtmIfVptUniCalledAScrStatTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 11), )
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrStatTable.setStatus('mandatory')
mscAtmIfVptUniCalledAScrStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniCalledAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrStatEntry.setStatus('mandatory')
mscAtmIfVptUniCalledAScrAcceptedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrAcceptedCalls.setStatus('mandatory')
mscAtmIfVptUniCalledAScrRejectedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrRejectedCalls.setStatus('mandatory')
mscAtmIfVptUniCalledAScrUnmatchedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrUnmatchedCalls.setStatus('mandatory')
mscAtmIfVptUniCalledAScrAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 2))
mscAtmIfVptUniCalledAScrAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrAddrRowStatusTable.setStatus('mandatory')
mscAtmIfVptUniCalledAScrAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniCalledAScrIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniCalledAScrAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmUniMIB", "mscAtmIfVptUniCalledAScrAddrAddressActionIndex"))
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrAddrRowStatusEntry.setStatus('mandatory')
mscAtmIfVptUniCalledAScrAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrAddrRowStatus.setStatus('mandatory')
mscAtmIfVptUniCalledAScrAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrAddrComponentName.setStatus('mandatory')
mscAtmIfVptUniCalledAScrAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrAddrStorageType.setStatus('mandatory')
mscAtmIfVptUniCalledAScrAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 2, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrAddrAddressIndex.setStatus('mandatory')
mscAtmIfVptUniCalledAScrAddrAddressActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 8, 5, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("accept", 0), ("reject", 1))))
if mibBuilder.loadTexts: mscAtmIfVptUniCalledAScrAddrAddressActionIndex.setStatus('mandatory')
atmUniGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 69, 1))
atmUniGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 69, 1, 1))
atmUniGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 69, 1, 1, 3))
atmUniGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 69, 1, 1, 3, 2))
atmUniCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 69, 3))
atmUniCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 69, 3, 1))
atmUniCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 69, 3, 1, 3))
atmUniCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 69, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-AtmUniMIB", mscAtmIfUniAddrRowStatusEntry=mscAtmIfUniAddrRowStatusEntry, mscAtmIfVptUniCallingAScrRowStatusTable=mscAtmIfVptUniCallingAScrRowStatusTable, mscAtmIfVptUniCalledAScrAdminStatus=mscAtmIfVptUniCalledAScrAdminStatus, mscAtmIfUniSigUsageState=mscAtmIfUniSigUsageState, mscAtmIfUniCallingAScrComponentName=mscAtmIfUniCallingAScrComponentName, mscAtmIfUniVersion=mscAtmIfUniVersion, mscAtmIfVptUniSigSuccessfulPmpConnections=mscAtmIfVptUniSigSuccessfulPmpConnections, mscAtmIfUniSigLastTxDiagCode=mscAtmIfUniSigLastTxDiagCode, mscAtmIfUniSoftPvpAndPvcRetryPeriod=mscAtmIfUniSoftPvpAndPvcRetryPeriod, mscAtmIfVptUniCalledAScrProvEntry=mscAtmIfVptUniCalledAScrProvEntry, mscAtmIfUniCallingAScrAddr=mscAtmIfUniCallingAScrAddr, mscAtmIfUniCalledAScrAddrComponentName=mscAtmIfUniCalledAScrAddrComponentName, atmUniMIB=atmUniMIB, mscAtmIfVptUniSigLastRxDiagCode=mscAtmIfVptUniSigLastRxDiagCode, mscAtmIfVptUniSigVcdRowStatusTable=mscAtmIfVptUniSigVcdRowStatusTable, mscAtmIfVptUniAddrAddressTypeIndex=mscAtmIfVptUniAddrAddressTypeIndex, mscAtmIfVptUniCallingAScrAddrRowStatusTable=mscAtmIfVptUniCallingAScrAddrRowStatusTable, mscAtmIfUniCallingAScrRowStatusEntry=mscAtmIfUniCallingAScrRowStatusEntry, mscAtmIfUniSigVcdIndex=mscAtmIfUniSigVcdIndex, mscAtmIfVptUniAddrPnniInfoStorageType=mscAtmIfVptUniAddrPnniInfoStorageType, mscAtmIfVptUniSigComponentName=mscAtmIfVptUniSigComponentName, mscAtmIfVptUniCallingAScrAddrComponentName=mscAtmIfVptUniCallingAScrAddrComponentName, mscAtmIfUniRowStatusTable=mscAtmIfUniRowStatusTable, mscAtmIfVptUniCallingAScrRejectedCalls=mscAtmIfVptUniCallingAScrRejectedCalls, mscAtmIfVptUniSigVcdRowStatus=mscAtmIfVptUniSigVcdRowStatus, mscAtmIfVptUniSigVcdTdpTable=mscAtmIfVptUniSigVcdTdpTable, mscAtmIfVptUniCallingAScrStorageType=mscAtmIfVptUniCallingAScrStorageType, mscAtmIfUniSigRowStatusEntry=mscAtmIfUniSigRowStatusEntry, mscAtmIfUniSigAdminState=mscAtmIfUniSigAdminState, mscAtmIfUniStorageType=mscAtmIfUniStorageType, mscAtmIfVptUniSigVcdIndex=mscAtmIfVptUniSigVcdIndex, mscAtmIfUniIlmiEsiToRegisterValue=mscAtmIfUniIlmiEsiToRegisterValue, mscAtmIfUniSigOperatingMode=mscAtmIfUniSigOperatingMode, mscAtmIfVptUniVpci=mscAtmIfVptUniVpci, mscAtmIfVptUniSigVcdProvTable=mscAtmIfVptUniSigVcdProvTable, mscAtmIfVptUniCallingAScrAddr=mscAtmIfVptUniCallingAScrAddr, mscAtmIfVptUniCallingAScrAddrAddressActionIndex=mscAtmIfVptUniCallingAScrAddrAddressActionIndex, mscAtmIfVptUniCalledAScrAddrAddressActionIndex=mscAtmIfVptUniCalledAScrAddrAddressActionIndex, mscAtmIfVptUniSigSuccessfulConnections=mscAtmIfVptUniSigSuccessfulConnections, mscAtmIfUniCalledAScrRowStatusEntry=mscAtmIfUniCalledAScrRowStatusEntry, mscAtmIfUniSigStorageType=mscAtmIfUniSigStorageType, mscAtmIfVptUniAddrStorageType=mscAtmIfVptUniAddrStorageType, mscAtmIfUniSigIndex=mscAtmIfUniSigIndex, mscAtmIfUniAddrOperTable=mscAtmIfUniAddrOperTable, mscAtmIfUniIlmiStorageType=mscAtmIfUniIlmiStorageType, mscAtmIfVptUniCalledAScrIndex=mscAtmIfVptUniCalledAScrIndex, mscAtmIfUniCalledAScrAcceptedCalls=mscAtmIfUniCalledAScrAcceptedCalls, mscAtmIfUniSigLastRxDiagCode=mscAtmIfUniSigLastRxDiagCode, mscAtmIfUniIlmiRxPdus=mscAtmIfUniIlmiRxPdus, mscAtmIfUniIlmiRowStatusTable=mscAtmIfUniIlmiRowStatusTable, mscAtmIfVptUniCalledAScrRowStatus=mscAtmIfVptUniCalledAScrRowStatus, mscAtmIfVptUniCalledAScrAddrRowStatusEntry=mscAtmIfVptUniCalledAScrAddrRowStatusEntry, mscAtmIfVptUniSigIndex=mscAtmIfVptUniSigIndex, mscAtmIfVptUniCalledAScrAddrRowStatus=mscAtmIfVptUniCalledAScrAddrRowStatus, mscAtmIfVptUniAddrRowStatusTable=mscAtmIfVptUniAddrRowStatusTable, mscAtmIfVptUniCallingAScrAddrAddressIndex=mscAtmIfVptUniCallingAScrAddrAddressIndex, mscAtmIfUniAddrPnniInfoScope=mscAtmIfUniAddrPnniInfoScope, mscAtmIfVptUniSigFailedConnections=mscAtmIfVptUniSigFailedConnections, mscAtmIfUniSoftPvpAndPvcHoldOffTime=mscAtmIfUniSoftPvpAndPvcHoldOffTime, mscAtmIfUniAddrTermSPRowStatusEntry=mscAtmIfUniAddrTermSPRowStatusEntry, mscAtmIfUniAddrComponentName=mscAtmIfUniAddrComponentName, mscAtmIfVptUniAddrRowStatus=mscAtmIfVptUniAddrRowStatus, atmUniGroupCA02=atmUniGroupCA02, mscAtmIfVptUniAddrPnniInfoProvTable=mscAtmIfVptUniAddrPnniInfoProvTable, mscAtmIfVptUniAddrPnniInfoIndex=mscAtmIfVptUniAddrPnniInfoIndex, mscAtmIfUniAcctOptTable=mscAtmIfUniAcctOptTable, mscAtmIfVptUniSigVcdStorageType=mscAtmIfVptUniSigVcdStorageType, mscAtmIfVptUniCalledAScr=mscAtmIfVptUniCalledAScr, atmUniGroupCA02A=atmUniGroupCA02A, mscAtmIfUniSigVcdTdpIndex=mscAtmIfUniSigVcdTdpIndex, mscAtmIfVptUniCallingAScrAcceptedCalls=mscAtmIfVptUniCallingAScrAcceptedCalls, mscAtmIfUniCallingAScrAddrRowStatusEntry=mscAtmIfUniCallingAScrAddrRowStatusEntry, mscAtmIfVptUniCallingAScrProvEntry=mscAtmIfVptUniCallingAScrProvEntry, mscAtmIfUniIlmiProvTable=mscAtmIfUniIlmiProvTable, mscAtmIfUniSigStateEntry=mscAtmIfUniSigStateEntry, atmUniCapabilitiesCA=atmUniCapabilitiesCA, mscAtmIfUniSigProvEntry=mscAtmIfUniSigProvEntry, mscAtmIfVptUniSigVcdTrafficShaping=mscAtmIfVptUniSigVcdTrafficShaping, mscAtmIfVptUniCalledAScrComponentName=mscAtmIfVptUniCalledAScrComponentName, mscAtmIfVptUniAddrTermSPRowStatusEntry=mscAtmIfVptUniAddrTermSPRowStatusEntry, mscAtmIfVptUniSigOperTable=mscAtmIfVptUniSigOperTable, mscAtmIfUniIlmiPrefixToRegisterTable=mscAtmIfUniIlmiPrefixToRegisterTable, mscAtmIfVptUniSigLastTxDiagCode=mscAtmIfVptUniSigLastTxDiagCode, mscAtmIfUniAddrPnniInfoRowStatusEntry=mscAtmIfUniAddrPnniInfoRowStatusEntry, mscAtmIfUniAddrPnniInfo=mscAtmIfUniAddrPnniInfo, mscAtmIfUniSigStateTable=mscAtmIfUniSigStateTable, mscAtmIfUniSigNewCurrentConnections=mscAtmIfUniSigNewCurrentConnections, atmUniCapabilitiesCA02A=atmUniCapabilitiesCA02A, mscAtmIfUniCalledAScrStorageType=mscAtmIfUniCalledAScrStorageType, mscAtmIfUniIlmiRowStatusEntry=mscAtmIfUniIlmiRowStatusEntry, mscAtmIfUniCallingAScrRowStatus=mscAtmIfUniCallingAScrRowStatus, mscAtmIfVptUniAddrPnniInfoReachability=mscAtmIfVptUniAddrPnniInfoReachability, mscAtmIfVptUniSigStatsTable=mscAtmIfVptUniSigStatsTable, mscAtmIfUniCalledAScrProvEntry=mscAtmIfUniCalledAScrProvEntry, mscAtmIfVptUniSigFailedPmpConnections=mscAtmIfVptUniSigFailedPmpConnections, mscAtmIfUniCalledAScrComponentName=mscAtmIfUniCalledAScrComponentName, mscAtmIfUniSigPeakPmpConnections=mscAtmIfUniSigPeakPmpConnections, mscAtmIfUniCallingAScrStorageType=mscAtmIfUniCallingAScrStorageType, mscAtmIfUniCalledAScrIndex=mscAtmIfUniCalledAScrIndex, mscAtmIfUniSigComponentName=mscAtmIfUniSigComponentName, mscAtmIfVptUniVProvTable=mscAtmIfVptUniVProvTable, mscAtmIfUniSigCurrentConnections=mscAtmIfUniSigCurrentConnections, mscAtmIfVptUniSigOperatingMode=mscAtmIfVptUniSigOperatingMode, mscAtmIfUniSigVcdComponentName=mscAtmIfUniSigVcdComponentName, mscAtmIfUniSigVcdTdpTable=mscAtmIfUniSigVcdTdpTable, mscAtmIfUniAddrScope=mscAtmIfUniAddrScope, mscAtmIfUniCalledAScrAddr=mscAtmIfUniCalledAScrAddr, mscAtmIfVptUniSigVcd=mscAtmIfVptUniSigVcd, mscAtmIfUniCalledAScrAddrRowStatusEntry=mscAtmIfUniCalledAScrAddrRowStatusEntry, mscAtmIfVptUniSigVcdTdpIndex=mscAtmIfVptUniSigVcdTdpIndex, mscAtmIfUniCalledAScrStatEntry=mscAtmIfUniCalledAScrStatEntry, mscAtmIfVptUniSigVcdTdpValue=mscAtmIfVptUniSigVcdTdpValue, mscAtmIfVptUniStorageType=mscAtmIfVptUniStorageType, mscAtmIfUniSigVcdTdpValue=mscAtmIfUniSigVcdTdpValue, mscAtmIfUni=mscAtmIfUni, mscAtmIfUniSigVcd=mscAtmIfUniSigVcd, mscAtmIfUniAddrTermSPIndex=mscAtmIfUniAddrTermSPIndex, mscAtmIfUniCallingAScrAddrStorageType=mscAtmIfUniCallingAScrAddrStorageType, mscAtmIfVptUniSigVcdProvEntry=mscAtmIfVptUniSigVcdProvEntry, mscAtmIfVptUniSigStateTable=mscAtmIfVptUniSigStateTable, mscAtmIfUniSigVcdRowStatus=mscAtmIfUniSigVcdRowStatus, mscAtmIfUniSigAddressConversion=mscAtmIfUniSigAddressConversion, mscAtmIfUniSigVcdRowStatusEntry=mscAtmIfUniSigVcdRowStatusEntry, mscAtmIfVptUniSigVcdWeight=mscAtmIfVptUniSigVcdWeight, mscAtmIfUniComponentName=mscAtmIfUniComponentName, mscAtmIfUniSigOperationalState=mscAtmIfUniSigOperationalState, mscAtmIfUniSigVcdWeight=mscAtmIfUniSigVcdWeight, mscAtmIfUniSigVcdQosClass=mscAtmIfUniSigVcdQosClass, mscAtmIfUniCalledAScr=mscAtmIfUniCalledAScr, mscAtmIfVptUniCalledAScrRejectedCalls=mscAtmIfVptUniCalledAScrRejectedCalls, mscAtmIfVptUniSigVci=mscAtmIfVptUniSigVci, mscAtmIfUniCalledAScrStatTable=mscAtmIfUniCalledAScrStatTable, mscAtmIfUniCallingAScrAcceptedCalls=mscAtmIfUniCallingAScrAcceptedCalls, mscAtmIfVptUniCalledAScrProvTable=mscAtmIfVptUniCalledAScrProvTable, mscAtmIfUniIlmiUsageState=mscAtmIfUniIlmiUsageState, mscAtmIfUniAddrPnniInfoComponentName=mscAtmIfUniAddrPnniInfoComponentName, mscAtmIfVptUniComponentName=mscAtmIfVptUniComponentName, atmUniGroupCA=atmUniGroupCA, mscAtmIfVptUniCalledAScrStatTable=mscAtmIfVptUniCalledAScrStatTable, atmUniCapabilities=atmUniCapabilities, mscAtmIfVptUniSigStorageType=mscAtmIfVptUniSigStorageType, mscAtmIfVptUniSigRowStatusTable=mscAtmIfVptUniSigRowStatusTable, mscAtmIfUniSigOperTable=mscAtmIfUniSigOperTable, mscAtmIfUniSigVcdAtmServiceCategory=mscAtmIfUniSigVcdAtmServiceCategory, mscAtmIfVptUniAddrPnniInfoProvEntry=mscAtmIfVptUniAddrPnniInfoProvEntry, mscAtmIfVptUniSigAddressConversion=mscAtmIfVptUniSigAddressConversion, mscAtmIfUniSigVcdProvEntry=mscAtmIfUniSigVcdProvEntry, mscAtmIfUniIlmiVci=mscAtmIfUniIlmiVci, mscAtmIfVptUniLoopPrevention=mscAtmIfVptUniLoopPrevention, mscAtmIfVptUniCallingAScrStatEntry=mscAtmIfVptUniCallingAScrStatEntry, mscAtmIfUniCallingAScrStatEntry=mscAtmIfUniCallingAScrStatEntry, mscAtmIfUniIlmiEsiToRegisterRowStatus=mscAtmIfUniIlmiEsiToRegisterRowStatus, mscAtmIfVptUniSigProvTable=mscAtmIfVptUniSigProvTable, mscAtmIfVptUniSoftPvpAndPvcRetryPeriod=mscAtmIfVptUniSoftPvpAndPvcRetryPeriod, mscAtmIfUniAccountConnectionType=mscAtmIfUniAccountConnectionType, mscAtmIfUniSigLastTxCauseCode=mscAtmIfUniSigLastTxCauseCode, mscAtmIfUniSide=mscAtmIfUniSide, mscAtmIfUniAddrTermSP=mscAtmIfUniAddrTermSP, mscAtmIfVptUniSigVcdAtmServiceCategory=mscAtmIfVptUniSigVcdAtmServiceCategory, mscAtmIfUniCallingAScrRowStatusTable=mscAtmIfUniCallingAScrRowStatusTable, mscAtmIfUniCalledAScrAddrAddressIndex=mscAtmIfUniCalledAScrAddrAddressIndex, mscAtmIfVptUniSoftPvcRetryPeriod=mscAtmIfVptUniSoftPvcRetryPeriod, mscAtmIfUniAddrPnniInfoIndex=mscAtmIfUniAddrPnniInfoIndex, mscAtmIfVptUniSigCurrentConnections=mscAtmIfVptUniSigCurrentConnections, mscAtmIfVptUniAddrTermSPIndex=mscAtmIfVptUniAddrTermSPIndex, mscAtmIfUniIlmiRxBadPdusDiscarded=mscAtmIfUniIlmiRxBadPdusDiscarded, mscAtmIfVptUniSigPeakConnections=mscAtmIfVptUniSigPeakConnections, mscAtmIfVptUniAccountCollection=mscAtmIfVptUniAccountCollection, mscAtmIfVptUniSigVcdTrafficDescType=mscAtmIfVptUniSigVcdTrafficDescType, mscAtmIfUniSigVcdUsageParameterControl=mscAtmIfUniSigVcdUsageParameterControl, mscAtmIfVptUniIndex=mscAtmIfVptUniIndex, mscAtmIfVptUniCallingAScrAddrStorageType=mscAtmIfVptUniCallingAScrAddrStorageType, mscAtmIfVptUniSigProvEntry=mscAtmIfVptUniSigProvEntry, mscAtmIfVptUniCallingAScrProvTable=mscAtmIfVptUniCallingAScrProvTable, mscAtmIfVptUniSigOperEntry=mscAtmIfVptUniSigOperEntry, mscAtmIfUniAddrPnniInfoProvTable=mscAtmIfUniAddrPnniInfoProvTable, mscAtmIfUniCallingAScrStatTable=mscAtmIfUniCallingAScrStatTable, mscAtmIfVptUniAcctOptEntry=mscAtmIfVptUniAcctOptEntry, mscAtmIfUniIlmiStatsEntry=mscAtmIfUniIlmiStatsEntry, mscAtmIfVptUniCalledAScrStatEntry=mscAtmIfVptUniCalledAScrStatEntry, mscAtmIfVptUniCalledAScrAddrComponentName=mscAtmIfVptUniCalledAScrAddrComponentName, mscAtmIfUniIlmiRowStatus=mscAtmIfUniIlmiRowStatus, mscAtmIfVptUniSigNewCurrentConnections=mscAtmIfVptUniSigNewCurrentConnections, mscAtmIfVptUniAcctOptTable=mscAtmIfVptUniAcctOptTable, mscAtmIfVptUniSigStateEntry=mscAtmIfVptUniSigStateEntry, mscAtmIfVptUniCalledAScrStorageType=mscAtmIfVptUniCalledAScrStorageType, mscAtmIfVptUniAddrTermSPRowStatus=mscAtmIfVptUniAddrTermSPRowStatus, mscAtmIfUniCalledAScrAddrRowStatusTable=mscAtmIfUniCalledAScrAddrRowStatusTable, mscAtmIfVptUniAddrTermSPComponentName=mscAtmIfVptUniAddrTermSPComponentName, mscAtmIfUniIlmiPrefixToRegisterRowStatus=mscAtmIfUniIlmiPrefixToRegisterRowStatus, mscAtmIfVptUniCallingAScrAdminStatus=mscAtmIfVptUniCallingAScrAdminStatus, mscAtmIfVptUniCalledAScrRowStatusEntry=mscAtmIfVptUniCalledAScrRowStatusEntry, mscAtmIfVptUniSigRowStatusEntry=mscAtmIfVptUniSigRowStatusEntry, mscAtmIfVptUniAddrPnniInfo=mscAtmIfVptUniAddrPnniInfo, mscAtmIfUniSigProvTable=mscAtmIfUniSigProvTable, mscAtmIfUniSigFailedPmpConnections=mscAtmIfUniSigFailedPmpConnections, mscAtmIfUniProvEntry=mscAtmIfUniProvEntry, mscAtmIfUniAddrTermSPStorageType=mscAtmIfUniAddrTermSPStorageType, mscAtmIfVptUniSigVcdUsageParameterControl=mscAtmIfVptUniSigVcdUsageParameterControl, mscAtmIfUniAccountClass=mscAtmIfUniAccountClass, mscAtmIfVptUniSigUsageState=mscAtmIfVptUniSigUsageState, mscAtmIfUniSigOperEntry=mscAtmIfUniSigOperEntry, mscAtmIfVptUniSigLastTxCauseCode=mscAtmIfVptUniSigLastTxCauseCode, mscAtmIfUniSigStatsEntry=mscAtmIfUniSigStatsEntry, mscAtmIfVptUniSigRxPdus=mscAtmIfVptUniSigRxPdus, mscAtmIfUniIlmiTxPdus=mscAtmIfUniIlmiTxPdus, mscAtmIfUniCallingAScrAddrRowStatus=mscAtmIfUniCallingAScrAddrRowStatus, mscAtmIfUniAddrPnniInfoProvEntry=mscAtmIfUniAddrPnniInfoProvEntry, mscAtmIfUniCalledAScrUnmatchedCalls=mscAtmIfUniCalledAScrUnmatchedCalls, mscAtmIfUniIlmiStateEntry=mscAtmIfUniIlmiStateEntry, mscAtmIfUniSigFailedConnections=mscAtmIfUniSigFailedConnections, mscAtmIfVptUniAddrPnniInfoScope=mscAtmIfVptUniAddrPnniInfoScope, mscAtmIfUniIlmi=mscAtmIfUniIlmi, mscAtmIfUniAddrRowStatusTable=mscAtmIfUniAddrRowStatusTable, mscAtmIfUniAcctOptEntry=mscAtmIfUniAcctOptEntry, mscAtmIfUniSigVcdTrafficDescType=mscAtmIfUniSigVcdTrafficDescType, mscAtmIfUniAddrTermSPComponentName=mscAtmIfUniAddrTermSPComponentName, mscAtmIfUniCalledAScrRowStatus=mscAtmIfUniCalledAScrRowStatus, mscAtmIfVptUniSigVcdQosClass=mscAtmIfVptUniSigVcdQosClass, mscAtmIfVptUniCalledAScrAddrRowStatusTable=mscAtmIfVptUniCalledAScrAddrRowStatusTable, mscAtmIfVptUniCalledAScrAddrStorageType=mscAtmIfVptUniCalledAScrAddrStorageType, mscAtmIfUniCalledAScrProvTable=mscAtmIfUniCalledAScrProvTable, mscAtmIfUniSigVci=mscAtmIfUniSigVci, mscAtmIfVptUniCallingAScrRowStatusEntry=mscAtmIfVptUniCallingAScrRowStatusEntry, mscAtmIfUniIlmiEsiToRegisterTable=mscAtmIfUniIlmiEsiToRegisterTable, mscAtmIfVptUniSigCurrentPmpConnections=mscAtmIfVptUniSigCurrentPmpConnections, mscAtmIfVptUniSigStatsEntry=mscAtmIfVptUniSigStatsEntry, mscAtmIfVptUniCallingAScrIndex=mscAtmIfVptUniCallingAScrIndex, mscAtmIfVptUniAddrPnniInfoRowStatus=mscAtmIfVptUniAddrPnniInfoRowStatus, mscAtmIfUniAddrPnniInfoReachability=mscAtmIfUniAddrPnniInfoReachability, mscAtmIfUniCallingAScr=mscAtmIfUniCallingAScr, mscAtmIfVptUniAddrReachability=mscAtmIfVptUniAddrReachability, mscAtmIfVptUniSigVcdTdpEntry=mscAtmIfVptUniSigVcdTdpEntry, mscAtmIfVptUniSigAdminState=mscAtmIfVptUniSigAdminState, mscAtmIfUniSigLastRxCauseCode=mscAtmIfUniSigLastRxCauseCode, mscAtmIfUniAddrOperEntry=mscAtmIfUniAddrOperEntry, mscAtmIfUniSigRowStatus=mscAtmIfUniSigRowStatus, mscAtmIfVptUniSigTxPdus=mscAtmIfVptUniSigTxPdus, mscAtmIfUniCallingAScrAddrComponentName=mscAtmIfUniCallingAScrAddrComponentName, mscAtmIfVptUniAddr=mscAtmIfVptUniAddr, mscAtmIfUniServiceExchange=mscAtmIfUniServiceExchange, mscAtmIfUniCalledAScrAddrStorageType=mscAtmIfUniCalledAScrAddrStorageType, mscAtmIfUniCallingAScrProvTable=mscAtmIfUniCallingAScrProvTable, mscAtmIfVptUniAddrPnniInfoRowStatusTable=mscAtmIfVptUniAddrPnniInfoRowStatusTable, mscAtmIfVptUniRowStatus=mscAtmIfVptUniRowStatus, mscAtmIfUniCalledAScrAddrAddressActionIndex=mscAtmIfUniCalledAScrAddrAddressActionIndex, mscAtmIfUniSigVcdTrafficShaping=mscAtmIfUniSigVcdTrafficShaping, mscAtmIfUniIlmiPrefixToRegisterEntry=mscAtmIfUniIlmiPrefixToRegisterEntry, mscAtmIfUniCallingAScrRejectedCalls=mscAtmIfUniCallingAScrRejectedCalls, mscAtmIfVptUniSoftPvpAndPvcHoldOffTime=mscAtmIfVptUniSoftPvpAndPvcHoldOffTime, mscAtmIfVptUniCalledAScrAcceptedCalls=mscAtmIfVptUniCalledAScrAcceptedCalls, mscAtmIfVptUniCallingAScrDefaultInsertionAddress=mscAtmIfVptUniCallingAScrDefaultInsertionAddress, mscAtmIfVptUniAddrScope=mscAtmIfVptUniAddrScope, mscAtmIfUniAddrPnniInfoRowStatusTable=mscAtmIfUniAddrPnniInfoRowStatusTable)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-AtmUniMIB", mscAtmIfVptUniAddrAddressIndex=mscAtmIfVptUniAddrAddressIndex, mscAtmIfVptUniVersion=mscAtmIfVptUniVersion, mscAtmIfUniSigRowStatusTable=mscAtmIfUniSigRowStatusTable, mscAtmIfUniAddrPnniInfoRowStatus=mscAtmIfUniAddrPnniInfoRowStatus, mscAtmIfUniIlmiProvEntry=mscAtmIfUniIlmiProvEntry, mscAtmIfUniCallingAScrAddrRowStatusTable=mscAtmIfUniCallingAScrAddrRowStatusTable, mscAtmIfUniIlmiEsiToRegisterEntry=mscAtmIfUniIlmiEsiToRegisterEntry, mscAtmIfUniCalledAScrRejectedCalls=mscAtmIfUniCalledAScrRejectedCalls, mscAtmIfUniCallingAScrDefaultInsertionAddress=mscAtmIfUniCallingAScrDefaultInsertionAddress, mscAtmIfUniMacAddress=mscAtmIfUniMacAddress, mscAtmIfUniCallingAScrIndex=mscAtmIfUniCallingAScrIndex, mscAtmIfVptUniSigVcdUnshapedTransmitQueueing=mscAtmIfVptUniSigVcdUnshapedTransmitQueueing, mscAtmIfUniSigSuccessfulConnections=mscAtmIfUniSigSuccessfulConnections, mscAtmIfUniSigRxPdus=mscAtmIfUniSigRxPdus, mscAtmIfVptUniAddrTermSPRowStatusTable=mscAtmIfVptUniAddrTermSPRowStatusTable, mscAtmIfUniIlmiOperationalState=mscAtmIfUniIlmiOperationalState, mscAtmIfUniRowStatus=mscAtmIfUniRowStatus, mscAtmIfUniAddrTermSPRowStatusTable=mscAtmIfUniAddrTermSPRowStatusTable, mscAtmIfUniSoftPvcRetryPeriod=mscAtmIfUniSoftPvcRetryPeriod, mscAtmIfUniSigVcdUnshapedTransmitQueueing=mscAtmIfUniSigVcdUnshapedTransmitQueueing, mscAtmIfVptUniSide=mscAtmIfVptUniSide, atmUniGroup=atmUniGroup, mscAtmIfUniCalledAScrRowStatusTable=mscAtmIfUniCalledAScrRowStatusTable, mscAtmIfUniOperTable=mscAtmIfUniOperTable, mscAtmIfUniSigPeakConnections=mscAtmIfUniSigPeakConnections, mscAtmIfVptUniAddrTermSPStorageType=mscAtmIfVptUniAddrTermSPStorageType, mscAtmIfUniAddrAddressTypeIndex=mscAtmIfUniAddrAddressTypeIndex, mscAtmIfVptUniCallingAScrUnmatchedCalls=mscAtmIfVptUniCallingAScrUnmatchedCalls, mscAtmIfUniAddrAddressIndex=mscAtmIfUniAddrAddressIndex, mscAtmIfVptUniRowStatusEntry=mscAtmIfVptUniRowStatusEntry, mscAtmIfVptUniVProvEntry=mscAtmIfVptUniVProvEntry, mscAtmIfUniIndex=mscAtmIfUniIndex, mscAtmIfUniAddrRowStatus=mscAtmIfUniAddrRowStatus, mscAtmIfUniCallingAScrAddrAddressActionIndex=mscAtmIfUniCallingAScrAddrAddressActionIndex, mscAtmIfUniIlmiStatsTable=mscAtmIfUniIlmiStatsTable, mscAtmIfVptUniSigVcdComponentName=mscAtmIfVptUniSigVcdComponentName, mscAtmIfVptUniAccountConnectionType=mscAtmIfVptUniAccountConnectionType, mscAtmIfUniCalledAScrAdminStatus=mscAtmIfUniCalledAScrAdminStatus, mscAtmIfVptUniCalledAScrRowStatusTable=mscAtmIfVptUniCalledAScrRowStatusTable, mscAtmIfUniAddrReachability=mscAtmIfUniAddrReachability, mscAtmIfVptUniAddrPnniInfoComponentName=mscAtmIfVptUniAddrPnniInfoComponentName, mscAtmIfUniIlmiPrefixToRegisterValue=mscAtmIfUniIlmiPrefixToRegisterValue, mscAtmIfUniSigTxPdus=mscAtmIfUniSigTxPdus, mscAtmIfVptUniSigPeakPmpConnections=mscAtmIfVptUniSigPeakPmpConnections, mscAtmIfVptUniAddrRowStatusEntry=mscAtmIfVptUniAddrRowStatusEntry, mscAtmIfUniAddrPnniInfoStorageType=mscAtmIfUniAddrPnniInfoStorageType, mscAtmIfVptUniCallingAScrStatTable=mscAtmIfVptUniCallingAScrStatTable, mscAtmIfVptUniAddrOperEntry=mscAtmIfVptUniAddrOperEntry, mscAtmIfUniIlmiOperatingMode=mscAtmIfUniIlmiOperatingMode, mscAtmIfUniOperEntry=mscAtmIfUniOperEntry, mscAtmIfUniCallingAScrProvEntry=mscAtmIfUniCallingAScrProvEntry, mscAtmIfVptUniSig=mscAtmIfVptUniSig, mscAtmIfUniSigVcdProvTable=mscAtmIfUniSigVcdProvTable, mscAtmIfVptUniAddrPnniInfoRowStatusEntry=mscAtmIfVptUniAddrPnniInfoRowStatusEntry, mscAtmIfUniProvTable=mscAtmIfUniProvTable, mscAtmIfUniSigVcdStorageType=mscAtmIfUniSigVcdStorageType, mscAtmIfVptUniCalledAScrUnmatchedCalls=mscAtmIfVptUniCalledAScrUnmatchedCalls, mscAtmIfUniSigStatsTable=mscAtmIfUniSigStatsTable, atmUniCapabilitiesCA02=atmUniCapabilitiesCA02, mscAtmIfVptUniServiceExchange=mscAtmIfVptUniServiceExchange, mscAtmIfUniCallingAScrAdminStatus=mscAtmIfUniCallingAScrAdminStatus, mscAtmIfUniCalledAScrAddrRowStatus=mscAtmIfUniCalledAScrAddrRowStatus, mscAtmIfUniSigCurrentPmpConnections=mscAtmIfUniSigCurrentPmpConnections, mscAtmIfVptUniAddrTermSP=mscAtmIfVptUniAddrTermSP, mscAtmIfVptUniSigVcdRowStatusEntry=mscAtmIfVptUniSigVcdRowStatusEntry, mscAtmIfVptUniAddrComponentName=mscAtmIfVptUniAddrComponentName, mscAtmIfUniSig=mscAtmIfUniSig, mscAtmIfUniIlmiComponentName=mscAtmIfUniIlmiComponentName, mscAtmIfVptUni=mscAtmIfVptUni, mscAtmIfVptUniSigRowStatus=mscAtmIfVptUniSigRowStatus, mscAtmIfVptUniCalledAScrAddr=mscAtmIfVptUniCalledAScrAddr, mscAtmIfVptUniCallingAScrAddrRowStatus=mscAtmIfVptUniCallingAScrAddrRowStatus, mscAtmIfVptUniRowStatusTable=mscAtmIfVptUniRowStatusTable, mscAtmIfUniIlmiStateTable=mscAtmIfUniIlmiStateTable, mscAtmIfUniCallingAScrAddrAddressIndex=mscAtmIfUniCallingAScrAddrAddressIndex, mscAtmIfVptUniCallingAScr=mscAtmIfVptUniCallingAScr, mscAtmIfUniCallingAScrUnmatchedCalls=mscAtmIfUniCallingAScrUnmatchedCalls, mscAtmIfUniAddrStorageType=mscAtmIfUniAddrStorageType, mscAtmIfUniIlmiAdminState=mscAtmIfUniIlmiAdminState, mscAtmIfVptUniAccountClass=mscAtmIfVptUniAccountClass, mscAtmIfUniSigVcdTdpEntry=mscAtmIfUniSigVcdTdpEntry, mscAtmIfUniSigSuccessfulPmpConnections=mscAtmIfUniSigSuccessfulPmpConnections, mscAtmIfVptUniAddrOperTable=mscAtmIfVptUniAddrOperTable, mscAtmIfVptUniCallingAScrComponentName=mscAtmIfVptUniCallingAScrComponentName, mscAtmIfUniIlmiIndex=mscAtmIfUniIlmiIndex, mscAtmIfUniSigVcdRowStatusTable=mscAtmIfUniSigVcdRowStatusTable, mscAtmIfVptUniCallingAScrAddrRowStatusEntry=mscAtmIfVptUniCallingAScrAddrRowStatusEntry, mscAtmIfVptUniProvTable=mscAtmIfVptUniProvTable, mscAtmIfUniAccountCollection=mscAtmIfUniAccountCollection, mscAtmIfVptUniCalledAScrAddrAddressIndex=mscAtmIfVptUniCalledAScrAddrAddressIndex, mscAtmIfUniLoopPrevention=mscAtmIfUniLoopPrevention, mscAtmIfVptUniProvEntry=mscAtmIfVptUniProvEntry, mscAtmIfUniRowStatusEntry=mscAtmIfUniRowStatusEntry, mscAtmIfVptUniCallingAScrRowStatus=mscAtmIfVptUniCallingAScrRowStatus, mscAtmIfVptUniSigLastRxCauseCode=mscAtmIfVptUniSigLastRxCauseCode, mscAtmIfUniAddrTermSPRowStatus=mscAtmIfUniAddrTermSPRowStatus, mscAtmIfUniAddr=mscAtmIfUniAddr, mscAtmIfVptUniSigOperationalState=mscAtmIfVptUniSigOperationalState)
