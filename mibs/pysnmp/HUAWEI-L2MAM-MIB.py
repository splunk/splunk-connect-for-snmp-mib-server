#
# PySNMP MIB module HUAWEI-L2MAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-L2MAM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:33:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
entPhysicalIndex, PhysicalIndex, entPhysicalName = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex", "PhysicalIndex", "entPhysicalName")
hwBaseTrapProbableCause, hwBaseTrapEventType, hwBaseTrapSeverity = mibBuilder.importSymbols("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause", "hwBaseTrapEventType", "hwBaseTrapSeverity")
hwL2IfPortName, = mibBuilder.importSymbols("HUAWEI-L2IF-MIB", "hwL2IfPortName")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
hwVplsVsiName, = mibBuilder.importSymbols("HUAWEI-VPLS-EXT-MIB", "hwVplsVsiName")
ifDescr, InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "ifDescr", "InterfaceIndex", "InterfaceIndexOrZero")
EnableValue, = mibBuilder.importSymbols("NQA-MIB", "EnableValue")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
VlanIdOrNone, VlanId = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIdOrNone", "VlanId")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
NotificationType, IpAddress, Counter32, MibIdentifier, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter64, TimeTicks, iso, ModuleIdentity, ObjectIdentity, Integer32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "IpAddress", "Counter32", "MibIdentifier", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter64", "TimeTicks", "iso", "ModuleIdentity", "ObjectIdentity", "Integer32", "Bits")
TextualConvention, RowStatus, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "MacAddress", "DisplayString")
hwL2Mgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42))
hwL2MAM = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2))
hwL2MAM.setRevisions(('2015-08-25 00:00', '2015-08-06 00:00', '2015-07-23 00:00', '2014-12-19 23:43', '2014-07-25 09:45', '2014-06-16 09:45', '2014-06-06 09:45', '2014-01-21 00:00', '2014-05-10 00:00', '2014-03-13 00:00', '2013-09-07 00:00', '2013-05-24 00:00', '2013-05-14 00:00', '2004-06-08 00:00',))
if mibBuilder.loadTexts: hwL2MAM.setLastUpdated('201508250000Z')
if mibBuilder.loadTexts: hwL2MAM.setOrganization('Huawei Technologies Co.,Ltd.')
hwL2MAMObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1))
class VlanIndex(TextualConvention, Unsigned32):
    status = 'current'

hwL2MaxMacLimit = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2MaxMacLimit.setStatus('current')
hwdbCfgFdbTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 2), )
if mibBuilder.loadTexts: hwdbCfgFdbTable.setStatus('current')
hwdbCfgFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 2, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwCfgFdbMac"), (0, "HUAWEI-L2MAM-MIB", "hwCfgFdbVlanId"), (0, "HUAWEI-L2MAM-MIB", "hwCfgFdbVsiName"))
if mibBuilder.loadTexts: hwdbCfgFdbEntry.setStatus('current')
hwCfgFdbMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwCfgFdbMac.setStatus('current')
hwCfgFdbVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 2, 1, 2), VlanIndex().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: hwCfgFdbVlanId.setStatus('current')
hwCfgFdbVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hwCfgFdbVsiName.setStatus('current')
hwCfgFdbPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 2, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgFdbPort.setStatus('current')
hwCfgFdbType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("static", 2), ("blackhole", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgFdbType.setStatus('current')
hwCfgFdbRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgFdbRowstatus.setStatus('current')
hwCfgFdbAtmPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 2, 1, 7), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgFdbAtmPort.setStatus('current')
hwCfgFdbVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 255), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgFdbVpi.setStatus('current')
hwCfgFdbVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 2047), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgFdbVci.setStatus('current')
hwCfgFdbCeDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noCeDefault", 0), ("ceDefault", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCfgFdbCeDefault.setStatus('current')
hwdbDynFdbTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 3), )
if mibBuilder.loadTexts: hwdbDynFdbTable.setStatus('current')
hwdbDynFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 3, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwDynFdbMac"), (0, "HUAWEI-L2MAM-MIB", "hwDynFdbVlanId"), (0, "HUAWEI-L2MAM-MIB", "hwDynFdbVsiName"))
if mibBuilder.loadTexts: hwdbDynFdbEntry.setStatus('current')
hwDynFdbMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwDynFdbMac.setStatus('current')
hwDynFdbVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 3, 1, 2), VlanIndex().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: hwDynFdbVlanId.setStatus('current')
hwDynFdbVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hwDynFdbVsiName.setStatus('current')
hwDynFdbPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 3, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDynFdbPort.setStatus('current')
hwDynFdbAtmPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 3, 1, 5), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDynFdbAtmPort.setStatus('current')
hwDynFdbVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 255), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDynFdbVpi.setStatus('current')
hwDynFdbVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 2047), ValueRangeConstraint(65535, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDynFdbVci.setStatus('current')
hwDynFdbRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 3, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDynFdbRowstatus.setStatus('current')
hwDynSecurityFdbToStaticEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 3, 1, 9), EnableValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDynSecurityFdbToStaticEnable.setStatus('current')
hwMacLimitTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 4), )
if mibBuilder.loadTexts: hwMacLimitTable.setStatus('current')
hwMacLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 4, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwMacLimitPort"), (0, "HUAWEI-L2MAM-MIB", "hwMacLimitVlanId"), (0, "HUAWEI-L2MAM-MIB", "hwMacLimitVsiName"))
if mibBuilder.loadTexts: hwMacLimitEntry.setStatus('current')
hwMacLimitPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 4, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: hwMacLimitPort.setStatus('current')
hwMacLimitVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMacLimitVlanId.setStatus('current')
hwMacLimitVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMacLimitVsiName.setStatus('current')
hwMacLimitMaxMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 131072))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacLimitMaxMac.setStatus('current')
hwMacLimitMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacLimitMaxRate.setStatus('current')
hwMacLimitAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("discard", 1), ("forward", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacLimitAction.setStatus('current')
hwMacLimitAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacLimitAlarm.setStatus('current')
hwMacLimitRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 4, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacLimitRowstatus.setStatus('current')
hwMacAddressLearn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacAddressLearn.setStatus('current')
hwMacDynAddressLearnNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 131072))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacDynAddressLearnNum.setStatus('current')
hwMacSecureAddressLearnNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 131072))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacSecureAddressLearnNum.setStatus('current')
hwMacUsageTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 5), )
if mibBuilder.loadTexts: hwMacUsageTable.setStatus('current')
hwMacUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 5, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hwMacUsageEntry.setStatus('current')
hwMacEntityUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacEntityUsage.setStatus('current')
hwMacEntityUsageThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacEntityUsageThreshold.setStatus('current')
hwMacHopAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 38), )
if mibBuilder.loadTexts: hwMacHopAlarmTable.setStatus('current')
hwMacHopAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 38, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwMacHopVlan"), (0, "HUAWEI-L2MAM-MIB", "hwMacHopVsiName"), (0, "HUAWEI-L2MAM-MIB", "hwMacHopBdID"))
if mibBuilder.loadTexts: hwMacHopAlarmEntry.setStatus('current')
hwMacHopVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 38, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMacHopVlan.setStatus('current')
hwMacHopVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 38, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMacHopVsiName.setStatus('current')
hwMacHopBdID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 38, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32768))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMacHopBdID.setStatus('current')
hwMacHopPortName1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 38, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMacHopPortName1.setStatus('current')
hwMacHopPortName2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 38, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMacHopPortName2.setStatus('current')
hwMacHopPortName3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 38, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMacHopPortName3.setStatus('current')
hwMacHopPortName4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 38, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMacHopPortName4.setStatus('current')
hwMacHopPWInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 38, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 512))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMacHopPWInfo.setStatus('current')
hwdbCfg3tupleFdbTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 6), )
if mibBuilder.loadTexts: hwdbCfg3tupleFdbTable.setStatus('current')
hwdbCfg3tupleFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 6, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwdbCfg3tupleFdbMac"), (0, "HUAWEI-L2MAM-MIB", "hwdbCfg3tupleFdbVlanId"), (0, "HUAWEI-L2MAM-MIB", "hwdbCfg3tupleFdbInPort"))
if mibBuilder.loadTexts: hwdbCfg3tupleFdbEntry.setStatus('current')
hwdbCfg3tupleFdbMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 6, 1, 1), MacAddress())
if mibBuilder.loadTexts: hwdbCfg3tupleFdbMac.setStatus('current')
hwdbCfg3tupleFdbVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: hwdbCfg3tupleFdbVlanId.setStatus('current')
hwdbCfg3tupleFdbInPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 6, 1, 3), InterfaceIndex())
if mibBuilder.loadTexts: hwdbCfg3tupleFdbInPort.setStatus('current')
hwdbCfg3tupleFdbOutPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 6, 1, 4), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwdbCfg3tupleFdbOutPort.setStatus('current')
hwdbCfg3tupleFdbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 6, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwdbCfg3tupleFdbRowStatus.setStatus('current')
hwPwMacSpoofingAttackMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 39), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwPwMacSpoofingAttackMacAddr.setStatus('current')
hwBdMacLimitBdId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 40), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBdMacLimitBdId.setStatus('current')
hwBdMacLimitMaxMac = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 41), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwBdMacLimitMaxMac.setStatus('current')
hwL2MacTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7))
hwMacUsageRaisingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 1)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-L2MAM-MIB", "hwMacEntityUsage"), ("HUAWEI-L2MAM-MIB", "hwMacEntityUsageThreshold"))
if mibBuilder.loadTexts: hwMacUsageRaisingThreshold.setStatus('current')
hwMacUsageFallingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 2)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-L2MAM-MIB", "hwMacEntityUsage"), ("HUAWEI-L2MAM-MIB", "hwMacEntityUsageThreshold"))
if mibBuilder.loadTexts: hwMacUsageFallingThreshold.setStatus('current')
hwMacLimitNumRaisingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 3)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("HUAWEI-L2MAM-MIB", "hwMacDynAddressLearnNum"), ("HUAWEI-L2MAM-MIB", "hwMacLimitMaxMac"), ("HUAWEI-L2IF-MIB", "hwL2IfPortName"))
if mibBuilder.loadTexts: hwMacLimitNumRaisingThreshold.setStatus('current')
hwMacLimitNumFallingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 4)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("HUAWEI-L2MAM-MIB", "hwMacDynAddressLearnNum"), ("HUAWEI-L2MAM-MIB", "hwMacLimitMaxMac"), ("HUAWEI-L2IF-MIB", "hwL2IfPortName"))
if mibBuilder.loadTexts: hwMacLimitNumFallingThreshold.setStatus('current')
hwUntargetMacNumAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 5)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("HUAWEI-L2MAM-MIB", "hwUntargetMacNum"))
if mibBuilder.loadTexts: hwUntargetMacNumAlarm.setStatus('current')
hwPortSecRcvInsecurePktAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 6)).setObjects(("IF-MIB", "ifDescr"), ("HUAWEI-L2MAM-MIB", "hwPortSecurityProtectAction"))
if mibBuilder.loadTexts: hwPortSecRcvInsecurePktAlarm.setStatus('current')
hwPwMacLimitNumRaisingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 7)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("HUAWEI-L2MAM-MIB", "hwPwMacDynAddressLearnNum"), ("HUAWEI-L2MAM-MIB", "hwPwMacLimitMaxMac"))
if mibBuilder.loadTexts: hwPwMacLimitNumRaisingThreshold.setStatus('current')
hwPwMacLimitNumFallingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 8)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("HUAWEI-L2MAM-MIB", "hwPwMacDynAddressLearnNum"), ("HUAWEI-L2MAM-MIB", "hwPwMacLimitMaxMac"))
if mibBuilder.loadTexts: hwPwMacLimitNumFallingThreshold.setStatus('current')
hwPortStickyReachMaxAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 9))
if mibBuilder.loadTexts: hwPortStickyReachMaxAlarm.setStatus('current')
hwRecIllegalMacPktAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 10))
if mibBuilder.loadTexts: hwRecIllegalMacPktAlarm.setStatus('current')
hwMacLimitOverThresholdAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 11)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("HUAWEI-L2MAM-MIB", "hwMacDynAddressLearnNum"), ("HUAWEI-L2MAM-MIB", "hwMacLimitMaxMac"), ("HUAWEI-L2IF-MIB", "hwL2IfPortName"), ("HUAWEI-L2MAM-MIB", "hwMacLimitVlanId"), ("HUAWEI-L2MAM-MIB", "hwMacLimitVsiName"))
if mibBuilder.loadTexts: hwMacLimitOverThresholdAlarm.setStatus('current')
hwMacFlappingAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 12)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("HUAWEI-L2MAM-MIB", "hwMacflappingMac"), ("HUAWEI-L2MAM-MIB", "hwMacFlappingVlan"), ("HUAWEI-L2IF-MIB", "hwL2IfPortName"), ("HUAWEI-L2IF-MIB", "hwL2IfPortName"), ("ENTITY-MIB", "entPhysicalName"))
if mibBuilder.loadTexts: hwMacFlappingAlarm.setStatus('current')
hwSlotMacLimitNumRaisingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 13)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("HUAWEI-L2MAM-MIB", "hwMacDynAddressLearnNum"), ("HUAWEI-L2MAM-MIB", "hwMacLimitMaxMac"), ("ENTITY-MIB", "entPhysicalName"), ("ENTITY-MIB", "entPhysicalName"))
if mibBuilder.loadTexts: hwSlotMacLimitNumRaisingThreshold.setStatus('current')
hwSlotMacLimitNumFallingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 14)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("HUAWEI-L2MAM-MIB", "hwMacDynAddressLearnNum"), ("HUAWEI-L2MAM-MIB", "hwMacLimitMaxMac"), ("ENTITY-MIB", "entPhysicalName"), ("ENTITY-MIB", "entPhysicalName"))
if mibBuilder.loadTexts: hwSlotMacLimitNumFallingThreshold.setStatus('current')
hwL2ProtocolTunnelDropThresholdRaising = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 15)).setObjects(("HUAWEI-L2MAM-MIB", "hwL2ProtocolTunnelTrapPortName"), ("HUAWEI-L2MAM-MIB", "hwL2ProtocolTunnelTrapProtocolName"), ("HUAWEI-L2MAM-MIB", "hwL2ProtocolTunnelTrapDropThreshold"))
if mibBuilder.loadTexts: hwL2ProtocolTunnelDropThresholdRaising.setStatus('current')
hwL2ProtocolTunnelDropThresholdFalling = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 16)).setObjects(("HUAWEI-L2MAM-MIB", "hwL2ProtocolTunnelTrapPortName"), ("HUAWEI-L2MAM-MIB", "hwL2ProtocolTunnelTrapProtocolName"), ("HUAWEI-L2MAM-MIB", "hwL2ProtocolTunnelTrapDropThreshold"))
if mibBuilder.loadTexts: hwL2ProtocolTunnelDropThresholdFalling.setStatus('current')
hwVsiMacLimitNumRaisingThresholdAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 17)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("HUAWEI-L2MAM-MIB", "hwMacLimitVsiName"))
if mibBuilder.loadTexts: hwVsiMacLimitNumRaisingThresholdAlarm.setStatus('current')
hwVsiMacLimitNumRaisingThresholdAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 18)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("HUAWEI-L2MAM-MIB", "hwMacLimitVsiName"))
if mibBuilder.loadTexts: hwVsiMacLimitNumRaisingThresholdAlarmClear.setStatus('current')
hwMacLimitOverThresholdAlarmResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 19)).setObjects(("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapSeverity"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapProbableCause"), ("HUAWEI-BASE-TRAP-MIB", "hwBaseTrapEventType"), ("HUAWEI-L2MAM-MIB", "hwMacDynAddressLearnNum"), ("HUAWEI-L2MAM-MIB", "hwMacLimitMaxMac"), ("HUAWEI-L2IF-MIB", "hwL2IfPortName"), ("HUAWEI-L2MAM-MIB", "hwMacLimitVlanId"), ("HUAWEI-L2MAM-MIB", "hwMacLimitVsiName"))
if mibBuilder.loadTexts: hwMacLimitOverThresholdAlarmResume.setStatus('current')
hwSlotMacNumRaisingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 20)).setObjects(("HUAWEI-L2MAM-MIB", "hwMacSlotStatistics"), ("HUAWEI-L2MAM-MIB", "hwMacSlotStatisticsSpecify"))
if mibBuilder.loadTexts: hwSlotMacNumRaisingThreshold.setStatus('current')
hwSlotMacNumFallingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 21)).setObjects(("HUAWEI-L2MAM-MIB", "hwMacSlotStatistics"), ("HUAWEI-L2MAM-MIB", "hwMacSlotStatisticsSpecify"))
if mibBuilder.loadTexts: hwSlotMacNumFallingThreshold.setStatus('current')
hwMacLimitRuleNumRaisingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 22)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-L2MAM-MIB", "hwMacRuleDynAddressLearnNum"), ("HUAWEI-L2MAM-MIB", "hwMacLimitRuleMaxMac"))
if mibBuilder.loadTexts: hwMacLimitRuleNumRaisingThreshold.setStatus('current')
hwMacLimitRuleNumFallingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 23)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-L2MAM-MIB", "hwMacRuleDynAddressLearnNum"), ("HUAWEI-L2MAM-MIB", "hwMacLimitRuleMaxMac"))
if mibBuilder.loadTexts: hwMacLimitRuleNumFallingThreshold.setStatus('current')
hwVplsOverGRENotSupportForwardRising = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 24)).setObjects(("HUAWEI-L2MAM-MIB", "hwVplsOverGreVsiName"), ("HUAWEI-L2MAM-MIB", "hwRemoteIp"))
if mibBuilder.loadTexts: hwVplsOverGRENotSupportForwardRising.setStatus('current')
hwVplsOverGRENotSupportForwardRisingResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 25)).setObjects(("HUAWEI-L2MAM-MIB", "hwVplsOverGreVsiName"), ("HUAWEI-L2MAM-MIB", "hwRemoteIp"))
if mibBuilder.loadTexts: hwVplsOverGRENotSupportForwardRisingResume.setStatus('current')
hwIfInputUnucFlowRisingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 28)).setObjects(("HUAWEI-L2MAM-MIB", "hwUNUCPortName"), ("HUAWEI-L2MAM-MIB", "hwUNUCPortAlarmThreshold"), ("HUAWEI-L2MAM-MIB", "hwUNUCPortRealFlow"))
if mibBuilder.loadTexts: hwIfInputUnucFlowRisingThreshold.setStatus('current')
hwIfInputUnucFlowFallingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 29)).setObjects(("HUAWEI-L2MAM-MIB", "hwUNUCPortName"), ("HUAWEI-L2MAM-MIB", "hwUNUCPortAlarmThreshold"), ("HUAWEI-L2MAM-MIB", "hwUNUCPortRealFlow"))
if mibBuilder.loadTexts: hwIfInputUnucFlowFallingThreshold.setStatus('current')
hwMacHopAlarmRisingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 30)).setObjects(("HUAWEI-L2MAM-MIB", "hwMacHopVlan"), ("HUAWEI-L2MAM-MIB", "hwMacHopVsiName"), ("HUAWEI-L2MAM-MIB", "hwMacHopBdID"), ("HUAWEI-L2MAM-MIB", "hwMacHopPortName1"), ("HUAWEI-L2MAM-MIB", "hwMacHopPortName2"), ("HUAWEI-L2MAM-MIB", "hwMacHopPortName3"), ("HUAWEI-L2MAM-MIB", "hwMacHopPortName4"), ("HUAWEI-L2MAM-MIB", "hwMacHopPWInfo"))
if mibBuilder.loadTexts: hwMacHopAlarmRisingThreshold.setStatus('current')
hwMacHopAlarmFallingThreshold = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 31)).setObjects(("HUAWEI-L2MAM-MIB", "hwMacHopVlan"), ("HUAWEI-L2MAM-MIB", "hwMacHopVsiName"), ("HUAWEI-L2MAM-MIB", "hwMacHopBdID"))
if mibBuilder.loadTexts: hwMacHopAlarmFallingThreshold.setStatus('current')
hwPstBroadcastLostAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 32)).setObjects(("ENTITY-MIB", "entPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"))
if mibBuilder.loadTexts: hwPstBroadcastLostAlarm.setStatus('current')
hwPstBroadcastLostResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 33)).setObjects(("ENTITY-MIB", "entPhysicalIndex"), ("ENTITY-MIB", "entPhysicalName"))
if mibBuilder.loadTexts: hwPstBroadcastLostResume.setStatus('current')
hwPwMacSpoofingAttackAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 34)).setObjects(("HUAWEI-VPLS-EXT-MIB", "hwVplsVsiName"), ("ENTITY-MIB", "entPhysicalName"), ("HUAWEI-L2MAM-MIB", "hwPwMacSpoofingAttackMacAddr"))
if mibBuilder.loadTexts: hwPwMacSpoofingAttackAlarm.setStatus('current')
hwPwMacSpoofingAttackAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 35)).setObjects(("HUAWEI-VPLS-EXT-MIB", "hwVplsVsiName"), ("ENTITY-MIB", "entPhysicalName"))
if mibBuilder.loadTexts: hwPwMacSpoofingAttackAlarmClear.setStatus('current')
hwBdMacLimitOverThresholdAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 36)).setObjects(("HUAWEI-L2MAM-MIB", "hwBdMacLimitBdId"), ("HUAWEI-L2MAM-MIB", "hwBdMacLimitMaxMac"))
if mibBuilder.loadTexts: hwBdMacLimitOverThresholdAlarm.setStatus('current')
hwBdMacLimitOverThresholdAlarmResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 7, 37)).setObjects(("HUAWEI-L2MAM-MIB", "hwBdMacLimitBdId"), ("HUAWEI-L2MAM-MIB", "hwBdMacLimitMaxMac"))
if mibBuilder.loadTexts: hwBdMacLimitOverThresholdAlarmResume.setStatus('current')
hwUntargetMacNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwUntargetMacNum.setStatus('current')
hwMacAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(10, 1000000), ValueRangeConstraint(0, 0), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacAgingTime.setStatus('current')
hwMacRestrict = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 10), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacRestrict.setStatus('current')
hwPortSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 11), )
if mibBuilder.loadTexts: hwPortSecurityTable.setStatus('current')
hwPortSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 11, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwPortSecurityPort"))
if mibBuilder.loadTexts: hwPortSecurityEntry.setStatus('current')
hwPortSecurityPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 11, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: hwPortSecurityPort.setStatus('current')
hwPortSecurityEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 11, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortSecurityEnabled.setStatus('current')
hwPortSecurityProtectAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("restrict", 1), ("protect", 2), ("shutdown", 3), ("noaction", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortSecurityProtectAction.setStatus('current')
hwPortSecurityAllDynToStaticEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 11, 1, 4), EnableValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortSecurityAllDynToStaticEnable.setStatus('current')
hwPortSecurityAllDynToStickyEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 11, 1, 5), EnableValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortSecurityAllDynToStickyEnable.setStatus('current')
hwPortSecurityMaxMacNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 11, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwPortSecurityMaxMacNum.setStatus('current')
hwMacLimitGlobalRuleTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 12), )
if mibBuilder.loadTexts: hwMacLimitGlobalRuleTable.setStatus('current')
hwMacLimitGlobalRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 12, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwMacLimitGlobalRuleName"))
if mibBuilder.loadTexts: hwMacLimitGlobalRuleEntry.setStatus('current')
hwMacLimitGlobalRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 12, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwMacLimitGlobalRuleName.setStatus('current')
hwMacLimitRuleMaxMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 12, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 131072))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacLimitRuleMaxMac.setStatus('current')
hwMacLimitRuleMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 12, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacLimitRuleMaxRate.setStatus('current')
hwMacLimitRuleAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 12, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("discard", 1), ("forward", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacLimitRuleAction.setStatus('current')
hwMacLimitRuleAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 12, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacLimitRuleAlarm.setStatus('current')
hwMacLimitRuleRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 12, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacLimitRuleRowstatus.setStatus('current')
hwMacRuleDynAddressLearnNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 12, 1, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 131072))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacRuleDynAddressLearnNum.setStatus('current')
hwMacLimitApplyRuleTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 13), )
if mibBuilder.loadTexts: hwMacLimitApplyRuleTable.setStatus('current')
hwMacLimitApplyRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 13, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwMacLimitApplyPort"), (0, "HUAWEI-L2MAM-MIB", "hwMacLimitApplyVlanId"))
if mibBuilder.loadTexts: hwMacLimitApplyRuleEntry.setStatus('current')
hwMacLimitApplyPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 13, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: hwMacLimitApplyPort.setStatus('current')
hwMacLimitApplyVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: hwMacLimitApplyVlanId.setStatus('current')
hwMacLimitApplyRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 13, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacLimitApplyRuleName.setStatus('current')
hwMacLimitApplyRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 13, 1, 51), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwMacLimitApplyRowstatus.setStatus('current')
hwMacGlobalStatistics = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacGlobalStatistics.setStatus('current')
hwMacIfStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 15), )
if mibBuilder.loadTexts: hwMacIfStatisticsTable.setStatus('current')
hwMacIfStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 15, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwMacIfStatisticsIfIndex"))
if mibBuilder.loadTexts: hwMacIfStatisticsEntry.setStatus('current')
hwMacIfStatisticsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 15, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwMacIfStatisticsIfIndex.setStatus('current')
hwMacIfStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacIfStatistics.setStatus('current')
hwMacSlotStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 16), )
if mibBuilder.loadTexts: hwMacSlotStatisticsTable.setStatus('current')
hwMacSlotStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 16, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwMacSlotStatisticsSlotId"))
if mibBuilder.loadTexts: hwMacSlotStatisticsEntry.setStatus('current')
hwMacSlotStatisticsSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: hwMacSlotStatisticsSlotId.setStatus('current')
hwMacSlotStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 16, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacSlotStatistics.setStatus('current')
hwMacSlotStatisticsSpecify = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 16, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacSlotStatisticsSpecify.setStatus('current')
hwMacVlanStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 17), )
if mibBuilder.loadTexts: hwMacVlanStatisticsTable.setStatus('current')
hwMacVlanStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 17, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwMacVlanStatisticsVlanId"))
if mibBuilder.loadTexts: hwMacVlanStatisticsEntry.setStatus('current')
hwMacVlanStatisticsVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 17, 1, 1), VlanId())
if mibBuilder.loadTexts: hwMacVlanStatisticsVlanId.setStatus('current')
hwMacVlanStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 17, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacVlanStatistics.setStatus('current')
hwMacVsiStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 18), )
if mibBuilder.loadTexts: hwMacVsiStatisticsTable.setStatus('current')
hwMacVsiStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 18, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwMacVsiStatisticsVsiName"))
if mibBuilder.loadTexts: hwMacVsiStatisticsEntry.setStatus('current')
hwMacVsiStatisticsVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 18, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hwMacVsiStatisticsVsiName.setStatus('current')
hwMacVsiStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 18, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacVsiStatistics.setStatus('current')
hwPwMacLimitTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 19), )
if mibBuilder.loadTexts: hwPwMacLimitTable.setStatus('current')
hwPwMacLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 19, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwPwMacLimitVsiName"), (0, "HUAWEI-L2MAM-MIB", "hwPwMacLimitPwName"))
if mibBuilder.loadTexts: hwPwMacLimitEntry.setStatus('current')
hwPwMacLimitVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 19, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hwPwMacLimitVsiName.setStatus('current')
hwPwMacLimitPwName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 19, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16)))
if mibBuilder.loadTexts: hwPwMacLimitPwName.setStatus('current')
hwPwMacLimitMaxMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 19, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 131072))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPwMacLimitMaxMac.setStatus('current')
hwPwMacLimitMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 19, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPwMacLimitMaxRate.setStatus('current')
hwPwMacLimitAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 19, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("discard", 1), ("forward", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPwMacLimitAction.setStatus('current')
hwPwMacLimitAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 19, 1, 6), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPwMacLimitAlarm.setStatus('current')
hwPwMacLimitRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 19, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPwMacLimitRowstatus.setStatus('current')
hwPwMacAddressLearn = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 19, 1, 8), EnabledStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPwMacAddressLearn.setStatus('current')
hwPwMacDynAddressLearnNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 19, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 131072))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwPwMacDynAddressLearnNum.setStatus('current')
hwMacSpoofingDefendTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 20), )
if mibBuilder.loadTexts: hwMacSpoofingDefendTable.setStatus('current')
hwMacSpoofingDefendEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 20, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwMacSpoofingDefendPort"))
if mibBuilder.loadTexts: hwMacSpoofingDefendEntry.setStatus('current')
hwMacSpoofingDefendPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 20, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: hwMacSpoofingDefendPort.setStatus('current')
hwMacSpoofingDefendEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 20, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacSpoofingDefendEnabled.setStatus('current')
hwDiscardIllegalMacEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 21), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDiscardIllegalMacEnable.setStatus('current')
hwDiscardIllegalMacAlarm = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 22), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDiscardIllegalMacAlarm.setStatus('current')
hwMacSpoofingDefend = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 23), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMacSpoofingDefend.setStatus('current')
hwL2MacFlappingTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 24))
hwMacflappingMac = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 24, 1), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMacflappingMac.setStatus('current')
hwMacFlappingVlan = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 24, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwMacFlappingVlan.setStatus('current')
hwSlotMacLimitTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 25), )
if mibBuilder.loadTexts: hwSlotMacLimitTable.setStatus('current')
hwSlotMacLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 25, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwSlotMacLimitId"))
if mibBuilder.loadTexts: hwSlotMacLimitEntry.setStatus('current')
hwSlotMacLimitId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 25, 1, 1), Integer32())
if mibBuilder.loadTexts: hwSlotMacLimitId.setStatus('current')
hwSlotMacLimitMaxMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 25, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSlotMacLimitMaxMac.setStatus('current')
hwSlotMacLimitMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 25, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSlotMacLimitMaxRate.setStatus('current')
hwSlotMacLimitAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 25, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("discard", 1), ("forward", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSlotMacLimitAction.setStatus('current')
hwSlotMacLimitAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 25, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSlotMacLimitAlarm.setStatus('current')
hwSlotMacLimitRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 25, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwSlotMacLimitRowstatus.setStatus('current')
hwL2ProtocolTunnelTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 26))
hwL2ProtocolTunnelTrapPortName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 26, 1), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwL2ProtocolTunnelTrapPortName.setStatus('current')
hwL2ProtocolTunnelTrapProtocolName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 26, 2), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwL2ProtocolTunnelTrapProtocolName.setStatus('current')
hwL2ProtocolTunnelTrapDropThreshold = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 26, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwL2ProtocolTunnelTrapDropThreshold.setStatus('current')
hwL2ProtclTnlStdTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 27), )
if mibBuilder.loadTexts: hwL2ProtclTnlStdTable.setStatus('current')
hwL2ProtclTnlStdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 27, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwL2ProtclTnlStdProtclName"))
if mibBuilder.loadTexts: hwL2ProtclTnlStdEntry.setStatus('current')
hwL2ProtclTnlStdProtclName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 27, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwL2ProtclTnlStdProtclName.setStatus('current')
hwL2ProtclTnlStdProtclMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 27, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2ProtclTnlStdProtclMacAddr.setStatus('current')
hwL2ProtclTnlStdEncapType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 27, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ethernetii", 1), ("snap", 2), ("llc", 3), ("others", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2ProtclTnlStdEncapType.setStatus('current')
hwL2ProtclTnlStdProtclType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 27, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2ProtclTnlStdProtclType.setStatus('current')
hwL2ProtclTnlStdGroupMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 27, 1, 5), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2ProtclTnlStdGroupMacAddr.setStatus('current')
hwL2ProtclTnlStdGroupDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 27, 1, 6), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2ProtclTnlStdGroupDefault.setStatus('current')
hwL2ProtclTnlStdPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 27, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2ProtclTnlStdPriority.setStatus('current')
hwL2ProtclTnlCusTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 28), )
if mibBuilder.loadTexts: hwL2ProtclTnlCusTable.setStatus('current')
hwL2ProtclTnlCusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 28, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwL2ProtclTnlCusProtclName"))
if mibBuilder.loadTexts: hwL2ProtclTnlCusEntry.setStatus('current')
hwL2ProtclTnlCusProtclName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 28, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwL2ProtclTnlCusProtclName.setStatus('current')
hwL2ProtclTnlCusProtclMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 28, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2ProtclTnlCusProtclMacAddr.setStatus('current')
hwL2ProtclTnlCusEncapType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 28, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ethernetii", 1), ("snap", 2), ("llc", 3), ("others", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2ProtclTnlCusEncapType.setStatus('current')
hwL2ProtclTnlCusProtclType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 28, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2ProtclTnlCusProtclType.setStatus('current')
hwL2ProtclTnlCusGroupMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 28, 1, 5), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2ProtclTnlCusGroupMacAddr.setStatus('current')
hwL2ProtclTnlCusGroupDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 28, 1, 6), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2ProtclTnlCusGroupDefault.setStatus('current')
hwL2ProtclTnlCusPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 28, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2ProtclTnlCusPriority.setStatus('current')
hwL2ProtclTnlCusRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 28, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2ProtclTnlCusRowStatus.setStatus('current')
hwL2ProtclTnlEnableTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 29), )
if mibBuilder.loadTexts: hwL2ProtclTnlEnableTable.setStatus('current')
hwL2ProtclTnlEnableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 29, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwL2ProtclTnlEnableIfIndex"), (0, "HUAWEI-L2MAM-MIB", "hwL2ProtclTnlEnableProtclName"))
if mibBuilder.loadTexts: hwL2ProtclTnlEnableEntry.setStatus('current')
hwL2ProtclTnlEnableIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 29, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwL2ProtclTnlEnableIfIndex.setStatus('current')
hwL2ProtclTnlEnableProtclName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 29, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwL2ProtclTnlEnableProtclName.setStatus('current')
hwL2ProtclTnlEnableTransMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 29, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tagged", 1), ("untagged", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2ProtclTnlEnableTransMode.setStatus('current')
hwL2ProtclTnlEnableTagListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 29, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2ProtclTnlEnableTagListLow.setStatus('current')
hwL2ProtclTnlEnableTagListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 29, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2ProtclTnlEnableTagListHigh.setStatus('current')
hwL2ProtclTnlEnableDropthresholdRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 29, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwL2ProtclTnlEnableDropthresholdRate.setStatus('current')
hwL2ProtclTnlEnableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 29, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwL2ProtclTnlEnableRowStatus.setStatus('current')
hwL2ProtclTnlStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 30), )
if mibBuilder.loadTexts: hwL2ProtclTnlStatisticsTable.setStatus('current')
hwL2ProtclTnlStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 30, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwL2ProtclTnlStatisticsIfIndex"), (0, "HUAWEI-L2MAM-MIB", "hwL2ProtclTnlStatisticsProtclName"))
if mibBuilder.loadTexts: hwL2ProtclTnlStatisticsEntry.setStatus('current')
hwL2ProtclTnlStatisticsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 30, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwL2ProtclTnlStatisticsIfIndex.setStatus('current')
hwL2ProtclTnlStatisticsProtclName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 30, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: hwL2ProtclTnlStatisticsProtclName.setStatus('current')
hwL2ProtclTnlStatisticsDropthrhldRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 30, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2ProtclTnlStatisticsDropthrhldRate.setStatus('current')
hwL2ProtclTnlStatisticsInputPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 30, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2ProtclTnlStatisticsInputPkts.setStatus('current')
hwL2ProtclTnlStatisticsOutputPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 30, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2ProtclTnlStatisticsOutputPkts.setStatus('current')
hwL2ProtclTnlStatisticsDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 30, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwL2ProtclTnlStatisticsDropPkts.setStatus('current')
hwBridgeMacAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(60, 1000000), ValueRangeConstraint(0, 0), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBridgeMacAgingTime.setStatus('current')
hwCfgMacAddrQueryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32), )
if mibBuilder.loadTexts: hwCfgMacAddrQueryTable.setStatus('current')
hwCfgMacAddrQueryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryVlanId"), (0, "HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryVsiName"), (0, "HUAWEI-L2MAM-MIB", "hwCfgMacAddrQuerySiName"), (0, "HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryBridgeId"), (0, "HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryMacAddr"), (0, "HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryConditionMode"), (0, "HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryConditionStringA"), (0, "HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryConditionStringB"), (0, "HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryConditionDigitA"), (0, "HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryConditionDigitB"), (0, "HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryConditionDigitC"))
if mibBuilder.loadTexts: hwCfgMacAddrQueryEntry.setStatus('current')
hwCfgMacAddrQueryVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 1), VlanIdOrNone())
if mibBuilder.loadTexts: hwCfgMacAddrQueryVlanId.setStatus('current')
hwCfgMacAddrQueryVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hwCfgMacAddrQueryVsiName.setStatus('current')
hwCfgMacAddrQuerySiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hwCfgMacAddrQuerySiName.setStatus('current')
hwCfgMacAddrQueryBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hwCfgMacAddrQueryBridgeId.setStatus('current')
hwCfgMacAddrQueryMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 5), MacAddress())
if mibBuilder.loadTexts: hwCfgMacAddrQueryMacAddr.setStatus('current')
hwCfgMacAddrQueryConditionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("showall", 1), ("showbymac", 2), ("showbymacvlan", 3), ("showbytype", 4), ("showbytypevlan", 5), ("showbytypeport", 6), ("showbytypeportvlan", 7), ("showbyvlan", 8), ("showbyport", 9), ("showbyportvlan", 10), ("showbymacvsi", 11), ("showbytypevsi", 12), ("showbytypeportvsi", 13), ("showbyvsi", 14), ("showbyportvsi", 15))))
if mibBuilder.loadTexts: hwCfgMacAddrQueryConditionMode.setStatus('current')
hwCfgMacAddrQueryConditionStringA = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hwCfgMacAddrQueryConditionStringA.setStatus('current')
hwCfgMacAddrQueryConditionStringB = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16)))
if mibBuilder.loadTexts: hwCfgMacAddrQueryConditionStringB.setStatus('current')
hwCfgMacAddrQueryConditionDigitA = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 9), Unsigned32())
if mibBuilder.loadTexts: hwCfgMacAddrQueryConditionDigitA.setStatus('current')
hwCfgMacAddrQueryConditionDigitB = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 10), Unsigned32())
if mibBuilder.loadTexts: hwCfgMacAddrQueryConditionDigitB.setStatus('current')
hwCfgMacAddrQueryConditionDigitC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 11), Unsigned32())
if mibBuilder.loadTexts: hwCfgMacAddrQueryConditionDigitC.setStatus('current')
hwCfgMacAddrQueryType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgMacAddrQueryType.setStatus('current')
hwCfgMacAddrQueryIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 13), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgMacAddrQueryIfIndex.setStatus('current')
hwCfgMacAddrQueryPeVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 14), VlanIdOrNone()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgMacAddrQueryPeVlanId.setStatus('current')
hwCfgMacAddrQueryCeVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 15), VlanIdOrNone()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgMacAddrQueryCeVlanId.setStatus('current')
hwCfgMacAddrQueryCedefaultFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nocedefault", 0), ("cedefault", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgMacAddrQueryCedefaultFlag.setStatus('current')
hwCfgMacAddrQueryAtmIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 17), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgMacAddrQueryAtmIfIndex.setStatus('current')
hwCfgMacAddrQueryVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgMacAddrQueryVpi.setStatus('current')
hwCfgMacAddrQueryVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgMacAddrQueryVci.setStatus('current')
hwCfgMacAddrQueryMacTunnel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 32, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCfgMacAddrQueryMacTunnel.setStatus('current')
hwDynMacAddrQueryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33), )
if mibBuilder.loadTexts: hwDynMacAddrQueryTable.setStatus('current')
hwDynMacAddrQueryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryVlanId"), (0, "HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryVsiName"), (0, "HUAWEI-L2MAM-MIB", "hwDynMacAddrQuerySiName"), (0, "HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryBridgeId"), (0, "HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryMacAddr"), (0, "HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryConditionMode"), (0, "HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryConditionStringA"), (0, "HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryConditionStringB"), (0, "HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryConditionDigitA"), (0, "HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryConditionDigitB"), (0, "HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryConditionDigitC"))
if mibBuilder.loadTexts: hwDynMacAddrQueryEntry.setStatus('current')
hwDynMacAddrQueryVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 1), VlanIdOrNone())
if mibBuilder.loadTexts: hwDynMacAddrQueryVlanId.setStatus('current')
hwDynMacAddrQueryVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hwDynMacAddrQueryVsiName.setStatus('current')
hwDynMacAddrQuerySiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hwDynMacAddrQuerySiName.setStatus('current')
hwDynMacAddrQueryBridgeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hwDynMacAddrQueryBridgeId.setStatus('current')
hwDynMacAddrQueryMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 5), MacAddress())
if mibBuilder.loadTexts: hwDynMacAddrQueryMacAddr.setStatus('current')
hwDynMacAddrQueryConditionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("showall", 1), ("showbymac", 2), ("showbymacvlan", 3), ("showbytype", 4), ("showbytypevlan", 5), ("showbytypeport", 6), ("showbytypeportvlan", 7), ("showbyvlan", 8), ("showbyport", 9), ("showbyportvlan", 10), ("showbymacvsi", 11), ("showbytypevsi", 12), ("showbytypeportvsi", 13), ("showbyvsi", 14), ("showbyportvsi", 15), ("showbyvsipw", 16), ("showbytypeslot", 17), ("showbytypeslotsourceslot", 18), ("showbytypeslotvlan", 19), ("showbytypeslotport", 20), ("showbytypeslotportvlan", 21), ("showbytypeslotvsi", 22), ("showbytypeslotportvsi", 23), ("showbytypeslotvsipw", 24))))
if mibBuilder.loadTexts: hwDynMacAddrQueryConditionMode.setStatus('current')
hwDynMacAddrQueryConditionStringA = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hwDynMacAddrQueryConditionStringA.setStatus('current')
hwDynMacAddrQueryConditionStringB = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16)))
if mibBuilder.loadTexts: hwDynMacAddrQueryConditionStringB.setStatus('current')
hwDynMacAddrQueryConditionDigitA = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 9), Unsigned32())
if mibBuilder.loadTexts: hwDynMacAddrQueryConditionDigitA.setStatus('current')
hwDynMacAddrQueryConditionDigitB = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 10), Unsigned32())
if mibBuilder.loadTexts: hwDynMacAddrQueryConditionDigitB.setStatus('current')
hwDynMacAddrQueryConditionDigitC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 11), Unsigned32())
if mibBuilder.loadTexts: hwDynMacAddrQueryConditionDigitC.setStatus('current')
hwDynMacAddrQueryType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDynMacAddrQueryType.setStatus('current')
hwDynMacAddrQueryIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 13), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDynMacAddrQueryIfIndex.setStatus('current')
hwDynMacAddrQueryPeVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 14), VlanIdOrNone()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDynMacAddrQueryPeVlanId.setStatus('current')
hwDynMacAddrQueryCeVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 15), VlanIdOrNone()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDynMacAddrQueryCeVlanId.setStatus('current')
hwDynMacAddrQueryAtmIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 16), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDynMacAddrQueryAtmIfIndex.setStatus('current')
hwDynMacAddrQueryVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDynMacAddrQueryVpi.setStatus('current')
hwDynMacAddrQueryVci = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDynMacAddrQueryVci.setStatus('current')
hwDynMacAddrQueryPeerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 19), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDynMacAddrQueryPeerIp.setStatus('current')
hwDynMacAddrQueryPwId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDynMacAddrQueryPwId.setStatus('current')
hwDynMacAddrQueryMacTunnel = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDynMacAddrQueryMacTunnel.setStatus('current')
hwDynMacAddrQueryAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 33, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDynMacAddrQueryAgingTime.setStatus('current')
hwMacInfoQueryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 34), )
if mibBuilder.loadTexts: hwMacInfoQueryTable.setStatus('current')
hwMacInfoQueryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 34, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwMacInfoQueryConditionMode"), (0, "HUAWEI-L2MAM-MIB", "hwMacInfoQueryConditionStringA"), (0, "HUAWEI-L2MAM-MIB", "hwMacInfoQueryConditionStringB"), (0, "HUAWEI-L2MAM-MIB", "hwMacInfoQueryConditionStringC"), (0, "HUAWEI-L2MAM-MIB", "hwMacInfoQueryConditionDigitA"), (0, "HUAWEI-L2MAM-MIB", "hwMacInfoQueryConditionDigitB"), (0, "HUAWEI-L2MAM-MIB", "hwMacInfoQueryConditionDigitC"))
if mibBuilder.loadTexts: hwMacInfoQueryEntry.setStatus('current')
hwMacInfoQueryConditionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 34, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("showtotalnumberbyall", 1), ("showtotalnumberbytype", 2), ("showtotalnumberbytypevlan", 3), ("showtotalnumberbytypeport", 4), ("showtotalnumberbytypeportvlan", 5), ("showtotalnumberbyvlan", 6), ("showtotalnumberbyport", 7), ("showtotalnumberbyportvlan", 8), ("showtotalnumberbytypevsi", 9), ("showtotalnumberbytypeportvsi", 10), ("showtotalnumberbyvsi", 11), ("showtotalnumberbyportvsi", 12), ("showtotalnumberbyvsipw", 13), ("showtotalnumberbytypeslot", 14), ("showtotalnumberbytypeslotvlan", 15), ("showtotalnumberbytypeslotport", 16), ("showtotalnumberbytypeslotportvlan", 17), ("showtotalnumberbytypeslotvsi", 18), ("showtotalnumberbytypeslotportvsi", 19), ("showtotalnumberbytypeslotvsipw", 20), ("showcapacity", 21))))
if mibBuilder.loadTexts: hwMacInfoQueryConditionMode.setStatus('current')
hwMacInfoQueryConditionStringA = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 34, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hwMacInfoQueryConditionStringA.setStatus('current')
hwMacInfoQueryConditionStringB = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 34, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16)))
if mibBuilder.loadTexts: hwMacInfoQueryConditionStringB.setStatus('current')
hwMacInfoQueryConditionStringC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 34, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: hwMacInfoQueryConditionStringC.setStatus('current')
hwMacInfoQueryConditionDigitA = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 34, 1, 5), Unsigned32())
if mibBuilder.loadTexts: hwMacInfoQueryConditionDigitA.setStatus('current')
hwMacInfoQueryConditionDigitB = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 34, 1, 6), Unsigned32())
if mibBuilder.loadTexts: hwMacInfoQueryConditionDigitB.setStatus('current')
hwMacInfoQueryConditionDigitC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 34, 1, 7), Unsigned32())
if mibBuilder.loadTexts: hwMacInfoQueryConditionDigitC.setStatus('current')
hwMacInfoQueryTotalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 34, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacInfoQueryTotalNumber.setStatus('current')
hwMacInfoQueryTotalLocalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 34, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacInfoQueryTotalLocalNumber.setStatus('current')
hwMacInfoQueryTotalRemoteNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 34, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacInfoQueryTotalRemoteNumber.setStatus('current')
hwMacInfoQueryCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 34, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMacInfoQueryCapacity.setStatus('current')
hwVplsOverGreTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 35), )
if mibBuilder.loadTexts: hwVplsOverGreTable.setStatus('current')
hwVplsOverGreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 35, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwVplsOverGrePwId"))
if mibBuilder.loadTexts: hwVplsOverGreEntry.setStatus('current')
hwVplsOverGrePwId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 35, 1, 1), Integer32())
if mibBuilder.loadTexts: hwVplsOverGrePwId.setStatus('current')
hwRemoteIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 35, 1, 2), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwRemoteIp.setStatus('current')
hwVplsOverGreVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 35, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwVplsOverGreVsiName.setStatus('current')
hwVllByPassOverGreTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 36), )
if mibBuilder.loadTexts: hwVllByPassOverGreTable.setStatus('current')
hwVllByPassOverGreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 36, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwVLLACPortIndex"))
if mibBuilder.loadTexts: hwVllByPassOverGreEntry.setStatus('current')
hwVLLACPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 36, 1, 1), Integer32())
if mibBuilder.loadTexts: hwVLLACPortIndex.setStatus('current')
hwVLLACPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 36, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwVLLACPortName.setStatus('current')
hwUnucFlowAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 37), )
if mibBuilder.loadTexts: hwUnucFlowAlarmTable.setStatus('current')
hwUnucFlowAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 37, 1), ).setIndexNames((0, "HUAWEI-L2MAM-MIB", "hwUNUCPortIndex"))
if mibBuilder.loadTexts: hwUnucFlowAlarmEntry.setStatus('current')
hwUNUCPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 37, 1, 1), Integer32())
if mibBuilder.loadTexts: hwUNUCPortIndex.setStatus('current')
hwUNUCPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 37, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwUNUCPortName.setStatus('current')
hwUNUCPortAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 37, 1, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwUNUCPortAlarmThreshold.setStatus('current')
hwUNUCPortRealFlow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 1, 37, 1, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwUNUCPortRealFlow.setStatus('current')
hwL2MAMConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2))
hwL2MAMGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1))
hwL2MAMCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 2))
hwL2MAMCfgFdbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 1)).setObjects(("HUAWEI-L2MAM-MIB", "hwCfgFdbPort"), ("HUAWEI-L2MAM-MIB", "hwCfgFdbType"), ("HUAWEI-L2MAM-MIB", "hwCfgFdbAtmPort"), ("HUAWEI-L2MAM-MIB", "hwCfgFdbVpi"), ("HUAWEI-L2MAM-MIB", "hwCfgFdbVci"), ("HUAWEI-L2MAM-MIB", "hwCfgFdbRowstatus"), ("HUAWEI-L2MAM-MIB", "hwCfgFdbCeDefault"), ("HUAWEI-L2MAM-MIB", "hwUntargetMacNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2MAMCfgFdbGroup = hwL2MAMCfgFdbGroup.setStatus('current')
hwL2MAMDynFdbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 2)).setObjects(("HUAWEI-L2MAM-MIB", "hwDynFdbPort"), ("HUAWEI-L2MAM-MIB", "hwDynFdbAtmPort"), ("HUAWEI-L2MAM-MIB", "hwDynFdbVpi"), ("HUAWEI-L2MAM-MIB", "hwDynFdbVci"), ("HUAWEI-L2MAM-MIB", "hwDynFdbRowstatus"), ("HUAWEI-L2MAM-MIB", "hwDynSecurityFdbToStaticEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2MAMDynFdbGroup = hwL2MAMDynFdbGroup.setStatus('current')
hwL2MAMMacLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 3)).setObjects(("HUAWEI-L2MAM-MIB", "hwMacLimitMaxMac"), ("HUAWEI-L2MAM-MIB", "hwMacLimitMaxRate"), ("HUAWEI-L2MAM-MIB", "hwMacLimitAction"), ("HUAWEI-L2MAM-MIB", "hwMacLimitAlarm"), ("HUAWEI-L2MAM-MIB", "hwMacLimitRowstatus"), ("HUAWEI-L2MAM-MIB", "hwL2MaxMacLimit"), ("HUAWEI-L2MAM-MIB", "hwMacAddressLearn"), ("HUAWEI-L2MAM-MIB", "hwMacDynAddressLearnNum"), ("HUAWEI-L2MAM-MIB", "hwMacSecureAddressLearnNum"), ("HUAWEI-L2MAM-MIB", "hwMacLimitRuleMaxMac"), ("HUAWEI-L2MAM-MIB", "hwMacLimitRuleMaxRate"), ("HUAWEI-L2MAM-MIB", "hwMacLimitRuleAction"), ("HUAWEI-L2MAM-MIB", "hwMacLimitRuleAlarm"), ("HUAWEI-L2MAM-MIB", "hwMacLimitRuleRowstatus"), ("HUAWEI-L2MAM-MIB", "hwMacRuleDynAddressLearnNum"), ("HUAWEI-L2MAM-MIB", "hwMacLimitApplyRuleName"), ("HUAWEI-L2MAM-MIB", "hwMacLimitApplyRowstatus"), ("HUAWEI-L2MAM-MIB", "hwPwMacLimitMaxMac"), ("HUAWEI-L2MAM-MIB", "hwPwMacLimitMaxRate"), ("HUAWEI-L2MAM-MIB", "hwPwMacLimitAction"), ("HUAWEI-L2MAM-MIB", "hwPwMacLimitAlarm"), ("HUAWEI-L2MAM-MIB", "hwPwMacLimitRowstatus"), ("HUAWEI-L2MAM-MIB", "hwPwMacAddressLearn"), ("HUAWEI-L2MAM-MIB", "hwPwMacDynAddressLearnNum"), ("HUAWEI-L2MAM-MIB", "hwSlotMacLimitMaxMac"), ("HUAWEI-L2MAM-MIB", "hwSlotMacLimitMaxRate"), ("HUAWEI-L2MAM-MIB", "hwSlotMacLimitAction"), ("HUAWEI-L2MAM-MIB", "hwSlotMacLimitAlarm"), ("HUAWEI-L2MAM-MIB", "hwSlotMacLimitRowstatus"), ("HUAWEI-L2MAM-MIB", "hwBridgeMacAgingTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2MAMMacLimitGroup = hwL2MAMMacLimitGroup.setStatus('current')
hwL2MAMMacUsageGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 4)).setObjects(("HUAWEI-L2MAM-MIB", "hwMacEntityUsage"), ("HUAWEI-L2MAM-MIB", "hwMacEntityUsageThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2MAMMacUsageGroup = hwL2MAMMacUsageGroup.setStatus('current')
hwdbCfg3tupleFdbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 5)).setObjects(("HUAWEI-L2MAM-MIB", "hwdbCfg3tupleFdbOutPort"), ("HUAWEI-L2MAM-MIB", "hwdbCfg3tupleFdbRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwdbCfg3tupleFdbGroup = hwdbCfg3tupleFdbGroup.setStatus('current')
hwL2MAMObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 6)).setObjects(("HUAWEI-L2MAM-MIB", "hwMacAgingTime"), ("HUAWEI-L2MAM-MIB", "hwMacRestrict"), ("HUAWEI-L2MAM-MIB", "hwMacGlobalStatistics"), ("HUAWEI-L2MAM-MIB", "hwDiscardIllegalMacEnable"), ("HUAWEI-L2MAM-MIB", "hwDiscardIllegalMacAlarm"), ("HUAWEI-L2MAM-MIB", "hwMacSpoofingDefend"), ("HUAWEI-L2MAM-MIB", "hwMacflappingMac"), ("HUAWEI-L2MAM-MIB", "hwMacFlappingVlan"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2MAMObjectsGroup = hwL2MAMObjectsGroup.setStatus('current')
hwPortSecurityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 7)).setObjects(("HUAWEI-L2MAM-MIB", "hwPortSecurityEnabled"), ("HUAWEI-L2MAM-MIB", "hwPortSecurityProtectAction"), ("HUAWEI-L2MAM-MIB", "hwPortSecurityAllDynToStaticEnable"), ("HUAWEI-L2MAM-MIB", "hwPortSecurityAllDynToStickyEnable"), ("HUAWEI-L2MAM-MIB", "hwPortSecurityMaxMacNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwPortSecurityGroup = hwPortSecurityGroup.setStatus('current')
hwMacIfStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 8)).setObjects(("HUAWEI-L2MAM-MIB", "hwMacIfStatistics"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacIfStatisticsGroup = hwMacIfStatisticsGroup.setStatus('current')
hwMacSlotStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 9)).setObjects(("HUAWEI-L2MAM-MIB", "hwMacSlotStatistics"), ("HUAWEI-L2MAM-MIB", "hwMacSlotStatisticsSpecify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacSlotStatisticsGroup = hwMacSlotStatisticsGroup.setStatus('current')
hwMacVlanStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 10)).setObjects(("HUAWEI-L2MAM-MIB", "hwMacVlanStatistics"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacVlanStatisticsGroup = hwMacVlanStatisticsGroup.setStatus('current')
hwMacVsiStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 11)).setObjects(("HUAWEI-L2MAM-MIB", "hwMacVsiStatistics"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacVsiStatisticsGroup = hwMacVsiStatisticsGroup.setStatus('current')
hwMacSpoofingDefendGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 12)).setObjects(("HUAWEI-L2MAM-MIB", "hwMacSpoofingDefendEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacSpoofingDefendGroup = hwMacSpoofingDefendGroup.setStatus('current')
hwL2ProtocolTunnelTrapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 13)).setObjects(("HUAWEI-L2MAM-MIB", "hwL2ProtocolTunnelTrapPortName"), ("HUAWEI-L2MAM-MIB", "hwL2ProtocolTunnelTrapProtocolName"), ("HUAWEI-L2MAM-MIB", "hwL2ProtocolTunnelTrapDropThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2ProtocolTunnelTrapGroup = hwL2ProtocolTunnelTrapGroup.setStatus('current')
hwL2ProtclTnlStdProtclGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 14)).setObjects(("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlStdProtclMacAddr"), ("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlStdEncapType"), ("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlStdProtclType"), ("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlStdGroupMacAddr"), ("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlStdGroupDefault"), ("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlStdPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2ProtclTnlStdProtclGroup = hwL2ProtclTnlStdProtclGroup.setStatus('current')
hwL2ProtclTnlCusProtclGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 15)).setObjects(("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlCusProtclMacAddr"), ("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlCusEncapType"), ("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlCusProtclType"), ("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlCusGroupMacAddr"), ("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlCusGroupDefault"), ("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlCusPriority"), ("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlCusRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2ProtclTnlCusProtclGroup = hwL2ProtclTnlCusProtclGroup.setStatus('current')
hwL2ProtclTnlEnableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 16)).setObjects(("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlEnableTransMode"), ("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlEnableTagListLow"), ("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlEnableTagListHigh"), ("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlEnableDropthresholdRate"), ("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlEnableRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2ProtclTnlEnableGroup = hwL2ProtclTnlEnableGroup.setStatus('current')
hwL2ProtclTnlStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 17)).setObjects(("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlStatisticsDropthrhldRate"), ("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlStatisticsInputPkts"), ("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlStatisticsOutputPkts"), ("HUAWEI-L2MAM-MIB", "hwL2ProtclTnlStatisticsDropPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2ProtclTnlStatisticsGroup = hwL2ProtclTnlStatisticsGroup.setStatus('current')
hwCfgMacAddrQueryTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 18)).setObjects(("HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryType"), ("HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryIfIndex"), ("HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryPeVlanId"), ("HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryCeVlanId"), ("HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryCedefaultFlag"), ("HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryAtmIfIndex"), ("HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryVpi"), ("HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryVci"), ("HUAWEI-L2MAM-MIB", "hwCfgMacAddrQueryMacTunnel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCfgMacAddrQueryTableGroup = hwCfgMacAddrQueryTableGroup.setStatus('current')
hwDynMacAddrQueryTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 19)).setObjects(("HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryType"), ("HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryIfIndex"), ("HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryPeVlanId"), ("HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryCeVlanId"), ("HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryAtmIfIndex"), ("HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryVpi"), ("HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryVci"), ("HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryPeerIp"), ("HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryPwId"), ("HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryMacTunnel"), ("HUAWEI-L2MAM-MIB", "hwDynMacAddrQueryAgingTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDynMacAddrQueryTableGroup = hwDynMacAddrQueryTableGroup.setStatus('current')
hwMacInfoQueryTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 1, 20)).setObjects(("HUAWEI-L2MAM-MIB", "hwMacInfoQueryTotalNumber"), ("HUAWEI-L2MAM-MIB", "hwMacInfoQueryTotalLocalNumber"), ("HUAWEI-L2MAM-MIB", "hwMacInfoQueryTotalRemoteNumber"), ("HUAWEI-L2MAM-MIB", "hwMacInfoQueryCapacity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMacInfoQueryTableGroup = hwMacInfoQueryTableGroup.setStatus('current')
hwL2MAMCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 2, 1)).setObjects(("HUAWEI-L2MAM-MIB", "hwL2MAMCfgFdbGroup"), ("HUAWEI-L2MAM-MIB", "hwL2MAMDynFdbGroup"), ("HUAWEI-L2MAM-MIB", "hwL2MAMMacLimitGroup"), ("HUAWEI-L2MAM-MIB", "hwL2MAMMacUsageGroup"), ("HUAWEI-L2MAM-MIB", "hwdbCfg3tupleFdbGroup"), ("HUAWEI-L2MAM-MIB", "hwMacIfStatisticsGroup"), ("HUAWEI-L2MAM-MIB", "hwMacSlotStatisticsGroup"), ("HUAWEI-L2MAM-MIB", "hwMacVlanStatisticsGroup"), ("HUAWEI-L2MAM-MIB", "hwMacVsiStatisticsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwL2MAMCompliance = hwL2MAMCompliance.setStatus('current')
hwL2MACTrapGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 3))
hwBaseTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 42, 2, 2, 3, 2)).setObjects(("HUAWEI-L2MAM-MIB", "hwMacUsageRaisingThreshold"), ("HUAWEI-L2MAM-MIB", "hwMacUsageFallingThreshold"), ("HUAWEI-L2MAM-MIB", "hwMacLimitNumRaisingThreshold"), ("HUAWEI-L2MAM-MIB", "hwMacLimitNumFallingThreshold"), ("HUAWEI-L2MAM-MIB", "hwUntargetMacNumAlarm"), ("HUAWEI-L2MAM-MIB", "hwPortSecRcvInsecurePktAlarm"), ("HUAWEI-L2MAM-MIB", "hwPwMacLimitNumRaisingThreshold"), ("HUAWEI-L2MAM-MIB", "hwPwMacLimitNumFallingThreshold"), ("HUAWEI-L2MAM-MIB", "hwPortStickyReachMaxAlarm"), ("HUAWEI-L2MAM-MIB", "hwRecIllegalMacPktAlarm"), ("HUAWEI-L2MAM-MIB", "hwMacLimitOverThresholdAlarm"), ("HUAWEI-L2MAM-MIB", "hwMacFlappingAlarm"), ("HUAWEI-L2MAM-MIB", "hwSlotMacLimitNumRaisingThreshold"), ("HUAWEI-L2MAM-MIB", "hwSlotMacLimitNumFallingThreshold"), ("HUAWEI-L2MAM-MIB", "hwL2ProtocolTunnelDropThresholdRaising"), ("HUAWEI-L2MAM-MIB", "hwL2ProtocolTunnelDropThresholdFalling"), ("HUAWEI-L2MAM-MIB", "hwVsiMacLimitNumRaisingThresholdAlarm"), ("HUAWEI-L2MAM-MIB", "hwVsiMacLimitNumRaisingThresholdAlarmClear"), ("HUAWEI-L2MAM-MIB", "hwMacLimitOverThresholdAlarmResume"), ("HUAWEI-L2MAM-MIB", "hwSlotMacNumRaisingThreshold"), ("HUAWEI-L2MAM-MIB", "hwSlotMacNumFallingThreshold"), ("HUAWEI-L2MAM-MIB", "hwMacLimitRuleNumRaisingThreshold"), ("HUAWEI-L2MAM-MIB", "hwMacLimitRuleNumFallingThreshold"), ("HUAWEI-L2MAM-MIB", "hwVplsOverGRENotSupportForwardRising"), ("HUAWEI-L2MAM-MIB", "hwVplsOverGRENotSupportForwardRisingResume"), ("HUAWEI-L2MAM-MIB", "hwIfInputUnucFlowRisingThreshold"), ("HUAWEI-L2MAM-MIB", "hwIfInputUnucFlowFallingThreshold"), ("HUAWEI-L2MAM-MIB", "hwMacHopAlarmRisingThreshold"), ("HUAWEI-L2MAM-MIB", "hwMacHopAlarmFallingThreshold"), ("HUAWEI-L2MAM-MIB", "hwPstBroadcastLostAlarm"), ("HUAWEI-L2MAM-MIB", "hwPstBroadcastLostResume"), ("HUAWEI-L2MAM-MIB", "hwBdMacLimitOverThresholdAlarm"), ("HUAWEI-L2MAM-MIB", "hwBdMacLimitOverThresholdAlarmResume"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwBaseTrapGroup = hwBaseTrapGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-L2MAM-MIB", hwdbCfg3tupleFdbMac=hwdbCfg3tupleFdbMac, hwL2ProtocolTunnelTrapGroup=hwL2ProtocolTunnelTrapGroup, hwMacSpoofingDefendEntry=hwMacSpoofingDefendEntry, hwMacHopAlarmEntry=hwMacHopAlarmEntry, hwMacInfoQueryTable=hwMacInfoQueryTable, hwUntargetMacNum=hwUntargetMacNum, hwPortStickyReachMaxAlarm=hwPortStickyReachMaxAlarm, hwDynMacAddrQueryMacAddr=hwDynMacAddrQueryMacAddr, hwPwMacAddressLearn=hwPwMacAddressLearn, hwUNUCPortRealFlow=hwUNUCPortRealFlow, hwL2MAMCompliance=hwL2MAMCompliance, hwL2ProtclTnlStatisticsOutputPkts=hwL2ProtclTnlStatisticsOutputPkts, hwDynMacAddrQueryCeVlanId=hwDynMacAddrQueryCeVlanId, hwSlotMacLimitNumRaisingThreshold=hwSlotMacLimitNumRaisingThreshold, hwMacSlotStatisticsEntry=hwMacSlotStatisticsEntry, hwMacDynAddressLearnNum=hwMacDynAddressLearnNum, hwPortSecRcvInsecurePktAlarm=hwPortSecRcvInsecurePktAlarm, hwCfgMacAddrQueryConditionDigitA=hwCfgMacAddrQueryConditionDigitA, hwPwMacLimitVsiName=hwPwMacLimitVsiName, hwDynFdbVsiName=hwDynFdbVsiName, hwL2MAMConformance=hwL2MAMConformance, hwCfgFdbCeDefault=hwCfgFdbCeDefault, hwPwMacLimitAction=hwPwMacLimitAction, hwMacHopPortName4=hwMacHopPortName4, hwL2MAMMacLimitGroup=hwL2MAMMacLimitGroup, hwL2ProtclTnlStatisticsGroup=hwL2ProtclTnlStatisticsGroup, hwL2ProtclTnlStdTable=hwL2ProtclTnlStdTable, hwVplsOverGRENotSupportForwardRising=hwVplsOverGRENotSupportForwardRising, hwMacLimitNumRaisingThreshold=hwMacLimitNumRaisingThreshold, hwMacVsiStatisticsTable=hwMacVsiStatisticsTable, hwL2ProtocolTunnelTrapDropThreshold=hwL2ProtocolTunnelTrapDropThreshold, hwSlotMacNumFallingThreshold=hwSlotMacNumFallingThreshold, hwCfgMacAddrQueryConditionDigitC=hwCfgMacAddrQueryConditionDigitC, hwdbDynFdbEntry=hwdbDynFdbEntry, hwDynMacAddrQueryIfIndex=hwDynMacAddrQueryIfIndex, hwCfgMacAddrQueryCeVlanId=hwCfgMacAddrQueryCeVlanId, hwDiscardIllegalMacAlarm=hwDiscardIllegalMacAlarm, hwDynSecurityFdbToStaticEnable=hwDynSecurityFdbToStaticEnable, hwL2ProtclTnlStdPriority=hwL2ProtclTnlStdPriority, hwRecIllegalMacPktAlarm=hwRecIllegalMacPktAlarm, hwCfgMacAddrQueryVci=hwCfgMacAddrQueryVci, hwMacInfoQueryConditionDigitB=hwMacInfoQueryConditionDigitB, hwMacLimitNumFallingThreshold=hwMacLimitNumFallingThreshold, hwPortSecurityTable=hwPortSecurityTable, hwMacLimitRuleNumRaisingThreshold=hwMacLimitRuleNumRaisingThreshold, hwPstBroadcastLostResume=hwPstBroadcastLostResume, hwMacSlotStatisticsSlotId=hwMacSlotStatisticsSlotId, hwMacHopAlarmRisingThreshold=hwMacHopAlarmRisingThreshold, hwDynMacAddrQueryVlanId=hwDynMacAddrQueryVlanId, hwL2ProtclTnlCusGroupMacAddr=hwL2ProtclTnlCusGroupMacAddr, hwCfgMacAddrQueryConditionStringB=hwCfgMacAddrQueryConditionStringB, hwDynFdbVlanId=hwDynFdbVlanId, hwMacVlanStatisticsTable=hwMacVlanStatisticsTable, hwUNUCPortName=hwUNUCPortName, hwL2MAMMacUsageGroup=hwL2MAMMacUsageGroup, hwPwMacLimitMaxRate=hwPwMacLimitMaxRate, hwBaseTrapGroup=hwBaseTrapGroup, hwCfgFdbVsiName=hwCfgFdbVsiName, hwL2ProtclTnlEnableEntry=hwL2ProtclTnlEnableEntry, hwCfgMacAddrQueryBridgeId=hwCfgMacAddrQueryBridgeId, hwMacFlappingVlan=hwMacFlappingVlan, hwMacLimitRuleMaxMac=hwMacLimitRuleMaxMac, hwdbCfg3tupleFdbOutPort=hwdbCfg3tupleFdbOutPort, hwDynMacAddrQueryVci=hwDynMacAddrQueryVci, hwPwMacSpoofingAttackMacAddr=hwPwMacSpoofingAttackMacAddr, hwDynMacAddrQueryBridgeId=hwDynMacAddrQueryBridgeId, hwMacLimitRuleAlarm=hwMacLimitRuleAlarm, hwDynMacAddrQueryConditionStringA=hwDynMacAddrQueryConditionStringA, hwPwMacLimitEntry=hwPwMacLimitEntry, hwMacEntityUsage=hwMacEntityUsage, hwL2MacFlappingTrapObjects=hwL2MacFlappingTrapObjects, hwPortSecurityEntry=hwPortSecurityEntry, hwL2ProtclTnlStdEncapType=hwL2ProtclTnlStdEncapType, hwMacLimitTable=hwMacLimitTable, hwL2MAMObjects=hwL2MAMObjects, hwSlotMacLimitNumFallingThreshold=hwSlotMacLimitNumFallingThreshold, hwPwMacLimitRowstatus=hwPwMacLimitRowstatus, hwCfgMacAddrQueryEntry=hwCfgMacAddrQueryEntry, hwL2MAMCfgFdbGroup=hwL2MAMCfgFdbGroup, hwCfgFdbMac=hwCfgFdbMac, hwPwMacLimitPwName=hwPwMacLimitPwName, hwSlotMacLimitTable=hwSlotMacLimitTable, hwMacHopPortName2=hwMacHopPortName2, hwVplsOverGRENotSupportForwardRisingResume=hwVplsOverGRENotSupportForwardRisingResume, hwSlotMacLimitAlarm=hwSlotMacLimitAlarm, hwSlotMacLimitRowstatus=hwSlotMacLimitRowstatus, hwL2Mgmt=hwL2Mgmt, hwVLLACPortName=hwVLLACPortName, hwDynFdbPort=hwDynFdbPort, hwL2ProtocolTunnelTrapProtocolName=hwL2ProtocolTunnelTrapProtocolName, hwCfgMacAddrQueryCedefaultFlag=hwCfgMacAddrQueryCedefaultFlag, hwMacInfoQueryTotalRemoteNumber=hwMacInfoQueryTotalRemoteNumber, hwDynMacAddrQueryAtmIfIndex=hwDynMacAddrQueryAtmIfIndex, hwMacHopAlarmTable=hwMacHopAlarmTable, hwPortSecurityGroup=hwPortSecurityGroup, hwL2MAMObjectsGroup=hwL2MAMObjectsGroup, hwCfgFdbVpi=hwCfgFdbVpi, hwL2ProtclTnlStatisticsDropPkts=hwL2ProtclTnlStatisticsDropPkts, hwMacLimitAction=hwMacLimitAction, hwMacVsiStatisticsEntry=hwMacVsiStatisticsEntry, hwPortSecurityAllDynToStickyEnable=hwPortSecurityAllDynToStickyEnable, hwBdMacLimitMaxMac=hwBdMacLimitMaxMac, hwL2ProtclTnlStdProtclName=hwL2ProtclTnlStdProtclName, hwMacLimitGlobalRuleName=hwMacLimitGlobalRuleName, hwMacInfoQueryTableGroup=hwMacInfoQueryTableGroup, hwL2ProtclTnlStdProtclGroup=hwL2ProtclTnlStdProtclGroup, hwdbCfgFdbTable=hwdbCfgFdbTable, hwMacHopPWInfo=hwMacHopPWInfo, hwMacSpoofingDefendEnabled=hwMacSpoofingDefendEnabled, hwDynFdbRowstatus=hwDynFdbRowstatus, hwDynMacAddrQueryPwId=hwDynMacAddrQueryPwId, hwMacHopVsiName=hwMacHopVsiName, hwMacUsageFallingThreshold=hwMacUsageFallingThreshold, hwPwMacLimitMaxMac=hwPwMacLimitMaxMac, hwMacSpoofingDefendPort=hwMacSpoofingDefendPort, hwCfgMacAddrQueryType=hwCfgMacAddrQueryType, hwDynFdbAtmPort=hwDynFdbAtmPort, hwMacLimitMaxRate=hwMacLimitMaxRate, hwCfgMacAddrQueryVpi=hwCfgMacAddrQueryVpi, hwMacLimitGlobalRuleEntry=hwMacLimitGlobalRuleEntry, hwVllByPassOverGreTable=hwVllByPassOverGreTable, hwL2ProtclTnlStdProtclType=hwL2ProtclTnlStdProtclType, hwDynMacAddrQueryTableGroup=hwDynMacAddrQueryTableGroup, hwL2ProtclTnlStatisticsProtclName=hwL2ProtclTnlStatisticsProtclName, hwMacInfoQueryTotalNumber=hwMacInfoQueryTotalNumber, hwCfgMacAddrQueryMacTunnel=hwCfgMacAddrQueryMacTunnel, hwMacLimitOverThresholdAlarm=hwMacLimitOverThresholdAlarm, hwCfgMacAddrQuerySiName=hwCfgMacAddrQuerySiName, hwL2ProtclTnlStatisticsIfIndex=hwL2ProtclTnlStatisticsIfIndex, hwMacIfStatisticsGroup=hwMacIfStatisticsGroup, hwMacLimitGlobalRuleTable=hwMacLimitGlobalRuleTable, hwSlotMacNumRaisingThreshold=hwSlotMacNumRaisingThreshold, hwMacIfStatisticsIfIndex=hwMacIfStatisticsIfIndex, hwMacSpoofingDefendGroup=hwMacSpoofingDefendGroup, hwIfInputUnucFlowRisingThreshold=hwIfInputUnucFlowRisingThreshold, hwPortSecurityProtectAction=hwPortSecurityProtectAction, hwDynMacAddrQueryConditionStringB=hwDynMacAddrQueryConditionStringB, hwMacLimitOverThresholdAlarmResume=hwMacLimitOverThresholdAlarmResume, hwUNUCPortIndex=hwUNUCPortIndex, hwL2ProtclTnlStatisticsDropthrhldRate=hwL2ProtclTnlStatisticsDropthrhldRate, hwUnucFlowAlarmTable=hwUnucFlowAlarmTable, hwMacUsageEntry=hwMacUsageEntry, hwMacLimitApplyRowstatus=hwMacLimitApplyRowstatus, hwL2ProtclTnlCusEncapType=hwL2ProtclTnlCusEncapType, hwSlotMacLimitEntry=hwSlotMacLimitEntry, hwVllByPassOverGreEntry=hwVllByPassOverGreEntry, hwMacVsiStatistics=hwMacVsiStatistics, hwBridgeMacAgingTime=hwBridgeMacAgingTime, hwPwMacLimitAlarm=hwPwMacLimitAlarm, hwMacVsiStatisticsVsiName=hwMacVsiStatisticsVsiName, hwDynMacAddrQueryTable=hwDynMacAddrQueryTable, hwL2ProtclTnlEnableDropthresholdRate=hwL2ProtclTnlEnableDropthresholdRate, hwDynFdbVci=hwDynFdbVci, hwMacHopPortName1=hwMacHopPortName1, hwPwMacSpoofingAttackAlarm=hwPwMacSpoofingAttackAlarm, PYSNMP_MODULE_ID=hwL2MAM, hwPwMacLimitNumFallingThreshold=hwPwMacLimitNumFallingThreshold, hwMacVsiStatisticsGroup=hwMacVsiStatisticsGroup, hwDiscardIllegalMacEnable=hwDiscardIllegalMacEnable, hwMacLimitApplyRuleEntry=hwMacLimitApplyRuleEntry, hwL2ProtclTnlCusProtclType=hwL2ProtclTnlCusProtclType, hwDynMacAddrQueryConditionDigitA=hwDynMacAddrQueryConditionDigitA, hwdbCfgFdbEntry=hwdbCfgFdbEntry, hwMacLimitApplyPort=hwMacLimitApplyPort, hwDynMacAddrQueryType=hwDynMacAddrQueryType, hwVsiMacLimitNumRaisingThresholdAlarm=hwVsiMacLimitNumRaisingThresholdAlarm, hwMacAddressLearn=hwMacAddressLearn, hwPortSecurityMaxMacNum=hwPortSecurityMaxMacNum, hwCfgFdbVlanId=hwCfgFdbVlanId, hwDynMacAddrQueryMacTunnel=hwDynMacAddrQueryMacTunnel, hwMacSlotStatisticsTable=hwMacSlotStatisticsTable, hwMacLimitVlanId=hwMacLimitVlanId, hwL2ProtclTnlCusProtclMacAddr=hwL2ProtclTnlCusProtclMacAddr, hwMacInfoQueryConditionDigitC=hwMacInfoQueryConditionDigitC, hwL2ProtclTnlCusProtclName=hwL2ProtclTnlCusProtclName, hwMacLimitVsiName=hwMacLimitVsiName, hwMacLimitRowstatus=hwMacLimitRowstatus, hwL2ProtocolTunnelTrapObjects=hwL2ProtocolTunnelTrapObjects, hwMacFlappingAlarm=hwMacFlappingAlarm, hwMacIfStatistics=hwMacIfStatistics, hwMacVlanStatisticsGroup=hwMacVlanStatisticsGroup, hwdbCfg3tupleFdbRowStatus=hwdbCfg3tupleFdbRowStatus, hwDynMacAddrQueryConditionDigitB=hwDynMacAddrQueryConditionDigitB, hwMacUsageTable=hwMacUsageTable, hwDynMacAddrQueryConditionMode=hwDynMacAddrQueryConditionMode, hwL2ProtclTnlStdProtclMacAddr=hwL2ProtclTnlStdProtclMacAddr, hwCfgMacAddrQueryTableGroup=hwCfgMacAddrQueryTableGroup, hwMacLimitApplyVlanId=hwMacLimitApplyVlanId, hwDynFdbVpi=hwDynFdbVpi, hwMacflappingMac=hwMacflappingMac, hwL2ProtocolTunnelDropThresholdRaising=hwL2ProtocolTunnelDropThresholdRaising, hwL2ProtclTnlCusGroupDefault=hwL2ProtclTnlCusGroupDefault, hwL2MAMDynFdbGroup=hwL2MAMDynFdbGroup, hwMacIfStatisticsEntry=hwMacIfStatisticsEntry, hwL2ProtclTnlStdGroupDefault=hwL2ProtclTnlStdGroupDefault, hwL2ProtclTnlStdGroupMacAddr=hwL2ProtclTnlStdGroupMacAddr, hwBdMacLimitBdId=hwBdMacLimitBdId, hwMacGlobalStatistics=hwMacGlobalStatistics, hwPortSecurityEnabled=hwPortSecurityEnabled, hwdbCfg3tupleFdbGroup=hwdbCfg3tupleFdbGroup, hwL2ProtclTnlCusPriority=hwL2ProtclTnlCusPriority, hwDynMacAddrQuerySiName=hwDynMacAddrQuerySiName, hwL2MAMGroups=hwL2MAMGroups, hwCfgFdbVci=hwCfgFdbVci, hwMacSpoofingDefendTable=hwMacSpoofingDefendTable, hwL2ProtclTnlEnableTransMode=hwL2ProtclTnlEnableTransMode, hwMacLimitMaxMac=hwMacLimitMaxMac, hwL2ProtclTnlCusTable=hwL2ProtclTnlCusTable, hwUNUCPortAlarmThreshold=hwUNUCPortAlarmThreshold, hwL2ProtclTnlStatisticsEntry=hwL2ProtclTnlStatisticsEntry, hwdbDynFdbTable=hwdbDynFdbTable, hwVplsOverGreTable=hwVplsOverGreTable, hwMacLimitApplyRuleTable=hwMacLimitApplyRuleTable, hwCfgMacAddrQueryMacAddr=hwCfgMacAddrQueryMacAddr, hwL2ProtclTnlEnableProtclName=hwL2ProtclTnlEnableProtclName, hwMacAgingTime=hwMacAgingTime, hwPortSecurityAllDynToStaticEnable=hwPortSecurityAllDynToStaticEnable, hwMacRuleDynAddressLearnNum=hwMacRuleDynAddressLearnNum, hwPortSecurityPort=hwPortSecurityPort, hwUnucFlowAlarmEntry=hwUnucFlowAlarmEntry, hwCfgMacAddrQueryAtmIfIndex=hwCfgMacAddrQueryAtmIfIndex, hwCfgMacAddrQueryConditionMode=hwCfgMacAddrQueryConditionMode, hwMacLimitAlarm=hwMacLimitAlarm, hwCfgFdbAtmPort=hwCfgFdbAtmPort, hwDynFdbMac=hwDynFdbMac, hwMacSlotStatistics=hwMacSlotStatistics, hwMacVlanStatisticsEntry=hwMacVlanStatisticsEntry, hwMacVlanStatistics=hwMacVlanStatistics, hwMacInfoQueryConditionStringA=hwMacInfoQueryConditionStringA, hwPwMacLimitNumRaisingThreshold=hwPwMacLimitNumRaisingThreshold, hwL2ProtclTnlEnableIfIndex=hwL2ProtclTnlEnableIfIndex, VlanIndex=VlanIndex, hwL2ProtclTnlCusEntry=hwL2ProtclTnlCusEntry, hwRemoteIp=hwRemoteIp, hwL2MaxMacLimit=hwL2MaxMacLimit, hwSlotMacLimitAction=hwSlotMacLimitAction, hwMacInfoQueryTotalLocalNumber=hwMacInfoQueryTotalLocalNumber, hwL2ProtclTnlEnableGroup=hwL2ProtclTnlEnableGroup, hwPwMacDynAddressLearnNum=hwPwMacDynAddressLearnNum, hwMacInfoQueryCapacity=hwMacInfoQueryCapacity, hwVsiMacLimitNumRaisingThresholdAlarmClear=hwVsiMacLimitNumRaisingThresholdAlarmClear, hwL2ProtclTnlStatisticsInputPkts=hwL2ProtclTnlStatisticsInputPkts, hwMacLimitRuleAction=hwMacLimitRuleAction, hwMacUsageRaisingThreshold=hwMacUsageRaisingThreshold, hwL2ProtclTnlEnableTagListLow=hwL2ProtclTnlEnableTagListLow, hwdbCfg3tupleFdbEntry=hwdbCfg3tupleFdbEntry, hwMacHopAlarmFallingThreshold=hwMacHopAlarmFallingThreshold, hwSlotMacLimitId=hwSlotMacLimitId, hwMacInfoQueryConditionDigitA=hwMacInfoQueryConditionDigitA, hwMacHopPortName3=hwMacHopPortName3, hwDynMacAddrQueryEntry=hwDynMacAddrQueryEntry, hwL2MAMCompliances=hwL2MAMCompliances, hwMacInfoQueryEntry=hwMacInfoQueryEntry, hwCfgMacAddrQueryTable=hwCfgMacAddrQueryTable)
mibBuilder.exportSymbols("HUAWEI-L2MAM-MIB", hwCfgMacAddrQueryIfIndex=hwCfgMacAddrQueryIfIndex, hwMacSlotStatisticsGroup=hwMacSlotStatisticsGroup, hwCfgMacAddrQueryConditionDigitB=hwCfgMacAddrQueryConditionDigitB, hwCfgMacAddrQueryVlanId=hwCfgMacAddrQueryVlanId, hwCfgFdbRowstatus=hwCfgFdbRowstatus, hwL2ProtclTnlCusProtclGroup=hwL2ProtclTnlCusProtclGroup, hwPstBroadcastLostAlarm=hwPstBroadcastLostAlarm, hwMacRestrict=hwMacRestrict, hwMacLimitPort=hwMacLimitPort, hwMacHopBdID=hwMacHopBdID, hwMacHopVlan=hwMacHopVlan, hwMacVlanStatisticsVlanId=hwMacVlanStatisticsVlanId, hwMacSpoofingDefend=hwMacSpoofingDefend, hwMacLimitRuleRowstatus=hwMacLimitRuleRowstatus, hwDynMacAddrQueryConditionDigitC=hwDynMacAddrQueryConditionDigitC, hwVLLACPortIndex=hwVLLACPortIndex, hwDynMacAddrQueryAgingTime=hwDynMacAddrQueryAgingTime, hwL2ProtocolTunnelTrapPortName=hwL2ProtocolTunnelTrapPortName, hwL2ProtclTnlStdEntry=hwL2ProtclTnlStdEntry, hwMacInfoQueryConditionMode=hwMacInfoQueryConditionMode, hwVplsOverGrePwId=hwVplsOverGrePwId, hwBdMacLimitOverThresholdAlarm=hwBdMacLimitOverThresholdAlarm, hwCfgMacAddrQueryConditionStringA=hwCfgMacAddrQueryConditionStringA, hwCfgMacAddrQueryPeVlanId=hwCfgMacAddrQueryPeVlanId, hwL2ProtclTnlEnableTable=hwL2ProtclTnlEnableTable, hwMacInfoQueryConditionStringB=hwMacInfoQueryConditionStringB, hwMacInfoQueryConditionStringC=hwMacInfoQueryConditionStringC, hwCfgFdbPort=hwCfgFdbPort, hwCfgFdbType=hwCfgFdbType, hwL2ProtclTnlCusRowStatus=hwL2ProtclTnlCusRowStatus, hwdbCfg3tupleFdbInPort=hwdbCfg3tupleFdbInPort, hwMacLimitRuleMaxRate=hwMacLimitRuleMaxRate, hwMacLimitRuleNumFallingThreshold=hwMacLimitRuleNumFallingThreshold, hwVplsOverGreVsiName=hwVplsOverGreVsiName, hwMacEntityUsageThreshold=hwMacEntityUsageThreshold, hwdbCfg3tupleFdbVlanId=hwdbCfg3tupleFdbVlanId, hwVplsOverGreEntry=hwVplsOverGreEntry, hwL2ProtclTnlStatisticsTable=hwL2ProtclTnlStatisticsTable, hwL2MacTraps=hwL2MacTraps, hwDynMacAddrQueryPeVlanId=hwDynMacAddrQueryPeVlanId, hwDynMacAddrQueryVsiName=hwDynMacAddrQueryVsiName, hwIfInputUnucFlowFallingThreshold=hwIfInputUnucFlowFallingThreshold, hwBdMacLimitOverThresholdAlarmResume=hwBdMacLimitOverThresholdAlarmResume, hwMacIfStatisticsTable=hwMacIfStatisticsTable, hwSlotMacLimitMaxRate=hwSlotMacLimitMaxRate, hwSlotMacLimitMaxMac=hwSlotMacLimitMaxMac, hwDynMacAddrQueryVpi=hwDynMacAddrQueryVpi, hwL2MAM=hwL2MAM, hwdbCfg3tupleFdbTable=hwdbCfg3tupleFdbTable, hwL2ProtclTnlEnableRowStatus=hwL2ProtclTnlEnableRowStatus, hwMacSlotStatisticsSpecify=hwMacSlotStatisticsSpecify, hwMacSecureAddressLearnNum=hwMacSecureAddressLearnNum, hwL2ProtclTnlEnableTagListHigh=hwL2ProtclTnlEnableTagListHigh, hwUntargetMacNumAlarm=hwUntargetMacNumAlarm, hwPwMacLimitTable=hwPwMacLimitTable, hwDynMacAddrQueryPeerIp=hwDynMacAddrQueryPeerIp, hwL2MACTrapGroups=hwL2MACTrapGroups, hwPwMacSpoofingAttackAlarmClear=hwPwMacSpoofingAttackAlarmClear, hwL2ProtocolTunnelDropThresholdFalling=hwL2ProtocolTunnelDropThresholdFalling, hwMacLimitEntry=hwMacLimitEntry, hwMacLimitApplyRuleName=hwMacLimitApplyRuleName, hwCfgMacAddrQueryVsiName=hwCfgMacAddrQueryVsiName)
