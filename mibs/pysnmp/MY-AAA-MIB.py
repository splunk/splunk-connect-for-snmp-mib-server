#
# PySNMP MIB module MY-AAA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MY-AAA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:06:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
myMgmt, = mibBuilder.importSymbols("MY-SMI", "myMgmt")
ConfigStatus, IfIndex = mibBuilder.importSymbols("MY-TC", "ConfigStatus", "IfIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
TimeTicks, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ObjectIdentity, NotificationType, IpAddress, ModuleIdentity, MibIdentifier, iso, Bits, Unsigned32, Integer32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ObjectIdentity", "NotificationType", "IpAddress", "ModuleIdentity", "MibIdentifier", "iso", "Bits", "Unsigned32", "Integer32", "Gauge32")
DisplayString, RowStatus, TextualConvention, MacAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "MacAddress", "TruthValue")
myAAAMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19))
myAAAMIB.setRevisions(('2002-03-20 00:00',))
if mibBuilder.loadTexts: myAAAMIB.setLastUpdated('200203200000Z')
if mibBuilder.loadTexts: myAAAMIB.setOrganization('D-Link Crop.')
myAAAMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1))
myDot1xAuthObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1))
myAAAServerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 2))
myAuthUserObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 3))
myAuthModeObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 4))
myClientProbeObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 5))
myDot1xAuthStatus = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 1), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myDot1xAuthStatus.setStatus('current')
myDot1xAuthObjectsQuietPeriod = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 2), Unsigned32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myDot1xAuthObjectsQuietPeriod.setStatus('current')
myDot1xAuthObjectsTxPeriod = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 3), Unsigned32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myDot1xAuthObjectsTxPeriod.setStatus('current')
myDot1xAuthObjectsSuppTimeout = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 4), Unsigned32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myDot1xAuthObjectsSuppTimeout.setStatus('current')
myDot1xAuthObjectsServerTimeout = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 5), Unsigned32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myDot1xAuthObjectsServerTimeout.setStatus('current')
myDot1xAuthObjectsMaxReq = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 6), Unsigned32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myDot1xAuthObjectsMaxReq.setStatus('current')
myDot1xAuthObjectsReAuthPeriod = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 7), Unsigned32().clone(3600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myDot1xAuthObjectsReAuthPeriod.setStatus('current')
myDot1xAuthObjectsMaxReauth = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 8), Unsigned32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myDot1xAuthObjectsMaxReauth.setStatus('current')
myDot1xAuthObjectsReAuthEnable = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 9), EnabledStatus().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myDot1xAuthObjectsReAuthEnable.setStatus('current')
myDot1xAuthObjectsConfigTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 10), )
if mibBuilder.loadTexts: myDot1xAuthObjectsConfigTable.setStatus('current')
myDot1xAuthObjectsConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 10, 1), ).setIndexNames((0, "MY-AAA-MIB", "myDot1xAuthObjectsConfigFdbId"), (0, "MY-AAA-MIB", "myDot1xAuthObjectsConfigAddr"))
if mibBuilder.loadTexts: myDot1xAuthObjectsConfigEntry.setStatus('current')
myDot1xAuthObjectsConfigFdbId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 10, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsConfigFdbId.setStatus('current')
myDot1xAuthObjectsConfigAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 10, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsConfigAddr.setStatus('current')
myDot1xAuthObjectsPaeState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initialize", 1), ("disconnected", 2), ("connecting", 3), ("authenticating", 4), ("authenticated", 5), ("aborting", 6), ("held", 7), ("forceAuth", 8), ("forceUnauth", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsPaeState.setStatus('current')
myDot1xAuthObjectsBackendAuthState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("request", 1), ("response", 2), ("success", 3), ("fail", 4), ("timeout", 5), ("idle", 6), ("initialize", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsBackendAuthState.setStatus('current')
myDot1xAuthObjectsAuthControlledPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("authorized", 1), ("unauthorized", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsAuthControlledPortStatus.setStatus('current')
myDot1xAuthObjectsKeyTxEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 10, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsKeyTxEnabled.setStatus('current')
myDot1xAuthObjectsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 10, 1, 7), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsIfIndex.setStatus('current')
myDot1xAuthObjectsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 11), )
if mibBuilder.loadTexts: myDot1xAuthObjectsStatsTable.setStatus('current')
myDot1xAuthStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 11, 1), ).setIndexNames((0, "MY-AAA-MIB", "myDot1xAuthObjectsStatsFdbId"), (0, "MY-AAA-MIB", "myDot1xAuthObjectsStatsAddr"))
if mibBuilder.loadTexts: myDot1xAuthStatsEntry.setStatus('current')
myDot1xAuthObjectsStatsFdbId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 11, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsStatsFdbId.setStatus('current')
myDot1xAuthObjectsStatsAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 11, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsStatsAddr.setStatus('current')
myDot1xAuthObjectsEapolFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsEapolFramesRx.setStatus('current')
myDot1xAuthObjectsEapolFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsEapolFramesTx.setStatus('current')
myDot1xAuthObjectsEapolMyFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsEapolMyFramesRx.setStatus('current')
myDot1xAuthObjectsEapolLogoffFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsEapolLogoffFramesRx.setStatus('current')
myDot1xAuthObjectsEapolRespIdFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsEapolRespIdFramesRx.setStatus('current')
myDot1xAuthObjectsEapolRespFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsEapolRespFramesRx.setStatus('current')
myDot1xAuthObjectsEapolReqIdFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsEapolReqIdFramesTx.setStatus('current')
myDot1xAuthObjectsEapolReqFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsEapolReqFramesTx.setStatus('current')
myDot1xAuthObjectsInvalidEapolFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 11, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsInvalidEapolFramesRx.setStatus('current')
myDot1xAuthObjectsEapLengthErrorFramesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 11, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsEapLengthErrorFramesRx.setStatus('current')
myDot1xAuthObjectsLastEapolFrameVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 11, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsLastEapolFrameVersion.setStatus('current')
myDot1xAuthObjectsLastEapolFrameSource = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 11, 1, 14), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xAuthObjectsLastEapolFrameSource.setStatus('current')
myDot1xCurrentUserNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xCurrentUserNumber.setStatus('current')
myDot1xCurrentAuthenticatedUserNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xCurrentAuthenticatedUserNumber.setStatus('current')
myDot1xAccountStatus = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 14), EnabledStatus().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myDot1xAccountStatus.setStatus('current')
myAuthIfTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 15), )
if mibBuilder.loadTexts: myAuthIfTable.setStatus('current')
myAuthIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 15, 1), ).setIndexNames((0, "MY-AAA-MIB", "myAuthIf"))
if mibBuilder.loadTexts: myAuthIfEntry.setStatus('current')
myAuthIf = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 15, 1, 1), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myAuthIf.setStatus('current')
myAuthIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 15, 1, 2), EnabledStatus().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myAuthIfStatus.setStatus('current')
myAuthenticationMode = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("eap-md5", 1), ("chap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myAuthenticationMode.setStatus('current')
myDot1xAccountUpdateStatus = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 17), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myDot1xAccountUpdateStatus.setStatus('current')
myDot1xAcctInterimInterval = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myDot1xAcctInterimInterval.setStatus('current')
myDot1xEapolTagEnabled = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 19), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myDot1xEapolTagEnabled.setStatus('current')
myDot1xIfUserMaxTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 20), )
if mibBuilder.loadTexts: myDot1xIfUserMaxTable.setStatus('current')
myDot1xIfUserMaxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 20, 1), ).setIndexNames((0, "MY-AAA-MIB", "myDot1xIfUserMaxIndex"))
if mibBuilder.loadTexts: myDot1xIfUserMaxEntry.setStatus('current')
myDot1xIfUserMaxIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 20, 1, 1), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myDot1xIfUserMaxIndex.setStatus('current')
myDot1xIfUserMaxNum = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 1, 20, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myDot1xIfUserMaxNum.setStatus('current')
myAAAServerAuthPort = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1812)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myAAAServerAuthPort.setStatus('current')
myAAAServerAcctPort = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1813)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myAAAServerAcctPort.setStatus('current')
myAAAServerRadiusKeyStr = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myAAAServerRadiusKeyStr.setStatus('current')
myAAAServerTacplusKeyStr = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 2, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myAAAServerTacplusKeyStr.setStatus('current')
myAAAServerConfigTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 2, 9), )
if mibBuilder.loadTexts: myAAAServerConfigTable.setStatus('current')
myAAAServerConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 2, 9, 1), ).setIndexNames((0, "MY-AAA-MIB", "myAAAServerConfigProtocol"), (0, "MY-AAA-MIB", "myAAAServerConfigIndex"))
if mibBuilder.loadTexts: myAAAServerConfigEntry.setStatus('current')
myAAAServerConfigProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 2, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("radius", 1), ("tacplus", 2))))
if mibBuilder.loadTexts: myAAAServerConfigProtocol.setStatus('current')
myAAAServerConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 2, 9, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: myAAAServerConfigIndex.setStatus('current')
myAAAServerConfigAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 2, 9, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: myAAAServerConfigAddressType.setStatus('current')
myAAAServerConfigAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 2, 9, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: myAAAServerConfigAddress.setStatus('current')
myAAAServerConfigAuthPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 2, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: myAAAServerConfigAuthPort.setStatus('current')
myAAAServerConfigAcctPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 2, 9, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: myAAAServerConfigAcctPort.setStatus('current')
myAAAServerConfigKeyStr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 2, 9, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: myAAAServerConfigKeyStr.setStatus('current')
myAAAServerConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 2, 9, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: myAAAServerConfigRowStatus.setStatus('current')
myAuthAddrTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 3, 1), )
if mibBuilder.loadTexts: myAuthAddrTable.setStatus('current')
myAuthAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 3, 1, 1), ).setIndexNames((0, "MY-AAA-MIB", "myAuthPort"), (0, "MY-AAA-MIB", "myAuthMacAddress"))
if mibBuilder.loadTexts: myAuthAddrEntry.setStatus('current')
myAuthPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 3, 1, 1, 1), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myAuthPort.setStatus('current')
myAuthMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 3, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myAuthMacAddress.setStatus('current')
myAuthAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myAuthAddrStatus.setStatus('current')
myAuthUserTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 3, 2), )
if mibBuilder.loadTexts: myAuthUserTable.setStatus('current')
myAuthUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 3, 2, 1), ).setIndexNames((0, "MY-AAA-MIB", "myAuthUserFdbId"), (0, "MY-AAA-MIB", "myAuthUserMacAddress"))
if mibBuilder.loadTexts: myAuthUserEntry.setStatus('current')
myAuthUserFdbId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 3, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myAuthUserFdbId.setStatus('current')
myAuthUserMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 3, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myAuthUserMacAddress.setStatus('current')
myAuthUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 3, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myAuthUserName.setStatus('current')
myAuthUserSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 3, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myAuthUserSessionId.setStatus('current')
myAuthUserIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 3, 2, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myAuthUserIpAddr.setStatus('current')
myAuthUserPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 3, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myAuthUserPort.setStatus('current')
myAuthUserStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 3, 2, 1, 7), ConfigStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myAuthUserStatus.setStatus('current')
myAuthUserForVPNDel = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 3, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myAuthUserForVPNDel.setStatus('current')
myIpAuthorizationMode = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disable", 1), ("dhcpServer", 2), ("radiusServer", 3), ("supplicant", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myIpAuthorizationMode.setStatus('current')
myClientProbeEnabledStatus = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 5, 1), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myClientProbeEnabledStatus.setStatus('current')
myClientProbeHelloInterval = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 5, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myClientProbeHelloInterval.setStatus('current')
myClientProbeAliveInteval = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 1, 5, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myClientProbeAliveInteval.setStatus('current')
myAAAMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 2))
myAAAMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 2, 1))
myAAAMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 2, 2))
myAAAMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 2, 1, 1)).setObjects(("MY-AAA-MIB", "myDot1xAuthMIBGroup"), ("MY-AAA-MIB", "myAAAServerMIBGroup"), ("MY-AAA-MIB", "myAuthAddrMIBGroup"), ("MY-AAA-MIB", "myAuthModeMIBGroup"), ("MY-AAA-MIB", "myClientProbeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myAAAMIBCompliance = myAAAMIBCompliance.setStatus('current')
myDot1xAuthMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 2, 2, 1)).setObjects(("MY-AAA-MIB", "myDot1xAuthStatus"), ("MY-AAA-MIB", "myDot1xAuthObjectsQuietPeriod"), ("MY-AAA-MIB", "myDot1xAuthObjectsTxPeriod"), ("MY-AAA-MIB", "myDot1xAuthObjectsSuppTimeout"), ("MY-AAA-MIB", "myDot1xAuthObjectsServerTimeout"), ("MY-AAA-MIB", "myDot1xAuthObjectsMaxReq"), ("MY-AAA-MIB", "myDot1xAuthObjectsReAuthPeriod"), ("MY-AAA-MIB", "myDot1xAuthObjectsReAuthEnable"), ("MY-AAA-MIB", "myDot1xAuthObjectsConfigFdbId"), ("MY-AAA-MIB", "myDot1xAuthObjectsConfigAddr"), ("MY-AAA-MIB", "myDot1xAuthObjectsPaeState"), ("MY-AAA-MIB", "myDot1xAuthObjectsBackendAuthState"), ("MY-AAA-MIB", "myDot1xAuthObjectsAuthControlledPortStatus"), ("MY-AAA-MIB", "myDot1xAuthObjectsKeyTxEnabled"), ("MY-AAA-MIB", "myDot1xAuthObjectsIfIndex"), ("MY-AAA-MIB", "myDot1xAuthObjectsStatsFdbId"), ("MY-AAA-MIB", "myDot1xAuthObjectsStatsAddr"), ("MY-AAA-MIB", "myDot1xAuthObjectsEapolFramesRx"), ("MY-AAA-MIB", "myDot1xAuthObjectsEapolFramesTx"), ("MY-AAA-MIB", "myDot1xAuthObjectsEapolMyFramesRx"), ("MY-AAA-MIB", "myDot1xAuthObjectsEapolLogoffFramesRx"), ("MY-AAA-MIB", "myDot1xAuthObjectsEapolRespIdFramesRx"), ("MY-AAA-MIB", "myDot1xAuthObjectsEapolRespFramesRx"), ("MY-AAA-MIB", "myDot1xAuthObjectsEapolReqIdFramesTx"), ("MY-AAA-MIB", "myDot1xAuthObjectsEapolReqFramesTx"), ("MY-AAA-MIB", "myDot1xAuthObjectsInvalidEapolFramesRx"), ("MY-AAA-MIB", "myDot1xAuthObjectsEapLengthErrorFramesRx"), ("MY-AAA-MIB", "myDot1xAuthObjectsLastEapolFrameVersion"), ("MY-AAA-MIB", "myDot1xAuthObjectsLastEapolFrameSource"), ("MY-AAA-MIB", "myDot1xCurrentUserNumber"), ("MY-AAA-MIB", "myDot1xCurrentAuthenticatedUserNumber"), ("MY-AAA-MIB", "myDot1xAuthObjectsMaxReauth"), ("MY-AAA-MIB", "myAuthIf"), ("MY-AAA-MIB", "myAuthIfStatus"), ("MY-AAA-MIB", "myAuthenticationMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myDot1xAuthMIBGroup = myDot1xAuthMIBGroup.setStatus('current')
myAAAServerMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 2, 2, 2)).setObjects(("MY-AAA-MIB", "myAAAServerAuthPort"), ("MY-AAA-MIB", "myAAAServerAcctPort"), ("MY-AAA-MIB", "myAAAServerRadiusKeyStr"), ("MY-AAA-MIB", "myAAAServerTacplusKeyStr"), ("MY-AAA-MIB", "myAAAServerConfigAddressType"), ("MY-AAA-MIB", "myAAAServerConfigAddress"), ("MY-AAA-MIB", "myAAAServerConfigAuthPort"), ("MY-AAA-MIB", "myAAAServerConfigAcctPort"), ("MY-AAA-MIB", "myAAAServerConfigKeyStr"), ("MY-AAA-MIB", "myAAAServerConfigRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myAAAServerMIBGroup = myAAAServerMIBGroup.setStatus('current')
myAuthAddrMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 2, 2, 3)).setObjects(("MY-AAA-MIB", "myAuthMacAddress"), ("MY-AAA-MIB", "myAuthPort"), ("MY-AAA-MIB", "myAuthAddrStatus"), ("MY-AAA-MIB", "myAuthUserFdbId"), ("MY-AAA-MIB", "myAuthUserMacAddress"), ("MY-AAA-MIB", "myAuthUserName"), ("MY-AAA-MIB", "myAuthUserSessionId"), ("MY-AAA-MIB", "myAuthUserIpAddr"), ("MY-AAA-MIB", "myAuthUserPort"), ("MY-AAA-MIB", "myAuthUserStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myAuthAddrMIBGroup = myAuthAddrMIBGroup.setStatus('current')
myAuthModeMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 2, 2, 4)).setObjects(("MY-AAA-MIB", "myIpAuthorizationMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myAuthModeMIBGroup = myAuthModeMIBGroup.setStatus('current')
myClientProbeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 19, 2, 2, 5)).setObjects(("MY-AAA-MIB", "myClientProbeEnabledStatus"), ("MY-AAA-MIB", "myClientProbeHelloInterval"), ("MY-AAA-MIB", "myClientProbeAliveInteval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myClientProbeGroup = myClientProbeGroup.setStatus('current')
mibBuilder.exportSymbols("MY-AAA-MIB", myDot1xAuthObjectsIfIndex=myDot1xAuthObjectsIfIndex, myDot1xAuthObjectsStatsFdbId=myDot1xAuthObjectsStatsFdbId, myAuthUserIpAddr=myAuthUserIpAddr, myDot1xAcctInterimInterval=myDot1xAcctInterimInterval, myAAAServerConfigRowStatus=myAAAServerConfigRowStatus, myAuthenticationMode=myAuthenticationMode, myAAAMIBCompliances=myAAAMIBCompliances, myDot1xAuthObjectsConfigAddr=myDot1xAuthObjectsConfigAddr, myDot1xAuthObjectsPaeState=myDot1xAuthObjectsPaeState, myAAAServerConfigEntry=myAAAServerConfigEntry, myDot1xAuthObjectsInvalidEapolFramesRx=myDot1xAuthObjectsInvalidEapolFramesRx, myDot1xAuthObjectsEapolReqFramesTx=myDot1xAuthObjectsEapolReqFramesTx, myDot1xAuthStatus=myDot1xAuthStatus, myClientProbeGroup=myClientProbeGroup, myDot1xAuthObjectsConfigTable=myDot1xAuthObjectsConfigTable, myAAAMIBObjects=myAAAMIBObjects, myDot1xAuthObjectsEapolRespFramesRx=myDot1xAuthObjectsEapolRespFramesRx, myAAAMIBGroups=myAAAMIBGroups, myDot1xAuthObjectsEapolMyFramesRx=myDot1xAuthObjectsEapolMyFramesRx, myAAAServerAcctPort=myAAAServerAcctPort, myDot1xAuthObjectsServerTimeout=myDot1xAuthObjectsServerTimeout, myAuthIfTable=myAuthIfTable, myAuthUserEntry=myAuthUserEntry, myDot1xAuthObjectsQuietPeriod=myDot1xAuthObjectsQuietPeriod, myAAAServerConfigIndex=myAAAServerConfigIndex, myClientProbeAliveInteval=myClientProbeAliveInteval, myDot1xAuthObjectsKeyTxEnabled=myDot1xAuthObjectsKeyTxEnabled, myAuthUserSessionId=myAuthUserSessionId, myAuthUserObjects=myAuthUserObjects, myDot1xAccountUpdateStatus=myDot1xAccountUpdateStatus, myAAAServerConfigKeyStr=myAAAServerConfigKeyStr, myDot1xAuthObjectsEapolLogoffFramesRx=myDot1xAuthObjectsEapolLogoffFramesRx, myDot1xAuthObjectsEapolReqIdFramesTx=myDot1xAuthObjectsEapolReqIdFramesTx, myAuthUserMacAddress=myAuthUserMacAddress, myDot1xAuthObjectsEapolFramesRx=myDot1xAuthObjectsEapolFramesRx, myAAAServerConfigAddress=myAAAServerConfigAddress, myAuthUserTable=myAuthUserTable, myAAAServerConfigTable=myAAAServerConfigTable, myDot1xAuthObjects=myDot1xAuthObjects, myAAAServerObjects=myAAAServerObjects, myAuthAddrStatus=myAuthAddrStatus, myIpAuthorizationMode=myIpAuthorizationMode, myAuthUserFdbId=myAuthUserFdbId, myDot1xAuthObjectsSuppTimeout=myDot1xAuthObjectsSuppTimeout, myAuthModeObjects=myAuthModeObjects, myAuthUserStatus=myAuthUserStatus, myAAAMIBCompliance=myAAAMIBCompliance, myAuthPort=myAuthPort, myAuthMacAddress=myAuthMacAddress, myDot1xAuthObjectsAuthControlledPortStatus=myDot1xAuthObjectsAuthControlledPortStatus, myDot1xAuthObjectsStatsTable=myDot1xAuthObjectsStatsTable, myDot1xCurrentUserNumber=myDot1xCurrentUserNumber, myDot1xAuthObjectsConfigFdbId=myDot1xAuthObjectsConfigFdbId, myDot1xIfUserMaxNum=myDot1xIfUserMaxNum, myAuthIfEntry=myAuthIfEntry, PYSNMP_MODULE_ID=myAAAMIB, myAuthAddrTable=myAuthAddrTable, myAuthUserName=myAuthUserName, myDot1xAuthObjectsMaxReq=myDot1xAuthObjectsMaxReq, myClientProbeObjects=myClientProbeObjects, myDot1xAuthObjectsTxPeriod=myDot1xAuthObjectsTxPeriod, myDot1xAuthObjectsEapolRespIdFramesRx=myDot1xAuthObjectsEapolRespIdFramesRx, myDot1xAuthObjectsStatsAddr=myDot1xAuthObjectsStatsAddr, myDot1xAuthMIBGroup=myDot1xAuthMIBGroup, myDot1xAuthObjectsBackendAuthState=myDot1xAuthObjectsBackendAuthState, myAAAServerRadiusKeyStr=myAAAServerRadiusKeyStr, myAAAServerMIBGroup=myAAAServerMIBGroup, myDot1xCurrentAuthenticatedUserNumber=myDot1xCurrentAuthenticatedUserNumber, myDot1xAuthObjectsEapLengthErrorFramesRx=myDot1xAuthObjectsEapLengthErrorFramesRx, myAuthIfStatus=myAuthIfStatus, myAuthUserPort=myAuthUserPort, myAAAServerConfigAddressType=myAAAServerConfigAddressType, myAuthAddrEntry=myAuthAddrEntry, myAuthUserForVPNDel=myAuthUserForVPNDel, myAAAMIBConformance=myAAAMIBConformance, myDot1xAuthObjectsConfigEntry=myDot1xAuthObjectsConfigEntry, myClientProbeEnabledStatus=myClientProbeEnabledStatus, myAuthAddrMIBGroup=myAuthAddrMIBGroup, myDot1xAuthStatsEntry=myDot1xAuthStatsEntry, myAAAServerAuthPort=myAAAServerAuthPort, myDot1xIfUserMaxEntry=myDot1xIfUserMaxEntry, myClientProbeHelloInterval=myClientProbeHelloInterval, myAAAMIB=myAAAMIB, myDot1xAuthObjectsLastEapolFrameVersion=myDot1xAuthObjectsLastEapolFrameVersion, myDot1xAuthObjectsEapolFramesTx=myDot1xAuthObjectsEapolFramesTx, myDot1xIfUserMaxTable=myDot1xIfUserMaxTable, myDot1xAuthObjectsReAuthPeriod=myDot1xAuthObjectsReAuthPeriod, myDot1xAuthObjectsMaxReauth=myDot1xAuthObjectsMaxReauth, myAAAServerConfigAuthPort=myAAAServerConfigAuthPort, myAAAServerConfigAcctPort=myAAAServerConfigAcctPort, myDot1xAuthObjectsLastEapolFrameSource=myDot1xAuthObjectsLastEapolFrameSource, myAuthIf=myAuthIf, myDot1xAuthObjectsReAuthEnable=myDot1xAuthObjectsReAuthEnable, myAAAServerTacplusKeyStr=myAAAServerTacplusKeyStr, myAuthModeMIBGroup=myAuthModeMIBGroup, myAAAServerConfigProtocol=myAAAServerConfigProtocol, myDot1xIfUserMaxIndex=myDot1xIfUserMaxIndex, myDot1xAccountStatus=myDot1xAccountStatus, myDot1xEapolTagEnabled=myDot1xEapolTagEnabled)
