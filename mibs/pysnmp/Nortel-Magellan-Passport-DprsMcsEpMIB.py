#
# PySNMP MIB module Nortel-Magellan-Passport-DprsMcsEpMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-DprsMcsEpMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:17:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
mcsMgrIndex, mcsMgr = mibBuilder.importSymbols("Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex", "mcsMgr")
DisplayString, Counter32, StorageType, Integer32, RowStatus, PassportCounter64, Unsigned32, Gauge32, RowPointer = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "DisplayString", "Counter32", "StorageType", "Integer32", "RowStatus", "PassportCounter64", "Unsigned32", "Gauge32", "RowPointer")
NonReplicated, AsciiString, Link, HexString, EnterpriseDateAndTime = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "NonReplicated", "AsciiString", "Link", "HexString", "EnterpriseDateAndTime")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, Bits, Counter32, TimeTicks, ModuleIdentity, Unsigned32, Counter64, NotificationType, MibIdentifier, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "Counter32", "TimeTicks", "ModuleIdentity", "Unsigned32", "Counter64", "NotificationType", "MibIdentifier", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "IpAddress", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
dprsMcsEpMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 125))
mcsMgrDprsMcsEpG = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2))
mcsMgrDprsMcsEpGRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 1), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGRowStatusTable.setStatus('mandatory')
mcsMgrDprsMcsEpGRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGRowStatusEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGRowStatus.setStatus('mandatory')
mcsMgrDprsMcsEpGComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGComponentName.setStatus('mandatory')
mcsMgrDprsMcsEpGStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGStorageType.setStatus('mandatory')
mcsMgrDprsMcsEpGIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191)))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGIndex.setStatus('mandatory')
mcsMgrDprsMcsEpGOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 10), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGOperTable.setStatus('mandatory')
mcsMgrDprsMcsEpGOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGOperEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 44))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGRemoteAddress.setStatus('mandatory')
mcsMgrDprsMcsEpGAssociatedEpGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 10, 1, 2), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGAssociatedEpGroupName.setStatus('mandatory')
mcsMgrDprsMcsEpGAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 2))
mcsMgrDprsMcsEpGAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 2, 1), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGAddrRowStatusTable.setStatus('mandatory')
mcsMgrDprsMcsEpGAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGAddrIndex"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGAddrRowStatusEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGAddrRowStatus.setStatus('mandatory')
mcsMgrDprsMcsEpGAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGAddrComponentName.setStatus('mandatory')
mcsMgrDprsMcsEpGAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGAddrStorageType.setStatus('mandatory')
mcsMgrDprsMcsEpGAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGAddrIndex.setStatus('mandatory')
mcsMgrDprsMcsEpGAddrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 2, 10), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGAddrProvTable.setStatus('mandatory')
mcsMgrDprsMcsEpGAddrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGAddrIndex"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGAddrProvEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGAddrRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 44))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGAddrRemoteAddress.setStatus('mandatory')
mcsMgrDprsMcsEpGAddrCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 2, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 60)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGAddrCommentText.setStatus('mandatory')
mcsMgrDprsMcsEpGEp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3))
mcsMgrDprsMcsEpGEpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 1), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpRowStatusTable.setStatus('mandatory')
mcsMgrDprsMcsEpGEpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpIndex"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpRowStatusEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGEpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpRowStatus.setStatus('mandatory')
mcsMgrDprsMcsEpGEpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpComponentName.setStatus('mandatory')
mcsMgrDprsMcsEpGEpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpStorageType.setStatus('mandatory')
mcsMgrDprsMcsEpGEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpIndex.setStatus('mandatory')
mcsMgrDprsMcsEpGEpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 10), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpStateTable.setStatus('mandatory')
mcsMgrDprsMcsEpGEpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpIndex"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpStateEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGEpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpAdminState.setStatus('mandatory')
mcsMgrDprsMcsEpGEpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpOperationalState.setStatus('mandatory')
mcsMgrDprsMcsEpGEpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpUsageState.setStatus('mandatory')
mcsMgrDprsMcsEpGEpAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpAvailabilityStatus.setStatus('mandatory')
mcsMgrDprsMcsEpGEpProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpProceduralStatus.setStatus('mandatory')
mcsMgrDprsMcsEpGEpControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpControlStatus.setStatus('mandatory')
mcsMgrDprsMcsEpGEpAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 10, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpAlarmStatus.setStatus('mandatory')
mcsMgrDprsMcsEpGEpStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpStandbyStatus.setStatus('mandatory')
mcsMgrDprsMcsEpGEpUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpUnknownStatus.setStatus('mandatory')
mcsMgrDprsMcsEpGEpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 11), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpOperTable.setStatus('mandatory')
mcsMgrDprsMcsEpGEpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpIndex"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpOperEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLastTransportConnectionClearCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLastTransportConnectionClearCause.setStatus('mandatory')
mcsMgrDprsMcsEpGEpType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("originating", 0), ("terminating", 1))).clone('originating')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpType.setStatus('mandatory')
mcsMgrDprsMcsEpGEpSupportedTransferPriorities = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 11, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpSupportedTransferPriorities.setStatus('mandatory')
mcsMgrDprsMcsEpGEpConnectionTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpConnectionTransferPriority.setStatus('mandatory')
mcsMgrDprsMcsEpGEpServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ubr", 0), ("cbr", 1), ("rtVbr", 2), ("nrtVbr", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpServiceCategory.setStatus('mandatory')
mcsMgrDprsMcsEpGEpBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 11, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 155000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpBandwidth.setStatus('mandatory')
mcsMgrDprsMcsEpGEpRemoteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 11, 1, 9), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpRemoteComponentName.setStatus('mandatory')
mcsMgrDprsMcsEpGEpRemoteRoutingId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 11, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 126))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpRemoteRoutingId.setStatus('mandatory')
mcsMgrDprsMcsEpGEpRemoteModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 11, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1909))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpRemoteModuleId.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLastTrConnDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 11, 1, 12), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLastTrConnDiagCode.setStatus('mandatory')
mcsMgrDprsMcsEpGEpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 12), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpStatsTable.setStatus('mandatory')
mcsMgrDprsMcsEpGEpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpIndex"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpStatsEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGEpSetupAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpSetupAttempts.setStatus('mandatory')
mcsMgrDprsMcsEpGEpPktDiscErroredFromMcs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpPktDiscErroredFromMcs.setStatus('mandatory')
mcsMgrDprsMcsEpGEpPktFromMcsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 402), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpPktFromMcsTable.setStatus('mandatory')
mcsMgrDprsMcsEpGEpPktFromMcsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 402, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpPktFromMcsIndex"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpPktFromMcsEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGEpPktFromMcsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 402, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("discardPriority0", 0), ("discardPriority1", 1), ("discardPriority2", 2), ("discardPriority3", 3))))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpPktFromMcsIndex.setStatus('mandatory')
mcsMgrDprsMcsEpGEpPktFromMcsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 402, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpPktFromMcsValue.setStatus('mandatory')
mcsMgrDprsMcsEpGEpOctetsFromMcsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 403), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpOctetsFromMcsTable.setStatus('mandatory')
mcsMgrDprsMcsEpGEpOctetsFromMcsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 403, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpOctetsFromMcsIndex"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpOctetsFromMcsEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGEpOctetsFromMcsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 403, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("discardPriority0", 0), ("discardPriority1", 1), ("discardPriority2", 2), ("discardPriority3", 3))))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpOctetsFromMcsIndex.setStatus('mandatory')
mcsMgrDprsMcsEpGEpOctetsFromMcsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 403, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpOctetsFromMcsValue.setStatus('mandatory')
mcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 404), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsTable.setStatus('mandatory')
mcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 404, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsIndex"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 404, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("discardPriority0", 0), ("discardPriority1", 1), ("discardPriority2", 2), ("discardPriority3", 3))))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsIndex.setStatus('mandatory')
mcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 404, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsValue.setStatus('mandatory')
mcsMgrDprsMcsEpGEpEpD = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 2))
mcsMgrDprsMcsEpGEpEpDRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 2, 1), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpEpDRowStatusTable.setStatus('mandatory')
mcsMgrDprsMcsEpGEpEpDRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpEpDIndex"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpEpDRowStatusEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGEpEpDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpEpDRowStatus.setStatus('mandatory')
mcsMgrDprsMcsEpGEpEpDComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpEpDComponentName.setStatus('mandatory')
mcsMgrDprsMcsEpGEpEpDStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpEpDStorageType.setStatus('mandatory')
mcsMgrDprsMcsEpGEpEpDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpEpDIndex.setStatus('mandatory')
mcsMgrDprsMcsEpGEpEpDProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 2, 10), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpEpDProvTable.setStatus('mandatory')
mcsMgrDprsMcsEpGEpEpDProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpEpDIndex"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpEpDProvEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGEpEpDBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(56000, 155000000)).clone(512000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpEpDBandwidth.setStatus('mandatory')
mcsMgrDprsMcsEpGEpEpDConnectionTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpEpDConnectionTransferPriority.setStatus('mandatory')
mcsMgrDprsMcsEpGEpEpDTransportConnectionPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("atmOnly", 1), ("porsOnly", 3))).clone('porsOnly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpEpDTransportConnectionPreference.setStatus('mandatory')
mcsMgrDprsMcsEpGEpEpDProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 2, 10, 1, 4), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpEpDProfile.setStatus('mandatory')
mcsMgrDprsMcsEpGEpEpDPorsManualPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 2, 10, 1, 5), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpEpDPorsManualPath.setStatus('mandatory')
mcsMgrDprsMcsEpGEpEpDSupportedTransferPriorities = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 2, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2).clone(hexValue="8000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpEpDSupportedTransferPriorities.setStatus('mandatory')
mcsMgrDprsMcsEpGEpAtmCon = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 3))
mcsMgrDprsMcsEpGEpAtmConRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 3, 1), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpAtmConRowStatusTable.setStatus('mandatory')
mcsMgrDprsMcsEpGEpAtmConRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpAtmConIndex"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpAtmConRowStatusEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGEpAtmConRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpAtmConRowStatus.setStatus('mandatory')
mcsMgrDprsMcsEpGEpAtmConComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpAtmConComponentName.setStatus('mandatory')
mcsMgrDprsMcsEpGEpAtmConStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpAtmConStorageType.setStatus('mandatory')
mcsMgrDprsMcsEpGEpAtmConIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpAtmConIndex.setStatus('mandatory')
mcsMgrDprsMcsEpGEpAtmConOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 3, 10), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpAtmConOperTable.setStatus('mandatory')
mcsMgrDprsMcsEpGEpAtmConOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpAtmConIndex"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpAtmConOperEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGEpAtmConNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 3, 10, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpAtmConNextHop.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4))
mcsMgrDprsMcsEpGEpLCoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 1), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoRowStatusTable.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpLCoIndex"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoRowStatusEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoRowStatus.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoComponentName.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoStorageType.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoIndex.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoPathDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoPathDataTable.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoPathDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpLCoIndex"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoPathDataEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("pathDown", 0), ("selectingRoute", 1), ("connecting", 2), ("pathUp", 3), ("pathDownRetrying", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoState.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoOverrideRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoOverrideRemoteName.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("calling", 0), ("called", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoEnd.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoCostMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoCostMetric.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoDelayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoDelayMetric.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoRoundTripDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoRoundTripDelay.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoSetupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoSetupPriority.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoHoldingPriority.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoRequiredTxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoRequiredTxBandwidth.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoRequiredRxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoRequiredRxBandwidth.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoRequiredTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("voice", 0), ("data", 1), ("video", 2), ("trafficType1", 3), ("trafficType2", 4), ("trafficType3", 5), ("trafficType4", 6), ("trafficType5", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoRequiredTrafficType.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoPermittedTrunkTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoPermittedTrunkTypes.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoRequiredSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoRequiredSecurity.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoRequiredCustomerParameter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoRequiredCustomerParameter.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoEmissionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoEmissionPriority.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoDiscardPriority.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoPathType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("manual", 1), ("forced", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoPathType.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoRetryCount.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoPathFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoPathFailureCount.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoReasonForNoRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("none", 0), ("destinationNameTooLong", 1), ("destinationNotSpecified", 2), ("unknownDestinationName", 3), ("incorrectDestination", 4), ("incorrectDestinationEndPoint", 5), ("unknownSource", 6), ("unknownDestination", 7), ("sameNode", 8), ("routeCostTooMuch", 9), ("routesDelayTooLong", 10), ("attributesNotMet", 11), ("anError", 12), ("attributeProfileProblem", 13), ("manualPathIndexProblem", 14))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoReasonForNoRoute.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoLastTearDownReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("none", 0), ("normalShutDown", 1), ("insufficientTxLcOrBandwidth", 2), ("insufficientRxLcOrBandwidth", 3), ("trunkFailure", 4), ("trunkCardFailure", 5), ("operatorForced", 6), ("lostLcnClash", 7), ("networkCongestion", 8), ("trunkNotFound", 9), ("farEndNotFound", 10), ("wrongModuleReached", 11), ("farEndBusy", 12), ("callLoopedBack", 13), ("unknownReason", 14), ("farEndNotReady", 15), ("remoteNameMismatch", 16), ("serviceTypeMismatch", 17), ("reconnectFromFarEnd", 18), ("bumped", 19), ("accessCardFailure", 20), ("optimized", 21), ("overrideRemoteName", 22), ("trunkOrFarEndDidNotSupportMode", 23))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoLastTearDownReason.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoPathFailureAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disconnectConnection", 0), ("reRoutePath", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoPathFailureAction.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoBumpPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bumpWhenNecessary", 0), ("bumpToObtainBestRoute", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoBumpPreference.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoOptimization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoOptimization.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoPathUpDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 10, 1, 25), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoPathUpDateTime.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 11), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoStatsTable.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpLCoIndex"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoStatsEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoPktsToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 11, 1, 1), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoPktsToNetwork.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoBytesToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 11, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoBytesToNetwork.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoPktsFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 11, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoPktsFromNetwork.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoBytesFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 11, 1, 4), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoBytesFromNetwork.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoPathTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 264), )
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoPathTable.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 264, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-McsMgrMIB", "mcsMgrIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpLCoIndex"), (0, "Nortel-Magellan-Passport-DprsMcsEpMIB", "mcsMgrDprsMcsEpGEpLCoPathValue"))
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoPathEntry.setStatus('mandatory')
mcsMgrDprsMcsEpGEpLCoPathValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 122, 2, 3, 4, 264, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcsMgrDprsMcsEpGEpLCoPathValue.setStatus('mandatory')
dprsMcsEpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 125, 1))
dprsMcsEpGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 125, 1, 5))
dprsMcsEpGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 125, 1, 5, 2))
dprsMcsEpGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 125, 1, 5, 2, 2))
dprsMcsEpCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 125, 3))
dprsMcsEpCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 125, 3, 5))
dprsMcsEpCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 125, 3, 5, 2))
dprsMcsEpCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 125, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-DprsMcsEpMIB", mcsMgrDprsMcsEpGEpLCoPktsFromNetwork=mcsMgrDprsMcsEpGEpLCoPktsFromNetwork, mcsMgrDprsMcsEpGEpAdminState=mcsMgrDprsMcsEpGEpAdminState, mcsMgrDprsMcsEpGEpEpDSupportedTransferPriorities=mcsMgrDprsMcsEpGEpEpDSupportedTransferPriorities, mcsMgrDprsMcsEpGEpAtmConRowStatus=mcsMgrDprsMcsEpGEpAtmConRowStatus, mcsMgrDprsMcsEpGEpLCoPathDataTable=mcsMgrDprsMcsEpGEpLCoPathDataTable, mcsMgrDprsMcsEpGAddrIndex=mcsMgrDprsMcsEpGAddrIndex, mcsMgrDprsMcsEpGEpAtmConOperTable=mcsMgrDprsMcsEpGEpAtmConOperTable, dprsMcsEpCapabilitiesBE=dprsMcsEpCapabilitiesBE, mcsMgrDprsMcsEpGEpUnknownStatus=mcsMgrDprsMcsEpGEpUnknownStatus, mcsMgrDprsMcsEpGEpEpDRowStatusTable=mcsMgrDprsMcsEpGEpEpDRowStatusTable, mcsMgrDprsMcsEpGEpAlarmStatus=mcsMgrDprsMcsEpGEpAlarmStatus, mcsMgrDprsMcsEpGAddrRowStatusTable=mcsMgrDprsMcsEpGAddrRowStatusTable, mcsMgrDprsMcsEpGEpRowStatusTable=mcsMgrDprsMcsEpGEpRowStatusTable, mcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsIndex=mcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsIndex, mcsMgrDprsMcsEpGEpLCoCostMetric=mcsMgrDprsMcsEpGEpLCoCostMetric, mcsMgrDprsMcsEpGEpEpD=mcsMgrDprsMcsEpGEpEpD, mcsMgrDprsMcsEpGIndex=mcsMgrDprsMcsEpGIndex, dprsMcsEpCapabilities=dprsMcsEpCapabilities, mcsMgrDprsMcsEpGEpAtmConRowStatusTable=mcsMgrDprsMcsEpGEpAtmConRowStatusTable, mcsMgrDprsMcsEpGEpLCoPathFailureCount=mcsMgrDprsMcsEpGEpLCoPathFailureCount, mcsMgrDprsMcsEpGEpLastTrConnDiagCode=mcsMgrDprsMcsEpGEpLastTrConnDiagCode, mcsMgrDprsMcsEpGEpOctetsFromMcsIndex=mcsMgrDprsMcsEpGEpOctetsFromMcsIndex, mcsMgrDprsMcsEpGEpLCoPktsToNetwork=mcsMgrDprsMcsEpGEpLCoPktsToNetwork, mcsMgrDprsMcsEpGEpAtmConIndex=mcsMgrDprsMcsEpGEpAtmConIndex, mcsMgrDprsMcsEpGEpLCoRequiredTxBandwidth=mcsMgrDprsMcsEpGEpLCoRequiredTxBandwidth, mcsMgrDprsMcsEpGEpOctetsFromMcsValue=mcsMgrDprsMcsEpGEpOctetsFromMcsValue, mcsMgrDprsMcsEpGEpEpDComponentName=mcsMgrDprsMcsEpGEpEpDComponentName, mcsMgrDprsMcsEpGEpControlStatus=mcsMgrDprsMcsEpGEpControlStatus, mcsMgrDprsMcsEpGEpLCoRetryCount=mcsMgrDprsMcsEpGEpLCoRetryCount, mcsMgrDprsMcsEpGEpStorageType=mcsMgrDprsMcsEpGEpStorageType, dprsMcsEpGroupBE=dprsMcsEpGroupBE, mcsMgrDprsMcsEpGAddrRowStatusEntry=mcsMgrDprsMcsEpGAddrRowStatusEntry, mcsMgrDprsMcsEpGEpStateTable=mcsMgrDprsMcsEpGEpStateTable, dprsMcsEpMIB=dprsMcsEpMIB, mcsMgrDprsMcsEpGAssociatedEpGroupName=mcsMgrDprsMcsEpGAssociatedEpGroupName, mcsMgrDprsMcsEpGEpOctetsFromMcsTable=mcsMgrDprsMcsEpGEpOctetsFromMcsTable, dprsMcsEpGroup=dprsMcsEpGroup, mcsMgrDprsMcsEpGEpOperationalState=mcsMgrDprsMcsEpGEpOperationalState, mcsMgrDprsMcsEpGStorageType=mcsMgrDprsMcsEpGStorageType, mcsMgrDprsMcsEpGEpEpDConnectionTransferPriority=mcsMgrDprsMcsEpGEpEpDConnectionTransferPriority, dprsMcsEpGroupBE01=dprsMcsEpGroupBE01, dprsMcsEpCapabilitiesBE01A=dprsMcsEpCapabilitiesBE01A, mcsMgrDprsMcsEpGAddrRemoteAddress=mcsMgrDprsMcsEpGAddrRemoteAddress, mcsMgrDprsMcsEpGEpOperTable=mcsMgrDprsMcsEpGEpOperTable, mcsMgrDprsMcsEpGEpLCoBumpPreference=mcsMgrDprsMcsEpGEpLCoBumpPreference, mcsMgrDprsMcsEpGEpEpDPorsManualPath=mcsMgrDprsMcsEpGEpEpDPorsManualPath, mcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsValue=mcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsValue, mcsMgrDprsMcsEpGComponentName=mcsMgrDprsMcsEpGComponentName, mcsMgrDprsMcsEpGEpLCoPermittedTrunkTypes=mcsMgrDprsMcsEpGEpLCoPermittedTrunkTypes, mcsMgrDprsMcsEpGEpAtmConComponentName=mcsMgrDprsMcsEpGEpAtmConComponentName, mcsMgrDprsMcsEpGEpLCoHoldingPriority=mcsMgrDprsMcsEpGEpLCoHoldingPriority, mcsMgrDprsMcsEpGEpOperEntry=mcsMgrDprsMcsEpGEpOperEntry, mcsMgrDprsMcsEpGAddrStorageType=mcsMgrDprsMcsEpGAddrStorageType, mcsMgrDprsMcsEpGRemoteAddress=mcsMgrDprsMcsEpGRemoteAddress, mcsMgrDprsMcsEpGEpStateEntry=mcsMgrDprsMcsEpGEpStateEntry, mcsMgrDprsMcsEpGEpEpDProfile=mcsMgrDprsMcsEpGEpEpDProfile, mcsMgrDprsMcsEpGEpLCoRowStatusEntry=mcsMgrDprsMcsEpGEpLCoRowStatusEntry, mcsMgrDprsMcsEpGEpLCoPathEntry=mcsMgrDprsMcsEpGEpLCoPathEntry, mcsMgrDprsMcsEpGEpEpDStorageType=mcsMgrDprsMcsEpGEpEpDStorageType, mcsMgrDprsMcsEpGEpLCoReasonForNoRoute=mcsMgrDprsMcsEpGEpLCoReasonForNoRoute, mcsMgrDprsMcsEpGEpLCoRequiredCustomerParameter=mcsMgrDprsMcsEpGEpLCoRequiredCustomerParameter, mcsMgrDprsMcsEpGEpLCoDiscardPriority=mcsMgrDprsMcsEpGEpLCoDiscardPriority, dprsMcsEpCapabilitiesBE01=dprsMcsEpCapabilitiesBE01, mcsMgrDprsMcsEpGEpUsageState=mcsMgrDprsMcsEpGEpUsageState, mcsMgrDprsMcsEpGEpLCoBytesFromNetwork=mcsMgrDprsMcsEpGEpLCoBytesFromNetwork, mcsMgrDprsMcsEpGAddrCommentText=mcsMgrDprsMcsEpGAddrCommentText, mcsMgrDprsMcsEpGEpSetupAttempts=mcsMgrDprsMcsEpGEpSetupAttempts, mcsMgrDprsMcsEpGAddrProvEntry=mcsMgrDprsMcsEpGAddrProvEntry, mcsMgrDprsMcsEpGEpAtmConNextHop=mcsMgrDprsMcsEpGEpAtmConNextHop, mcsMgrDprsMcsEpGEpEpDRowStatusEntry=mcsMgrDprsMcsEpGEpEpDRowStatusEntry, mcsMgrDprsMcsEpGEpLCoComponentName=mcsMgrDprsMcsEpGEpLCoComponentName, mcsMgrDprsMcsEpGEpLCoRequiredTrafficType=mcsMgrDprsMcsEpGEpLCoRequiredTrafficType, mcsMgrDprsMcsEpGEpEpDProvEntry=mcsMgrDprsMcsEpGEpEpDProvEntry, mcsMgrDprsMcsEpGEpIndex=mcsMgrDprsMcsEpGEpIndex, mcsMgrDprsMcsEpGEpRemoteComponentName=mcsMgrDprsMcsEpGEpRemoteComponentName, mcsMgrDprsMcsEpGEpOctetsFromMcsEntry=mcsMgrDprsMcsEpGEpOctetsFromMcsEntry, mcsMgrDprsMcsEpGAddrComponentName=mcsMgrDprsMcsEpGAddrComponentName, mcsMgrDprsMcsEpGEpAtmCon=mcsMgrDprsMcsEpGEpAtmCon, mcsMgrDprsMcsEpGEpLCoIndex=mcsMgrDprsMcsEpGEpLCoIndex, mcsMgrDprsMcsEpGEpLCoStatsEntry=mcsMgrDprsMcsEpGEpLCoStatsEntry, mcsMgrDprsMcsEpGEpPktFromMcsIndex=mcsMgrDprsMcsEpGEpPktFromMcsIndex, mcsMgrDprsMcsEpGEpPktFromMcsValue=mcsMgrDprsMcsEpGEpPktFromMcsValue, mcsMgrDprsMcsEpGEpLCoLastTearDownReason=mcsMgrDprsMcsEpGEpLCoLastTearDownReason, mcsMgrDprsMcsEpGEpPktFromMcsTable=mcsMgrDprsMcsEpGEpPktFromMcsTable, mcsMgrDprsMcsEpGEpEpDProvTable=mcsMgrDprsMcsEpGEpEpDProvTable, mcsMgrDprsMcsEpGEpEpDBandwidth=mcsMgrDprsMcsEpGEpEpDBandwidth, mcsMgrDprsMcsEpGEpRemoteRoutingId=mcsMgrDprsMcsEpGEpRemoteRoutingId, mcsMgrDprsMcsEpGEpLCoRoundTripDelay=mcsMgrDprsMcsEpGEpLCoRoundTripDelay, mcsMgrDprsMcsEpGEpLCoRequiredSecurity=mcsMgrDprsMcsEpGEpLCoRequiredSecurity, mcsMgrDprsMcsEpGEpLCoRowStatus=mcsMgrDprsMcsEpGEpLCoRowStatus, mcsMgrDprsMcsEpGOperTable=mcsMgrDprsMcsEpGOperTable, mcsMgrDprsMcsEpGEpType=mcsMgrDprsMcsEpGEpType, mcsMgrDprsMcsEpGEpLCo=mcsMgrDprsMcsEpGEpLCo, mcsMgrDprsMcsEpGEpLCoStorageType=mcsMgrDprsMcsEpGEpLCoStorageType, mcsMgrDprsMcsEpGEpAtmConRowStatusEntry=mcsMgrDprsMcsEpGEpAtmConRowStatusEntry, mcsMgrDprsMcsEpGEpLCoOptimization=mcsMgrDprsMcsEpGEpLCoOptimization, mcsMgrDprsMcsEpGEpPktDiscErroredFromMcs=mcsMgrDprsMcsEpGEpPktDiscErroredFromMcs, mcsMgrDprsMcsEpGEpLCoPathFailureAction=mcsMgrDprsMcsEpGEpLCoPathFailureAction, mcsMgrDprsMcsEpGEpEpDRowStatus=mcsMgrDprsMcsEpGEpEpDRowStatus, mcsMgrDprsMcsEpGAddrRowStatus=mcsMgrDprsMcsEpGAddrRowStatus, mcsMgrDprsMcsEpGRowStatus=mcsMgrDprsMcsEpGRowStatus, mcsMgrDprsMcsEpGEpAtmConOperEntry=mcsMgrDprsMcsEpGEpAtmConOperEntry, mcsMgrDprsMcsEpG=mcsMgrDprsMcsEpG, mcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsEntry=mcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsEntry, mcsMgrDprsMcsEpGAddr=mcsMgrDprsMcsEpGAddr, mcsMgrDprsMcsEpGEpStatsTable=mcsMgrDprsMcsEpGEpStatsTable, mcsMgrDprsMcsEpGEpSupportedTransferPriorities=mcsMgrDprsMcsEpGEpSupportedTransferPriorities, mcsMgrDprsMcsEpGEpRowStatusEntry=mcsMgrDprsMcsEpGEpRowStatusEntry, mcsMgrDprsMcsEpGEpLCoDelayMetric=mcsMgrDprsMcsEpGEpLCoDelayMetric, mcsMgrDprsMcsEpGEpProceduralStatus=mcsMgrDprsMcsEpGEpProceduralStatus, mcsMgrDprsMcsEpGEpAtmConStorageType=mcsMgrDprsMcsEpGEpAtmConStorageType, mcsMgrDprsMcsEpGEpLCoPathType=mcsMgrDprsMcsEpGEpLCoPathType, mcsMgrDprsMcsEpGEpComponentName=mcsMgrDprsMcsEpGEpComponentName, mcsMgrDprsMcsEpGRowStatusTable=mcsMgrDprsMcsEpGRowStatusTable, mcsMgrDprsMcsEpGEpLCoPathValue=mcsMgrDprsMcsEpGEpLCoPathValue, mcsMgrDprsMcsEpGAddrProvTable=mcsMgrDprsMcsEpGAddrProvTable, mcsMgrDprsMcsEpGEpLastTransportConnectionClearCause=mcsMgrDprsMcsEpGEpLastTransportConnectionClearCause, mcsMgrDprsMcsEpGEpLCoPathUpDateTime=mcsMgrDprsMcsEpGEpLCoPathUpDateTime, mcsMgrDprsMcsEpGEp=mcsMgrDprsMcsEpGEp, dprsMcsEpGroupBE01A=dprsMcsEpGroupBE01A, mcsMgrDprsMcsEpGEpBandwidth=mcsMgrDprsMcsEpGEpBandwidth, mcsMgrDprsMcsEpGEpLCoEmissionPriority=mcsMgrDprsMcsEpGEpLCoEmissionPriority, mcsMgrDprsMcsEpGEpServiceCategory=mcsMgrDprsMcsEpGEpServiceCategory, mcsMgrDprsMcsEpGEpLCoPathDataEntry=mcsMgrDprsMcsEpGEpLCoPathDataEntry, mcsMgrDprsMcsEpGEpLCoSetupPriority=mcsMgrDprsMcsEpGEpLCoSetupPriority, mcsMgrDprsMcsEpGEpLCoEnd=mcsMgrDprsMcsEpGEpLCoEnd, mcsMgrDprsMcsEpGEpLCoBytesToNetwork=mcsMgrDprsMcsEpGEpLCoBytesToNetwork, mcsMgrDprsMcsEpGEpLCoPathTable=mcsMgrDprsMcsEpGEpLCoPathTable, mcsMgrDprsMcsEpGEpLCoOverrideRemoteName=mcsMgrDprsMcsEpGEpLCoOverrideRemoteName, mcsMgrDprsMcsEpGEpStandbyStatus=mcsMgrDprsMcsEpGEpStandbyStatus, mcsMgrDprsMcsEpGEpLCoRowStatusTable=mcsMgrDprsMcsEpGEpLCoRowStatusTable, mcsMgrDprsMcsEpGEpConnectionTransferPriority=mcsMgrDprsMcsEpGEpConnectionTransferPriority, mcsMgrDprsMcsEpGEpLCoState=mcsMgrDprsMcsEpGEpLCoState, mcsMgrDprsMcsEpGEpLCoRequiredRxBandwidth=mcsMgrDprsMcsEpGEpLCoRequiredRxBandwidth, mcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsTable=mcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsTable, mcsMgrDprsMcsEpGEpStatsEntry=mcsMgrDprsMcsEpGEpStatsEntry, mcsMgrDprsMcsEpGEpRowStatus=mcsMgrDprsMcsEpGEpRowStatus, mcsMgrDprsMcsEpGEpAvailabilityStatus=mcsMgrDprsMcsEpGEpAvailabilityStatus, mcsMgrDprsMcsEpGEpEpDIndex=mcsMgrDprsMcsEpGEpEpDIndex, mcsMgrDprsMcsEpGRowStatusEntry=mcsMgrDprsMcsEpGRowStatusEntry, mcsMgrDprsMcsEpGOperEntry=mcsMgrDprsMcsEpGOperEntry, mcsMgrDprsMcsEpGEpPktFromMcsEntry=mcsMgrDprsMcsEpGEpPktFromMcsEntry, mcsMgrDprsMcsEpGEpLCoStatsTable=mcsMgrDprsMcsEpGEpLCoStatsTable, mcsMgrDprsMcsEpGEpRemoteModuleId=mcsMgrDprsMcsEpGEpRemoteModuleId, mcsMgrDprsMcsEpGEpEpDTransportConnectionPreference=mcsMgrDprsMcsEpGEpEpDTransportConnectionPreference)
