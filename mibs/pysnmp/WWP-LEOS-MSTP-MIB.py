#
# PySNMP MIB module WWP-LEOS-MSTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-MSTP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, MibIdentifier, iso, ModuleIdentity, Bits, Counter64, NotificationType, Unsigned32, IpAddress, Gauge32, Integer32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "iso", "ModuleIdentity", "Bits", "Counter64", "NotificationType", "Unsigned32", "IpAddress", "Gauge32", "Integer32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32")
TruthValue, RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "DisplayString", "TextualConvention")
wwpModulesLeos, = mibBuilder.importSymbols("WWP-SMI", "wwpModulesLeos")
wwpLeosMstp = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37))
wwpLeosMstp.setRevisions(('2011-08-02 00:00', '2006-09-29 17:00',))
if mibBuilder.loadTexts: wwpLeosMstp.setLastUpdated('201108020000Z')
if mibBuilder.loadTexts: wwpLeosMstp.setOrganization('Ciena, Inc')
class MstiInstanceIndex(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 64)

class MstiOrCistInstanceIndex(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 64)

class BpduCounter(TextualConvention, Counter32):
    status = 'current'
    displayHint = 'd'

wwpLeosMstpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 0))
wwpLeosMstpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1))
wwpLeosMstpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 2))
wwpLeosMstpCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1))
wwpLeosMstpMstCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 2))
wwpLeosMstpXstCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 3))
wwpLeosMstpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 4))
wwpLeosMstpBridgeEnable = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpBridgeEnable.setStatus('current')
wwpLeosMstpForceVersion = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3))).clone(namedValues=NamedValues(("stp", 0), ("rstp", 2), ("mstp", 3))).clone('mstp')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMstpForceVersion.setStatus('current')
wwpLeosMstpForwardDelay = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 30)).clone(15)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpForwardDelay.setStatus('current')
wwpLeosMstpTxHoldCount = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(6)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpTxHoldCount.setStatus('current')
wwpLeosMstpHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(2)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpHelloTime.setStatus('current')
wwpLeosMstpMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(6, 40)).clone(20)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpMaxAge.setStatus('current')
wwpLeosMstpMaxHops = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(6, 40)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpMaxHops.setStatus('current')
wwpLeosMstpLoopbackBlock = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpLoopbackBlock.setStatus('current')
wwpLeosMstpPathCostDefault = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stp8021d1998", 1), ("stp8021t2001", 2))).clone('stp8021t2001')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpPathCostDefault.setStatus('current')
wwpLeosMstpGlobalStpMode = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rstp", 1), ("mstp", 2))).clone('rstp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpGlobalStpMode.setStatus('current')
wwpLeosMstpPortCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 11), )
if mibBuilder.loadTexts: wwpLeosMstpPortCfgTable.setStatus('current')
wwpLeosMstpPortCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 11, 1), ).setIndexNames((0, "WWP-LEOS-MSTP-MIB", "wwpLeosMstpPortInfoIndex"))
if mibBuilder.loadTexts: wwpLeosMstpPortCfgEntry.setStatus('current')
wwpLeosMstpPortInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wwpLeosMstpPortInfoIndex.setStatus('current')
wwpLeosMstpPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 11, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpPortEnable.setStatus('current')
wwpLeosMstpPortAdminExtPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpPortAdminExtPathCost.setStatus('current')
wwpLeosMstpPortOperExtPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 11, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMstpPortOperExtPathCost.setStatus('current')
wwpLeosMstpPortDynamicExtPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 11, 1, 5), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpPortDynamicExtPathCost.setStatus('current')
wwpLeosMstpPortAdminEdgePort = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 11, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpPortAdminEdgePort.setStatus('current')
wwpLeosMstpPortOperEdgePort = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 11, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMstpPortOperEdgePort.setStatus('current')
wwpLeosMstpPortProtocolMigration = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 11, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpPortProtocolMigration.setStatus('current')
wwpLeosMstpPortAdminPointToPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("forceTrue", 0), ("forceFalse", 1), ("auto", 2))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpPortAdminPointToPoint.setStatus('current')
wwpLeosMstpPortOperPointToPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 11, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMstpPortOperPointToPoint.setStatus('current')
wwpLeosMstpPortAutoEdge = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 11, 1, 11), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpPortAutoEdge.setStatus('current')
wwpLeosMstpPortRestrictedRole = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 11, 1, 12), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpPortRestrictedRole.setStatus('current')
wwpLeosMstpPortRestrictedTcn = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 1, 11, 1, 13), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpPortRestrictedTcn.setStatus('current')
wwpLeosMstpMstCfgName = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpMstCfgName.setStatus('current')
wwpLeosMstpMstCfgRevLevel = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpMstCfgRevLevel.setStatus('current')
wwpLeosMstpMstCfgVlanTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 2, 3), )
if mibBuilder.loadTexts: wwpLeosMstpMstCfgVlanTable.setStatus('current')
wwpLeosMstpMstCfgVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 2, 3, 1), ).setIndexNames((0, "WWP-LEOS-MSTP-MIB", "wwpLeosMstpMstCfgVlanIndex"))
if mibBuilder.loadTexts: wwpLeosMstpMstCfgVlanEntry.setStatus('current')
wwpLeosMstpMstCfgVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: wwpLeosMstpMstCfgVlanIndex.setStatus('current')
wwpLeosMstpMstCfgMstiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 2, 3, 1, 2), MstiOrCistInstanceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpMstCfgMstiIndex.setStatus('current')
wwpLeosMstpMstCfgXstMappingTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 2, 4), )
if mibBuilder.loadTexts: wwpLeosMstpMstCfgXstMappingTable.setStatus('current')
wwpLeosMstpMstCfgXstMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 2, 4, 1), ).setIndexNames((0, "WWP-LEOS-MSTP-MIB", "wwpLeosMstpMstCfgXstMappingIndex"))
if mibBuilder.loadTexts: wwpLeosMstpMstCfgXstMappingEntry.setStatus('current')
wwpLeosMstpMstCfgXstMappingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 2, 4, 1, 1), MstiOrCistInstanceIndex())
if mibBuilder.loadTexts: wwpLeosMstpMstCfgXstMappingIndex.setStatus('current')
wwpLeosMstpMstCfgXstMapping1k = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 2, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMstpMstCfgXstMapping1k.setStatus('current')
wwpLeosMstpMstCfgXstMapping2k = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 2, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMstpMstCfgXstMapping2k.setStatus('current')
wwpLeosMstpMstCfgXstMapping3k = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 2, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMstpMstCfgXstMapping3k.setStatus('current')
wwpLeosMstpMstCfgXstMapping4k = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 2, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMstpMstCfgXstMapping4k.setStatus('current')
wwpLeosMstpMstCfgIdDigest = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 2, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMstpMstCfgIdDigest.setStatus('current')
wwpLeosMstpXstCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 3, 1), )
if mibBuilder.loadTexts: wwpLeosMstpXstCfgTable.setStatus('current')
wwpLeosMstpXstCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 3, 1, 1), ).setIndexNames((0, "WWP-LEOS-MSTP-MIB", "wwpLeosMstpXstCfgIndex"))
if mibBuilder.loadTexts: wwpLeosMstpXstCfgEntry.setStatus('current')
wwpLeosMstpXstCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 3, 1, 1, 1), MstiOrCistInstanceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: wwpLeosMstpXstCfgIndex.setStatus('current')
wwpLeosMstpXstCfgBridgePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(8)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosMstpXstCfgBridgePriority.setStatus('current')
wwpLeosMstpXstCfgStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 3, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosMstpXstCfgStatus.setStatus('current')
wwpLeosMstpXstPortCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 3, 2), )
if mibBuilder.loadTexts: wwpLeosMstpXstPortCfgTable.setStatus('current')
wwpLeosMstpXstPortCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 3, 2, 1), ).setIndexNames((0, "WWP-LEOS-MSTP-MIB", "wwpLeosMstpXstPortCfgPortIndex"), (0, "WWP-LEOS-MSTP-MIB", "wwpLeosMstpXstPortCfgXstIndex"))
if mibBuilder.loadTexts: wwpLeosMstpXstPortCfgEntry.setStatus('current')
wwpLeosMstpXstPortCfgPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: wwpLeosMstpXstPortCfgPortIndex.setStatus('current')
wwpLeosMstpXstPortCfgXstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 3, 2, 1, 2), MstiOrCistInstanceIndex())
if mibBuilder.loadTexts: wwpLeosMstpXstPortCfgXstIndex.setStatus('current')
wwpLeosMstpXstPortCfgPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpXstPortCfgPortPriority.setStatus('current')
wwpLeosMstpXstPortCfgAdminIntPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpXstPortCfgAdminIntPathCost.setStatus('current')
wwpLeosMstpXstPortCfgOperIntPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 3, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMstpXstPortCfgOperIntPathCost.setStatus('current')
wwpLeosMstpXstPortCfgDynamicIntPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 3, 2, 1, 6), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpXstPortCfgDynamicIntPathCost.setStatus('current')
wwpLeosMstpBridgeStatsClear = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 4, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpBridgeStatsClear.setStatus('current')
wwpLeosMstpPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 4, 2), )
if mibBuilder.loadTexts: wwpLeosMstpPortStatsTable.setStatus('current')
wwpLeosMstpPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 4, 2, 1), ).setIndexNames((0, "WWP-LEOS-MSTP-MIB", "wwpLeosMstpPortStatsIndex"))
if mibBuilder.loadTexts: wwpLeosMstpPortStatsEntry.setStatus('current')
wwpLeosMstpPortStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: wwpLeosMstpPortStatsIndex.setStatus('current')
wwpLeosMstpPortStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 4, 2, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosMstpPortStatsClear.setStatus('current')
wwpLeosMstpPortStatsRxTcnBpdu = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 4, 2, 1, 3), BpduCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMstpPortStatsRxTcnBpdu.setStatus('current')
wwpLeosMstpPortStatsRxCfgBpdu = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 4, 2, 1, 4), BpduCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMstpPortStatsRxCfgBpdu.setStatus('current')
wwpLeosMstpPortStatsRxRstBpdu = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 4, 2, 1, 5), BpduCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMstpPortStatsRxRstBpdu.setStatus('current')
wwpLeosMstpPortStatsRxMstBpdu = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 4, 2, 1, 6), BpduCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMstpPortStatsRxMstBpdu.setStatus('current')
wwpLeosMstpPortStatsTxTcnBpdu = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 4, 2, 1, 7), BpduCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMstpPortStatsTxTcnBpdu.setStatus('current')
wwpLeosMstpPortStatsTxCfgBpdu = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 4, 2, 1, 8), BpduCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMstpPortStatsTxCfgBpdu.setStatus('current')
wwpLeosMstpPortStatsTxRstBpdu = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 4, 2, 1, 9), BpduCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMstpPortStatsTxRstBpdu.setStatus('current')
wwpLeosMstpPortStatsTxMstBpdu = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 1, 4, 2, 1, 10), BpduCounter()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosMstpPortStatsTxMstBpdu.setStatus('current')
wwpLeosMstpNewRootNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 0, 1)).setObjects(("WWP-LEOS-MSTP-MIB", "wwpLeosMstpXstCfgIndex"))
if mibBuilder.loadTexts: wwpLeosMstpNewRootNotification.setStatus('current')
wwpLeosMstpTopologyChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 0, 2)).setObjects(("WWP-LEOS-MSTP-MIB", "wwpLeosMstpPortInfoIndex"), ("WWP-LEOS-MSTP-MIB", "wwpLeosMstpXstCfgIndex"))
if mibBuilder.loadTexts: wwpLeosMstpTopologyChangeNotification.setStatus('current')
wwpLeosMstpPortBackupNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 0, 3)).setObjects(("WWP-LEOS-MSTP-MIB", "wwpLeosMstpPortInfoIndex"))
if mibBuilder.loadTexts: wwpLeosMstpPortBackupNotification.setStatus('current')
wwpLeosMstpPvstBpduReceivedNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 0, 4)).setObjects(("WWP-LEOS-MSTP-MIB", "wwpLeosMstpPortInfoIndex"))
if mibBuilder.loadTexts: wwpLeosMstpPvstBpduReceivedNotification.setStatus('deprecated')
wwpLeosMstpSelfLoopNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 0, 5)).setObjects(("WWP-LEOS-MSTP-MIB", "wwpLeosMstpPortInfoIndex"))
if mibBuilder.loadTexts: wwpLeosMstpSelfLoopNotification.setStatus('current')
wwpLeosMstpPortOperEdgeNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 0, 6)).setObjects(("WWP-LEOS-MSTP-MIB", "wwpLeosMstpPortInfoIndex"), ("WWP-LEOS-MSTP-MIB", "wwpLeosMstpPortOperEdgePort"))
if mibBuilder.loadTexts: wwpLeosMstpPortOperEdgeNotification.setStatus('current')
wwpLeosMstpPortFlapNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 0, 7)).setObjects(("WWP-LEOS-MSTP-MIB", "wwpLeosMstpPortInfoIndex"))
if mibBuilder.loadTexts: wwpLeosMstpPortFlapNotification.setStatus('current')
wwpLeosMstpBridgeRootPortLostNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 37, 0, 8)).setObjects(("WWP-LEOS-MSTP-MIB", "wwpLeosMstpPortInfoIndex"), ("WWP-LEOS-MSTP-MIB", "wwpLeosMstpXstCfgIndex"))
if mibBuilder.loadTexts: wwpLeosMstpBridgeRootPortLostNotification.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-MSTP-MIB", wwpLeosMstpXstPortCfgPortIndex=wwpLeosMstpXstPortCfgPortIndex, wwpLeosMstpPortStatsRxMstBpdu=wwpLeosMstpPortStatsRxMstBpdu, wwpLeosMstpObjects=wwpLeosMstpObjects, BpduCounter=BpduCounter, wwpLeosMstpMstCfgXstMappingIndex=wwpLeosMstpMstCfgXstMappingIndex, wwpLeosMstpPortRestrictedRole=wwpLeosMstpPortRestrictedRole, wwpLeosMstpSelfLoopNotification=wwpLeosMstpSelfLoopNotification, wwpLeosMstpMstCfgXstMapping4k=wwpLeosMstpMstCfgXstMapping4k, wwpLeosMstpMstCfgXstMapping1k=wwpLeosMstpMstCfgXstMapping1k, wwpLeosMstpPortDynamicExtPathCost=wwpLeosMstpPortDynamicExtPathCost, wwpLeosMstpXstPortCfgPortPriority=wwpLeosMstpXstPortCfgPortPriority, wwpLeosMstpPortOperExtPathCost=wwpLeosMstpPortOperExtPathCost, MstiOrCistInstanceIndex=MstiOrCistInstanceIndex, wwpLeosMstpLoopbackBlock=wwpLeosMstpLoopbackBlock, wwpLeosMstpConformance=wwpLeosMstpConformance, wwpLeosMstpPortStatsEntry=wwpLeosMstpPortStatsEntry, wwpLeosMstpPvstBpduReceivedNotification=wwpLeosMstpPvstBpduReceivedNotification, PYSNMP_MODULE_ID=wwpLeosMstp, wwpLeosMstpNotifications=wwpLeosMstpNotifications, wwpLeosMstpPortProtocolMigration=wwpLeosMstpPortProtocolMigration, wwpLeosMstpXstCfgTable=wwpLeosMstpXstCfgTable, wwpLeosMstpPortStatsRxRstBpdu=wwpLeosMstpPortStatsRxRstBpdu, wwpLeosMstpMstCfgXstMapping3k=wwpLeosMstpMstCfgXstMapping3k, wwpLeosMstpPortRestrictedTcn=wwpLeosMstpPortRestrictedTcn, wwpLeosMstpBridgeRootPortLostNotification=wwpLeosMstpBridgeRootPortLostNotification, wwpLeosMstpPortStatsTxMstBpdu=wwpLeosMstpPortStatsTxMstBpdu, wwpLeosMstpXstCfgIndex=wwpLeosMstpXstCfgIndex, wwpLeosMstpMstCfg=wwpLeosMstpMstCfg, wwpLeosMstpMstCfgXstMapping2k=wwpLeosMstpMstCfgXstMapping2k, wwpLeosMstpXstPortCfgEntry=wwpLeosMstpXstPortCfgEntry, wwpLeosMstpXstPortCfgXstIndex=wwpLeosMstpXstPortCfgXstIndex, wwpLeosMstpForceVersion=wwpLeosMstpForceVersion, wwpLeosMstpForwardDelay=wwpLeosMstpForwardDelay, wwpLeosMstpXstCfgStatus=wwpLeosMstpXstCfgStatus, wwpLeosMstpPortOperEdgeNotification=wwpLeosMstpPortOperEdgeNotification, wwpLeosMstpXstCfgBridgePriority=wwpLeosMstpXstCfgBridgePriority, wwpLeosMstpPortInfoIndex=wwpLeosMstpPortInfoIndex, wwpLeosMstpPortAdminExtPathCost=wwpLeosMstpPortAdminExtPathCost, wwpLeosMstpPortCfgTable=wwpLeosMstpPortCfgTable, wwpLeosMstpMstCfgXstMappingTable=wwpLeosMstpMstCfgXstMappingTable, wwpLeosMstpMstCfgRevLevel=wwpLeosMstpMstCfgRevLevel, wwpLeosMstpNewRootNotification=wwpLeosMstpNewRootNotification, wwpLeosMstpPortFlapNotification=wwpLeosMstpPortFlapNotification, wwpLeosMstpXstPortCfgOperIntPathCost=wwpLeosMstpXstPortCfgOperIntPathCost, wwpLeosMstpGlobalStpMode=wwpLeosMstpGlobalStpMode, wwpLeosMstpHelloTime=wwpLeosMstpHelloTime, wwpLeosMstpPortAdminPointToPoint=wwpLeosMstpPortAdminPointToPoint, wwpLeosMstpPortOperEdgePort=wwpLeosMstpPortOperEdgePort, wwpLeosMstpMaxHops=wwpLeosMstpMaxHops, wwpLeosMstpStats=wwpLeosMstpStats, MstiInstanceIndex=MstiInstanceIndex, wwpLeosMstpMstCfgVlanEntry=wwpLeosMstpMstCfgVlanEntry, wwpLeosMstpBridgeEnable=wwpLeosMstpBridgeEnable, wwpLeosMstpBridgeStatsClear=wwpLeosMstpBridgeStatsClear, wwpLeosMstpPortAdminEdgePort=wwpLeosMstpPortAdminEdgePort, wwpLeosMstpPortEnable=wwpLeosMstpPortEnable, wwpLeosMstpPortStatsTxRstBpdu=wwpLeosMstpPortStatsTxRstBpdu, wwpLeosMstpPortStatsIndex=wwpLeosMstpPortStatsIndex, wwpLeosMstpTxHoldCount=wwpLeosMstpTxHoldCount, wwpLeosMstpMstCfgVlanIndex=wwpLeosMstpMstCfgVlanIndex, wwpLeosMstpMstCfgIdDigest=wwpLeosMstpMstCfgIdDigest, wwpLeosMstp=wwpLeosMstp, wwpLeosMstpPortCfgEntry=wwpLeosMstpPortCfgEntry, wwpLeosMstpXstCfgEntry=wwpLeosMstpXstCfgEntry, wwpLeosMstpMstCfgMstiIndex=wwpLeosMstpMstCfgMstiIndex, wwpLeosMstpXstPortCfgAdminIntPathCost=wwpLeosMstpXstPortCfgAdminIntPathCost, wwpLeosMstpPortStatsTable=wwpLeosMstpPortStatsTable, wwpLeosMstpPortStatsTxTcnBpdu=wwpLeosMstpPortStatsTxTcnBpdu, wwpLeosMstpMstCfgName=wwpLeosMstpMstCfgName, wwpLeosMstpPortStatsTxCfgBpdu=wwpLeosMstpPortStatsTxCfgBpdu, wwpLeosMstpXstPortCfgDynamicIntPathCost=wwpLeosMstpXstPortCfgDynamicIntPathCost, wwpLeosMstpXstCfg=wwpLeosMstpXstCfg, wwpLeosMstpCfg=wwpLeosMstpCfg, wwpLeosMstpPortStatsRxCfgBpdu=wwpLeosMstpPortStatsRxCfgBpdu, wwpLeosMstpPortStatsClear=wwpLeosMstpPortStatsClear, wwpLeosMstpPathCostDefault=wwpLeosMstpPathCostDefault, wwpLeosMstpPortStatsRxTcnBpdu=wwpLeosMstpPortStatsRxTcnBpdu, wwpLeosMstpMaxAge=wwpLeosMstpMaxAge, wwpLeosMstpPortAutoEdge=wwpLeosMstpPortAutoEdge, wwpLeosMstpMstCfgVlanTable=wwpLeosMstpMstCfgVlanTable, wwpLeosMstpMstCfgXstMappingEntry=wwpLeosMstpMstCfgXstMappingEntry, wwpLeosMstpPortOperPointToPoint=wwpLeosMstpPortOperPointToPoint, wwpLeosMstpXstPortCfgTable=wwpLeosMstpXstPortCfgTable, wwpLeosMstpPortBackupNotification=wwpLeosMstpPortBackupNotification, wwpLeosMstpTopologyChangeNotification=wwpLeosMstpTopologyChangeNotification)
