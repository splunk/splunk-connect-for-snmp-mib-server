#
# PySNMP MIB module DFL1660-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DFL1660-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:26:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
iso, ObjectIdentity, enterprises, ModuleIdentity, Bits, Gauge32, Counter64, Counter32, MibIdentifier, IpAddress, NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "enterprises", "ModuleIdentity", "Bits", "Gauge32", "Counter64", "Counter32", "MibIdentifier", "IpAddress", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
dfl1660_MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 1, 2)).setLabel("dfl1660-MIB")
dfl1660_MIB.setRevisions(('2010-09-02 11:39', '2010-03-30 09:00', '2009-11-10 09:16', '2008-11-18 16:05', '2008-10-14 12:27', '2007-10-31 00:00',))
if mibBuilder.loadTexts: dfl1660_MIB.setLastUpdated('201009021139Z')
if mibBuilder.loadTexts: dfl1660_MIB.setOrganization('D-Link Corporation')
dlink = MibIdentifier((1, 3, 6, 1, 4, 1, 171))
netdefendMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20))
utmFirewall = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2))
dfl1660 = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3))
dfl1660OS = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1))
dfl1660OSStats = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2))
dfl1660reg = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2))
dfl1660MibModules = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 1))
dfl1660MibConfs = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 2))
dfl1660MibObjectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 3))
dfl1660System = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1))
dfl1660SysCpuLoad = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysCpuLoad.setStatus('current')
dfl1660SysForwardedBits = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysForwardedBits.setStatus('current')
dfl1660SysForwardedPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysForwardedPackets.setStatus('current')
dfl1660SysBuffUse = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysBuffUse.setStatus('current')
dfl1660SysConns = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysConns.setStatus('current')
dfl1660SysPerStateCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 6))
dfl1660SysPscTcpSyn = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysPscTcpSyn.setStatus('current')
dfl1660SysPscTcpOpen = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 6, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysPscTcpOpen.setStatus('current')
dfl1660SysPscTcpFin = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 6, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysPscTcpFin.setStatus('current')
dfl1660SysPscUdp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 6, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysPscUdp.setStatus('current')
dfl1660SysPscIcmp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 6, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysPscIcmp.setStatus('current')
dfl1660SysPscOther = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 6, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysPscOther.setStatus('current')
dfl1660IfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7), )
if mibBuilder.loadTexts: dfl1660IfStatsTable.setStatus('current')
dfl1660IfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7, 1), ).setIndexNames((0, "DFL1660-MIB", "dfl1660IfStatsIndex"))
if mibBuilder.loadTexts: dfl1660IfStatsEntry.setStatus('current')
dfl1660IfStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl1660IfStatsIndex.setStatus('current')
dfl1660IfName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfName.setStatus('current')
dfl1660IfFragsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfFragsIn.setStatus('current')
dfl1660IfFragReassOk = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfFragReassOk.setStatus('current')
dfl1660IfFragReassFail = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfFragReassFail.setStatus('current')
dfl1660IfPktsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfPktsInCnt.setStatus('current')
dfl1660IfPktsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfPktsOutCnt.setStatus('current')
dfl1660IfBitsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfBitsInCnt.setStatus('current')
dfl1660IfBitsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfBitsOutCnt.setStatus('current')
dfl1660IfPktsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfPktsTotCnt.setStatus('current')
dfl1660IfBitsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfBitsTotCnt.setStatus('current')
dfl1660IfHCPktsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfHCPktsInCnt.setStatus('current')
dfl1660IfHCPktsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfHCPktsOutCnt.setStatus('current')
dfl1660IfHCBitsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfHCBitsInCnt.setStatus('current')
dfl1660IfHCBitsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfHCBitsOutCnt.setStatus('current')
dfl1660IfHCPktsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfHCPktsTotCnt.setStatus('current')
dfl1660IfHCBitsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 7, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfHCBitsTotCnt.setStatus('current')
dfl1660IfRxRingTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 8), )
if mibBuilder.loadTexts: dfl1660IfRxRingTable.setStatus('current')
dfl1660IfRxRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 8, 1), ).setIndexNames((0, "DFL1660-MIB", "dfl1660IfRxRingIndex"))
if mibBuilder.loadTexts: dfl1660IfRxRingEntry.setStatus('current')
dfl1660IfRxRingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl1660IfRxRingIndex.setStatus('current')
dfl1660IfRxRingFifoErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 8, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfRxRingFifoErrors.setStatus('current')
dfl1660IfRxDespools = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 8, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfRxDespools.setStatus('current')
dfl1660IfRxAvgUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 8, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfRxAvgUse.setStatus('current')
dfl1660IfRxRingSaturation = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 8, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfRxRingSaturation.setStatus('current')
dfl1660RxRingFlooded = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 8, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660RxRingFlooded.setStatus('current')
dfl1660IfTxRingTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 9), )
if mibBuilder.loadTexts: dfl1660IfTxRingTable.setStatus('current')
dfl1660IfTxRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 9, 1), ).setIndexNames((0, "DFL1660-MIB", "dfl1660IfTxRingIndex"))
if mibBuilder.loadTexts: dfl1660IfTxRingEntry.setStatus('current')
dfl1660IfTxRingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl1660IfTxRingIndex.setStatus('current')
dfl1660IfTxDespools = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 9, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfTxDespools.setStatus('current')
dfl1660IfTxAvgUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 9, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfTxAvgUse.setStatus('current')
dfl1660IfTxRingSaturation = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 9, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfTxRingSaturation.setStatus('current')
dfl1660RxTingFlooded = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 9, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660RxTingFlooded.setStatus('current')
dfl1660IfVlanStatsTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 10), )
if mibBuilder.loadTexts: dfl1660IfVlanStatsTable.setStatus('current')
dfl1660IfVlanStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 10, 1), ).setIndexNames((0, "DFL1660-MIB", "dfl1660IfVlanIndex"))
if mibBuilder.loadTexts: dfl1660IfVlanStatsEntry.setStatus('current')
dfl1660IfVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl1660IfVlanIndex.setStatus('current')
dfl1660IfVlanUntaggedInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfVlanUntaggedInPkts.setStatus('current')
dfl1660IfVlanUntaggedOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfVlanUntaggedOutPkts.setStatus('current')
dfl1660IfVlanUntaggedTotPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfVlanUntaggedTotPkts.setStatus('current')
dfl1660IfVlanUntaggedInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfVlanUntaggedInOctets.setStatus('current')
dfl1660IfVlanUntaggedOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfVlanUntaggedOutOctets.setStatus('current')
dfl1660IfVlanUntaggedTotOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IfVlanUntaggedTotOctets.setStatus('current')
dfl1660HWSensorTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 11), )
if mibBuilder.loadTexts: dfl1660HWSensorTable.setStatus('current')
dfl1660HWSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 11, 1), ).setIndexNames((0, "DFL1660-MIB", "dfl1660HWSensorIndex"))
if mibBuilder.loadTexts: dfl1660HWSensorEntry.setStatus('current')
dfl1660HWSensorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl1660HWSensorIndex.setStatus('current')
dfl1660HWSensorName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660HWSensorName.setStatus('current')
dfl1660HWSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 11, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660HWSensorValue.setStatus('current')
dfl1660HWSensorUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 11, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660HWSensorUnit.setStatus('current')
dfl1660SysMemUsage = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysMemUsage.setStatus('current')
dfl1660SysTCPUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 13))
dfl1660SysTCPRecvSmall = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 13, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysTCPRecvSmall.setStatus('current')
dfl1660SysTCPRecvLarge = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 13, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysTCPRecvLarge.setStatus('current')
dfl1660SysTCPSendSmall = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 13, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysTCPSendSmall.setStatus('current')
dfl1660SysTCPSendLarge = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 13, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysTCPSendLarge.setStatus('current')
dfl1660SysTimerUsage = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysTimerUsage.setStatus('current')
dfl1660SysConnOPS = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysConnOPS.setStatus('current')
dfl1660SysConnCPS = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysConnCPS.setStatus('current')
dfl1660SysHCForwardedBits = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SysHCForwardedBits.setStatus('current')
dfl1660VPN = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2))
dfl1660IPsec = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1))
dfl1660IPsecGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1))
dfl1660IPsecPhaseOneActive = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecPhaseOneActive.setStatus('current')
dfl1660IPsecPhaseOneAggrModeDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecPhaseOneAggrModeDone.setStatus('current')
dfl1660IPsecQuickModeActive = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecQuickModeActive.setStatus('current')
dfl1660IPsecPhaseOneDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecPhaseOneDone.setStatus('current')
dfl1660IPsecPhaseOneFailed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecPhaseOneFailed.setStatus('current')
dfl1660IPsecPhaseOneRekeyed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecPhaseOneRekeyed.setStatus('current')
dfl1660IPsecQuickModeDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecQuickModeDone.setStatus('current')
dfl1660IPsecQuickModeFailed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecQuickModeFailed.setStatus('current')
dfl1660IPsecInfoDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecInfoDone.setStatus('current')
dfl1660IPsecInfoFailed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecInfoFailed.setStatus('current')
dfl1660IPsecInOctetsComp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecInOctetsComp.setStatus('current')
dfl1660IPsecInOctetsUncomp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecInOctetsUncomp.setStatus('current')
dfl1660IPsecOutOctetsComp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecOutOctetsComp.setStatus('current')
dfl1660IPsecOutOctetsUncomp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecOutOctetsUncomp.setStatus('current')
dfl1660IPsecForwardedOctetsComp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecForwardedOctetsComp.setStatus('current')
dfl1660IPsecForwardedOctetsUcomp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecForwardedOctetsUcomp.setStatus('current')
dfl1660IPsecInPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecInPackets.setStatus('current')
dfl1660IPsecOutPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecOutPackets.setStatus('current')
dfl1660IPsecForwardedPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecForwardedPackets.setStatus('current')
dfl1660IPsecActiveTransforms = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecActiveTransforms.setStatus('current')
dfl1660IPsecTotalTransforms = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecTotalTransforms.setStatus('current')
dfl1660IPsecOutOfTransforms = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecOutOfTransforms.setStatus('current')
dfl1660IPsecTotalRekeys = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPsecTotalRekeys.setStatus('current')
dfl1660Rules = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 3))
dfl1660RuleUseTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 3, 2), )
if mibBuilder.loadTexts: dfl1660RuleUseTable.setStatus('current')
dfl1660RuleUseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 3, 2, 1), ).setIndexNames((0, "DFL1660-MIB", "dfl1660RuleIndex"))
if mibBuilder.loadTexts: dfl1660RuleUseEntry.setStatus('current')
dfl1660RuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl1660RuleIndex.setStatus('current')
dfl1660RuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 3, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660RuleName.setStatus('current')
dfl1660RuleUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660RuleUse.setStatus('current')
dfl1660IPPools = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 4))
dfl1660IPPoolsNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPPoolsNumber.setStatus('current')
dfl1660IPPoolTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 4, 2), )
if mibBuilder.loadTexts: dfl1660IPPoolTable.setStatus('current')
dfl1660IPPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 4, 2, 1), ).setIndexNames((0, "DFL1660-MIB", "dfl1660IPPoolIndex"))
if mibBuilder.loadTexts: dfl1660IPPoolEntry.setStatus('current')
dfl1660IPPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl1660IPPoolIndex.setStatus('current')
dfl1660IPPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPPoolName.setStatus('current')
dfl1660IPPoolPrepare = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 4, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPPoolPrepare.setStatus('current')
dfl1660IPPoolFree = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 4, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPPoolFree.setStatus('current')
dfl1660IPPoolMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 4, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPPoolMisses.setStatus('current')
dfl1660IPPoolClientFails = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 4, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPPoolClientFails.setStatus('current')
dfl1660IPPoolUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 4, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660IPPoolUsed.setStatus('current')
dfl1660DHCPServer = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 5))
dfl1660DHCPTotalRejected = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 5, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660DHCPTotalRejected.setStatus('current')
dfl1660DHCPRuleTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 5, 2), )
if mibBuilder.loadTexts: dfl1660DHCPRuleTable.setStatus('current')
dfl1660DHCPRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 5, 2, 1), ).setIndexNames((0, "DFL1660-MIB", "dfl1660DHCPRuleIndex"))
if mibBuilder.loadTexts: dfl1660DHCPRuleEntry.setStatus('current')
dfl1660DHCPRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl1660DHCPRuleIndex.setStatus('current')
dfl1660DHCPRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 5, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660DHCPRuleName.setStatus('current')
dfl1660DHCPRuleUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 5, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660DHCPRuleUsage.setStatus('current')
dfl1660DHCPRuleUsagePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 5, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660DHCPRuleUsagePercent.setStatus('current')
dfl1660DHCPActiveClients = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 5, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660DHCPActiveClients.setStatus('current')
dfl1660DHCPActiveClientsPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 5, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660DHCPActiveClientsPercent.setStatus('current')
dfl1660DHCPRejectedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 5, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660DHCPRejectedRequests.setStatus('current')
dfl1660DHCPTotalLeases = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 5, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660DHCPTotalLeases.setStatus('current')
dfl1660UserAuth = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 6))
dfl1660UserAuthHTTPUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660UserAuthHTTPUsers.setStatus('current')
dfl1660UserAuthXAUTHUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 6, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660UserAuthXAUTHUsers.setStatus('current')
dfl1660UserAuthHTTPSUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 6, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660UserAuthHTTPSUsers.setStatus('current')
dfl1660UserAuthPPPUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 6, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660UserAuthPPPUsers.setStatus('current')
dfl1660UserAuthEAPUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 6, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660UserAuthEAPUsers.setStatus('current')
dfl1660UserAuthRuleUseTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 6, 6), )
if mibBuilder.loadTexts: dfl1660UserAuthRuleUseTable.setStatus('current')
dfl1660UserAuthRuleUseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 6, 6, 1), ).setIndexNames((0, "DFL1660-MIB", "dfl1660UserAuthRuleIndex"))
if mibBuilder.loadTexts: dfl1660UserAuthRuleUseEntry.setStatus('current')
dfl1660UserAuthRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 6, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl1660UserAuthRuleIndex.setStatus('current')
dfl1660UserAuthRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 6, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660UserAuthRuleName.setStatus('current')
dfl1660UserAuthRuleUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 6, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660UserAuthRuleUse.setStatus('current')
dfl1660LinkMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 7))
dfl1660LinkMonGrp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660LinkMonGrp.setStatus('current')
dfl1660LinkMonGrpTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 7, 2), )
if mibBuilder.loadTexts: dfl1660LinkMonGrpTable.setStatus('current')
dfl1660LinkMonGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 7, 2, 1), ).setIndexNames((0, "DFL1660-MIB", "dfl1660LinkMonGrpIndex"))
if mibBuilder.loadTexts: dfl1660LinkMonGrpEntry.setStatus('current')
dfl1660LinkMonGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl1660LinkMonGrpIndex.setStatus('current')
dfl1660LinkMonGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 7, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660LinkMonGrpName.setStatus('current')
dfl1660LinkMonGrpHostsUp = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 7, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660LinkMonGrpHostsUp.setStatus('current')
dfl1660LinkMonHostTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 7, 3), )
if mibBuilder.loadTexts: dfl1660LinkMonHostTable.setStatus('current')
dfl1660LinkMonHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 7, 3, 1), ).setIndexNames((0, "DFL1660-MIB", "dfl1660LinkMonGrpIndex"), (0, "DFL1660-MIB", "dfl1660LinkMonHostIndex"))
if mibBuilder.loadTexts: dfl1660LinkMonHostEntry.setStatus('current')
dfl1660LinkMonHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl1660LinkMonHostIndex.setStatus('current')
dfl1660LinkMonHostId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 7, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660LinkMonHostId.setStatus('current')
dfl1660LinkMonHostShortTermLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 7, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660LinkMonHostShortTermLoss.setStatus('current')
dfl1660LinkMonHostPacketsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 7, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660LinkMonHostPacketsLost.setStatus('current')
dfl1660Pipes = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8))
dfl1660PipeUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipeUsers.setStatus('current')
dfl1660PipeTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 2), )
if mibBuilder.loadTexts: dfl1660PipeTable.setStatus('current')
dfl1660PipeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 2, 1), ).setIndexNames((0, "DFL1660-MIB", "dfl1660PipeIndex"))
if mibBuilder.loadTexts: dfl1660PipeEntry.setStatus('current')
dfl1660PipeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl1660PipeIndex.setStatus('current')
dfl1660PipeName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipeName.setStatus('current')
dfl1660PipeMinPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipeMinPrec.setStatus('current')
dfl1660PipeMaxPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipeMaxPrec.setStatus('current')
dfl1660PipeDefPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipeDefPrec.setStatus('current')
dfl1660PipeNumPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipeNumPrec.setStatus('current')
dfl1660PipeNumUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipeNumUsers.setStatus('current')
dfl1660PipeCurrentBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipeCurrentBps.setStatus('current')
dfl1660PipeCurrentPps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipeCurrentPps.setStatus('current')
dfl1660PipeDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipeDelayedPackets.setStatus('current')
dfl1660PipeDropedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipeDropedPackets.setStatus('current')
dfl1660PipePrecTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 3), )
if mibBuilder.loadTexts: dfl1660PipePrecTable.setStatus('current')
dfl1660PipePrecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 3, 1), ).setIndexNames((0, "DFL1660-MIB", "dfl1660PipeIndex"), (0, "DFL1660-MIB", "dfl1660PipePrecIndex"))
if mibBuilder.loadTexts: dfl1660PipePrecEntry.setStatus('current')
dfl1660PipePrecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl1660PipePrecIndex.setStatus('current')
dfl1660PipePrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipePrec.setStatus('current')
dfl1660PipePrecBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipePrecBps.setStatus('current')
dfl1660PipePrecTotalPps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipePrecTotalPps.setStatus('current')
dfl1660PipePrecReservedBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipePrecReservedBps.setStatus('current')
dfl1660PipePrecDynLimBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipePrecDynLimBps.setStatus('current')
dfl1660PipePrecDynUsrLimBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipePrecDynUsrLimBps.setStatus('current')
dfl1660PipePrecDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipePrecDelayedPackets.setStatus('current')
dfl1660PipePrecDropedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 8, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660PipePrecDropedPackets.setStatus('current')
dfl1660ALG = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9))
dfl1660AlgSessions = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660AlgSessions.setStatus('current')
dfl1660AlgConnections = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660AlgConnections.setStatus('current')
dfl1660AlgTCPStreams = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660AlgTCPStreams.setStatus('current')
dfl1660HttpAlg = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 4))
dfl1660HttpAlgTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 4, 1), )
if mibBuilder.loadTexts: dfl1660HttpAlgTable.setStatus('current')
dfl1660HttpAlgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 4, 1, 1), ).setIndexNames((0, "DFL1660-MIB", "dfl1660HttpAlgIndex"))
if mibBuilder.loadTexts: dfl1660HttpAlgEntry.setStatus('current')
dfl1660HttpAlgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl1660HttpAlgIndex.setStatus('current')
dfl1660HttpAlgName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660HttpAlgName.setStatus('current')
dfl1660HttpAlgTotalRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 4, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660HttpAlgTotalRequested.setStatus('current')
dfl1660HttpAlgTotalAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 4, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660HttpAlgTotalAllowed.setStatus('current')
dfl1660HttpAlgTotalBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 4, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660HttpAlgTotalBlocked.setStatus('current')
dfl1660HttpAlgCntFltTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 4, 2), )
if mibBuilder.loadTexts: dfl1660HttpAlgCntFltTable.setStatus('current')
dfl1660HttpAlgCntFltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 4, 2, 1), ).setIndexNames((0, "DFL1660-MIB", "dfl1660HttpAlgIndex"), (0, "DFL1660-MIB", "dfl1660HttpAlgCntFltIndex"))
if mibBuilder.loadTexts: dfl1660HttpAlgCntFltEntry.setStatus('current')
dfl1660HttpAlgCntFltIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl1660HttpAlgCntFltIndex.setStatus('current')
dfl1660HttpAlgCntFltName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660HttpAlgCntFltName.setStatus('current')
dfl1660HttpAlgCntFltRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 4, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660HttpAlgCntFltRequests.setStatus('current')
dfl1660HttpAlgCntFltAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 4, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660HttpAlgCntFltAllowed.setStatus('current')
dfl1660HttpAlgCntFltBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 4, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660HttpAlgCntFltBlocked.setStatus('current')
dfl1660SmtpAlg = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 5))
dfl1660SmtpAlgTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 5, 1), )
if mibBuilder.loadTexts: dfl1660SmtpAlgTable.setStatus('current')
dfl1660SmtpAlgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 5, 1, 1), ).setIndexNames((0, "DFL1660-MIB", "dfl1660SmtpAlgIndex"))
if mibBuilder.loadTexts: dfl1660SmtpAlgEntry.setStatus('current')
dfl1660SmtpAlgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl1660SmtpAlgIndex.setStatus('current')
dfl1660SmtpAlgName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SmtpAlgName.setStatus('current')
dfl1660SmtpAlgTotCheckedSes = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 5, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SmtpAlgTotCheckedSes.setStatus('current')
dfl1660SmtpAlgTotSpamSes = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 5, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SmtpAlgTotSpamSes.setStatus('current')
dfl1660SmtpAlgTotDroppedSes = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 5, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SmtpAlgTotDroppedSes.setStatus('current')
dfl1660SmtpAlgDnsBlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 5, 2), )
if mibBuilder.loadTexts: dfl1660SmtpAlgDnsBlTable.setStatus('current')
dfl1660SmtpAlgDnsBlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 5, 2, 1), ).setIndexNames((0, "DFL1660-MIB", "dfl1660SmtpAlgIndex"), (0, "DFL1660-MIB", "dfl1660SmtpAlgDnsBlIndex"))
if mibBuilder.loadTexts: dfl1660SmtpAlgDnsBlEntry.setStatus('current')
dfl1660SmtpAlgDnsBlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl1660SmtpAlgDnsBlIndex.setStatus('current')
dfl1660SmtpAlgDnsBlName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 5, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SmtpAlgDnsBlName.setStatus('current')
dfl1660SmtpAlgDnsBlChecked = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 5, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SmtpAlgDnsBlChecked.setStatus('current')
dfl1660SmtpAlgDnsBlMatched = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 5, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SmtpAlgDnsBlMatched.setStatus('current')
dfl1660SmtpAlgDnsBlFailChecks = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 9, 5, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660SmtpAlgDnsBlFailChecks.setStatus('current')
dfl1660DHCPRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 11))
dfl1660DHCPRelayCurClients = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 11, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660DHCPRelayCurClients.setStatus('current')
dfl1660DHCPRelayCurTrans = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 11, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660DHCPRelayCurTrans.setStatus('current')
dfl1660DHCPRelayRejected = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 11, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660DHCPRelayRejected.setStatus('current')
dfl1660DHCPRelayRuleTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 11, 4), )
if mibBuilder.loadTexts: dfl1660DHCPRelayRuleTable.setStatus('current')
dfl1660DHCPRelayRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 11, 4, 1), ).setIndexNames((0, "DFL1660-MIB", "dfl1660DHCPRelayRuleIndex"))
if mibBuilder.loadTexts: dfl1660DHCPRelayRuleEntry.setStatus('current')
dfl1660DHCPRelayRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 11, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl1660DHCPRelayRuleIndex.setStatus('current')
dfl1660DHCPRelayRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 11, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660DHCPRelayRuleName.setStatus('current')
dfl1660DHCPRelayRuleHits = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 11, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660DHCPRelayRuleHits.setStatus('current')
dfl1660DHCPRelayRuleCurClients = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 11, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660DHCPRelayRuleCurClients.setStatus('current')
dfl1660DHCPRelayRuleRejCliPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 11, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660DHCPRelayRuleRejCliPkts.setStatus('current')
dfl1660DHCPRelayRuleRejSrvPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 11, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660DHCPRelayRuleRejSrvPkts.setStatus('current')
dfl1660HA = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 12))
dfl1660HASyncSendQueueLength = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 12, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660HASyncSendQueueLength.setStatus('current')
dfl1660HASyncSendQueueUsagePkt = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 12, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660HASyncSendQueueUsagePkt.setStatus('current')
dfl1660HASyncSendQueueUsageOct = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 12, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660HASyncSendQueueUsageOct.setStatus('current')
dfl1660HASyncSentPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 12, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660HASyncSentPackets.setStatus('current')
dfl1660HASyncSendResentPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 1, 2, 12, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl1660HASyncSendResentPackets.setStatus('current')
dfl1660StatsConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 2, 1))
dfl1660StatsRegGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 3, 1))
dfl1660SystemObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 3, 1, 1)).setObjects(("DFL1660-MIB", "dfl1660SysCpuLoad"), ("DFL1660-MIB", "dfl1660SysForwardedBits"), ("DFL1660-MIB", "dfl1660SysForwardedPackets"), ("DFL1660-MIB", "dfl1660SysBuffUse"), ("DFL1660-MIB", "dfl1660SysConns"), ("DFL1660-MIB", "dfl1660HWSensorName"), ("DFL1660-MIB", "dfl1660HWSensorValue"), ("DFL1660-MIB", "dfl1660HWSensorUnit"), ("DFL1660-MIB", "dfl1660SysMemUsage"), ("DFL1660-MIB", "dfl1660SysTimerUsage"), ("DFL1660-MIB", "dfl1660SysConnOPS"), ("DFL1660-MIB", "dfl1660SysConnCPS"), ("DFL1660-MIB", "dfl1660SysHCForwardedBits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl1660SystemObjectGroup = dfl1660SystemObjectGroup.setStatus('current')
dfl1660IPsecObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 3, 1, 2)).setObjects(("DFL1660-MIB", "dfl1660IPsecPhaseOneActive"), ("DFL1660-MIB", "dfl1660IPsecPhaseOneAggrModeDone"), ("DFL1660-MIB", "dfl1660IPsecQuickModeActive"), ("DFL1660-MIB", "dfl1660IPsecPhaseOneDone"), ("DFL1660-MIB", "dfl1660IPsecPhaseOneFailed"), ("DFL1660-MIB", "dfl1660IPsecPhaseOneRekeyed"), ("DFL1660-MIB", "dfl1660IPsecQuickModeDone"), ("DFL1660-MIB", "dfl1660IPsecQuickModeFailed"), ("DFL1660-MIB", "dfl1660IPsecInfoDone"), ("DFL1660-MIB", "dfl1660IPsecInfoFailed"), ("DFL1660-MIB", "dfl1660IPsecInOctetsComp"), ("DFL1660-MIB", "dfl1660IPsecInOctetsUncomp"), ("DFL1660-MIB", "dfl1660IPsecOutOctetsComp"), ("DFL1660-MIB", "dfl1660IPsecOutOctetsUncomp"), ("DFL1660-MIB", "dfl1660IPsecForwardedOctetsComp"), ("DFL1660-MIB", "dfl1660IPsecForwardedOctetsUcomp"), ("DFL1660-MIB", "dfl1660IPsecInPackets"), ("DFL1660-MIB", "dfl1660IPsecOutPackets"), ("DFL1660-MIB", "dfl1660IPsecForwardedPackets"), ("DFL1660-MIB", "dfl1660IPsecActiveTransforms"), ("DFL1660-MIB", "dfl1660IPsecTotalTransforms"), ("DFL1660-MIB", "dfl1660IPsecOutOfTransforms"), ("DFL1660-MIB", "dfl1660IPsecTotalRekeys"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl1660IPsecObjectGroup = dfl1660IPsecObjectGroup.setStatus('current')
dfl1660StateCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 3, 1, 3)).setObjects(("DFL1660-MIB", "dfl1660SysPscTcpSyn"), ("DFL1660-MIB", "dfl1660SysPscTcpOpen"), ("DFL1660-MIB", "dfl1660SysPscTcpFin"), ("DFL1660-MIB", "dfl1660SysPscUdp"), ("DFL1660-MIB", "dfl1660SysPscIcmp"), ("DFL1660-MIB", "dfl1660SysPscOther"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl1660StateCountersGroup = dfl1660StateCountersGroup.setStatus('current')
dfl1660IPPoolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 3, 1, 4)).setObjects(("DFL1660-MIB", "dfl1660IPPoolsNumber"), ("DFL1660-MIB", "dfl1660IPPoolName"), ("DFL1660-MIB", "dfl1660IPPoolPrepare"), ("DFL1660-MIB", "dfl1660IPPoolFree"), ("DFL1660-MIB", "dfl1660IPPoolMisses"), ("DFL1660-MIB", "dfl1660IPPoolClientFails"), ("DFL1660-MIB", "dfl1660IPPoolUsed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl1660IPPoolGroup = dfl1660IPPoolGroup.setStatus('current')
dfl1660DHCPServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 3, 1, 5)).setObjects(("DFL1660-MIB", "dfl1660DHCPTotalRejected"), ("DFL1660-MIB", "dfl1660DHCPRuleName"), ("DFL1660-MIB", "dfl1660DHCPRuleUsage"), ("DFL1660-MIB", "dfl1660DHCPRuleUsagePercent"), ("DFL1660-MIB", "dfl1660DHCPActiveClients"), ("DFL1660-MIB", "dfl1660DHCPActiveClientsPercent"), ("DFL1660-MIB", "dfl1660DHCPRejectedRequests"), ("DFL1660-MIB", "dfl1660DHCPTotalLeases"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl1660DHCPServerGroup = dfl1660DHCPServerGroup.setStatus('current')
dfl1660RuleUseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 3, 1, 6)).setObjects(("DFL1660-MIB", "dfl1660RuleName"), ("DFL1660-MIB", "dfl1660RuleUse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl1660RuleUseGroup = dfl1660RuleUseGroup.setStatus('current')
dfl1660UserAuthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 3, 1, 7)).setObjects(("DFL1660-MIB", "dfl1660UserAuthHTTPUsers"), ("DFL1660-MIB", "dfl1660UserAuthXAUTHUsers"), ("DFL1660-MIB", "dfl1660UserAuthHTTPSUsers"), ("DFL1660-MIB", "dfl1660UserAuthPPPUsers"), ("DFL1660-MIB", "dfl1660UserAuthEAPUsers"), ("DFL1660-MIB", "dfl1660UserAuthRuleName"), ("DFL1660-MIB", "dfl1660UserAuthRuleUse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl1660UserAuthGroup = dfl1660UserAuthGroup.setStatus('current')
dfl1660IfStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 3, 1, 8)).setObjects(("DFL1660-MIB", "dfl1660IfName"), ("DFL1660-MIB", "dfl1660IfFragsIn"), ("DFL1660-MIB", "dfl1660IfFragReassOk"), ("DFL1660-MIB", "dfl1660IfFragReassFail"), ("DFL1660-MIB", "dfl1660IfPktsInCnt"), ("DFL1660-MIB", "dfl1660IfPktsOutCnt"), ("DFL1660-MIB", "dfl1660IfBitsInCnt"), ("DFL1660-MIB", "dfl1660IfBitsOutCnt"), ("DFL1660-MIB", "dfl1660IfPktsTotCnt"), ("DFL1660-MIB", "dfl1660IfBitsTotCnt"), ("DFL1660-MIB", "dfl1660IfHCPktsInCnt"), ("DFL1660-MIB", "dfl1660IfHCPktsOutCnt"), ("DFL1660-MIB", "dfl1660IfHCBitsInCnt"), ("DFL1660-MIB", "dfl1660IfHCBitsOutCnt"), ("DFL1660-MIB", "dfl1660IfHCPktsTotCnt"), ("DFL1660-MIB", "dfl1660IfHCBitsTotCnt"), ("DFL1660-MIB", "dfl1660IfRxRingFifoErrors"), ("DFL1660-MIB", "dfl1660IfRxDespools"), ("DFL1660-MIB", "dfl1660IfRxAvgUse"), ("DFL1660-MIB", "dfl1660IfRxRingSaturation"), ("DFL1660-MIB", "dfl1660RxRingFlooded"), ("DFL1660-MIB", "dfl1660IfTxDespools"), ("DFL1660-MIB", "dfl1660IfTxAvgUse"), ("DFL1660-MIB", "dfl1660IfTxRingSaturation"), ("DFL1660-MIB", "dfl1660RxTingFlooded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl1660IfStatsGroup = dfl1660IfStatsGroup.setStatus('current')
dfl1660LinkMonitorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 3, 1, 9)).setObjects(("DFL1660-MIB", "dfl1660LinkMonGrp"), ("DFL1660-MIB", "dfl1660LinkMonGrpName"), ("DFL1660-MIB", "dfl1660LinkMonGrpHostsUp"), ("DFL1660-MIB", "dfl1660LinkMonHostId"), ("DFL1660-MIB", "dfl1660LinkMonHostShortTermLoss"), ("DFL1660-MIB", "dfl1660LinkMonHostPacketsLost"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl1660LinkMonitorGroup = dfl1660LinkMonitorGroup.setStatus('current')
dfl1660PipesObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 3, 1, 10)).setObjects(("DFL1660-MIB", "dfl1660PipeUsers"), ("DFL1660-MIB", "dfl1660PipeName"), ("DFL1660-MIB", "dfl1660PipeMinPrec"), ("DFL1660-MIB", "dfl1660PipeMaxPrec"), ("DFL1660-MIB", "dfl1660PipeDefPrec"), ("DFL1660-MIB", "dfl1660PipeNumPrec"), ("DFL1660-MIB", "dfl1660PipeNumUsers"), ("DFL1660-MIB", "dfl1660PipeCurrentBps"), ("DFL1660-MIB", "dfl1660PipeCurrentPps"), ("DFL1660-MIB", "dfl1660PipeDelayedPackets"), ("DFL1660-MIB", "dfl1660PipeDropedPackets"), ("DFL1660-MIB", "dfl1660PipePrec"), ("DFL1660-MIB", "dfl1660PipePrecBps"), ("DFL1660-MIB", "dfl1660PipePrecTotalPps"), ("DFL1660-MIB", "dfl1660PipePrecReservedBps"), ("DFL1660-MIB", "dfl1660PipePrecDynLimBps"), ("DFL1660-MIB", "dfl1660PipePrecDynUsrLimBps"), ("DFL1660-MIB", "dfl1660PipePrecDelayedPackets"), ("DFL1660-MIB", "dfl1660PipePrecDropedPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl1660PipesObjectGroup = dfl1660PipesObjectGroup.setStatus('current')
dfl1660DHCPRelayObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 3, 1, 12)).setObjects(("DFL1660-MIB", "dfl1660DHCPRelayCurClients"), ("DFL1660-MIB", "dfl1660DHCPRelayCurTrans"), ("DFL1660-MIB", "dfl1660DHCPRelayRejected"), ("DFL1660-MIB", "dfl1660DHCPRelayRuleName"), ("DFL1660-MIB", "dfl1660DHCPRelayRuleHits"), ("DFL1660-MIB", "dfl1660DHCPRelayRuleCurClients"), ("DFL1660-MIB", "dfl1660DHCPRelayRuleRejCliPkts"), ("DFL1660-MIB", "dfl1660DHCPRelayRuleRejSrvPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl1660DHCPRelayObjectGroup = dfl1660DHCPRelayObjectGroup.setStatus('current')
dfl1660AlgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 3, 1, 13)).setObjects(("DFL1660-MIB", "dfl1660AlgSessions"), ("DFL1660-MIB", "dfl1660AlgConnections"), ("DFL1660-MIB", "dfl1660AlgTCPStreams"), ("DFL1660-MIB", "dfl1660HttpAlgName"), ("DFL1660-MIB", "dfl1660HttpAlgTotalRequested"), ("DFL1660-MIB", "dfl1660HttpAlgTotalAllowed"), ("DFL1660-MIB", "dfl1660HttpAlgTotalBlocked"), ("DFL1660-MIB", "dfl1660HttpAlgCntFltName"), ("DFL1660-MIB", "dfl1660HttpAlgCntFltRequests"), ("DFL1660-MIB", "dfl1660HttpAlgCntFltAllowed"), ("DFL1660-MIB", "dfl1660HttpAlgCntFltBlocked"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl1660AlgGroup = dfl1660AlgGroup.setStatus('current')
dfl1660HAGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 3, 1, 14)).setObjects(("DFL1660-MIB", "dfl1660HASyncSendQueueLength"), ("DFL1660-MIB", "dfl1660HASyncSendQueueUsagePkt"), ("DFL1660-MIB", "dfl1660HASyncSendQueueUsageOct"), ("DFL1660-MIB", "dfl1660HASyncSentPackets"), ("DFL1660-MIB", "dfl1660HASyncSendResentPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl1660HAGroup = dfl1660HAGroup.setStatus('current')
dfl1660IfVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 3, 1, 15)).setObjects(("DFL1660-MIB", "dfl1660IfVlanUntaggedInPkts"), ("DFL1660-MIB", "dfl1660IfVlanUntaggedOutPkts"), ("DFL1660-MIB", "dfl1660IfVlanUntaggedTotPkts"), ("DFL1660-MIB", "dfl1660IfVlanUntaggedInOctets"), ("DFL1660-MIB", "dfl1660IfVlanUntaggedOutOctets"), ("DFL1660-MIB", "dfl1660IfVlanUntaggedTotOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl1660IfVlanGroup = dfl1660IfVlanGroup.setStatus('current')
dfl1660SmtpAlgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 3, 1, 16)).setObjects(("DFL1660-MIB", "dfl1660SmtpAlgName"), ("DFL1660-MIB", "dfl1660SmtpAlgTotCheckedSes"), ("DFL1660-MIB", "dfl1660SmtpAlgTotSpamSes"), ("DFL1660-MIB", "dfl1660SmtpAlgTotDroppedSes"), ("DFL1660-MIB", "dfl1660SmtpAlgDnsBlName"), ("DFL1660-MIB", "dfl1660SmtpAlgDnsBlChecked"), ("DFL1660-MIB", "dfl1660SmtpAlgDnsBlMatched"), ("DFL1660-MIB", "dfl1660SmtpAlgDnsBlFailChecks"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl1660SmtpAlgGroup = dfl1660SmtpAlgGroup.setStatus('current')
dfl1660SysTCPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 3, 1, 17)).setObjects(("DFL1660-MIB", "dfl1660SysTCPRecvSmall"), ("DFL1660-MIB", "dfl1660SysTCPRecvLarge"), ("DFL1660-MIB", "dfl1660SysTCPSendSmall"), ("DFL1660-MIB", "dfl1660SysTCPSendLarge"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl1660SysTCPGroup = dfl1660SysTCPGroup.setStatus('current')
dfl1660StatsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 171, 20, 2, 3, 2, 2, 1, 1)).setObjects(("DFL1660-MIB", "dfl1660SystemObjectGroup"), ("DFL1660-MIB", "dfl1660IPsecObjectGroup"), ("DFL1660-MIB", "dfl1660StateCountersGroup"), ("DFL1660-MIB", "dfl1660IPPoolGroup"), ("DFL1660-MIB", "dfl1660DHCPServerGroup"), ("DFL1660-MIB", "dfl1660RuleUseGroup"), ("DFL1660-MIB", "dfl1660UserAuthGroup"), ("DFL1660-MIB", "dfl1660IfStatsGroup"), ("DFL1660-MIB", "dfl1660LinkMonitorGroup"), ("DFL1660-MIB", "dfl1660PipesObjectGroup"), ("DFL1660-MIB", "dfl1660DHCPRelayObjectGroup"), ("DFL1660-MIB", "dfl1660AlgGroup"), ("DFL1660-MIB", "dfl1660HAGroup"), ("DFL1660-MIB", "dfl1660IfVlanGroup"), ("DFL1660-MIB", "dfl1660SmtpAlgGroup"), ("DFL1660-MIB", "dfl1660SysTCPGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl1660StatsCompliance = dfl1660StatsCompliance.setStatus('current')
mibBuilder.exportSymbols("DFL1660-MIB", dfl1660IfFragReassOk=dfl1660IfFragReassOk, dfl1660SysTCPSendLarge=dfl1660SysTCPSendLarge, dfl1660DHCPRelayRuleRejSrvPkts=dfl1660DHCPRelayRuleRejSrvPkts, dfl1660DHCPRuleTable=dfl1660DHCPRuleTable, dfl1660IfVlanGroup=dfl1660IfVlanGroup, dfl1660IfStatsTable=dfl1660IfStatsTable, dfl1660IPsecGlobal=dfl1660IPsecGlobal, dfl1660MibConfs=dfl1660MibConfs, dfl1660UserAuthHTTPUsers=dfl1660UserAuthHTTPUsers, dfl1660IPsecOutOctetsUncomp=dfl1660IPsecOutOctetsUncomp, dfl1660IfFragReassFail=dfl1660IfFragReassFail, dfl1660DHCPServer=dfl1660DHCPServer, dfl1660IPPoolPrepare=dfl1660IPPoolPrepare, dfl1660IPsecPhaseOneRekeyed=dfl1660IPsecPhaseOneRekeyed, dfl1660IPsecQuickModeFailed=dfl1660IPsecQuickModeFailed, dfl1660RuleUse=dfl1660RuleUse, dfl1660HttpAlgName=dfl1660HttpAlgName, dfl1660SmtpAlgName=dfl1660SmtpAlgName, dfl1660DHCPRelayRuleTable=dfl1660DHCPRelayRuleTable, dfl1660IfHCPktsTotCnt=dfl1660IfHCPktsTotCnt, dfl1660HA=dfl1660HA, dfl1660LinkMonGrpHostsUp=dfl1660LinkMonGrpHostsUp, dfl1660RuleName=dfl1660RuleName, dfl1660UserAuthRuleName=dfl1660UserAuthRuleName, dfl1660IfHCPktsInCnt=dfl1660IfHCPktsInCnt, dfl1660SmtpAlgTable=dfl1660SmtpAlgTable, dfl1660IPPools=dfl1660IPPools, dfl1660HttpAlg=dfl1660HttpAlg, dfl1660PipePrecDynLimBps=dfl1660PipePrecDynLimBps, dfl1660UserAuthGroup=dfl1660UserAuthGroup, dfl1660=dfl1660, dfl1660SysTCPRecvSmall=dfl1660SysTCPRecvSmall, dfl1660IPPoolFree=dfl1660IPPoolFree, dfl1660LinkMonHostPacketsLost=dfl1660LinkMonHostPacketsLost, dfl1660LinkMonHostTable=dfl1660LinkMonHostTable, dfl1660IPsecOutOfTransforms=dfl1660IPsecOutOfTransforms, dfl1660SysMemUsage=dfl1660SysMemUsage, dfl1660DHCPRelayRuleName=dfl1660DHCPRelayRuleName, dfl1660SysConnOPS=dfl1660SysConnOPS, dfl1660DHCPRelayRuleRejCliPkts=dfl1660DHCPRelayRuleRejCliPkts, dfl1660PipeDelayedPackets=dfl1660PipeDelayedPackets, dfl1660HWSensorEntry=dfl1660HWSensorEntry, dfl1660IPsecActiveTransforms=dfl1660IPsecActiveTransforms, dfl1660SysHCForwardedBits=dfl1660SysHCForwardedBits, dfl1660IPsecQuickModeActive=dfl1660IPsecQuickModeActive, dfl1660DHCPTotalRejected=dfl1660DHCPTotalRejected, dfl1660IfVlanUntaggedOutPkts=dfl1660IfVlanUntaggedOutPkts, dfl1660UserAuthXAUTHUsers=dfl1660UserAuthXAUTHUsers, dfl1660DHCPRuleName=dfl1660DHCPRuleName, dfl1660SmtpAlgDnsBlFailChecks=dfl1660SmtpAlgDnsBlFailChecks, dfl1660SysPscOther=dfl1660SysPscOther, dfl1660HASyncSendQueueUsageOct=dfl1660HASyncSendQueueUsageOct, dfl1660SysTCPGroup=dfl1660SysTCPGroup, dfl1660HASyncSendQueueUsagePkt=dfl1660HASyncSendQueueUsagePkt, dfl1660DHCPTotalLeases=dfl1660DHCPTotalLeases, dfl1660IPPoolUsed=dfl1660IPPoolUsed, dfl1660IfPktsOutCnt=dfl1660IfPktsOutCnt, dfl1660LinkMonitorGroup=dfl1660LinkMonitorGroup, PYSNMP_MODULE_ID=dfl1660_MIB, dfl1660OSStats=dfl1660OSStats, dfl1660IPPoolName=dfl1660IPPoolName, dfl1660HASyncSendQueueLength=dfl1660HASyncSendQueueLength, dfl1660DHCPRelayObjectGroup=dfl1660DHCPRelayObjectGroup, dfl1660PipeCurrentPps=dfl1660PipeCurrentPps, dfl1660DHCPRelayRuleIndex=dfl1660DHCPRelayRuleIndex, dfl1660SysForwardedBits=dfl1660SysForwardedBits, dfl1660LinkMonGrp=dfl1660LinkMonGrp, dfl1660HttpAlgTotalBlocked=dfl1660HttpAlgTotalBlocked, dfl1660HAGroup=dfl1660HAGroup, dfl1660SmtpAlgDnsBlMatched=dfl1660SmtpAlgDnsBlMatched, dfl1660SysPscTcpOpen=dfl1660SysPscTcpOpen, dfl1660OS=dfl1660OS, dfl1660PipePrec=dfl1660PipePrec, dfl1660SmtpAlgTotCheckedSes=dfl1660SmtpAlgTotCheckedSes, dfl1660PipePrecEntry=dfl1660PipePrecEntry, dfl1660IfVlanStatsEntry=dfl1660IfVlanStatsEntry, dfl1660IfTxRingEntry=dfl1660IfTxRingEntry, dfl1660DHCPRelayCurTrans=dfl1660DHCPRelayCurTrans, dfl1660IfName=dfl1660IfName, dfl1660UserAuthEAPUsers=dfl1660UserAuthEAPUsers, dfl1660VPN=dfl1660VPN, dfl1660HttpAlgTable=dfl1660HttpAlgTable, dfl1660DHCPServerGroup=dfl1660DHCPServerGroup, dfl1660SmtpAlgGroup=dfl1660SmtpAlgGroup, dfl1660DHCPRuleIndex=dfl1660DHCPRuleIndex, dfl1660SmtpAlgEntry=dfl1660SmtpAlgEntry, dfl1660LinkMonGrpTable=dfl1660LinkMonGrpTable, utmFirewall=utmFirewall, dfl1660HWSensorValue=dfl1660HWSensorValue, dfl1660IfRxRingTable=dfl1660IfRxRingTable, dfl1660IPsecObjectGroup=dfl1660IPsecObjectGroup, dfl1660IfHCBitsOutCnt=dfl1660IfHCBitsOutCnt, dfl1660Rules=dfl1660Rules, dfl1660IPsecOutPackets=dfl1660IPsecOutPackets, dfl1660SysPscUdp=dfl1660SysPscUdp, dfl1660DHCPRelayRuleHits=dfl1660DHCPRelayRuleHits, dfl1660RuleUseGroup=dfl1660RuleUseGroup, dfl1660IfRxRingIndex=dfl1660IfRxRingIndex, dfl1660_MIB=dfl1660_MIB, dfl1660DHCPRuleEntry=dfl1660DHCPRuleEntry, dfl1660IfVlanUntaggedInOctets=dfl1660IfVlanUntaggedInOctets, dfl1660HttpAlgCntFltBlocked=dfl1660HttpAlgCntFltBlocked, dfl1660UserAuthRuleUse=dfl1660UserAuthRuleUse, dfl1660IfRxAvgUse=dfl1660IfRxAvgUse, dfl1660IPsecInOctetsUncomp=dfl1660IPsecInOctetsUncomp, dfl1660IPsecInPackets=dfl1660IPsecInPackets, dfl1660DHCPRelayCurClients=dfl1660DHCPRelayCurClients, dfl1660PipeTable=dfl1660PipeTable, dfl1660IPsecInfoDone=dfl1660IPsecInfoDone, dfl1660UserAuthRuleUseEntry=dfl1660UserAuthRuleUseEntry, dfl1660PipePrecDelayedPackets=dfl1660PipePrecDelayedPackets, dfl1660IPsecForwardedPackets=dfl1660IPsecForwardedPackets, dfl1660AlgGroup=dfl1660AlgGroup, dfl1660PipeNumUsers=dfl1660PipeNumUsers, dfl1660IfVlanUntaggedInPkts=dfl1660IfVlanUntaggedInPkts, dfl1660reg=dfl1660reg, dfl1660DHCPRuleUsagePercent=dfl1660DHCPRuleUsagePercent, dfl1660StatsRegGroups=dfl1660StatsRegGroups, dfl1660PipePrecTotalPps=dfl1660PipePrecTotalPps, dfl1660HttpAlgTotalAllowed=dfl1660HttpAlgTotalAllowed, dfl1660PipeNumPrec=dfl1660PipeNumPrec, dfl1660SmtpAlgDnsBlName=dfl1660SmtpAlgDnsBlName, dfl1660SysForwardedPackets=dfl1660SysForwardedPackets, dfl1660IfBitsInCnt=dfl1660IfBitsInCnt, dfl1660HttpAlgTotalRequested=dfl1660HttpAlgTotalRequested, dfl1660IfHCBitsTotCnt=dfl1660IfHCBitsTotCnt, dfl1660SmtpAlgDnsBlEntry=dfl1660SmtpAlgDnsBlEntry, dfl1660IfVlanStatsTable=dfl1660IfVlanStatsTable, dfl1660IPPoolEntry=dfl1660IPPoolEntry, dfl1660IfVlanUntaggedTotOctets=dfl1660IfVlanUntaggedTotOctets, dfl1660HttpAlgCntFltEntry=dfl1660HttpAlgCntFltEntry, dfl1660HttpAlgCntFltIndex=dfl1660HttpAlgCntFltIndex, dfl1660PipeMinPrec=dfl1660PipeMinPrec, dfl1660SysCpuLoad=dfl1660SysCpuLoad, dfl1660HttpAlgCntFltName=dfl1660HttpAlgCntFltName, dfl1660SysTimerUsage=dfl1660SysTimerUsage, dfl1660LinkMonHostShortTermLoss=dfl1660LinkMonHostShortTermLoss, dfl1660DHCPRelay=dfl1660DHCPRelay, dfl1660HASyncSendResentPackets=dfl1660HASyncSendResentPackets, dfl1660IPsecOutOctetsComp=dfl1660IPsecOutOctetsComp, dfl1660MibObjectGroups=dfl1660MibObjectGroups, dfl1660IfRxDespools=dfl1660IfRxDespools, dfl1660RxTingFlooded=dfl1660RxTingFlooded, dfl1660IPPoolIndex=dfl1660IPPoolIndex, dfl1660PipePrecIndex=dfl1660PipePrecIndex, dfl1660HWSensorUnit=dfl1660HWSensorUnit, dfl1660SysPscTcpFin=dfl1660SysPscTcpFin, dfl1660StatsCompliance=dfl1660StatsCompliance, dfl1660SmtpAlgDnsBlIndex=dfl1660SmtpAlgDnsBlIndex, dfl1660IfTxRingIndex=dfl1660IfTxRingIndex, dfl1660LinkMonHostId=dfl1660LinkMonHostId, dfl1660IfStatsEntry=dfl1660IfStatsEntry, dfl1660HWSensorTable=dfl1660HWSensorTable, dfl1660LinkMonHostIndex=dfl1660LinkMonHostIndex, dfl1660SysPscIcmp=dfl1660SysPscIcmp, dfl1660IfVlanIndex=dfl1660IfVlanIndex, dfl1660HttpAlgCntFltTable=dfl1660HttpAlgCntFltTable, dfl1660SysBuffUse=dfl1660SysBuffUse, dfl1660RuleIndex=dfl1660RuleIndex, dfl1660IPsecInOctetsComp=dfl1660IPsecInOctetsComp, dfl1660IPPoolsNumber=dfl1660IPPoolsNumber, dfl1660SmtpAlgIndex=dfl1660SmtpAlgIndex, dfl1660SmtpAlgDnsBlTable=dfl1660SmtpAlgDnsBlTable, dfl1660DHCPRelayRuleEntry=dfl1660DHCPRelayRuleEntry, dfl1660IfBitsTotCnt=dfl1660IfBitsTotCnt, dfl1660UserAuth=dfl1660UserAuth, dfl1660IfRxRingEntry=dfl1660IfRxRingEntry, dfl1660HWSensorIndex=dfl1660HWSensorIndex, dfl1660IPPoolMisses=dfl1660IPPoolMisses, dfl1660MibModules=dfl1660MibModules, dfl1660RxRingFlooded=dfl1660RxRingFlooded, dfl1660StatsConformance=dfl1660StatsConformance, dfl1660HttpAlgEntry=dfl1660HttpAlgEntry, dfl1660IfTxRingSaturation=dfl1660IfTxRingSaturation, dfl1660IfVlanUntaggedTotPkts=dfl1660IfVlanUntaggedTotPkts, dfl1660UserAuthPPPUsers=dfl1660UserAuthPPPUsers, dfl1660IfRxRingSaturation=dfl1660IfRxRingSaturation, dfl1660PipeEntry=dfl1660PipeEntry, dfl1660PipeDefPrec=dfl1660PipeDefPrec, dfl1660DHCPRejectedRequests=dfl1660DHCPRejectedRequests, dfl1660UserAuthRuleIndex=dfl1660UserAuthRuleIndex, dfl1660IfTxRingTable=dfl1660IfTxRingTable, dfl1660IPsecTotalRekeys=dfl1660IPsecTotalRekeys, dfl1660IfStatsIndex=dfl1660IfStatsIndex, dfl1660SmtpAlgDnsBlChecked=dfl1660SmtpAlgDnsBlChecked, dfl1660IfPktsTotCnt=dfl1660IfPktsTotCnt, dfl1660IPPoolClientFails=dfl1660IPPoolClientFails, dfl1660IPsec=dfl1660IPsec, dfl1660IfTxDespools=dfl1660IfTxDespools, dfl1660AlgTCPStreams=dfl1660AlgTCPStreams, dfl1660DHCPRuleUsage=dfl1660DHCPRuleUsage, dfl1660DHCPRelayRuleCurClients=dfl1660DHCPRelayRuleCurClients, dfl1660SysPscTcpSyn=dfl1660SysPscTcpSyn, dfl1660SmtpAlgTotDroppedSes=dfl1660SmtpAlgTotDroppedSes, dfl1660ALG=dfl1660ALG, dfl1660PipeCurrentBps=dfl1660PipeCurrentBps, dfl1660PipeName=dfl1660PipeName, dfl1660HASyncSentPackets=dfl1660HASyncSentPackets, dfl1660IPPoolTable=dfl1660IPPoolTable, dfl1660IfBitsOutCnt=dfl1660IfBitsOutCnt, dfl1660SysTCPSendSmall=dfl1660SysTCPSendSmall, dfl1660LinkMonitor=dfl1660LinkMonitor, dfl1660IfFragsIn=dfl1660IfFragsIn, dfl1660UserAuthHTTPSUsers=dfl1660UserAuthHTTPSUsers, dfl1660IPsecPhaseOneAggrModeDone=dfl1660IPsecPhaseOneAggrModeDone, dfl1660IfHCBitsInCnt=dfl1660IfHCBitsInCnt, dfl1660IPsecPhaseOneDone=dfl1660IPsecPhaseOneDone, dfl1660SystemObjectGroup=dfl1660SystemObjectGroup, dfl1660UserAuthRuleUseTable=dfl1660UserAuthRuleUseTable, dfl1660SysConnCPS=dfl1660SysConnCPS, dfl1660IfTxAvgUse=dfl1660IfTxAvgUse, dfl1660DHCPActiveClients=dfl1660DHCPActiveClients, dfl1660PipePrecReservedBps=dfl1660PipePrecReservedBps, dfl1660HttpAlgIndex=dfl1660HttpAlgIndex, dfl1660IfPktsInCnt=dfl1660IfPktsInCnt, dfl1660SmtpAlg=dfl1660SmtpAlg, dfl1660IPsecInfoFailed=dfl1660IPsecInfoFailed, dfl1660RuleUseTable=dfl1660RuleUseTable, dfl1660PipePrecBps=dfl1660PipePrecBps, dfl1660IfHCPktsOutCnt=dfl1660IfHCPktsOutCnt, dfl1660AlgSessions=dfl1660AlgSessions, dfl1660IfVlanUntaggedOutOctets=dfl1660IfVlanUntaggedOutOctets, dfl1660SysTCPRecvLarge=dfl1660SysTCPRecvLarge, dfl1660IfRxRingFifoErrors=dfl1660IfRxRingFifoErrors, dfl1660IPsecPhaseOneFailed=dfl1660IPsecPhaseOneFailed, dfl1660DHCPActiveClientsPercent=dfl1660DHCPActiveClientsPercent, netdefendMgmt=netdefendMgmt, dfl1660HttpAlgCntFltRequests=dfl1660HttpAlgCntFltRequests, dfl1660Pipes=dfl1660Pipes, dfl1660DHCPRelayRejected=dfl1660DHCPRelayRejected, dfl1660LinkMonHostEntry=dfl1660LinkMonHostEntry, dfl1660SysConns=dfl1660SysConns, dfl1660IPsecQuickModeDone=dfl1660IPsecQuickModeDone, dfl1660SmtpAlgTotSpamSes=dfl1660SmtpAlgTotSpamSes, dlink=dlink, dfl1660IPPoolGroup=dfl1660IPPoolGroup, dfl1660IPsecForwardedOctetsUcomp=dfl1660IPsecForwardedOctetsUcomp, dfl1660RuleUseEntry=dfl1660RuleUseEntry, dfl1660PipeMaxPrec=dfl1660PipeMaxPrec, dfl1660PipesObjectGroup=dfl1660PipesObjectGroup, dfl1660PipeIndex=dfl1660PipeIndex, dfl1660IfStatsGroup=dfl1660IfStatsGroup, dfl1660IPsecForwardedOctetsComp=dfl1660IPsecForwardedOctetsComp, dfl1660HWSensorName=dfl1660HWSensorName, dfl1660LinkMonGrpName=dfl1660LinkMonGrpName, dfl1660LinkMonGrpIndex=dfl1660LinkMonGrpIndex, dfl1660IPsecTotalTransforms=dfl1660IPsecTotalTransforms, dfl1660PipePrecTable=dfl1660PipePrecTable, dfl1660PipePrecDynUsrLimBps=dfl1660PipePrecDynUsrLimBps, dfl1660AlgConnections=dfl1660AlgConnections, dfl1660SysPerStateCounters=dfl1660SysPerStateCounters, dfl1660SysTCPUsage=dfl1660SysTCPUsage, dfl1660System=dfl1660System, dfl1660IPsecPhaseOneActive=dfl1660IPsecPhaseOneActive)
mibBuilder.exportSymbols("DFL1660-MIB", dfl1660PipeUsers=dfl1660PipeUsers, dfl1660LinkMonGrpEntry=dfl1660LinkMonGrpEntry, dfl1660HttpAlgCntFltAllowed=dfl1660HttpAlgCntFltAllowed, dfl1660PipeDropedPackets=dfl1660PipeDropedPackets, dfl1660PipePrecDropedPackets=dfl1660PipePrecDropedPackets, dfl1660StateCountersGroup=dfl1660StateCountersGroup)
