#
# PySNMP MIB module Wellfleet-RFWALL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-RFWALL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:34:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, ObjectIdentity, Counter64, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, TimeTicks, MibIdentifier, iso, Counter32, Integer32, IpAddress, Bits, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "Counter64", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "TimeTicks", "MibIdentifier", "iso", "Counter32", "Integer32", "IpAddress", "Bits", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfFwallGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfFwallGroup")
wfRFwallGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2))
wfRFwallDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallDelete.setStatus('mandatory')
wfRFwallDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallDisable.setStatus('mandatory')
wfRFwallState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('init')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRFwallState.setStatus('mandatory')
wfRFwallLogHostIp = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallLogHostIp.setStatus('mandatory')
wfRFwallLogHostIpInt = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallLogHostIpInt.setStatus('obsolete')
wfRFwallLocalHostIp = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallLocalHostIp.setStatus('mandatory')
wfRFwallLocalHostIpInt = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallLocalHostIpInt.setStatus('obsolete')
wfRFwallVersion = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 8), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallVersion.setStatus('mandatory')
wfRFwallHmemMin = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 9), Integer32().clone(50000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallHmemMin.setStatus('mandatory')
wfRFwallHmemMax = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 10), Integer32().clone(100000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallHmemMax.setStatus('mandatory')
wfRFwallLogHostIpBkp1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallLogHostIpBkp1.setStatus('mandatory')
wfRFwallLogHostIpIntBkp1 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallLogHostIpIntBkp1.setStatus('obsolete')
wfRFwallLogHostIpBkp2 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallLogHostIpBkp2.setStatus('mandatory')
wfRFwallLogHostIpIntBkp2 = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallLogHostIpIntBkp2.setStatus('obsolete')
wfRFwallFastPathDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallFastPathDisable.setStatus('mandatory')
wfRFwallFilterTimer = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 180)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallFilterTimer.setStatus('mandatory')
wfRFwallLogTimer = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 180)).clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallLogTimer.setStatus('mandatory')
wfRFwallKeepaliveTimerIdle = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallKeepaliveTimerIdle.setStatus('mandatory')
wfRFwallKeepaliveTimerRetryTmo = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallKeepaliveTimerRetryTmo.setStatus('mandatory')
wfRFwallKeepaliveTimerRetries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 11, 2, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRFwallKeepaliveTimerRetries.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-RFWALL-MIB", wfRFwallLogHostIpIntBkp1=wfRFwallLogHostIpIntBkp1, wfRFwallFastPathDisable=wfRFwallFastPathDisable, wfRFwallHmemMin=wfRFwallHmemMin, wfRFwallState=wfRFwallState, wfRFwallFilterTimer=wfRFwallFilterTimer, wfRFwallKeepaliveTimerRetryTmo=wfRFwallKeepaliveTimerRetryTmo, wfRFwallKeepaliveTimerIdle=wfRFwallKeepaliveTimerIdle, wfRFwallLogHostIpBkp2=wfRFwallLogHostIpBkp2, wfRFwallLocalHostIp=wfRFwallLocalHostIp, wfRFwallDisable=wfRFwallDisable, wfRFwallLocalHostIpInt=wfRFwallLocalHostIpInt, wfRFwallLogHostIpInt=wfRFwallLogHostIpInt, wfRFwallLogHostIpBkp1=wfRFwallLogHostIpBkp1, wfRFwallLogTimer=wfRFwallLogTimer, wfRFwallGroup=wfRFwallGroup, wfRFwallHmemMax=wfRFwallHmemMax, wfRFwallKeepaliveTimerRetries=wfRFwallKeepaliveTimerRetries, wfRFwallLogHostIpIntBkp2=wfRFwallLogHostIpIntBkp2, wfRFwallDelete=wfRFwallDelete, wfRFwallVersion=wfRFwallVersion, wfRFwallLogHostIp=wfRFwallLogHostIp)
