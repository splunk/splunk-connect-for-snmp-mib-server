#
# PySNMP MIB module ZXR10-SWITCH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZXR10-SWITCH-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:42:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Gauge32, iso, Counter64, enterprises, TimeTicks, Integer32, Unsigned32, Bits, Counter32, experimental, MibIdentifier, NotificationType, ObjectIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, mgmt = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Gauge32", "iso", "Counter64", "enterprises", "TimeTicks", "Integer32", "Unsigned32", "Bits", "Counter32", "experimental", "MibIdentifier", "NotificationType", "ObjectIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "mgmt")
RowStatus, MacAddress, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "MacAddress", "TextualConvention", "DisplayString")
zte = MibIdentifier((1, 3, 6, 1, 4, 1, 3902))
zxr10 = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3))
zxr10switch = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 102))
zxr10vlan = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1))
zxr10igmpSnooping = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5))
zxr10extAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 102, 6))
zxr10QinQ = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 3))
zxr10MemberShip = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 4))
zess = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 102, 13))
vct = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14))
loopdetect = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 102, 15))
svlan = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 102, 17))
vfp = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 102, 18))
dhcp = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 102, 23))
class DisplayString(OctetString):
    pass

zxr10CpuVlanPvidTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 1), )
if mibBuilder.loadTexts: zxr10CpuVlanPvidTable.setStatus('current')
zxr10CpuVlanPvidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 1, 1), ).setIndexNames((0, "ZXR10-SWITCH-MIB", "zxr10CpuVlanId"))
if mibBuilder.loadTexts: zxr10CpuVlanPvidEntry.setStatus('current')
zxr10CpuVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10CpuVlanId.setStatus('current')
zxr10CpuVlanIf = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10CpuVlanIf.setStatus('current')
zxr10CpuVlanMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65534))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10CpuVlanMtu.setStatus('current')
zxr10CpuVlanState = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("up", 1), ("down", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10CpuVlanState.setStatus('current')
zxr10CpuVlanSaid = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10CpuVlanSaid.setStatus('current')
zxr10CpuVlanVpnid = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10CpuVlanVpnid.setStatus('current')
zxr10CpuVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxr10CpuVlanRowStatus.setStatus('current')
zxr10CpuVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 1, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10CpuVlanName.setStatus('current')
zxr10CpuVlanMemPortsPvid = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 1, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10CpuVlanMemPortsPvid.setStatus('current')
zxr10CpuVlanTagTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 2), )
if mibBuilder.loadTexts: zxr10CpuVlanTagTable.setStatus('current')
zxr10CpuVlanTagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 2, 1), ).setIndexNames((0, "ZXR10-SWITCH-MIB", "zxr10CpuVlanId"))
if mibBuilder.loadTexts: zxr10CpuVlanTagEntry.setStatus('current')
zxr10CpuVlanid = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10CpuVlanid.setStatus('current')
zxr10CpuVlanvpnid = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10CpuVlanvpnid.setStatus('current')
zxr10CpuVlanname = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10CpuVlanname.setStatus('current')
zxr10CpuVlanMemPortsTag = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10CpuVlanMemPortsTag.setStatus('current')
zxr10CpuVlanUntagTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 5), )
if mibBuilder.loadTexts: zxr10CpuVlanUntagTable.setStatus('current')
zxr10CpuVlanUntagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 5, 1), ).setIndexNames((0, "ZXR10-SWITCH-MIB", "zxr10CpuVlanId"))
if mibBuilder.loadTexts: zxr10CpuVlanUntagEntry.setStatus('current')
zxr10Cpuvlanid = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10Cpuvlanid.setStatus('current')
zxr10CpuVlanvpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10CpuVlanvpnId.setStatus('current')
zxr10Cpuvlanname = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10Cpuvlanname.setStatus('current')
zxr10CpuVlanMemPortsUntag = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 5, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10CpuVlanMemPortsUntag.setStatus('current')
zxr10IgmpSnoopingTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1), )
if mibBuilder.loadTexts: zxr10IgmpSnoopingTable.setStatus('current')
zxr10IgmpSnoopingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1), ).setIndexNames((0, "ZXR10-SWITCH-MIB", "zxr10igmpSnoopingGroupId"))
if mibBuilder.loadTexts: zxr10IgmpSnoopingEntry.setStatus('current')
zxr10igmpSnoopingValid = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalid", 0), ("valid", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingValid.setStatus('current')
zxr10igmpSnoopingVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingVlanId.setStatus('current')
zxr10igmpSnoopingGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingGroupId.setStatus('current')
zxr10igmpSnoopingDropEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingDropEnable.setStatus('current')
zxr10igmpSnoopingMaxHostNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingMaxHostNum.setStatus('current')
zxr10igmpSnoopingIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingIpAddr.setStatus('current')
zxr10igmpSnoopingGroupMac = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingGroupMac.setStatus('current')
zxr10igmpSnoopingMemPorts0 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingMemPorts0.setStatus('current')
zxr10igmpSnoopingMemPorts1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingMemPorts1.setStatus('current')
zxr10igmpSnoopingMemPorts2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingMemPorts2.setStatus('current')
zxr10igmpSnoopingMemPorts3 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingMemPorts3.setStatus('current')
zxr10igmpSnoopingMemPorts4 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingMemPorts4.setStatus('current')
zxr10igmpSnoopingMemPorts5 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingMemPorts5.setStatus('current')
zxr10igmpSnoopingMemPorts6 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingMemPorts6.setStatus('current')
zxr10igmpSnoopingMemPorts7 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingMemPorts7.setStatus('current')
zxr10igmpSnoopingMemPorts8 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingMemPorts8.setStatus('current')
zxr10igmpSnoopingMemPorts9 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingMemPorts9.setStatus('current')
zxr10igmpSnoopingMemPorts10 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingMemPorts10.setStatus('current')
zxr10igmpSnoopingMemPorts11 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingMemPorts11.setStatus('current')
zxr10igmpSnoopingMemPorts12 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingMemPorts12.setStatus('current')
zxr10pimSnoopingMemPorts0 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 31), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingMemPorts0.setStatus('current')
zxr10pimSnoopingMemPorts1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 32), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingMemPorts1.setStatus('current')
zxr10pimSnoopingMemPorts2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 33), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingMemPorts2.setStatus('current')
zxr10pimSnoopingMemPorts3 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 34), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingMemPorts3.setStatus('current')
zxr10pimSnoopingMemPorts4 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 35), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingMemPorts4.setStatus('current')
zxr10pimSnoopingMemPorts5 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 36), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingMemPorts5.setStatus('current')
zxr10pimSnoopingMemPorts6 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 37), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingMemPorts6.setStatus('current')
zxr10pimSnoopingMemPorts7 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 38), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingMemPorts7.setStatus('current')
zxr10pimSnoopingMemPorts8 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 39), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingMemPorts8.setStatus('current')
zxr10pimSnoopingMemPorts9 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 40), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingMemPorts9.setStatus('current')
zxr10pimSnoopingMemPorts10 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 41), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingMemPorts10.setStatus('current')
zxr10pimSnoopingMemPorts11 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 42), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingMemPorts11.setStatus('current')
zxr10pimSnoopingMemPorts12 = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 1, 1, 43), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingMemPorts12.setStatus('current')
zxr10PimSnoopingNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 2), )
if mibBuilder.loadTexts: zxr10PimSnoopingNeighborTable.setStatus('current')
zxr10PimSnoopingNeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 2, 1), ).setIndexNames((0, "ZXR10-SWITCH-MIB", "zxr10pimSnoopingNeighborId"))
if mibBuilder.loadTexts: zxr10PimSnoopingNeighborEntry.setStatus('current')
zxr10pimSnoopingNeighborValid = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalid", 0), ("valid", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingNeighborValid.setStatus('current')
zxr10pimSnoopingNeighborVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingNeighborVlanId.setStatus('current')
zxr10pimSnoopingNeighborVpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingNeighborVpnId.setStatus('current')
zxr10pimSnoopingNeighborId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingNeighborId.setStatus('current')
zxr10pimSnoopingNeighborSourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 2, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingNeighborSourceIpAddr.setStatus('current')
zxr10pimSnoopingNeighborPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 2, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingNeighborPort.setStatus('current')
zxr10IgmpSnoopingVlanTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 3), )
if mibBuilder.loadTexts: zxr10IgmpSnoopingVlanTable.setStatus('current')
zxr10IgmpSnoopingVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 3, 1), ).setIndexNames((0, "ZXR10-SWITCH-MIB", "zxr10igmpSnoopingVlanId"))
if mibBuilder.loadTexts: zxr10IgmpSnoopingVlanEntry.setStatus('current')
zxr10igmpSnoopingVlanEntryVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingVlanEntryVlanId.setStatus('current')
zxr10igmpSnoopingVlanEntryEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingVlanEntryEnable.setStatus('current')
zxr10pimSnoopingVlanEntryEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingVlanEntryEnable.setStatus('current')
zxr10igmpSnoopingFastLeave = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("fast-leave", 0), ("slow-leave", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingFastLeave.setStatus('current')
zxr10igmpSnoopingLastMemberQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingLastMemberQueryInterval.setStatus('current')
zxr10igmpSnoopingMaxGroupNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingMaxGroupNum.setStatus('current')
zxr10igmpSnoopingGroupNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingGroupNum.setStatus('current')
zxr10igmpSnoopingHostTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingHostTimeOut.setStatus('current')
zxr10igmpSnoopingMrTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingMrTimeOut.setStatus('current')
zxr10igmpSnoopingEnable = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingEnable.setStatus('current')
zxr10pimSnoopingEnable = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10pimSnoopingEnable.setStatus('current')
zxr10igmpSnoopingGlobalQuery = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enable", 0), ("disable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingGlobalQuery.setStatus('current')
zxr10igmpSnoopingQueryInterval = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingQueryInterval.setStatus('current')
zxr10igmpSnoopingQueryResponseInterval = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 5, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10igmpSnoopingQueryResponseInterval.setStatus('current')
zxr10InputAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 6, 1), )
if mibBuilder.loadTexts: zxr10InputAlarmTable.setStatus('current')
zxr10InputAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 6, 1, 1), ).setIndexNames((0, "ZXR10-SWITCH-MIB", "zxr10InputAlarmIndex"))
if mibBuilder.loadTexts: zxr10InputAlarmEntry.setStatus('current')
zxr10InputAlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10InputAlarmIndex.setStatus('current')
zxr10InputAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("alarm", 1), ("clear", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10InputAlarmStatus.setStatus('current')
zxr10InputAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 6, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10InputAlarmDescription.setStatus('current')
zxr10OutputAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 6, 2), )
if mibBuilder.loadTexts: zxr10OutputAlarmTable.setStatus('current')
zxr10OutputAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 6, 2, 1), ).setIndexNames((0, "ZXR10-SWITCH-MIB", "zxr10OutputAlarmIndex"))
if mibBuilder.loadTexts: zxr10OutputAlarmEntry.setStatus('current')
zxr10OutputAlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 6, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10OutputAlarmIndex.setStatus('current')
zxr10OutputAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("alarm", 1), ("clear", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10OutputAlarmStatus.setStatus('current')
zxr10OutputAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 6, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10OutputAlarmDescription.setStatus('current')
zxr10QinQTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 3, 1), )
if mibBuilder.loadTexts: zxr10QinQTable.setStatus('current')
zxr10QinQEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zxr10QinQEntry.setStatus('current')
zxr10QinQPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 3, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10QinQPortName.setStatus('current')
zxr10QinQMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("customer", 1), ("uplink", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10QinQMode.setStatus('current')
zxr10QinQTpid = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 3, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10QinQTpid.setStatus('current')
zxr10QinQPvid = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10QinQPvid.setStatus('current')
zxr10QinQExtendTpid = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10QinQExtendTpid.setStatus('current')
zxr10QinQStandardTpid = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10QinQStandardTpid.setStatus('current')
zxr10MemberShipTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 4, 1), )
if mibBuilder.loadTexts: zxr10MemberShipTable.setStatus('current')
zxr10MemberShipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zxr10MemberShipEntry.setStatus('current')
zxr10MemberShipPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 4, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10MemberShipPortName.setStatus('current')
zxr10MemberShipPvid = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 4, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10MemberShipPvid.setStatus('current')
zxr10MemberShipMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("access", 0), ("trunk", 1), ("hybrid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10MemberShipMode.setStatus('current')
zxr10MemberShipVlansTag = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 4, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10MemberShipVlansTag.setStatus('current')
zxr10MemberShipVlansHybridUnTag = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 4, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10MemberShipVlansHybridUnTag.setStatus('current')
zxr10MemberShipVlansTag2k = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 4, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10MemberShipVlansTag2k.setStatus('current')
zxr10MemberShipVlansHybridUnTag2k = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 4, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10MemberShipVlansHybridUnTag2k.setStatus('current')
zxr10MemberShipVlansTag3k = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 4, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10MemberShipVlansTag3k.setStatus('current')
zxr10MemberShipVlansHybridUnTag3k = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 4, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10MemberShipVlansHybridUnTag3k.setStatus('current')
zxr10MemberShipVlansTag4k = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 4, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10MemberShipVlansTag4k.setStatus('current')
zxr10MemberShipVlansHybridUnTag4k = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 1, 4, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10MemberShipVlansHybridUnTag4k.setStatus('current')
zessClearAllChangeTimes = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zessClearAllChangeTimes.setStatus('current')
zessDomainTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 13, 2), )
if mibBuilder.loadTexts: zessDomainTable.setStatus('current')
zessDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 13, 2, 1), ).setIndexNames((0, "ZXR10-SWITCH-MIB", "zessDomainId"))
if mibBuilder.loadTexts: zessDomainEntry.setStatus('current')
zessDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 13, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zessDomainId.setStatus('current')
zessProtectInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 13, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zessProtectInstanceId.setStatus('current')
zessPrimaryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 13, 2, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zessPrimaryPort.setStatus('current')
zessSecondaryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 13, 2, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zessSecondaryPort.setStatus('current')
zessPreupDelayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 13, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zessPreupDelayTime.setStatus('current')
zessDomainMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 13, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("revertive", 0), ("nonrevertive", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zessDomainMode.setStatus('current')
zessDomainState = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 13, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("up", 1), ("down", 2), ("init", 3), ("preup", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zessDomainState.setStatus('current')
zessPriIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 13, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("unknown", 0), ("block", 1), ("forward", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zessPriIfState.setStatus('current')
zessSecIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 13, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("unknown", 0), ("block", 1), ("forward", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zessSecIfState.setStatus('current')
zessChangeTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 13, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zessChangeTimes.setStatus('current')
zessClearChangeTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 13, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zessClearChangeTimes.setStatus('current')
zessDomainRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 13, 2, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zessDomainRowStatus.setStatus('current')
vctPortTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 1), )
if mibBuilder.loadTexts: vctPortTable.setStatus('current')
vctPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 1, 1), ).setIndexNames((0, "ZXR10-SWITCH-MIB", "vctPortName"))
if mibBuilder.loadTexts: vctPortEntry.setStatus('current')
vctPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vctPortName.setStatus('current')
vctIsValid = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalid", 0), ("valid", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vctIsValid.setStatus('current')
vctCableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("good", 0), ("fault", 1), ("not-support", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vctCableStatus.setStatus('current')
vctPair1Result = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vctPair1Result.setStatus('current')
vctPair1Lenth = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vctPair1Lenth.setStatus('current')
vctPair2Result = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vctPair2Result.setStatus('current')
vctPair2Lenth = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vctPair2Lenth.setStatus('current')
vctPair3Result = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vctPair3Result.setStatus('current')
vctPair3Lenth = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vctPair3Lenth.setStatus('current')
vctPair4Result = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vctPair4Result.setStatus('current')
vctPair4Lenth = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vctPair4Lenth.setStatus('current')
vctRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vctRowStatus.setStatus('current')
vctTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 2), )
if mibBuilder.loadTexts: vctTable.setStatus('current')
vctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 2, 1), ).setIndexNames((0, "ZXR10-SWITCH-MIB", "vctIfindex"))
if mibBuilder.loadTexts: vctEntry.setStatus('current')
vctIfindex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: vctIfindex.setStatus('current')
vctSetIfindex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enable", 1), ("disable", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vctSetIfindex.setStatus('current')
cableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("good", 1), ("fault", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cableStatus.setStatus('current')
doubleCableStatus1_2 = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("good", 0), ("open", 1), ("short", 2), ("broken", 3), ("mismatch", 4), ("fail", 5), ("unknown", 6), ("null", 7)))).setLabel("doubleCableStatus1-2").setMaxAccess("readonly")
if mibBuilder.loadTexts: doubleCableStatus1_2.setStatus('current')
doubleCableStatus3_6 = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("good", 0), ("open", 1), ("short", 2), ("broken", 3), ("mismatch", 4), ("fail", 5), ("unknown", 6), ("null", 7)))).setLabel("doubleCableStatus3-6").setMaxAccess("readonly")
if mibBuilder.loadTexts: doubleCableStatus3_6.setStatus('current')
doubleCableStatus4_5 = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("good", 0), ("open", 1), ("short", 2), ("broken", 3), ("mismatch", 4), ("fail", 5), ("unknown", 6), ("null", 7)))).setLabel("doubleCableStatus4-5").setMaxAccess("readonly")
if mibBuilder.loadTexts: doubleCableStatus4_5.setStatus('current')
doubleCableStatus7_8 = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("good", 0), ("open", 1), ("short", 2), ("broken", 3), ("mismatch", 4), ("fail", 5), ("unknown", 6), ("null", 7)))).setLabel("doubleCableStatus7-8").setMaxAccess("readonly")
if mibBuilder.loadTexts: doubleCableStatus7_8.setStatus('current')
doubleCableLength1_2 = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(200, 201, 202, 203, 204, 205, 206))).clone(namedValues=NamedValues(("lessthan50", 200), ("from50to80", 201), ("from80to110", 202), ("from110to140", 203), ("morethan140", 204), ("unknow", 205), ("null", 206)))).setLabel("doubleCableLength1-2").setMaxAccess("readonly")
if mibBuilder.loadTexts: doubleCableLength1_2.setStatus('current')
doubleCableLength3_6 = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(200, 201, 202, 203, 204, 205, 206))).clone(namedValues=NamedValues(("lessthan50", 200), ("from50to80", 201), ("from80to110", 202), ("from110to140", 203), ("morethan140", 204), ("unknow", 205), ("null", 206)))).setLabel("doubleCableLength3-6").setMaxAccess("readonly")
if mibBuilder.loadTexts: doubleCableLength3_6.setStatus('current')
doubleCableLength4_5 = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(200, 201, 202, 203, 204, 205, 206))).clone(namedValues=NamedValues(("lessthan50", 200), ("from50to80", 201), ("from80to110", 202), ("from110to140", 203), ("morethan140", 204), ("unknow", 205), ("null", 206)))).setLabel("doubleCableLength4-5").setMaxAccess("readonly")
if mibBuilder.loadTexts: doubleCableLength4_5.setStatus('current')
doubleCableLength7_8 = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 14, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(200, 201, 202, 203, 204, 205, 206))).clone(namedValues=NamedValues(("lessthan50", 200), ("from50to80", 201), ("from80to110", 202), ("from110to140", 203), ("morethan140", 204), ("unknow", 205), ("null", 206)))).setLabel("doubleCableLength7-8").setMaxAccess("readonly")
if mibBuilder.loadTexts: doubleCableLength7_8.setStatus('current')
loopdetectReopenTime = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 15, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777216))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: loopdetectReopenTime.setStatus('current')
loopdetectTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 15, 2), )
if mibBuilder.loadTexts: loopdetectTable.setStatus('current')
loopdetectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 15, 2, 1), ).setIndexNames((0, "ZXR10-SWITCH-MIB", "loopdetectPanelNum"), (0, "ZXR10-SWITCH-MIB", "loopdetectPortNum"))
if mibBuilder.loadTexts: loopdetectEntry.setStatus('current')
loopdetectPanelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 15, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: loopdetectPanelNum.setStatus('current')
loopdetectPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 15, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: loopdetectPortNum.setStatus('current')
loopdetectPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 15, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: loopdetectPortName.setStatus('current')
loopdetectPortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 15, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("protect", 1), ("block", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: loopdetectPortOperStatus.setStatus('current')
loopdetectPortVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 15, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: loopdetectPortVlan.setStatus('current')
loopdetectPortMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 15, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("enable", 1), ("disable", 0)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: loopdetectPortMonitor.setStatus('current')
loopdetectPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 15, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: loopdetectPortRowStatus.setStatus('current')
zxr10svlanCount = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 17, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10svlanCount.setStatus('current')
zxr10svlanFreeCount = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 17, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10svlanFreeCount.setStatus('current')
zxr10svlanTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 17, 12), )
if mibBuilder.loadTexts: zxr10svlanTable.setStatus('current')
zxr10svlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 17, 12, 1), ).setIndexNames((0, "ZXR10-SWITCH-MIB", "zxr10svlanSessionNo"))
if mibBuilder.loadTexts: zxr10svlanEntry.setStatus('current')
zxr10svlanSessionNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 17, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10svlanSessionNo.setStatus('current')
zxr10svlanDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 17, 12, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10svlanDescription.setStatus('current')
zxr10svlanCustomerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 17, 12, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10svlanCustomerPort.setStatus('current')
zxr10svlanUplinkPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 17, 12, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10svlanUplinkPort.setStatus('current')
zxr10svlanInvlan = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 17, 12, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10svlanInvlan.setStatus('current')
zxr10svlanOvlan = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 17, 12, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10svlanOvlan.setStatus('current')
zxr10svlanRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 17, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("undirect", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10svlanRedirect.setStatus('current')
zxr10svlanAdvanced = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 17, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("special", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10svlanAdvanced.setStatus('current')
zxr10svlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 17, 12, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10svlanPriority.setStatus('current')
zxr10svlanHelperVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 17, 12, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10svlanHelperVlan.setStatus('current')
zxr10vfpTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 18, 1), )
if mibBuilder.loadTexts: zxr10vfpTable.setStatus('current')
zxr10vfpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 18, 1, 1), ).setIndexNames((0, "ZXR10-SWITCH-MIB", "zxr10vfpInterfaceName"), (0, "ZXR10-SWITCH-MIB", "zxr10vfpSessionId"))
if mibBuilder.loadTexts: zxr10vfpEntry.setStatus('current')
zxr10vfpInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 18, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10vfpInterfaceName.setStatus('current')
zxr10vfpSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 18, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10vfpSessionId.setStatus('current')
zxr10vfpDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 18, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10vfpDescription.setStatus('current')
zxr10vfpInVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 18, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10vfpInVlan.setStatus('current')
zxr10vfpAclNO = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 18, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10vfpAclNO.setStatus('current')
zxr10vfpRuleNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 18, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10vfpRuleNo.setStatus('current')
zxr10vfpOvlan = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 18, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10vfpOvlan.setStatus('current')
zxr10vfpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 18, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10vfpPriority.setStatus('current')
zxr10vfpUntagAppFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 18, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("global", 0), ("pinpoint", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10vfpUntagAppFlag.setStatus('current')
zxr10vfpClassId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 18, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10vfpClassId.setStatus('current')
zxr10vfpVrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 18, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10vfpVrfId.setStatus('current')
dhcpIpSourceGuardIfNumber = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 102, 23, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dhcpIpSourceGuardIfNumber.setStatus('current')
dhcpIpSourceGuardTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 102, 23, 2), )
if mibBuilder.loadTexts: dhcpIpSourceGuardTable.setStatus('current')
dhcpIpSourceGuardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 102, 23, 2, 1), ).setIndexNames((0, "ZXR10-SWITCH-MIB", "dhcpIpSourceGuardSlot"), (0, "ZXR10-SWITCH-MIB", "dhcpIpSourceGuardPort"))
if mibBuilder.loadTexts: dhcpIpSourceGuardEntry.setStatus('current')
dhcpIpSourceGuardSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 23, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: dhcpIpSourceGuardSlot.setStatus('current')
dhcpIpSourceGuardPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 23, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: dhcpIpSourceGuardPort.setStatus('current')
dhcpIpSourceGuardControl = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 102, 23, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("disable", 0), ("ip-base", 1), ("mac-base", 2), ("mac-ip-base", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpIpSourceGuardControl.setStatus('current')
mibBuilder.exportSymbols("ZXR10-SWITCH-MIB", zxr10CpuVlanName=zxr10CpuVlanName, zxr10igmpSnoopingMemPorts7=zxr10igmpSnoopingMemPorts7, zxr10MemberShipVlansHybridUnTag3k=zxr10MemberShipVlansHybridUnTag3k, zess=zess, zxr10igmpSnoopingMemPorts9=zxr10igmpSnoopingMemPorts9, zxr10MemberShipPortName=zxr10MemberShipPortName, zxr10pimSnoopingNeighborVpnId=zxr10pimSnoopingNeighborVpnId, zxr10CpuVlanname=zxr10CpuVlanname, zessClearChangeTimes=zessClearChangeTimes, zxr10IgmpSnoopingTable=zxr10IgmpSnoopingTable, loopdetectTable=loopdetectTable, zxr10QinQExtendTpid=zxr10QinQExtendTpid, zessPriIfState=zessPriIfState, zxr10igmpSnoopingIpAddr=zxr10igmpSnoopingIpAddr, zxr10pimSnoopingMemPorts0=zxr10pimSnoopingMemPorts0, zxr10OutputAlarmDescription=zxr10OutputAlarmDescription, zxr10vlan=zxr10vlan, zxr10igmpSnoopingMemPorts6=zxr10igmpSnoopingMemPorts6, vctSetIfindex=vctSetIfindex, zxr10CpuVlanvpnId=zxr10CpuVlanvpnId, zxr10CpuVlanPvidEntry=zxr10CpuVlanPvidEntry, zxr10vfpInterfaceName=zxr10vfpInterfaceName, zxr10vfpTable=zxr10vfpTable, zxr10CpuVlanIf=zxr10CpuVlanIf, zxr10pimSnoopingMemPorts2=zxr10pimSnoopingMemPorts2, zxr10svlanDescription=zxr10svlanDescription, vctPair2Result=vctPair2Result, zxr10pimSnoopingMemPorts1=zxr10pimSnoopingMemPorts1, zxr10igmpSnoopingMaxHostNum=zxr10igmpSnoopingMaxHostNum, zxr10igmpSnoopingMemPorts10=zxr10igmpSnoopingMemPorts10, zxr10MemberShipVlansTag4k=zxr10MemberShipVlansTag4k, zxr10vfpSessionId=zxr10vfpSessionId, zxr10igmpSnoopingMemPorts12=zxr10igmpSnoopingMemPorts12, zxr10igmpSnoopingGroupId=zxr10igmpSnoopingGroupId, zxr10CpuVlanPvidTable=zxr10CpuVlanPvidTable, vctPortTable=vctPortTable, dhcpIpSourceGuardPort=dhcpIpSourceGuardPort, zxr10vfpOvlan=zxr10vfpOvlan, zxr10PimSnoopingNeighborEntry=zxr10PimSnoopingNeighborEntry, zxr10igmpSnoopingQueryResponseInterval=zxr10igmpSnoopingQueryResponseInterval, zxr10extAlarm=zxr10extAlarm, zxr10CpuVlanvpnid=zxr10CpuVlanvpnid, zxr10MemberShipTable=zxr10MemberShipTable, dhcpIpSourceGuardEntry=dhcpIpSourceGuardEntry, zxr10svlanRedirect=zxr10svlanRedirect, dhcpIpSourceGuardTable=dhcpIpSourceGuardTable, zxr10igmpSnoopingMrTimeOut=zxr10igmpSnoopingMrTimeOut, zxr10MemberShipVlansTag2k=zxr10MemberShipVlansTag2k, zxr10InputAlarmEntry=zxr10InputAlarmEntry, doubleCableLength7_8=doubleCableLength7_8, zxr10MemberShipVlansTag3k=zxr10MemberShipVlansTag3k, doubleCableStatus3_6=doubleCableStatus3_6, zxr10InputAlarmIndex=zxr10InputAlarmIndex, zxr10igmpSnoopingMemPorts0=zxr10igmpSnoopingMemPorts0, zxr10igmpSnoopingDropEnable=zxr10igmpSnoopingDropEnable, zxr10igmpSnoopingVlanId=zxr10igmpSnoopingVlanId, doubleCableStatus1_2=doubleCableStatus1_2, zxr10vfpPriority=zxr10vfpPriority, zxr10IgmpSnoopingEntry=zxr10IgmpSnoopingEntry, zxr10=zxr10, zxr10CpuVlanRowStatus=zxr10CpuVlanRowStatus, zxr10pimSnoopingMemPorts9=zxr10pimSnoopingMemPorts9, zxr10svlanTable=zxr10svlanTable, zxr10vfpAclNO=zxr10vfpAclNO, vctPair4Result=vctPair4Result, zxr10MemberShipPvid=zxr10MemberShipPvid, zxr10CpuVlanMemPortsPvid=zxr10CpuVlanMemPortsPvid, zxr10pimSnoopingMemPorts11=zxr10pimSnoopingMemPorts11, zxr10Cpuvlanid=zxr10Cpuvlanid, loopdetectReopenTime=loopdetectReopenTime, zxr10pimSnoopingMemPorts3=zxr10pimSnoopingMemPorts3, zxr10igmpSnoopingGroupNum=zxr10igmpSnoopingGroupNum, zxr10IgmpSnoopingVlanTable=zxr10IgmpSnoopingVlanTable, zxr10QinQMode=zxr10QinQMode, zxr10MemberShipVlansHybridUnTag2k=zxr10MemberShipVlansHybridUnTag2k, zxr10svlanAdvanced=zxr10svlanAdvanced, zxr10pimSnoopingEnable=zxr10pimSnoopingEnable, zxr10pimSnoopingMemPorts5=zxr10pimSnoopingMemPorts5, doubleCableLength1_2=doubleCableLength1_2, zxr10CpuVlanMtu=zxr10CpuVlanMtu, doubleCableLength4_5=doubleCableLength4_5, zxr10QinQStandardTpid=zxr10QinQStandardTpid, zxr10igmpSnoopingEnable=zxr10igmpSnoopingEnable, zxr10igmpSnoopingFastLeave=zxr10igmpSnoopingFastLeave, zxr10igmpSnoopingMemPorts8=zxr10igmpSnoopingMemPorts8, zxr10CpuVlanUntagTable=zxr10CpuVlanUntagTable, zxr10pimSnoopingMemPorts7=zxr10pimSnoopingMemPorts7, loopdetectPortVlan=loopdetectPortVlan, zessChangeTimes=zessChangeTimes, vctEntry=vctEntry, zxr10igmpSnoopingMemPorts4=zxr10igmpSnoopingMemPorts4, svlan=svlan, zxr10igmpSnoopingGlobalQuery=zxr10igmpSnoopingGlobalQuery, zxr10pimSnoopingMemPorts8=zxr10pimSnoopingMemPorts8, zessDomainTable=zessDomainTable, zxr10CpuVlanSaid=zxr10CpuVlanSaid, zxr10igmpSnoopingMemPorts2=zxr10igmpSnoopingMemPorts2, vctPair3Result=vctPair3Result, zxr10QinQ=zxr10QinQ, loopdetectPortNum=loopdetectPortNum, loopdetectPortName=loopdetectPortName, zxr10InputAlarmTable=zxr10InputAlarmTable, zxr10svlanHelperVlan=zxr10svlanHelperVlan, zxr10igmpSnoopingMemPorts5=zxr10igmpSnoopingMemPorts5, zxr10InputAlarmStatus=zxr10InputAlarmStatus, zxr10QinQPvid=zxr10QinQPvid, zxr10MemberShipEntry=zxr10MemberShipEntry, vctIsValid=vctIsValid, loopdetectPortOperStatus=loopdetectPortOperStatus, zessPrimaryPort=zessPrimaryPort, zxr10svlanPriority=zxr10svlanPriority, zte=zte, zxr10pimSnoopingNeighborSourceIpAddr=zxr10pimSnoopingNeighborSourceIpAddr, zxr10svlanCustomerPort=zxr10svlanCustomerPort, zxr10svlanFreeCount=zxr10svlanFreeCount, zxr10OutputAlarmEntry=zxr10OutputAlarmEntry, zessPreupDelayTime=zessPreupDelayTime, zxr10svlanOvlan=zxr10svlanOvlan, zxr10MemberShipMode=zxr10MemberShipMode, zxr10igmpSnoopingVlanEntryEnable=zxr10igmpSnoopingVlanEntryEnable, vctPortName=vctPortName, loopdetectPortMonitor=loopdetectPortMonitor, zxr10igmpSnoopingQueryInterval=zxr10igmpSnoopingQueryInterval, vctPair2Lenth=vctPair2Lenth, zxr10igmpSnoopingLastMemberQueryInterval=zxr10igmpSnoopingLastMemberQueryInterval, zxr10igmpSnoopingMemPorts3=zxr10igmpSnoopingMemPorts3, vctIfindex=vctIfindex, zxr10pimSnoopingVlanEntryEnable=zxr10pimSnoopingVlanEntryEnable, zessDomainRowStatus=zessDomainRowStatus, zxr10pimSnoopingNeighborId=zxr10pimSnoopingNeighborId, zxr10MemberShip=zxr10MemberShip, zxr10CpuVlanState=zxr10CpuVlanState, zxr10CpuVlanid=zxr10CpuVlanid, zxr10igmpSnoopingVlanEntryVlanId=zxr10igmpSnoopingVlanEntryVlanId, zxr10QinQTable=zxr10QinQTable, zessDomainState=zessDomainState, zxr10igmpSnoopingValid=zxr10igmpSnoopingValid, zxr10QinQTpid=zxr10QinQTpid, zxr10CpuVlanMemPortsUntag=zxr10CpuVlanMemPortsUntag, zxr10pimSnoopingNeighborVlanId=zxr10pimSnoopingNeighborVlanId, vctPair1Result=vctPair1Result, zxr10pimSnoopingMemPorts4=zxr10pimSnoopingMemPorts4, zxr10vfpInVlan=zxr10vfpInVlan, dhcpIpSourceGuardIfNumber=dhcpIpSourceGuardIfNumber, zxr10igmpSnoopingMaxGroupNum=zxr10igmpSnoopingMaxGroupNum, zxr10pimSnoopingMemPorts10=zxr10pimSnoopingMemPorts10, loopdetect=loopdetect, zxr10switch=zxr10switch, zxr10OutputAlarmTable=zxr10OutputAlarmTable, zxr10InputAlarmDescription=zxr10InputAlarmDescription, zessSecIfState=zessSecIfState, vctPair4Lenth=vctPair4Lenth, vct=vct, vctCableStatus=vctCableStatus, zxr10CpuVlanTagTable=zxr10CpuVlanTagTable, loopdetectPanelNum=loopdetectPanelNum, zessDomainId=zessDomainId, vctPortEntry=vctPortEntry, zessClearAllChangeTimes=zessClearAllChangeTimes, zxr10MemberShipVlansTag=zxr10MemberShipVlansTag, zessDomainMode=zessDomainMode, zxr10igmpSnoopingMemPorts11=zxr10igmpSnoopingMemPorts11, zxr10vfpClassId=zxr10vfpClassId, zxr10vfpUntagAppFlag=zxr10vfpUntagAppFlag, cableStatus=cableStatus, zxr10CpuVlanMemPortsTag=zxr10CpuVlanMemPortsTag, vfp=vfp, zxr10OutputAlarmStatus=zxr10OutputAlarmStatus, zxr10QinQPortName=zxr10QinQPortName, zxr10igmpSnoopingGroupMac=zxr10igmpSnoopingGroupMac, zxr10Cpuvlanname=zxr10Cpuvlanname, zxr10pimSnoopingMemPorts12=zxr10pimSnoopingMemPorts12, zxr10QinQEntry=zxr10QinQEntry, dhcpIpSourceGuardSlot=dhcpIpSourceGuardSlot, zessDomainEntry=zessDomainEntry, zxr10PimSnoopingNeighborTable=zxr10PimSnoopingNeighborTable, zxr10CpuVlanUntagEntry=zxr10CpuVlanUntagEntry, zxr10OutputAlarmIndex=zxr10OutputAlarmIndex, zxr10MemberShipVlansHybridUnTag=zxr10MemberShipVlansHybridUnTag, zxr10igmpSnoopingHostTimeOut=zxr10igmpSnoopingHostTimeOut, zxr10vfpDescription=zxr10vfpDescription, doubleCableStatus4_5=doubleCableStatus4_5, zxr10vfpEntry=zxr10vfpEntry, zxr10pimSnoopingMemPorts6=zxr10pimSnoopingMemPorts6, zxr10CpuVlanVpnid=zxr10CpuVlanVpnid, vctTable=vctTable, zxr10igmpSnooping=zxr10igmpSnooping, zxr10MemberShipVlansHybridUnTag4k=zxr10MemberShipVlansHybridUnTag4k, loopdetectEntry=loopdetectEntry, zxr10pimSnoopingNeighborPort=zxr10pimSnoopingNeighborPort, zxr10svlanUplinkPort=zxr10svlanUplinkPort, zxr10CpuVlanTagEntry=zxr10CpuVlanTagEntry, dhcp=dhcp, zxr10igmpSnoopingMemPorts1=zxr10igmpSnoopingMemPorts1, zxr10vfpRuleNo=zxr10vfpRuleNo, zxr10svlanCount=zxr10svlanCount, vctPair1Lenth=vctPair1Lenth, loopdetectPortRowStatus=loopdetectPortRowStatus, DisplayString=DisplayString, zxr10svlanEntry=zxr10svlanEntry, doubleCableLength3_6=doubleCableLength3_6, zessSecondaryPort=zessSecondaryPort, dhcpIpSourceGuardControl=dhcpIpSourceGuardControl, vctPair3Lenth=vctPair3Lenth, zxr10svlanInvlan=zxr10svlanInvlan, zxr10svlanSessionNo=zxr10svlanSessionNo, zxr10IgmpSnoopingVlanEntry=zxr10IgmpSnoopingVlanEntry, zxr10pimSnoopingNeighborValid=zxr10pimSnoopingNeighborValid, zxr10CpuVlanId=zxr10CpuVlanId, zxr10vfpVrfId=zxr10vfpVrfId, vctRowStatus=vctRowStatus, zessProtectInstanceId=zessProtectInstanceId, doubleCableStatus7_8=doubleCableStatus7_8)
