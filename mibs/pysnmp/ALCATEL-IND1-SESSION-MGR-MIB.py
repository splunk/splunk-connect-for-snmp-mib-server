#
# PySNMP MIB module ALCATEL-IND1-SESSION-MGR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-SESSION-MGR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:03:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
softentIND1Sesmgr, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1Sesmgr")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Integer32, Gauge32, Counter32, IpAddress, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, NotificationType, iso, MibIdentifier, Counter64, ModuleIdentity, Unsigned32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Gauge32", "Counter32", "IpAddress", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "NotificationType", "iso", "MibIdentifier", "Counter64", "ModuleIdentity", "Unsigned32", "ObjectIdentity")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
alcatelIND1SessionMgrMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1))
alcatelIND1SessionMgrMIB.setRevisions(('2010-05-13 00:00',))
if mibBuilder.loadTexts: alcatelIND1SessionMgrMIB.setLastUpdated('201005260000Z')
if mibBuilder.loadTexts: alcatelIND1SessionMgrMIB.setOrganization('Alcatel-Lucent')
alcatelIND1SessionMgrMIBNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 0))
if mibBuilder.loadTexts: alcatelIND1SessionMgrMIBNotifications.setStatus('current')
alcatelIND1SessionMgrMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1))
if mibBuilder.loadTexts: alcatelIND1SessionMgrMIBObjects.setStatus('current')
alcatelIND1SessionMgrMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 2))
if mibBuilder.loadTexts: alcatelIND1SessionMgrMIBConformance.setStatus('current')
alcatelIND1SessionMgrMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1SessionMgrMIBGroups.setStatus('current')
alcatelIND1SessionMgrMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1SessionMgrMIBCompliances.setStatus('current')
sessionMgr = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1))
sessionConfigTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 1), )
if mibBuilder.loadTexts: sessionConfigTable.setStatus('current')
sessionConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-SESSION-MGR-MIB", "sessionType"))
if mibBuilder.loadTexts: sessionConfigEntry.setStatus('current')
sessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cli", 1), ("http", 2), ("ftp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionType.setStatus('current')
sessionBannerFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sessionBannerFileName.setStatus('current')
sessionInactivityTimerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 596523)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sessionInactivityTimerValue.setStatus('current')
sessionDefaultPromptString = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)).clone('-> ')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sessionDefaultPromptString.setStatus('current')
sessionActiveTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 2), )
if mibBuilder.loadTexts: sessionActiveTable.setStatus('current')
sessionActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-SESSION-MGR-MIB", "sessionIndex"))
if mibBuilder.loadTexts: sessionActiveEntry.setStatus('current')
sessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionIndex.setStatus('current')
sessionAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("console", 1), ("telnet", 2), ("ftp", 3), ("http", 4), ("ssh", 5), ("https", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionAccessType.setStatus('current')
sessionPhysicalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notSignificant", 0), ("local", 1), ("ether", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionPhysicalPort.setStatus('current')
sessionUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 2, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionUserName.setStatus('current')
sessionUserReadPrivileges = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionUserReadPrivileges.setStatus('current')
sessionUserWritePrivileges = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionUserWritePrivileges.setStatus('current')
sessionUserProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 2, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionUserProfileName.setStatus('obsolete')
sessionUserIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 2, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionUserIpAddress.setStatus('current')
sessionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 2, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sessionRowStatus.setStatus('current')
sessionLoginTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 600)).clone(55)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sessionLoginTimeout.setStatus('current')
sessionLoginAttempt = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sessionLoginAttempt.setStatus('current')
sessionCliCommandLogEnable = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sessionCliCommandLogEnable.setStatus('current')
sessionXonXoffEnable = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sessionXonXoffEnable.setStatus('current')
switchMgtTrapsObj = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 7))
sessionAuthenticationTrap = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 0, 1)).setObjects(("ALCATEL-IND1-SESSION-MGR-MIB", "sessionAccessType"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionUserName"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionUserIpAddress"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionAuthFailure"))
if mibBuilder.loadTexts: sessionAuthenticationTrap.setStatus('current')
sessionAuthFailure = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 1, 1, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("unknownUser", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sessionAuthFailure.setStatus('current')
alcatelIND1SessionMgrMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-SESSION-MGR-MIB", "sessionConfigGroup"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionActiveGroup"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionObjectGroup"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionTrapsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1SessionMgrMIBCompliance = alcatelIND1SessionMgrMIBCompliance.setStatus('current')
sessionConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-SESSION-MGR-MIB", "sessionType"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionBannerFileName"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionInactivityTimerValue"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionDefaultPromptString"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sessionConfigGroup = sessionConfigGroup.setStatus('current')
sessionActiveGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-SESSION-MGR-MIB", "sessionIndex"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionAccessType"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionPhysicalPort"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionUserName"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionUserReadPrivileges"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionUserWritePrivileges"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionUserProfileName"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionUserIpAddress"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sessionActiveGroup = sessionActiveGroup.setStatus('current')
sessionTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-SESSION-MGR-MIB", "sessionAuthenticationTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sessionTrapsGroup = sessionTrapsGroup.setStatus('current')
sessionObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 7, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-SESSION-MGR-MIB", "sessionLoginTimeout"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionLoginAttempt"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionCliCommandLogEnable"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionXonXoffEnable"), ("ALCATEL-IND1-SESSION-MGR-MIB", "sessionAuthFailure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sessionObjectGroup = sessionObjectGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-SESSION-MGR-MIB", alcatelIND1SessionMgrMIBNotifications=alcatelIND1SessionMgrMIBNotifications, sessionLoginTimeout=sessionLoginTimeout, sessionConfigGroup=sessionConfigGroup, alcatelIND1SessionMgrMIBCompliance=alcatelIND1SessionMgrMIBCompliance, sessionObjectGroup=sessionObjectGroup, sessionInactivityTimerValue=sessionInactivityTimerValue, alcatelIND1SessionMgrMIBGroups=alcatelIND1SessionMgrMIBGroups, sessionUserIpAddress=sessionUserIpAddress, sessionUserProfileName=sessionUserProfileName, sessionAuthFailure=sessionAuthFailure, PYSNMP_MODULE_ID=alcatelIND1SessionMgrMIB, sessionRowStatus=sessionRowStatus, sessionDefaultPromptString=sessionDefaultPromptString, sessionActiveTable=sessionActiveTable, sessionConfigTable=sessionConfigTable, sessionUserReadPrivileges=sessionUserReadPrivileges, sessionBannerFileName=sessionBannerFileName, sessionTrapsGroup=sessionTrapsGroup, sessionActiveGroup=sessionActiveGroup, sessionPhysicalPort=sessionPhysicalPort, sessionAccessType=sessionAccessType, alcatelIND1SessionMgrMIBObjects=alcatelIND1SessionMgrMIBObjects, sessionConfigEntry=sessionConfigEntry, sessionIndex=sessionIndex, sessionUserName=sessionUserName, switchMgtTrapsObj=switchMgtTrapsObj, alcatelIND1SessionMgrMIBCompliances=alcatelIND1SessionMgrMIBCompliances, alcatelIND1SessionMgrMIBConformance=alcatelIND1SessionMgrMIBConformance, sessionCliCommandLogEnable=sessionCliCommandLogEnable, sessionMgr=sessionMgr, sessionXonXoffEnable=sessionXonXoffEnable, sessionLoginAttempt=sessionLoginAttempt, sessionType=sessionType, sessionActiveEntry=sessionActiveEntry, sessionAuthenticationTrap=sessionAuthenticationTrap, sessionUserWritePrivileges=sessionUserWritePrivileges, alcatelIND1SessionMgrMIB=alcatelIND1SessionMgrMIB)
