#
# PySNMP MIB module XPNNI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XPNNI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:38:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Bits, iso, MibIdentifier, Integer32, ObjectIdentity, TimeTicks, Counter64, IpAddress, Counter32, ModuleIdentity, NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Bits", "iso", "MibIdentifier", "Integer32", "ObjectIdentity", "TimeTicks", "Counter64", "IpAddress", "Counter32", "ModuleIdentity", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
xylanPnni, = mibBuilder.importSymbols("XYLAN-BASE-MIB", "xylanPnni")
pnnixMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1))
pnnixMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1))
class PnnixAtmAddr(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(20, 20), )
class PnnixNodeIndex(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 65535)

class InterfaceIndex(Integer32):
    pass

class TruthValue(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("true", 1), ("false", 2))

class AtmpTrafficDescrParamIndex(Integer32):
    pass

class PnnixNodeId(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(22, 22)
    fixedLength = 22

class PnnixPortId(Gauge32):
    pass

class PnnixAggrToken(Gauge32):
    pass

class PnnixPeerGroupId(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(14, 14)
    fixedLength = 14

class PnnixLevel(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 104)

class PnnixSvccRccIndex(Integer32):
    pass

class AtmAddrPrefix(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(19, 19)
    fixedLength = 19

class PnnixPrefixLength(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 152)

class PnnixMetricsTag(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class ServiceCategory(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("other", 1), ("cbr", 2), ("rtVbr", 3), ("nrtVbr", 4), ("abr", 5), ("ubr", 6))

class ClpType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("clpEqual0", 1), ("clpEqual0Or1", 2))

class TnsType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 8))
    namedValues = NamedValues(("nationalNetworkIdentification", 2), ("other", 8))

class TnsPlan(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 16))
    namedValues = NamedValues(("carrierIdentificationCode", 1), ("other", 16))

class PnnixVersion(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("unsupported", 1), ("version1point0", 2))

class PnnixHelloState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("notApplicable", 1), ("down", 2), ("attempt", 3), ("oneWayInside", 4), ("twoWayInside", 5), ("oneWayOutside", 6), ("twoWayOutside", 7), ("commonOutside", 8))

pnnixBaseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 1))
pnnixHighestVersion = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 1, 1), PnnixVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixHighestVersion.setStatus('mandatory')
pnnixLowestVersion = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 1, 2), PnnixVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixLowestVersion.setStatus('mandatory')
pnnixDtlCountOriginator = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixDtlCountOriginator.setStatus('mandatory')
pnnixDtlCountBorder = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixDtlCountBorder.setStatus('mandatory')
pnnixCrankbackCountOriginator = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixCrankbackCountOriginator.setStatus('mandatory')
pnnixCrankbackCountBorder = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixCrankbackCountBorder.setStatus('mandatory')
pnnixAltRouteCountOriginator = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixAltRouteCountOriginator.setStatus('mandatory')
pnnixAltRouteCountBorder = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixAltRouteCountBorder.setStatus('mandatory')
pnnixRouteFailCountOriginator = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRouteFailCountOriginator.setStatus('mandatory')
pnnixRouteFailCountBorder = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRouteFailCountBorder.setStatus('mandatory')
pnnixRouteFailUnreachableOriginator = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRouteFailUnreachableOriginator.setStatus('mandatory')
pnnixRouteFailUnreachableBorder = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRouteFailUnreachableBorder.setStatus('mandatory')
pnnixNodeTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 2), )
if mibBuilder.loadTexts: pnnixNodeTable.setStatus('mandatory')
pnnixNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 2, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"))
if mibBuilder.loadTexts: pnnixNodeEntry.setStatus('mandatory')
pnnixNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 2, 1, 1), PnnixNodeIndex())
if mibBuilder.loadTexts: pnnixNodeIndex.setStatus('mandatory')
pnnixNodeLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 2, 1, 2), PnnixLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeLevel.setStatus('mandatory')
pnnixNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 2, 1, 3), PnnixNodeId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeId.setStatus('mandatory')
pnnixNodeLowest = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 2, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeLowest.setStatus('mandatory')
pnnixNodeAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeAdminStatus.setStatus('mandatory')
pnnixNodeOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNodeOperStatus.setStatus('mandatory')
pnnixNodeDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeDomainName.setStatus('mandatory')
pnnixNodeAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 2, 1, 8), PnnixAtmAddr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeAtmAddress.setStatus('mandatory')
pnnixNodePeerGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 2, 1, 9), PnnixPeerGroupId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodePeerGroupId.setStatus('mandatory')
pnnixNodeRestrictedTransit = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 2, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeRestrictedTransit.setStatus('mandatory')
pnnixNodeComplexRep = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 2, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeComplexRep.setStatus('mandatory')
pnnixNodeRestrictedBranching = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 2, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNodeRestrictedBranching.setStatus('mandatory')
pnnixNodeDatabaseOverload = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 2, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNodeDatabaseOverload.setStatus('mandatory')
pnnixNodePtses = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNodePtses.setStatus('mandatory')
pnnixNodeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("create", 1), ("modify", 2), ("delete", 3), ("active", 4), ("notActive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeRowStatus.setStatus('mandatory')
pnnixNodePglTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 3), )
if mibBuilder.loadTexts: pnnixNodePglTable.setStatus('mandatory')
pnnixNodePglEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 3, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"))
if mibBuilder.loadTexts: pnnixNodePglEntry.setStatus('mandatory')
pnnixNodePglLeadershipPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 205))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodePglLeadershipPriority.setStatus('mandatory')
pnnixNodeCfgParentNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 3, 1, 2), PnnixNodeIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeCfgParentNodeIndex.setStatus('mandatory')
pnnixNodePglInitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodePglInitTime.setStatus('mandatory')
pnnixNodePglOverrideDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodePglOverrideDelay.setStatus('mandatory')
pnnixNodePglReelectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodePglReelectTime.setStatus('mandatory')
pnnixNodePglState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("starting", 1), ("awaiting", 2), ("awaitingFull", 3), ("initialDelay", 4), ("calculating", 5), ("awaitUnanimity", 6), ("operPgl", 7), ("operNotPgl", 8), ("hungElection", 9), ("awaitReElection", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNodePglState.setStatus('mandatory')
pnnixNodePreferredPgl = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 3, 1, 7), PnnixNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNodePreferredPgl.setStatus('mandatory')
pnnixNodePeerGroupLeader = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 3, 1, 8), PnnixNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNodePeerGroupLeader.setStatus('mandatory')
pnnixNodePglTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 3, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNodePglTimeStamp.setStatus('mandatory')
pnnixNodeActiveParentNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 3, 1, 10), PnnixNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNodeActiveParentNodeId.setStatus('mandatory')
pnnixNodeTimerTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 4), )
if mibBuilder.loadTexts: pnnixNodeTimerTable.setStatus('mandatory')
pnnixNodeTimerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 4, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"))
if mibBuilder.loadTexts: pnnixNodeTimerEntry.setStatus('mandatory')
pnnixNodePtseHolddown = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 4, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodePtseHolddown.setStatus('mandatory')
pnnixNodeHelloHolddown = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeHelloHolddown.setStatus('mandatory')
pnnixNodeHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 4, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeHelloInterval.setStatus('mandatory')
pnnixNodeHelloInactivityFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeHelloInactivityFactor.setStatus('mandatory')
pnnixNodeHlinkInact = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 4, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeHlinkInact.setStatus('mandatory')
pnnixNodePtseRefreshInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodePtseRefreshInterval.setStatus('mandatory')
pnnixNodePtseLifetimeFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(101, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodePtseLifetimeFactor.setStatus('mandatory')
pnnixNodeRxmtInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 4, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeRxmtInterval.setStatus('mandatory')
pnnixNodePeerDelayedAckInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 4, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodePeerDelayedAckInterval.setStatus('mandatory')
pnnixNodeAvcrPm = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeAvcrPm.setStatus('mandatory')
pnnixNodeAvcrMt = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeAvcrMt.setStatus('mandatory')
pnnixNodeCdvPm = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeCdvPm.setStatus('mandatory')
pnnixNodeCtdPm = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeCtdPm.setStatus('mandatory')
pnnixNodeSvccTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 5), )
if mibBuilder.loadTexts: pnnixNodeSvccTable.setStatus('mandatory')
pnnixNodeSvccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 5, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"))
if mibBuilder.loadTexts: pnnixNodeSvccEntry.setStatus('mandatory')
pnnixNodeSvccInitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 5, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeSvccInitTime.setStatus('mandatory')
pnnixNodeSvccRetryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 5, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeSvccRetryTime.setStatus('mandatory')
pnnixNodeSvccCallingIntegrityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 5, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeSvccCallingIntegrityTime.setStatus('mandatory')
pnnixNodeSvccCalledIntegrityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 5, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeSvccCalledIntegrityTime.setStatus('mandatory')
pnnixNodeSvccTrafficDescriptorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 5, 1, 5), AtmpTrafficDescrParamIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixNodeSvccTrafficDescriptorIndex.setStatus('mandatory')
pnnixScopeMappingTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 6), )
if mibBuilder.loadTexts: pnnixScopeMappingTable.setStatus('mandatory')
pnnixScopeMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 6, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"))
if mibBuilder.loadTexts: pnnixScopeMappingEntry.setStatus('mandatory')
pnnixScopeLocalNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 6, 1, 1), PnnixLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixScopeLocalNetwork.setStatus('mandatory')
pnnixScopeLocalNetworkPlusOne = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 6, 1, 2), PnnixLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixScopeLocalNetworkPlusOne.setStatus('mandatory')
pnnixScopeLocalNetworkPlusTwo = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 6, 1, 3), PnnixLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixScopeLocalNetworkPlusTwo.setStatus('mandatory')
pnnixScopeSiteMinusOne = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 6, 1, 4), PnnixLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixScopeSiteMinusOne.setStatus('mandatory')
pnnixScopeIntraSite = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 6, 1, 5), PnnixLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixScopeIntraSite.setStatus('mandatory')
pnnixScopeSitePlusOne = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 6, 1, 6), PnnixLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixScopeSitePlusOne.setStatus('mandatory')
pnnixScopeOrganizationMinusOne = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 6, 1, 7), PnnixLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixScopeOrganizationMinusOne.setStatus('mandatory')
pnnixScopeIntraOrganization = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 6, 1, 8), PnnixLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixScopeIntraOrganization.setStatus('mandatory')
pnnixScopeOrganizationPlusOne = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 6, 1, 9), PnnixLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixScopeOrganizationPlusOne.setStatus('mandatory')
pnnixScopeCommunityMinusOne = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 6, 1, 10), PnnixLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixScopeCommunityMinusOne.setStatus('mandatory')
pnnixScopeIntraCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 6, 1, 11), PnnixLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixScopeIntraCommunity.setStatus('mandatory')
pnnixScopeCommunityPlusOne = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 6, 1, 12), PnnixLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixScopeCommunityPlusOne.setStatus('mandatory')
pnnixScopeRegional = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 6, 1, 13), PnnixLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixScopeRegional.setStatus('mandatory')
pnnixScopeInterRegional = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 6, 1, 14), PnnixLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixScopeInterRegional.setStatus('mandatory')
pnnixScopeGlobal = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 6, 1, 15), PnnixLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixScopeGlobal.setStatus('mandatory')
pnnixSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 7), )
if mibBuilder.loadTexts: pnnixSummaryTable.setStatus('mandatory')
pnnixSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 7, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"), (0, "XPNNI-MIB", "pnnixSummaryAddress"), (0, "XPNNI-MIB", "pnnixSummaryPrefixLength"))
if mibBuilder.loadTexts: pnnixSummaryEntry.setStatus('mandatory')
pnnixSummaryAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 7, 1, 1), AtmAddrPrefix())
if mibBuilder.loadTexts: pnnixSummaryAddress.setStatus('mandatory')
pnnixSummaryPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 7, 1, 2), PnnixPrefixLength())
if mibBuilder.loadTexts: pnnixSummaryPrefixLength.setStatus('mandatory')
pnnixSummaryType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("exterior", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixSummaryType.setStatus('mandatory')
pnnixSummarySuppress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 7, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixSummarySuppress.setStatus('mandatory')
pnnixSummaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("advertising", 1), ("suppressing", 2), ("inactive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixSummaryState.setStatus('mandatory')
pnnixSummaryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("create", 1), ("modify", 2), ("delete", 3), ("active", 4), ("notActive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixSummaryRowStatus.setStatus('mandatory')
pnnixIfTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 8), )
if mibBuilder.loadTexts: pnnixIfTable.setStatus('mandatory')
pnnixIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pnnixIfEntry.setStatus('mandatory')
pnnixIfNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 8, 1, 1), PnnixNodeIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixIfNodeIndex.setStatus('mandatory')
pnnixIfPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 8, 1, 2), PnnixPortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixIfPortId.setStatus('mandatory')
pnnixIfAggrToken = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 8, 1, 3), PnnixAggrToken()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixIfAggrToken.setStatus('mandatory')
pnnixIfVPCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 8, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixIfVPCapability.setStatus('mandatory')
pnnixIfAdmWeightCbr = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 8, 1, 5), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixIfAdmWeightCbr.setStatus('mandatory')
pnnixIfAdmWeightRtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 8, 1, 6), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixIfAdmWeightRtVbr.setStatus('mandatory')
pnnixIfAdmWeightNrtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 8, 1, 7), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixIfAdmWeightNrtVbr.setStatus('mandatory')
pnnixIfAdmWeightAbr = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 8, 1, 8), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixIfAdmWeightAbr.setStatus('mandatory')
pnnixIfAdmWeightUbr = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 8, 1, 9), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixIfAdmWeightUbr.setStatus('mandatory')
pnnixIfRccServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 8, 1, 10), ServiceCategory()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixIfRccServiceCategory.setStatus('mandatory')
pnnixIfRccTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 8, 1, 11), AtmpTrafficDescrParamIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixIfRccTrafficDescrIndex.setStatus('mandatory')
pnnixLinkTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 9), )
if mibBuilder.loadTexts: pnnixLinkTable.setStatus('mandatory')
pnnixLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 9, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"), (0, "XPNNI-MIB", "pnnixLinkPortId"))
if mibBuilder.loadTexts: pnnixLinkEntry.setStatus('mandatory')
pnnixLinkPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 9, 1, 1), Integer32())
if mibBuilder.loadTexts: pnnixLinkPortId.setStatus('mandatory')
pnnixLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("lowestLevelHorizontalLink", 2), ("horizontalLinkToFromLgn", 3), ("lowestLevelOutsideLink", 4), ("uplink", 5), ("outsideLinkAndUplink", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixLinkType.setStatus('mandatory')
pnnixLinkVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 9, 1, 3), PnnixVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixLinkVersion.setStatus('mandatory')
pnnixLinkHelloState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 9, 1, 4), PnnixHelloState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixLinkHelloState.setStatus('mandatory')
pnnixLinkRemoteNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 9, 1, 5), PnnixNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixLinkRemoteNodeId.setStatus('mandatory')
pnnixLinkRemotePortId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 9, 1, 6), PnnixPortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixLinkRemotePortId.setStatus('mandatory')
pnnixLinkDerivedAggrToken = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 9, 1, 7), PnnixAggrToken()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixLinkDerivedAggrToken.setStatus('mandatory')
pnnixLinkUpnodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 9, 1, 8), PnnixNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixLinkUpnodeId.setStatus('mandatory')
pnnixLinkUpnodeAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 9, 1, 9), PnnixAtmAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixLinkUpnodeAtmAddress.setStatus('mandatory')
pnnixLinkCommonPeerGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 9, 1, 10), PnnixPeerGroupId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixLinkCommonPeerGroupId.setStatus('mandatory')
pnnixLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 9, 1, 11), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixLinkIfIndex.setStatus('mandatory')
pnnixLinkSvccRccIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 9, 1, 12), PnnixSvccRccIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixLinkSvccRccIndex.setStatus('mandatory')
pnnixLinkRcvHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 9, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixLinkRcvHellos.setStatus('mandatory')
pnnixLinkXmtHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 9, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixLinkXmtHellos.setStatus('mandatory')
pnnixNbrPeerTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 10), )
if mibBuilder.loadTexts: pnnixNbrPeerTable.setStatus('mandatory')
pnnixNbrPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 10, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"), (0, "XPNNI-MIB", "pnnixNbrPeerRemoteNodeId"))
if mibBuilder.loadTexts: pnnixNbrPeerEntry.setStatus('mandatory')
pnnixNbrPeerRemoteNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 10, 1, 1), PnnixNodeId())
if mibBuilder.loadTexts: pnnixNbrPeerRemoteNodeId.setStatus('mandatory')
pnnixNbrPeerState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("npdown", 1), ("negotiating", 2), ("exchanging", 3), ("loading", 4), ("full", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNbrPeerState.setStatus('mandatory')
pnnixNbrPeerSvccRccIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 10, 1, 3), PnnixSvccRccIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNbrPeerSvccRccIndex.setStatus('mandatory')
pnnixNbrPeerPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 10, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNbrPeerPortCount.setStatus('mandatory')
pnnixNbrPeerRcvDbSums = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNbrPeerRcvDbSums.setStatus('mandatory')
pnnixNbrPeerXmtDbSums = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNbrPeerXmtDbSums.setStatus('mandatory')
pnnixNbrPeerRcvPtsps = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNbrPeerRcvPtsps.setStatus('mandatory')
pnnixNbrPeerXmtPtsps = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNbrPeerXmtPtsps.setStatus('mandatory')
pnnixNbrPeerRcvPtseReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 10, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNbrPeerRcvPtseReqs.setStatus('mandatory')
pnnixNbrPeerXmtPtseReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 10, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNbrPeerXmtPtseReqs.setStatus('mandatory')
pnnixNbrPeerRcvPtseAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 10, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNbrPeerRcvPtseAcks.setStatus('mandatory')
pnnixNbrPeerXmtPtseAcks = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 10, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNbrPeerXmtPtseAcks.setStatus('mandatory')
pnnixNbrPeerPortTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 11), )
if mibBuilder.loadTexts: pnnixNbrPeerPortTable.setStatus('mandatory')
pnnixNbrPeerPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 11, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"), (0, "XPNNI-MIB", "pnnixNbrPeerRemoteNodeId"), (0, "XPNNI-MIB", "pnnixNbrPeerPortId"))
if mibBuilder.loadTexts: pnnixNbrPeerPortEntry.setStatus('mandatory')
pnnixNbrPeerPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 11, 1, 1), Integer32())
if mibBuilder.loadTexts: pnnixNbrPeerPortId.setStatus('mandatory')
pnnixNbrPeerPortFloodStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 11, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNbrPeerPortFloodStatus.setStatus('mandatory')
pnnixSvccRccTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 12), )
if mibBuilder.loadTexts: pnnixSvccRccTable.setStatus('mandatory')
pnnixSvccRccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 12, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"), (0, "XPNNI-MIB", "pnnixSvccRccIndex"))
if mibBuilder.loadTexts: pnnixSvccRccEntry.setStatus('mandatory')
pnnixSvccRccIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 12, 1, 1), PnnixSvccRccIndex())
if mibBuilder.loadTexts: pnnixSvccRccIndex.setStatus('mandatory')
pnnixSvccRccVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 12, 1, 2), PnnixVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixSvccRccVersion.setStatus('mandatory')
pnnixSvccRccHelloState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 12, 1, 3), PnnixHelloState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixSvccRccHelloState.setStatus('mandatory')
pnnixSvccRccRemoteNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 12, 1, 4), PnnixNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixSvccRccRemoteNodeId.setStatus('mandatory')
pnnixSvccRccRemoteAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 12, 1, 5), PnnixAtmAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixSvccRccRemoteAtmAddress.setStatus('mandatory')
pnnixSvccRccRcvHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixSvccRccRcvHellos.setStatus('mandatory')
pnnixSvccRccXmtHellos = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 12, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixSvccRccXmtHellos.setStatus('mandatory')
pnnixSvccRccIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 12, 1, 8), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixSvccRccIfIndex.setStatus('mandatory')
pnnixSvccRccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 12, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixSvccRccVpi.setStatus('mandatory')
pnnixSvccRccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 12, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixSvccRccVci.setStatus('mandatory')
pnnixPtseTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 13), )
if mibBuilder.loadTexts: pnnixPtseTable.setStatus('mandatory')
pnnixPtseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 13, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"), (0, "XPNNI-MIB", "pnnixPtseOriginatingNodeId"), (0, "XPNNI-MIB", "pnnixPtseId"))
if mibBuilder.loadTexts: pnnixPtseEntry.setStatus('mandatory')
pnnixPtseOriginatingNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 13, 1, 1), PnnixNodeId())
if mibBuilder.loadTexts: pnnixPtseOriginatingNodeId.setStatus('mandatory')
pnnixPtseId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 13, 1, 2), Integer32())
if mibBuilder.loadTexts: pnnixPtseId.setStatus('mandatory')
pnnixPtseType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 96, 97, 224, 256, 288, 289))).clone(namedValues=NamedValues(("other", 1), ("nodalStateParameters", 96), ("nodalInformation", 97), ("internalReachableAddresses", 224), ("exteriorReachableAddresses", 256), ("horizontalLinks", 288), ("uplinks", 289)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixPtseType.setStatus('mandatory')
pnnixPtseSequenceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 13, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixPtseSequenceNum.setStatus('mandatory')
pnnixPtseChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 13, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixPtseChecksum.setStatus('mandatory')
pnnixPtseLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 13, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixPtseLifeTime.setStatus('mandatory')
pnnixPtseInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 13, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixPtseInfo.setStatus('mandatory')
pnnixMapTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 14), )
if mibBuilder.loadTexts: pnnixMapTable.setStatus('mandatory')
pnnixMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 14, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"), (0, "XPNNI-MIB", "pnnixMapOriginatingNodeId"), (0, "XPNNI-MIB", "pnnixMapOriginatingPortId"), (0, "XPNNI-MIB", "pnnixMapIndex"))
if mibBuilder.loadTexts: pnnixMapEntry.setStatus('mandatory')
pnnixMapOriginatingNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 14, 1, 1), PnnixNodeId())
if mibBuilder.loadTexts: pnnixMapOriginatingNodeId.setStatus('mandatory')
pnnixMapOriginatingPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 14, 1, 2), Integer32())
if mibBuilder.loadTexts: pnnixMapOriginatingPortId.setStatus('mandatory')
pnnixMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: pnnixMapIndex.setStatus('mandatory')
pnnixMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("horizontalLink", 1), ("uplink", 2), ("node", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapType.setStatus('mandatory')
pnnixMapPeerGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 14, 1, 5), PnnixPeerGroupId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapPeerGroupId.setStatus('mandatory')
pnnixMapAggrToken = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 14, 1, 6), PnnixAggrToken()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapAggrToken.setStatus('mandatory')
pnnixMapRemoteNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 14, 1, 7), PnnixNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapRemoteNodeId.setStatus('mandatory')
pnnixMapRemotePortId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 14, 1, 8), PnnixPortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapRemotePortId.setStatus('mandatory')
pnnixMapVPCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 14, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapVPCapability.setStatus('mandatory')
pnnixMapPtseId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 14, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapPtseId.setStatus('mandatory')
pnnixMapMetricsTag = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 14, 1, 11), PnnixMetricsTag().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapMetricsTag.setStatus('mandatory')
pnnixMapNodeTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 15), )
if mibBuilder.loadTexts: pnnixMapNodeTable.setStatus('mandatory')
pnnixMapNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 15, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"), (0, "XPNNI-MIB", "pnnixMapNodeId"))
if mibBuilder.loadTexts: pnnixMapNodeEntry.setStatus('mandatory')
pnnixMapNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 15, 1, 1), PnnixNodeId())
if mibBuilder.loadTexts: pnnixMapNodeId.setStatus('mandatory')
pnnixMapNodePeerGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 15, 1, 2), PnnixPeerGroupId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapNodePeerGroupId.setStatus('mandatory')
pnnixMapNodeAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 15, 1, 3), PnnixAtmAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapNodeAtmAddress.setStatus('mandatory')
pnnixMapNodeRestrictedTransit = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 15, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapNodeRestrictedTransit.setStatus('mandatory')
pnnixMapNodeComplexRep = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 15, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapNodeComplexRep.setStatus('mandatory')
pnnixMapNodeRestrictedBranching = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 15, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapNodeRestrictedBranching.setStatus('mandatory')
pnnixMapNodeDatabaseOverload = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 15, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapNodeDatabaseOverload.setStatus('mandatory')
pnnixMapNodeIAmLeader = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 15, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapNodeIAmLeader.setStatus('mandatory')
pnnixMapNodeLeadershipPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 15, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapNodeLeadershipPriority.setStatus('mandatory')
pnnixMapNodePreferredPgl = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 15, 1, 10), PnnixNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapNodePreferredPgl.setStatus('mandatory')
pnnixMapNodeParentNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 15, 1, 11), PnnixNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapNodeParentNodeId.setStatus('mandatory')
pnnixMapNodeParentAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 15, 1, 12), PnnixAtmAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapNodeParentAtmAddress.setStatus('mandatory')
pnnixMapNodeParentPeerGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 15, 1, 13), PnnixPeerGroupId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapNodeParentPeerGroupId.setStatus('mandatory')
pnnixMapNodeParentPglNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 15, 1, 14), PnnixNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapNodeParentPglNodeId.setStatus('mandatory')
pnnixMapAddrTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 16), )
if mibBuilder.loadTexts: pnnixMapAddrTable.setStatus('mandatory')
pnnixMapAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 16, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"), (0, "XPNNI-MIB", "pnnixMapAddrAdvertisingNodeId"), (0, "XPNNI-MIB", "pnnixMapAddrAdvertisedPortId"), (0, "XPNNI-MIB", "pnnixMapAddrIndex"))
if mibBuilder.loadTexts: pnnixMapAddrEntry.setStatus('mandatory')
pnnixMapAddrAdvertisingNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 16, 1, 1), PnnixNodeId())
if mibBuilder.loadTexts: pnnixMapAddrAdvertisingNodeId.setStatus('mandatory')
pnnixMapAddrAdvertisedPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 16, 1, 2), Integer32())
if mibBuilder.loadTexts: pnnixMapAddrAdvertisedPortId.setStatus('mandatory')
pnnixMapAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 16, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pnnixMapAddrIndex.setStatus('mandatory')
pnnixMapAddrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 16, 1, 4), AtmAddrPrefix()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapAddrAddress.setStatus('mandatory')
pnnixMapAddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 16, 1, 5), PnnixPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapAddrPrefixLength.setStatus('mandatory')
pnnixMapTnsTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 17), )
if mibBuilder.loadTexts: pnnixMapTnsTable.setStatus('mandatory')
pnnixMapTnsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 17, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"), (0, "XPNNI-MIB", "pnnixMapTnsAdvertisingNodeId"), (0, "XPNNI-MIB", "pnnixMapTnsAdvertisedPortId"), (0, "XPNNI-MIB", "pnnixMapTnsType"), (0, "XPNNI-MIB", "pnnixMapTnsPlan"), (0, "XPNNI-MIB", "pnnixMapTnsId"))
if mibBuilder.loadTexts: pnnixMapTnsEntry.setStatus('mandatory')
pnnixMapTnsAdvertisingNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 17, 1, 1), Integer32())
if mibBuilder.loadTexts: pnnixMapTnsAdvertisingNodeId.setStatus('mandatory')
pnnixMapTnsAdvertisedPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 17, 1, 2), Integer32())
if mibBuilder.loadTexts: pnnixMapTnsAdvertisedPortId.setStatus('mandatory')
pnnixMapTnsType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 17, 1, 3), TnsType())
if mibBuilder.loadTexts: pnnixMapTnsType.setStatus('mandatory')
pnnixMapTnsPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 17, 1, 4), TnsPlan())
if mibBuilder.loadTexts: pnnixMapTnsPlan.setStatus('mandatory')
pnnixMapTnsId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 17, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixMapTnsId.setStatus('mandatory')
pnnixMetricsTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 18), )
if mibBuilder.loadTexts: pnnixMetricsTable.setStatus('mandatory')
pnnixMetricsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 18, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"), (0, "XPNNI-MIB", "pnnixMetricsTag"), (0, "XPNNI-MIB", "pnnixMetricsDirection"), (0, "XPNNI-MIB", "pnnixMetricsIndex"))
if mibBuilder.loadTexts: pnnixMetricsEntry.setStatus('mandatory')
pnnixMetricsTag = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 18, 1, 1), PnnixMetricsTag().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pnnixMetricsTag.setStatus('mandatory')
pnnixMetricsDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("incoming", 1), ("outgoing", 2))))
if mibBuilder.loadTexts: pnnixMetricsDirection.setStatus('mandatory')
pnnixMetricsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 18, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pnnixMetricsIndex.setStatus('mandatory')
pnnixMetricsClasses = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 18, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixMetricsClasses.setStatus('mandatory')
pnnixMetricsGcacClp = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 18, 1, 5), ClpType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixMetricsGcacClp.setStatus('mandatory')
pnnixMetricsAdminWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 18, 1, 6), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixMetricsAdminWeight.setStatus('mandatory')
pnnixMetrics1 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 18, 1, 7), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixMetrics1.setStatus('mandatory')
pnnixMetrics2 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 18, 1, 8), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixMetrics2.setStatus('mandatory')
pnnixMetrics3 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 18, 1, 9), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixMetrics3.setStatus('mandatory')
pnnixMetrics4 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 18, 1, 10), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixMetrics4.setStatus('mandatory')
pnnixMetrics5 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 18, 1, 11), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixMetrics5.setStatus('mandatory')
pnnixMetrics6 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 18, 1, 12), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixMetrics6.setStatus('mandatory')
pnnixMetrics7 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 18, 1, 13), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixMetrics7.setStatus('mandatory')
pnnixMetrics8 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 18, 1, 14), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixMetrics8.setStatus('mandatory')
pnnixMetricsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 18, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("create", 1), ("modify", 2), ("delete", 3), ("active", 4), ("notActive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixMetricsRowStatus.setStatus('mandatory')
pnnixRoutingGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19))
pnnixRouteBaseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 1))
pnnixRouteNodeNumber = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRouteNodeNumber.setStatus('mandatory')
pnnixRouteAddrNumber = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRouteAddrNumber.setStatus('mandatory')
pnnixRouteNodeTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2), )
if mibBuilder.loadTexts: pnnixRouteNodeTable.setStatus('mandatory')
pnnixRouteNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"), (0, "XPNNI-MIB", "pnnixRouteNodeClass"), (0, "XPNNI-MIB", "pnnixRouteNodeDestNodeId"), (0, "XPNNI-MIB", "pnnixRouteNodeDTL"))
if mibBuilder.loadTexts: pnnixRouteNodeEntry.setStatus('mandatory')
pnnixRouteNodeClass = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 1), ServiceCategory())
if mibBuilder.loadTexts: pnnixRouteNodeClass.setStatus('mandatory')
pnnixRouteNodeDestNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 2), PnnixNodeId())
if mibBuilder.loadTexts: pnnixRouteNodeDestNodeId.setStatus('mandatory')
pnnixRouteNodeDTL = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: pnnixRouteNodeDTL.setStatus('mandatory')
pnnixRouteNodeDestPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 4), PnnixPortId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeDestPortId.setStatus('mandatory')
pnnixRouteNodeProto = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("mgmt", 3), ("pnni", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRouteNodeProto.setStatus('mandatory')
pnnixRouteNodeTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRouteNodeTimeStamp.setStatus('mandatory')
pnnixRouteNodeInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 7), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeInfo.setStatus('mandatory')
pnnixRouteNodeGcacClp = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 8), ClpType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeGcacClp.setStatus('mandatory')
pnnixRouteNodeFwdMetricAW = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 9), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeFwdMetricAW.setStatus('mandatory')
pnnixRouteNodeFwdMetric1 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 10), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeFwdMetric1.setStatus('mandatory')
pnnixRouteNodeFwdMetric2 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 11), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeFwdMetric2.setStatus('mandatory')
pnnixRouteNodeFwdMetric3 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 12), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeFwdMetric3.setStatus('mandatory')
pnnixRouteNodeFwdMetric4 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 13), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeFwdMetric4.setStatus('mandatory')
pnnixRouteNodeFwdMetric5 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 14), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeFwdMetric5.setStatus('mandatory')
pnnixRouteNodeFwdMetric6 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 15), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeFwdMetric6.setStatus('mandatory')
pnnixRouteNodeFwdMetric7 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 16), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeFwdMetric7.setStatus('mandatory')
pnnixRouteNodeFwdMetric8 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 17), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeFwdMetric8.setStatus('mandatory')
pnnixRouteNodeBwdMetricAW = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 18), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeBwdMetricAW.setStatus('mandatory')
pnnixRouteNodeBwdMetric1 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 19), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeBwdMetric1.setStatus('mandatory')
pnnixRouteNodeBwdMetric2 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 20), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeBwdMetric2.setStatus('mandatory')
pnnixRouteNodeBwdMetric3 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 21), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeBwdMetric3.setStatus('mandatory')
pnnixRouteNodeBwdMetric4 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 22), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeBwdMetric4.setStatus('mandatory')
pnnixRouteNodeBwdMetric5 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 23), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeBwdMetric5.setStatus('mandatory')
pnnixRouteNodeBwdMetric6 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 24), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeBwdMetric6.setStatus('mandatory')
pnnixRouteNodeBwdMetric7 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 25), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeBwdMetric7.setStatus('mandatory')
pnnixRouteNodeBwdMetric8 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 26), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeBwdMetric8.setStatus('mandatory')
pnnixRouteNodeVPCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 27), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeVPCapability.setStatus('mandatory')
pnnixRouteNodeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("create", 1), ("modify", 2), ("delete", 3), ("active", 4), ("notActive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteNodeStatus.setStatus('mandatory')
pnnixDTLTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 3), )
if mibBuilder.loadTexts: pnnixDTLTable.setStatus('mandatory')
pnnixDTLEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 3, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"), (0, "XPNNI-MIB", "pnnixDTLIndex"), (0, "XPNNI-MIB", "pnnixDTLEntryIndex"))
if mibBuilder.loadTexts: pnnixDTLEntry.setStatus('mandatory')
pnnixDTLIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: pnnixDTLIndex.setStatus('mandatory')
pnnixDTLEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200)))
if mibBuilder.loadTexts: pnnixDTLEntryIndex.setStatus('mandatory')
pnnixDTLNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 3, 1, 3), PnnixNodeId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixDTLNodeId.setStatus('mandatory')
pnnixDTLPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 3, 1, 4), PnnixPortId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixDTLPortId.setStatus('mandatory')
pnnixDTLLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("invalid", 1), ("horizontal", 2), ("uplink", 3), ("last", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixDTLLinkType.setStatus('mandatory')
pnnixDTLStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("create", 1), ("modify", 2), ("delete", 3), ("active", 4), ("notActive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixDTLStatus.setStatus('mandatory')
pnnixRouteAddrTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4), )
if mibBuilder.loadTexts: pnnixRouteAddrTable.setStatus('mandatory')
pnnixRouteAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"), (0, "XPNNI-MIB", "pnnixRouteAddrAddress"), (0, "XPNNI-MIB", "pnnixRouteAddrPrefixLength"), (0, "XPNNI-MIB", "pnnixRouteAddrIndex"))
if mibBuilder.loadTexts: pnnixRouteAddrEntry.setStatus('mandatory')
pnnixRouteAddrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4, 1, 1), AtmAddrPrefix())
if mibBuilder.loadTexts: pnnixRouteAddrAddress.setStatus('mandatory')
pnnixRouteAddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4, 1, 2), PnnixPrefixLength())
if mibBuilder.loadTexts: pnnixRouteAddrPrefixLength.setStatus('mandatory')
pnnixRouteAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: pnnixRouteAddrIndex.setStatus('mandatory')
pnnixRouteAddrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4, 1, 4), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteAddrIfIndex.setStatus('mandatory')
pnnixRouteAddrAdvertisingNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4, 1, 5), PnnixNodeId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteAddrAdvertisingNodeId.setStatus('mandatory')
pnnixRouteAddrAdvertisedPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4, 1, 6), PnnixPortId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteAddrAdvertisedPortId.setStatus('mandatory')
pnnixRouteAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("reject", 2), ("internal", 3), ("exterior", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteAddrType.setStatus('mandatory')
pnnixRouteAddrProto = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("mgmt", 3), ("pnni", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRouteAddrProto.setStatus('mandatory')
pnnixRouteAddrPnniScope = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4, 1, 9), PnnixLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteAddrPnniScope.setStatus('mandatory')
pnnixRouteAddrVPCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteAddrVPCapability.setStatus('mandatory')
pnnixRouteAddrMetricsTag = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4, 1, 11), PnnixMetricsTag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteAddrMetricsTag.setStatus('mandatory')
pnnixRouteAddrPtseId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRouteAddrPtseId.setStatus('mandatory')
pnnixRouteAddrOriginateAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteAddrOriginateAdvertisement.setStatus('mandatory')
pnnixRouteAddrInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4, 1, 14), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteAddrInfo.setStatus('mandatory')
pnnixRouteAddrOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2), ("advertised", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRouteAddrOperStatus.setStatus('mandatory')
pnnixRouteAddrTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRouteAddrTimeStamp.setStatus('mandatory')
pnnixRouteAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 4, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("create", 1), ("modify", 2), ("delete", 3), ("active", 4), ("notActive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteAddrRowStatus.setStatus('mandatory')
pnnixRouteTnsTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5), )
if mibBuilder.loadTexts: pnnixRouteTnsTable.setStatus('mandatory')
pnnixRouteTnsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"), (0, "XPNNI-MIB", "pnnixRouteTnsType"), (0, "XPNNI-MIB", "pnnixRouteTnsPlan"), (0, "XPNNI-MIB", "pnnixRouteTnsId"), (0, "XPNNI-MIB", "pnnixRouteTnsIndex"))
if mibBuilder.loadTexts: pnnixRouteTnsEntry.setStatus('mandatory')
pnnixRouteTnsType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1, 1), TnsType())
if mibBuilder.loadTexts: pnnixRouteTnsType.setStatus('mandatory')
pnnixRouteTnsPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1, 2), TnsPlan())
if mibBuilder.loadTexts: pnnixRouteTnsPlan.setStatus('mandatory')
pnnixRouteTnsId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1, 3), DisplayString())
if mibBuilder.loadTexts: pnnixRouteTnsId.setStatus('mandatory')
pnnixRouteTnsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: pnnixRouteTnsIndex.setStatus('mandatory')
pnnixRouteTnsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1, 5), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteTnsIfIndex.setStatus('mandatory')
pnnixRouteTnsAdvertisingNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1, 6), PnnixNodeId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteTnsAdvertisingNodeId.setStatus('mandatory')
pnnixRouteTnsAdvertisedPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1, 7), PnnixPortId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteTnsAdvertisedPortId.setStatus('mandatory')
pnnixRouteTnsRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4))).clone(namedValues=NamedValues(("other", 1), ("exterior", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteTnsRouteType.setStatus('mandatory')
pnnixRouteTnsProto = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("mgmt", 3), ("pnni", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRouteTnsProto.setStatus('mandatory')
pnnixRouteTnsPnniScope = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1, 10), PnnixLevel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteTnsPnniScope.setStatus('mandatory')
pnnixRouteTnsVPCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteTnsVPCapability.setStatus('mandatory')
pnnixRouteTnsMetricsTag = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1, 12), PnnixMetricsTag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteTnsMetricsTag.setStatus('mandatory')
pnnixRouteTnsPtseId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRouteTnsPtseId.setStatus('mandatory')
pnnixRouteTnsOriginateAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteTnsOriginateAdvertisement.setStatus('mandatory')
pnnixRouteTnsInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1, 15), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteTnsInfo.setStatus('mandatory')
pnnixRouteTnsOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2), ("advertised", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRouteTnsOperStatus.setStatus('mandatory')
pnnixRouteTnsTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRouteTnsTimeStamp.setStatus('mandatory')
pnnixRouteTnsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 1, 19, 5, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("create", 1), ("modify", 2), ("delete", 3), ("active", 4), ("notActive", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pnnixRouteTnsRowStatus.setStatus('mandatory')
pnniIAdjMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 3))
pnnixIAdjGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 3, 1))
pnnixNumIAdj = MibScalar((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixNumIAdj.setStatus('mandatory')
pnnixIAdjTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 3, 1, 2), )
if mibBuilder.loadTexts: pnnixIAdjTable.setStatus('mandatory')
pnnixIAdjEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 3, 1, 2, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixIadjIndex"))
if mibBuilder.loadTexts: pnnixIAdjEntry.setStatus('mandatory')
pnnixIadjIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 3, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: pnnixIadjIndex.setStatus('mandatory')
pnnixIAdjAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 3, 1, 2, 1, 2), PnnixAtmAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixIAdjAtmAddress.setStatus('mandatory')
pnnixIAdjSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 3, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixIAdjSlot.setStatus('mandatory')
pnnixIAdjPort = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 3, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixIAdjPort.setStatus('mandatory')
pnnixIAdjInst = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 3, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixIAdjInst.setStatus('mandatory')
pnnixIAdjCsmPPort = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 3, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixIAdjCsmPPort.setStatus('mandatory')
pnnixIAdjAdvertised = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 3, 1, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixIAdjAdvertised.setStatus('mandatory')
pnnixIAdjSummarized = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 3, 1, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixIAdjSummarized.setStatus('mandatory')
pnnixIAdjLearned = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 3, 1, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixIAdjLearned.setStatus('mandatory')
pnniTestMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 4))
pnniRtstMIBGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 4, 1))
pnnixRtstTable = MibTable((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 4, 1, 1), )
if mibBuilder.loadTexts: pnnixRtstTable.setStatus('mandatory')
pnnixRtstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 4, 1, 1, 1), ).setIndexNames((0, "XPNNI-MIB", "pnnixNodeIndex"), (0, "XPNNI-MIB", "pnnixRtstClass"), (0, "XPNNI-MIB", "pnnixRtstType"), (0, "XPNNI-MIB", "pnnixRtstDest"))
if mibBuilder.loadTexts: pnnixRtstEntry.setStatus('mandatory')
pnnixRtstClass = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 4, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ubr", 1), ("cbr", 2), ("vbrRt", 3), ("vbrNrt", 4), ("abr", 5))))
if mibBuilder.loadTexts: pnnixRtstClass.setStatus('mandatory')
pnnixRtstType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ptpt", 1), ("pmp", 2))))
if mibBuilder.loadTexts: pnnixRtstType.setStatus('mandatory')
pnnixRtstDest = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 4, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20))
if mibBuilder.loadTexts: pnnixRtstDest.setStatus('mandatory')
pnnixRtstError = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 4, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("success", 1), ("noRouteToDest", 2), ("dtlExhaustion", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRtstError.setStatus('mandatory')
pnnixRtstFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 4, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dtlAdded", 1), ("direct", 2), ("myself", 3), ("directEreach", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRtstFlags.setStatus('mandatory')
pnnixRtstOutboundPort = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 4, 1, 1, 1, 6), PnnixPortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRtstOutboundPort.setStatus('mandatory')
pnnixRtstVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 4, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRtstVPI.setStatus('mandatory')
pnnixRtstE164 = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 4, 1, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRtstE164.setStatus('mandatory')
pnnixRtstE164len = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 4, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRtstE164len.setStatus('mandatory')
pnnixRtstHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 4, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRtstHopCount.setStatus('mandatory')
pnnixRtstDTL = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 4, 1, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(52, 1500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRtstDTL.setStatus('mandatory')
pnnixRtstCurPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 4, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnnixRtstCurPointer.setStatus('mandatory')
pnnixMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2))
pnnixMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 1))
pnnixMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2))
pnnixMIBCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 1, 1))
pnnixGeneralMinGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 1))
pnnixGeneralBorderGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 2))
pnnixNodeMinGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 3))
pnnixNodePglMinGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 4))
pnnixNodePglLgnGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 5))
pnnixNodeTimerMinGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 6))
pnnixNodeTimerLgnGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 7))
pnnixNodeSvccLgnGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 8))
pnnixScopeMinGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 9))
pnnixSummaryLgnGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 10))
pnnixIfMinGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 11))
pnnixIfBorderGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 12))
pnnixLinkMinGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 13))
pnnixLinkBorderOrLgnGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 14))
pnnixLinkLgnGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 15))
pnnixNbrPeerMinGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 16))
pnnixNbrPeerLgnGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 17))
pnnixNbrPeerPortMinGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 18))
pnnixSvccRccLgnGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 19))
pnnixPtseOptionalGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 20))
pnnixMapOptionalGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 21))
pnnixMapNodeOptionalGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 22))
pnnixMapAddrOptionalGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 23))
pnnixMapTnsOptionalGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 24))
pnnixMetricsOptionalGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 25))
pnnixRouteGeneralOptionalGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 26))
pnnixRouteNodeOptionalGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 27))
pnnixDTLOptionalGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 28))
pnnixRouteAddrOptionalGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 29))
pnnixRouteTnsOptionalGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 3, 2, 1, 1, 2, 2, 30))
mibBuilder.exportSymbols("XPNNI-MIB", pnnixMapNodeDatabaseOverload=pnnixMapNodeDatabaseOverload, pnnixMapNodeComplexRep=pnnixMapNodeComplexRep, pnnixNodeSvccInitTime=pnnixNodeSvccInitTime, pnnixRouteNodeFwdMetric6=pnnixRouteNodeFwdMetric6, PnnixPortId=PnnixPortId, pnnixIAdjCsmPPort=pnnixIAdjCsmPPort, pnnixRouteTnsTimeStamp=pnnixRouteTnsTimeStamp, pnnixRouteAddrNumber=pnnixRouteAddrNumber, pnnixNodeSvccTable=pnnixNodeSvccTable, pnnixRouteNodeBwdMetric5=pnnixRouteNodeBwdMetric5, pnnixMapOriginatingNodeId=pnnixMapOriginatingNodeId, pnnixLowestVersion=pnnixLowestVersion, pnnixSummaryPrefixLength=pnnixSummaryPrefixLength, pnnixIfPortId=pnnixIfPortId, pnnixMetricsDirection=pnnixMetricsDirection, pnnixRouteAddrMetricsTag=pnnixRouteAddrMetricsTag, pnnixIfNodeIndex=pnnixIfNodeIndex, pnnixSvccRccRemoteNodeId=pnnixSvccRccRemoteNodeId, pnnixRtstFlags=pnnixRtstFlags, pnnixScopeLocalNetwork=pnnixScopeLocalNetwork, pnnixDTLOptionalGroup=pnnixDTLOptionalGroup, pnnixSummaryState=pnnixSummaryState, pnnixRouteAddrEntry=pnnixRouteAddrEntry, pnnixNodeHlinkInact=pnnixNodeHlinkInact, pnnixIAdjAtmAddress=pnnixIAdjAtmAddress, pnnixMapRemotePortId=pnnixMapRemotePortId, pnnixMapNodeTable=pnnixMapNodeTable, pnnixIAdjPort=pnnixIAdjPort, pnnixRouteTnsAdvertisedPortId=pnnixRouteTnsAdvertisedPortId, pnnixNbrPeerPortFloodStatus=pnnixNbrPeerPortFloodStatus, PnnixSvccRccIndex=PnnixSvccRccIndex, pnnixLinkTable=pnnixLinkTable, pnnixIAdjInst=pnnixIAdjInst, pnnixRouteAddrPnniScope=pnnixRouteAddrPnniScope, pnnixNodePglReelectTime=pnnixNodePglReelectTime, pnnixRouteNodeFwdMetric8=pnnixRouteNodeFwdMetric8, pnnixMapTnsOptionalGroup=pnnixMapTnsOptionalGroup, PnnixNodeId=PnnixNodeId, pnnixNodePtseRefreshInterval=pnnixNodePtseRefreshInterval, pnnixNodePglTimeStamp=pnnixNodePglTimeStamp, pnnixRouteAddrAdvertisingNodeId=pnnixRouteAddrAdvertisingNodeId, pnnixIfAdmWeightUbr=pnnixIfAdmWeightUbr, pnnixMetrics1=pnnixMetrics1, pnnixRouteNodeGcacClp=pnnixRouteNodeGcacClp, pnnixScopeOrganizationPlusOne=pnnixScopeOrganizationPlusOne, pnnixGeneralBorderGroup=pnnixGeneralBorderGroup, pnnixIadjIndex=pnnixIadjIndex, pnnixNodeDatabaseOverload=pnnixNodeDatabaseOverload, pnnixNbrPeerLgnGroup=pnnixNbrPeerLgnGroup, pnnixMIBCompliances=pnnixMIBCompliances, pnnixLinkCommonPeerGroupId=pnnixLinkCommonPeerGroupId, pnnixDTLEntryIndex=pnnixDTLEntryIndex, pnnixRouteNodeEntry=pnnixRouteNodeEntry, pnnixIfAdmWeightCbr=pnnixIfAdmWeightCbr, pnnixNodeTable=pnnixNodeTable, pnnixLinkRemoteNodeId=pnnixLinkRemoteNodeId, pnnixIfVPCapability=pnnixIfVPCapability, pnnixCrankbackCountOriginator=pnnixCrankbackCountOriginator, pnnixNodeSvccTrafficDescriptorIndex=pnnixNodeSvccTrafficDescriptorIndex, pnnixDTLTable=pnnixDTLTable, pnnixLinkVersion=pnnixLinkVersion, pnnixMapNodeRestrictedBranching=pnnixMapNodeRestrictedBranching, pnnixMetrics3=pnnixMetrics3, pnnixPtseOriginatingNodeId=pnnixPtseOriginatingNodeId, TruthValue=TruthValue, pnnixDtlCountBorder=pnnixDtlCountBorder, pnnixNodeOperStatus=pnnixNodeOperStatus, pnnixMapVPCapability=pnnixMapVPCapability, pnnixNodePtseHolddown=pnnixNodePtseHolddown, pnnixLinkEntry=pnnixLinkEntry, pnnixIAdjAdvertised=pnnixIAdjAdvertised, pnnixRouteTnsProto=pnnixRouteTnsProto, pnnixMapAddrAdvertisingNodeId=pnnixMapAddrAdvertisingNodeId, pnnixRouteNodeBwdMetric6=pnnixRouteNodeBwdMetric6, pnnixSvccRccVci=pnnixSvccRccVci, pnnixRouteAddrIndex=pnnixRouteAddrIndex, pnnixNodePglInitTime=pnnixNodePglInitTime, ServiceCategory=ServiceCategory, pnnixNodeRestrictedBranching=pnnixNodeRestrictedBranching, pnnixPtseTable=pnnixPtseTable, pnnixMapPtseId=pnnixMapPtseId, pnnixRouteAddrInfo=pnnixRouteAddrInfo, pnnixMapNodeIAmLeader=pnnixMapNodeIAmLeader, pnnixMetrics4=pnnixMetrics4, pnnixSvccRccIndex=pnnixSvccRccIndex, pnnixMetricsOptionalGroup=pnnixMetricsOptionalGroup, pnnixMetricsTag=pnnixMetricsTag, pnnixMetrics7=pnnixMetrics7, pnnixLinkLgnGroup=pnnixLinkLgnGroup, pnnixSvccRccRemoteAtmAddress=pnnixSvccRccRemoteAtmAddress, pnnixNodePglLgnGroup=pnnixNodePglLgnGroup, pnnixRouteNodeDestNodeId=pnnixRouteNodeDestNodeId, pnnixSvccRccLgnGroup=pnnixSvccRccLgnGroup, pnnixNbrPeerRcvPtseAcks=pnnixNbrPeerRcvPtseAcks, PnnixHelloState=PnnixHelloState, pnnixMapAddrIndex=pnnixMapAddrIndex, pnnixMetricsGcacClp=pnnixMetricsGcacClp, pnnixLinkBorderOrLgnGroup=pnnixLinkBorderOrLgnGroup, pnnixIfAdmWeightAbr=pnnixIfAdmWeightAbr, pnnixNbrPeerPortCount=pnnixNbrPeerPortCount, PnnixVersion=PnnixVersion, pnnixNodeAtmAddress=pnnixNodeAtmAddress, pnnixRouteFailUnreachableOriginator=pnnixRouteFailUnreachableOriginator, pnnixRouteNodeBwdMetric2=pnnixRouteNodeBwdMetric2, pnnixRouteNodeInfo=pnnixRouteNodeInfo, pnnixNodeAdminStatus=pnnixNodeAdminStatus, pnnixMetrics8=pnnixMetrics8, pnnixScopeOrganizationMinusOne=pnnixScopeOrganizationMinusOne, pnnixNodeIndex=pnnixNodeIndex, pnnixRouteTnsMetricsTag=pnnixRouteTnsMetricsTag, pnnixPtseEntry=pnnixPtseEntry, pnnixIfMinGroup=pnnixIfMinGroup, pnnixMapNodeEntry=pnnixMapNodeEntry, TnsPlan=TnsPlan, pnnixMapAddrEntry=pnnixMapAddrEntry, pnnixSvccRccTable=pnnixSvccRccTable, pnnixNodeSvccCalledIntegrityTime=pnnixNodeSvccCalledIntegrityTime, pnnixMapAddrPrefixLength=pnnixMapAddrPrefixLength, pnnixScopeIntraOrganization=pnnixScopeIntraOrganization, pnnixRouteAddrTable=pnnixRouteAddrTable, pnnixLinkUpnodeAtmAddress=pnnixLinkUpnodeAtmAddress, pnnixNodeEntry=pnnixNodeEntry, pnnixRtstE164len=pnnixRtstE164len, pnnixNbrPeerXmtPtseReqs=pnnixNbrPeerXmtPtseReqs, PnnixPeerGroupId=PnnixPeerGroupId, pnnixMapTable=pnnixMapTable, pnnixMapTnsEntry=pnnixMapTnsEntry, pnnixRouteTnsOperStatus=pnnixRouteTnsOperStatus, pnnixNodePglState=pnnixNodePglState, pnnixRtstError=pnnixRtstError, pnnixRouteNodeDestPortId=pnnixRouteNodeDestPortId, pnnixMapNodeOptionalGroup=pnnixMapNodeOptionalGroup, pnnixIAdjSummarized=pnnixIAdjSummarized, AtmAddrPrefix=AtmAddrPrefix, pnnixLinkXmtHellos=pnnixLinkXmtHellos, pnnixRouteGeneralOptionalGroup=pnnixRouteGeneralOptionalGroup, pnnixDtlCountOriginator=pnnixDtlCountOriginator, pnnixDTLEntry=pnnixDTLEntry, pnnixRouteAddrTimeStamp=pnnixRouteAddrTimeStamp, pnnixRtstClass=pnnixRtstClass, pnnixIfTable=pnnixIfTable, pnnixScopeCommunityMinusOne=pnnixScopeCommunityMinusOne, pnnixNbrPeerXmtPtsps=pnnixNbrPeerXmtPtsps, pnnixMetrics6=pnnixMetrics6, pnnixRouteNodeProto=pnnixRouteNodeProto, pnnixMapPeerGroupId=pnnixMapPeerGroupId, pnnixSummaryType=pnnixSummaryType, pnnixMapAddrTable=pnnixMapAddrTable, pnnixMapAddrAddress=pnnixMapAddrAddress, pnnixNodeSvccRetryTime=pnnixNodeSvccRetryTime, pnnixRouteAddrPtseId=pnnixRouteAddrPtseId, pnnixMapNodePeerGroupId=pnnixMapNodePeerGroupId, pnnixNbrPeerPortMinGroup=pnnixNbrPeerPortMinGroup, pnnixRouteTnsTable=pnnixRouteTnsTable, pnnixNodeRxmtInterval=pnnixNodeRxmtInterval, pnnixRouteTnsId=pnnixRouteTnsId, pnnixLinkHelloState=pnnixLinkHelloState, pnnixIfAdmWeightNrtVbr=pnnixIfAdmWeightNrtVbr, pnnixScopeMappingEntry=pnnixScopeMappingEntry, pnnixMetrics2=pnnixMetrics2, pnnixNodeCdvPm=pnnixNodeCdvPm, pnnixRouteTnsOriginateAdvertisement=pnnixRouteTnsOriginateAdvertisement, pnnixRouteFailCountOriginator=pnnixRouteFailCountOriginator, pnnixNodeDomainName=pnnixNodeDomainName, pnnixMapNodeParentPeerGroupId=pnnixMapNodeParentPeerGroupId, pnnixSummaryTable=pnnixSummaryTable, pnnixIfRccServiceCategory=pnnixIfRccServiceCategory, PnnixPrefixLength=PnnixPrefixLength, pnnixNbrPeerPortTable=pnnixNbrPeerPortTable, InterfaceIndex=InterfaceIndex, pnnixMIB=pnnixMIB, pnnixRouteTnsRowStatus=pnnixRouteTnsRowStatus, pnnixSvccRccXmtHellos=pnnixSvccRccXmtHellos, pnnixSvccRccVersion=pnnixSvccRccVersion, pnnixMapMetricsTag=pnnixMapMetricsTag, pnnixMIBGroups=pnnixMIBGroups, pnnixNodeRowStatus=pnnixNodeRowStatus, pnnixMapTnsPlan=pnnixMapTnsPlan, pnnixRtstE164=pnnixRtstE164, pnnixScopeRegional=pnnixScopeRegional, pnnixRouteAddrVPCapability=pnnixRouteAddrVPCapability, pnnixScopeIntraCommunity=pnnixScopeIntraCommunity, pnnixSummaryAddress=pnnixSummaryAddress, pnnixRoutingGroup=pnnixRoutingGroup, pnnixNbrPeerXmtDbSums=pnnixNbrPeerXmtDbSums, pnnixMapNodeParentNodeId=pnnixMapNodeParentNodeId, pnnixLinkType=pnnixLinkType, pnnixMapTnsAdvertisingNodeId=pnnixMapTnsAdvertisingNodeId, PnnixAtmAddr=PnnixAtmAddr, pnnixNbrPeerPortId=pnnixNbrPeerPortId, pnnixAltRouteCountBorder=pnnixAltRouteCountBorder, pnnixSummarySuppress=pnnixSummarySuppress, pnnixDTLLinkType=pnnixDTLLinkType, pnnixRouteAddrOperStatus=pnnixRouteAddrOperStatus, pnnixRouteTnsOptionalGroup=pnnixRouteTnsOptionalGroup, pnnixRouteNodeFwdMetric1=pnnixRouteNodeFwdMetric1, pnnixNbrPeerRcvPtseReqs=pnnixNbrPeerRcvPtseReqs, pnnixRouteTnsType=pnnixRouteTnsType, pnnixNodeComplexRep=pnnixNodeComplexRep, pnnixNbrPeerPortEntry=pnnixNbrPeerPortEntry, pnnixRouteNodeDTL=pnnixRouteNodeDTL, pnnixSummaryEntry=pnnixSummaryEntry, pnnixMIBCompliance=pnnixMIBCompliance, pnnixRouteNodeTable=pnnixRouteNodeTable, pnnixNbrPeerTable=pnnixNbrPeerTable, pnnixRouteTnsPtseId=pnnixRouteTnsPtseId, pnnixNodePreferredPgl=pnnixNodePreferredPgl, AtmpTrafficDescrParamIndex=AtmpTrafficDescrParamIndex, pnnixMapOriginatingPortId=pnnixMapOriginatingPortId, pnnixMapNodeParentAtmAddress=pnnixMapNodeParentAtmAddress, pnnixMapTnsId=pnnixMapTnsId, pnnixNodeSvccEntry=pnnixNodeSvccEntry, pnnixRtstCurPointer=pnnixRtstCurPointer, pnnixGeneralMinGroup=pnnixGeneralMinGroup, pnnixPtseId=pnnixPtseId, pnnixMapEntry=pnnixMapEntry, pnnixRtstDTL=pnnixRtstDTL, pnnixRouteTnsIfIndex=pnnixRouteTnsIfIndex, pnnixNodeCtdPm=pnnixNodeCtdPm, pnnixRouteNodeTimeStamp=pnnixRouteNodeTimeStamp, PnnixAggrToken=PnnixAggrToken, pnnixRouteNodeStatus=pnnixRouteNodeStatus, pnnixMapTnsAdvertisedPortId=pnnixMapTnsAdvertisedPortId, pnnixRouteAddrRowStatus=pnnixRouteAddrRowStatus, pnnixNodePglTable=pnnixNodePglTable, pnnixSummaryLgnGroup=pnnixSummaryLgnGroup, pnnixScopeCommunityPlusOne=pnnixScopeCommunityPlusOne, pnnixNodeTimerTable=pnnixNodeTimerTable, pnnixRouteBaseGroup=pnnixRouteBaseGroup, pnnixMetrics5=pnnixMetrics5, pnnixNbrPeerSvccRccIndex=pnnixNbrPeerSvccRccIndex, pnnixIfBorderGroup=pnnixIfBorderGroup, pnnixMapTnsTable=pnnixMapTnsTable, pnnixScopeInterRegional=pnnixScopeInterRegional, pnnixAltRouteCountOriginator=pnnixAltRouteCountOriginator, pnnixIAdjSlot=pnnixIAdjSlot, pnnixSvccRccEntry=pnnixSvccRccEntry, pnnixNodeTimerLgnGroup=pnnixNodeTimerLgnGroup, pnnixNodePglMinGroup=pnnixNodePglMinGroup, pnnixNbrPeerRcvPtsps=pnnixNbrPeerRcvPtsps, pnnixMapIndex=pnnixMapIndex, pnnixNodePglEntry=pnnixNodePglEntry, pnnixRtstTable=pnnixRtstTable, pnnixPtseOptionalGroup=pnnixPtseOptionalGroup, pnniIAdjMIBObjects=pnniIAdjMIBObjects, pnnixMapRemoteNodeId=pnnixMapRemoteNodeId, pnnixNbrPeerXmtPtseAcks=pnnixNbrPeerXmtPtseAcks, pnnixIAdjLearned=pnnixIAdjLearned, pnnixRouteFailUnreachableBorder=pnnixRouteFailUnreachableBorder, pnnixNodeActiveParentNodeId=pnnixNodeActiveParentNodeId, pnnixLinkPortId=pnnixLinkPortId, pnnixNodePtseLifetimeFactor=pnnixNodePtseLifetimeFactor, pnnixRouteNodeFwdMetricAW=pnnixRouteNodeFwdMetricAW, pnnixSvccRccVpi=pnnixSvccRccVpi)
mibBuilder.exportSymbols("XPNNI-MIB", pnnixNodePglOverrideDelay=pnnixNodePglOverrideDelay, pnnixMapNodeLeadershipPriority=pnnixMapNodeLeadershipPriority, pnnixRouteAddrType=pnnixRouteAddrType, pnnixLinkUpnodeId=pnnixLinkUpnodeId, pnnixScopeGlobal=pnnixScopeGlobal, pnnixPtseInfo=pnnixPtseInfo, pnnixCrankbackCountBorder=pnnixCrankbackCountBorder, pnnixNodeMinGroup=pnnixNodeMinGroup, pnnixRouteNodeOptionalGroup=pnnixRouteNodeOptionalGroup, pnnixRouteFailCountBorder=pnnixRouteFailCountBorder, pnnixSvccRccIfIndex=pnnixSvccRccIfIndex, pnnixMapNodeParentPglNodeId=pnnixMapNodeParentPglNodeId, pnnixLinkMinGroup=pnnixLinkMinGroup, pnnixScopeIntraSite=pnnixScopeIntraSite, pnnixPtseSequenceNum=pnnixPtseSequenceNum, pnnixRtstVPI=pnnixRtstVPI, pnnixIfRccTrafficDescrIndex=pnnixIfRccTrafficDescrIndex, PnnixNodeIndex=PnnixNodeIndex, pnnixPtseChecksum=pnnixPtseChecksum, pnnixRtstOutboundPort=pnnixRtstOutboundPort, pnnixIAdjTable=pnnixIAdjTable, pnnixMapType=pnnixMapType, pnnixRouteAddrPrefixLength=pnnixRouteAddrPrefixLength, pnnixRouteNodeBwdMetric1=pnnixRouteNodeBwdMetric1, pnnixRouteAddrIfIndex=pnnixRouteAddrIfIndex, pnnixNbrPeerMinGroup=pnnixNbrPeerMinGroup, pnnixNodeId=pnnixNodeId, pnnixLinkIfIndex=pnnixLinkIfIndex, pnnixNodeSvccCallingIntegrityTime=pnnixNodeSvccCallingIntegrityTime, pnnixSvccRccHelloState=pnnixSvccRccHelloState, pnnixRouteAddrProto=pnnixRouteAddrProto, pnnixRouteNodeFwdMetric5=pnnixRouteNodeFwdMetric5, pnnixRouteAddrAdvertisedPortId=pnnixRouteAddrAdvertisedPortId, pnnixRouteNodeFwdMetric4=pnnixRouteNodeFwdMetric4, pnnixRouteNodeNumber=pnnixRouteNodeNumber, pnnixMetricsTable=pnnixMetricsTable, pnnixIfAdmWeightRtVbr=pnnixIfAdmWeightRtVbr, pnnixRtstDest=pnnixRtstDest, pnnixNodeTimerMinGroup=pnnixNodeTimerMinGroup, pnnixDTLIndex=pnnixDTLIndex, pnnixDTLStatus=pnnixDTLStatus, pnnixMIBObjects=pnnixMIBObjects, TnsType=TnsType, pnnixIfEntry=pnnixIfEntry, pnnixNodeAvcrMt=pnnixNodeAvcrMt, pnnixRtstEntry=pnnixRtstEntry, pnnixRtstHopCount=pnnixRtstHopCount, pnnixRouteTnsEntry=pnnixRouteTnsEntry, pnnixScopeMappingTable=pnnixScopeMappingTable, pnnixRouteNodeFwdMetric2=pnnixRouteNodeFwdMetric2, pnnixRouteTnsIndex=pnnixRouteTnsIndex, pnnixRouteTnsVPCapability=pnnixRouteTnsVPCapability, pnnixLinkDerivedAggrToken=pnnixLinkDerivedAggrToken, pnniRtstMIBGroup=pnniRtstMIBGroup, pnnixRtstType=pnnixRtstType, pnnixPtseType=pnnixPtseType, pnnixNodeLevel=pnnixNodeLevel, pnnixRouteTnsInfo=pnnixRouteTnsInfo, pnnixNodeTimerEntry=pnnixNodeTimerEntry, pnnixRouteNodeBwdMetric3=pnnixRouteNodeBwdMetric3, pnnixBaseGroup=pnnixBaseGroup, pnnixRouteTnsRouteType=pnnixRouteTnsRouteType, pnnixRouteNodeFwdMetric3=pnnixRouteNodeFwdMetric3, pnnixNbrPeerRcvDbSums=pnnixNbrPeerRcvDbSums, pnnixMetricsAdminWeight=pnnixMetricsAdminWeight, pnnixNodeAvcrPm=pnnixNodeAvcrPm, pnnixScopeLocalNetworkPlusOne=pnnixScopeLocalNetworkPlusOne, pnnixLinkRcvHellos=pnnixLinkRcvHellos, pnnixNbrPeerState=pnnixNbrPeerState, pnnixRouteTnsAdvertisingNodeId=pnnixRouteTnsAdvertisingNodeId, pnnixIAdjGroup=pnnixIAdjGroup, pnnixNumIAdj=pnnixNumIAdj, pnnixDTLNodeId=pnnixDTLNodeId, pnnixMapAddrOptionalGroup=pnnixMapAddrOptionalGroup, pnnixRouteNodeVPCapability=pnnixRouteNodeVPCapability, pnnixMIBConformance=pnnixMIBConformance, pnnixSummaryRowStatus=pnnixSummaryRowStatus, pnnixNodeSvccLgnGroup=pnnixNodeSvccLgnGroup, pnnixIfAggrToken=pnnixIfAggrToken, pnnixNodeCfgParentNodeIndex=pnnixNodeCfgParentNodeIndex, pnnixMapAggrToken=pnnixMapAggrToken, pnnixMapNodeId=pnnixMapNodeId, pnnixNodePeerDelayedAckInterval=pnnixNodePeerDelayedAckInterval, pnnixNodeRestrictedTransit=pnnixNodeRestrictedTransit, pnnixScopeLocalNetworkPlusTwo=pnnixScopeLocalNetworkPlusTwo, pnnixRouteTnsPnniScope=pnnixRouteTnsPnniScope, pnnixScopeSiteMinusOne=pnnixScopeSiteMinusOne, pnnixRouteNodeBwdMetric4=pnnixRouteNodeBwdMetric4, pnnixRouteNodeBwdMetric8=pnnixRouteNodeBwdMetric8, pnnixNodePeerGroupId=pnnixNodePeerGroupId, pnnixRouteNodeFwdMetric7=pnnixRouteNodeFwdMetric7, pnnixNodePtses=pnnixNodePtses, pnnixMetricsRowStatus=pnnixMetricsRowStatus, ClpType=ClpType, pnnixMapTnsType=pnnixMapTnsType, pnnixNodeHelloInactivityFactor=pnnixNodeHelloInactivityFactor, pnnixRouteAddrOriginateAdvertisement=pnnixRouteAddrOriginateAdvertisement, pnnixMapOptionalGroup=pnnixMapOptionalGroup, pnnixScopeMinGroup=pnnixScopeMinGroup, pnnixIAdjEntry=pnnixIAdjEntry, pnnixNbrPeerRemoteNodeId=pnnixNbrPeerRemoteNodeId, pnnixNodePeerGroupLeader=pnnixNodePeerGroupLeader, pnnixRouteAddrOptionalGroup=pnnixRouteAddrOptionalGroup, pnnixRouteNodeBwdMetric7=pnnixRouteNodeBwdMetric7, pnnixRouteTnsPlan=pnnixRouteTnsPlan, PnnixMetricsTag=PnnixMetricsTag, pnniTestMIBObjects=pnniTestMIBObjects, pnnixNodeLowest=pnnixNodeLowest, pnnixMapNodeRestrictedTransit=pnnixMapNodeRestrictedTransit, pnnixHighestVersion=pnnixHighestVersion, pnnixMapNodePreferredPgl=pnnixMapNodePreferredPgl, PnnixLevel=PnnixLevel, pnnixMetricsIndex=pnnixMetricsIndex, pnnixLinkSvccRccIndex=pnnixLinkSvccRccIndex, pnnixRouteNodeBwdMetricAW=pnnixRouteNodeBwdMetricAW, pnnixMetricsEntry=pnnixMetricsEntry, pnnixDTLPortId=pnnixDTLPortId, pnnixNodeHelloInterval=pnnixNodeHelloInterval, pnnixLinkRemotePortId=pnnixLinkRemotePortId, pnnixRouteAddrAddress=pnnixRouteAddrAddress, pnnixRouteNodeClass=pnnixRouteNodeClass, pnnixSvccRccRcvHellos=pnnixSvccRccRcvHellos, pnnixNbrPeerEntry=pnnixNbrPeerEntry, pnnixMapAddrAdvertisedPortId=pnnixMapAddrAdvertisedPortId, pnnixScopeSitePlusOne=pnnixScopeSitePlusOne, pnnixMetricsClasses=pnnixMetricsClasses, pnnixMapNodeAtmAddress=pnnixMapNodeAtmAddress, pnnixPtseLifeTime=pnnixPtseLifeTime, pnnixNodePglLeadershipPriority=pnnixNodePglLeadershipPriority, pnnixNodeHelloHolddown=pnnixNodeHelloHolddown)
