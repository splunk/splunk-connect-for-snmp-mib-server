#
# PySNMP MIB module ONEACCESS-IP-SERVICES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ONEACCESS-IP-SERVICES-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:25:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
oacExpIMIp, oacMIBModules = mibBuilder.importSymbols("ONEACCESS-GLOBAL-REG", "oacExpIMIp", "oacMIBModules")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
iso, ObjectIdentity, TimeTicks, IpAddress, NotificationType, Counter32, ModuleIdentity, Integer32, Unsigned32, MibIdentifier, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "TimeTicks", "IpAddress", "NotificationType", "Counter32", "ModuleIdentity", "Integer32", "Unsigned32", "MibIdentifier", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter64")
DisplayString, TruthValue, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "RowStatus")
oacIpServicesConfigMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 13191, 1, 100, 683))
oacIpServicesConfigMIB.setRevisions(('2011-07-29 00:00', '2011-06-15 00:00',))
if mibBuilder.loadTexts: oacIpServicesConfigMIB.setLastUpdated('201107290000Z')
if mibBuilder.loadTexts: oacIpServicesConfigMIB.setOrganization(' OneAccess ')
oacIpServicesConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8))
oacIpServicesConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1))
oacIpServicesConfigConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 2))
oacIpServicesDnsConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 1))
oacIpDnsConfigDomainName = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacIpDnsConfigDomainName.setStatus('current')
oacIpDnsConfigMainAdd = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacIpDnsConfigMainAdd.setStatus('current')
oacIpDnsConfigSndAdd = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 1, 3), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacIpDnsConfigSndAdd.setStatus('current')
oacIpDnsConfigTimeout = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("timeoutValueDefault", 1), ("timeoutValue4", 2), ("timeoutValue12", 3), ("timeoutValue18", 4), ("timeoutValue42", 5), ("timeoutValue90", 6), ("timeoutValue120", 7))).clone('timeoutValueDefault')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacIpDnsConfigTimeout.setStatus('current')
oacIpServicesDHCPCConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 2))
oacDhcpClientAutoRestartAtm = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacDhcpClientAutoRestartAtm.setStatus('current')
oacDhcpClientBroadcastFlag = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacDhcpClientBroadcastFlag.setStatus('current')
oacDhcpVendorId = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 2, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacDhcpVendorId.setStatus('current')
oacIpDhcpClientInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 2, 4), )
if mibBuilder.loadTexts: oacIpDhcpClientInterfaceTable.setStatus('current')
oacIpDhcpClientInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: oacIpDhcpClientInterfaceEntry.setStatus('current')
oacIpDhcpClientInterfaceIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 2, 4, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacIpDhcpClientInterfaceIfName.setStatus('current')
oacIpDhcpClientInterfaceIgnoreDefRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 2, 4, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacIpDhcpClientInterfaceIgnoreDefRoute.setStatus('current')
oacIpDhcpClientInterfaceLeaseOptLess = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 2, 4, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacIpDhcpClientInterfaceLeaseOptLess.setStatus('current')
oacIpDhcpClientInterfaceUserClassId = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 2, 4, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacIpDhcpClientInterfaceUserClassId.setStatus('current')
oacIpDhcpClientInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 2, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacIpDhcpClientInterfaceRowStatus.setStatus('current')
oacIpDhcpAddClientInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 2, 5), )
if mibBuilder.loadTexts: oacIpDhcpAddClientInterfaceTable.setStatus('current')
oacIpDhcpAddClientInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 2, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: oacIpDhcpAddClientInterfaceEntry.setStatus('current')
oacIpDhcpAddClientInterfaceActivate = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 2, 5, 1, 1), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacIpDhcpAddClientInterfaceActivate.setStatus('current')
oacIpDhcpAddClientInterfaceIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 2, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacIpDhcpAddClientInterfaceIfName.setStatus('current')
oacIpDhcpAddClientInterfaceClientId = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 2, 5, 1, 3), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacIpDhcpAddClientInterfaceClientId.setStatus('current')
oacIpDhcpAddClientInterfaceHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 2, 5, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacIpDhcpAddClientInterfaceHostname.setStatus('current')
oacIpDhcpAddClientInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 2, 5, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacIpDhcpAddClientInterfaceRowStatus.setStatus('current')
oacIpServicesArpProxyConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 3))
oacIpProxyArpInterfaceConfigTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 3, 1), )
if mibBuilder.loadTexts: oacIpProxyArpInterfaceConfigTable.setStatus('current')
oacIpProxyArpInterfaceConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: oacIpProxyArpInterfaceConfigEntry.setStatus('current')
oacIpProxyArpInterfaceConfigActivate = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 3, 1, 1, 1), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacIpProxyArpInterfaceConfigActivate.setStatus('current')
oacIpProxyArpInterfaceConfigIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacIpProxyArpInterfaceConfigIfName.setStatus('current')
oacIpProxyArpInterfaceConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 3, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: oacIpProxyArpInterfaceConfigRowStatus.setStatus('current')
oacIpServicesIcmpRedirConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 4))
oacIpIcmpRedirConfigActivate = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 4, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacIpIcmpRedirConfigActivate.setStatus('current')
oacIpIcmpRedirConfigRedirRoutesActivate = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacIpIcmpRedirConfigRedirRoutesActivate.setStatus('current')
oacIpIcmpRedirConfigRateLimitUnreach = MibScalar((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 1, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: oacIpIcmpRedirConfigRateLimitUnreach.setStatus('current')
oacIpServicesGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 2, 1))
oacIpServicesConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 2, 1, 1)).setObjects(("ONEACCESS-IP-SERVICES-MIB", "oacIpDnsConfigDomainName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    oacIpServicesConfigGroup = oacIpServicesConfigGroup.setStatus('current')
oacIpServicesCompls = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 1, 8, 2, 2))
mibBuilder.exportSymbols("ONEACCESS-IP-SERVICES-MIB", oacIpDhcpAddClientInterfaceTable=oacIpDhcpAddClientInterfaceTable, oacIpProxyArpInterfaceConfigRowStatus=oacIpProxyArpInterfaceConfigRowStatus, oacIpIcmpRedirConfigActivate=oacIpIcmpRedirConfigActivate, oacIpDhcpClientInterfaceLeaseOptLess=oacIpDhcpClientInterfaceLeaseOptLess, oacIpIcmpRedirConfigRateLimitUnreach=oacIpIcmpRedirConfigRateLimitUnreach, oacIpProxyArpInterfaceConfigTable=oacIpProxyArpInterfaceConfigTable, oacIpProxyArpInterfaceConfigEntry=oacIpProxyArpInterfaceConfigEntry, oacIpServicesConfigObjects=oacIpServicesConfigObjects, PYSNMP_MODULE_ID=oacIpServicesConfigMIB, oacDhcpVendorId=oacDhcpVendorId, oacIpServicesArpProxyConfigObjects=oacIpServicesArpProxyConfigObjects, oacIpDnsConfigTimeout=oacIpDnsConfigTimeout, oacIpDhcpClientInterfaceIgnoreDefRoute=oacIpDhcpClientInterfaceIgnoreDefRoute, oacIpDhcpAddClientInterfaceRowStatus=oacIpDhcpAddClientInterfaceRowStatus, oacIpProxyArpInterfaceConfigActivate=oacIpProxyArpInterfaceConfigActivate, oacIpIcmpRedirConfigRedirRoutesActivate=oacIpIcmpRedirConfigRedirRoutesActivate, oacDhcpClientBroadcastFlag=oacDhcpClientBroadcastFlag, oacIpServicesConfigGroup=oacIpServicesConfigGroup, oacIpServicesIcmpRedirConfigObjects=oacIpServicesIcmpRedirConfigObjects, oacIpDhcpAddClientInterfaceEntry=oacIpDhcpAddClientInterfaceEntry, oacIpDhcpClientInterfaceRowStatus=oacIpDhcpClientInterfaceRowStatus, oacIpServicesConfigMIB=oacIpServicesConfigMIB, oacIpDnsConfigDomainName=oacIpDnsConfigDomainName, oacIpDhcpClientInterfaceTable=oacIpDhcpClientInterfaceTable, oacIpDnsConfigMainAdd=oacIpDnsConfigMainAdd, oacIpDhcpAddClientInterfaceIfName=oacIpDhcpAddClientInterfaceIfName, oacIpServicesDnsConfigObjects=oacIpServicesDnsConfigObjects, oacIpServicesConfigConformance=oacIpServicesConfigConformance, oacIpServicesCompls=oacIpServicesCompls, oacIpDhcpAddClientInterfaceHostname=oacIpDhcpAddClientInterfaceHostname, oacDhcpClientAutoRestartAtm=oacDhcpClientAutoRestartAtm, oacIpDhcpAddClientInterfaceActivate=oacIpDhcpAddClientInterfaceActivate, oacIpDhcpClientInterfaceIfName=oacIpDhcpClientInterfaceIfName, oacIpDhcpAddClientInterfaceClientId=oacIpDhcpAddClientInterfaceClientId, oacIpProxyArpInterfaceConfigIfName=oacIpProxyArpInterfaceConfigIfName, oacIpDnsConfigSndAdd=oacIpDnsConfigSndAdd, oacIpServicesGroups=oacIpServicesGroups, oacIpDhcpClientInterfaceEntry=oacIpDhcpClientInterfaceEntry, oacIpServicesConfig=oacIpServicesConfig, oacIpDhcpClientInterfaceUserClassId=oacIpDhcpClientInterfaceUserClassId, oacIpServicesDHCPCConfigObjects=oacIpServicesDHCPCConfigObjects)
