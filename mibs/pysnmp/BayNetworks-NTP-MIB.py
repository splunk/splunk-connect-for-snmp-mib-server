#
# PySNMP MIB module BayNetworks-NTP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BayNetworks-NTP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:25:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Counter32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, MibIdentifier, ObjectIdentity, Unsigned32, ModuleIdentity, Bits, IpAddress, TimeTicks, NotificationType, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Counter32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "MibIdentifier", "ObjectIdentity", "Unsigned32", "ModuleIdentity", "Bits", "IpAddress", "TimeTicks", "NotificationType", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfNtpGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfNtpGroup")
wfNtpEntryTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 1), )
if mibBuilder.loadTexts: wfNtpEntryTable.setStatus('mandatory')
wfNtpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 1, 1), ).setIndexNames((0, "BayNetworks-NTP-MIB", "wfNtpIndex"))
if mibBuilder.loadTexts: wfNtpEntry.setStatus('mandatory')
wfNtpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpIndex.setStatus('mandatory')
wfNtpDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNtpDelete.setStatus('mandatory')
wfNtpDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNtpDisable.setStatus('mandatory')
wfNtpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("client", 1), ("bclient", 2), ("mclient", 3))).clone('client')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNtpMode.setStatus('mandatory')
wfNtpDebugFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 1, 1, 5), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNtpDebugFlag.setStatus('mandatory')
wfNtpState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpState.setStatus('mandatory')
wfNtpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpVersion.setStatus('mandatory')
wfNtpStratum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpStratum.setStatus('mandatory')
wfNtpRootDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpRootDelay.setStatus('mandatory')
wfNtpReferenceId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 1, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpReferenceId.setStatus('mandatory')
wfNtpClockPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpClockPrec.setStatus('mandatory')
wfNtpLeapHappened = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpLeapHappened.setStatus('mandatory')
wfNtpLeapTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 1, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpLeapTime.setStatus('mandatory')
wfNtpUpdateTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNtpUpdateTimer.setStatus('mandatory')
wfNtpAccessTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 2), )
if mibBuilder.loadTexts: wfNtpAccessTable.setStatus('mandatory')
wfNtpAccessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 2, 1), ).setIndexNames((0, "BayNetworks-NTP-MIB", "wfNtpAccessIpAddr"))
if mibBuilder.loadTexts: wfNtpAccessEntry.setStatus('mandatory')
wfNtpAccessDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNtpAccessDelete.setStatus('mandatory')
wfNtpAccessFilterType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("restrict", 1), ("prefer", 2))).clone('restrict')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNtpAccessFilterType.setStatus('mandatory')
wfNtpAccessIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpAccessIpAddr.setStatus('mandatory')
wfNtpAccessIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNtpAccessIpMask.setStatus('mandatory')
wfNtpPeerTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3), )
if mibBuilder.loadTexts: wfNtpPeerTable.setStatus('mandatory')
wfNtpPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3, 1), ).setIndexNames((0, "BayNetworks-NTP-MIB", "wfNtpPeerIpAddress"))
if mibBuilder.loadTexts: wfNtpPeerEntry.setStatus('mandatory')
wfNtpPeerDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNtpPeerDelete.setStatus('mandatory')
wfNtpPeerState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpPeerState.setStatus('mandatory')
wfNtpCfgPeerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("server", 1), ("peer", 2))).clone('server')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNtpCfgPeerMode.setStatus('mandatory')
wfNtpPeerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("symmetrica", 1), ("symmetricp", 2), ("client", 3), ("server", 4), ("broadcast", 5), ("ntpctrl", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpPeerMode.setStatus('mandatory')
wfNtpPeerHostMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("symmetrica", 1), ("symmetricp", 2), ("client", 3), ("server", 4), ("broadcast", 5), ("ntpctrl", 6))).clone('client')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNtpPeerHostMode.setStatus('mandatory')
wfNtpPeerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpPeerIpAddress.setStatus('mandatory')
wfNtpSourceIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNtpSourceIpAddress.setStatus('mandatory')
wfNtpPeerPref = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNtpPeerPref.setStatus('mandatory')
wfNtpPeerRefId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpPeerRefId.setStatus('mandatory')
wfNtpPeerVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3, 1, 10), Integer32().clone(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpPeerVersion.setStatus('mandatory')
wfNtpPeerPrecision = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpPeerPrecision.setStatus('mandatory')
wfNtpPeerStratum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpPeerStratum.setStatus('mandatory')
wfNtpPeerRootDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpPeerRootDelay.setStatus('mandatory')
wfNtpPeerDispersion = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpPeerDispersion.setStatus('mandatory')
wfNtpPeerOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpPeerOffset.setStatus('mandatory')
wfNtpPeerPolls = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpPeerPolls.setStatus('mandatory')
wfNtpPeerFrameReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 17, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNtpPeerFrameReceives.setStatus('mandatory')
mibBuilder.exportSymbols("BayNetworks-NTP-MIB", wfNtpPeerRootDelay=wfNtpPeerRootDelay, wfNtpAccessEntry=wfNtpAccessEntry, wfNtpPeerRefId=wfNtpPeerRefId, wfNtpPeerPref=wfNtpPeerPref, wfNtpDebugFlag=wfNtpDebugFlag, wfNtpEntryTable=wfNtpEntryTable, wfNtpAccessIpMask=wfNtpAccessIpMask, wfNtpPeerMode=wfNtpPeerMode, wfNtpPeerEntry=wfNtpPeerEntry, wfNtpDisable=wfNtpDisable, wfNtpMode=wfNtpMode, wfNtpPeerOffset=wfNtpPeerOffset, wfNtpPeerPolls=wfNtpPeerPolls, wfNtpLeapTime=wfNtpLeapTime, wfNtpPeerState=wfNtpPeerState, wfNtpAccessIpAddr=wfNtpAccessIpAddr, wfNtpStratum=wfNtpStratum, wfNtpAccessFilterType=wfNtpAccessFilterType, wfNtpSourceIpAddress=wfNtpSourceIpAddress, wfNtpPeerDelete=wfNtpPeerDelete, wfNtpDelete=wfNtpDelete, wfNtpUpdateTimer=wfNtpUpdateTimer, wfNtpState=wfNtpState, wfNtpPeerIpAddress=wfNtpPeerIpAddress, wfNtpPeerHostMode=wfNtpPeerHostMode, wfNtpPeerFrameReceives=wfNtpPeerFrameReceives, wfNtpEntry=wfNtpEntry, wfNtpAccessTable=wfNtpAccessTable, wfNtpPeerPrecision=wfNtpPeerPrecision, wfNtpPeerDispersion=wfNtpPeerDispersion, wfNtpClockPrec=wfNtpClockPrec, wfNtpPeerTable=wfNtpPeerTable, wfNtpIndex=wfNtpIndex, wfNtpPeerStratum=wfNtpPeerStratum, wfNtpAccessDelete=wfNtpAccessDelete, wfNtpLeapHappened=wfNtpLeapHappened, wfNtpVersion=wfNtpVersion, wfNtpPeerVersion=wfNtpPeerVersion, wfNtpReferenceId=wfNtpReferenceId, wfNtpCfgPeerMode=wfNtpCfgPeerMode, wfNtpRootDelay=wfNtpRootDelay)
