#
# PySNMP MIB module IPV4INTERFACE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IPV4INTERFACE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:45:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
apIpv4Interface, = mibBuilder.importSymbols("APENT-MIB", "apIpv4Interface")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Counter64, ObjectIdentity, Integer32, NotificationType, ModuleIdentity, TimeTicks, MibIdentifier, Bits, iso, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Counter64", "ObjectIdentity", "Integer32", "NotificationType", "ModuleIdentity", "TimeTicks", "MibIdentifier", "Bits", "iso", "IpAddress")
TextualConvention, DisplayString, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "RowStatus")
apIpv4InterfaceMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2467, 1, 9, 2, 1))
if mibBuilder.loadTexts: apIpv4InterfaceMib.setLastUpdated('9711192000Z')
if mibBuilder.loadTexts: apIpv4InterfaceMib.setOrganization('ArrowPoint Communications Inc.')
apIpv4InterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2467, 1, 9, 2, 2), )
if mibBuilder.loadTexts: apIpv4InterfaceTable.setStatus('current')
apIpv4InterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2467, 1, 9, 2, 2, 1), ).setIndexNames((0, "IPV4INTERFACE-MIB", "apIpv4IfAddress"), (0, "IPV4INTERFACE-MIB", "apIpv4IfCircuitIfIndex"))
if mibBuilder.loadTexts: apIpv4InterfaceEntry.setStatus('current')
apIpv4IfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 2, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpv4IfAddress.setStatus('current')
apIpv4IfCircuitIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpv4IfCircuitIfIndex.setStatus('current')
apIpv4IfNetPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4IfNetPrefixLen.setStatus('current')
apIpv4IfDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4IfDisable.setStatus('current')
apIpv4IfState = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("disabled", 2), ("noCircuit", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apIpv4IfState.setStatus('current')
apIpv4IfBroadcastIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 2, 2, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4IfBroadcastIpAddress.setStatus('current')
apIpv4IfRedirects = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4IfRedirects.setStatus('current')
apIpv4IfUnreachables = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4IfUnreachables.setStatus('current')
apIpv4IfIrdp = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4IfIrdp.setStatus('current')
apIpv4IfIrdpUseMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4IfIrdpUseMulticast.setStatus('obsolete')
apIpv4IfIrdpMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 2, 2, 1, 11), Integer32().clone(600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4IfIrdpMax.setStatus('obsolete')
apIpv4IfIrdpMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 2, 2, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4IfIrdpMin.setStatus('obsolete')
apIpv4IfIrdpPref = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 2, 2, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4IfIrdpPref.setStatus('current')
apIpv4IfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 2, 2, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4IfStatus.setStatus('current')
apIpv4IfRunRedundancyProto = MibTableColumn((1, 3, 6, 1, 4, 1, 2467, 1, 9, 2, 2, 1, 15), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: apIpv4IfRunRedundancyProto.setStatus('current')
mibBuilder.exportSymbols("IPV4INTERFACE-MIB", apIpv4IfRedirects=apIpv4IfRedirects, apIpv4IfAddress=apIpv4IfAddress, apIpv4IfIrdpMin=apIpv4IfIrdpMin, apIpv4IfIrdpMax=apIpv4IfIrdpMax, apIpv4InterfaceTable=apIpv4InterfaceTable, apIpv4IfDisable=apIpv4IfDisable, apIpv4IfBroadcastIpAddress=apIpv4IfBroadcastIpAddress, apIpv4IfIrdpUseMulticast=apIpv4IfIrdpUseMulticast, apIpv4InterfaceEntry=apIpv4InterfaceEntry, PYSNMP_MODULE_ID=apIpv4InterfaceMib, apIpv4IfCircuitIfIndex=apIpv4IfCircuitIfIndex, apIpv4IfIrdp=apIpv4IfIrdp, apIpv4IfIrdpPref=apIpv4IfIrdpPref, apIpv4IfUnreachables=apIpv4IfUnreachables, apIpv4IfRunRedundancyProto=apIpv4IfRunRedundancyProto, apIpv4IfStatus=apIpv4IfStatus, apIpv4IfNetPrefixLen=apIpv4IfNetPrefixLen, apIpv4IfState=apIpv4IfState, apIpv4InterfaceMib=apIpv4InterfaceMib)
