#
# PySNMP MIB module Fore-PLCP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Fore-PLCP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:03:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
asx, = mibBuilder.importSymbols("Fore-Common-MIB", "asx")
trapLogIndex, = mibBuilder.importSymbols("Fore-TrapLog-MIB", "trapLogIndex")
ifIndex, ifName = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifName")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, NotificationType, Unsigned32, Integer32, Counter32, Bits, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ModuleIdentity, IpAddress, MibIdentifier, Counter64, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "NotificationType", "Unsigned32", "Integer32", "Counter32", "Bits", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ModuleIdentity", "IpAddress", "MibIdentifier", "Counter64", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
forePlcpMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13))
if mibBuilder.loadTexts: forePlcpMib.setLastUpdated('9911050000Z')
if mibBuilder.loadTexts: forePlcpMib.setOrganization('FORE')
forePlcpConfigTable = MibTable((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 1), )
if mibBuilder.loadTexts: forePlcpConfigTable.setStatus('current')
forePlcpConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: forePlcpConfigEntry.setStatus('current')
forePlcpConfigFrameFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("forePlcpFrameFormatDs1", 1), ("forePlcpFrameFormatE1", 2), ("forePlcpFrameFormatDs3", 3), ("forePlcpFrameFormatE3", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: forePlcpConfigFrameFormat.setStatus('current')
forePlcpTotalTable = MibTable((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 2), )
if mibBuilder.loadTexts: forePlcpTotalTable.setStatus('current')
forePlcpTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: forePlcpTotalEntry.setStatus('current')
forePlcpTotalFerrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: forePlcpTotalFerrCount.setStatus('current')
forePlcpTotalLofSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: forePlcpTotalLofSeconds.setStatus('current')
forePlcpTotalBip8Count = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: forePlcpTotalBip8Count.setStatus('current')
forePlcpTotalFebeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: forePlcpTotalFebeCount.setStatus('current')
forePlcpTotalYellowAlarmSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: forePlcpTotalYellowAlarmSeconds.setStatus('current')
forePlcpCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 3), )
if mibBuilder.loadTexts: forePlcpCurrentTable.setStatus('current')
forePlcpCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: forePlcpCurrentEntry.setStatus('current')
forePlcpCurrentFerrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: forePlcpCurrentFerrCount.setStatus('current')
forePlcpCurrentBip8Count = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: forePlcpCurrentBip8Count.setStatus('current')
forePlcpCurrentFebeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: forePlcpCurrentFebeCount.setStatus('current')
forePlcpCurrentErrSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: forePlcpCurrentErrSeconds.setStatus('current')
forePlcpCurrentSevErrSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: forePlcpCurrentSevErrSeconds.setStatus('current')
forePlcpCurrentUnavailSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: forePlcpCurrentUnavailSeconds.setStatus('current')
forePlcpIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 4), )
if mibBuilder.loadTexts: forePlcpIntervalTable.setStatus('current')
forePlcpIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "Fore-PLCP-MIB", "forePlcpInterval"))
if mibBuilder.loadTexts: forePlcpIntervalEntry.setStatus('current')
forePlcpInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: forePlcpInterval.setStatus('current')
forePlcpIntervalFerrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: forePlcpIntervalFerrCount.setStatus('current')
forePlcpIntervalBip8Count = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: forePlcpIntervalBip8Count.setStatus('current')
forePlcpIntervalFebeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: forePlcpIntervalFebeCount.setStatus('current')
forePlcpIntervalErrSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: forePlcpIntervalErrSeconds.setStatus('current')
forePlcpIntervalSevErrSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: forePlcpIntervalSevErrSeconds.setStatus('current')
forePlcpIntervalUnavailSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: forePlcpIntervalUnavailSeconds.setStatus('current')
forePlcpYellowDetected = NotificationType((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifName"), ("Fore-TrapLog-MIB", "trapLogIndex"))
if mibBuilder.loadTexts: forePlcpYellowDetected.setStatus('current')
forePlcpYellowCleared = NotificationType((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 0, 2)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifName"), ("Fore-TrapLog-MIB", "trapLogIndex"))
if mibBuilder.loadTexts: forePlcpYellowCleared.setStatus('current')
forePlcpLOFDetected = NotificationType((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 0, 3)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifName"), ("Fore-TrapLog-MIB", "trapLogIndex"))
if mibBuilder.loadTexts: forePlcpLOFDetected.setStatus('current')
forePlcpLOFCleared = NotificationType((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 13, 0, 4)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifName"), ("Fore-TrapLog-MIB", "trapLogIndex"))
if mibBuilder.loadTexts: forePlcpLOFCleared.setStatus('current')
mibBuilder.exportSymbols("Fore-PLCP-MIB", forePlcpCurrentErrSeconds=forePlcpCurrentErrSeconds, forePlcpIntervalFerrCount=forePlcpIntervalFerrCount, forePlcpTotalLofSeconds=forePlcpTotalLofSeconds, forePlcpMib=forePlcpMib, forePlcpConfigFrameFormat=forePlcpConfigFrameFormat, forePlcpTotalTable=forePlcpTotalTable, forePlcpCurrentUnavailSeconds=forePlcpCurrentUnavailSeconds, forePlcpYellowCleared=forePlcpYellowCleared, forePlcpIntervalSevErrSeconds=forePlcpIntervalSevErrSeconds, forePlcpTotalEntry=forePlcpTotalEntry, forePlcpCurrentSevErrSeconds=forePlcpCurrentSevErrSeconds, forePlcpYellowDetected=forePlcpYellowDetected, forePlcpTotalBip8Count=forePlcpTotalBip8Count, forePlcpInterval=forePlcpInterval, forePlcpIntervalFebeCount=forePlcpIntervalFebeCount, forePlcpCurrentFerrCount=forePlcpCurrentFerrCount, forePlcpIntervalTable=forePlcpIntervalTable, forePlcpIntervalEntry=forePlcpIntervalEntry, forePlcpIntervalUnavailSeconds=forePlcpIntervalUnavailSeconds, forePlcpTotalFerrCount=forePlcpTotalFerrCount, forePlcpCurrentEntry=forePlcpCurrentEntry, forePlcpTotalFebeCount=forePlcpTotalFebeCount, forePlcpCurrentTable=forePlcpCurrentTable, forePlcpLOFDetected=forePlcpLOFDetected, forePlcpIntervalBip8Count=forePlcpIntervalBip8Count, PYSNMP_MODULE_ID=forePlcpMib, forePlcpLOFCleared=forePlcpLOFCleared, forePlcpConfigEntry=forePlcpConfigEntry, forePlcpCurrentBip8Count=forePlcpCurrentBip8Count, forePlcpIntervalErrSeconds=forePlcpIntervalErrSeconds, forePlcpCurrentFebeCount=forePlcpCurrentFebeCount, forePlcpTotalYellowAlarmSeconds=forePlcpTotalYellowAlarmSeconds, forePlcpConfigTable=forePlcpConfigTable)
