#
# PySNMP MIB module TPT-NPSTATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPT-NPSTATS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:19:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, ObjectIdentity, MibIdentifier, ModuleIdentity, Unsigned32, Integer32, Bits, Gauge32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Counter32, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "Unsigned32", "Integer32", "Bits", "Gauge32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Counter32", "IpAddress", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tpt_tpa_objs, = mibBuilder.importSymbols("TPT-TPAMIBS-MIB", "tpt-tpa-objs")
tpt_npstats = ModuleIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10)).setLabel("tpt-npstats")
tpt_npstats.setRevisions(('2016-05-25 18:54', '2016-05-03 17:26',))
if mibBuilder.loadTexts: tpt_npstats.setLastUpdated('201605251854Z')
if mibBuilder.loadTexts: tpt_npstats.setOrganization('Trend Micro, Inc.')
npstatsRulesTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 1), )
if mibBuilder.loadTexts: npstatsRulesTable.setStatus('current')
npstatsRulesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 1, 1), ).setIndexNames((0, "TPT-NPSTATS-MIB", "npstatsRulesRank"))
if mibBuilder.loadTexts: npstatsRulesEntry.setStatus('current')
npstatsRulesRank = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: npstatsRulesRank.setStatus('current')
npstatsRulesFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsRulesFilter.setStatus('current')
npstatsRulesFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsRulesFlows.setStatus('current')
npstatsRulesSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsRulesSuccess.setStatus('current')
npstatsRulesTotalPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsRulesTotalPercent.setStatus('current')
npstatsRulesSuccessPer10K = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsRulesSuccessPer10K.setStatus('current')
npstatsTiersTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 2), )
if mibBuilder.loadTexts: npstatsTiersTable.setStatus('current')
npstatsTiersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 2, 1), ).setIndexNames((0, "TPT-NPSTATS-MIB", "npstatsTierNumber"))
if mibBuilder.loadTexts: npstatsTiersEntry.setStatus('current')
npstatsTierNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: npstatsTierNumber.setStatus('current')
npstatsTiersReceiveMbps = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTiersReceiveMbps.setStatus('current')
npstatsTiersTransmitMbps = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTiersTransmitMbps.setStatus('current')
npstatsTiersRxPktsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTiersRxPktsPerSec.setStatus('current')
npstatsTiersMaxPktsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTiersMaxPktsPerSec.setStatus('current')
npstatsTiersAvgBytesPerPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTiersAvgBytesPerPkt.setStatus('current')
npstatsTiersUtilizationPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTiersUtilizationPercent.setStatus('current')
npstatsTiersRatioToNextPer10K = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTiersRatioToNextPer10K.setStatus('current')
npstatsTiersMaxReceiveMbps = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTiersMaxReceiveMbps.setStatus('current')
npstatsTiersMaxTransmitMbps = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTiersMaxTransmitMbps.setStatus('current')
npstatsTiersMaxUtilizationPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTiersMaxUtilizationPercent.setStatus('current')
npstatsTiersMaxRatioToNextPer10K = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTiersMaxRatioToNextPer10K.setStatus('current')
npstatsTiersExtra = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3))
if mibBuilder.loadTexts: npstatsTiersExtra.setStatus('current')
npstatsTier1BypassMbps = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier1BypassMbps.setStatus('current')
npstatsTier1Balance = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier1Balance.setStatus('current')
npstatsTier1MaxPktsPerSecA = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier1MaxPktsPerSecA.setStatus('current')
npstatsTier1MaxPktsPerSecB = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier1MaxPktsPerSecB.setStatus('current')
npstatsTier1TxPktsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier1TxPktsPerSec.setStatus('current')
npstatsTier1MaxTxPktsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier1MaxTxPktsPerSec.setStatus('current')
npstatsTier4TriggerMatchPer1000 = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier4TriggerMatchPer1000.setStatus('current')
npstatsTier4ReroutePer1000 = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier4ReroutePer1000.setStatus('current')
npstatsTier4TcpSequencePer1000 = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier4TcpSequencePer1000.setStatus('current')
npstatsTier1MaxPktsPerSecC = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier1MaxPktsPerSecC.setStatus('current')
npstatsTier4ProtoDcdPer1000 = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier4ProtoDcdPer1000.setStatus('current')
npstatsTier2TxTrustedPktsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier2TxTrustedPktsPerSec.setStatus('current')
npstatsTier3TxTrustedPktsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier3TxTrustedPktsPerSec.setStatus('current')
npstatsTier4TxTrustedPktsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier4TxTrustedPktsPerSec.setStatus('current')
npstatsTier1BypassPktsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier1BypassPktsPerSec.setStatus('current')
npstatsTier1MaxBypassPktsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier1MaxBypassPktsPerSec.setStatus('current')
npstatsTier1BypassToRxPktsPerSecRatio = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier1BypassToRxPktsPerSecRatio.setStatus('current')
npstatsTier1VlanTransPktsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier1VlanTransPktsPerSec.setStatus('current')
npstatsTier1MaxVlanTransPktsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier1MaxVlanTransPktsPerSec.setStatus('current')
npstatsTier1VlanTransToRxPktsPerSecRatio = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier1VlanTransToRxPktsPerSecRatio.setStatus('current')
npstatsTier1PatternMatchToRxPktsPerSecRatio = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier1PatternMatchToRxPktsPerSecRatio.setStatus('current')
npstatsTier1MaxPatternMatchToRxPktsPerSecRatio = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier1MaxPatternMatchToRxPktsPerSecRatio.setStatus('current')
npstatsTier2MaxTxTrustedPktsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier2MaxTxTrustedPktsPerSec.setStatus('current')
npstatsTier3MaxTxTrustedPktsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier3MaxTxTrustedPktsPerSec.setStatus('current')
npstatsTier4MaxTxTrustedPktsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier4MaxTxTrustedPktsPerSec.setStatus('current')
npstatsTier4MaxTriggerMatchPer1000 = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier4MaxTriggerMatchPer1000.setStatus('current')
npstatsTier4MaxReroutePer1000 = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier4MaxReroutePer1000.setStatus('current')
npstatsTier4MaxTcpSequencePer1000 = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier4MaxTcpSequencePer1000.setStatus('current')
npstatsTier4MaxProtoDcdPer1000 = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 3, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsTier4MaxProtoDcdPer1000.setStatus('current')
npstatsMisc = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 4))
if mibBuilder.loadTexts: npstatsMisc.setStatus('current')
npstatsMiscTxPktsBestEffort = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsMiscTxPktsBestEffort.setStatus('current')
npstatsSslInsp = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 5))
if mibBuilder.loadTexts: npstatsSslInsp.setStatus('current')
npstatsSslInspCurrentSessions = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 5, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsSslInspCurrentSessions.setStatus('current')
npstatsSslInspConnectionRate = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 5, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsSslInspConnectionRate.setStatus('current')
npstatsSslInspBlockedMaxConns = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 5, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsSslInspBlockedMaxConns.setStatus('current')
npstatsSslInspPassedMaxConns = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 5, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsSslInspPassedMaxConns.setStatus('current')
npstatsSslInspTotalBytesIn = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 5, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsSslInspTotalBytesIn.setStatus('current')
npstatsSslInspTotalBytesOut = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 5, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsSslInspTotalBytesOut.setStatus('current')
npstatsStackSegmentPorts = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 10))
if mibBuilder.loadTexts: npstatsStackSegmentPorts.setStatus('current')
npstatsStackSegmentRecieveMbps = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 10, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackSegmentRecieveMbps.setStatus('current')
npstatsStackSegmentMaxRecieveMbps = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 10, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackSegmentMaxRecieveMbps.setStatus('current')
npstatsStackSegmentTransmitMbps = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 10, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackSegmentTransmitMbps.setStatus('current')
npstatsStackSegmentMaxTransmitMbps = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 10, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackSegmentMaxTransmitMbps.setStatus('current')
npstatsStackBalance = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 10, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackBalance.setStatus('current')
npstatsStackMinBalance = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 10, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackMinBalance.setStatus('current')
npstatsStackSegmentRatioToTier1Per10K = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 10, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackSegmentRatioToTier1Per10K.setStatus('current')
npstatsStackSegmentMaxRatioToTier1Per10K = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 10, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackSegmentMaxRatioToTier1Per10K.setStatus('current')
npstatsStackSegmentPortTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 10, 9), )
if mibBuilder.loadTexts: npstatsStackSegmentPortTable.setStatus('current')
npstatsStackSegmentPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 10, 9, 1), ).setIndexNames((0, "TPT-NPSTATS-MIB", "npstatsStackMemberIndex"))
if mibBuilder.loadTexts: npstatsStackSegmentPortEntry.setStatus('current')
npstatsStackMemberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 10, 9, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackMemberIndex.setStatus('current')
npstatsStackMemberKey = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 10, 9, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackMemberKey.setStatus('current')
npstatsStackMemberHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 10, 9, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackMemberHostname.setStatus('current')
npstatsStackMemberSegmentReceiveMbps = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 10, 9, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackMemberSegmentReceiveMbps.setStatus('current')
npstatsStackMemberMaxSegmentReceiveMbps = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 10, 9, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackMemberMaxSegmentReceiveMbps.setStatus('current')
npstatsStackPorts = ObjectIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 11))
if mibBuilder.loadTexts: npstatsStackPorts.setStatus('current')
npstatsStackPortsRecieveMbps = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 11, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackPortsRecieveMbps.setStatus('current')
npstatsStackPortsMaxRecieveMbps = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 11, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackPortsMaxRecieveMbps.setStatus('current')
npstatsStackPortsTransmitMbps = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 11, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackPortsTransmitMbps.setStatus('current')
npstatsStackPortsMaxTransmitMbps = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 11, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackPortsMaxTransmitMbps.setStatus('current')
npstatsStackRxToStackTxMbps = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 11, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackRxToStackTxMbps.setStatus('current')
npstatsStackMaxRxToStackTxMbps = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 11, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackMaxRxToStackTxMbps.setStatus('current')
npstatsStackRxToSegmentTxMbps = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 11, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackRxToSegmentTxMbps.setStatus('current')
npstatsStackMaxRxToSegmentTxMbps = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 11, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackMaxRxToSegmentTxMbps.setStatus('current')
npstatsStackRxToTier1 = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 11, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackRxToTier1.setStatus('current')
npstatsStackMaxRxToTier1 = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 10, 11, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: npstatsStackMaxRxToTier1.setStatus('current')
mibBuilder.exportSymbols("TPT-NPSTATS-MIB", npstatsTier4ProtoDcdPer1000=npstatsTier4ProtoDcdPer1000, npstatsStackPortsTransmitMbps=npstatsStackPortsTransmitMbps, npstatsTier4TcpSequencePer1000=npstatsTier4TcpSequencePer1000, npstatsTier3MaxTxTrustedPktsPerSec=npstatsTier3MaxTxTrustedPktsPerSec, npstatsSslInspCurrentSessions=npstatsSslInspCurrentSessions, npstatsStackMinBalance=npstatsStackMinBalance, npstatsRulesSuccess=npstatsRulesSuccess, npstatsTier1MaxVlanTransPktsPerSec=npstatsTier1MaxVlanTransPktsPerSec, npstatsTier1VlanTransToRxPktsPerSecRatio=npstatsTier1VlanTransToRxPktsPerSecRatio, npstatsRulesTotalPercent=npstatsRulesTotalPercent, npstatsTiersReceiveMbps=npstatsTiersReceiveMbps, npstatsStackBalance=npstatsStackBalance, npstatsTier3TxTrustedPktsPerSec=npstatsTier3TxTrustedPktsPerSec, npstatsStackRxToSegmentTxMbps=npstatsStackRxToSegmentTxMbps, npstatsStackMemberHostname=npstatsStackMemberHostname, npstatsTiersMaxUtilizationPercent=npstatsTiersMaxUtilizationPercent, npstatsTier4MaxReroutePer1000=npstatsTier4MaxReroutePer1000, npstatsRulesTable=npstatsRulesTable, npstatsRulesFlows=npstatsRulesFlows, npstatsTier4MaxTxTrustedPktsPerSec=npstatsTier4MaxTxTrustedPktsPerSec, npstatsStackMemberSegmentReceiveMbps=npstatsStackMemberSegmentReceiveMbps, npstatsTier1VlanTransPktsPerSec=npstatsTier1VlanTransPktsPerSec, npstatsStackSegmentMaxRecieveMbps=npstatsStackSegmentMaxRecieveMbps, npstatsSslInspPassedMaxConns=npstatsSslInspPassedMaxConns, npstatsTier1Balance=npstatsTier1Balance, npstatsTiersMaxTransmitMbps=npstatsTiersMaxTransmitMbps, npstatsTier4MaxTriggerMatchPer1000=npstatsTier4MaxTriggerMatchPer1000, npstatsSslInspConnectionRate=npstatsSslInspConnectionRate, npstatsTiersMaxReceiveMbps=npstatsTiersMaxReceiveMbps, npstatsTier4TriggerMatchPer1000=npstatsTier4TriggerMatchPer1000, npstatsTier1MaxPktsPerSecA=npstatsTier1MaxPktsPerSecA, npstatsStackSegmentRecieveMbps=npstatsStackSegmentRecieveMbps, npstatsStackMaxRxToSegmentTxMbps=npstatsStackMaxRxToSegmentTxMbps, npstatsRulesSuccessPer10K=npstatsRulesSuccessPer10K, npstatsStackSegmentRatioToTier1Per10K=npstatsStackSegmentRatioToTier1Per10K, npstatsTier1PatternMatchToRxPktsPerSecRatio=npstatsTier1PatternMatchToRxPktsPerSecRatio, npstatsTiersTable=npstatsTiersTable, npstatsTiersAvgBytesPerPkt=npstatsTiersAvgBytesPerPkt, npstatsStackRxToStackTxMbps=npstatsStackRxToStackTxMbps, npstatsSslInsp=npstatsSslInsp, npstatsStackPortsMaxTransmitMbps=npstatsStackPortsMaxTransmitMbps, npstatsStackPortsMaxRecieveMbps=npstatsStackPortsMaxRecieveMbps, npstatsRulesRank=npstatsRulesRank, npstatsTier1BypassPktsPerSec=npstatsTier1BypassPktsPerSec, npstatsMisc=npstatsMisc, npstatsTiersMaxPktsPerSec=npstatsTiersMaxPktsPerSec, npstatsTiersExtra=npstatsTiersExtra, npstatsStackSegmentPortTable=npstatsStackSegmentPortTable, npstatsStackSegmentMaxTransmitMbps=npstatsStackSegmentMaxTransmitMbps, npstatsTierNumber=npstatsTierNumber, npstatsTier4TxTrustedPktsPerSec=npstatsTier4TxTrustedPktsPerSec, npstatsTier1MaxTxPktsPerSec=npstatsTier1MaxTxPktsPerSec, tpt_npstats=tpt_npstats, npstatsStackMemberKey=npstatsStackMemberKey, npstatsStackMaxRxToTier1=npstatsStackMaxRxToTier1, npstatsStackMemberIndex=npstatsStackMemberIndex, npstatsTier1BypassToRxPktsPerSecRatio=npstatsTier1BypassToRxPktsPerSecRatio, npstatsTier2TxTrustedPktsPerSec=npstatsTier2TxTrustedPktsPerSec, npstatsStackMemberMaxSegmentReceiveMbps=npstatsStackMemberMaxSegmentReceiveMbps, npstatsTiersEntry=npstatsTiersEntry, npstatsTier1MaxPktsPerSecC=npstatsTier1MaxPktsPerSecC, npstatsMiscTxPktsBestEffort=npstatsMiscTxPktsBestEffort, npstatsTiersTransmitMbps=npstatsTiersTransmitMbps, npstatsSslInspTotalBytesIn=npstatsSslInspTotalBytesIn, npstatsStackSegmentTransmitMbps=npstatsStackSegmentTransmitMbps, npstatsStackMaxRxToStackTxMbps=npstatsStackMaxRxToStackTxMbps, npstatsTiersUtilizationPercent=npstatsTiersUtilizationPercent, npstatsTier4MaxProtoDcdPer1000=npstatsTier4MaxProtoDcdPer1000, npstatsTier1MaxPktsPerSecB=npstatsTier1MaxPktsPerSecB, npstatsStackRxToTier1=npstatsStackRxToTier1, npstatsTier1MaxBypassPktsPerSec=npstatsTier1MaxBypassPktsPerSec, npstatsStackPortsRecieveMbps=npstatsStackPortsRecieveMbps, npstatsTier2MaxTxTrustedPktsPerSec=npstatsTier2MaxTxTrustedPktsPerSec, npstatsTiersRxPktsPerSec=npstatsTiersRxPktsPerSec, npstatsSslInspTotalBytesOut=npstatsSslInspTotalBytesOut, npstatsTier1MaxPatternMatchToRxPktsPerSecRatio=npstatsTier1MaxPatternMatchToRxPktsPerSecRatio, npstatsTier1TxPktsPerSec=npstatsTier1TxPktsPerSec, PYSNMP_MODULE_ID=tpt_npstats, npstatsStackSegmentPortEntry=npstatsStackSegmentPortEntry, npstatsRulesFilter=npstatsRulesFilter, npstatsSslInspBlockedMaxConns=npstatsSslInspBlockedMaxConns, npstatsTiersRatioToNextPer10K=npstatsTiersRatioToNextPer10K, npstatsTiersMaxRatioToNextPer10K=npstatsTiersMaxRatioToNextPer10K, npstatsRulesEntry=npstatsRulesEntry, npstatsTier4MaxTcpSequencePer1000=npstatsTier4MaxTcpSequencePer1000, npstatsStackPorts=npstatsStackPorts, npstatsTier4ReroutePer1000=npstatsTier4ReroutePer1000, npstatsStackSegmentPorts=npstatsStackSegmentPorts, npstatsStackSegmentMaxRatioToTier1Per10K=npstatsStackSegmentMaxRatioToTier1Per10K, npstatsTier1BypassMbps=npstatsTier1BypassMbps)
