#
# PySNMP MIB module RADLAN-BGP (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RADLAN-BGP
# Produced by pysmi-0.3.4 at Mon Apr 29 20:36:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
bgp4PathAttrIpAddrPrefixLen, bgp4PathAttrIpAddrPrefix, bgp4PathAttrEntry, bgpPeerRemoteAddr, bgpPeerEntry, bgp4PathAttrPeer = mibBuilder.importSymbols("BGP4-MIB", "bgp4PathAttrIpAddrPrefixLen", "bgp4PathAttrIpAddrPrefix", "bgp4PathAttrEntry", "bgpPeerRemoteAddr", "bgpPeerEntry", "bgp4PathAttrPeer")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, MibIdentifier, Unsigned32, NotificationType, iso, IpAddress, Gauge32, Counter64, Bits, TimeTicks, Counter32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "MibIdentifier", "Unsigned32", "NotificationType", "iso", "IpAddress", "Gauge32", "Counter64", "Bits", "TimeTicks", "Counter32", "ObjectIdentity")
TruthValue, RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "TextualConvention", "DisplayString")
rlBgp = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 71))
rlBgp.setRevisions(('2004-06-01 00:00',))
if mibBuilder.loadTexts: rlBgp.setLastUpdated('200406010000Z')
if mibBuilder.loadTexts: rlBgp.setOrganization('Radlan Computer Communications Ltd.')
rlBgpMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 89, 71, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBgpMibVersion.setStatus('current')
rlBgpPeersExtTable = MibTable((1, 3, 6, 1, 4, 1, 89, 71, 2), )
if mibBuilder.loadTexts: rlBgpPeersExtTable.setStatus('current')
rlBgpPeersExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 71, 2, 1), )
bgpPeerEntry.registerAugmentions(("RADLAN-BGP", "rlBgpPeersExtEntry"))
rlBgpPeersExtEntry.setIndexNames(*bgpPeerEntry.getIndexNames())
if mibBuilder.loadTexts: rlBgpPeersExtEntry.setStatus('current')
rlBgpPeersExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 71, 2, 1, 1), RowStatus().clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpPeersExtRowStatus.setStatus('current')
rlBgpPeersExtIsReflectorClient = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 71, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("nonClient", 0), ("client", 1), ("meshedClient", 2))).clone('meshedClient')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpPeersExtIsReflectorClient.setStatus('current')
rlBgpPeersExtInConfederation = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 71, 2, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpPeersExtInConfederation.setStatus('current')
rlBgpPeersExtRemAS = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 71, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpPeersExtRemAS.setStatus('current')
rlBgpClusterId = MibScalar((1, 3, 6, 1, 4, 1, 89, 71, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpClusterId.setStatus('current')
rlBgpConfederationId = MibScalar((1, 3, 6, 1, 4, 1, 89, 71, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpConfederationId.setStatus('current')
rlBgpEnable = MibScalar((1, 3, 6, 1, 4, 1, 89, 71, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpEnable.setStatus('current')
rlBgpRouteReflectionEnable = MibScalar((1, 3, 6, 1, 4, 1, 89, 71, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpRouteReflectionEnable.setStatus('current')
rlBgpASConfederationEnable = MibScalar((1, 3, 6, 1, 4, 1, 89, 71, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpASConfederationEnable.setStatus('current')
rlBgpRouteFlapDampeningEnable = MibScalar((1, 3, 6, 1, 4, 1, 89, 71, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpRouteFlapDampeningEnable.setStatus('current')
rlBgpCommunitiesEnable = MibScalar((1, 3, 6, 1, 4, 1, 89, 71, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpCommunitiesEnable.setStatus('current')
rlBgpCapabilNegotEnable = MibScalar((1, 3, 6, 1, 4, 1, 89, 71, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpCapabilNegotEnable.setStatus('current')
rlBgpMedConf = MibScalar((1, 3, 6, 1, 4, 1, 89, 71, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpMedConf.setStatus('current')
rlBgpLocalPrefConf = MibScalar((1, 3, 6, 1, 4, 1, 89, 71, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpLocalPrefConf.setStatus('current')
rlBgpLocalAsConf = MibScalar((1, 3, 6, 1, 4, 1, 89, 71, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpLocalAsConf.setStatus('current')
rlBgp4PathAttrExtTable = MibTable((1, 3, 6, 1, 4, 1, 89, 71, 14), )
if mibBuilder.loadTexts: rlBgp4PathAttrExtTable.setStatus('current')
rlBgp4PathAttrExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 71, 14, 1), )
bgp4PathAttrEntry.registerAugmentions(("RADLAN-BGP", "rlBgp4PathAttrExtEntry"))
rlBgp4PathAttrExtEntry.setIndexNames(*bgp4PathAttrEntry.getIndexNames())
if mibBuilder.loadTexts: rlBgp4PathAttrExtEntry.setStatus('current')
rlBgp4PathAttrOriginatorId = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 71, 14, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBgp4PathAttrOriginatorId.setStatus('current')
rlBgp4PathAttrClusterList = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 71, 14, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBgp4PathAttrClusterList.setStatus('current')
rlBgp4PathAttrCommunities = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 71, 14, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlBgp4PathAttrCommunities.setStatus('current')
rlBgpSuppressLimit = MibScalar((1, 3, 6, 1, 4, 1, 89, 71, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpSuppressLimit.setStatus('current')
rlBgpReuseLimit = MibScalar((1, 3, 6, 1, 4, 1, 89, 71, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpReuseLimit.setStatus('current')
rlBgpHalfLifeTime = MibScalar((1, 3, 6, 1, 4, 1, 89, 71, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 45))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpHalfLifeTime.setStatus('current')
rlBgpMaxSuppressTime = MibScalar((1, 3, 6, 1, 4, 1, 89, 71, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlBgpMaxSuppressTime.setStatus('current')
mibBuilder.exportSymbols("RADLAN-BGP", rlBgpReuseLimit=rlBgpReuseLimit, rlBgpPeersExtIsReflectorClient=rlBgpPeersExtIsReflectorClient, rlBgpRouteFlapDampeningEnable=rlBgpRouteFlapDampeningEnable, rlBgpCommunitiesEnable=rlBgpCommunitiesEnable, rlBgpConfederationId=rlBgpConfederationId, rlBgpASConfederationEnable=rlBgpASConfederationEnable, rlBgpPeersExtRemAS=rlBgpPeersExtRemAS, rlBgpCapabilNegotEnable=rlBgpCapabilNegotEnable, rlBgp=rlBgp, rlBgpHalfLifeTime=rlBgpHalfLifeTime, rlBgpLocalPrefConf=rlBgpLocalPrefConf, rlBgp4PathAttrCommunities=rlBgp4PathAttrCommunities, rlBgp4PathAttrExtTable=rlBgp4PathAttrExtTable, rlBgpMaxSuppressTime=rlBgpMaxSuppressTime, PYSNMP_MODULE_ID=rlBgp, rlBgpPeersExtInConfederation=rlBgpPeersExtInConfederation, rlBgpEnable=rlBgpEnable, rlBgpClusterId=rlBgpClusterId, rlBgpPeersExtRowStatus=rlBgpPeersExtRowStatus, rlBgp4PathAttrOriginatorId=rlBgp4PathAttrOriginatorId, rlBgpRouteReflectionEnable=rlBgpRouteReflectionEnable, rlBgpPeersExtTable=rlBgpPeersExtTable, rlBgpMedConf=rlBgpMedConf, rlBgpPeersExtEntry=rlBgpPeersExtEntry, rlBgpLocalAsConf=rlBgpLocalAsConf, rlBgpMibVersion=rlBgpMibVersion, rlBgpSuppressLimit=rlBgpSuppressLimit, rlBgp4PathAttrExtEntry=rlBgp4PathAttrExtEntry, rlBgp4PathAttrClusterList=rlBgp4PathAttrClusterList)
