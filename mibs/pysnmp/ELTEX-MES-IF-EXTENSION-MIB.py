#
# PySNMP MIB module ELTEX-MES-IF-EXTENSION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-MES-IF-EXTENSION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:46:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
eltMesIfExtensionMIB, = mibBuilder.importSymbols("ELTEX-MES-MNG-MIB", "eltMesIfExtensionMIB")
InterfaceIndexOrZero, InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex", "ifIndex")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Bits, MibIdentifier, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, NotificationType, ObjectIdentity, Gauge32, ModuleIdentity, Counter64, IpAddress, Counter32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Bits", "MibIdentifier", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "NotificationType", "ObjectIdentity", "Gauge32", "ModuleIdentity", "Counter64", "IpAddress", "Counter32", "Unsigned32")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
eltMesIfExtensionMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 276, 1))
eltMesIfExtDot1qCustomEtherType = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 276, 1, 3))
eltMesIfExtDot1q = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 276, 1, 4))
eltIfDot1qCustomEgressEtherTypeTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 276, 1, 3, 1), )
if mibBuilder.loadTexts: eltIfDot1qCustomEgressEtherTypeTable.setStatus('current')
eltIfDot1qCustomEgressEtherTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 276, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: eltIfDot1qCustomEgressEtherTypeEntry.setStatus('current')
eltIfDot1qCustomEgressEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 276, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIfDot1qCustomEgressEtherType.setStatus('current')
eltIfDot1qIngressCvlanTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 276, 1, 4, 1), )
if mibBuilder.loadTexts: eltIfDot1qIngressCvlanTable.setStatus('current')
eltIfDot1qIngressCvlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 276, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: eltIfDot1qIngressCvlanEntry.setStatus('current')
eltIfDot1qIngressCvlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 276, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIfDot1qIngressCvlanTag.setStatus('current')
eltIfDot1qCustomIngressEtherTypeTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 276, 1, 3, 2), )
if mibBuilder.loadTexts: eltIfDot1qCustomIngressEtherTypeTable.setStatus('current')
eltIfDot1qCustomIngressEtherTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 276, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: eltIfDot1qCustomIngressEtherTypeEntry.setStatus('current')
eltIfDot1qCustomIngressEtherType1 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 276, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(33024, 33024), )).clone(33024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIfDot1qCustomIngressEtherType1.setStatus('current')
eltIfDot1qCustomIngressEtherType2 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 276, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 33023), ValueRangeConstraint(33025, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIfDot1qCustomIngressEtherType2.setStatus('current')
eltIfDot1qCustomIngressEtherType3 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 276, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 33023), ValueRangeConstraint(33025, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIfDot1qCustomIngressEtherType3.setStatus('current')
eltIfDot1qCustomIngressEtherType4 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 276, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 33023), ValueRangeConstraint(33025, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIfDot1qCustomIngressEtherType4.setStatus('current')
eltIfDot1qCustomIngressEtherType5 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 276, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 33023), ValueRangeConstraint(33025, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIfDot1qCustomIngressEtherType5.setStatus('current')
eltIfDot1qCustomIngressEtherType6 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 276, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 33023), ValueRangeConstraint(33025, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIfDot1qCustomIngressEtherType6.setStatus('current')
eltIfDot1qCustomIngressEtherType7 = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 276, 1, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 33023), ValueRangeConstraint(33025, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltIfDot1qCustomIngressEtherType7.setStatus('current')
mibBuilder.exportSymbols("ELTEX-MES-IF-EXTENSION-MIB", eltIfDot1qCustomIngressEtherTypeTable=eltIfDot1qCustomIngressEtherTypeTable, eltIfDot1qCustomIngressEtherType7=eltIfDot1qCustomIngressEtherType7, eltMesIfExtDot1qCustomEtherType=eltMesIfExtDot1qCustomEtherType, eltIfDot1qIngressCvlanEntry=eltIfDot1qIngressCvlanEntry, eltIfDot1qCustomEgressEtherTypeTable=eltIfDot1qCustomEgressEtherTypeTable, eltIfDot1qCustomEgressEtherTypeEntry=eltIfDot1qCustomEgressEtherTypeEntry, eltIfDot1qIngressCvlanTag=eltIfDot1qIngressCvlanTag, eltIfDot1qCustomIngressEtherType3=eltIfDot1qCustomIngressEtherType3, eltIfDot1qCustomIngressEtherType4=eltIfDot1qCustomIngressEtherType4, eltIfDot1qCustomIngressEtherType5=eltIfDot1qCustomIngressEtherType5, eltIfDot1qIngressCvlanTable=eltIfDot1qIngressCvlanTable, eltIfDot1qCustomIngressEtherType2=eltIfDot1qCustomIngressEtherType2, eltIfDot1qCustomIngressEtherType6=eltIfDot1qCustomIngressEtherType6, eltIfDot1qCustomIngressEtherTypeEntry=eltIfDot1qCustomIngressEtherTypeEntry, eltMesIfExtensionMIBObjects=eltMesIfExtensionMIBObjects, eltMesIfExtDot1q=eltMesIfExtDot1q, eltIfDot1qCustomEgressEtherType=eltIfDot1qCustomEgressEtherType, eltIfDot1qCustomIngressEtherType1=eltIfDot1qCustomIngressEtherType1)
