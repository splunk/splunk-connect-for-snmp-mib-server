#
# PySNMP MIB module JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:49:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
jnxMobileGatewaySgw, = mibBuilder.importSymbols("JUNIPER-MBG-SMI", "jnxMobileGatewaySgw")
jnxMbgGwIndex, jnxMbgGwName = mibBuilder.importSymbols("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex", "jnxMbgGwName")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ObjectIdentity, iso, Gauge32, IpAddress, ModuleIdentity, Unsigned32, NotificationType, Bits, MibIdentifier, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ObjectIdentity", "iso", "Gauge32", "IpAddress", "ModuleIdentity", "Unsigned32", "NotificationType", "Bits", "MibIdentifier", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
jnxMbgSgwSMMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4))
jnxMbgSgwSMMib.setRevisions(('2011-10-03 12:00', '2012-03-22 12:00', '2012-10-12 12:00',))
if mibBuilder.loadTexts: jnxMbgSgwSMMib.setLastUpdated('201110031200Z')
if mibBuilder.loadTexts: jnxMbgSgwSMMib.setOrganization('Juniper Networks, Inc.')
jnxMbgSgwSMNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 0))
jnxMbgSgwSMObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1))
jnxMbgSgwSMStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1), )
if mibBuilder.loadTexts: jnxMbgSgwSMStatsTable.setStatus('current')
jnxMbgSgwSMStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"))
if mibBuilder.loadTexts: jnxMbgSgwSMStatsEntry.setStatus('current')
jnxMbgSgwSessnEstAttmpts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwSessnEstAttmpts.setStatus('current')
jnxMbgSgwSuccSessnEst = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwSuccSessnEst.setStatus('current')
jnxMbgSgwPeerInitDeactv = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPeerInitDeactv.setStatus('deprecated')
jnxMbgSgwPeerInitSuccDeactv = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwPeerInitSuccDeactv.setStatus('deprecated')
jnxMbgSgwGwInitDeactv = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGwInitDeactv.setStatus('deprecated')
jnxMbgSgwGwInitSuccDeactv = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGwInitSuccDeactv.setStatus('deprecated')
jnxMbgSgwGtpStatsGnS5S8InpPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpStatsGnS5S8InpPkt.setStatus('current')
jnxMbgSgwGtpStatsGnS5S8InpByt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpStatsGnS5S8InpByt.setStatus('current')
jnxMbgSgwGtpStatsGnS5S8OutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpStatsGnS5S8OutPkt.setStatus('current')
jnxMbgSgwGtpStatsGnS5S8OutByt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpStatsGnS5S8OutByt.setStatus('current')
jnxMbgSgwGtpStatsS1uInpPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpStatsS1uInpPkt.setStatus('current')
jnxMbgSgwGtpStatsS1uInpByt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpStatsS1uInpByt.setStatus('current')
jnxMbgSgwGtpStatsS1uOutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpStatsS1uOutPkt.setStatus('current')
jnxMbgSgwGtpStatsS1uOutByt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwGtpStatsS1uOutByt.setStatus('current')
jnxMbgSgwDedBrCrtAttmpts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDedBrCrtAttmpts.setStatus('current')
jnxMbgSgwSuccDedBrCrt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwSuccDedBrCrt.setStatus('current')
jnxMbgSgwSessnDeActvAttmpts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwSessnDeActvAttmpts.setStatus('current')
jnxMbgSgwSuccSessnDeActv = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwSuccSessnDeActv.setStatus('current')
jnxMbgSgwDedBrDeActvAttmpts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwDedBrDeActvAttmpts.setStatus('current')
jnxMbgSgwSuccDedBrDeActv = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwSuccDedBrDeActv.setStatus('current')
jnxMbgSgwIntrRatHoAttmpts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIntrRatHoAttmpts.setStatus('current')
jnxMbgSgwSuccIntrRatHo = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwSuccIntrRatHo.setStatus('current')
jnxMbgSgwX2HoAttmpts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwX2HoAttmpts.setStatus('current')
jnxMbgSgwSuccX2Ho = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwSuccX2Ho.setStatus('current')
jnxMbgSgwS1HoAttmpts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwS1HoAttmpts.setStatus('current')
jnxMbgSgwSuccS1Ho = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwSuccS1Ho.setStatus('current')
jnxMbgSgwIdlMdTauRauAttmpts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIdlMdTauRauAttmpts.setStatus('current')
jnxMbgSgwSuccIdlMdTauRau = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwSuccIdlMdTauRau.setStatus('current')
jnxMbgSgwServReqAttmempts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwServReqAttmempts.setStatus('current')
jnxMbgSgwSuccServReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 1, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwSuccServReq.setStatus('current')
jnxMbgSgwSMStatusTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 2), )
if mibBuilder.loadTexts: jnxMbgSgwSMStatusTable.setStatus('current')
jnxMbgSgwSMStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 2, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"))
if mibBuilder.loadTexts: jnxMbgSgwSMStatusEntry.setStatus('current')
jnxMbgSgwActvSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 2, 1, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwActvSubscribers.setStatus('current')
jnxMbgSgwActvSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 2, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwActvSessions.setStatus('current')
jnxMbgSgwActvBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 2, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwActvBearers.setStatus('current')
jnxMbgSgwIdleSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 2, 1, 4), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIdleSubscribers.setStatus('current')
jnxMbgSgwIdleSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 2, 1, 5), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIdleSessions.setStatus('current')
jnxMbgSgwIdleBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 2, 1, 6), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwIdleBearers.setStatus('current')
jnxMbgSgwSuspSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 2, 1, 7), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwSuspSubscribers.setStatus('current')
jnxMbgSgwSuspSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 2, 1, 8), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwSuspSessions.setStatus('current')
jnxMbgSgwSuspBearers = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 2, 1, 9), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwSuspBearers.setStatus('current')
jnxMbgSgwCPUUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwCPUUtil.setStatus('current')
jnxMbgSgwMemoryUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwMemoryUtil.setStatus('current')
jnxMbgSgwSMClRateStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 4), )
if mibBuilder.loadTexts: jnxMbgSgwSMClRateStatsTable.setStatus('current')
jnxMbgSgwSMClRateStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 4, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"))
if mibBuilder.loadTexts: jnxMbgSgwSMClRateStatsEntry.setStatus('current')
jnxMbgSgwClRateIntervalMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwClRateIntervalMin.setStatus('current')
jnxMbgSgwClRateSuccSessnEst = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwClRateSuccSessnEst.setStatus('current')
jnxMbgSgwClRateSuccSessnDel = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwClRateSuccSessnDel.setStatus('current')
jnxMbgSgwClRateStatsGnInpPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwClRateStatsGnInpPkt.setStatus('current')
jnxMbgSgwClRateStatsGnOutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwClRateStatsGnOutPkt.setStatus('current')
jnxMbgSgwClRateStatsGnInpByt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwClRateStatsGnInpByt.setStatus('current')
jnxMbgSgwClRateStatsGnOutByt = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgSgwClRateStatsGnOutByt.setStatus('current')
jnxMbgSgwSMNotificationVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 3))
jnxMbgGwSpicName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 3, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgGwSpicName.setStatus('current')
jnxMbgSgwTrapGwIndex = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 3, 2), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSgwTrapGwIndex.setStatus('current')
jnxMbgSgwTrapGwName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 3, 3), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSgwTrapGwName.setStatus('current')
jnxMbgSgwSMInterfaceName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 3, 4), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSgwSMInterfaceName.setStatus('current')
jnxMbgSgwPrevMMState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("mmdefault", 0), ("mmnormalphase", 1), ("mminphase", 2), ("mmactivephase", 3), ("mmoutphase", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSgwPrevMMState.setStatus('current')
jnxMbgSgwNewMMState = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 1, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("mmdefault", 0), ("mmnormalphase", 1), ("mminphase", 2), ("mmactivephase", 3), ("mmoutphase", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSgwNewMMState.setStatus('current')
jnxMbgSgwCpuThrStatusHi = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 0, 1)).setObjects(("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwName"))
if mibBuilder.loadTexts: jnxMbgSgwCpuThrStatusHi.setStatus('current')
jnxMbgSgwCpuThrStatusLow = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 0, 2)).setObjects(("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwName"))
if mibBuilder.loadTexts: jnxMbgSgwCpuThrStatusLow.setStatus('current')
jnxMbgSgwCpuThrStatusClear = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 0, 3)).setObjects(("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwName"))
if mibBuilder.loadTexts: jnxMbgSgwCpuThrStatusClear.setStatus('current')
jnxMbgSgwMemThrStatusHi = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 0, 4)).setObjects(("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwName"))
if mibBuilder.loadTexts: jnxMbgSgwMemThrStatusHi.setStatus('current')
jnxMbgSgwMemThrStatusLow = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 0, 5)).setObjects(("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwName"))
if mibBuilder.loadTexts: jnxMbgSgwMemThrStatusLow.setStatus('current')
jnxMbgSgwMemThrStatusClear = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 0, 6)).setObjects(("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwName"))
if mibBuilder.loadTexts: jnxMbgSgwMemThrStatusClear.setStatus('current')
jnxMbgSgwPFEMMStateChange = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 0, 7)).setObjects(("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwName"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwSMInterfaceName"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwPrevMMState"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwNewMMState"))
if mibBuilder.loadTexts: jnxMbgSgwPFEMMStateChange.setStatus('current')
jnxMbgSgwMSMMStateChange = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 0, 8)).setObjects(("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwName"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwSMInterfaceName"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwPrevMMState"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwNewMMState"))
if mibBuilder.loadTexts: jnxMbgSgwMSMMStateChange.setStatus('current')
jnxMbgSgwAPFEMMStateChange = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 0, 9)).setObjects(("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwName"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwSMInterfaceName"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwPrevMMState"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwNewMMState"))
if mibBuilder.loadTexts: jnxMbgSgwAPFEMMStateChange.setStatus('current')
jnxMbgSgwAMSMMStateChange = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 0, 10)).setObjects(("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwName"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwSMInterfaceName"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwPrevMMState"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwNewMMState"))
if mibBuilder.loadTexts: jnxMbgSgwAMSMMStateChange.setStatus('current')
jnxMbgSgwQosBearerThrStatusHi = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 0, 11)).setObjects(("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwName"))
if mibBuilder.loadTexts: jnxMbgSgwQosBearerThrStatusHi.setStatus('current')
jnxMbgSgwQosBearerThrStatusLow = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 0, 12)).setObjects(("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwName"))
if mibBuilder.loadTexts: jnxMbgSgwQosBearerThrStatusLow.setStatus('current')
jnxMbgSgwQosBearerThrStatusClear = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 0, 13)).setObjects(("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwIndex"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwName"))
if mibBuilder.loadTexts: jnxMbgSgwQosBearerThrStatusClear.setStatus('current')
jnxMbgSgwGatewayMMStateChange = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 2, 4, 0, 14)).setObjects(("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwTrapGwName"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwPrevMMState"), ("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", "jnxMbgSgwNewMMState"))
if mibBuilder.loadTexts: jnxMbgSgwGatewayMMStateChange.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-SGW-SM-MIB", jnxMbgSgwDedBrDeActvAttmpts=jnxMbgSgwDedBrDeActvAttmpts, jnxMbgSgwPrevMMState=jnxMbgSgwPrevMMState, jnxMbgSgwSessnDeActvAttmpts=jnxMbgSgwSessnDeActvAttmpts, jnxMbgSgwTrapGwName=jnxMbgSgwTrapGwName, jnxMbgSgwS1HoAttmpts=jnxMbgSgwS1HoAttmpts, jnxMbgSgwGtpStatsGnS5S8InpPkt=jnxMbgSgwGtpStatsGnS5S8InpPkt, jnxMbgSgwSuccDedBrDeActv=jnxMbgSgwSuccDedBrDeActv, jnxMbgSgwCpuThrStatusHi=jnxMbgSgwCpuThrStatusHi, jnxMbgSgwSuspBearers=jnxMbgSgwSuspBearers, jnxMbgSgwGtpStatsGnS5S8OutPkt=jnxMbgSgwGtpStatsGnS5S8OutPkt, jnxMbgSgwSMNotifications=jnxMbgSgwSMNotifications, jnxMbgSgwX2HoAttmpts=jnxMbgSgwX2HoAttmpts, jnxMbgSgwCPUUtil=jnxMbgSgwCPUUtil, jnxMbgSgwMemThrStatusLow=jnxMbgSgwMemThrStatusLow, jnxMbgSgwClRateIntervalMin=jnxMbgSgwClRateIntervalMin, jnxMbgSgwMemoryUtil=jnxMbgSgwMemoryUtil, jnxMbgSgwIdleSessions=jnxMbgSgwIdleSessions, jnxMbgSgwSMStatsEntry=jnxMbgSgwSMStatsEntry, jnxMbgSgwSuspSessions=jnxMbgSgwSuspSessions, jnxMbgSgwSMInterfaceName=jnxMbgSgwSMInterfaceName, jnxMbgSgwQosBearerThrStatusClear=jnxMbgSgwQosBearerThrStatusClear, jnxMbgSgwIdleSubscribers=jnxMbgSgwIdleSubscribers, jnxMbgSgwAPFEMMStateChange=jnxMbgSgwAPFEMMStateChange, jnxMbgSgwSMStatsTable=jnxMbgSgwSMStatsTable, jnxMbgSgwSMNotificationVars=jnxMbgSgwSMNotificationVars, jnxMbgSgwPFEMMStateChange=jnxMbgSgwPFEMMStateChange, jnxMbgSgwIdleBearers=jnxMbgSgwIdleBearers, jnxMbgSgwMemThrStatusClear=jnxMbgSgwMemThrStatusClear, jnxMbgSgwSuccS1Ho=jnxMbgSgwSuccS1Ho, jnxMbgSgwSMStatusTable=jnxMbgSgwSMStatusTable, jnxMbgSgwActvBearers=jnxMbgSgwActvBearers, jnxMbgSgwSuccX2Ho=jnxMbgSgwSuccX2Ho, jnxMbgSgwSMMib=jnxMbgSgwSMMib, jnxMbgSgwClRateStatsGnInpByt=jnxMbgSgwClRateStatsGnInpByt, jnxMbgSgwClRateSuccSessnEst=jnxMbgSgwClRateSuccSessnEst, jnxMbgSgwActvSessions=jnxMbgSgwActvSessions, jnxMbgSgwPeerInitSuccDeactv=jnxMbgSgwPeerInitSuccDeactv, jnxMbgSgwClRateStatsGnOutByt=jnxMbgSgwClRateStatsGnOutByt, jnxMbgSgwSuccDedBrCrt=jnxMbgSgwSuccDedBrCrt, jnxMbgSgwGatewayMMStateChange=jnxMbgSgwGatewayMMStateChange, jnxMbgSgwQosBearerThrStatusHi=jnxMbgSgwQosBearerThrStatusHi, jnxMbgSgwDedBrCrtAttmpts=jnxMbgSgwDedBrCrtAttmpts, jnxMbgSgwSMObjects=jnxMbgSgwSMObjects, jnxMbgSgwGtpStatsGnS5S8InpByt=jnxMbgSgwGtpStatsGnS5S8InpByt, jnxMbgSgwGtpStatsS1uInpByt=jnxMbgSgwGtpStatsS1uInpByt, jnxMbgSgwSuccIntrRatHo=jnxMbgSgwSuccIntrRatHo, jnxMbgSgwSuccServReq=jnxMbgSgwSuccServReq, jnxMbgSgwGtpStatsS1uOutPkt=jnxMbgSgwGtpStatsS1uOutPkt, jnxMbgSgwMemThrStatusHi=jnxMbgSgwMemThrStatusHi, jnxMbgSgwIdlMdTauRauAttmpts=jnxMbgSgwIdlMdTauRauAttmpts, jnxMbgSgwSuspSubscribers=jnxMbgSgwSuspSubscribers, jnxMbgGwSpicName=jnxMbgGwSpicName, jnxMbgSgwMSMMStateChange=jnxMbgSgwMSMMStateChange, jnxMbgSgwSuccSessnEst=jnxMbgSgwSuccSessnEst, jnxMbgSgwGtpStatsS1uOutByt=jnxMbgSgwGtpStatsS1uOutByt, jnxMbgSgwIntrRatHoAttmpts=jnxMbgSgwIntrRatHoAttmpts, jnxMbgSgwQosBearerThrStatusLow=jnxMbgSgwQosBearerThrStatusLow, PYSNMP_MODULE_ID=jnxMbgSgwSMMib, jnxMbgSgwSuccIdlMdTauRau=jnxMbgSgwSuccIdlMdTauRau, jnxMbgSgwTrapGwIndex=jnxMbgSgwTrapGwIndex, jnxMbgSgwSMStatusEntry=jnxMbgSgwSMStatusEntry, jnxMbgSgwSMClRateStatsTable=jnxMbgSgwSMClRateStatsTable, jnxMbgSgwActvSubscribers=jnxMbgSgwActvSubscribers, jnxMbgSgwServReqAttmempts=jnxMbgSgwServReqAttmempts, jnxMbgSgwGtpStatsS1uInpPkt=jnxMbgSgwGtpStatsS1uInpPkt, jnxMbgSgwSuccSessnDeActv=jnxMbgSgwSuccSessnDeActv, jnxMbgSgwPeerInitDeactv=jnxMbgSgwPeerInitDeactv, jnxMbgSgwSMClRateStatsEntry=jnxMbgSgwSMClRateStatsEntry, jnxMbgSgwCpuThrStatusClear=jnxMbgSgwCpuThrStatusClear, jnxMbgSgwClRateStatsGnInpPkt=jnxMbgSgwClRateStatsGnInpPkt, jnxMbgSgwGtpStatsGnS5S8OutByt=jnxMbgSgwGtpStatsGnS5S8OutByt, jnxMbgSgwClRateSuccSessnDel=jnxMbgSgwClRateSuccSessnDel, jnxMbgSgwAMSMMStateChange=jnxMbgSgwAMSMMStateChange, jnxMbgSgwSessnEstAttmpts=jnxMbgSgwSessnEstAttmpts, jnxMbgSgwGwInitSuccDeactv=jnxMbgSgwGwInitSuccDeactv, jnxMbgSgwClRateStatsGnOutPkt=jnxMbgSgwClRateStatsGnOutPkt, jnxMbgSgwCpuThrStatusLow=jnxMbgSgwCpuThrStatusLow, jnxMbgSgwGwInitDeactv=jnxMbgSgwGwInitDeactv, jnxMbgSgwNewMMState=jnxMbgSgwNewMMState)
