#
# PySNMP MIB module PDN-BRIDGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-BRIDGE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:29:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
pdn_bridge, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdn-bridge")
VnidRange, = mibBuilder.importSymbols("PDN-TC", "VnidRange")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, ObjectIdentity, iso, Unsigned32, Counter32, Counter64, IpAddress, MibIdentifier, NotificationType, TimeTicks, Integer32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ObjectIdentity", "iso", "Unsigned32", "Counter32", "Counter64", "IpAddress", "MibIdentifier", "NotificationType", "TimeTicks", "Integer32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32")
TextualConvention, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "MacAddress", "DisplayString")
pdnBridgeGenericMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1))
pdnBridgeMIBTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 2))
pdnDot1dGenericBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 1))
pdnDot1dTpFdb = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 2))
pdnDot1dTp = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 3))
pdnDot1dBaseBridgeAddress = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDot1dBaseBridgeAddress.setStatus('mandatory')
pdnDot1dBaseNumPorts = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDot1dBaseNumPorts.setStatus('mandatory')
pdnDot1dBaseType = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("transparent-only", 2), ("sourceroute-only", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDot1dBaseType.setStatus('mandatory')
pdnDot1dTpLearnedEntryDiscards = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDot1dTpLearnedEntryDiscards.setStatus('mandatory')
pdnDot1dTpAgeingTime = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnDot1dTpAgeingTime.setStatus('mandatory')
pdnDot1dTpAgeingCleanupTime = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 500000)).clone(150)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnDot1dTpAgeingCleanupTime.setStatus('mandatory')
pdnDot1dTpFdbTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 2, 1), )
if mibBuilder.loadTexts: pdnDot1dTpFdbTable.setStatus('mandatory')
pdnDot1dTpFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 2, 1, 1), ).setIndexNames((0, "PDN-BRIDGE-MIB", "pdnDot1dTpFdbAddress"), (0, "PDN-BRIDGE-MIB", "pdnDot1dTpFdbVnidId"))
if mibBuilder.loadTexts: pdnDot1dTpFdbEntry.setStatus('mandatory')
pdnDot1dTpFdbAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 2, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDot1dTpFdbAddress.setStatus('mandatory')
pdnDot1dTpFdbVnidId = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 2, 1, 1, 2), VnidRange()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDot1dTpFdbVnidId.setStatus('mandatory')
pdnDot1dTpFdbIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDot1dTpFdbIfIndex.setStatus('mandatory')
pdnDot1dTpFdbStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("learned", 3), ("self", 4), ("mgmt", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDot1dTpFdbStatus.setStatus('mandatory')
pdnDot1dTpFdbAgeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDot1dTpFdbAgeTime.setStatus('mandatory')
pdnDot1dTpFdbFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("permanentDHCP", 2), ("permanentCONFIGURED", 3), ("dynamic", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDot1dTpFdbFlags.setStatus('mandatory')
pdnDot1dTpPortTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 3, 1), )
if mibBuilder.loadTexts: pdnDot1dTpPortTable.setStatus('mandatory')
pdnDot1dTpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnDot1dTpPortEntry.setStatus('mandatory')
pdnDot1dTpPortMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDot1dTpPortMaxInfo.setStatus('mandatory')
pdnDot1dTpPortInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDot1dTpPortInFrames.setStatus('mandatory')
pdnDot1dTpPortOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDot1dTpPortOutFrames.setStatus('mandatory')
pdnDot1dTpPortInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 21, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDot1dTpPortInDiscards.setStatus('mandatory')
mibBuilder.exportSymbols("PDN-BRIDGE-MIB", pdnDot1dTpPortOutFrames=pdnDot1dTpPortOutFrames, pdnDot1dTpFdb=pdnDot1dTpFdb, pdnDot1dTpFdbAddress=pdnDot1dTpFdbAddress, pdnDot1dTpFdbTable=pdnDot1dTpFdbTable, pdnDot1dBaseNumPorts=pdnDot1dBaseNumPorts, pdnDot1dBaseBridgeAddress=pdnDot1dBaseBridgeAddress, pdnDot1dTpFdbVnidId=pdnDot1dTpFdbVnidId, pdnDot1dTpPortInFrames=pdnDot1dTpPortInFrames, pdnDot1dTpPortMaxInfo=pdnDot1dTpPortMaxInfo, pdnDot1dTpFdbEntry=pdnDot1dTpFdbEntry, pdnDot1dTpFdbAgeTime=pdnDot1dTpFdbAgeTime, pdnDot1dTpAgeingTime=pdnDot1dTpAgeingTime, pdnDot1dTpLearnedEntryDiscards=pdnDot1dTpLearnedEntryDiscards, pdnDot1dTp=pdnDot1dTp, pdnDot1dTpFdbStatus=pdnDot1dTpFdbStatus, pdnDot1dTpFdbFlags=pdnDot1dTpFdbFlags, pdnDot1dTpPortTable=pdnDot1dTpPortTable, pdnBridgeMIBTraps=pdnBridgeMIBTraps, pdnDot1dGenericBridge=pdnDot1dGenericBridge, pdnBridgeGenericMIBObjects=pdnBridgeGenericMIBObjects, pdnDot1dTpFdbIfIndex=pdnDot1dTpFdbIfIndex, pdnDot1dTpPortEntry=pdnDot1dTpPortEntry, pdnDot1dTpAgeingCleanupTime=pdnDot1dTpAgeingCleanupTime, pdnDot1dTpPortInDiscards=pdnDot1dTpPortInDiscards, pdnDot1dBaseType=pdnDot1dBaseType)
