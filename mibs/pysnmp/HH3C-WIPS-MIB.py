#
# PySNMP MIB module HH3C-WIPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-WIPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:17:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, IpAddress, Unsigned32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ModuleIdentity, TimeTicks, iso, Counter64, Gauge32, ObjectIdentity, Counter32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "IpAddress", "Unsigned32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ModuleIdentity", "TimeTicks", "iso", "Counter64", "Gauge32", "ObjectIdentity", "Counter32", "Integer32")
MacAddress, DisplayString, RowStatus, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DisplayString", "RowStatus", "TruthValue", "TextualConvention")
hh3cWIPS = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 118))
hh3cWIPS.setRevisions(('2011-12-29 14:50',))
if mibBuilder.loadTexts: hh3cWIPS.setLastUpdated('201112291450Z')
if mibBuilder.loadTexts: hh3cWIPS.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
class Hh3cWIPSRadioType(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'

class Hh3cWIPSDevStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("active", 1), ("inactive", 2))

class Hh3cWIPSDevCategoryWay(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("manual", 1), ("autoByNMS", 2), ("autoByDev", 3))

class Hh3cWIPSDeviceCategoryType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
    namedValues = NamedValues(("none", 0), ("authorizedAP", 1), ("authorizedClient", 2), ("misconfiguredAP", 3), ("rogueAP", 4), ("unauthorizedClient", 5), ("externalAP", 6), ("adhoc", 7), ("bridge", 8), ("misassociatedClient", 9), ("potentialAuthorizedAP", 10), ("potentialRogueAP", 11), ("potentialExternalAP", 12), ("uncategorizedAP", 13), ("uncategorizedClient", 14))

class Hh3cWIPSAPCategoryType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("adhoc", 1), ("authorized", 2), ("rogue", 3), ("misconfigured", 4), ("external", 5), ("potentialAuthorized", 6), ("potentialRogue", 7), ("potentialExternal", 8), ("uncategorized", 9))

class Hh3cWIPSClientCategoryType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("authorized", 1), ("unauthorized", 2), ("misassociated", 3), ("uncategorized", 4), ("unassociated", 5))

class Hh3cWIPSChannel(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 224)

class Hh3cWIPSEncryptMethod(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'

class Hh3cWIPSAuthMethod(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("none", 1), ("psk", 2), ("dot1x", 3), ("other", 4), ("pskANDdot1x", 5), ("pskANDother", 6), ("dot1xANDother", 7), ("pskANDdot1xANDother", 8))

class Hh3cWIPSAPClassifyType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("other", 1), ("authorized", 2), ("external", 3), ("misconfigured", 4), ("rogue", 5))

class Hh3cWIPSAPSecurityType(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'

hh3cWIPSConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1))
hh3cWIPSGlobalConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 1))
hh3cWIPSEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSEnable.setStatus('current')
hh3cWIPSSensorLicenseNum = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSSensorLicenseNum.setStatus('current')
hh3cWIPSBlocklistAction = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("block", 1), ("unblock", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSBlocklistAction.setStatus('current')
hh3cWIPSAPInactiveTime = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 600)).clone(300)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSAPInactiveTime.setStatus('current')
hh3cWIPSSTAInactiveTime = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(120, 1200)).clone(600)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSSTAInactiveTime.setStatus('current')
hh3cWIPSDevAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 2592000)).clone(86400)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSDevAgingTime.setStatus('current')
hh3cWIPSStatisticPeriod = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400)).clone(900)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSStatisticPeriod.setStatus('current')
hh3cWIPSReclassificationPeriod = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600)).clone(600)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSReclassificationPeriod.setStatus('current')
hh3cWIPSResetAllTrustList = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSResetAllTrustList.setStatus('current')
hh3cWIPSResetAllBlockList = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSResetAllBlockList.setStatus('current')
hh3cWIPSResetAllIgnoreList = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSResetAllIgnoreList.setStatus('current')
hh3cWIPSResetAllCtmList = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSResetAllCtmList.setStatus('current')
hh3cWIPSPermitChlBitMap = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSPermitChlBitMap.setStatus('current')
hh3cWIPSDynamicTrustListAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400)).clone(300)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSDynamicTrustListAgingTime.setStatus('current')
hh3cWIPSDevUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 30)).clone(20)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSDevUpdateTime.setStatus('current')
hh3cWIPSADOSEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 1, 16), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSADOSEnable.setStatus('current')
hh3cWIPSAccessFlowScanEnable = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 1, 17), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSAccessFlowScanEnable.setStatus('current')
hh3cWIPSVsdConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2))
hh3cWIPSVsdTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 1), )
if mibBuilder.loadTexts: hh3cWIPSVsdTable.setStatus('current')
hh3cWIPSVsdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 1, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSVsdNameCfg"))
if mibBuilder.loadTexts: hh3cWIPSVsdEntry.setStatus('current')
hh3cWIPSVsdNameCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hh3cWIPSVsdNameCfg.setStatus('current')
hh3cWIPSVsdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSVsdRowStatus.setStatus('current')
hh3cWIPSVsdAtkDctPolicyNameCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSVsdAtkDctPolicyNameCfg.setStatus('current')
hh3cWIPSVsdCtmPolicyNameCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSVsdCtmPolicyNameCfg.setStatus('current')
hh3cWIPSVsdSigPolicyNameCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSVsdSigPolicyNameCfg.setStatus('current')
hh3cWIPSVsdMalPktPolicyNameCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSVsdMalPktPolicyNameCfg.setStatus('current')
hh3cWIPSRule2VsdTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 2), )
if mibBuilder.loadTexts: hh3cWIPSRule2VsdTable.setStatus('current')
hh3cWIPSRule2VsdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 2, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSVsdNameCfg"), (0, "HH3C-WIPS-MIB", "hh3cWIPSRule2VsdAPClaRuleNameCfg"))
if mibBuilder.loadTexts: hh3cWIPSRule2VsdEntry.setStatus('current')
hh3cWIPSRule2VsdAPClaRuleNameCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hh3cWIPSRule2VsdAPClaRuleNameCfg.setStatus('current')
hh3cWIPSRule2VsdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSRule2VsdRowStatus.setStatus('current')
hh3cWIPSRule2VsdPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSRule2VsdPrecedence.setStatus('current')
hh3cWIPSSensor2VsdTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 3), )
if mibBuilder.loadTexts: hh3cWIPSSensor2VsdTable.setStatus('current')
hh3cWIPSSensor2VsdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 3, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSVsdNameCfg"), (0, "HH3C-WIPS-MIB", "hh3cWIPSSensorNameCfg"))
if mibBuilder.loadTexts: hh3cWIPSSensor2VsdEntry.setStatus('current')
hh3cWIPSSensorNameCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: hh3cWIPSSensorNameCfg.setStatus('current')
hh3cWIPSSensor2VsdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSensor2VsdRowStatus.setStatus('current')
hh3cWIPSSensorState = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("running", 1), ("idle", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSensorState.setStatus('current')
hh3cWIPSSensorRadioTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 4), )
if mibBuilder.loadTexts: hh3cWIPSSensorRadioTable.setStatus('current')
hh3cWIPSSensorRadioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 4, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSVsdNameCfg"), (0, "HH3C-WIPS-MIB", "hh3cWIPSSensorNameCfg"), (0, "HH3C-WIPS-MIB", "hh3cWIPSSensorRadioRadioId"))
if mibBuilder.loadTexts: hh3cWIPSSensorRadioEntry.setStatus('current')
hh3cWIPSSensorRadioRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: hh3cWIPSSensorRadioRadioId.setStatus('current')
hh3cWIPSSensorRadioScanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("accessFirst", 1), ("detectFirst", 2), ("middle", 3), ("detectOnly", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSSensorRadioScanMode.setStatus('current')
hh3cWIPSAPClaRuleTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3), )
if mibBuilder.loadTexts: hh3cWIPSAPClaRuleTable.setStatus('current')
hh3cWIPSAPClaRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSAPClaRuleName"))
if mibBuilder.loadTexts: hh3cWIPSAPClaRuleEntry.setStatus('current')
hh3cWIPSAPClaRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hh3cWIPSAPClaRuleName.setStatus('current')
hh3cWIPSAPClaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAPClaRowStatus.setStatus('current')
hh3cWIPSAPClaSeverityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 3), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAPClaSeverityLevel.setStatus('current')
hh3cWIPSAPClaRuleMatchAll = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAPClaRuleMatchAll.setStatus('current')
hh3cWIPSAPClaType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 5), Hh3cWIPSAPClassifyType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAPClaType.setStatus('current')
hh3cWIPSAPClaSubRuleSSIDOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("include", 1), ("notinclude", 2), ("equal", 3), ("notequal", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAPClaSubRuleSSIDOperator.setStatus('current')
hh3cWIPSAPClaSubRuleSSIDCase = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAPClaSubRuleSSIDCase.setStatus('current')
hh3cWIPSAPClaSubRuleSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAPClaSubRuleSSID.setStatus('current')
hh3cWIPSSecurityType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 9), Hh3cWIPSAPSecurityType().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSecurityType.setStatus('current')
hh3cWIPSSecurityTypeMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("equal", 1), ("include", 2))).clone('include')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSecurityTypeMatch.setStatus('current')
hh3cWIPSAPAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("none", 1), ("psk", 2), ("dot1x", 3), ("other", 4), ("undo", 5), ("pskANDdot1x", 6), ("pskANDother", 7), ("dot1xANDother", 8), ("pskANDdot1xANDother", 9), ("noneANDpsk", 10), ("noneANDdot1x", 11), ("noneANDother", 12), ("noneANDpskANDdot1x", 13), ("noneANDpskANDother", 14), ("noneANDdot1xANDother", 15), ("noneANDpskANDdot1xANDother", 16))).clone('undo')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAPAuthType.setStatus('current')
hh3cWIPSMaxRSSIValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 12), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSMaxRSSIValue.setStatus('current')
hh3cWIPSMinRSSIValue = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 13), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSMinRSSIValue.setStatus('current')
hh3cWIPSMaxDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 14), Unsigned32().clone(4294967295)).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSMaxDuration.setStatus('current')
hh3cWIPSMinDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 15), Unsigned32().clone(4294967295)).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSMinDuration.setStatus('current')
hh3cWIPSMaxAPNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 16), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSMaxAPNum.setStatus('current')
hh3cWIPSMinAPNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 17), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSMinAPNum.setStatus('current')
hh3cWIPSMaxClientNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 18), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSMaxClientNum.setStatus('current')
hh3cWIPSMinClientNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 19), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSMinClientNum.setStatus('current')
hh3cWIPSOUIInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSOUIInfo.setStatus('current')
hh3cWIPSVendorInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSVendorInfo.setStatus('current')
hh3cWIPSAPAuthTypeMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("equal", 1), ("include", 2))).clone('include')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAPAuthTypeMatch.setStatus('current')
hh3cWIPSAtkDctPolicyCfgGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4))
hh3cWIPSAtkDctPolicyCfgSupportSet = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyCfgSupportSet.setStatus('current')
hh3cWIPSAtkDctPolicyCfgTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2), )
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyCfgTable.setStatus('current')
hh3cWIPSAtkDctPolicyCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSAtkDctPolicyName"))
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyCfgEntry.setStatus('current')
hh3cWIPSAtkDctPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyName.setStatus('current')
hh3cWIPSAtkDctPolicyCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyCfgRowStatus.setStatus('current')
hh3cWIPSAtkDctPolicyBitString = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyBitString.setStatus('current')
hh3cWIPSAtkDctPolicyAPFloodQT = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 604800)).clone(600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyAPFloodQT.setStatus('current')
hh3cWIPSAtkDctPolicyAPSpoofQT = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 604800)).clone(600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyAPSpoofQT.setStatus('current')
hh3cWIPSAtkDctPolicyCliSpoofQT = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 604800)).clone(600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyCliSpoofQT.setStatus('current')
hh3cWIPSAtkDctPolicyDosAssoQT = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 604800)).clone(600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyDosAssoQT.setStatus('current')
hh3cWIPSAtkDctPolicyDosAuthQT = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 604800)).clone(600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyDosAuthQT.setStatus('current')
hh3cWIPSAtkDctPolicyDosEAPOLStartQT = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 604800)).clone(600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyDosEAPOLStartQT.setStatus('current')
hh3cWIPSAtkDctPolicyDosReAssoQT = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 604800)).clone(600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyDosReAssoQT.setStatus('current')
hh3cWIPSAtkDctPolicyWeakIVQT = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 604800)).clone(600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyWeakIVQT.setStatus('current')
hh3cWIPSAtkDctPolicyInvalidOUIAction = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("rogue", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyInvalidOUIAction.setStatus('current')
hh3cWIPSAtkDctPolicyUnencryptedAuthApQT = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 604800)).clone(600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyUnencryptedAuthApQT.setStatus('current')
hh3cWIPSAtkDctPolicyUnencryptedAuthClientQT = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 604800)).clone(600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyUnencryptedAuthClientQT.setStatus('current')
hh3cWIPSAtkDctPolicyPSAttackQT = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 604800)).clone(600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyPSAttackQT.setStatus('current')
hh3cWIPSAtkDctPolicyPSAttackMinOffPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 150)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyPSAttackMinOffPacket.setStatus('current')
hh3cWIPSAtkDctPolicyPSAttackOnOffPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyPSAttackOnOffPercent.setStatus('current')
hh3cWIPSAtkDctPolicyApImpersonationQT = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 604800)).clone(600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyApImpersonationQT.setStatus('current')
hh3cWIPSAtkDctPolicyApImpersonationBeaconIncThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(30)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyApImpersonationBeaconIncThreshold.setStatus('current')
hh3cWIPSAtkDctPolicyApImpersonationBeaconIncWaitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 360000)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicyApImpersonationBeaconIncWaitTime.setStatus('current')
hh3cWIPSAtkDctPolicySoftApConvertTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 4, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 600)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSAtkDctPolicySoftApConvertTime.setStatus('current')
hh3cWIPSStaticCtmListCfgTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 5), )
if mibBuilder.loadTexts: hh3cWIPSStaticCtmListCfgTable.setStatus('current')
hh3cWIPSStaticCtmListCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 5, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSStaticCtmListMAC"))
if mibBuilder.loadTexts: hh3cWIPSStaticCtmListCfgEntry.setStatus('current')
hh3cWIPSStaticCtmListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 5, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cWIPSStaticCtmListMAC.setStatus('current')
hh3cWIPSStaticCtmListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSStaticCtmListRowStatus.setStatus('current')
hh3cWIPSStaticBlockListCfgTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 6), )
if mibBuilder.loadTexts: hh3cWIPSStaticBlockListCfgTable.setStatus('current')
hh3cWIPSStaticBlockListCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 6, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSStaticBlockListMAC"))
if mibBuilder.loadTexts: hh3cWIPSStaticBlockListCfgEntry.setStatus('current')
hh3cWIPSStaticBlockListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 6, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cWIPSStaticBlockListMAC.setStatus('current')
hh3cWIPSStaticBlockListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSStaticBlockListRowStatus.setStatus('current')
hh3cWIPSStaticTrustListCfgTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 7), )
if mibBuilder.loadTexts: hh3cWIPSStaticTrustListCfgTable.setStatus('current')
hh3cWIPSStaticTrustListCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 7, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSStaticTrustListMAC"))
if mibBuilder.loadTexts: hh3cWIPSStaticTrustListCfgEntry.setStatus('current')
hh3cWIPSStaticTrustListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 7, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cWIPSStaticTrustListMAC.setStatus('current')
hh3cWIPSStaticTrustListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSStaticTrustListRowStatus.setStatus('current')
hh3cWIPSIgnoreListCfgTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 8), )
if mibBuilder.loadTexts: hh3cWIPSIgnoreListCfgTable.setStatus('current')
hh3cWIPSIgnoreListCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 8, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSIgnoreListMAC"))
if mibBuilder.loadTexts: hh3cWIPSIgnoreListCfgEntry.setStatus('current')
hh3cWIPSIgnoreListMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 8, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cWIPSIgnoreListMAC.setStatus('current')
hh3cWIPSIgnoreListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 8, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSIgnoreListRowStatus.setStatus('current')
hh3cWIPSDctModeTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 9), )
if mibBuilder.loadTexts: hh3cWIPSDctModeTable.setStatus('current')
hh3cWIPSDctModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 9, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSDctModeAPName"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDctModeRadio"))
if mibBuilder.loadTexts: hh3cWIPSDctModeEntry.setStatus('current')
hh3cWIPSDctModeAPName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 9, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: hh3cWIPSDctModeAPName.setStatus('current')
hh3cWIPSDctModeRadio = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: hh3cWIPSDctModeRadio.setStatus('current')
hh3cWIPSDctModeScanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("accessFirst", 1), ("detectFirst", 2), ("middle", 3), ("detectOnly", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSDctModeScanMode.setStatus('current')
hh3cWIPSDctModeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 9, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSDctModeRowStatus.setStatus('current')
hh3cWIPSSigConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10))
hh3cWIPSSigPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 1), )
if mibBuilder.loadTexts: hh3cWIPSSigPolicyTable.setStatus('current')
hh3cWIPSSigPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 1, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSSigPolicyNameCfg"))
if mibBuilder.loadTexts: hh3cWIPSSigPolicyEntry.setStatus('current')
hh3cWIPSSigPolicyNameCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hh3cWIPSSigPolicyNameCfg.setStatus('current')
hh3cWIPSSigPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigPolicyRowStatus.setStatus('current')
hh3cWIPSSigRule2PolicyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 2), )
if mibBuilder.loadTexts: hh3cWIPSSigRule2PolicyTable.setStatus('current')
hh3cWIPSSigRule2PolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 2, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSSigPolicyNameCfg"), (0, "HH3C-WIPS-MIB", "hh3cWIPSSigRule2PolicySigRuleIDCfg"))
if mibBuilder.loadTexts: hh3cWIPSSigRule2PolicyEntry.setStatus('current')
hh3cWIPSSigRule2PolicySigRuleIDCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: hh3cWIPSSigRule2PolicySigRuleIDCfg.setStatus('current')
hh3cWIPSSigRule2PolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigRule2PolicyRowStatus.setStatus('current')
hh3cWIPSSigRule2PolicyPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigRule2PolicyPrecedence.setStatus('current')
hh3cWIPSSigRuleTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3), )
if mibBuilder.loadTexts: hh3cWIPSSigRuleTable.setStatus('current')
hh3cWIPSSigRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSSigRuleName"))
if mibBuilder.loadTexts: hh3cWIPSSigRuleEntry.setStatus('current')
hh3cWIPSSigRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hh3cWIPSSigRuleName.setStatus('current')
hh3cWIPSSigRuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigRuleID.setStatus('current')
hh3cWIPSSigRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigRuleRowStatus.setStatus('current')
hh3cWIPSSigSubRuleMatchAll = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigSubRuleMatchAll.setStatus('current')
hh3cWIPSSigRuleDctPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 5), Unsigned32()).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigRuleDctPeriod.setStatus('current')
hh3cWIPSSigRuleTrackMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("perSig", 1), ("perMAC", 2), ("both", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigRuleTrackMethod.setStatus('current')
hh3cWIPSSigRuleDctThresholdPerMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigRuleDctThresholdPerMAC.setStatus('current')
hh3cWIPSSigRuleDctThresholdPerSig = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 8), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigRuleDctThresholdPerSig.setStatus('current')
hh3cWIPSSigRuleActionEvtLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 9), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigRuleActionEvtLevel.setStatus('current')
hh3cWIPSSigRuleQuietTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 10), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigRuleQuietTime.setStatus('current')
hh3cWIPSSigSubRuleFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("manage", 0), ("control", 1), ("data", 2), ("undo", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigSubRuleFrameType.setStatus('current')
hh3cWIPSSigSubRuleFrameSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 0), ("assocReq", 1), ("assocRes", 2), ("probeReq", 3), ("beacon", 4), ("disasso", 5), ("auth", 6), ("deauth", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigSubRuleFrameSubType.setStatus('current')
hh3cWIPSSigSubRuleMac = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigSubRuleMac.setStatus('current')
hh3cWIPSSigSubRuleMacType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("source", 0), ("dest", 1), ("bssid", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigSubRuleMacType.setStatus('current')
hh3cWIPSSigSubRuleSeqNumMin = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 15), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigSubRuleSeqNumMin.setStatus('current')
hh3cWIPSSigSubRuleSeqNumMax = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 16), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigSubRuleSeqNumMax.setStatus('current')
hh3cWIPSSigSubRuleSSIDLenMin = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 17), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigSubRuleSSIDLenMin.setStatus('current')
hh3cWIPSSigSubRuleSSIDLenMax = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 18), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigSubRuleSSIDLenMax.setStatus('current')
hh3cWIPSSigSubRuleSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigSubRuleSSID.setStatus('current')
hh3cWIPSSigSubRuleSSIDOpe = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("include", 1), ("notinclude", 2), ("equal", 3), ("notequal", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigSubRuleSSIDOpe.setStatus('current')
hh3cWIPSSigSubRuleSSIDCase = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 3, 1, 21), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSSigSubRuleSSIDCase.setStatus('current')
hh3cWIPSSigSubRulePatternTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 4), )
if mibBuilder.loadTexts: hh3cWIPSSigSubRulePatternTable.setStatus('current')
hh3cWIPSSigSubRulePatternEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 4, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSSigRuleName"), (0, "HH3C-WIPS-MIB", "hh3cWIPSSigSubRulePatternID"))
if mibBuilder.loadTexts: hh3cWIPSSigSubRulePatternEntry.setStatus('current')
hh3cWIPSSigSubRulePatternID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 27)))
if mibBuilder.loadTexts: hh3cWIPSSigSubRulePatternID.setStatus('current')
hh3cWIPSSigSubRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 4, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSSigSubRuleRowStatus.setStatus('current')
hh3cWIPSSigSubRulePatternName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSSigSubRulePatternName.setStatus('current')
hh3cWIPSSigSubRulePatternOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2346))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSSigSubRulePatternOffset.setStatus('current')
hh3cWIPSSigSubRulePatternMask = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSSigSubRulePatternMask.setStatus('current')
hh3cWIPSSigSubRulePatternValueMin = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 4, 1, 6), Unsigned32().clone(4294967295)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSSigSubRulePatternValueMin.setStatus('current')
hh3cWIPSSigSubRulePatternValueMax = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 4, 1, 7), Unsigned32().clone(4294967295)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSSigSubRulePatternValueMax.setStatus('current')
hh3cWIPSSigSubRulePatternFromPayload = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 10, 4, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSSigSubRulePatternFromPayload.setStatus('current')
hh3cWIPSCtmConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11))
hh3cWIPSCtmPolicyCfgSupportSet = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyCfgSupportSet.setStatus('current')
hh3cWIPSCtmPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 2), )
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyTable.setStatus('current')
hh3cWIPSCtmPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 2, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSCtmPolicyName"))
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyEntry.setStatus('current')
hh3cWIPSCtmPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyName.setStatus('current')
hh3cWIPSCtmPolicyCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyCfgRowStatus.setStatus('current')
hh3cWIPSCtmPolicyBitString = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyBitString.setStatus('current')
hh3cWIPSCtmPolicyFixedChl = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 2, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyFixedChl.setStatus('current')
hh3cWIPSCtmPolicyRogueAPPre = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 2, 1, 5), Unsigned32().clone(9)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyRogueAPPre.setStatus('current')
hh3cWIPSCtmPolicyPtRogueAPPre = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 2, 1, 6), Unsigned32().clone(7)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyPtRogueAPPre.setStatus('current')
hh3cWIPSCtmPolicyMisconfAPPre = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 2, 1, 7), Unsigned32().clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyMisconfAPPre.setStatus('current')
hh3cWIPSCtmPolicyExternalAPPre = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 2, 1, 8), Unsigned32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyExternalAPPre.setStatus('current')
hh3cWIPSCtmPolicyPtExternalAPPre = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 2, 1, 9), Unsigned32().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyPtExternalAPPre.setStatus('current')
hh3cWIPSCtmPolicyUncateAPPre = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 2, 1, 10), Unsigned32().clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyUncateAPPre.setStatus('current')
hh3cWIPSCtmPolicyPtAuthAPPre = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 2, 1, 11), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyPtAuthAPPre.setStatus('current')
hh3cWIPSCtmPolicyMisassoStaPre = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 2, 1, 12), Unsigned32().clone(6)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyMisassoStaPre.setStatus('current')
hh3cWIPSCtmPolicyUncateStaPre = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 2, 1, 13), Unsigned32().clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyUncateStaPre.setStatus('current')
hh3cWIPSCtmPolicyUnauthStaPre = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 2, 1, 14), Unsigned32().clone(8)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyUnauthStaPre.setStatus('current')
hh3cWIPSCtmPolicyDevListTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 3), )
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyDevListTable.setStatus('current')
hh3cWIPSCtmPolicyDevListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 3, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSCtmPolicyName"), (0, "HH3C-WIPS-MIB", "hh3cWIPSCtmPolicyDevMAC"))
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyDevListEntry.setStatus('current')
hh3cWIPSCtmPolicyDevMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyDevMAC.setStatus('current')
hh3cWIPSCtmPolicyDevRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 11, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSCtmPolicyDevRowStatus.setStatus('current')
hh3cWIPSMalPktDctConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 12))
hh3cWIPSMalPktDctCfgLogSupportSet = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 12, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktDctCfgLogSupportSet.setStatus('current')
hh3cWIPSMalPktDctCfgTrapSupportSet = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 12, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktDctCfgTrapSupportSet.setStatus('current')
hh3cWIPSMalPktDctPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 12, 3), )
if mibBuilder.loadTexts: hh3cWIPSMalPktDctPolicyTable.setStatus('current')
hh3cWIPSMalPktDctPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 12, 3, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSMalPktDctPolicyName"))
if mibBuilder.loadTexts: hh3cWIPSMalPktDctPolicyEntry.setStatus('current')
hh3cWIPSMalPktDctPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 12, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hh3cWIPSMalPktDctPolicyName.setStatus('current')
hh3cWIPSMalPktDctPolicyCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 12, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSMalPktDctPolicyCfgRowStatus.setStatus('current')
hh3cWIPSMalPktDctPolicyLogBitString = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 12, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSMalPktDctPolicyLogBitString.setStatus('current')
hh3cWIPSMalPktDctPolicyTrapBitString = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 12, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSMalPktDctPolicyTrapBitString.setStatus('current')
hh3cWIPSMalPktDctPolicyDurationThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 12, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767)).clone(5000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSMalPktDctPolicyDurationThreshold.setStatus('current')
hh3cWIPSMalPktDctPolicyQuietTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 12, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 604800)).clone(600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSMalPktDctPolicyQuietTime.setStatus('current')
hh3cWIPSStaticTrustOUIListCfgTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 13), )
if mibBuilder.loadTexts: hh3cWIPSStaticTrustOUIListCfgTable.setStatus('current')
hh3cWIPSStaticTrustOUIListCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 13, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSStaticTrustOUIListOUI"))
if mibBuilder.loadTexts: hh3cWIPSStaticTrustOUIListCfgEntry.setStatus('current')
hh3cWIPSStaticTrustOUIListOUI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 13, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3))
if mibBuilder.loadTexts: hh3cWIPSStaticTrustOUIListOUI.setStatus('current')
hh3cWIPSStaticTrustOUIListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 13, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSStaticTrustOUIListRowStatus.setStatus('current')
hh3cWIPSStaticTrustVendorListCfgTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 14), )
if mibBuilder.loadTexts: hh3cWIPSStaticTrustVendorListCfgTable.setStatus('current')
hh3cWIPSStaticTrustVendorListCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 14, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSStaticTrustVendorListVendor"))
if mibBuilder.loadTexts: hh3cWIPSStaticTrustVendorListCfgEntry.setStatus('current')
hh3cWIPSStaticTrustVendorListVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 14, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: hh3cWIPSStaticTrustVendorListVendor.setStatus('current')
hh3cWIPSStaticTrustVendorListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 1, 14, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cWIPSStaticTrustVendorListRowStatus.setStatus('current')
hh3cWIPSDetectGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2))
hh3cWIPSDctAPTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1), )
if mibBuilder.loadTexts: hh3cWIPSDctAPTable.setStatus('current')
hh3cWIPSDctAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSDctAPVSD"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDctAPBSSID"))
if mibBuilder.loadTexts: hh3cWIPSDctAPEntry.setStatus('current')
hh3cWIPSDctAPVSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hh3cWIPSDctAPVSD.setStatus('current')
hh3cWIPSDctAPBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 2), MacAddress())
if mibBuilder.loadTexts: hh3cWIPSDctAPBSSID.setStatus('current')
hh3cWIPSDctAPRunningTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPRunningTime.setStatus('current')
hh3cWIPSDctAPRunTmLastUpdateTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPRunTmLastUpdateTm.setStatus('current')
hh3cWIPSDctAPIsCountered = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPIsCountered.setStatus('current')
hh3cWIPSDctAPWorkChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 6), Hh3cWIPSChannel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPWorkChannel.setStatus('current')
hh3cWIPSDctAPRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 7), Hh3cWIPSRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPRadioType.setStatus('current')
hh3cWIPSDctAPAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 8), Hh3cWIPSAuthMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPAuthMethod.setStatus('current')
hh3cWIPSDctAPEncryptMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 9), Hh3cWIPSEncryptMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPEncryptMethod.setStatus('current')
hh3cWIPSDctAPSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 10), Hh3cWIPSAPSecurityType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPSecurity.setStatus('current')
hh3cWIPSDctAPSeverityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPSeverityLevel.setStatus('current')
hh3cWIPSDctAPLastDctTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPLastDctTm.setStatus('current')
hh3cWIPSDctAPFirstDctTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPFirstDctTm.setStatus('current')
hh3cWIPSDctAPAdd2BlackList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 14), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSDctAPAdd2BlackList.setStatus('current')
hh3cWIPSDctAPAdd2WhiteList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 15), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSDctAPAdd2WhiteList.setStatus('current')
hh3cWIPSDctAPAdd2IgnoreList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 16), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSDctAPAdd2IgnoreList.setStatus('current')
hh3cWIPSDctAPAdd2CtmList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 17), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSDctAPAdd2CtmList.setStatus('current')
hh3cWIPSDctAPCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 18), Hh3cWIPSAPCategoryType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSDctAPCategory.setStatus('current')
hh3cWIPSDctAPCategoryWay = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 19), Hh3cWIPSDevCategoryWay().clone('autoByDev')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSDctAPCategoryWay.setStatus('current')
hh3cWIPSDctAPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 20), Hh3cWIPSDevStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPStatus.setStatus('current')
hh3cWIPSDctAPSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPSSID.setStatus('current')
hh3cWIPSDctAPAttachStaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPAttachStaNum.setStatus('current')
hh3cWIPSDctAPRptSensorNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPRptSensorNum.setStatus('current')
hh3cWIPSDctAPVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 1, 1, 24), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPVendor.setStatus('current')
hh3cWIPSDctAPAttachStaTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 2), )
if mibBuilder.loadTexts: hh3cWIPSDctAPAttachStaTable.setStatus('current')
hh3cWIPSDctAPAttachStaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 2, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSDctAPVSD"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDctAPBSSID"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDctAPAttachStaMac"))
if mibBuilder.loadTexts: hh3cWIPSDctAPAttachStaEntry.setStatus('current')
hh3cWIPSDctAPAttachStaMac = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cWIPSDctAPAttachStaMac.setStatus('current')
hh3cWIPSDctAPAttachStaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 2, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPAttachStaRowStatus.setStatus('current')
hh3cWIPSDctAPRptSensorTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 3), )
if mibBuilder.loadTexts: hh3cWIPSDctAPRptSensorTable.setStatus('current')
hh3cWIPSDctAPRptSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 3, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSDctAPVSD"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDctAPBSSID"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDctAPRptSensorName"))
if mibBuilder.loadTexts: hh3cWIPSDctAPRptSensorEntry.setStatus('current')
hh3cWIPSDctAPRptSensorName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: hh3cWIPSDctAPRptSensorName.setStatus('current')
hh3cWIPSDctAPRptSensorRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPRptSensorRadioId.setStatus('current')
hh3cWIPSDctAPRptRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 90))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPRptRSSI.setStatus('current')
hh3cWIPSDctAPLastRptTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 3, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctAPLastRptTm.setStatus('current')
hh3cWIPSDctStaTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4), )
if mibBuilder.loadTexts: hh3cWIPSDctStaTable.setStatus('current')
hh3cWIPSDctStaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSDctStaVSD"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDctStaMac"))
if mibBuilder.loadTexts: hh3cWIPSDctStaEntry.setStatus('current')
hh3cWIPSDctStaVSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hh3cWIPSDctStaVSD.setStatus('current')
hh3cWIPSDctStaMac = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4, 1, 2), MacAddress())
if mibBuilder.loadTexts: hh3cWIPSDctStaMac.setStatus('current')
hh3cWIPSDctStaAssocBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctStaAssocBSSID.setStatus('current')
hh3cWIPSDctStaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4, 1, 4), Hh3cWIPSDevStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctStaStatus.setStatus('current')
hh3cWIPSDctStaCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4, 1, 5), Hh3cWIPSClientCategoryType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctStaCategory.setStatus('current')
hh3cWIPSDctStaRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4, 1, 6), Hh3cWIPSRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctStaRadioType.setStatus('current')
hh3cWIPSDctStaWorkChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4, 1, 7), Hh3cWIPSChannel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctStaWorkChannel.setStatus('current')
hh3cWIPSDctStaIsCountered = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctStaIsCountered.setStatus('current')
hh3cWIPSDctStaAdd2BlackList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSDctStaAdd2BlackList.setStatus('current')
hh3cWIPSDctStaAdd2WhiteList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSDctStaAdd2WhiteList.setStatus('current')
hh3cWIPSDctStaAdd2IgnoreList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4, 1, 11), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSDctStaAdd2IgnoreList.setStatus('current')
hh3cWIPSDctStaAdd2CtmList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4, 1, 12), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSDctStaAdd2CtmList.setStatus('current')
hh3cWIPSDctStaFirstDctTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctStaFirstDctTm.setStatus('current')
hh3cWIPSDctStaLastDctTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4, 1, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctStaLastDctTm.setStatus('current')
hh3cWIPSDctStaRptSensorNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctStaRptSensorNum.setStatus('current')
hh3cWIPSDctStaState = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("authentication", 1), ("association", 2), ("eapSuccess", 3), ("eapLogoff", 4), ("disassociation", 5), ("deauthentication", 6), ("unassociation", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctStaState.setStatus('current')
hh3cWIPSDctStaVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 4, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctStaVendor.setStatus('current')
hh3cWIPSDctStaRptSensorTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 5), )
if mibBuilder.loadTexts: hh3cWIPSDctStaRptSensorTable.setStatus('current')
hh3cWIPSDctStaRptSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 5, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSDctStaVSD"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDctStaMac"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDctStaRtpSensorName"))
if mibBuilder.loadTexts: hh3cWIPSDctStaRptSensorEntry.setStatus('current')
hh3cWIPSDctStaRtpSensorName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: hh3cWIPSDctStaRtpSensorName.setStatus('current')
hh3cWIPSDctStaRptSensorRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctStaRptSensorRadioId.setStatus('current')
hh3cWIPSDctStaRptRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctStaRptRSSI.setStatus('current')
hh3cWIPSDctStaLastRptTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 5, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctStaLastRptTm.setStatus('current')
hh3cWIPSDctSSIDTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 6), )
if mibBuilder.loadTexts: hh3cWIPSDctSSIDTable.setStatus('current')
hh3cWIPSDctSSIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 6, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSDctNetworkVSD"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDctNetworkSSID"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDctNetworkCfg"))
if mibBuilder.loadTexts: hh3cWIPSDctSSIDEntry.setStatus('current')
hh3cWIPSDctNetworkVSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 6, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hh3cWIPSDctNetworkVSD.setStatus('current')
hh3cWIPSDctNetworkSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hh3cWIPSDctNetworkSSID.setStatus('current')
hh3cWIPSDctNetworkCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 6, 1, 3), Unsigned32())
if mibBuilder.loadTexts: hh3cWIPSDctNetworkCfg.setStatus('current')
hh3cWIPSDctNetworkFirstRptTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 6, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctNetworkFirstRptTm.setStatus('current')
hh3cWIPSDctNetworkLastRptTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 6, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctNetworkLastRptTm.setStatus('current')
hh3cWIPSDctNetworkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 6, 1, 6), Hh3cWIPSDevStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctNetworkStatus.setStatus('current')
hh3cWIPSDctNetworkSSIDHide = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 6, 1, 7), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctNetworkSSIDHide.setStatus('current')
hh3cWIPSDctNetworkBSSNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctNetworkBSSNum.setStatus('current')
hh3cWIPSDctSSIDBSSTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 7), )
if mibBuilder.loadTexts: hh3cWIPSDctSSIDBSSTable.setStatus('current')
hh3cWIPSDctSSIDBSSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 7, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSDctNetworkVSD"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDctNetworkSSID"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDctNetworkCfg"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDctNetworkBSSID"))
if mibBuilder.loadTexts: hh3cWIPSDctSSIDBSSEntry.setStatus('current')
hh3cWIPSDctNetworkBSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 7, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cWIPSDctNetworkBSSID.setStatus('current')
hh3cWIPSDctNetworkBSSWorkChl = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 7, 1, 2), Hh3cWIPSChannel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctNetworkBSSWorkChl.setStatus('current')
hh3cWIPSDctNetworkBSSStaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctNetworkBSSStaNum.setStatus('current')
hh3cWIPSBlockListTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 8), )
if mibBuilder.loadTexts: hh3cWIPSBlockListTable.setStatus('current')
hh3cWIPSBlockListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 8, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSBlockListMacAddress"))
if mibBuilder.loadTexts: hh3cWIPSBlockListEntry.setStatus('current')
hh3cWIPSBlockListMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 8, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cWIPSBlockListMacAddress.setStatus('current')
hh3cWIPSBlockListStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("staticAndDynamic", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSBlockListStatus.setStatus('current')
hh3cWIPSChannelTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 9), )
if mibBuilder.loadTexts: hh3cWIPSChannelTable.setStatus('current')
hh3cWIPSChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 9, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSChannelNum"))
if mibBuilder.loadTexts: hh3cWIPSChannelEntry.setStatus('current')
hh3cWIPSChannelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 9, 1, 1), Hh3cWIPSChannel())
if mibBuilder.loadTexts: hh3cWIPSChannelNum.setStatus('current')
hh3cWIPSChannelRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 9, 1, 2), Hh3cWIPSRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChannelRadioType.setStatus('current')
hh3cWIPSChannelIsPermitted = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 9, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChannelIsPermitted.setStatus('current')
hh3cWIPSChannelLastRptTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 9, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChannelLastRptTm.setStatus('current')
hh3cWIPSCountermeasureListTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 10), )
if mibBuilder.loadTexts: hh3cWIPSCountermeasureListTable.setStatus('current')
hh3cWIPSCountermeasureListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 10, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSCtmListMacAddress"))
if mibBuilder.loadTexts: hh3cWIPSCountermeasureListEntry.setStatus('current')
hh3cWIPSCtmListMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 10, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cWIPSCtmListMacAddress.setStatus('current')
hh3cWIPSCtmListLastestWorkChl = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 10, 1, 2), Hh3cWIPSChannel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSCtmListLastestWorkChl.setStatus('current')
hh3cWIPSCtmListFirstTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 10, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSCtmListFirstTm.setStatus('current')
hh3cWIPSCtmListLastTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 10, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSCtmListLastTm.setStatus('current')
hh3cWIPSCtmListQurCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSCtmListQurCnt.setStatus('current')
hh3cWIPSCtmListSensorNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSCtmListSensorNum.setStatus('current')
hh3cWIPSIgnoreListTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 11), )
if mibBuilder.loadTexts: hh3cWIPSIgnoreListTable.setStatus('current')
hh3cWIPSIgnoreListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 11, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSIgnoreListMacAddress"))
if mibBuilder.loadTexts: hh3cWIPSIgnoreListEntry.setStatus('current')
hh3cWIPSIgnoreListMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 11, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cWIPSIgnoreListMacAddress.setStatus('current')
hh3cWIPSIgnoreListFirstIgnoreTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 11, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSIgnoreListFirstIgnoreTm.setStatus('current')
hh3cWIPSIgnoreListLastIgnoreTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 11, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSIgnoreListLastIgnoreTm.setStatus('current')
hh3cWIPSIgnoreListIgnoreCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 11, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSIgnoreListIgnoreCnt.setStatus('current')
hh3cWIPSTrustListTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 12), )
if mibBuilder.loadTexts: hh3cWIPSTrustListTable.setStatus('current')
hh3cWIPSTrustListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 12, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSTrustListMacAddress"))
if mibBuilder.loadTexts: hh3cWIPSTrustListEntry.setStatus('current')
hh3cWIPSTrustListMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 12, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cWIPSTrustListMacAddress.setStatus('current')
hh3cWIPSTrustListStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("staticAndDynamic", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSTrustListStatus.setStatus('current')
hh3cWIPSChlStatTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13), )
if mibBuilder.loadTexts: hh3cWIPSChlStatTable.setStatus('current')
hh3cWIPSChlStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSChlStatSensorMacAddr"), (0, "HH3C-WIPS-MIB", "hh3cWIPSChlStatChannel"))
if mibBuilder.loadTexts: hh3cWIPSChlStatEntry.setStatus('current')
hh3cWIPSChlStatSensorMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cWIPSChlStatSensorMacAddr.setStatus('current')
hh3cWIPSChlStatChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 2), Hh3cWIPSChannel())
if mibBuilder.loadTexts: hh3cWIPSChlStatChannel.setStatus('current')
hh3cWIPSChlStatTotalPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatTotalPkt.setStatus('current')
hh3cWIPSChlStatTotalByte = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatTotalByte.setStatus('current')
hh3cWIPSChlStatBmcastPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatBmcastPkt.setStatus('current')
hh3cWIPSChlStatBmcastByte = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatBmcastByte.setStatus('current')
hh3cWIPSChlStatUnicastPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatUnicastPkt.setStatus('current')
hh3cWIPSChlStatUnicastByte = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatUnicastByte.setStatus('current')
hh3cWIPSChlStatManagement = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatManagement.setStatus('current')
hh3cWIPSChlStatControl = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatControl.setStatus('current')
hh3cWIPSChlStatData = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatData.setStatus('current')
hh3cWIPSChlStatBeacon = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatBeacon.setStatus('current')
hh3cWIPSChlStatRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatRTS.setStatus('current')
hh3cWIPSChlStatCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatCTS.setStatus('current')
hh3cWIPSChlStatProbeRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatProbeRequest.setStatus('current')
hh3cWIPSChlStatProbeResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatProbeResponse.setStatus('current')
hh3cWIPSChlStatFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatFragment.setStatus('current')
hh3cWIPSChlStatRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatRetry.setStatus('current')
hh3cWIPSChlStatEapSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatEapSuccess.setStatus('current')
hh3cWIPSChlStatEapFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatEapFailure.setStatus('current')
hh3cWIPSChlStatEapolStart = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatEapolStart.setStatus('current')
hh3cWIPSChlStatEapolLogoff = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatEapolLogoff.setStatus('current')
hh3cWIPSChlStatAssocRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatAssocRequest.setStatus('current')
hh3cWIPSChlStatAssocResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatAssocResponse.setStatus('current')
hh3cWIPSChlStatUnicastDisassoc = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatUnicastDisassoc.setStatus('current')
hh3cWIPSChlStatBroadcastDisassoc = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatBroadcastDisassoc.setStatus('current')
hh3cWIPSChlStatAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatAuthentication.setStatus('current')
hh3cWIPSChlStatUnicastDeauthen = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatUnicastDeauthen.setStatus('current')
hh3cWIPSChlStatBroadcastDeauthen = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatBroadcastDeauthen.setStatus('current')
hh3cWIPSChlStatMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 13, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSChlStatMalformed.setStatus('current')
hh3cWIPSDevStatTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14), )
if mibBuilder.loadTexts: hh3cWIPSDevStatTable.setStatus('current')
hh3cWIPSDevStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSDevStatSensorMacAddr"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDevStatDevMacAddress"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDevStatChannel"))
if mibBuilder.loadTexts: hh3cWIPSDevStatEntry.setStatus('current')
hh3cWIPSDevStatSensorMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 1), MacAddress())
if mibBuilder.loadTexts: hh3cWIPSDevStatSensorMacAddr.setStatus('current')
hh3cWIPSDevStatDevMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 2), MacAddress())
if mibBuilder.loadTexts: hh3cWIPSDevStatDevMacAddress.setStatus('current')
hh3cWIPSDevStatChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 3), Hh3cWIPSChannel())
if mibBuilder.loadTexts: hh3cWIPSDevStatChannel.setStatus('current')
hh3cWIPSDevStatTxTotalPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxTotalPkt.setStatus('current')
hh3cWIPSDevStatTxTotalByte = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxTotalByte.setStatus('current')
hh3cWIPSDevStatTxBMcastPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxBMcastPkt.setStatus('current')
hh3cWIPSDevStatTxBMcastByte = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxBMcastByte.setStatus('current')
hh3cWIPSDevStatTxUnicastPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxUnicastPkt.setStatus('current')
hh3cWIPSDevStatTxUnicastByte = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxUnicastByte.setStatus('current')
hh3cWIPSDevStatTxMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxMgmt.setStatus('current')
hh3cWIPSDevStatTxCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxCtrl.setStatus('current')
hh3cWIPSDevStatTxData = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxData.setStatus('current')
hh3cWIPSDevStatTxBeacon = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxBeacon.setStatus('current')
hh3cWIPSDevStatTxRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxRTS.setStatus('current')
hh3cWIPSDevStatTxProbeRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxProbeRequest.setStatus('current')
hh3cWIPSDevStatTxProbeResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxProbeResponse.setStatus('current')
hh3cWIPSDevStatTxFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxFragment.setStatus('current')
hh3cWIPSDevStatTxRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxRetry.setStatus('current')
hh3cWIPSDevStatTxAssocRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxAssocRequest.setStatus('current')
hh3cWIPSDevStatTxAssocResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxAssocResponse.setStatus('current')
hh3cWIPSDevStatTxUnicastDisassoc = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxUnicastDisassoc.setStatus('current')
hh3cWIPSDevStatTxBcastDisassoc = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxBcastDisassoc.setStatus('current')
hh3cWIPSDevStatTxAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxAuth.setStatus('current')
hh3cWIPSDevStatTxUnicastDeauth = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxUnicastDeauth.setStatus('current')
hh3cWIPSDevStatTxBcastDeauth = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxBcastDeauth.setStatus('current')
hh3cWIPSDevStatTxEAPSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxEAPSuccess.setStatus('current')
hh3cWIPSDevStatTxEAPFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxEAPFailure.setStatus('current')
hh3cWIPSDevStatTxEAPOLStart = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxEAPOLStart.setStatus('current')
hh3cWIPSDevStatTxEAPOLLogOff = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxEAPOLLogOff.setStatus('current')
hh3cWIPSDevStatTxMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatTxMalformed.setStatus('current')
hh3cWIPSDevStatRxTotalPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxTotalPkt.setStatus('current')
hh3cWIPSDevStatRxTotalByte = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxTotalByte.setStatus('current')
hh3cWIPSDevStatRxUnicastPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxUnicastPkt.setStatus('current')
hh3cWIPSDevStatRxUnicastByte = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxUnicastByte.setStatus('current')
hh3cWIPSDevStatRxMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxMgmt.setStatus('current')
hh3cWIPSDevStatRxCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxCtrl.setStatus('current')
hh3cWIPSDevStatRxData = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxData.setStatus('current')
hh3cWIPSDevStatRxRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxRTS.setStatus('current')
hh3cWIPSDevStatRxCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxCTS.setStatus('current')
hh3cWIPSDevStatRxProbeRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxProbeRequest.setStatus('current')
hh3cWIPSDevStatRxProbeResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxProbeResponse.setStatus('current')
hh3cWIPSDevStatRxFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxFragment.setStatus('current')
hh3cWIPSDevStatRxRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxRetry.setStatus('current')
hh3cWIPSDevStatRxAssoRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxAssoRequest.setStatus('current')
hh3cWIPSDevStatRxAssoResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxAssoResponse.setStatus('current')
hh3cWIPSDevStatRxDisassoc = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxDisassoc.setStatus('current')
hh3cWIPSDevStatRxAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxAuth.setStatus('current')
hh3cWIPSDevStatRxDeauth = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxDeauth.setStatus('current')
hh3cWIPSDevStatRxEAPSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxEAPSuccess.setStatus('current')
hh3cWIPSDevStatRxEAPFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxEAPFailure.setStatus('current')
hh3cWIPSDevStatRxEAPOLStart = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxEAPOLStart.setStatus('current')
hh3cWIPSDevStatRxEAPOLLogoff = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxEAPOLLogoff.setStatus('current')
hh3cWIPSDevStatRxMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 14, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDevStatRxMalformed.setStatus('current')
hh3cWIPSCtmDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 15), )
if mibBuilder.loadTexts: hh3cWIPSCtmDeviceTable.setStatus('current')
hh3cWIPSCtmDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 15, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSCtmDeviceVSD"), (0, "HH3C-WIPS-MIB", "hh3cWIPSCtmDeviceMAC"))
if mibBuilder.loadTexts: hh3cWIPSCtmDeviceEntry.setStatus('current')
hh3cWIPSCtmDeviceVSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 15, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hh3cWIPSCtmDeviceVSD.setStatus('current')
hh3cWIPSCtmDeviceMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 15, 1, 2), MacAddress())
if mibBuilder.loadTexts: hh3cWIPSCtmDeviceMAC.setStatus('current')
hh3cWIPSCtmDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("staticAnddynamic", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSCtmDeviceType.setStatus('current')
hh3cWIPSCtmDeviceState = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("idle", 1), ("pending", 2), ("action", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSCtmDeviceState.setStatus('current')
hh3cWIPSCtmDeviceStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 15, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSCtmDeviceStartTime.setStatus('current')
hh3cWIPSCtmDeviceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 15, 1, 6), Hh3cWIPSDeviceCategoryType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSCtmDeviceCategory.setStatus('current')
hh3cWIPSCtmDeviceChl = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 15, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSCtmDeviceChl.setStatus('current')
hh3cWIPSCtmDevicePrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 15, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSCtmDevicePrecedence.setStatus('current')
hh3cWIPSMalPktStatTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16), )
if mibBuilder.loadTexts: hh3cWIPSMalPktStatTable.setStatus('current')
hh3cWIPSMalPktStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSMalPktStatSensorName"))
if mibBuilder.loadTexts: hh3cWIPSMalPktStatEntry.setStatus('current')
hh3cWIPSMalPktStatSensorName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: hh3cWIPSMalPktStatSensorName.setStatus('current')
hh3cWIPSMalPktStatInvalidIELength = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktStatInvalidIELength.setStatus('current')
hh3cWIPSMalPktStatDuplicatedIE = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktStatDuplicatedIE.setStatus('current')
hh3cWIPSMalPktStatRedundantIE = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktStatRedundantIE.setStatus('current')
hh3cWIPSMalPktStatInvalidPktLength = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktStatInvalidPktLength.setStatus('current')
hh3cWIPSMalPktStatIllegalIBSSESS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktStatIllegalIBSSESS.setStatus('current')
hh3cWIPSMalPktStatInvalidSourceAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktStatInvalidSourceAddr.setStatus('current')
hh3cWIPSMalPktStatOverflowEAPOLKey = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktStatOverflowEAPOLKey.setStatus('current')
hh3cWIPSMalPktStatMalAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktStatMalAuth.setStatus('current')
hh3cWIPSMalPktStatMalAssoReq = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktStatMalAssoReq.setStatus('current')
hh3cWIPSMalPktStatMalHTIE = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktStatMalHTIE.setStatus('current')
hh3cWIPSMalPktStatLargeDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktStatLargeDuration.setStatus('current')
hh3cWIPSMalPktStatNULLProbeRes = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktStatNULLProbeRes.setStatus('current')
hh3cWIPSMalPktStatInvalidDeAuthCode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktStatInvalidDeAuthCode.setStatus('current')
hh3cWIPSMalPktStatInvalidDisAssoCode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktStatInvalidDisAssoCode.setStatus('current')
hh3cWIPSMalPktStatOverflowSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktStatOverflowSSID.setStatus('current')
hh3cWIPSMalPktStatFatajack = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktStatFatajack.setStatus('current')
hh3cWIPSMalPktStatInvalidChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 16, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSMalPktStatInvalidChannel.setStatus('current')
hh3cWIPSDctUnassocStaTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 17), )
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaTable.setStatus('current')
hh3cWIPSDctUnassocStaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 17, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSDctUnassocStaVSD"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDctUnassocStaMac"))
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaEntry.setStatus('current')
hh3cWIPSDctUnassocStaVSD = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 17, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaVSD.setStatus('current')
hh3cWIPSDctUnassocStaMac = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 17, 1, 2), MacAddress())
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaMac.setStatus('current')
hh3cWIPSDctUnassocStaCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 17, 1, 3), Hh3cWIPSClientCategoryType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaCategory.setStatus('current')
hh3cWIPSDctUnassocStaRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 17, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaRadioType.setStatus('current')
hh3cWIPSDctUnassocStaIsCountered = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 17, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaIsCountered.setStatus('current')
hh3cWIPSDctUnassocStaAdd2BlackList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 17, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaAdd2BlackList.setStatus('current')
hh3cWIPSDctUnassocStaAdd2WhiteList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 17, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaAdd2WhiteList.setStatus('current')
hh3cWIPSDctUnassocStaAdd2IgnoreList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 17, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaAdd2IgnoreList.setStatus('current')
hh3cWIPSDctUnassocStaAdd2CtmList = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 17, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaAdd2CtmList.setStatus('current')
hh3cWIPSDctUnassocStaFirstDctTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 17, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaFirstDctTm.setStatus('current')
hh3cWIPSDctUnassocStaLastDctTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 17, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaLastDctTm.setStatus('current')
hh3cWIPSDctUnassocStaRptSensorNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 17, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaRptSensorNum.setStatus('current')
hh3cWIPSDctUnassocStaState = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 17, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("authentication", 1), ("association", 2), ("eapSuccess", 3), ("eapLogoff", 4), ("disassociation", 5), ("deauthentication", 6), ("unassociation", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaState.setStatus('current')
hh3cWIPSDctUnassocStaVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 17, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaVendor.setStatus('current')
hh3cWIPSDctUnassocStaRptSensorTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 18), )
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaRptSensorTable.setStatus('current')
hh3cWIPSDctUnassocStaRptSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 18, 1), ).setIndexNames((0, "HH3C-WIPS-MIB", "hh3cWIPSDctUnassocStaVSD"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDctUnassocStaMac"), (0, "HH3C-WIPS-MIB", "hh3cWIPSDctUnassocStaRtpSensorName"))
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaRptSensorEntry.setStatus('current')
hh3cWIPSDctUnassocStaRtpSensorName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 18, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaRtpSensorName.setStatus('current')
hh3cWIPSDctUnassocStaRptSensorRadioId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 18, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaRptSensorRadioId.setStatus('current')
hh3cWIPSDctUnassocStaRptRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 18, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaRptRSSI.setStatus('current')
hh3cWIPSDctUnassocStaLastRptTm = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 118, 2, 18, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cWIPSDctUnassocStaLastRptTm.setStatus('current')
hh3cWIPSNotifyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 118, 3))
mibBuilder.exportSymbols("HH3C-WIPS-MIB", hh3cWIPSSigSubRuleSSIDOpe=hh3cWIPSSigSubRuleSSIDOpe, hh3cWIPSDctAPVSD=hh3cWIPSDctAPVSD, hh3cWIPSDctAPTable=hh3cWIPSDctAPTable, hh3cWIPSAtkDctPolicyDosReAssoQT=hh3cWIPSAtkDctPolicyDosReAssoQT, hh3cWIPSDctUnassocStaAdd2BlackList=hh3cWIPSDctUnassocStaAdd2BlackList, hh3cWIPSSigSubRuleMac=hh3cWIPSSigSubRuleMac, hh3cWIPSDctNetworkLastRptTm=hh3cWIPSDctNetworkLastRptTm, hh3cWIPSCtmDeviceChl=hh3cWIPSCtmDeviceChl, hh3cWIPSDctAPAttachStaEntry=hh3cWIPSDctAPAttachStaEntry, hh3cWIPSDctAPCategory=hh3cWIPSDctAPCategory, hh3cWIPSDctNetworkCfg=hh3cWIPSDctNetworkCfg, hh3cWIPSDctAPFirstDctTm=hh3cWIPSDctAPFirstDctTm, hh3cWIPSDctStaAdd2CtmList=hh3cWIPSDctStaAdd2CtmList, hh3cWIPSSigSubRuleMatchAll=hh3cWIPSSigSubRuleMatchAll, hh3cWIPSTrustListTable=hh3cWIPSTrustListTable, hh3cWIPSDevStatTxMalformed=hh3cWIPSDevStatTxMalformed, hh3cWIPSAPClaSubRuleSSID=hh3cWIPSAPClaSubRuleSSID, hh3cWIPSStaticBlockListCfgTable=hh3cWIPSStaticBlockListCfgTable, hh3cWIPSChlStatMalformed=hh3cWIPSChlStatMalformed, hh3cWIPSMalPktStatRedundantIE=hh3cWIPSMalPktStatRedundantIE, hh3cWIPSDctUnassocStaRptSensorRadioId=hh3cWIPSDctUnassocStaRptSensorRadioId, hh3cWIPSSigConfigGroup=hh3cWIPSSigConfigGroup, hh3cWIPSEnable=hh3cWIPSEnable, hh3cWIPSDctStaRptSensorEntry=hh3cWIPSDctStaRptSensorEntry, hh3cWIPSResetAllCtmList=hh3cWIPSResetAllCtmList, hh3cWIPSCtmPolicyTable=hh3cWIPSCtmPolicyTable, hh3cWIPSStaticTrustVendorListRowStatus=hh3cWIPSStaticTrustVendorListRowStatus, hh3cWIPSGlobalConfigGroup=hh3cWIPSGlobalConfigGroup, hh3cWIPSAPClaSeverityLevel=hh3cWIPSAPClaSeverityLevel, hh3cWIPSDctSSIDTable=hh3cWIPSDctSSIDTable, hh3cWIPSDevStatTxBMcastPkt=hh3cWIPSDevStatTxBMcastPkt, hh3cWIPSDctUnassocStaState=hh3cWIPSDctUnassocStaState, hh3cWIPSStaticTrustListRowStatus=hh3cWIPSStaticTrustListRowStatus, hh3cWIPSAtkDctPolicyName=hh3cWIPSAtkDctPolicyName, hh3cWIPSDevStatRxRetry=hh3cWIPSDevStatRxRetry, hh3cWIPSMalPktDctPolicyQuietTime=hh3cWIPSMalPktDctPolicyQuietTime, hh3cWIPSAPAuthType=hh3cWIPSAPAuthType, hh3cWIPSChannelEntry=hh3cWIPSChannelEntry, hh3cWIPSDctStaVendor=hh3cWIPSDctStaVendor, hh3cWIPSDctAPSeverityLevel=hh3cWIPSDctAPSeverityLevel, hh3cWIPSSigRule2PolicyRowStatus=hh3cWIPSSigRule2PolicyRowStatus, hh3cWIPSDctUnassocStaVendor=hh3cWIPSDctUnassocStaVendor, hh3cWIPSDevStatTxBcastDisassoc=hh3cWIPSDevStatTxBcastDisassoc, hh3cWIPSVsdNameCfg=hh3cWIPSVsdNameCfg, hh3cWIPSDevStatSensorMacAddr=hh3cWIPSDevStatSensorMacAddr, hh3cWIPSCtmListLastestWorkChl=hh3cWIPSCtmListLastestWorkChl, hh3cWIPSAtkDctPolicySoftApConvertTime=hh3cWIPSAtkDctPolicySoftApConvertTime, hh3cWIPSAtkDctPolicyDosEAPOLStartQT=hh3cWIPSAtkDctPolicyDosEAPOLStartQT, hh3cWIPSCtmPolicyEntry=hh3cWIPSCtmPolicyEntry, hh3cWIPSMalPktStatMalAuth=hh3cWIPSMalPktStatMalAuth, hh3cWIPSDctAPEntry=hh3cWIPSDctAPEntry, hh3cWIPSCtmPolicyMisassoStaPre=hh3cWIPSCtmPolicyMisassoStaPre, hh3cWIPSAPClaRowStatus=hh3cWIPSAPClaRowStatus, hh3cWIPSDctAPAdd2WhiteList=hh3cWIPSDctAPAdd2WhiteList, hh3cWIPSSigSubRulePatternTable=hh3cWIPSSigSubRulePatternTable, Hh3cWIPSAuthMethod=Hh3cWIPSAuthMethod, hh3cWIPSBlockListTable=hh3cWIPSBlockListTable, hh3cWIPSDevStatTxBcastDeauth=hh3cWIPSDevStatTxBcastDeauth, hh3cWIPSIgnoreListCfgTable=hh3cWIPSIgnoreListCfgTable, hh3cWIPSDctUnassocStaCategory=hh3cWIPSDctUnassocStaCategory, hh3cWIPSDevStatRxTotalByte=hh3cWIPSDevStatRxTotalByte, hh3cWIPSDctAPCategoryWay=hh3cWIPSDctAPCategoryWay, hh3cWIPSSigSubRulePatternID=hh3cWIPSSigSubRulePatternID, hh3cWIPSAtkDctPolicyUnencryptedAuthClientQT=hh3cWIPSAtkDctPolicyUnencryptedAuthClientQT, hh3cWIPSDctAPEncryptMethod=hh3cWIPSDctAPEncryptMethod, hh3cWIPSDevStatTxAuth=hh3cWIPSDevStatTxAuth, hh3cWIPSDctAPRptRSSI=hh3cWIPSDctAPRptRSSI, hh3cWIPSIgnoreListTable=hh3cWIPSIgnoreListTable, hh3cWIPSSigSubRuleSeqNumMin=hh3cWIPSSigSubRuleSeqNumMin, hh3cWIPSDctStaIsCountered=hh3cWIPSDctStaIsCountered, hh3cWIPSDctUnassocStaRptRSSI=hh3cWIPSDctUnassocStaRptRSSI, hh3cWIPSChlStatTotalPkt=hh3cWIPSChlStatTotalPkt, hh3cWIPSCtmDeviceStartTime=hh3cWIPSCtmDeviceStartTime, hh3cWIPSMalPktDctCfgLogSupportSet=hh3cWIPSMalPktDctCfgLogSupportSet, hh3cWIPSStaticCtmListCfgTable=hh3cWIPSStaticCtmListCfgTable, Hh3cWIPSAPCategoryType=Hh3cWIPSAPCategoryType, hh3cWIPSMinClientNum=hh3cWIPSMinClientNum, hh3cWIPSSigRuleDctThresholdPerSig=hh3cWIPSSigRuleDctThresholdPerSig, hh3cWIPSDctAPStatus=hh3cWIPSDctAPStatus, hh3cWIPSAtkDctPolicyCliSpoofQT=hh3cWIPSAtkDctPolicyCliSpoofQT, hh3cWIPSDctAPAdd2BlackList=hh3cWIPSDctAPAdd2BlackList, hh3cWIPSDctStaFirstDctTm=hh3cWIPSDctStaFirstDctTm, hh3cWIPSBlockListMacAddress=hh3cWIPSBlockListMacAddress, hh3cWIPSDctAPAdd2IgnoreList=hh3cWIPSDctAPAdd2IgnoreList, hh3cWIPSAtkDctPolicyAPSpoofQT=hh3cWIPSAtkDctPolicyAPSpoofQT, hh3cWIPSPermitChlBitMap=hh3cWIPSPermitChlBitMap, hh3cWIPSChlStatAuthentication=hh3cWIPSChlStatAuthentication, hh3cWIPSDevStatTable=hh3cWIPSDevStatTable, hh3cWIPSDevStatTxEAPSuccess=hh3cWIPSDevStatTxEAPSuccess, hh3cWIPS=hh3cWIPS, hh3cWIPSStaticTrustOUIListRowStatus=hh3cWIPSStaticTrustOUIListRowStatus, hh3cWIPSMalPktDctPolicyEntry=hh3cWIPSMalPktDctPolicyEntry, hh3cWIPSChlStatUnicastPkt=hh3cWIPSChlStatUnicastPkt, hh3cWIPSSigSubRuleRowStatus=hh3cWIPSSigSubRuleRowStatus, hh3cWIPSDevStatRxFragment=hh3cWIPSDevStatRxFragment, hh3cWIPSDctAPSecurity=hh3cWIPSDctAPSecurity, hh3cWIPSSigRuleQuietTime=hh3cWIPSSigRuleQuietTime, hh3cWIPSIgnoreListFirstIgnoreTm=hh3cWIPSIgnoreListFirstIgnoreTm, hh3cWIPSDevStatRxRTS=hh3cWIPSDevStatRxRTS, hh3cWIPSChlStatEapSuccess=hh3cWIPSChlStatEapSuccess, hh3cWIPSDctModeAPName=hh3cWIPSDctModeAPName, hh3cWIPSDctUnassocStaVSD=hh3cWIPSDctUnassocStaVSD, hh3cWIPSDctStaAdd2WhiteList=hh3cWIPSDctStaAdd2WhiteList, hh3cWIPSChlStatTotalByte=hh3cWIPSChlStatTotalByte, hh3cWIPSChlStatData=hh3cWIPSChlStatData, hh3cWIPSDctAPRptSensorRadioId=hh3cWIPSDctAPRptSensorRadioId, hh3cWIPSDctAPRunningTime=hh3cWIPSDctAPRunningTime, hh3cWIPSStaticCtmListRowStatus=hh3cWIPSStaticCtmListRowStatus, hh3cWIPSDctStaLastDctTm=hh3cWIPSDctStaLastDctTm, hh3cWIPSDevAgingTime=hh3cWIPSDevAgingTime, hh3cWIPSDevStatRxEAPOLStart=hh3cWIPSDevStatRxEAPOLStart, hh3cWIPSAtkDctPolicyInvalidOUIAction=hh3cWIPSAtkDctPolicyInvalidOUIAction, hh3cWIPSSigRuleEntry=hh3cWIPSSigRuleEntry, hh3cWIPSSigRuleRowStatus=hh3cWIPSSigRuleRowStatus, hh3cWIPSBlocklistAction=hh3cWIPSBlocklistAction, hh3cWIPSCtmPolicyUncateAPPre=hh3cWIPSCtmPolicyUncateAPPre, hh3cWIPSRule2VsdRowStatus=hh3cWIPSRule2VsdRowStatus, hh3cWIPSAtkDctPolicyPSAttackOnOffPercent=hh3cWIPSAtkDctPolicyPSAttackOnOffPercent, hh3cWIPSRule2VsdPrecedence=hh3cWIPSRule2VsdPrecedence, hh3cWIPSDctStaRadioType=hh3cWIPSDctStaRadioType, hh3cWIPSDctUnassocStaAdd2WhiteList=hh3cWIPSDctUnassocStaAdd2WhiteList, hh3cWIPSRule2VsdTable=hh3cWIPSRule2VsdTable, hh3cWIPSDctAPAttachStaMac=hh3cWIPSDctAPAttachStaMac, hh3cWIPSDctAPBSSID=hh3cWIPSDctAPBSSID, hh3cWIPSMalPktStatInvalidSourceAddr=hh3cWIPSMalPktStatInvalidSourceAddr, hh3cWIPSDevStatTxUnicastPkt=hh3cWIPSDevStatTxUnicastPkt, hh3cWIPSDctUnassocStaRptSensorNum=hh3cWIPSDctUnassocStaRptSensorNum, hh3cWIPSCtmConfigGroup=hh3cWIPSCtmConfigGroup, hh3cWIPSResetAllTrustList=hh3cWIPSResetAllTrustList, hh3cWIPSAtkDctPolicyDosAssoQT=hh3cWIPSAtkDctPolicyDosAssoQT, hh3cWIPSSensor2VsdTable=hh3cWIPSSensor2VsdTable, hh3cWIPSCtmDeviceTable=hh3cWIPSCtmDeviceTable, hh3cWIPSDctStaMac=hh3cWIPSDctStaMac, hh3cWIPSDctUnassocStaMac=hh3cWIPSDctUnassocStaMac, hh3cWIPSDctStaState=hh3cWIPSDctStaState, hh3cWIPSMalPktStatTable=hh3cWIPSMalPktStatTable, Hh3cWIPSDevStatus=Hh3cWIPSDevStatus, hh3cWIPSCtmPolicyCfgSupportSet=hh3cWIPSCtmPolicyCfgSupportSet, hh3cWIPSSTAInactiveTime=hh3cWIPSSTAInactiveTime, hh3cWIPSStaticTrustOUIListCfgEntry=hh3cWIPSStaticTrustOUIListCfgEntry, hh3cWIPSCtmDeviceMAC=hh3cWIPSCtmDeviceMAC, hh3cWIPSResetAllIgnoreList=hh3cWIPSResetAllIgnoreList, hh3cWIPSSigRuleTrackMethod=hh3cWIPSSigRuleTrackMethod, hh3cWIPSCtmPolicyPtAuthAPPre=hh3cWIPSCtmPolicyPtAuthAPPre, hh3cWIPSDctUnassocStaRtpSensorName=hh3cWIPSDctUnassocStaRtpSensorName, hh3cWIPSDctAPAttachStaNum=hh3cWIPSDctAPAttachStaNum, hh3cWIPSDctUnassocStaIsCountered=hh3cWIPSDctUnassocStaIsCountered, hh3cWIPSVsdConfigGroup=hh3cWIPSVsdConfigGroup, hh3cWIPSDevStatRxDeauth=hh3cWIPSDevStatRxDeauth, hh3cWIPSVsdSigPolicyNameCfg=hh3cWIPSVsdSigPolicyNameCfg, hh3cWIPSDevStatTxTotalPkt=hh3cWIPSDevStatTxTotalPkt, hh3cWIPSADOSEnable=hh3cWIPSADOSEnable, hh3cWIPSMinRSSIValue=hh3cWIPSMinRSSIValue, hh3cWIPSAccessFlowScanEnable=hh3cWIPSAccessFlowScanEnable, hh3cWIPSChannelNum=hh3cWIPSChannelNum, hh3cWIPSSigRuleID=hh3cWIPSSigRuleID, hh3cWIPSCtmPolicyDevRowStatus=hh3cWIPSCtmPolicyDevRowStatus, hh3cWIPSCtmListMacAddress=hh3cWIPSCtmListMacAddress, hh3cWIPSDevStatTxData=hh3cWIPSDevStatTxData, hh3cWIPSTrustListStatus=hh3cWIPSTrustListStatus, hh3cWIPSDevUpdateTime=hh3cWIPSDevUpdateTime, hh3cWIPSAPAuthTypeMatch=hh3cWIPSAPAuthTypeMatch, hh3cWIPSDctStaAdd2IgnoreList=hh3cWIPSDctStaAdd2IgnoreList, hh3cWIPSDctUnassocStaRptSensorEntry=hh3cWIPSDctUnassocStaRptSensorEntry, hh3cWIPSSigRuleName=hh3cWIPSSigRuleName, hh3cWIPSStaticTrustListCfgEntry=hh3cWIPSStaticTrustListCfgEntry, hh3cWIPSChannelLastRptTm=hh3cWIPSChannelLastRptTm, hh3cWIPSAPClaRuleEntry=hh3cWIPSAPClaRuleEntry, hh3cWIPSDevStatRxEAPOLLogoff=hh3cWIPSDevStatRxEAPOLLogoff, hh3cWIPSMaxAPNum=hh3cWIPSMaxAPNum, hh3cWIPSDevStatRxProbeRequest=hh3cWIPSDevStatRxProbeRequest, hh3cWIPSSigPolicyRowStatus=hh3cWIPSSigPolicyRowStatus, hh3cWIPSDevStatTxRetry=hh3cWIPSDevStatTxRetry, hh3cWIPSIgnoreListCfgEntry=hh3cWIPSIgnoreListCfgEntry, hh3cWIPSMalPktDctCfgTrapSupportSet=hh3cWIPSMalPktDctCfgTrapSupportSet, Hh3cWIPSChannel=Hh3cWIPSChannel, hh3cWIPSAtkDctPolicyApImpersonationBeaconIncThreshold=hh3cWIPSAtkDctPolicyApImpersonationBeaconIncThreshold, hh3cWIPSDevStatTxUnicastDeauth=hh3cWIPSDevStatTxUnicastDeauth, hh3cWIPSChannelIsPermitted=hh3cWIPSChannelIsPermitted, hh3cWIPSChlStatBeacon=hh3cWIPSChlStatBeacon, hh3cWIPSChannelTable=hh3cWIPSChannelTable, hh3cWIPSDctStaRptSensorTable=hh3cWIPSDctStaRptSensorTable, hh3cWIPSCtmListFirstTm=hh3cWIPSCtmListFirstTm, hh3cWIPSSigRuleActionEvtLevel=hh3cWIPSSigRuleActionEvtLevel, hh3cWIPSAtkDctPolicyCfgRowStatus=hh3cWIPSAtkDctPolicyCfgRowStatus, hh3cWIPSSensor2VsdEntry=hh3cWIPSSensor2VsdEntry, hh3cWIPSAtkDctPolicyCfgGroup=hh3cWIPSAtkDctPolicyCfgGroup, hh3cWIPSDctModeRadio=hh3cWIPSDctModeRadio, PYSNMP_MODULE_ID=hh3cWIPS, hh3cWIPSChlStatAssocRequest=hh3cWIPSChlStatAssocRequest, Hh3cWIPSDeviceCategoryType=Hh3cWIPSDeviceCategoryType, hh3cWIPSChlStatEapFailure=hh3cWIPSChlStatEapFailure, hh3cWIPSMalPktStatFatajack=hh3cWIPSMalPktStatFatajack, hh3cWIPSDctNetworkBSSNum=hh3cWIPSDctNetworkBSSNum, hh3cWIPSCtmListSensorNum=hh3cWIPSCtmListSensorNum, hh3cWIPSDctStaRptSensorNum=hh3cWIPSDctStaRptSensorNum, hh3cWIPSSigSubRuleSSIDLenMax=hh3cWIPSSigSubRuleSSIDLenMax, hh3cWIPSSigSubRuleFrameSubType=hh3cWIPSSigSubRuleFrameSubType, hh3cWIPSDctStaStatus=hh3cWIPSDctStaStatus, hh3cWIPSCtmDevicePrecedence=hh3cWIPSCtmDevicePrecedence, hh3cWIPSChlStatBmcastByte=hh3cWIPSChlStatBmcastByte, hh3cWIPSCtmPolicyPtExternalAPPre=hh3cWIPSCtmPolicyPtExternalAPPre, hh3cWIPSMalPktStatIllegalIBSSESS=hh3cWIPSMalPktStatIllegalIBSSESS, hh3cWIPSSigSubRulePatternValueMin=hh3cWIPSSigSubRulePatternValueMin, hh3cWIPSAtkDctPolicyApImpersonationQT=hh3cWIPSAtkDctPolicyApImpersonationQT, hh3cWIPSMalPktStatInvalidDisAssoCode=hh3cWIPSMalPktStatInvalidDisAssoCode, hh3cWIPSDctUnassocStaRptSensorTable=hh3cWIPSDctUnassocStaRptSensorTable, hh3cWIPSChlStatEapolStart=hh3cWIPSChlStatEapolStart, hh3cWIPSMalPktDctConfigGroup=hh3cWIPSMalPktDctConfigGroup, hh3cWIPSSensorState=hh3cWIPSSensorState, hh3cWIPSSigSubRuleFrameType=hh3cWIPSSigSubRuleFrameType, hh3cWIPSChlStatControl=hh3cWIPSChlStatControl, hh3cWIPSDctStaAdd2BlackList=hh3cWIPSDctStaAdd2BlackList, hh3cWIPSDctAPVendor=hh3cWIPSDctAPVendor, hh3cWIPSDevStatTxMgmt=hh3cWIPSDevStatTxMgmt, hh3cWIPSDevStatChannel=hh3cWIPSDevStatChannel, hh3cWIPSDctAPRptSensorTable=hh3cWIPSDctAPRptSensorTable, hh3cWIPSDevStatRxDisassoc=hh3cWIPSDevStatRxDisassoc, hh3cWIPSReclassificationPeriod=hh3cWIPSReclassificationPeriod, hh3cWIPSSensorNameCfg=hh3cWIPSSensorNameCfg, hh3cWIPSAtkDctPolicyAPFloodQT=hh3cWIPSAtkDctPolicyAPFloodQT, hh3cWIPSAPClaRuleName=hh3cWIPSAPClaRuleName, hh3cWIPSDctStaTable=hh3cWIPSDctStaTable, hh3cWIPSSigSubRulePatternOffset=hh3cWIPSSigSubRulePatternOffset, hh3cWIPSDctStaAssocBSSID=hh3cWIPSDctStaAssocBSSID, hh3cWIPSDevStatTxEAPOLStart=hh3cWIPSDevStatTxEAPOLStart, hh3cWIPSSigRuleTable=hh3cWIPSSigRuleTable, hh3cWIPSDctModeTable=hh3cWIPSDctModeTable, hh3cWIPSMaxDuration=hh3cWIPSMaxDuration, hh3cWIPSMinAPNum=hh3cWIPSMinAPNum, hh3cWIPSDevStatTxAssocRequest=hh3cWIPSDevStatTxAssocRequest, hh3cWIPSStatisticPeriod=hh3cWIPSStatisticPeriod, hh3cWIPSSigSubRuleSSIDCase=hh3cWIPSSigSubRuleSSIDCase, hh3cWIPSSigPolicyTable=hh3cWIPSSigPolicyTable, hh3cWIPSDctStaRtpSensorName=hh3cWIPSDctStaRtpSensorName, hh3cWIPSDevStatTxEAPOLLogOff=hh3cWIPSDevStatTxEAPOLLogOff, hh3cWIPSSigSubRulePatternFromPayload=hh3cWIPSSigSubRulePatternFromPayload, hh3cWIPSCtmPolicyExternalAPPre=hh3cWIPSCtmPolicyExternalAPPre, Hh3cWIPSAPClassifyType=Hh3cWIPSAPClassifyType, hh3cWIPSBlockListEntry=hh3cWIPSBlockListEntry, hh3cWIPSCountermeasureListEntry=hh3cWIPSCountermeasureListEntry, hh3cWIPSDctAPLastRptTm=hh3cWIPSDctAPLastRptTm, hh3cWIPSSigRuleDctPeriod=hh3cWIPSSigRuleDctPeriod, hh3cWIPSDctNetworkSSID=hh3cWIPSDctNetworkSSID, hh3cWIPSAPClaRuleTable=hh3cWIPSAPClaRuleTable, hh3cWIPSCtmPolicyUncateStaPre=hh3cWIPSCtmPolicyUncateStaPre, hh3cWIPSDctAPRunTmLastUpdateTm=hh3cWIPSDctAPRunTmLastUpdateTm, hh3cWIPSDctAPAuthMethod=hh3cWIPSDctAPAuthMethod, hh3cWIPSDevStatRxMgmt=hh3cWIPSDevStatRxMgmt, hh3cWIPSDevStatTxUnicastByte=hh3cWIPSDevStatTxUnicastByte, hh3cWIPSMalPktStatOverflowEAPOLKey=hh3cWIPSMalPktStatOverflowEAPOLKey, hh3cWIPSMalPktStatDuplicatedIE=hh3cWIPSMalPktStatDuplicatedIE, hh3cWIPSRule2VsdEntry=hh3cWIPSRule2VsdEntry, hh3cWIPSStaticCtmListMAC=hh3cWIPSStaticCtmListMAC)
mibBuilder.exportSymbols("HH3C-WIPS-MIB", hh3cWIPSSigSubRulePatternEntry=hh3cWIPSSigSubRulePatternEntry, hh3cWIPSMalPktDctPolicyLogBitString=hh3cWIPSMalPktDctPolicyLogBitString, hh3cWIPSDevStatTxProbeResponse=hh3cWIPSDevStatTxProbeResponse, hh3cWIPSCtmPolicyCfgRowStatus=hh3cWIPSCtmPolicyCfgRowStatus, hh3cWIPSMaxClientNum=hh3cWIPSMaxClientNum, hh3cWIPSNotifyGroup=hh3cWIPSNotifyGroup, hh3cWIPSDctSSIDBSSEntry=hh3cWIPSDctSSIDBSSEntry, hh3cWIPSDevStatDevMacAddress=hh3cWIPSDevStatDevMacAddress, hh3cWIPSDevStatRxAssoResponse=hh3cWIPSDevStatRxAssoResponse, hh3cWIPSChlStatManagement=hh3cWIPSChlStatManagement, hh3cWIPSMalPktDctPolicyCfgRowStatus=hh3cWIPSMalPktDctPolicyCfgRowStatus, hh3cWIPSIgnoreListEntry=hh3cWIPSIgnoreListEntry, hh3cWIPSChlStatSensorMacAddr=hh3cWIPSChlStatSensorMacAddr, hh3cWIPSChlStatUnicastByte=hh3cWIPSChlStatUnicastByte, hh3cWIPSIgnoreListRowStatus=hh3cWIPSIgnoreListRowStatus, hh3cWIPSVsdMalPktPolicyNameCfg=hh3cWIPSVsdMalPktPolicyNameCfg, hh3cWIPSAPClaRuleMatchAll=hh3cWIPSAPClaRuleMatchAll, hh3cWIPSCtmPolicyDevMAC=hh3cWIPSCtmPolicyDevMAC, hh3cWIPSDctAPAttachStaTable=hh3cWIPSDctAPAttachStaTable, hh3cWIPSCtmListLastTm=hh3cWIPSCtmListLastTm, hh3cWIPSDctAPSSID=hh3cWIPSDctAPSSID, hh3cWIPSStaticTrustListMAC=hh3cWIPSStaticTrustListMAC, hh3cWIPSDevStatRxAssoRequest=hh3cWIPSDevStatRxAssoRequest, hh3cWIPSCtmDeviceType=hh3cWIPSCtmDeviceType, hh3cWIPSSensor2VsdRowStatus=hh3cWIPSSensor2VsdRowStatus, hh3cWIPSAtkDctPolicyBitString=hh3cWIPSAtkDctPolicyBitString, hh3cWIPSDctNetworkBSSStaNum=hh3cWIPSDctNetworkBSSStaNum, Hh3cWIPSAPSecurityType=Hh3cWIPSAPSecurityType, hh3cWIPSDevStatRxMalformed=hh3cWIPSDevStatRxMalformed, hh3cWIPSMalPktStatSensorName=hh3cWIPSMalPktStatSensorName, hh3cWIPSDctUnassocStaEntry=hh3cWIPSDctUnassocStaEntry, hh3cWIPSDctNetworkBSSWorkChl=hh3cWIPSDctNetworkBSSWorkChl, hh3cWIPSMalPktDctPolicyDurationThreshold=hh3cWIPSMalPktDctPolicyDurationThreshold, hh3cWIPSAPClaSubRuleSSIDOperator=hh3cWIPSAPClaSubRuleSSIDOperator, hh3cWIPSStaticTrustOUIListOUI=hh3cWIPSStaticTrustOUIListOUI, hh3cWIPSChlStatTable=hh3cWIPSChlStatTable, hh3cWIPSDevStatTxEAPFailure=hh3cWIPSDevStatTxEAPFailure, hh3cWIPSCtmPolicyUnauthStaPre=hh3cWIPSCtmPolicyUnauthStaPre, hh3cWIPSTrustListMacAddress=hh3cWIPSTrustListMacAddress, hh3cWIPSSigRuleDctThresholdPerMAC=hh3cWIPSSigRuleDctThresholdPerMAC, hh3cWIPSVsdTable=hh3cWIPSVsdTable, hh3cWIPSIgnoreListIgnoreCnt=hh3cWIPSIgnoreListIgnoreCnt, hh3cWIPSDctAPRptSensorName=hh3cWIPSDctAPRptSensorName, hh3cWIPSDctUnassocStaRadioType=hh3cWIPSDctUnassocStaRadioType, hh3cWIPSSigSubRulePatternMask=hh3cWIPSSigSubRulePatternMask, hh3cWIPSChlStatProbeRequest=hh3cWIPSChlStatProbeRequest, hh3cWIPSDctUnassocStaAdd2CtmList=hh3cWIPSDctUnassocStaAdd2CtmList, hh3cWIPSStaticBlockListMAC=hh3cWIPSStaticBlockListMAC, hh3cWIPSStaticTrustListCfgTable=hh3cWIPSStaticTrustListCfgTable, hh3cWIPSDctUnassocStaAdd2IgnoreList=hh3cWIPSDctUnassocStaAdd2IgnoreList, hh3cWIPSDevStatTxRTS=hh3cWIPSDevStatTxRTS, hh3cWIPSChlStatAssocResponse=hh3cWIPSChlStatAssocResponse, hh3cWIPSDctAPLastDctTm=hh3cWIPSDctAPLastDctTm, hh3cWIPSDevStatRxEAPSuccess=hh3cWIPSDevStatRxEAPSuccess, hh3cWIPSMinDuration=hh3cWIPSMinDuration, hh3cWIPSMalPktStatLargeDuration=hh3cWIPSMalPktStatLargeDuration, hh3cWIPSDctUnassocStaLastDctTm=hh3cWIPSDctUnassocStaLastDctTm, hh3cWIPSMaxRSSIValue=hh3cWIPSMaxRSSIValue, hh3cWIPSDctAPRptSensorNum=hh3cWIPSDctAPRptSensorNum, hh3cWIPSChlStatEntry=hh3cWIPSChlStatEntry, hh3cWIPSChannelRadioType=hh3cWIPSChannelRadioType, hh3cWIPSMalPktStatInvalidIELength=hh3cWIPSMalPktStatInvalidIELength, hh3cWIPSCtmPolicyPtRogueAPPre=hh3cWIPSCtmPolicyPtRogueAPPre, hh3cWIPSDctModeRowStatus=hh3cWIPSDctModeRowStatus, hh3cWIPSDevStatRxUnicastByte=hh3cWIPSDevStatRxUnicastByte, hh3cWIPSMalPktDctPolicyTable=hh3cWIPSMalPktDctPolicyTable, hh3cWIPSStaticTrustVendorListVendor=hh3cWIPSStaticTrustVendorListVendor, hh3cWIPSDctNetworkSSIDHide=hh3cWIPSDctNetworkSSIDHide, hh3cWIPSDevStatTxAssocResponse=hh3cWIPSDevStatTxAssocResponse, hh3cWIPSVsdAtkDctPolicyNameCfg=hh3cWIPSVsdAtkDctPolicyNameCfg, hh3cWIPSDevStatEntry=hh3cWIPSDevStatEntry, hh3cWIPSDevStatTxCtrl=hh3cWIPSDevStatTxCtrl, hh3cWIPSBlockListStatus=hh3cWIPSBlockListStatus, hh3cWIPSCtmDeviceCategory=hh3cWIPSCtmDeviceCategory, hh3cWIPSDctAPAttachStaRowStatus=hh3cWIPSDctAPAttachStaRowStatus, hh3cWIPSIgnoreListMAC=hh3cWIPSIgnoreListMAC, hh3cWIPSChlStatEapolLogoff=hh3cWIPSChlStatEapolLogoff, hh3cWIPSCtmDeviceState=hh3cWIPSCtmDeviceState, hh3cWIPSChlStatProbeResponse=hh3cWIPSChlStatProbeResponse, hh3cWIPSSensorRadioTable=hh3cWIPSSensorRadioTable, hh3cWIPSSigSubRuleSSIDLenMin=hh3cWIPSSigSubRuleSSIDLenMin, hh3cWIPSAPClaType=hh3cWIPSAPClaType, hh3cWIPSDctSSIDBSSTable=hh3cWIPSDctSSIDBSSTable, hh3cWIPSDctStaRptRSSI=hh3cWIPSDctStaRptRSSI, hh3cWIPSChlStatFragment=hh3cWIPSChlStatFragment, hh3cWIPSChlStatBmcastPkt=hh3cWIPSChlStatBmcastPkt, hh3cWIPSDctAPRptSensorEntry=hh3cWIPSDctAPRptSensorEntry, hh3cWIPSSigSubRuleSSID=hh3cWIPSSigSubRuleSSID, hh3cWIPSSigSubRuleMacType=hh3cWIPSSigSubRuleMacType, hh3cWIPSDctStaWorkChannel=hh3cWIPSDctStaWorkChannel, hh3cWIPSCtmPolicyName=hh3cWIPSCtmPolicyName, hh3cWIPSChlStatChannel=hh3cWIPSChlStatChannel, hh3cWIPSOUIInfo=hh3cWIPSOUIInfo, hh3cWIPSAtkDctPolicyPSAttackQT=hh3cWIPSAtkDctPolicyPSAttackQT, hh3cWIPSMalPktStatEntry=hh3cWIPSMalPktStatEntry, Hh3cWIPSEncryptMethod=Hh3cWIPSEncryptMethod, hh3cWIPSDevStatTxTotalByte=hh3cWIPSDevStatTxTotalByte, hh3cWIPSMalPktDctPolicyName=hh3cWIPSMalPktDctPolicyName, hh3cWIPSDevStatRxCTS=hh3cWIPSDevStatRxCTS, hh3cWIPSSensorRadioRadioId=hh3cWIPSSensorRadioRadioId, hh3cWIPSSigPolicyNameCfg=hh3cWIPSSigPolicyNameCfg, hh3cWIPSIgnoreListMacAddress=hh3cWIPSIgnoreListMacAddress, hh3cWIPSAtkDctPolicyUnencryptedAuthApQT=hh3cWIPSAtkDctPolicyUnencryptedAuthApQT, hh3cWIPSDctAPIsCountered=hh3cWIPSDctAPIsCountered, hh3cWIPSDctAPWorkChannel=hh3cWIPSDctAPWorkChannel, hh3cWIPSSensorRadioScanMode=hh3cWIPSSensorRadioScanMode, hh3cWIPSCtmPolicyFixedChl=hh3cWIPSCtmPolicyFixedChl, hh3cWIPSAtkDctPolicyCfgSupportSet=hh3cWIPSAtkDctPolicyCfgSupportSet, hh3cWIPSCtmPolicyMisconfAPPre=hh3cWIPSCtmPolicyMisconfAPPre, hh3cWIPSCtmDeviceEntry=hh3cWIPSCtmDeviceEntry, hh3cWIPSDctAPAdd2CtmList=hh3cWIPSDctAPAdd2CtmList, hh3cWIPSMalPktStatOverflowSSID=hh3cWIPSMalPktStatOverflowSSID, hh3cWIPSAPInactiveTime=hh3cWIPSAPInactiveTime, hh3cWIPSRule2VsdAPClaRuleNameCfg=hh3cWIPSRule2VsdAPClaRuleNameCfg, hh3cWIPSTrustListEntry=hh3cWIPSTrustListEntry, hh3cWIPSCtmPolicyDevListEntry=hh3cWIPSCtmPolicyDevListEntry, hh3cWIPSSecurityTypeMatch=hh3cWIPSSecurityTypeMatch, hh3cWIPSSigRule2PolicyPrecedence=hh3cWIPSSigRule2PolicyPrecedence, hh3cWIPSVsdRowStatus=hh3cWIPSVsdRowStatus, hh3cWIPSDctUnassocStaLastRptTm=hh3cWIPSDctUnassocStaLastRptTm, hh3cWIPSAtkDctPolicyCfgTable=hh3cWIPSAtkDctPolicyCfgTable, Hh3cWIPSClientCategoryType=Hh3cWIPSClientCategoryType, hh3cWIPSAtkDctPolicyDosAuthQT=hh3cWIPSAtkDctPolicyDosAuthQT, hh3cWIPSSecurityType=hh3cWIPSSecurityType, hh3cWIPSCtmPolicyBitString=hh3cWIPSCtmPolicyBitString, hh3cWIPSDevStatTxBMcastByte=hh3cWIPSDevStatTxBMcastByte, hh3cWIPSResetAllBlockList=hh3cWIPSResetAllBlockList, hh3cWIPSDctNetworkFirstRptTm=hh3cWIPSDctNetworkFirstRptTm, hh3cWIPSChlStatCTS=hh3cWIPSChlStatCTS, hh3cWIPSDevStatRxAuth=hh3cWIPSDevStatRxAuth, hh3cWIPSDevStatRxProbeResponse=hh3cWIPSDevStatRxProbeResponse, hh3cWIPSDevStatRxData=hh3cWIPSDevStatRxData, hh3cWIPSMalPktStatMalAssoReq=hh3cWIPSMalPktStatMalAssoReq, hh3cWIPSVendorInfo=hh3cWIPSVendorInfo, hh3cWIPSSigSubRuleSeqNumMax=hh3cWIPSSigSubRuleSeqNumMax, hh3cWIPSVsdEntry=hh3cWIPSVsdEntry, hh3cWIPSDevStatTxUnicastDisassoc=hh3cWIPSDevStatTxUnicastDisassoc, hh3cWIPSChlStatBroadcastDisassoc=hh3cWIPSChlStatBroadcastDisassoc, hh3cWIPSChlStatUnicastDisassoc=hh3cWIPSChlStatUnicastDisassoc, hh3cWIPSChlStatRTS=hh3cWIPSChlStatRTS, hh3cWIPSSensorRadioEntry=hh3cWIPSSensorRadioEntry, hh3cWIPSSigSubRulePatternName=hh3cWIPSSigSubRulePatternName, hh3cWIPSSigSubRulePatternValueMax=hh3cWIPSSigSubRulePatternValueMax, hh3cWIPSDctSSIDEntry=hh3cWIPSDctSSIDEntry, hh3cWIPSSigPolicyEntry=hh3cWIPSSigPolicyEntry, hh3cWIPSDctNetworkVSD=hh3cWIPSDctNetworkVSD, hh3cWIPSDevStatRxUnicastPkt=hh3cWIPSDevStatRxUnicastPkt, Hh3cWIPSDevCategoryWay=Hh3cWIPSDevCategoryWay, hh3cWIPSChlStatRetry=hh3cWIPSChlStatRetry, hh3cWIPSDynamicTrustListAgingTime=hh3cWIPSDynamicTrustListAgingTime, hh3cWIPSDctStaLastRptTm=hh3cWIPSDctStaLastRptTm, hh3cWIPSDctNetworkStatus=hh3cWIPSDctNetworkStatus, hh3cWIPSDevStatRxCtrl=hh3cWIPSDevStatRxCtrl, hh3cWIPSMalPktStatNULLProbeRes=hh3cWIPSMalPktStatNULLProbeRes, hh3cWIPSDctStaVSD=hh3cWIPSDctStaVSD, hh3cWIPSDctStaCategory=hh3cWIPSDctStaCategory, hh3cWIPSStaticBlockListCfgEntry=hh3cWIPSStaticBlockListCfgEntry, hh3cWIPSDctUnassocStaTable=hh3cWIPSDctUnassocStaTable, hh3cWIPSDevStatTxProbeRequest=hh3cWIPSDevStatTxProbeRequest, hh3cWIPSDctModeScanMode=hh3cWIPSDctModeScanMode, hh3cWIPSCountermeasureListTable=hh3cWIPSCountermeasureListTable, hh3cWIPSMalPktStatMalHTIE=hh3cWIPSMalPktStatMalHTIE, hh3cWIPSAtkDctPolicyCfgEntry=hh3cWIPSAtkDctPolicyCfgEntry, hh3cWIPSStaticBlockListRowStatus=hh3cWIPSStaticBlockListRowStatus, hh3cWIPSDevStatTxBeacon=hh3cWIPSDevStatTxBeacon, hh3cWIPSAtkDctPolicyApImpersonationBeaconIncWaitTime=hh3cWIPSAtkDctPolicyApImpersonationBeaconIncWaitTime, hh3cWIPSDctModeEntry=hh3cWIPSDctModeEntry, hh3cWIPSDctStaRptSensorRadioId=hh3cWIPSDctStaRptSensorRadioId, hh3cWIPSDctUnassocStaFirstDctTm=hh3cWIPSDctUnassocStaFirstDctTm, hh3cWIPSSigRule2PolicyTable=hh3cWIPSSigRule2PolicyTable, hh3cWIPSCtmPolicyDevListTable=hh3cWIPSCtmPolicyDevListTable, hh3cWIPSDevStatTxFragment=hh3cWIPSDevStatTxFragment, hh3cWIPSSigRule2PolicySigRuleIDCfg=hh3cWIPSSigRule2PolicySigRuleIDCfg, hh3cWIPSCtmDeviceVSD=hh3cWIPSCtmDeviceVSD, hh3cWIPSStaticCtmListCfgEntry=hh3cWIPSStaticCtmListCfgEntry, hh3cWIPSStaticTrustVendorListCfgTable=hh3cWIPSStaticTrustVendorListCfgTable, hh3cWIPSStaticTrustVendorListCfgEntry=hh3cWIPSStaticTrustVendorListCfgEntry, hh3cWIPSDetectGroup=hh3cWIPSDetectGroup, hh3cWIPSDctAPRadioType=hh3cWIPSDctAPRadioType, Hh3cWIPSRadioType=Hh3cWIPSRadioType, hh3cWIPSDevStatRxEAPFailure=hh3cWIPSDevStatRxEAPFailure, hh3cWIPSMalPktStatInvalidChannel=hh3cWIPSMalPktStatInvalidChannel, hh3cWIPSSensorLicenseNum=hh3cWIPSSensorLicenseNum, hh3cWIPSAtkDctPolicyWeakIVQT=hh3cWIPSAtkDctPolicyWeakIVQT, hh3cWIPSMalPktStatInvalidDeAuthCode=hh3cWIPSMalPktStatInvalidDeAuthCode, hh3cWIPSCtmPolicyRogueAPPre=hh3cWIPSCtmPolicyRogueAPPre, hh3cWIPSDevStatRxTotalPkt=hh3cWIPSDevStatRxTotalPkt, hh3cWIPSAtkDctPolicyPSAttackMinOffPacket=hh3cWIPSAtkDctPolicyPSAttackMinOffPacket, hh3cWIPSConfigGroup=hh3cWIPSConfigGroup, hh3cWIPSSigRule2PolicyEntry=hh3cWIPSSigRule2PolicyEntry, hh3cWIPSAPClaSubRuleSSIDCase=hh3cWIPSAPClaSubRuleSSIDCase, hh3cWIPSMalPktStatInvalidPktLength=hh3cWIPSMalPktStatInvalidPktLength, hh3cWIPSChlStatBroadcastDeauthen=hh3cWIPSChlStatBroadcastDeauthen, hh3cWIPSStaticTrustOUIListCfgTable=hh3cWIPSStaticTrustOUIListCfgTable, hh3cWIPSVsdCtmPolicyNameCfg=hh3cWIPSVsdCtmPolicyNameCfg, hh3cWIPSChlStatUnicastDeauthen=hh3cWIPSChlStatUnicastDeauthen, hh3cWIPSDctStaEntry=hh3cWIPSDctStaEntry, hh3cWIPSDctNetworkBSSID=hh3cWIPSDctNetworkBSSID, hh3cWIPSMalPktDctPolicyTrapBitString=hh3cWIPSMalPktDctPolicyTrapBitString, hh3cWIPSCtmListQurCnt=hh3cWIPSCtmListQurCnt, hh3cWIPSIgnoreListLastIgnoreTm=hh3cWIPSIgnoreListLastIgnoreTm)
