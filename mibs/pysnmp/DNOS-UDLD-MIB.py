#
# PySNMP MIB module DNOS-UDLD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DNOS-UDLD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:37:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
dnOS, = mibBuilder.importSymbols("DELL-REF-MIB", "dnOS")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, Unsigned32, IpAddress, Integer32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, MibIdentifier, iso, ObjectIdentity, TimeTicks, Gauge32, Bits, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Unsigned32", "IpAddress", "Integer32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "MibIdentifier", "iso", "ObjectIdentity", "TimeTicks", "Gauge32", "Bits", "NotificationType")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
fastPathUdld = ModuleIdentity((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 54))
fastPathUdld.setRevisions(('2008-02-24 00:00',))
if mibBuilder.loadTexts: fastPathUdld.setLastUpdated('200712030000Z')
if mibBuilder.loadTexts: fastPathUdld.setOrganization('Dell, Inc.')
agentUdldMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 54, 1))
agentUdldGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 54, 1, 1))
agentUdldInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 54, 1, 2))
agentUdldGlobalMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 54, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUdldGlobalMode.setStatus('current')
agentUdldMessageInterval = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 54, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(7, 90))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUdldMessageInterval.setStatus('current')
agentUdldTimeoutInterval = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 54, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 60))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUdldTimeoutInterval.setStatus('current')
agentUdldReset = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 54, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normalOperation", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUdldReset.setStatus('current')
agentUdldInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 54, 1, 2, 1), )
if mibBuilder.loadTexts: agentUdldInterfaceTable.setStatus('current')
agentUdldInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 54, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: agentUdldInterfaceEntry.setStatus('current')
agentUdldInterfaceOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 54, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("shutdown", 1), ("undetermined", 2), ("biDirectional", 3), ("notApplicable", 4), ("undetermined-LinkDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentUdldInterfaceOperStatus.setStatus('current')
agentUdldInterfaceAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 54, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUdldInterfaceAdminMode.setStatus('current')
agentUdldInterfaceAggresiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 54, 1, 2, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentUdldInterfaceAggresiveMode.setStatus('current')
mibBuilder.exportSymbols("DNOS-UDLD-MIB", agentUdldInterface=agentUdldInterface, agentUdldMIBObjects=agentUdldMIBObjects, agentUdldGlobalMode=agentUdldGlobalMode, agentUdldTimeoutInterval=agentUdldTimeoutInterval, agentUdldInterfaceTable=agentUdldInterfaceTable, agentUdldInterfaceEntry=agentUdldInterfaceEntry, agentUdldInterfaceAdminMode=agentUdldInterfaceAdminMode, agentUdldReset=agentUdldReset, agentUdldInterfaceAggresiveMode=agentUdldInterfaceAggresiveMode, agentUdldMessageInterval=agentUdldMessageInterval, fastPathUdld=fastPathUdld, PYSNMP_MODULE_ID=fastPathUdld, agentUdldInterfaceOperStatus=agentUdldInterfaceOperStatus, agentUdldGlobal=agentUdldGlobal)
