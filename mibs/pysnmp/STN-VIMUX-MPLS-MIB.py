#
# PySNMP MIB module STN-VIMUX-MPLS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/STN-VIMUX-MPLS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:04:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, TimeTicks, Counter32, Integer32, ModuleIdentity, iso, NotificationType, Unsigned32, Bits, MibIdentifier, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "TimeTicks", "Counter32", "Integer32", "ModuleIdentity", "iso", "NotificationType", "Unsigned32", "Bits", "MibIdentifier", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
stnRouterVimuxMpls, = mibBuilder.importSymbols("STN-ROUTER-MIB", "stnRouterVimuxMpls")
stnVimuxMpls = ModuleIdentity((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1))
if mibBuilder.loadTexts: stnVimuxMpls.setLastUpdated('0004060000Z')
if mibBuilder.loadTexts: stnVimuxMpls.setOrganization('Spring Tide Networks')
stnVimuxMplsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1))
stnVimuxMplsL2Table = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 1), )
if mibBuilder.loadTexts: stnVimuxMplsL2Table.setStatus('current')
stnVimuxMplsL2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 1, 1), ).setIndexNames((0, "STN-VIMUX-MPLS-MIB", "stnVimuxMplsL2IfIndex"))
if mibBuilder.loadTexts: stnVimuxMplsL2Entry.setStatus('current')
stnVimuxMplsL2IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsL2IfIndex.setStatus('current')
stnVimuxMplsL2ViId = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsL2ViId.setStatus('current')
stnVimuxMplsL2Name = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsL2Name.setStatus('current')
stnVimuxMplsL2State = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsL2State.setStatus('current')
stnVimuxMplsL2RegisteredLowerLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsL2RegisteredLowerLinks.setStatus('current')
stnVimuxMplsL2ActiveLowerLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsL2ActiveLowerLinks.setStatus('current')
stnVimuxMplsL2InvalidInLabelPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsL2InvalidInLabelPackets.setStatus('current')
stnVimuxMplsL2InvalidOutLabelPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsL2InvalidOutLabelPackets.setStatus('current')
stnVimuxMplsLinkTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 2), )
if mibBuilder.loadTexts: stnVimuxMplsLinkTable.setStatus('current')
stnVimuxMplsLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 2, 1), ).setIndexNames((0, "STN-VIMUX-MPLS-MIB", "stnVimuxMplsLinkVimuxMplsIfIndex"), (0, "STN-VIMUX-MPLS-MIB", "stnVimuxMplsLinkIfIndex"))
if mibBuilder.loadTexts: stnVimuxMplsLinkEntry.setStatus('current')
stnVimuxMplsLinkVimuxMplsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsLinkVimuxMplsIfIndex.setStatus('current')
stnVimuxMplsLinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 2, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsLinkIfIndex.setStatus('current')
stnVimuxMplsLinkPhysIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 2, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsLinkPhysIfIndex.setStatus('current')
stnVimuxMplsLinkVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsLinkVpi.setStatus('current')
stnVimuxMplsLinkVci = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsLinkVci.setStatus('current')
stnVimuxMplsIncomingLabelTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 3), )
if mibBuilder.loadTexts: stnVimuxMplsIncomingLabelTable.setStatus('current')
stnVimuxMplsIncomingLabel = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 3, 1), ).setIndexNames((0, "STN-VIMUX-MPLS-MIB", "stnVimuxMplsIncomingLabelValue"))
if mibBuilder.loadTexts: stnVimuxMplsIncomingLabel.setStatus('current')
stnVimuxMplsIncomingLabelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 3, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsIncomingLabelIfIndex.setStatus('current')
stnVimuxMplsIncomingLabelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsIncomingLabelValue.setStatus('current')
stnVimuxMplsIncomingLabelAction = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pop", 1), ("replace", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsIncomingLabelAction.setStatus('current')
stnVimuxMplsIncomingLabelToPush1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsIncomingLabelToPush1.setStatus('current')
stnVimuxMplsIncomingLabelToPush2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsIncomingLabelToPush2.setStatus('current')
stnVimuxMplsIncomingLabelToPush3 = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsIncomingLabelToPush3.setStatus('current')
stnVimuxMplsIncomingLabelToPush4 = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsIncomingLabelToPush4.setStatus('current')
stnVimuxMplsIncomingLabelNextVimuxMplsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 3, 1, 8), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsIncomingLabelNextVimuxMplsIfIndex.setStatus('current')
stnVimuxMplsIncomingLabelTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsIncomingLabelTtl.setStatus('current')
stnVimuxMplsIncomingLabelReceivedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsIncomingLabelReceivedPackets.setStatus('current')
stnVimuxMplsIncomingLabelDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsIncomingLabelDroppedPackets.setStatus('current')
stnVimuxMplsOutgoingLabelTable = MibTable((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 4), )
if mibBuilder.loadTexts: stnVimuxMplsOutgoingLabelTable.setStatus('current')
stnVimuxMplsOutgoingLabel = MibTableRow((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 4, 1), ).setIndexNames((0, "STN-VIMUX-MPLS-MIB", "stnVimuxMplsOutgoingLabelValue"))
if mibBuilder.loadTexts: stnVimuxMplsOutgoingLabel.setStatus('current')
stnVimuxMplsOutgoingLabelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 4, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsOutgoingLabelIfIndex.setStatus('current')
stnVimuxMplsOutgoingLabelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsOutgoingLabelValue.setStatus('current')
stnVimuxMplsOutgoingLabelOutgoingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 4, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsOutgoingLabelOutgoingIfIndex.setStatus('current')
stnVimuxMplsOutgoingLabelNexthop = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 4, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsOutgoingLabelNexthop.setStatus('current')
stnVimuxMplsOutgoingLabelSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsOutgoingLabelSentPackets.setStatus('current')
stnVimuxMplsOutgoingLabelDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 3551, 2, 7, 1, 8, 1, 1, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stnVimuxMplsOutgoingLabelDroppedPackets.setStatus('current')
mibBuilder.exportSymbols("STN-VIMUX-MPLS-MIB", stnVimuxMplsLinkPhysIfIndex=stnVimuxMplsLinkPhysIfIndex, stnVimuxMplsL2Entry=stnVimuxMplsL2Entry, stnVimuxMplsOutgoingLabelOutgoingIfIndex=stnVimuxMplsOutgoingLabelOutgoingIfIndex, stnVimuxMplsL2ActiveLowerLinks=stnVimuxMplsL2ActiveLowerLinks, stnVimuxMplsOutgoingLabelNexthop=stnVimuxMplsOutgoingLabelNexthop, stnVimuxMplsL2ViId=stnVimuxMplsL2ViId, stnVimuxMplsIncomingLabelReceivedPackets=stnVimuxMplsIncomingLabelReceivedPackets, stnVimuxMplsL2IfIndex=stnVimuxMplsL2IfIndex, PYSNMP_MODULE_ID=stnVimuxMpls, stnVimuxMplsObjects=stnVimuxMplsObjects, stnVimuxMplsL2InvalidInLabelPackets=stnVimuxMplsL2InvalidInLabelPackets, stnVimuxMplsIncomingLabelAction=stnVimuxMplsIncomingLabelAction, stnVimuxMplsIncomingLabelToPush2=stnVimuxMplsIncomingLabelToPush2, stnVimuxMplsIncomingLabelTtl=stnVimuxMplsIncomingLabelTtl, stnVimuxMplsIncomingLabel=stnVimuxMplsIncomingLabel, stnVimuxMpls=stnVimuxMpls, stnVimuxMplsLinkEntry=stnVimuxMplsLinkEntry, stnVimuxMplsIncomingLabelNextVimuxMplsIfIndex=stnVimuxMplsIncomingLabelNextVimuxMplsIfIndex, stnVimuxMplsOutgoingLabelIfIndex=stnVimuxMplsOutgoingLabelIfIndex, stnVimuxMplsL2State=stnVimuxMplsL2State, stnVimuxMplsOutgoingLabelDroppedPackets=stnVimuxMplsOutgoingLabelDroppedPackets, stnVimuxMplsIncomingLabelToPush3=stnVimuxMplsIncomingLabelToPush3, stnVimuxMplsOutgoingLabel=stnVimuxMplsOutgoingLabel, stnVimuxMplsLinkVimuxMplsIfIndex=stnVimuxMplsLinkVimuxMplsIfIndex, stnVimuxMplsOutgoingLabelTable=stnVimuxMplsOutgoingLabelTable, stnVimuxMplsLinkVpi=stnVimuxMplsLinkVpi, stnVimuxMplsL2RegisteredLowerLinks=stnVimuxMplsL2RegisteredLowerLinks, stnVimuxMplsLinkTable=stnVimuxMplsLinkTable, stnVimuxMplsIncomingLabelDroppedPackets=stnVimuxMplsIncomingLabelDroppedPackets, stnVimuxMplsL2Table=stnVimuxMplsL2Table, stnVimuxMplsL2InvalidOutLabelPackets=stnVimuxMplsL2InvalidOutLabelPackets, stnVimuxMplsOutgoingLabelValue=stnVimuxMplsOutgoingLabelValue, stnVimuxMplsIncomingLabelIfIndex=stnVimuxMplsIncomingLabelIfIndex, stnVimuxMplsIncomingLabelValue=stnVimuxMplsIncomingLabelValue, stnVimuxMplsLinkIfIndex=stnVimuxMplsLinkIfIndex, stnVimuxMplsL2Name=stnVimuxMplsL2Name, stnVimuxMplsIncomingLabelToPush4=stnVimuxMplsIncomingLabelToPush4, stnVimuxMplsIncomingLabelToPush1=stnVimuxMplsIncomingLabelToPush1, stnVimuxMplsIncomingLabelTable=stnVimuxMplsIncomingLabelTable, stnVimuxMplsOutgoingLabelSentPackets=stnVimuxMplsOutgoingLabelSentPackets, stnVimuxMplsLinkVci=stnVimuxMplsLinkVci)
