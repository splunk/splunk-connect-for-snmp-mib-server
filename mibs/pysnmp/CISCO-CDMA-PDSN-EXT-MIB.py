#
# PySNMP MIB module CISCO-CDMA-PDSN-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-CDMA-PDSN-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:35:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
cCdmaPcfSoPppSetupStatsEntry, cCdmaServingPdsnHostname, cCdmaPcfSoRpRegStatsEntry = mibBuilder.importSymbols("CISCO-CDMA-PDSN-MIB", "cCdmaPcfSoPppSetupStatsEntry", "cCdmaServingPdsnHostname", "cCdmaPcfSoRpRegStatsEntry")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ZeroBasedCounter32, = mibBuilder.importSymbols("RMON2-MIB", "ZeroBasedCounter32")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Gauge32, Counter64, ModuleIdentity, TimeTicks, NotificationType, Integer32, MibIdentifier, IpAddress, Bits, Counter32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Gauge32", "Counter64", "ModuleIdentity", "TimeTicks", "NotificationType", "Integer32", "MibIdentifier", "IpAddress", "Bits", "Counter32", "iso")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
ciscoCdmaPdsnExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 669))
ciscoCdmaPdsnExtMIB.setRevisions(('2010-07-20 00:00', '2010-06-08 00:00', '2009-09-17 00:00', '2008-08-08 00:00',))
if mibBuilder.loadTexts: ciscoCdmaPdsnExtMIB.setLastUpdated('201007200000Z')
if mibBuilder.loadTexts: ciscoCdmaPdsnExtMIB.setOrganization('Cisco Systems, Inc.')
ciscoCdmaPdsnExtMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 669, 0))
ciscoCdmaPdsnExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 669, 1))
ciscoCdmaPdsnExtMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 669, 2))
ccpCdmaExtSystemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 1))
ccpCdmaExtPerformanceStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2))
ccpCdmaExtRpErrors = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 3))
ccpCdmaExtNotifObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 4))
ccpCdmaExtRPRegReqErrors = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 3, 1))
ccpCdmaExtRsvpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 1))
ccpCdmaExtQosStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 2))
ccpCdmaExtBandwidthPolicyStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 3))
ccpCdmaExtRpRegStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 4))
ccpCdmaExtRpSessUpdStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 5))
ccpCdmaExtPcfSoRpRegStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 6))
ccpCdmaExtPcfSoPppSetupStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7))
ccpCdmaExtRohcStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 8))
ccpCdmaExtTotalBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 1, 1), Gauge32()).setUnits('bits/sec').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtTotalBandwidth.setStatus('current')
ccpCdmaExtAvailableBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 1, 2), Gauge32()).setUnits('bits/sec').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtAvailableBandwidth.setStatus('current')
ccpCdmaExtAllocatedBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 1, 3), Gauge32()).setUnits('bits/sec').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtAllocatedBandwidth.setStatus('current')
ccpCdmaExtSessionAuxConnectionsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccpCdmaExtSessionAuxConnectionsEnabled.setStatus('current')
ccpCdmaExtSessionMaxAuxConnectionsAllowed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtSessionMaxAuxConnectionsAllowed.setStatus('current')
ccpCdmaExtSessionAuxConnectionsTotal = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtSessionAuxConnectionsTotal.setStatus('current')
ccpCdmaExtPolicingEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccpCdmaExtPolicingEnabled.setStatus('current')
ccpCdmaExtAuxSessionTotal = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtAuxSessionTotal.setStatus('current')
ccpCdmaExtPolicingSessionTotal = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPolicingSessionTotal.setStatus('current')
ccpCdmaExtDscpSession = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtDscpSession.setStatus('current')
ccpCdmaExtLoadHighReachedNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccpCdmaExtLoadHighReachedNotifEnabled.setStatus('current')
ccpCdmaExtCacEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccpCdmaExtCacEnabled.setStatus('current')
ccpCdmaExtRohcEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 1, 13), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccpCdmaExtRohcEnabled.setStatus('current')
ccpCdmaExtRohcAuxA10sCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRohcAuxA10sCount.setStatus('current')
ccpCdmaExtRpReRegNewAuxConnections = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 4, 1), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRpReRegNewAuxConnections.setStatus('current')
ccpCdmaExtRpReRegCloseAuxConnections = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 4, 2), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRpReRegCloseAuxConnections.setStatus('current')
ccpCdmaExtRpReRegRemapFlows = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 4, 4), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRpReRegRemapFlows.setStatus('current')
ccpCdmaExtRpRegNewAuxConnections = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 4, 5), Counter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRpRegNewAuxConnections.setStatus('current')
ccpCdmaExtRpSessionUpdSubQoses = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 5, 1), ZeroBasedCounter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRpSessionUpdSubQoses.setStatus('current')
ccpCdmaExtRsvpCreationSuccessTfts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 1, 1), Counter32()).setUnits('passes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRsvpCreationSuccessTfts.setStatus('current')
ccpCdmaExtRsvpCreationFailureTfts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 1, 2), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRsvpCreationFailureTfts.setStatus('current')
ccpCdmaExtRsvpPacketFilterAddFailureTfts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 1, 3), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRsvpPacketFilterAddFailureTfts.setStatus('current')
ccpCdmaExtRsvpPacketFilterUnavailableTfts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 1, 4), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRsvpPacketFilterUnavailableTfts.setStatus('current')
ccpCdmaExtRsvpPacketFilterReplaceFailureTfts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 1, 5), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRsvpPacketFilterReplaceFailureTfts.setStatus('current')
ccpCdmaExtRsvpPacketFilterAddBeforeCreationTfts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 1, 6), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRsvpPacketFilterAddBeforeCreationTfts.setStatus('current')
ccpCdmaExtRsvpUnableToParseTfts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 1, 7), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRsvpUnableToParseTfts.setStatus('current')
ccpCdmaExtRsvpPrecedenceContentionTfts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 1, 8), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRsvpPrecedenceContentionTfts.setStatus('current')
ccpCdmaExtRsvpTreatmentUnsupportedTfts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 1, 9), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRsvpTreatmentUnsupportedTfts.setStatus('current')
ccpCdmaExtRsvpMaxPacketFiltersReachedTfts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 1, 10), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRsvpMaxPacketFiltersReachedTfts.setStatus('current')
ccpCdmaExtRsvpUnAuthorizeTfts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 1, 11), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRsvpUnAuthorizeTfts.setStatus('current')
ccpCdmaExtBandwidthPolicyInstallSuccesses = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 3, 1), Counter32()).setUnits('passes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtBandwidthPolicyInstallSuccesses.setStatus('current')
ccpCdmaExtBandwidthPolicyInstallFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 3, 2), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtBandwidthPolicyInstallFailures.setStatus('current')
ccpCdmaExtBandwidthPolicyRemoves = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 3, 3), Counter32()).setUnits('passes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtBandwidthPolicyRemoves.setStatus('current')
ccpCdmaExtQosSuccesses = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 2, 1), Counter32()).setUnits('passes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtQosSuccesses.setStatus('current')
ccpCdmaExtQosFailures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 2, 2), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtQosFailures.setStatus('current')
ccpCdmaExtQosDscpRemarkedPkts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 2, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtQosDscpRemarkedPkts.setStatus('current')
ccpCdmaExtRohcSuccessCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 8, 1), Counter32()).setUnits('passes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRohcSuccessCount.setStatus('current')
ccpCdmaExtRohcFailuresCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 8, 2), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRohcFailuresCount.setStatus('current')
ccpCdmaExtRohcOutIpPkts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 8, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRohcOutIpPkts.setStatus('current')
ccpCdmaExtRohcOutIpBytes = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 8, 4), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRohcOutIpBytes.setStatus('current')
ccpCdmaExtRohcDeCompSuccessCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 8, 5), Counter32()).setUnits('passes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRohcDeCompSuccessCount.setStatus('current')
ccpCdmaExtRohcDeCompFailuresCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 8, 6), Counter32()).setUnits('failures').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRohcDeCompFailuresCount.setStatus('current')
ccpCdmaExtRohcDeCompOutIpPkts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 8, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRohcDeCompOutIpPkts.setStatus('current')
ccpCdmaExtRohcDeCompOutIpBytes = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 8, 8), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRohcDeCompOutIpBytes.setStatus('current')
ccpCdmaExtRegReqBwUnavailableSess = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 3, 1, 1), ZeroBasedCounter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRegReqBwUnavailableSess.setStatus('current')
ccpCdmaExtRegReqMaxServiceFlows = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 3, 1, 2), ZeroBasedCounter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRegReqMaxServiceFlows.setStatus('current')
ccpCdmaExtRegReqUnSupportedSOs = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 3, 1, 3), ZeroBasedCounter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRegReqUnSupportedSOs.setStatus('current')
ccpCdmaExtRegReqNonExistA10s = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 3, 1, 4), ZeroBasedCounter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRegReqNonExistA10s.setStatus('current')
ccpCdmaExtRegReqNoCIDAvailable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 3, 1, 5), ZeroBasedCounter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtRegReqNoCIDAvailable.setStatus('current')
ccpCdmaExtPcfSoRpRegStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 6, 1), )
if mibBuilder.loadTexts: ccpCdmaExtPcfSoRpRegStatsTable.setStatus('current')
ccpCdmaExtPcfSoRpRegStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 6, 1, 1), )
cCdmaPcfSoRpRegStatsEntry.registerAugmentions(("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoRpRegStatsEntry"))
ccpCdmaExtPcfSoRpRegStatsEntry.setIndexNames(*cCdmaPcfSoRpRegStatsEntry.getIndexNames())
if mibBuilder.loadTexts: ccpCdmaExtPcfSoRpRegStatsEntry.setStatus('current')
ccpCdmaExtPcfSoStatsTotalAuxConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 6, 1, 1, 1), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoStatsTotalAuxConnections.setStatus('current')
ccpCdmaExtPcfSoRpRegStatsNewAuxConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 6, 1, 1, 2), ZeroBasedCounter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoRpRegStatsNewAuxConnections.setStatus('current')
ccpCdmaExtPcfSoRpReRegStatsNewAuxConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 6, 1, 1, 3), ZeroBasedCounter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoRpReRegStatsNewAuxConnections.setStatus('current')
ccpCdmaExtPcfSoRpReRegStatsCloseAuxConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 6, 1, 1, 4), ZeroBasedCounter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoRpReRegStatsCloseAuxConnections.setStatus('current')
ccpCdmaExtPcfSoRpReRegStatsRemapFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 6, 1, 1, 5), ZeroBasedCounter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoRpReRegStatsRemapFlows.setStatus('current')
ccpCdmaExtPcfSoRpRegStatsBwUnavailableSess = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 6, 1, 1, 6), ZeroBasedCounter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoRpRegStatsBwUnavailableSess.setStatus('current')
ccpCdmaExtPcfSoRpRegStatsSessionUpdSubQoses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 6, 1, 1, 7), ZeroBasedCounter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoRpRegStatsSessionUpdSubQoses.setStatus('current')
ccpCdmaExtPcfSoRpRegStatsMaxServiceFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 6, 1, 1, 8), ZeroBasedCounter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoRpRegStatsMaxServiceFlows.setStatus('current')
ccpCdmaExtPcfSoRpRegStatsUnsupportedSOs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 6, 1, 1, 9), ZeroBasedCounter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoRpRegStatsUnsupportedSOs.setStatus('current')
ccpCdmaExtPcfSoRpRegStatsNonExistA10s = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 6, 1, 1, 10), ZeroBasedCounter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoRpRegStatsNonExistA10s.setStatus('current')
ccpCdmaExtPcfSoRpRegStatsNoCIDAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 6, 1, 1, 11), ZeroBasedCounter32()).setUnits('messages').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoRpRegStatsNoCIDAvailable.setStatus('current')
ccpCdmaExtPcfSoPppSetupStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1), )
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppSetupStatsTable.setStatus('current')
ccpCdmaExtPcfSoPppSetupStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1), )
cCdmaPcfSoPppSetupStatsEntry.registerAugmentions(("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppSetupStatsEntry"))
ccpCdmaExtPcfSoPppSetupStatsEntry.setIndexNames(*cCdmaPcfSoPppSetupStatsEntry.getIndexNames())
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppSetupStatsEntry.setStatus('current')
ccpCdmaExtPcfSoPppPreLCPPdsnA10Rls = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 1), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppPreLCPPdsnA10Rls.setStatus('current')
ccpCdmaExtPcfSoPppPreLCPPcfA10Rls = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 2), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppPreLCPPcfA10Rls.setStatus('current')
ccpCdmaExtPcfSoPppLcpOptionIssueFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 3), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppLcpOptionIssueFailures.setStatus('current')
ccpCdmaExtPcfSoPppLcpFailuresMaxRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 4), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppLcpFailuresMaxRetrans.setStatus('current')
ccpCdmaExtPcfSoPppLcpFailuresUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 5), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppLcpFailuresUnknown.setStatus('current')
ccpCdmaExtPcfSoPppLcpPhaseRxTermreqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 6), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppLcpPhaseRxTermreqs.setStatus('current')
ccpCdmaExtPcfSoPppLcpPcfA10Rls = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 7), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppLcpPcfA10Rls.setStatus('current')
ccpCdmaExtPcfSoPppAuthFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 8), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppAuthFailures.setStatus('current')
ccpCdmaExtPcfSoPppAuthAAATimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 9), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppAuthAAATimeouts.setStatus('current')
ccpCdmaExtPcfSoPppAuthFailuresUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 10), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppAuthFailuresUnknown.setStatus('current')
ccpCdmaExtPcfSoPppAuthMaxRetransFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 11), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppAuthMaxRetransFailures.setStatus('current')
ccpCdmaExtPcfSoPppAuthPhaseRxTermreqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 12), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppAuthPhaseRxTermreqs.setStatus('current')
ccpCdmaExtPcfSoPppAuthPcfA10Rls = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 13), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppAuthPcfA10Rls.setStatus('current')
ccpCdmaExtPcfSoPppIpcpOptionIssueFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 14), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppIpcpOptionIssueFailures.setStatus('current')
ccpCdmaExtPcfSoPppIpcpFailuresMaxRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 15), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppIpcpFailuresMaxRetrans.setStatus('current')
ccpCdmaExtPcfSoPppIpcpFailuresUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 16), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppIpcpFailuresUnknown.setStatus('current')
ccpCdmaExtPcfSoPppIpcpPhaseRxTermreqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 17), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppIpcpPhaseRxTermreqs.setStatus('current')
ccpCdmaExtPcfSoPppIpcpPcfA10Rls = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 18), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppIpcpPcfA10Rls.setStatus('current')
ccpCdmaExtPcfSoPppIpcpIpResourceFail = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 19), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppIpcpIpResourceFail.setStatus('current')
ccpCdmaExtPcfSoPppRenegTotalReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 20), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppRenegTotalReqs.setStatus('current')
ccpCdmaExtPcfSoPppRenegByPdsnReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 21), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppRenegByPdsnReqs.setStatus('current')
ccpCdmaExtPcfSoPppRenegByMobileReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 22), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppRenegByMobileReqs.setStatus('current')
ccpCdmaExtPcfSoPppRenegSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 23), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppRenegSuccesses.setStatus('current')
ccpCdmaExtPcfSoPppRenegFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 24), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppRenegFailures.setStatus('current')
ccpCdmaExtPcfSoPppRenegConnectionsAborted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 25), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppRenegConnectionsAborted.setStatus('current')
ccpCdmaExtPcfSoPppRenegAddrMismatchReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 26), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppRenegAddrMismatchReqs.setStatus('current')
ccpCdmaExtPcfSoPppRenegAccessNwIdChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 27), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppRenegAccessNwIdChanges.setStatus('current')
ccpCdmaExtPcfSoPppRenegGreChangeReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 28), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppRenegGreChangeReqs.setStatus('current')
ccpCdmaExtPcfSoPppRenegOtherReasonReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 2, 7, 1, 1, 29), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccpCdmaExtPcfSoPppRenegOtherReasonReqs.setStatus('current')
ccpCdmaExtNotifReason = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bandwidth", 1), ("cputhreshold", 2), ("procthreshold", 3), ("iomemthreshold", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ccpCdmaExtNotifReason.setStatus('current')
ccpCdmaExtNotifReasonCurrentValue = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 669, 1, 4, 4), Gauge32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ccpCdmaExtNotifReasonCurrentValue.setStatus('current')
ciscoCdmaExtLoadLowReachedNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 669, 0, 1)).setObjects(("CISCO-CDMA-PDSN-MIB", "cCdmaServingPdsnHostname"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtNotifReason"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtNotifReasonCurrentValue"))
if mibBuilder.loadTexts: ciscoCdmaExtLoadLowReachedNotif.setStatus('current')
ciscoCdmaExtLoadHighReachedNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 669, 0, 2)).setObjects(("CISCO-CDMA-PDSN-MIB", "cCdmaServingPdsnHostname"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtNotifReason"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtNotifReasonCurrentValue"))
if mibBuilder.loadTexts: ciscoCdmaExtLoadHighReachedNotif.setStatus('current')
ciscoCdmaPdsnExtMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 669, 2, 1))
ciscoCdmaPdsnExtMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 669, 2, 2))
ciscoCdmaPdsnExtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 669, 2, 1, 1)).setObjects(("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtSystemPdsnGroup"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtPdsnPcfSoRpRegGroup"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtNotifPdsnGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdmaPdsnExtMIBCompliance = ciscoCdmaPdsnExtMIBCompliance.setStatus('deprecated')
ciscoCdmaPdsnExtMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 669, 2, 1, 2)).setObjects(("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtSystemPdsnGroup"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtPdsnPcfSoRpRegGroup"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtPdsnPcfSoPppGroup"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtSystemPdsnCacGroup"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtNotifPdsnGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdmaPdsnExtMIBComplianceRev1 = ciscoCdmaPdsnExtMIBComplianceRev1.setStatus('deprecated')
ciscoCdmaPdsnExtMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 669, 2, 1, 3)).setObjects(("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtSystemPdsnGroup"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtPdsnPcfSoRpRegGroup"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtPdsnPcfSoPppGroup"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtSystemPdsnCacGroup"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtNotifPdsnGroup"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtSystemPdsnGroupSupR01"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdmaPdsnExtMIBComplianceRev2 = ciscoCdmaPdsnExtMIBComplianceRev2.setStatus('deprecated')
ciscoCdmaPdsnExtMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 669, 2, 1, 4)).setObjects(("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtSystemPdsnGroup"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtPdsnPcfSoRpRegGroup"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtPdsnPcfSoPppGroup"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtSystemPdsnCacGroup"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtNotifPdsnGroup"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtSystemPdsnGroupSupR01"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtPdsnPcfSoRpRegGroupSupR01"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtSystemPdsnGroupSupR02"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdmaPdsnExtMIBComplianceRev3 = ciscoCdmaPdsnExtMIBComplianceRev3.setStatus('current')
ciscoCdmaExtSystemPdsnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 669, 2, 2, 1)).setObjects(("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRsvpCreationFailureTfts"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRsvpPacketFilterAddFailureTfts"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRsvpPacketFilterUnavailableTfts"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRsvpPacketFilterReplaceFailureTfts"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRsvpPacketFilterAddBeforeCreationTfts"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRsvpUnableToParseTfts"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRsvpPrecedenceContentionTfts"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRsvpTreatmentUnsupportedTfts"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRsvpMaxPacketFiltersReachedTfts"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRsvpCreationSuccessTfts"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRsvpUnAuthorizeTfts"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtQosSuccesses"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtQosFailures"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtQosDscpRemarkedPkts"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtAuxSessionTotal"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPolicingSessionTotal"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtDscpSession"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtBandwidthPolicyInstallFailures"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtBandwidthPolicyRemoves"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtBandwidthPolicyInstallSuccesses"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRpReRegNewAuxConnections"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRpReRegCloseAuxConnections"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRpReRegRemapFlows"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRpRegNewAuxConnections"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtNotifReason"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtNotifReasonCurrentValue"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtSessionAuxConnectionsTotal"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtAvailableBandwidth"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPolicingEnabled"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtTotalBandwidth"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtAllocatedBandwidth"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtSessionAuxConnectionsEnabled"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtLoadHighReachedNotifEnabled"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtSessionMaxAuxConnectionsAllowed"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRpSessionUpdSubQoses"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRegReqMaxServiceFlows"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRegReqUnSupportedSOs"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRegReqNonExistA10s"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRegReqBwUnavailableSess"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdmaExtSystemPdsnGroup = ciscoCdmaExtSystemPdsnGroup.setStatus('current')
ciscoCdmaExtNotifPdsnGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 669, 2, 2, 2)).setObjects(("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtLoadLowReachedNotif"), ("CISCO-CDMA-PDSN-EXT-MIB", "ciscoCdmaExtLoadHighReachedNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdmaExtNotifPdsnGroup = ciscoCdmaExtNotifPdsnGroup.setStatus('current')
ciscoCdmaExtPdsnPcfSoRpRegGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 669, 2, 2, 3)).setObjects(("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoStatsTotalAuxConnections"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoRpRegStatsNewAuxConnections"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoRpReRegStatsNewAuxConnections"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoRpReRegStatsCloseAuxConnections"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoRpReRegStatsRemapFlows"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoRpRegStatsSessionUpdSubQoses"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoRpRegStatsMaxServiceFlows"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoRpRegStatsUnsupportedSOs"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoRpRegStatsNonExistA10s"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoRpRegStatsBwUnavailableSess"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdmaExtPdsnPcfSoRpRegGroup = ciscoCdmaExtPdsnPcfSoRpRegGroup.setStatus('current')
ciscoCdmaExtSystemPdsnCacGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 669, 2, 2, 4)).setObjects(("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtCacEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdmaExtSystemPdsnCacGroup = ciscoCdmaExtSystemPdsnCacGroup.setStatus('current')
ciscoCdmaExtPdsnPcfSoPppGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 669, 2, 2, 5)).setObjects(("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppPreLCPPdsnA10Rls"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppPreLCPPcfA10Rls"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppLcpOptionIssueFailures"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppLcpFailuresMaxRetrans"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppLcpFailuresUnknown"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppLcpPhaseRxTermreqs"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppLcpPcfA10Rls"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppAuthFailures"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppAuthAAATimeouts"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppAuthMaxRetransFailures"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppAuthPhaseRxTermreqs"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppAuthFailuresUnknown"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppAuthPcfA10Rls"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppIpcpOptionIssueFailures"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppIpcpFailuresMaxRetrans"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppIpcpFailuresUnknown"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppIpcpPhaseRxTermreqs"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppIpcpPcfA10Rls"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppIpcpIpResourceFail"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppRenegTotalReqs"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppRenegByPdsnReqs"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppRenegByMobileReqs"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppRenegSuccesses"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppRenegFailures"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppRenegConnectionsAborted"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppRenegAddrMismatchReqs"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppRenegAccessNwIdChanges"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppRenegGreChangeReqs"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoPppRenegOtherReasonReqs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdmaExtPdsnPcfSoPppGroup = ciscoCdmaExtPdsnPcfSoPppGroup.setStatus('current')
ciscoCdmaExtSystemPdsnGroupSupR01 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 669, 2, 2, 6)).setObjects(("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRohcEnabled"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRohcSuccessCount"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRohcFailuresCount"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRohcOutIpPkts"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRohcOutIpBytes"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRohcDeCompSuccessCount"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRohcDeCompFailuresCount"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRohcDeCompOutIpPkts"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRohcDeCompOutIpBytes"), ("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRohcAuxA10sCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdmaExtSystemPdsnGroupSupR01 = ciscoCdmaExtSystemPdsnGroupSupR01.setStatus('current')
ciscoCdmaExtPdsnPcfSoRpRegGroupSupR01 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 669, 2, 2, 7)).setObjects(("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtPcfSoRpRegStatsNoCIDAvailable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdmaExtPdsnPcfSoRpRegGroupSupR01 = ciscoCdmaExtPdsnPcfSoRpRegGroupSupR01.setStatus('current')
ciscoCdmaExtSystemPdsnGroupSupR02 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 669, 2, 2, 8)).setObjects(("CISCO-CDMA-PDSN-EXT-MIB", "ccpCdmaExtRegReqNoCIDAvailable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdmaExtSystemPdsnGroupSupR02 = ciscoCdmaExtSystemPdsnGroupSupR02.setStatus('current')
mibBuilder.exportSymbols("CISCO-CDMA-PDSN-EXT-MIB", ccpCdmaExtNotifReasonCurrentValue=ccpCdmaExtNotifReasonCurrentValue, ciscoCdmaExtSystemPdsnGroupSupR02=ciscoCdmaExtSystemPdsnGroupSupR02, ciscoCdmaPdsnExtMIBConformance=ciscoCdmaPdsnExtMIBConformance, ccpCdmaExtSessionAuxConnectionsEnabled=ccpCdmaExtSessionAuxConnectionsEnabled, ccpCdmaExtRsvpUnableToParseTfts=ccpCdmaExtRsvpUnableToParseTfts, ccpCdmaExtPcfSoPppRenegByMobileReqs=ccpCdmaExtPcfSoPppRenegByMobileReqs, ccpCdmaExtRohcDeCompOutIpBytes=ccpCdmaExtRohcDeCompOutIpBytes, ccpCdmaExtPcfSoPppIpcpPhaseRxTermreqs=ccpCdmaExtPcfSoPppIpcpPhaseRxTermreqs, ccpCdmaExtRohcFailuresCount=ccpCdmaExtRohcFailuresCount, ccpCdmaExtRegReqNoCIDAvailable=ccpCdmaExtRegReqNoCIDAvailable, ccpCdmaExtAllocatedBandwidth=ccpCdmaExtAllocatedBandwidth, ccpCdmaExtRpRegStats=ccpCdmaExtRpRegStats, ccpCdmaExtBandwidthPolicyInstallSuccesses=ccpCdmaExtBandwidthPolicyInstallSuccesses, ccpCdmaExtPcfSoRpRegStatsEntry=ccpCdmaExtPcfSoRpRegStatsEntry, ccpCdmaExtPcfSoPppRenegTotalReqs=ccpCdmaExtPcfSoPppRenegTotalReqs, ciscoCdmaExtNotifPdsnGroup=ciscoCdmaExtNotifPdsnGroup, ccpCdmaExtPerformanceStats=ccpCdmaExtPerformanceStats, ccpCdmaExtRsvpCreationFailureTfts=ccpCdmaExtRsvpCreationFailureTfts, ccpCdmaExtPcfSoPppAuthMaxRetransFailures=ccpCdmaExtPcfSoPppAuthMaxRetransFailures, ccpCdmaExtRohcSuccessCount=ccpCdmaExtRohcSuccessCount, ccpCdmaExtPcfSoPppRenegAddrMismatchReqs=ccpCdmaExtPcfSoPppRenegAddrMismatchReqs, ccpCdmaExtRPRegReqErrors=ccpCdmaExtRPRegReqErrors, ccpCdmaExtRpSessUpdStats=ccpCdmaExtRpSessUpdStats, ciscoCdmaPdsnExtMIBCompliance=ciscoCdmaPdsnExtMIBCompliance, ccpCdmaExtPcfSoPppRenegByPdsnReqs=ccpCdmaExtPcfSoPppRenegByPdsnReqs, ccpCdmaExtSessionMaxAuxConnectionsAllowed=ccpCdmaExtSessionMaxAuxConnectionsAllowed, ccpCdmaExtPcfSoPppRenegGreChangeReqs=ccpCdmaExtPcfSoPppRenegGreChangeReqs, ccpCdmaExtSessionAuxConnectionsTotal=ccpCdmaExtSessionAuxConnectionsTotal, ccpCdmaExtRsvpPacketFilterAddBeforeCreationTfts=ccpCdmaExtRsvpPacketFilterAddBeforeCreationTfts, ccpCdmaExtPcfSoRpReRegStatsCloseAuxConnections=ccpCdmaExtPcfSoRpReRegStatsCloseAuxConnections, ccpCdmaExtPcfSoPppLcpPhaseRxTermreqs=ccpCdmaExtPcfSoPppLcpPhaseRxTermreqs, ciscoCdmaExtLoadHighReachedNotif=ciscoCdmaExtLoadHighReachedNotif, ciscoCdmaPdsnExtMIB=ciscoCdmaPdsnExtMIB, ccpCdmaExtRsvpStats=ccpCdmaExtRsvpStats, ccpCdmaExtPolicingEnabled=ccpCdmaExtPolicingEnabled, ccpCdmaExtPcfSoPppRenegFailures=ccpCdmaExtPcfSoPppRenegFailures, ccpCdmaExtNotifReason=ccpCdmaExtNotifReason, ccpCdmaExtDscpSession=ccpCdmaExtDscpSession, ccpCdmaExtBandwidthPolicyRemoves=ccpCdmaExtBandwidthPolicyRemoves, ccpCdmaExtPcfSoRpRegStatsSessionUpdSubQoses=ccpCdmaExtPcfSoRpRegStatsSessionUpdSubQoses, ccpCdmaExtRohcOutIpBytes=ccpCdmaExtRohcOutIpBytes, ccpCdmaExtRpReRegRemapFlows=ccpCdmaExtRpReRegRemapFlows, ccpCdmaExtPcfSoPppLcpOptionIssueFailures=ccpCdmaExtPcfSoPppLcpOptionIssueFailures, ccpCdmaExtCacEnabled=ccpCdmaExtCacEnabled, ccpCdmaExtPcfSoPppRenegAccessNwIdChanges=ccpCdmaExtPcfSoPppRenegAccessNwIdChanges, ccpCdmaExtPcfSoRpReRegStatsNewAuxConnections=ccpCdmaExtPcfSoRpReRegStatsNewAuxConnections, ccpCdmaExtPcfSoPppRenegConnectionsAborted=ccpCdmaExtPcfSoPppRenegConnectionsAborted, ciscoCdmaPdsnExtMIBComplianceRev1=ciscoCdmaPdsnExtMIBComplianceRev1, ccpCdmaExtAuxSessionTotal=ccpCdmaExtAuxSessionTotal, ccpCdmaExtRohcOutIpPkts=ccpCdmaExtRohcOutIpPkts, ccpCdmaExtRohcAuxA10sCount=ccpCdmaExtRohcAuxA10sCount, ciscoCdmaExtPdsnPcfSoRpRegGroupSupR01=ciscoCdmaExtPdsnPcfSoRpRegGroupSupR01, PYSNMP_MODULE_ID=ciscoCdmaPdsnExtMIB, ciscoCdmaPdsnExtMIBComplianceRev3=ciscoCdmaPdsnExtMIBComplianceRev3, ciscoCdmaExtSystemPdsnGroupSupR01=ciscoCdmaExtSystemPdsnGroupSupR01, ccpCdmaExtPcfSoPppLcpFailuresMaxRetrans=ccpCdmaExtPcfSoPppLcpFailuresMaxRetrans, ccpCdmaExtRpRegNewAuxConnections=ccpCdmaExtRpRegNewAuxConnections, ciscoCdmaPdsnExtMIBCompliances=ciscoCdmaPdsnExtMIBCompliances, ccpCdmaExtPcfSoRpRegStatsBwUnavailableSess=ccpCdmaExtPcfSoRpRegStatsBwUnavailableSess, ciscoCdmaExtLoadLowReachedNotif=ciscoCdmaExtLoadLowReachedNotif, ccpCdmaExtPcfSoRpRegStatsUnsupportedSOs=ccpCdmaExtPcfSoRpRegStatsUnsupportedSOs, ccpCdmaExtRohcDeCompSuccessCount=ccpCdmaExtRohcDeCompSuccessCount, ciscoCdmaExtPdsnPcfSoRpRegGroup=ciscoCdmaExtPdsnPcfSoRpRegGroup, ccpCdmaExtBandwidthPolicyStats=ccpCdmaExtBandwidthPolicyStats, ciscoCdmaPdsnExtMIBObjects=ciscoCdmaPdsnExtMIBObjects, ciscoCdmaPdsnExtMIBGroups=ciscoCdmaPdsnExtMIBGroups, ccpCdmaExtPolicingSessionTotal=ccpCdmaExtPolicingSessionTotal, ccpCdmaExtRsvpMaxPacketFiltersReachedTfts=ccpCdmaExtRsvpMaxPacketFiltersReachedTfts, ccpCdmaExtPcfSoPppPreLCPPdsnA10Rls=ccpCdmaExtPcfSoPppPreLCPPdsnA10Rls, ccpCdmaExtRsvpPacketFilterAddFailureTfts=ccpCdmaExtRsvpPacketFilterAddFailureTfts, ccpCdmaExtRsvpUnAuthorizeTfts=ccpCdmaExtRsvpUnAuthorizeTfts, ccpCdmaExtBandwidthPolicyInstallFailures=ccpCdmaExtBandwidthPolicyInstallFailures, ciscoCdmaPdsnExtMIBNotifs=ciscoCdmaPdsnExtMIBNotifs, ccpCdmaExtRsvpPacketFilterReplaceFailureTfts=ccpCdmaExtRsvpPacketFilterReplaceFailureTfts, ccpCdmaExtPcfSoRpRegStatsNonExistA10s=ccpCdmaExtPcfSoRpRegStatsNonExistA10s, ccpCdmaExtSystemInfo=ccpCdmaExtSystemInfo, ccpCdmaExtPcfSoPppSetupStatsTable=ccpCdmaExtPcfSoPppSetupStatsTable, ccpCdmaExtRohcEnabled=ccpCdmaExtRohcEnabled, ccpCdmaExtPcfSoPppIpcpPcfA10Rls=ccpCdmaExtPcfSoPppIpcpPcfA10Rls, ccpCdmaExtPcfSoPppIpcpIpResourceFail=ccpCdmaExtPcfSoPppIpcpIpResourceFail, ccpCdmaExtPcfSoRpRegStats=ccpCdmaExtPcfSoRpRegStats, ccpCdmaExtPcfSoPppLcpPcfA10Rls=ccpCdmaExtPcfSoPppLcpPcfA10Rls, ccpCdmaExtPcfSoPppRenegOtherReasonReqs=ccpCdmaExtPcfSoPppRenegOtherReasonReqs, ciscoCdmaExtSystemPdsnGroup=ciscoCdmaExtSystemPdsnGroup, ccpCdmaExtPcfSoRpRegStatsNoCIDAvailable=ccpCdmaExtPcfSoRpRegStatsNoCIDAvailable, ccpCdmaExtPcfSoPppAuthFailures=ccpCdmaExtPcfSoPppAuthFailures, ccpCdmaExtRpErrors=ccpCdmaExtRpErrors, ccpCdmaExtRsvpPacketFilterUnavailableTfts=ccpCdmaExtRsvpPacketFilterUnavailableTfts, ccpCdmaExtPcfSoRpRegStatsMaxServiceFlows=ccpCdmaExtPcfSoRpRegStatsMaxServiceFlows, ccpCdmaExtPcfSoPppRenegSuccesses=ccpCdmaExtPcfSoPppRenegSuccesses, ccpCdmaExtRegReqUnSupportedSOs=ccpCdmaExtRegReqUnSupportedSOs, ccpCdmaExtQosFailures=ccpCdmaExtQosFailures, ccpCdmaExtLoadHighReachedNotifEnabled=ccpCdmaExtLoadHighReachedNotifEnabled, ccpCdmaExtPcfSoPppLcpFailuresUnknown=ccpCdmaExtPcfSoPppLcpFailuresUnknown, ciscoCdmaPdsnExtMIBComplianceRev2=ciscoCdmaPdsnExtMIBComplianceRev2, ccpCdmaExtPcfSoPppIpcpFailuresUnknown=ccpCdmaExtPcfSoPppIpcpFailuresUnknown, ccpCdmaExtRegReqBwUnavailableSess=ccpCdmaExtRegReqBwUnavailableSess, ccpCdmaExtRsvpTreatmentUnsupportedTfts=ccpCdmaExtRsvpTreatmentUnsupportedTfts, ciscoCdmaExtSystemPdsnCacGroup=ciscoCdmaExtSystemPdsnCacGroup, ccpCdmaExtTotalBandwidth=ccpCdmaExtTotalBandwidth, ccpCdmaExtPcfSoPppAuthPcfA10Rls=ccpCdmaExtPcfSoPppAuthPcfA10Rls, ccpCdmaExtPcfSoPppAuthPhaseRxTermreqs=ccpCdmaExtPcfSoPppAuthPhaseRxTermreqs, ccpCdmaExtNotifObjects=ccpCdmaExtNotifObjects, ccpCdmaExtPcfSoPppIpcpFailuresMaxRetrans=ccpCdmaExtPcfSoPppIpcpFailuresMaxRetrans, ccpCdmaExtQosSuccesses=ccpCdmaExtQosSuccesses, ccpCdmaExtPcfSoRpReRegStatsRemapFlows=ccpCdmaExtPcfSoRpReRegStatsRemapFlows, ccpCdmaExtRegReqNonExistA10s=ccpCdmaExtRegReqNonExistA10s, ccpCdmaExtPcfSoPppSetupStatsEntry=ccpCdmaExtPcfSoPppSetupStatsEntry, ccpCdmaExtRpReRegCloseAuxConnections=ccpCdmaExtRpReRegCloseAuxConnections, ccpCdmaExtPcfSoPppPreLCPPcfA10Rls=ccpCdmaExtPcfSoPppPreLCPPcfA10Rls, ccpCdmaExtPcfSoPppAuthAAATimeouts=ccpCdmaExtPcfSoPppAuthAAATimeouts, ccpCdmaExtRsvpPrecedenceContentionTfts=ccpCdmaExtRsvpPrecedenceContentionTfts, ccpCdmaExtPcfSoRpRegStatsTable=ccpCdmaExtPcfSoRpRegStatsTable, ccpCdmaExtRohcDeCompOutIpPkts=ccpCdmaExtRohcDeCompOutIpPkts, ccpCdmaExtPcfSoPppSetupStats=ccpCdmaExtPcfSoPppSetupStats, ccpCdmaExtQosDscpRemarkedPkts=ccpCdmaExtQosDscpRemarkedPkts, ciscoCdmaExtPdsnPcfSoPppGroup=ciscoCdmaExtPdsnPcfSoPppGroup, ccpCdmaExtRegReqMaxServiceFlows=ccpCdmaExtRegReqMaxServiceFlows, ccpCdmaExtRohcStats=ccpCdmaExtRohcStats, ccpCdmaExtPcfSoPppIpcpOptionIssueFailures=ccpCdmaExtPcfSoPppIpcpOptionIssueFailures, ccpCdmaExtRpSessionUpdSubQoses=ccpCdmaExtRpSessionUpdSubQoses, ccpCdmaExtRohcDeCompFailuresCount=ccpCdmaExtRohcDeCompFailuresCount, ccpCdmaExtQosStats=ccpCdmaExtQosStats, ccpCdmaExtPcfSoRpRegStatsNewAuxConnections=ccpCdmaExtPcfSoRpRegStatsNewAuxConnections, ccpCdmaExtRpReRegNewAuxConnections=ccpCdmaExtRpReRegNewAuxConnections, ccpCdmaExtPcfSoStatsTotalAuxConnections=ccpCdmaExtPcfSoStatsTotalAuxConnections, ccpCdmaExtRsvpCreationSuccessTfts=ccpCdmaExtRsvpCreationSuccessTfts, ccpCdmaExtAvailableBandwidth=ccpCdmaExtAvailableBandwidth, ccpCdmaExtPcfSoPppAuthFailuresUnknown=ccpCdmaExtPcfSoPppAuthFailuresUnknown)
