#
# PySNMP MIB module Nortel-Magellan-Passport-ImaMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-ImaMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:18:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
lpIndex, lp = mibBuilder.importSymbols("Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex", "lp")
DisplayString, Counter32, StorageType, Integer32, PassportCounter64, RowStatus, Unsigned32, Gauge32 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "DisplayString", "Counter32", "StorageType", "Integer32", "PassportCounter64", "RowStatus", "Unsigned32", "Gauge32")
Link, NonReplicated, Hex, AsciiString = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "Link", "NonReplicated", "Hex", "AsciiString")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Counter32, ObjectIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Unsigned32, ModuleIdentity, MibIdentifier, Gauge32, Bits, iso, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Counter32", "ObjectIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Unsigned32", "ModuleIdentity", "MibIdentifier", "Gauge32", "Bits", "iso", "IpAddress", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
imaMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 115))
lpIma = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22))
lpImaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 1), )
if mibBuilder.loadTexts: lpImaRowStatusTable.setStatus('mandatory')
lpImaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaIndex"))
if mibBuilder.loadTexts: lpImaRowStatusEntry.setStatus('mandatory')
lpImaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpImaRowStatus.setStatus('mandatory')
lpImaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaComponentName.setStatus('mandatory')
lpImaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaStorageType.setStatus('mandatory')
lpImaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: lpImaIndex.setStatus('mandatory')
lpImaProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 10), )
if mibBuilder.loadTexts: lpImaProvTable.setStatus('mandatory')
lpImaProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaIndex"))
if mibBuilder.loadTexts: lpImaProvEntry.setStatus('mandatory')
lpImaLinkSelectionCriterion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("leastDelay", 0), ("maxBandwidth", 1))).clone('maxBandwidth')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpImaLinkSelectionCriterion.setStatus('mandatory')
lpImaMaxDiffDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(25)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpImaMaxDiffDelay.setStatus('mandatory')
lpImaLinkRetryTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpImaLinkRetryTimeout.setStatus('mandatory')
lpImaApplicationFramerName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 10, 1, 4), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpImaApplicationFramerName.setStatus('mandatory')
lpImaTransmitClockMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("itc", 0), ("ctc", 1))).clone('itc')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpImaTransmitClockMode.setStatus('mandatory')
lpImaProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("atmForum10", 0), ("proprietary", 1))).clone('atmForum10')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpImaProtocol.setStatus('mandatory')
lpImaOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 11), )
if mibBuilder.loadTexts: lpImaOperTable.setStatus('mandatory')
lpImaOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaIndex"))
if mibBuilder.loadTexts: lpImaOperEntry.setStatus('mandatory')
lpImaFailureCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("noFailure", 0), ("noGoodLinksInStartup", 1), ("badGidInStartup", 2), ("badLidInStartup", 3), ("unsupportedFrameLengthInStartup", 4), ("timeoutInStartup", 5), ("noGoodLinks", 6), ("remoteFailure", 7), ("unsupportedSymmetryInStartup", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaFailureCause.setStatus('mandatory')
lpImaRemoteDefect = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("noDefect", 0), ("noGoodLinksInStartup", 1), ("badGidInStartup", 2), ("badLidInStartup", 3), ("unsupportedFrameLengthInStartup", 4), ("timeoutInStartup", 5), ("noGoodLinks", 6), ("locked", 7), ("unsupportedSymmetryInStartup", 8), ("otherAbortStartup", 9), ("insufficientLinks", 10), ("blocked", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaRemoteDefect.setStatus('mandatory')
lpImaRemoteLidsConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 11, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaRemoteLidsConfig.setStatus('mandatory')
lpImaRemoteLidsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaRemoteLidsActive.setStatus('mandatory')
lpImaCellCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaCellCapacity.setStatus('mandatory')
lpImaRemoteGid = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaRemoteGid.setStatus('mandatory')
lpImaClockingModeMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaClockingModeMismatch.setStatus('mandatory')
lpImaStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 12), )
if mibBuilder.loadTexts: lpImaStatsTable.setStatus('mandatory')
lpImaStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaIndex"))
if mibBuilder.loadTexts: lpImaStatsEntry.setStatus('mandatory')
lpImaRunningTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaRunningTime.setStatus('mandatory')
lpImaUnavailSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaUnavailSecs.setStatus('mandatory')
lpImaFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaFailures.setStatus('mandatory')
lpImaReceiveCellUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 12, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaReceiveCellUtilization.setStatus('mandatory')
lpImaTransmitCellUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 12, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaTransmitCellUtilization.setStatus('mandatory')
lpImaCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 13), )
if mibBuilder.loadTexts: lpImaCidDataTable.setStatus('mandatory')
lpImaCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaIndex"))
if mibBuilder.loadTexts: lpImaCidDataEntry.setStatus('mandatory')
lpImaCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpImaCustomerIdentifier.setStatus('mandatory')
lpImaStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 14), )
if mibBuilder.loadTexts: lpImaStateTable.setStatus('mandatory')
lpImaStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 14, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaIndex"))
if mibBuilder.loadTexts: lpImaStateEntry.setStatus('mandatory')
lpImaAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaAdminState.setStatus('mandatory')
lpImaOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaOperationalState.setStatus('mandatory')
lpImaUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaUsageState.setStatus('mandatory')
lpImaAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 14, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaAvailabilityStatus.setStatus('mandatory')
lpImaProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 14, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaProceduralStatus.setStatus('mandatory')
lpImaControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 14, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaControlStatus.setStatus('mandatory')
lpImaAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 14, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaAlarmStatus.setStatus('mandatory')
lpImaStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 14, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaStandbyStatus.setStatus('mandatory')
lpImaUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 14, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaUnknownStatus.setStatus('mandatory')
lpImaTest = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2))
lpImaTestRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 1), )
if mibBuilder.loadTexts: lpImaTestRowStatusTable.setStatus('mandatory')
lpImaTestRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaTestIndex"))
if mibBuilder.loadTexts: lpImaTestRowStatusEntry.setStatus('mandatory')
lpImaTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaTestRowStatus.setStatus('mandatory')
lpImaTestComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaTestComponentName.setStatus('mandatory')
lpImaTestStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaTestStorageType.setStatus('mandatory')
lpImaTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: lpImaTestIndex.setStatus('mandatory')
lpImaTestStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 10), )
if mibBuilder.loadTexts: lpImaTestStateTable.setStatus('mandatory')
lpImaTestStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaTestIndex"))
if mibBuilder.loadTexts: lpImaTestStateEntry.setStatus('mandatory')
lpImaTestAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaTestAdminState.setStatus('mandatory')
lpImaTestOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaTestOperationalState.setStatus('mandatory')
lpImaTestUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaTestUsageState.setStatus('mandatory')
lpImaTestSetupTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 11), )
if mibBuilder.loadTexts: lpImaTestSetupTable.setStatus('mandatory')
lpImaTestSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaTestIndex"))
if mibBuilder.loadTexts: lpImaTestSetupEntry.setStatus('mandatory')
lpImaTestPurpose = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 11, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpImaTestPurpose.setStatus('mandatory')
lpImaTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("card", 0), ("manual", 1), ("localLoop", 2), ("remoteLoop", 3), ("externalLoop", 4), ("payloadLoop", 5), ("remoteLoopThisTrib", 6), ("v54RemoteLoop", 7), ("pn127RemoteLoop", 8))).clone('card')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpImaTestType.setStatus('mandatory')
lpImaTestFrmSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 4096)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpImaTestFrmSize.setStatus('mandatory')
lpImaTestFrmPatternType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ccitt32kBitPattern", 0), ("ccitt8MBitPattern", 1), ("customizedPattern", 2))).clone('ccitt32kBitPattern')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpImaTestFrmPatternType.setStatus('mandatory')
lpImaTestCustomizedPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 11, 1, 5), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(1431655765)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpImaTestCustomizedPattern.setStatus('mandatory')
lpImaTestDataStartDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1814400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpImaTestDataStartDelay.setStatus('mandatory')
lpImaTestDisplayInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 11, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30240)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpImaTestDisplayInterval.setStatus('mandatory')
lpImaTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 11, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30240)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpImaTestDuration.setStatus('mandatory')
lpImaTestResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 12), )
if mibBuilder.loadTexts: lpImaTestResultsTable.setStatus('mandatory')
lpImaTestResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaTestIndex"))
if mibBuilder.loadTexts: lpImaTestResultsEntry.setStatus('mandatory')
lpImaTestElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaTestElapsedTime.setStatus('mandatory')
lpImaTestTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaTestTimeRemaining.setStatus('mandatory')
lpImaTestCauseOfTermination = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("testTimeExpired", 0), ("stoppedByOperator", 1), ("unknown", 2), ("neverStarted", 3), ("testRunning", 4), ("hardwareReconfigured", 5))).clone('neverStarted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaTestCauseOfTermination.setStatus('mandatory')
lpImaTestBitsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 12, 1, 4), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaTestBitsTx.setStatus('mandatory')
lpImaTestBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 12, 1, 5), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaTestBytesTx.setStatus('mandatory')
lpImaTestFrmTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 12, 1, 6), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaTestFrmTx.setStatus('mandatory')
lpImaTestBitsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 12, 1, 7), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaTestBitsRx.setStatus('mandatory')
lpImaTestBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 12, 1, 8), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaTestBytesRx.setStatus('mandatory')
lpImaTestFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 12, 1, 9), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaTestFrmRx.setStatus('mandatory')
lpImaTestErroredFrmRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 12, 1, 10), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaTestErroredFrmRx.setStatus('mandatory')
lpImaTestBitErrorRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 2, 12, 1, 11), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaTestBitErrorRate.setStatus('mandatory')
lpImaLk = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3))
lpImaLkRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 1), )
if mibBuilder.loadTexts: lpImaLkRowStatusTable.setStatus('mandatory')
lpImaLkRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaLkIndex"))
if mibBuilder.loadTexts: lpImaLkRowStatusEntry.setStatus('mandatory')
lpImaLkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpImaLkRowStatus.setStatus('mandatory')
lpImaLkComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkComponentName.setStatus('mandatory')
lpImaLkStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkStorageType.setStatus('mandatory')
lpImaLkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31)))
if mibBuilder.loadTexts: lpImaLkIndex.setStatus('mandatory')
lpImaLkProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 10), )
if mibBuilder.loadTexts: lpImaLkProvTable.setStatus('mandatory')
lpImaLkProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaLkIndex"))
if mibBuilder.loadTexts: lpImaLkProvEntry.setStatus('mandatory')
lpImaLkInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lpImaLkInterfaceName.setStatus('mandatory')
lpImaLkOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 11), )
if mibBuilder.loadTexts: lpImaLkOperTable.setStatus('mandatory')
lpImaLkOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaLkIndex"))
if mibBuilder.loadTexts: lpImaLkOperEntry.setStatus('mandatory')
lpImaLkFailureCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("noFailure", 0), ("interfaceDown", 1), ("lif", 2), ("lods", 3), ("protocolError", 4), ("remoteFailure", 5), ("misconnected", 6), ("unsupportedFrameLength", 7), ("unsupportedSymmetry", 8), ("noIcp", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkFailureCause.setStatus('mandatory')
lpImaLkRemoteDefect = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("noDefect", 0), ("physicalLayerDefect", 1), ("lif", 2), ("lods", 3), ("interfaceDown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkRemoteDefect.setStatus('mandatory')
lpImaLkRemoteLid = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkRemoteLid.setStatus('mandatory')
lpImaLkRelativeDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkRelativeDelay.setStatus('mandatory')
lpImaLkLastOifCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("noOif", 0), ("badFrameLength", 1), ("badGid", 2), ("badLid", 3), ("badOffset", 4), ("badSequenceNumber", 5), ("stuffError", 6), ("missingIcp", 7), ("unexpectedIcp", 8), ("erroredIcp", 9), ("noCells", 10), ("idleCell", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkLastOifCause.setStatus('mandatory')
lpImaLkStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 12), )
if mibBuilder.loadTexts: lpImaLkStatsTable.setStatus('mandatory')
lpImaLkStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaLkIndex"))
if mibBuilder.loadTexts: lpImaLkStatsEntry.setStatus('mandatory')
lpImaLkRunningTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkRunningTime.setStatus('mandatory')
lpImaLkUnavailSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkUnavailSecs.setStatus('mandatory')
lpImaLkFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkFailures.setStatus('mandatory')
lpImaLkUnusableSec = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkUnusableSec.setStatus('mandatory')
lpImaLkSevErroredSec = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkSevErroredSec.setStatus('mandatory')
lpImaLkFarEndUnusableSec = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkFarEndUnusableSec.setStatus('mandatory')
lpImaLkFarEndSevErroredSec = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 12, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkFarEndSevErroredSec.setStatus('mandatory')
lpImaLkFarEndUnavailSec = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 12, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkFarEndUnavailSec.setStatus('mandatory')
lpImaLkIcpViolations = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 12, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkIcpViolations.setStatus('mandatory')
lpImaLkTxStuffEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 12, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkTxStuffEvents.setStatus('mandatory')
lpImaLkRxStuffEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 12, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkRxStuffEvents.setStatus('mandatory')
lpImaLkIdleCellSec = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 12, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkIdleCellSec.setStatus('mandatory')
lpImaLkStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 13), )
if mibBuilder.loadTexts: lpImaLkStateTable.setStatus('mandatory')
lpImaLkStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-LogicalProcessorMIB", "lpIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaIndex"), (0, "Nortel-Magellan-Passport-ImaMIB", "lpImaLkIndex"))
if mibBuilder.loadTexts: lpImaLkStateEntry.setStatus('mandatory')
lpImaLkAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkAdminState.setStatus('mandatory')
lpImaLkOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkOperationalState.setStatus('mandatory')
lpImaLkUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkUsageState.setStatus('mandatory')
lpImaLkAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 13, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkAvailabilityStatus.setStatus('mandatory')
lpImaLkProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 13, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkProceduralStatus.setStatus('mandatory')
lpImaLkControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 13, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkControlStatus.setStatus('mandatory')
lpImaLkAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 13, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkAlarmStatus.setStatus('mandatory')
lpImaLkStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 13, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkStandbyStatus.setStatus('mandatory')
lpImaLkUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 12, 22, 3, 13, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: lpImaLkUnknownStatus.setStatus('mandatory')
imaGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 115, 1))
imaGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 115, 1, 5))
imaGroupBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 115, 1, 5, 1))
imaGroupBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 115, 1, 5, 1, 2))
imaCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 115, 3))
imaCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 115, 3, 5))
imaCapabilitiesBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 115, 3, 5, 1))
imaCapabilitiesBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 115, 3, 5, 1, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-ImaMIB", lpImaTestDisplayInterval=lpImaTestDisplayInterval, lpImaTestTimeRemaining=lpImaTestTimeRemaining, lpImaTestFrmTx=lpImaTestFrmTx, lpImaTestFrmPatternType=lpImaTestFrmPatternType, lpImaCustomerIdentifier=lpImaCustomerIdentifier, imaGroupBE00=imaGroupBE00, lpImaRemoteGid=lpImaRemoteGid, lpImaOperTable=lpImaOperTable, lpImaTestCauseOfTermination=lpImaTestCauseOfTermination, lpImaTestCustomizedPattern=lpImaTestCustomizedPattern, lpImaLinkSelectionCriterion=lpImaLinkSelectionCriterion, lpImaReceiveCellUtilization=lpImaReceiveCellUtilization, lpImaLkStateEntry=lpImaLkStateEntry, imaCapabilitiesBE00=imaCapabilitiesBE00, lpImaTestResultsTable=lpImaTestResultsTable, lpImaTestElapsedTime=lpImaTestElapsedTime, lpImaLkLastOifCause=lpImaLkLastOifCause, lpImaLkUnavailSecs=lpImaLkUnavailSecs, lpImaLkAvailabilityStatus=lpImaLkAvailabilityStatus, lpImaRowStatusEntry=lpImaRowStatusEntry, lpImaAlarmStatus=lpImaAlarmStatus, lpImaTestType=lpImaTestType, lpImaLkUnusableSec=lpImaLkUnusableSec, lpImaLkProvEntry=lpImaLkProvEntry, imaGroupBE=imaGroupBE, lpImaComponentName=lpImaComponentName, imaCapabilitiesBE00A=imaCapabilitiesBE00A, lpImaLkRowStatusTable=lpImaLkRowStatusTable, lpImaTestIndex=lpImaTestIndex, lpImaIndex=lpImaIndex, lpImaTestStorageType=lpImaTestStorageType, lpImaTestComponentName=lpImaTestComponentName, lpImaRowStatus=lpImaRowStatus, lpImaRemoteDefect=lpImaRemoteDefect, lpImaApplicationFramerName=lpImaApplicationFramerName, lpImaLkComponentName=lpImaLkComponentName, lpImaLkProvTable=lpImaLkProvTable, lpImaLkFarEndSevErroredSec=lpImaLkFarEndSevErroredSec, lpImaTestUsageState=lpImaTestUsageState, lpImaTestDuration=lpImaTestDuration, lpImaTestBitErrorRate=lpImaTestBitErrorRate, lpImaStatsTable=lpImaStatsTable, lpImaLk=lpImaLk, lpImaProvTable=lpImaProvTable, lpImaLkStatsTable=lpImaLkStatsTable, lpImaTransmitClockMode=lpImaTransmitClockMode, lpImaTestResultsEntry=lpImaTestResultsEntry, lpImaOperEntry=lpImaOperEntry, lpImaLkUnknownStatus=lpImaLkUnknownStatus, lpImaTestFrmSize=lpImaTestFrmSize, lpImaLkTxStuffEvents=lpImaLkTxStuffEvents, lpIma=lpIma, lpImaLkRelativeDelay=lpImaLkRelativeDelay, lpImaFailures=lpImaFailures, lpImaTestSetupTable=lpImaTestSetupTable, lpImaTestOperationalState=lpImaTestOperationalState, lpImaUnknownStatus=lpImaUnknownStatus, lpImaTestRowStatusEntry=lpImaTestRowStatusEntry, lpImaTestDataStartDelay=lpImaTestDataStartDelay, lpImaRemoteLidsActive=lpImaRemoteLidsActive, lpImaControlStatus=lpImaControlStatus, lpImaProtocol=lpImaProtocol, lpImaLkStateTable=lpImaLkStateTable, lpImaUsageState=lpImaUsageState, lpImaTransmitCellUtilization=lpImaTransmitCellUtilization, lpImaTestSetupEntry=lpImaTestSetupEntry, lpImaTestRowStatus=lpImaTestRowStatus, lpImaLkIcpViolations=lpImaLkIcpViolations, lpImaLkProceduralStatus=lpImaLkProceduralStatus, lpImaRemoteLidsConfig=lpImaRemoteLidsConfig, lpImaLinkRetryTimeout=lpImaLinkRetryTimeout, lpImaCidDataTable=lpImaCidDataTable, lpImaTestPurpose=lpImaTestPurpose, lpImaLkRemoteDefect=lpImaLkRemoteDefect, lpImaTestErroredFrmRx=lpImaTestErroredFrmRx, lpImaLkRowStatusEntry=lpImaLkRowStatusEntry, lpImaProvEntry=lpImaProvEntry, lpImaLkAlarmStatus=lpImaLkAlarmStatus, lpImaTestStateTable=lpImaTestStateTable, lpImaTestBytesTx=lpImaTestBytesTx, lpImaTestAdminState=lpImaTestAdminState, lpImaLkStatsEntry=lpImaLkStatsEntry, lpImaClockingModeMismatch=lpImaClockingModeMismatch, lpImaLkUsageState=lpImaLkUsageState, lpImaCellCapacity=lpImaCellCapacity, lpImaCidDataEntry=lpImaCidDataEntry, lpImaLkIndex=lpImaLkIndex, lpImaMaxDiffDelay=lpImaMaxDiffDelay, lpImaTestBitsRx=lpImaTestBitsRx, imaCapabilities=imaCapabilities, lpImaFailureCause=lpImaFailureCause, lpImaLkOperTable=lpImaLkOperTable, imaMIB=imaMIB, lpImaTest=lpImaTest, lpImaOperationalState=lpImaOperationalState, lpImaStateEntry=lpImaStateEntry, lpImaTestBytesRx=lpImaTestBytesRx, lpImaLkRunningTime=lpImaLkRunningTime, lpImaTestBitsTx=lpImaTestBitsTx, lpImaStorageType=lpImaStorageType, lpImaStatsEntry=lpImaStatsEntry, lpImaLkFarEndUnusableSec=lpImaLkFarEndUnusableSec, lpImaStandbyStatus=lpImaStandbyStatus, lpImaTestRowStatusTable=lpImaTestRowStatusTable, lpImaUnavailSecs=lpImaUnavailSecs, lpImaLkFailures=lpImaLkFailures, lpImaAdminState=lpImaAdminState, lpImaLkRxStuffEvents=lpImaLkRxStuffEvents, lpImaLkFarEndUnavailSec=lpImaLkFarEndUnavailSec, lpImaAvailabilityStatus=lpImaAvailabilityStatus, lpImaLkStandbyStatus=lpImaLkStandbyStatus, lpImaRunningTime=lpImaRunningTime, lpImaLkRowStatus=lpImaLkRowStatus, lpImaLkOperEntry=lpImaLkOperEntry, imaCapabilitiesBE=imaCapabilitiesBE, lpImaProceduralStatus=lpImaProceduralStatus, lpImaLkControlStatus=lpImaLkControlStatus, lpImaLkAdminState=lpImaLkAdminState, lpImaTestFrmRx=lpImaTestFrmRx, lpImaLkIdleCellSec=lpImaLkIdleCellSec, lpImaLkStorageType=lpImaLkStorageType, lpImaLkRemoteLid=lpImaLkRemoteLid, lpImaLkFailureCause=lpImaLkFailureCause, lpImaLkInterfaceName=lpImaLkInterfaceName, lpImaRowStatusTable=lpImaRowStatusTable, lpImaLkOperationalState=lpImaLkOperationalState, imaGroup=imaGroup, imaGroupBE00A=imaGroupBE00A, lpImaTestStateEntry=lpImaTestStateEntry, lpImaLkSevErroredSec=lpImaLkSevErroredSec, lpImaStateTable=lpImaStateTable)
