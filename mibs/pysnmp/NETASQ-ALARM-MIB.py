#
# PySNMP MIB module NETASQ-ALARM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETASQ-ALARM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:08:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ntqNotifications, ntqAlarm = mibBuilder.importSymbols("NETASQ-SMI-MIB", "ntqNotifications", "ntqAlarm")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Unsigned32, MibIdentifier, iso, ObjectIdentity, ModuleIdentity, IpAddress, Counter64, Gauge32, Counter32, Integer32, NotificationType, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Unsigned32", "MibIdentifier", "iso", "ObjectIdentity", "ModuleIdentity", "IpAddress", "Counter64", "Gauge32", "Counter32", "Integer32", "NotificationType", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
ntqATable = MibTable((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0), )
if mibBuilder.loadTexts: ntqATable.setStatus('current')
ntqAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1), ).setIndexNames((0, "NETASQ-ALARM-MIB", "ntqAIndex"))
if mibBuilder.loadTexts: ntqAEntry.setStatus('current')
ntqAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 0), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: ntqAIndex.setStatus('current')
ntqATime = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqATime.setStatus('current')
ntqASif = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqASif.setStatus('current')
ntqADif = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqADif.setStatus('current')
ntqAProto = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAProto.setStatus('current')
ntqASaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqASaddr.setStatus('current')
ntqADaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqADaddr.setStatus('current')
ntqASport = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqASport.setStatus('current')
ntqADport = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqADport.setStatus('current')
ntqASname = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqASname.setStatus('current')
ntqADname = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqADname.setStatus('current')
ntqAMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 0, 1, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAMessage.setStatus('current')
ntqAicmpTable = MibTable((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1), )
if mibBuilder.loadTexts: ntqAicmpTable.setStatus('current')
ntqAicmpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1), ).setIndexNames((0, "NETASQ-ALARM-MIB", "ntqAicmpIndex"))
if mibBuilder.loadTexts: ntqAicmpEntry.setStatus('current')
ntqAicmpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 0), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: ntqAicmpIndex.setStatus('current')
ntqAicmpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpTime.setStatus('current')
ntqAicmpSif = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpSif.setStatus('current')
ntqAicmpDif = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpDif.setStatus('current')
ntqAicmpSaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpSaddr.setStatus('current')
ntqAicmpDaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpDaddr.setStatus('current')
ntqAicmpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpType.setStatus('current')
ntqAicmpCode = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpCode.setStatus('current')
ntqAicmpSname = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpSname.setStatus('current')
ntqAicmpDname = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpDname.setStatus('current')
ntqAicmpMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 11256, 1, 5, 1, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntqAicmpMessage.setStatus('current')
ntqNotification = NotificationType((1, 3, 6, 1, 4, 1, 11256, 1, 6, 1)).setObjects(("NETASQ-ALARM-MIB", "ntqATime"), ("NETASQ-ALARM-MIB", "ntqASif"), ("NETASQ-ALARM-MIB", "ntqASaddr"), ("NETASQ-ALARM-MIB", "ntqADaddr"), ("NETASQ-ALARM-MIB", "ntqAMessage"))
if mibBuilder.loadTexts: ntqNotification.setStatus('current')
mibBuilder.exportSymbols("NETASQ-ALARM-MIB", ntqAicmpEntry=ntqAicmpEntry, ntqASaddr=ntqASaddr, ntqAicmpTime=ntqAicmpTime, ntqAicmpTable=ntqAicmpTable, ntqAEntry=ntqAEntry, ntqASif=ntqASif, ntqADport=ntqADport, ntqASname=ntqASname, ntqAicmpIndex=ntqAicmpIndex, ntqAicmpCode=ntqAicmpCode, ntqAicmpSif=ntqAicmpSif, ntqAicmpDaddr=ntqAicmpDaddr, ntqATable=ntqATable, ntqAicmpMessage=ntqAicmpMessage, ntqAicmpDif=ntqAicmpDif, ntqASport=ntqASport, ntqATime=ntqATime, ntqAicmpSname=ntqAicmpSname, ntqADaddr=ntqADaddr, ntqAProto=ntqAProto, ntqAIndex=ntqAIndex, ntqAicmpSaddr=ntqAicmpSaddr, ntqAMessage=ntqAMessage, ntqNotification=ntqNotification, ntqADif=ntqADif, ntqAicmpDname=ntqAicmpDname, ntqADname=ntqADname, ntqAicmpType=ntqAicmpType)
