#
# PySNMP MIB module TRAPEZE-NETWORKS-BASIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TRAPEZE-NETWORKS-BASIC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:19:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Unsigned32, MibIdentifier, Integer32, Gauge32, Bits, ObjectIdentity, Counter64, Counter32, ModuleIdentity, TimeTicks, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Unsigned32", "MibIdentifier", "Integer32", "Gauge32", "Bits", "ObjectIdentity", "Counter64", "Counter32", "ModuleIdentity", "TimeTicks", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
TrpzLicenseFeature, = mibBuilder.importSymbols("TRAPEZE-NETWORKS-LICENSE-FEATURE-TC-MIB", "TrpzLicenseFeature")
trpzMibs, = mibBuilder.importSymbols("TRAPEZE-NETWORKS-ROOT-MIB", "trpzMibs")
trpzBasic = ModuleIdentity((1, 3, 6, 1, 4, 1, 14525, 4, 2))
trpzBasic.setRevisions(('2009-11-16 00:10', '2006-07-10 00:08', '2006-04-14 00:07', '2005-01-01 00:00',))
if mibBuilder.loadTexts: trpzBasic.setLastUpdated('200911160010Z')
if mibBuilder.loadTexts: trpzBasic.setOrganization('Trapeze Networks')
trpzBasicSystemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 14525, 4, 2, 1))
trpzSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSerialNumber.setStatus('current')
trpzSwMajorVersionNumber = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSwMajorVersionNumber.setStatus('current')
trpzSwMinorVersionNumber = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzSwMinorVersionNumber.setStatus('current')
trpzVersionString = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzVersionString.setStatus('current')
trpzMobilityDomainInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 14525, 4, 2, 2))
trpzMobilityDomainName = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 2, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzMobilityDomainName.setStatus('current')
trpzMobilitySeedIp = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 2, 2, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzMobilitySeedIp.setStatus('current')
trpzMobilityMemberTableSize = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzMobilityMemberTableSize.setStatus('current')
trpzMobilityMemberTable = MibTable((1, 3, 6, 1, 4, 1, 14525, 4, 2, 2, 4), )
if mibBuilder.loadTexts: trpzMobilityMemberTable.setStatus('current')
trpzMobilityMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14525, 4, 2, 2, 4, 1), ).setIndexNames((0, "TRAPEZE-NETWORKS-BASIC-MIB", "trpzMobilityMemberEntryAddr"))
if mibBuilder.loadTexts: trpzMobilityMemberEntry.setStatus('current')
trpzMobilityMemberEntryAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 2, 2, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzMobilityMemberEntryAddr.setStatus('current')
trpzLicenseInfoGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 14525, 4, 2, 3))
trpzLicenseInfoTableSize = MibScalar((1, 3, 6, 1, 4, 1, 14525, 4, 2, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzLicenseInfoTableSize.setStatus('current')
trpzLicenseInfoTable = MibTable((1, 3, 6, 1, 4, 1, 14525, 4, 2, 3, 2), )
if mibBuilder.loadTexts: trpzLicenseInfoTable.setStatus('current')
trpzLicenseInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14525, 4, 2, 3, 2, 1), ).setIndexNames((0, "TRAPEZE-NETWORKS-BASIC-MIB", "trpzLicenseInfoEntryFeature"))
if mibBuilder.loadTexts: trpzLicenseInfoEntry.setStatus('current')
trpzLicenseInfoEntryFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 2, 3, 2, 1, 1), TrpzLicenseFeature())
if mibBuilder.loadTexts: trpzLicenseInfoEntryFeature.setStatus('current')
trpzLicenseInfoEntryValue = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 2, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzLicenseInfoEntryValue.setStatus('current')
trpzLicenseInfoEntryDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 14525, 4, 2, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trpzLicenseInfoEntryDescr.setStatus('current')
mibBuilder.exportSymbols("TRAPEZE-NETWORKS-BASIC-MIB", trpzLicenseInfoEntryDescr=trpzLicenseInfoEntryDescr, trpzMobilitySeedIp=trpzMobilitySeedIp, trpzLicenseInfoEntryFeature=trpzLicenseInfoEntryFeature, trpzMobilityDomainName=trpzMobilityDomainName, trpzVersionString=trpzVersionString, trpzMobilityDomainInfo=trpzMobilityDomainInfo, trpzLicenseInfoEntry=trpzLicenseInfoEntry, trpzBasicSystemInfo=trpzBasicSystemInfo, PYSNMP_MODULE_ID=trpzBasic, trpzLicenseInfoEntryValue=trpzLicenseInfoEntryValue, trpzMobilityMemberEntryAddr=trpzMobilityMemberEntryAddr, trpzMobilityMemberTableSize=trpzMobilityMemberTableSize, trpzSerialNumber=trpzSerialNumber, trpzMobilityMemberTable=trpzMobilityMemberTable, trpzMobilityMemberEntry=trpzMobilityMemberEntry, trpzLicenseInfoTable=trpzLicenseInfoTable, trpzSwMinorVersionNumber=trpzSwMinorVersionNumber, trpzSwMajorVersionNumber=trpzSwMajorVersionNumber, trpzBasic=trpzBasic, trpzLicenseInfoGroup=trpzLicenseInfoGroup, trpzLicenseInfoTableSize=trpzLicenseInfoTableSize)
