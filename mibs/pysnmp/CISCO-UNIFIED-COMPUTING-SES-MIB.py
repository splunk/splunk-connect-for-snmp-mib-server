#
# PySNMP MIB module CISCO-UNIFIED-COMPUTING-SES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-UNIFIED-COMPUTING-SES-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:01:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
TimeIntervalSec, CiscoInetAddressMask, Unsigned64, CiscoAlarmSeverity, CiscoNetworkAddress = mibBuilder.importSymbols("CISCO-TC", "TimeIntervalSec", "CiscoInetAddressMask", "Unsigned64", "CiscoAlarmSeverity", "CiscoNetworkAddress")
ciscoUnifiedComputingMIBObjects, CucsManagedObjectDn, CucsManagedObjectId = mibBuilder.importSymbols("CISCO-UNIFIED-COMPUTING-MIB", "ciscoUnifiedComputingMIBObjects", "CucsManagedObjectDn", "CucsManagedObjectId")
CucsFsmLifecycle, = mibBuilder.importSymbols("CISCO-UNIFIED-COMPUTING-TC-MIB", "CucsFsmLifecycle")
InetAddressIPv6, InetAddressIPv4 = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv6", "InetAddressIPv4")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Unsigned32, Bits, TimeTicks, NotificationType, Counter32, IpAddress, Counter64, ModuleIdentity, Gauge32, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Unsigned32", "Bits", "TimeTicks", "NotificationType", "Counter32", "IpAddress", "Counter64", "ModuleIdentity", "Gauge32", "iso", "MibIdentifier")
MacAddress, DateAndTime, TruthValue, TimeInterval, DisplayString, RowPointer, TimeStamp, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "DateAndTime", "TruthValue", "TimeInterval", "DisplayString", "RowPointer", "TimeStamp", "TextualConvention")
cucsSesObjects = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 80))
if mibBuilder.loadTexts: cucsSesObjects.setLastUpdated('201506290000Z')
if mibBuilder.loadTexts: cucsSesObjects.setOrganization('Cisco Systems Inc.')
cucsSesDiskSlotEpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 80, 1), )
if mibBuilder.loadTexts: cucsSesDiskSlotEpTable.setStatus('current')
cucsSesDiskSlotEpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 80, 1, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-SES-MIB", "cucsSesDiskSlotEpInstanceId"))
if mibBuilder.loadTexts: cucsSesDiskSlotEpEntry.setStatus('current')
cucsSesDiskSlotEpInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 80, 1, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsSesDiskSlotEpInstanceId.setStatus('current')
cucsSesDiskSlotEpDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 80, 1, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsSesDiskSlotEpDn.setStatus('current')
cucsSesDiskSlotEpRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 80, 1, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsSesDiskSlotEpRn.setStatus('current')
cucsSesDiskSlotEpEncId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 80, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsSesDiskSlotEpEncId.setStatus('current')
cucsSesDiskSlotEpId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 80, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsSesDiskSlotEpId.setStatus('current')
cucsSesDiskSlotEpSlotDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 80, 1, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsSesDiskSlotEpSlotDn.setStatus('current')
cucsSesEnclosureTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 80, 2), )
if mibBuilder.loadTexts: cucsSesEnclosureTable.setStatus('current')
cucsSesEnclosureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 80, 2, 1), ).setIndexNames((0, "CISCO-UNIFIED-COMPUTING-SES-MIB", "cucsSesEnclosureInstanceId"))
if mibBuilder.loadTexts: cucsSesEnclosureEntry.setStatus('current')
cucsSesEnclosureInstanceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 80, 2, 1, 1), CucsManagedObjectId())
if mibBuilder.loadTexts: cucsSesEnclosureInstanceId.setStatus('current')
cucsSesEnclosureDn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 80, 2, 1, 2), CucsManagedObjectDn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsSesEnclosureDn.setStatus('current')
cucsSesEnclosureRn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 80, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsSesEnclosureRn.setStatus('current')
cucsSesEnclosureDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 80, 2, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsSesEnclosureDescr.setStatus('current')
cucsSesEnclosureElid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 80, 2, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsSesEnclosureElid.setStatus('current')
cucsSesEnclosureId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 80, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsSesEnclosureId.setStatus('current')
cucsSesEnclosureLc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 719, 1, 80, 2, 1, 7), CucsFsmLifecycle()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cucsSesEnclosureLc.setStatus('current')
mibBuilder.exportSymbols("CISCO-UNIFIED-COMPUTING-SES-MIB", cucsSesDiskSlotEpSlotDn=cucsSesDiskSlotEpSlotDn, cucsSesObjects=cucsSesObjects, cucsSesDiskSlotEpDn=cucsSesDiskSlotEpDn, cucsSesDiskSlotEpRn=cucsSesDiskSlotEpRn, cucsSesEnclosureRn=cucsSesEnclosureRn, cucsSesDiskSlotEpEntry=cucsSesDiskSlotEpEntry, cucsSesEnclosureDn=cucsSesEnclosureDn, cucsSesDiskSlotEpInstanceId=cucsSesDiskSlotEpInstanceId, cucsSesEnclosureId=cucsSesEnclosureId, cucsSesEnclosureTable=cucsSesEnclosureTable, cucsSesDiskSlotEpId=cucsSesDiskSlotEpId, cucsSesEnclosureElid=cucsSesEnclosureElid, PYSNMP_MODULE_ID=cucsSesObjects, cucsSesDiskSlotEpTable=cucsSesDiskSlotEpTable, cucsSesEnclosureInstanceId=cucsSesEnclosureInstanceId, cucsSesEnclosureDescr=cucsSesEnclosureDescr, cucsSesDiskSlotEpEncId=cucsSesDiskSlotEpEncId, cucsSesEnclosureEntry=cucsSesEnclosureEntry, cucsSesEnclosureLc=cucsSesEnclosureLc)
