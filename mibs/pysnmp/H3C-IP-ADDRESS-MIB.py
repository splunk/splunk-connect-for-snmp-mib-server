#
# PySNMP MIB module H3C-IP-ADDRESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-IP-ADDRESS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:09:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
h3cCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ModuleIdentity, Counter64, MibIdentifier, IpAddress, ObjectIdentity, Counter32, NotificationType, TimeTicks, Bits, Gauge32, Integer32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ModuleIdentity", "Counter64", "MibIdentifier", "IpAddress", "ObjectIdentity", "Counter32", "NotificationType", "TimeTicks", "Bits", "Gauge32", "Integer32", "Unsigned32")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
h3cIpAddrMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67))
h3cIpAddrMIB.setRevisions(('2005-11-22 00:00',))
if mibBuilder.loadTexts: h3cIpAddrMIB.setLastUpdated('200511220000Z')
if mibBuilder.loadTexts: h3cIpAddrMIB.setOrganization('H3C Technologies Co., Ltd.')
h3cIpAddressObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1))
h3cIpAddressConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1))
h3cIpAddrSetTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 1), )
if mibBuilder.loadTexts: h3cIpAddrSetTable.setStatus('current')
h3cIpAddrSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 1, 1), ).setIndexNames((0, "H3C-IP-ADDRESS-MIB", "h3cIpAddrSetIfIndex"), (0, "H3C-IP-ADDRESS-MIB", "h3cIpAddrSetAddrType"), (0, "H3C-IP-ADDRESS-MIB", "h3cIpAddrSetAddr"))
if mibBuilder.loadTexts: h3cIpAddrSetEntry.setStatus('current')
h3cIpAddrSetIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: h3cIpAddrSetIfIndex.setStatus('current')
h3cIpAddrSetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 1, 1, 2), InetAddressType())
if mibBuilder.loadTexts: h3cIpAddrSetAddrType.setStatus('current')
h3cIpAddrSetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 1, 1, 3), InetAddress())
if mibBuilder.loadTexts: h3cIpAddrSetAddr.setStatus('current')
h3cIpAddrSetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpAddrSetMask.setStatus('current')
h3cIpAddrSetSourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("assignedIp", 1))).clone('assignedIp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpAddrSetSourceType.setStatus('current')
h3cIpAddrSetCatalog = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("sub", 2))).clone('primary')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpAddrSetCatalog.setStatus('current')
h3cIpAddrSetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpAddrSetRowStatus.setStatus('current')
h3cIpAddrReadTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 2), )
if mibBuilder.loadTexts: h3cIpAddrReadTable.setStatus('current')
h3cIpAddrReadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 2, 1), ).setIndexNames((0, "H3C-IP-ADDRESS-MIB", "h3cIpAddrReadIfIndex"), (0, "H3C-IP-ADDRESS-MIB", "h3cIpAddrReadAddrType"), (0, "H3C-IP-ADDRESS-MIB", "h3cIpAddrReadAddr"))
if mibBuilder.loadTexts: h3cIpAddrReadEntry.setStatus('current')
h3cIpAddrReadIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: h3cIpAddrReadIfIndex.setStatus('current')
h3cIpAddrReadAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 2, 1, 2), InetAddressType())
if mibBuilder.loadTexts: h3cIpAddrReadAddrType.setStatus('current')
h3cIpAddrReadAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 2, 1, 3), InetAddress())
if mibBuilder.loadTexts: h3cIpAddrReadAddr.setStatus('current')
h3cIpAddrReadMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpAddrReadMask.setStatus('current')
h3cIpAddrReadSourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("assignedIp", 1), ("cluster", 2), ("dhcp", 3), ("bootp", 4), ("negotiate", 5), ("unnumbered", 6), ("vrrp", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpAddrReadSourceType.setStatus('current')
h3cIpAddrReadCatalog = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("primary", 1), ("sub", 2), ("cluster", 3), ("vrrp", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cIpAddrReadCatalog.setStatus('current')
h3cIpv4AddrTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 3), )
if mibBuilder.loadTexts: h3cIpv4AddrTable.setStatus('current')
h3cIpv4AddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cIpv4AddrEntry.setStatus('current')
h3cIpv4AddrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 3, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpv4AddrAddr.setStatus('current')
h3cIpv4AddrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 3, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpv4AddrMask.setStatus('current')
h3cIpv4AddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 1, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cIpv4AddrRowStatus.setStatus('current')
h3cIpAddrNotify = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 2))
h3cIpAddrNotifyScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 2, 1))
h3cIpAddrNotifyIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cIpAddrNotifyIfIndex.setStatus('current')
h3cIpAddrOldIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 2, 1, 2), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cIpAddrOldIpAddress.setStatus('current')
h3cIpAddrNewIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 2, 1, 3), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: h3cIpAddrNewIpAddress.setStatus('current')
h3cIpAddrNotifyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 2, 2))
h3cIpAddrNotifyObjectsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 2, 2, 0))
h3cIpAddressChangeNotify = NotificationType((1, 3, 6, 1, 4, 1, 2011, 10, 2, 67, 2, 2, 0, 1)).setObjects(("H3C-IP-ADDRESS-MIB", "h3cIpAddrNotifyIfIndex"), ("H3C-IP-ADDRESS-MIB", "h3cIpAddrOldIpAddress"), ("H3C-IP-ADDRESS-MIB", "h3cIpAddrNewIpAddress"))
if mibBuilder.loadTexts: h3cIpAddressChangeNotify.setStatus('current')
mibBuilder.exportSymbols("H3C-IP-ADDRESS-MIB", h3cIpAddrSetAddrType=h3cIpAddrSetAddrType, h3cIpAddrReadEntry=h3cIpAddrReadEntry, h3cIpAddressChangeNotify=h3cIpAddressChangeNotify, PYSNMP_MODULE_ID=h3cIpAddrMIB, h3cIpAddrSetMask=h3cIpAddrSetMask, h3cIpAddrNotifyObjects=h3cIpAddrNotifyObjects, h3cIpv4AddrTable=h3cIpv4AddrTable, h3cIpAddrReadMask=h3cIpAddrReadMask, h3cIpAddrNotifyObjectsPrefix=h3cIpAddrNotifyObjectsPrefix, h3cIpAddrReadSourceType=h3cIpAddrReadSourceType, h3cIpAddressConfig=h3cIpAddressConfig, h3cIpv4AddrMask=h3cIpv4AddrMask, h3cIpAddressObjects=h3cIpAddressObjects, h3cIpAddrSetSourceType=h3cIpAddrSetSourceType, h3cIpAddrNotifyIfIndex=h3cIpAddrNotifyIfIndex, h3cIpAddrSetCatalog=h3cIpAddrSetCatalog, h3cIpAddrMIB=h3cIpAddrMIB, h3cIpv4AddrEntry=h3cIpv4AddrEntry, h3cIpAddrNotify=h3cIpAddrNotify, h3cIpAddrOldIpAddress=h3cIpAddrOldIpAddress, h3cIpAddrReadAddr=h3cIpAddrReadAddr, h3cIpAddrSetIfIndex=h3cIpAddrSetIfIndex, h3cIpAddrReadTable=h3cIpAddrReadTable, h3cIpAddrSetTable=h3cIpAddrSetTable, h3cIpv4AddrRowStatus=h3cIpv4AddrRowStatus, h3cIpAddrReadIfIndex=h3cIpAddrReadIfIndex, h3cIpAddrNewIpAddress=h3cIpAddrNewIpAddress, h3cIpAddrSetEntry=h3cIpAddrSetEntry, h3cIpv4AddrAddr=h3cIpv4AddrAddr, h3cIpAddrNotifyScalarObjects=h3cIpAddrNotifyScalarObjects, h3cIpAddrReadCatalog=h3cIpAddrReadCatalog, h3cIpAddrSetAddr=h3cIpAddrSetAddr, h3cIpAddrSetRowStatus=h3cIpAddrSetRowStatus, h3cIpAddrReadAddrType=h3cIpAddrReadAddrType)
