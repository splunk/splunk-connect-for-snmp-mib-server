#
# PySNMP MIB module HUAWEI-VO-ANALOG-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-VO-ANALOG-IF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:37:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
voice, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "voice")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, TimeTicks, Unsigned32, Bits, IpAddress, NotificationType, Counter64, ObjectIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ModuleIdentity, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "TimeTicks", "Unsigned32", "Bits", "IpAddress", "NotificationType", "Counter64", "ObjectIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ModuleIdentity", "Integer32", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hwVoiceAnalogInterfaceMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3))
hwVoiceAnalogInterfaceMIB.setRevisions(('2004-04-08 13:45',))
if mibBuilder.loadTexts: hwVoiceAnalogInterfaceMIB.setLastUpdated('200410200000Z')
if mibBuilder.loadTexts: hwVoiceAnalogInterfaceMIB.setOrganization('Huawei-3COM Technologies Co., Ltd.')
hwVoAnalogIfCommonObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 1))
hwVoAnalogIfCommonConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 1, 1), )
if mibBuilder.loadTexts: hwVoAnalogIfCommonConfigTable.setStatus('current')
hwVoAnalogIfCommonConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 1, 1, 1), ).setIndexNames((0, "HUAWEI-VO-ANALOG-IF-MIB", "hwVoAnalogIfConfigPortNumber"))
if mibBuilder.loadTexts: hwVoAnalogIfCommonConfigEntry.setStatus('current')
hwVoAnalogIfConfigPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoAnalogIfConfigPortNumber.setStatus('current')
hwVoAnalogIfConfigPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fxs", 1), ("fxo", 2), ("em", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoAnalogIfConfigPortType.setStatus('current')
hwVoAnaloglfConfigPortImpedance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("impedance600Real", 1), ("impedanceComplex", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoAnaloglfConfigPortImpedance.setStatus('current')
hwVoAnalogIfConfigInitialDigitTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfConfigInitialDigitTimeOut.setStatus('current')
hwVoAnalogIfConfigInterDigitTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfConfigInterDigitTimeOut.setStatus('current')
hwVoAnalogIfConfigCallDisconnect = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoAnalogIfConfigCallDisconnect.setStatus('current')
hwVoAnalogIfFXSObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 2))
hwVoAnalogIfFXSConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 2, 1), )
if mibBuilder.loadTexts: hwVoAnalogIfFXSConfigTable.setStatus('current')
hwVoAnalogIfFXSConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 2, 1, 1), ).setIndexNames((0, "HUAWEI-VO-ANALOG-IF-MIB", "hwVoAnalogIfFXSConfigPortNumber"))
if mibBuilder.loadTexts: hwVoAnalogIfFXSConfigEntry.setStatus('current')
hwVoAnalogIfFXSConfigPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoAnalogIfFXSConfigPortNumber.setStatus('current')
hwVoAnalogIfFXSConfigStartMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loopStart", 1), ("groundStart", 2))).clone('loopStart')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoAnalogIfFXSConfigStartMode.setStatus('current')
hwVoAnalogIfFXSTimerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 2, 3), )
if mibBuilder.loadTexts: hwVoAnalogIfFXSTimerTable.setStatus('current')
hwVoAnalogIfFXSTimerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 2, 3, 1), ).setIndexNames((0, "HUAWEI-VO-ANALOG-IF-MIB", "hwVoAnalogIfFXSTimerPortNumber"))
if mibBuilder.loadTexts: hwVoAnalogIfFXSTimerEntry.setStatus('current')
hwVoAnalogIfFXSTimerPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoAnalogIfFXSTimerPortNumber.setStatus('current')
hwVoAnalogIfFXSTimerDtmf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 500)).clone(120)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoAnalogIfFXSTimerDtmf.setStatus('current')
hwVoAnalogIfFXSTimerDtmfInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 500)).clone(120)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoAnalogIfFXSTimerDtmfInterval.setStatus('current')
hwVoAnalogIfFXOObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 3))
hwVoAnalogIfFXOConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 3, 1), )
if mibBuilder.loadTexts: hwVoAnalogIfFXOConfigTable.setStatus('current')
hwVoAnalogIfFXOConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 3, 1, 1), ).setIndexNames((0, "HUAWEI-VO-ANALOG-IF-MIB", "hwVoAnalogIfFXOConfigPortNumber"))
if mibBuilder.loadTexts: hwVoAnalogIfFXOConfigEntry.setStatus('current')
hwVoAnalogIfFXOConfigPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoAnalogIfFXOConfigPortNumber.setStatus('current')
hwVoAnalogIfFXOConfigStartMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("loopStart", 1), ("groundStart", 2))).clone('loopStart')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoAnalogIfFXOConfigStartMode.setStatus('current')
hwVoAnalogIfFXOConfigAlertNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 3, 1, 1, 3), Integer32().clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoAnalogIfFXOConfigAlertNumber.setStatus('current')
hwVoAnalogIfFXOConfigArea = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("europe", 1), ("custom", 2), ("north-america", 3))).clone('europe')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfFXOConfigArea.setStatus('current')
hwVoAnalogIfFXOPreDialDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfFXOPreDialDelay.setStatus('current')
hwVoAnaloglfFXOConfigPortImpedance = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("impedance550r", 0), ("impedance600r", 1), ("impedance600c", 2), ("impedancecomplex", 3))).clone('impedance600c')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnaloglfFXOConfigPortImpedance.setStatus('current')
hwVoAnalogIfFXOTimerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 3, 3), )
if mibBuilder.loadTexts: hwVoAnalogIfFXOTimerTable.setStatus('current')
hwVoAnalogIfFXOTimerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 3, 3, 1), ).setIndexNames((0, "HUAWEI-VO-ANALOG-IF-MIB", "hwVoAnalogIfFXOTimerPortNumber"))
if mibBuilder.loadTexts: hwVoAnalogIfFXOTimerEntry.setStatus('current')
hwVoAnalogIfFXOTimerPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoAnalogIfFXOTimerPortNumber.setStatus('current')
hwVoAnalogIfFXOTimerDtmf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 500)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfFXOTimerDtmf.setStatus('current')
hwVoAnalogIfFXOTimerDtmfInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 500)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfFXOTimerDtmfInterval.setStatus('current')
hwVoAnalogIfEMObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4))
hwVoAnalogIfEMConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 1), )
if mibBuilder.loadTexts: hwVoAnalogIfEMConfigTable.setStatus('current')
hwVoAnalogIfEMConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 1, 1), ).setIndexNames((0, "HUAWEI-VO-ANALOG-IF-MIB", "hwVoAnalogIfEMConfigPortNumber"))
if mibBuilder.loadTexts: hwVoAnalogIfEMConfigEntry.setStatus('current')
hwVoAnalogIfEMConfigPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoAnalogIfEMConfigPortNumber.setStatus('current')
hwVoAnalogIfEMConfigSignalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("delayDial", 1), ("immediateDial", 2), ("winkStart", 3))).clone('immediateDial')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfEMConfigSignalMode.setStatus('current')
hwVoAnalogIfEMConfigPhyParm = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("twoWiresOperation", 1), ("fourWiresOperation", 2))).clone('fourWiresOperation')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfEMConfigPhyParm.setStatus('current')
hwVoAnalogIfEMConfigPhyType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5))).clone(namedValues=NamedValues(("type1", 1), ("type2", 2), ("type3", 3), ("type5", 5))).clone('type5')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfEMConfigPhyType.setStatus('current')
hwVoAnalogIfEMConfigTimeoutRinging = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 600), ValueRangeConstraint(65535, 65535), )).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfEMConfigTimeoutRinging.setStatus('current')
hwVoAnalogIfEMConfigTimeoutWaitDigit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(3, 600), ValueRangeConstraint(65535, 65535), )).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfEMConfigTimeoutWaitDigit.setStatus('current')
hwVoAnalogIfEMTimerTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 3), )
if mibBuilder.loadTexts: hwVoAnalogIfEMTimerTable.setStatus('current')
hwVoAnalogIfEMTimerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 3, 1), ).setIndexNames((0, "HUAWEI-VO-ANALOG-IF-MIB", "hwVoAnalogIfEMTimerPortNumber"))
if mibBuilder.loadTexts: hwVoAnalogIfEMTimerEntry.setStatus('current')
hwVoAnalogIfEMTimerPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVoAnalogIfEMTimerPortNumber.setStatus('current')
hwVoAnalogIfEMTimerDtmf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 500)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfEMTimerDtmf.setStatus('current')
hwVoAnalogIfEMTimerDtmfInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 500)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfEMTimerDtmfInterval.setStatus('current')
hwVoAnalogIfEMTimerCallInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 2000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfEMTimerCallInterval.setStatus('current')
hwVoAnalogIfEMTimerSendWink = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 5000)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfEMTimerSendWink.setStatus('current')
hwVoAnalogIfEMTimerWinkRising = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 5000)).clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfEMTimerWinkRising.setStatus('current')
hwVoAnalogIfEMTimerWinkHold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 3000)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfEMTimerWinkHold.setStatus('current')
hwVoAnalogIfEMTimerDialoutDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 5000)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfEMTimerDialoutDelay.setStatus('current')
hwVoAnalogIfEMTimerRising = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 2000)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfEMTimerRising.setStatus('current')
hwVoAnalogIfEMTimerHold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 1, 3, 4, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 5000)).clone(400)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVoAnalogIfEMTimerHold.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-VO-ANALOG-IF-MIB", hwVoAnalogIfEMConfigPhyParm=hwVoAnalogIfEMConfigPhyParm, hwVoAnalogIfCommonConfigTable=hwVoAnalogIfCommonConfigTable, hwVoAnalogIfEMTimerTable=hwVoAnalogIfEMTimerTable, hwVoAnalogIfEMTimerDtmfInterval=hwVoAnalogIfEMTimerDtmfInterval, hwVoAnalogIfEMConfigEntry=hwVoAnalogIfEMConfigEntry, hwVoAnalogIfFXOTimerTable=hwVoAnalogIfFXOTimerTable, hwVoAnalogIfEMTimerEntry=hwVoAnalogIfEMTimerEntry, hwVoAnalogIfFXOConfigPortNumber=hwVoAnalogIfFXOConfigPortNumber, hwVoAnalogIfEMTimerPortNumber=hwVoAnalogIfEMTimerPortNumber, hwVoAnalogIfEMTimerRising=hwVoAnalogIfEMTimerRising, PYSNMP_MODULE_ID=hwVoiceAnalogInterfaceMIB, hwVoAnalogIfCommonConfigEntry=hwVoAnalogIfCommonConfigEntry, hwVoAnalogIfFXSTimerTable=hwVoAnalogIfFXSTimerTable, hwVoAnalogIfEMConfigPortNumber=hwVoAnalogIfEMConfigPortNumber, hwVoAnalogIfFXSConfigTable=hwVoAnalogIfFXSConfigTable, hwVoAnalogIfEMTimerDialoutDelay=hwVoAnalogIfEMTimerDialoutDelay, hwVoAnalogIfConfigInitialDigitTimeOut=hwVoAnalogIfConfigInitialDigitTimeOut, hwVoAnalogIfConfigPortType=hwVoAnalogIfConfigPortType, hwVoiceAnalogInterfaceMIB=hwVoiceAnalogInterfaceMIB, hwVoAnalogIfFXOConfigStartMode=hwVoAnalogIfFXOConfigStartMode, hwVoAnalogIfEMTimerSendWink=hwVoAnalogIfEMTimerSendWink, hwVoAnalogIfFXOConfigTable=hwVoAnalogIfFXOConfigTable, hwVoAnalogIfEMConfigTimeoutWaitDigit=hwVoAnalogIfEMConfigTimeoutWaitDigit, hwVoAnalogIfFXSTimerEntry=hwVoAnalogIfFXSTimerEntry, hwVoAnalogIfEMTimerCallInterval=hwVoAnalogIfEMTimerCallInterval, hwVoAnalogIfFXOTimerDtmfInterval=hwVoAnalogIfFXOTimerDtmfInterval, hwVoAnalogIfEMTimerWinkRising=hwVoAnalogIfEMTimerWinkRising, hwVoAnalogIfConfigCallDisconnect=hwVoAnalogIfConfigCallDisconnect, hwVoAnalogIfEMTimerDtmf=hwVoAnalogIfEMTimerDtmf, hwVoAnaloglfConfigPortImpedance=hwVoAnaloglfConfigPortImpedance, hwVoAnalogIfEMConfigTable=hwVoAnalogIfEMConfigTable, hwVoAnalogIfEMTimerWinkHold=hwVoAnalogIfEMTimerWinkHold, hwVoAnalogIfEMObjects=hwVoAnalogIfEMObjects, hwVoAnalogIfFXSTimerDtmf=hwVoAnalogIfFXSTimerDtmf, hwVoAnalogIfFXOPreDialDelay=hwVoAnalogIfFXOPreDialDelay, hwVoAnalogIfEMConfigSignalMode=hwVoAnalogIfEMConfigSignalMode, hwVoAnalogIfFXSTimerPortNumber=hwVoAnalogIfFXSTimerPortNumber, hwVoAnalogIfCommonObjects=hwVoAnalogIfCommonObjects, hwVoAnalogIfConfigInterDigitTimeOut=hwVoAnalogIfConfigInterDigitTimeOut, hwVoAnalogIfFXSConfigStartMode=hwVoAnalogIfFXSConfigStartMode, hwVoAnalogIfFXOConfigArea=hwVoAnalogIfFXOConfigArea, hwVoAnalogIfEMConfigPhyType=hwVoAnalogIfEMConfigPhyType, hwVoAnalogIfEMTimerHold=hwVoAnalogIfEMTimerHold, hwVoAnalogIfFXOConfigAlertNumber=hwVoAnalogIfFXOConfigAlertNumber, hwVoAnalogIfFXSConfigEntry=hwVoAnalogIfFXSConfigEntry, hwVoAnalogIfFXSTimerDtmfInterval=hwVoAnalogIfFXSTimerDtmfInterval, hwVoAnalogIfEMConfigTimeoutRinging=hwVoAnalogIfEMConfigTimeoutRinging, hwVoAnalogIfFXOTimerPortNumber=hwVoAnalogIfFXOTimerPortNumber, hwVoAnalogIfFXSConfigPortNumber=hwVoAnalogIfFXSConfigPortNumber, hwVoAnalogIfFXSObjects=hwVoAnalogIfFXSObjects, hwVoAnalogIfFXOTimerEntry=hwVoAnalogIfFXOTimerEntry, hwVoAnaloglfFXOConfigPortImpedance=hwVoAnaloglfFXOConfigPortImpedance, hwVoAnalogIfFXOObjects=hwVoAnalogIfFXOObjects, hwVoAnalogIfFXOTimerDtmf=hwVoAnalogIfFXOTimerDtmf, hwVoAnalogIfFXOConfigEntry=hwVoAnalogIfFXOConfigEntry, hwVoAnalogIfConfigPortNumber=hwVoAnalogIfConfigPortNumber)
