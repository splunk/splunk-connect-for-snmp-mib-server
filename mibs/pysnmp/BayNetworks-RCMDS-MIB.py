#
# PySNMP MIB module BayNetworks-RCMDS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BayNetworks-RCMDS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:25:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, IpAddress, Unsigned32, Counter32, Gauge32, ObjectIdentity, ModuleIdentity, TimeTicks, Bits, MibIdentifier, Integer32, iso, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "IpAddress", "Unsigned32", "Counter32", "Gauge32", "ObjectIdentity", "ModuleIdentity", "TimeTicks", "Bits", "MibIdentifier", "Integer32", "iso", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfRcmdsGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfRcmdsGroup")
wfRcmds = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 1))
wfRcmdsDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsDelete.setStatus('mandatory')
wfRcmdsDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsDisable.setStatus('mandatory')
wfRcmdsReservedPort = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 1023)).clone(1023)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsReservedPort.setStatus('mandatory')
wfRcmdsKerberosDefaultRealmName = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsKerberosDefaultRealmName.setStatus('mandatory')
wfRcmdsKerberosKDCName = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsKerberosKDCName.setStatus('mandatory')
wfRcmdsRouterHostName = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRouterHostName.setStatus('mandatory')
wfRcmdsKerberosHostServiceKey = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsKerberosHostServiceKey.setStatus('mandatory')
wfRcmdsRlogind = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2))
wfRcmdsRlogindDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRlogindDelete.setStatus('mandatory')
wfRcmdsRlogindDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRlogindDisable.setStatus('mandatory')
wfRcmdsRlogindState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRcmdsRlogindState.setStatus('mandatory')
wfRcmdsRlogindMoreDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRlogindMoreDisable.setStatus('mandatory')
wfRcmdsRlogindPrompt = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRlogindPrompt.setStatus('mandatory')
wfRcmdsRlogindLoginTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRlogindLoginTimeOut.setStatus('mandatory')
wfRcmdsRlogindPasswordTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRlogindPasswordTimeOut.setStatus('mandatory')
wfRcmdsRlogindCommandTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRlogindCommandTimeOut.setStatus('mandatory')
wfRcmdsRlogindLoginRetries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRlogindLoginRetries.setStatus('mandatory')
wfRcmdsRlogindTotalLogins = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRcmdsRlogindTotalLogins.setStatus('mandatory')
wfRcmdsRlogindUserLoginErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRcmdsRlogindUserLoginErrors.setStatus('mandatory')
wfRcmdsRlogindManagerLoginErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRcmdsRlogindManagerLoginErrors.setStatus('mandatory')
wfRcmdsRlogindOtherLoginErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRcmdsRlogindOtherLoginErrors.setStatus('mandatory')
wfRcmdsRlogindActiveSessions = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRcmdsRlogindActiveSessions.setStatus('mandatory')
wfRcmdsRlogindManagerAutoScript = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRlogindManagerAutoScript.setStatus('mandatory')
wfRcmdsRlogindUserAutoScript = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRlogindUserAutoScript.setStatus('mandatory')
wfRcmdsRlogindUserAbortLogoutDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRlogindUserAbortLogoutDisable.setStatus('mandatory')
wfRcmdsRlogindHistoryDepth = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 40)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRlogindHistoryDepth.setStatus('mandatory')
wfRcmdsRlogindTcpPort = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 19), Integer32().clone(543)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRlogindTcpPort.setStatus('mandatory')
wfRcmdsRlogindTrustedHostAuthentication = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRlogindTrustedHostAuthentication.setStatus('mandatory')
wfRcmdsRlogindKerberosAuthentication = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRlogindKerberosAuthentication.setStatus('mandatory')
wfRcmdsRlogindKerberosSessionTypeAllowed = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 2, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("both", 1), ("encrypted", 2), ("unencrypted", 3), ("none", 4))).clone('both')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRlogindKerberosSessionTypeAllowed.setStatus('mandatory')
wfRcmdsRshd = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 3))
wfRcmdsRshdDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRshdDelete.setStatus('mandatory')
wfRcmdsRshdDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRshdDisable.setStatus('mandatory')
wfRcmdsRshdState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRcmdsRshdState.setStatus('mandatory')
wfRcmdsRshdTotalSessions = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRcmdsRshdTotalSessions.setStatus('mandatory')
wfRcmdsRshdTcpPort = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 3, 5), Integer32().clone(544)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRshdTcpPort.setStatus('mandatory')
wfRcmdsRshdTrustedHostAuthentication = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRshdTrustedHostAuthentication.setStatus('mandatory')
wfRcmdsRshdKerberosAuthentication = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRshdKerberosAuthentication.setStatus('mandatory')
wfRcmdsRshdKerberosSessionTypeAllowed = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("both", 1), ("encrypted", 2), ("unencrypted", 3), ("none", 4))).clone('both')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRshdKerberosSessionTypeAllowed.setStatus('mandatory')
wfRcmdsRshdRcpDefaultVolume = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 18, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 65))).clone(namedValues=NamedValues(("volume1", 1), ("volume2", 2), ("volume3", 3), ("volume4", 4), ("volume5", 5), ("volume6", 6), ("volume7", 7), ("volume8", 8), ("volume9", 9), ("volume10", 10), ("volume11", 11), ("volume12", 12), ("volume13", 13), ("volume14", 14), ("volumea", 65))).clone('volume2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRcmdsRshdRcpDefaultVolume.setStatus('mandatory')
mibBuilder.exportSymbols("BayNetworks-RCMDS-MIB", wfRcmdsRlogindLoginRetries=wfRcmdsRlogindLoginRetries, wfRcmdsRlogindPrompt=wfRcmdsRlogindPrompt, wfRcmdsRlogindState=wfRcmdsRlogindState, wfRcmdsRlogindMoreDisable=wfRcmdsRlogindMoreDisable, wfRcmdsRlogindHistoryDepth=wfRcmdsRlogindHistoryDepth, wfRcmdsRlogindCommandTimeOut=wfRcmdsRlogindCommandTimeOut, wfRcmdsRshdTrustedHostAuthentication=wfRcmdsRshdTrustedHostAuthentication, wfRcmdsRlogindUserAutoScript=wfRcmdsRlogindUserAutoScript, wfRcmdsRlogindKerberosAuthentication=wfRcmdsRlogindKerberosAuthentication, wfRcmdsRlogindKerberosSessionTypeAllowed=wfRcmdsRlogindKerberosSessionTypeAllowed, wfRcmdsRshdTotalSessions=wfRcmdsRshdTotalSessions, wfRcmdsRshdRcpDefaultVolume=wfRcmdsRshdRcpDefaultVolume, wfRcmdsRshdKerberosAuthentication=wfRcmdsRshdKerberosAuthentication, wfRcmdsRlogindTrustedHostAuthentication=wfRcmdsRlogindTrustedHostAuthentication, wfRcmdsReservedPort=wfRcmdsReservedPort, wfRcmdsDelete=wfRcmdsDelete, wfRcmdsRlogindTotalLogins=wfRcmdsRlogindTotalLogins, wfRcmdsRlogindUserAbortLogoutDisable=wfRcmdsRlogindUserAbortLogoutDisable, wfRcmdsRlogind=wfRcmdsRlogind, wfRcmdsRlogindActiveSessions=wfRcmdsRlogindActiveSessions, wfRcmdsRshdKerberosSessionTypeAllowed=wfRcmdsRshdKerberosSessionTypeAllowed, wfRcmdsRlogindTcpPort=wfRcmdsRlogindTcpPort, wfRcmdsRlogindDelete=wfRcmdsRlogindDelete, wfRcmdsRlogindLoginTimeOut=wfRcmdsRlogindLoginTimeOut, wfRcmdsRlogindUserLoginErrors=wfRcmdsRlogindUserLoginErrors, wfRcmdsRouterHostName=wfRcmdsRouterHostName, wfRcmds=wfRcmds, wfRcmdsKerberosHostServiceKey=wfRcmdsKerberosHostServiceKey, wfRcmdsRlogindPasswordTimeOut=wfRcmdsRlogindPasswordTimeOut, wfRcmdsRlogindOtherLoginErrors=wfRcmdsRlogindOtherLoginErrors, wfRcmdsRshdDisable=wfRcmdsRshdDisable, wfRcmdsRlogindManagerLoginErrors=wfRcmdsRlogindManagerLoginErrors, wfRcmdsRshd=wfRcmdsRshd, wfRcmdsDisable=wfRcmdsDisable, wfRcmdsRlogindDisable=wfRcmdsRlogindDisable, wfRcmdsKerberosKDCName=wfRcmdsKerberosKDCName, wfRcmdsRshdDelete=wfRcmdsRshdDelete, wfRcmdsKerberosDefaultRealmName=wfRcmdsKerberosDefaultRealmName, wfRcmdsRlogindManagerAutoScript=wfRcmdsRlogindManagerAutoScript, wfRcmdsRshdState=wfRcmdsRshdState, wfRcmdsRshdTcpPort=wfRcmdsRshdTcpPort)
