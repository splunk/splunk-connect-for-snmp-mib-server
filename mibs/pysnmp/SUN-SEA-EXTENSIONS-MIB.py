#
# PySNMP MIB module SUN-SEA-EXTENSIONS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SUN-SEA-EXTENSIONS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:04:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, ModuleIdentity, ObjectIdentity, Bits, MibIdentifier, NotificationType, Counter64, Integer32, TimeTicks, IpAddress, enterprises, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, mgmt, Gauge32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ModuleIdentity", "ObjectIdentity", "Bits", "MibIdentifier", "NotificationType", "Counter64", "Integer32", "TimeTicks", "IpAddress", "enterprises", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "mgmt", "Gauge32", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sunMIB, = mibBuilder.importSymbols("SUN-MIB", "sunMIB")
sunSeaExtensionsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 42, 3))
if mibBuilder.loadTexts: sunSeaExtensionsMIB.setLastUpdated('200309180000Z')
if mibBuilder.loadTexts: sunSeaExtensionsMIB.setOrganization('Sun Microsystems, Inc.')
sunSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 3, 1))
sunInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 3, 2))
sunAt = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 3, 3))
sunIp = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 3, 4))
sunIcmp = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 3, 5))
sunTcp = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 3, 6))
sunUdp = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 3, 7))
sunSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 3, 11))
sunProcesses = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 3, 12))
sunHostPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 42, 3, 13))
agentDescr = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDescr.setStatus('mandatory')
hostID = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostID.setStatus('mandatory')
motd = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: motd.setStatus('mandatory')
unixTime = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: unixTime.setStatus('mandatory')
sunProcessTable = MibTable((1, 3, 6, 1, 4, 1, 42, 3, 12, 1), ).setMaxAccess("readonly")
if mibBuilder.loadTexts: sunProcessTable.setStatus('mandatory')
psEntry = MibTableRow((1, 3, 6, 1, 4, 1, 42, 3, 12, 1, 1), ).setMaxAccess("readonly").setIndexNames((0, "SUN-SEA-EXTENSIONS-MIB", "psProcessID"))
if mibBuilder.loadTexts: psEntry.setStatus('mandatory')
psProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 3, 12, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psProcessID.setStatus('mandatory')
psParentProcessID = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 3, 12, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psParentProcessID.setStatus('mandatory')
psProcessSize = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 3, 12, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psProcessSize.setStatus('mandatory')
psProcessCpuTime = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 3, 12, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psProcessCpuTime.setStatus('mandatory')
psProcessState = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 3, 12, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psProcessState.setStatus('mandatory')
psProcessWaitChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 3, 12, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psProcessWaitChannel.setStatus('mandatory')
psProcessTTY = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 3, 12, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psProcessTTY.setStatus('mandatory')
psProcessUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 3, 12, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psProcessUserName.setStatus('mandatory')
psProcessUserID = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 3, 12, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psProcessUserID.setStatus('mandatory')
psProcessName = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 3, 12, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psProcessName.setStatus('mandatory')
psProcessStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 42, 3, 12, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psProcessStatus.setStatus('mandatory')
rsUserProcessTime = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 13, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUserProcessTime.setStatus('mandatory')
rsNiceModeTime = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 13, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsNiceModeTime.setStatus('mandatory')
rsSystemProcessTime = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 13, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsSystemProcessTime.setStatus('mandatory')
rsIdleModeTime = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 13, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIdleModeTime.setStatus('mandatory')
rsDiskXfer1 = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 13, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsDiskXfer1.setStatus('mandatory')
rsDiskXfer2 = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 13, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsDiskXfer2.setStatus('mandatory')
rsDiskXfer3 = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 13, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsDiskXfer3.setStatus('mandatory')
rsDiskXfer4 = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 13, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsDiskXfer4.setStatus('mandatory')
rsVPagesIn = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 13, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsVPagesIn.setStatus('mandatory')
rsVPagesOut = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 13, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsVPagesOut.setStatus('mandatory')
rsVSwapIn = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 13, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsVSwapIn.setStatus('mandatory')
rsVSwapOut = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 13, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsVSwapOut.setStatus('mandatory')
rsVIntr = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 13, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsVIntr.setStatus('mandatory')
rsIfInPackets = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 13, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIfInPackets.setStatus('mandatory')
rsIfOutPackets = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 13, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIfOutPackets.setStatus('mandatory')
rsIfInErrors = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 13, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIfInErrors.setStatus('mandatory')
rsIfOutErrors = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 13, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIfOutErrors.setStatus('mandatory')
rsIfCollisions = MibScalar((1, 3, 6, 1, 4, 1, 42, 3, 13, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsIfCollisions.setStatus('mandatory')
mibBuilder.exportSymbols("SUN-SEA-EXTENSIONS-MIB", psProcessWaitChannel=psProcessWaitChannel, sunIcmp=sunIcmp, hostID=hostID, sunIp=sunIp, psProcessTTY=psProcessTTY, rsDiskXfer4=rsDiskXfer4, sunSystem=sunSystem, rsIfOutErrors=rsIfOutErrors, sunSeaExtensionsMIB=sunSeaExtensionsMIB, rsSystemProcessTime=rsSystemProcessTime, rsIfOutPackets=rsIfOutPackets, sunProcesses=sunProcesses, sunAt=sunAt, rsDiskXfer2=rsDiskXfer2, sunUdp=sunUdp, motd=motd, unixTime=unixTime, rsDiskXfer1=rsDiskXfer1, rsDiskXfer3=rsDiskXfer3, rsIfCollisions=rsIfCollisions, sunTcp=sunTcp, psProcessStatus=psProcessStatus, sunProcessTable=sunProcessTable, rsNiceModeTime=rsNiceModeTime, psParentProcessID=psParentProcessID, rsVPagesIn=rsVPagesIn, psProcessName=psProcessName, psProcessCpuTime=psProcessCpuTime, psProcessState=psProcessState, rsIdleModeTime=rsIdleModeTime, PYSNMP_MODULE_ID=sunSeaExtensionsMIB, psProcessUserID=psProcessUserID, psEntry=psEntry, psProcessID=psProcessID, psProcessUserName=psProcessUserName, psProcessSize=psProcessSize, rsVPagesOut=rsVPagesOut, sunSnmp=sunSnmp, rsIfInErrors=rsIfInErrors, sunInterfaces=sunInterfaces, rsIfInPackets=rsIfInPackets, sunHostPerf=sunHostPerf, rsVSwapOut=rsVSwapOut, rsUserProcessTime=rsUserProcessTime, rsVSwapIn=rsVSwapIn, rsVIntr=rsVIntr, agentDescr=agentDescr)
