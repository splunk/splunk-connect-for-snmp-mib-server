#
# PySNMP MIB module DFL800-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DFL800-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:26:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, Counter32, MibIdentifier, IpAddress, enterprises, TimeTicks, Counter64, iso, Integer32, ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, NotificationType, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "MibIdentifier", "IpAddress", "enterprises", "TimeTicks", "Counter64", "iso", "Integer32", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "NotificationType", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
dfl800_MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 1, 2)).setLabel("dfl800-MIB")
dfl800_MIB.setRevisions(('2010-09-02 11:39', '2010-03-30 09:00', '2009-11-10 09:16', '2008-11-18 16:05', '2008-10-14 12:27', '2007-10-31 00:00',))
if mibBuilder.loadTexts: dfl800_MIB.setLastUpdated('201009021139Z')
if mibBuilder.loadTexts: dfl800_MIB.setOrganization('D-Link Corporation')
dlink = MibIdentifier((1, 3, 6, 1, 4, 1, 171))
netdefendMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20))
ipsFirewall = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1))
dfl800 = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2))
dfl800OS = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1))
dfl800OSStats = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2))
dfl800reg = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2))
dfl800MibModules = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 1))
dfl800MibConfs = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 2))
dfl800MibObjectGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 3))
dfl800System = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1))
dfl800SysCpuLoad = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysCpuLoad.setStatus('current')
dfl800SysForwardedBits = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysForwardedBits.setStatus('current')
dfl800SysForwardedPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysForwardedPackets.setStatus('current')
dfl800SysBuffUse = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysBuffUse.setStatus('current')
dfl800SysConns = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysConns.setStatus('current')
dfl800SysPerStateCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 6))
dfl800SysPscTcpSyn = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysPscTcpSyn.setStatus('current')
dfl800SysPscTcpOpen = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 6, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysPscTcpOpen.setStatus('current')
dfl800SysPscTcpFin = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 6, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysPscTcpFin.setStatus('current')
dfl800SysPscUdp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 6, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysPscUdp.setStatus('current')
dfl800SysPscIcmp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 6, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysPscIcmp.setStatus('current')
dfl800SysPscOther = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 6, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysPscOther.setStatus('current')
dfl800IfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7), )
if mibBuilder.loadTexts: dfl800IfStatsTable.setStatus('current')
dfl800IfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7, 1), ).setIndexNames((0, "DFL800-MIB", "dfl800IfStatsIndex"))
if mibBuilder.loadTexts: dfl800IfStatsEntry.setStatus('current')
dfl800IfStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl800IfStatsIndex.setStatus('current')
dfl800IfName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfName.setStatus('current')
dfl800IfFragsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfFragsIn.setStatus('current')
dfl800IfFragReassOk = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfFragReassOk.setStatus('current')
dfl800IfFragReassFail = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfFragReassFail.setStatus('current')
dfl800IfPktsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfPktsInCnt.setStatus('current')
dfl800IfPktsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfPktsOutCnt.setStatus('current')
dfl800IfBitsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfBitsInCnt.setStatus('current')
dfl800IfBitsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfBitsOutCnt.setStatus('current')
dfl800IfPktsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfPktsTotCnt.setStatus('current')
dfl800IfBitsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfBitsTotCnt.setStatus('current')
dfl800IfHCPktsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfHCPktsInCnt.setStatus('current')
dfl800IfHCPktsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfHCPktsOutCnt.setStatus('current')
dfl800IfHCBitsInCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfHCBitsInCnt.setStatus('current')
dfl800IfHCBitsOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfHCBitsOutCnt.setStatus('current')
dfl800IfHCPktsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfHCPktsTotCnt.setStatus('current')
dfl800IfHCBitsTotCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 7, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfHCBitsTotCnt.setStatus('current')
dfl800IfRxRingTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 8), )
if mibBuilder.loadTexts: dfl800IfRxRingTable.setStatus('current')
dfl800IfRxRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 8, 1), ).setIndexNames((0, "DFL800-MIB", "dfl800IfRxRingIndex"))
if mibBuilder.loadTexts: dfl800IfRxRingEntry.setStatus('current')
dfl800IfRxRingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl800IfRxRingIndex.setStatus('current')
dfl800IfRxRingFifoErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 8, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfRxRingFifoErrors.setStatus('current')
dfl800IfRxDespools = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 8, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfRxDespools.setStatus('current')
dfl800IfRxAvgUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 8, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfRxAvgUse.setStatus('current')
dfl800IfRxRingSaturation = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 8, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfRxRingSaturation.setStatus('current')
dfl800RxRingFlooded = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 8, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800RxRingFlooded.setStatus('current')
dfl800IfTxRingTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 9), )
if mibBuilder.loadTexts: dfl800IfTxRingTable.setStatus('current')
dfl800IfTxRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 9, 1), ).setIndexNames((0, "DFL800-MIB", "dfl800IfTxRingIndex"))
if mibBuilder.loadTexts: dfl800IfTxRingEntry.setStatus('current')
dfl800IfTxRingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl800IfTxRingIndex.setStatus('current')
dfl800IfTxDespools = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 9, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfTxDespools.setStatus('current')
dfl800IfTxAvgUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 9, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfTxAvgUse.setStatus('current')
dfl800IfTxRingSaturation = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 9, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfTxRingSaturation.setStatus('current')
dfl800RxTingFlooded = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 9, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800RxTingFlooded.setStatus('current')
dfl800IfVlanStatsTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 10), )
if mibBuilder.loadTexts: dfl800IfVlanStatsTable.setStatus('current')
dfl800IfVlanStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 10, 1), ).setIndexNames((0, "DFL800-MIB", "dfl800IfVlanIndex"))
if mibBuilder.loadTexts: dfl800IfVlanStatsEntry.setStatus('current')
dfl800IfVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl800IfVlanIndex.setStatus('current')
dfl800IfVlanUntaggedInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfVlanUntaggedInPkts.setStatus('current')
dfl800IfVlanUntaggedOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfVlanUntaggedOutPkts.setStatus('current')
dfl800IfVlanUntaggedTotPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfVlanUntaggedTotPkts.setStatus('current')
dfl800IfVlanUntaggedInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfVlanUntaggedInOctets.setStatus('current')
dfl800IfVlanUntaggedOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfVlanUntaggedOutOctets.setStatus('current')
dfl800IfVlanUntaggedTotOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IfVlanUntaggedTotOctets.setStatus('current')
dfl800HWSensorTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 11), )
if mibBuilder.loadTexts: dfl800HWSensorTable.setStatus('current')
dfl800HWSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 11, 1), ).setIndexNames((0, "DFL800-MIB", "dfl800HWSensorIndex"))
if mibBuilder.loadTexts: dfl800HWSensorEntry.setStatus('current')
dfl800HWSensorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl800HWSensorIndex.setStatus('current')
dfl800HWSensorName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800HWSensorName.setStatus('current')
dfl800HWSensorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 11, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800HWSensorValue.setStatus('current')
dfl800HWSensorUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 11, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800HWSensorUnit.setStatus('current')
dfl800SysMemUsage = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysMemUsage.setStatus('current')
dfl800SysTCPUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 13))
dfl800SysTCPRecvSmall = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 13, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysTCPRecvSmall.setStatus('current')
dfl800SysTCPRecvLarge = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 13, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysTCPRecvLarge.setStatus('current')
dfl800SysTCPSendSmall = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 13, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysTCPSendSmall.setStatus('current')
dfl800SysTCPSendLarge = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 13, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysTCPSendLarge.setStatus('current')
dfl800SysTimerUsage = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysTimerUsage.setStatus('current')
dfl800SysConnOPS = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysConnOPS.setStatus('current')
dfl800SysConnCPS = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysConnCPS.setStatus('current')
dfl800SysHCForwardedBits = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SysHCForwardedBits.setStatus('current')
dfl800VPN = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2))
dfl800IPsec = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1))
dfl800IPsecGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1))
dfl800IPsecPhaseOneActive = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecPhaseOneActive.setStatus('current')
dfl800IPsecPhaseOneAggrModeDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecPhaseOneAggrModeDone.setStatus('current')
dfl800IPsecQuickModeActive = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecQuickModeActive.setStatus('current')
dfl800IPsecPhaseOneDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecPhaseOneDone.setStatus('current')
dfl800IPsecPhaseOneFailed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecPhaseOneFailed.setStatus('current')
dfl800IPsecPhaseOneRekeyed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecPhaseOneRekeyed.setStatus('current')
dfl800IPsecQuickModeDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecQuickModeDone.setStatus('current')
dfl800IPsecQuickModeFailed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecQuickModeFailed.setStatus('current')
dfl800IPsecInfoDone = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecInfoDone.setStatus('current')
dfl800IPsecInfoFailed = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecInfoFailed.setStatus('current')
dfl800IPsecInOctetsComp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecInOctetsComp.setStatus('current')
dfl800IPsecInOctetsUncomp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecInOctetsUncomp.setStatus('current')
dfl800IPsecOutOctetsComp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecOutOctetsComp.setStatus('current')
dfl800IPsecOutOctetsUncomp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecOutOctetsUncomp.setStatus('current')
dfl800IPsecForwardedOctetsComp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecForwardedOctetsComp.setStatus('current')
dfl800IPsecForwardedOctetsUcomp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecForwardedOctetsUcomp.setStatus('current')
dfl800IPsecInPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecInPackets.setStatus('current')
dfl800IPsecOutPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecOutPackets.setStatus('current')
dfl800IPsecForwardedPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecForwardedPackets.setStatus('current')
dfl800IPsecActiveTransforms = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecActiveTransforms.setStatus('current')
dfl800IPsecTotalTransforms = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecTotalTransforms.setStatus('current')
dfl800IPsecOutOfTransforms = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecOutOfTransforms.setStatus('current')
dfl800IPsecTotalRekeys = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPsecTotalRekeys.setStatus('current')
dfl800Rules = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 3))
dfl800RuleUseTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 3, 2), )
if mibBuilder.loadTexts: dfl800RuleUseTable.setStatus('current')
dfl800RuleUseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 3, 2, 1), ).setIndexNames((0, "DFL800-MIB", "dfl800RuleIndex"))
if mibBuilder.loadTexts: dfl800RuleUseEntry.setStatus('current')
dfl800RuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl800RuleIndex.setStatus('current')
dfl800RuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 3, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800RuleName.setStatus('current')
dfl800RuleUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800RuleUse.setStatus('current')
dfl800IPPools = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 4))
dfl800IPPoolsNumber = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPPoolsNumber.setStatus('current')
dfl800IPPoolTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 4, 2), )
if mibBuilder.loadTexts: dfl800IPPoolTable.setStatus('current')
dfl800IPPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 4, 2, 1), ).setIndexNames((0, "DFL800-MIB", "dfl800IPPoolIndex"))
if mibBuilder.loadTexts: dfl800IPPoolEntry.setStatus('current')
dfl800IPPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl800IPPoolIndex.setStatus('current')
dfl800IPPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPPoolName.setStatus('current')
dfl800IPPoolPrepare = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 4, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPPoolPrepare.setStatus('current')
dfl800IPPoolFree = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 4, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPPoolFree.setStatus('current')
dfl800IPPoolMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 4, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPPoolMisses.setStatus('current')
dfl800IPPoolClientFails = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 4, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPPoolClientFails.setStatus('current')
dfl800IPPoolUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 4, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800IPPoolUsed.setStatus('current')
dfl800DHCPServer = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 5))
dfl800DHCPTotalRejected = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 5, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800DHCPTotalRejected.setStatus('current')
dfl800DHCPRuleTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 5, 2), )
if mibBuilder.loadTexts: dfl800DHCPRuleTable.setStatus('current')
dfl800DHCPRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 5, 2, 1), ).setIndexNames((0, "DFL800-MIB", "dfl800DHCPRuleIndex"))
if mibBuilder.loadTexts: dfl800DHCPRuleEntry.setStatus('current')
dfl800DHCPRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl800DHCPRuleIndex.setStatus('current')
dfl800DHCPRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 5, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800DHCPRuleName.setStatus('current')
dfl800DHCPRuleUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 5, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800DHCPRuleUsage.setStatus('current')
dfl800DHCPRuleUsagePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 5, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800DHCPRuleUsagePercent.setStatus('current')
dfl800DHCPActiveClients = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 5, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800DHCPActiveClients.setStatus('current')
dfl800DHCPActiveClientsPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 5, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800DHCPActiveClientsPercent.setStatus('current')
dfl800DHCPRejectedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 5, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800DHCPRejectedRequests.setStatus('current')
dfl800DHCPTotalLeases = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 5, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800DHCPTotalLeases.setStatus('current')
dfl800UserAuth = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 6))
dfl800UserAuthHTTPUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800UserAuthHTTPUsers.setStatus('current')
dfl800UserAuthXAUTHUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 6, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800UserAuthXAUTHUsers.setStatus('current')
dfl800UserAuthHTTPSUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 6, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800UserAuthHTTPSUsers.setStatus('current')
dfl800UserAuthPPPUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 6, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800UserAuthPPPUsers.setStatus('current')
dfl800UserAuthEAPUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 6, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800UserAuthEAPUsers.setStatus('current')
dfl800UserAuthRuleUseTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 6, 6), )
if mibBuilder.loadTexts: dfl800UserAuthRuleUseTable.setStatus('current')
dfl800UserAuthRuleUseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 6, 6, 1), ).setIndexNames((0, "DFL800-MIB", "dfl800UserAuthRuleIndex"))
if mibBuilder.loadTexts: dfl800UserAuthRuleUseEntry.setStatus('current')
dfl800UserAuthRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 6, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl800UserAuthRuleIndex.setStatus('current')
dfl800UserAuthRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 6, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800UserAuthRuleName.setStatus('current')
dfl800UserAuthRuleUse = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 6, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800UserAuthRuleUse.setStatus('current')
dfl800LinkMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 7))
dfl800LinkMonGrp = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800LinkMonGrp.setStatus('current')
dfl800LinkMonGrpTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 7, 2), )
if mibBuilder.loadTexts: dfl800LinkMonGrpTable.setStatus('current')
dfl800LinkMonGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 7, 2, 1), ).setIndexNames((0, "DFL800-MIB", "dfl800LinkMonGrpIndex"))
if mibBuilder.loadTexts: dfl800LinkMonGrpEntry.setStatus('current')
dfl800LinkMonGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl800LinkMonGrpIndex.setStatus('current')
dfl800LinkMonGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 7, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800LinkMonGrpName.setStatus('current')
dfl800LinkMonGrpHostsUp = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 7, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800LinkMonGrpHostsUp.setStatus('current')
dfl800LinkMonHostTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 7, 3), )
if mibBuilder.loadTexts: dfl800LinkMonHostTable.setStatus('current')
dfl800LinkMonHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 7, 3, 1), ).setIndexNames((0, "DFL800-MIB", "dfl800LinkMonGrpIndex"), (0, "DFL800-MIB", "dfl800LinkMonHostIndex"))
if mibBuilder.loadTexts: dfl800LinkMonHostEntry.setStatus('current')
dfl800LinkMonHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl800LinkMonHostIndex.setStatus('current')
dfl800LinkMonHostId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 7, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800LinkMonHostId.setStatus('current')
dfl800LinkMonHostShortTermLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 7, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800LinkMonHostShortTermLoss.setStatus('current')
dfl800LinkMonHostPacketsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 7, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800LinkMonHostPacketsLost.setStatus('current')
dfl800Pipes = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8))
dfl800PipeUsers = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipeUsers.setStatus('current')
dfl800PipeTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 2), )
if mibBuilder.loadTexts: dfl800PipeTable.setStatus('current')
dfl800PipeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 2, 1), ).setIndexNames((0, "DFL800-MIB", "dfl800PipeIndex"))
if mibBuilder.loadTexts: dfl800PipeEntry.setStatus('current')
dfl800PipeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl800PipeIndex.setStatus('current')
dfl800PipeName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipeName.setStatus('current')
dfl800PipeMinPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipeMinPrec.setStatus('current')
dfl800PipeMaxPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipeMaxPrec.setStatus('current')
dfl800PipeDefPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipeDefPrec.setStatus('current')
dfl800PipeNumPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipeNumPrec.setStatus('current')
dfl800PipeNumUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipeNumUsers.setStatus('current')
dfl800PipeCurrentBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipeCurrentBps.setStatus('current')
dfl800PipeCurrentPps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipeCurrentPps.setStatus('current')
dfl800PipeDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipeDelayedPackets.setStatus('current')
dfl800PipeDropedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipeDropedPackets.setStatus('current')
dfl800PipePrecTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 3), )
if mibBuilder.loadTexts: dfl800PipePrecTable.setStatus('current')
dfl800PipePrecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 3, 1), ).setIndexNames((0, "DFL800-MIB", "dfl800PipeIndex"), (0, "DFL800-MIB", "dfl800PipePrecIndex"))
if mibBuilder.loadTexts: dfl800PipePrecEntry.setStatus('current')
dfl800PipePrecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl800PipePrecIndex.setStatus('current')
dfl800PipePrec = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipePrec.setStatus('current')
dfl800PipePrecBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipePrecBps.setStatus('current')
dfl800PipePrecTotalPps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipePrecTotalPps.setStatus('current')
dfl800PipePrecReservedBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipePrecReservedBps.setStatus('current')
dfl800PipePrecDynLimBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipePrecDynLimBps.setStatus('current')
dfl800PipePrecDynUsrLimBps = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipePrecDynUsrLimBps.setStatus('current')
dfl800PipePrecDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipePrecDelayedPackets.setStatus('current')
dfl800PipePrecDropedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 8, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800PipePrecDropedPackets.setStatus('current')
dfl800ALG = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9))
dfl800AlgSessions = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800AlgSessions.setStatus('current')
dfl800AlgConnections = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800AlgConnections.setStatus('current')
dfl800AlgTCPStreams = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800AlgTCPStreams.setStatus('current')
dfl800HttpAlg = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 4))
dfl800HttpAlgTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 4, 1), )
if mibBuilder.loadTexts: dfl800HttpAlgTable.setStatus('current')
dfl800HttpAlgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 4, 1, 1), ).setIndexNames((0, "DFL800-MIB", "dfl800HttpAlgIndex"))
if mibBuilder.loadTexts: dfl800HttpAlgEntry.setStatus('current')
dfl800HttpAlgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl800HttpAlgIndex.setStatus('current')
dfl800HttpAlgName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800HttpAlgName.setStatus('current')
dfl800HttpAlgTotalRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 4, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800HttpAlgTotalRequested.setStatus('current')
dfl800HttpAlgTotalAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 4, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800HttpAlgTotalAllowed.setStatus('current')
dfl800HttpAlgTotalBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 4, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800HttpAlgTotalBlocked.setStatus('current')
dfl800HttpAlgCntFltTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 4, 2), )
if mibBuilder.loadTexts: dfl800HttpAlgCntFltTable.setStatus('current')
dfl800HttpAlgCntFltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 4, 2, 1), ).setIndexNames((0, "DFL800-MIB", "dfl800HttpAlgIndex"), (0, "DFL800-MIB", "dfl800HttpAlgCntFltIndex"))
if mibBuilder.loadTexts: dfl800HttpAlgCntFltEntry.setStatus('current')
dfl800HttpAlgCntFltIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl800HttpAlgCntFltIndex.setStatus('current')
dfl800HttpAlgCntFltName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800HttpAlgCntFltName.setStatus('current')
dfl800HttpAlgCntFltRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 4, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800HttpAlgCntFltRequests.setStatus('current')
dfl800HttpAlgCntFltAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 4, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800HttpAlgCntFltAllowed.setStatus('current')
dfl800HttpAlgCntFltBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 4, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800HttpAlgCntFltBlocked.setStatus('current')
dfl800SmtpAlg = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 5))
dfl800SmtpAlgTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 5, 1), )
if mibBuilder.loadTexts: dfl800SmtpAlgTable.setStatus('current')
dfl800SmtpAlgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 5, 1, 1), ).setIndexNames((0, "DFL800-MIB", "dfl800SmtpAlgIndex"))
if mibBuilder.loadTexts: dfl800SmtpAlgEntry.setStatus('current')
dfl800SmtpAlgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl800SmtpAlgIndex.setStatus('current')
dfl800SmtpAlgName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SmtpAlgName.setStatus('current')
dfl800SmtpAlgTotCheckedSes = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 5, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SmtpAlgTotCheckedSes.setStatus('current')
dfl800SmtpAlgTotSpamSes = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 5, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SmtpAlgTotSpamSes.setStatus('current')
dfl800SmtpAlgTotDroppedSes = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 5, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SmtpAlgTotDroppedSes.setStatus('current')
dfl800SmtpAlgDnsBlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 5, 2), )
if mibBuilder.loadTexts: dfl800SmtpAlgDnsBlTable.setStatus('current')
dfl800SmtpAlgDnsBlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 5, 2, 1), ).setIndexNames((0, "DFL800-MIB", "dfl800SmtpAlgIndex"), (0, "DFL800-MIB", "dfl800SmtpAlgDnsBlIndex"))
if mibBuilder.loadTexts: dfl800SmtpAlgDnsBlEntry.setStatus('current')
dfl800SmtpAlgDnsBlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl800SmtpAlgDnsBlIndex.setStatus('current')
dfl800SmtpAlgDnsBlName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 5, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SmtpAlgDnsBlName.setStatus('current')
dfl800SmtpAlgDnsBlChecked = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 5, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SmtpAlgDnsBlChecked.setStatus('current')
dfl800SmtpAlgDnsBlMatched = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 5, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SmtpAlgDnsBlMatched.setStatus('current')
dfl800SmtpAlgDnsBlFailChecks = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 9, 5, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800SmtpAlgDnsBlFailChecks.setStatus('current')
dfl800DHCPRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 11))
dfl800DHCPRelayCurClients = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 11, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800DHCPRelayCurClients.setStatus('current')
dfl800DHCPRelayCurTrans = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 11, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800DHCPRelayCurTrans.setStatus('current')
dfl800DHCPRelayRejected = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 11, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800DHCPRelayRejected.setStatus('current')
dfl800DHCPRelayRuleTable = MibTable((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 11, 4), )
if mibBuilder.loadTexts: dfl800DHCPRelayRuleTable.setStatus('current')
dfl800DHCPRelayRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 11, 4, 1), ).setIndexNames((0, "DFL800-MIB", "dfl800DHCPRelayRuleIndex"))
if mibBuilder.loadTexts: dfl800DHCPRelayRuleEntry.setStatus('current')
dfl800DHCPRelayRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 11, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: dfl800DHCPRelayRuleIndex.setStatus('current')
dfl800DHCPRelayRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 11, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800DHCPRelayRuleName.setStatus('current')
dfl800DHCPRelayRuleHits = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 11, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800DHCPRelayRuleHits.setStatus('current')
dfl800DHCPRelayRuleCurClients = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 11, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800DHCPRelayRuleCurClients.setStatus('current')
dfl800DHCPRelayRuleRejCliPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 11, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800DHCPRelayRuleRejCliPkts.setStatus('current')
dfl800DHCPRelayRuleRejSrvPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 11, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800DHCPRelayRuleRejSrvPkts.setStatus('current')
dfl800HA = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 12))
dfl800HASyncSendQueueLength = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 12, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800HASyncSendQueueLength.setStatus('current')
dfl800HASyncSendQueueUsagePkt = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 12, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800HASyncSendQueueUsagePkt.setStatus('current')
dfl800HASyncSendQueueUsageOct = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 12, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800HASyncSendQueueUsageOct.setStatus('current')
dfl800HASyncSentPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 12, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800HASyncSentPackets.setStatus('current')
dfl800HASyncSendResentPackets = MibScalar((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 1, 2, 12, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dfl800HASyncSendResentPackets.setStatus('current')
dfl800StatsConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 2, 1))
dfl800StatsRegGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 3, 1))
dfl800SystemObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 3, 1, 1)).setObjects(("DFL800-MIB", "dfl800SysCpuLoad"), ("DFL800-MIB", "dfl800SysForwardedBits"), ("DFL800-MIB", "dfl800SysForwardedPackets"), ("DFL800-MIB", "dfl800SysBuffUse"), ("DFL800-MIB", "dfl800SysConns"), ("DFL800-MIB", "dfl800HWSensorName"), ("DFL800-MIB", "dfl800HWSensorValue"), ("DFL800-MIB", "dfl800HWSensorUnit"), ("DFL800-MIB", "dfl800SysMemUsage"), ("DFL800-MIB", "dfl800SysTimerUsage"), ("DFL800-MIB", "dfl800SysConnOPS"), ("DFL800-MIB", "dfl800SysConnCPS"), ("DFL800-MIB", "dfl800SysHCForwardedBits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl800SystemObjectGroup = dfl800SystemObjectGroup.setStatus('current')
dfl800IPsecObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 3, 1, 2)).setObjects(("DFL800-MIB", "dfl800IPsecPhaseOneActive"), ("DFL800-MIB", "dfl800IPsecPhaseOneAggrModeDone"), ("DFL800-MIB", "dfl800IPsecQuickModeActive"), ("DFL800-MIB", "dfl800IPsecPhaseOneDone"), ("DFL800-MIB", "dfl800IPsecPhaseOneFailed"), ("DFL800-MIB", "dfl800IPsecPhaseOneRekeyed"), ("DFL800-MIB", "dfl800IPsecQuickModeDone"), ("DFL800-MIB", "dfl800IPsecQuickModeFailed"), ("DFL800-MIB", "dfl800IPsecInfoDone"), ("DFL800-MIB", "dfl800IPsecInfoFailed"), ("DFL800-MIB", "dfl800IPsecInOctetsComp"), ("DFL800-MIB", "dfl800IPsecInOctetsUncomp"), ("DFL800-MIB", "dfl800IPsecOutOctetsComp"), ("DFL800-MIB", "dfl800IPsecOutOctetsUncomp"), ("DFL800-MIB", "dfl800IPsecForwardedOctetsComp"), ("DFL800-MIB", "dfl800IPsecForwardedOctetsUcomp"), ("DFL800-MIB", "dfl800IPsecInPackets"), ("DFL800-MIB", "dfl800IPsecOutPackets"), ("DFL800-MIB", "dfl800IPsecForwardedPackets"), ("DFL800-MIB", "dfl800IPsecActiveTransforms"), ("DFL800-MIB", "dfl800IPsecTotalTransforms"), ("DFL800-MIB", "dfl800IPsecOutOfTransforms"), ("DFL800-MIB", "dfl800IPsecTotalRekeys"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl800IPsecObjectGroup = dfl800IPsecObjectGroup.setStatus('current')
dfl800StateCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 3, 1, 3)).setObjects(("DFL800-MIB", "dfl800SysPscTcpSyn"), ("DFL800-MIB", "dfl800SysPscTcpOpen"), ("DFL800-MIB", "dfl800SysPscTcpFin"), ("DFL800-MIB", "dfl800SysPscUdp"), ("DFL800-MIB", "dfl800SysPscIcmp"), ("DFL800-MIB", "dfl800SysPscOther"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl800StateCountersGroup = dfl800StateCountersGroup.setStatus('current')
dfl800IPPoolGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 3, 1, 4)).setObjects(("DFL800-MIB", "dfl800IPPoolsNumber"), ("DFL800-MIB", "dfl800IPPoolName"), ("DFL800-MIB", "dfl800IPPoolPrepare"), ("DFL800-MIB", "dfl800IPPoolFree"), ("DFL800-MIB", "dfl800IPPoolMisses"), ("DFL800-MIB", "dfl800IPPoolClientFails"), ("DFL800-MIB", "dfl800IPPoolUsed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl800IPPoolGroup = dfl800IPPoolGroup.setStatus('current')
dfl800DHCPServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 3, 1, 5)).setObjects(("DFL800-MIB", "dfl800DHCPTotalRejected"), ("DFL800-MIB", "dfl800DHCPRuleName"), ("DFL800-MIB", "dfl800DHCPRuleUsage"), ("DFL800-MIB", "dfl800DHCPRuleUsagePercent"), ("DFL800-MIB", "dfl800DHCPActiveClients"), ("DFL800-MIB", "dfl800DHCPActiveClientsPercent"), ("DFL800-MIB", "dfl800DHCPRejectedRequests"), ("DFL800-MIB", "dfl800DHCPTotalLeases"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl800DHCPServerGroup = dfl800DHCPServerGroup.setStatus('current')
dfl800RuleUseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 3, 1, 6)).setObjects(("DFL800-MIB", "dfl800RuleName"), ("DFL800-MIB", "dfl800RuleUse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl800RuleUseGroup = dfl800RuleUseGroup.setStatus('current')
dfl800UserAuthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 3, 1, 7)).setObjects(("DFL800-MIB", "dfl800UserAuthHTTPUsers"), ("DFL800-MIB", "dfl800UserAuthXAUTHUsers"), ("DFL800-MIB", "dfl800UserAuthHTTPSUsers"), ("DFL800-MIB", "dfl800UserAuthPPPUsers"), ("DFL800-MIB", "dfl800UserAuthEAPUsers"), ("DFL800-MIB", "dfl800UserAuthRuleName"), ("DFL800-MIB", "dfl800UserAuthRuleUse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl800UserAuthGroup = dfl800UserAuthGroup.setStatus('current')
dfl800IfStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 3, 1, 8)).setObjects(("DFL800-MIB", "dfl800IfName"), ("DFL800-MIB", "dfl800IfFragsIn"), ("DFL800-MIB", "dfl800IfFragReassOk"), ("DFL800-MIB", "dfl800IfFragReassFail"), ("DFL800-MIB", "dfl800IfPktsInCnt"), ("DFL800-MIB", "dfl800IfPktsOutCnt"), ("DFL800-MIB", "dfl800IfBitsInCnt"), ("DFL800-MIB", "dfl800IfBitsOutCnt"), ("DFL800-MIB", "dfl800IfPktsTotCnt"), ("DFL800-MIB", "dfl800IfBitsTotCnt"), ("DFL800-MIB", "dfl800IfHCPktsInCnt"), ("DFL800-MIB", "dfl800IfHCPktsOutCnt"), ("DFL800-MIB", "dfl800IfHCBitsInCnt"), ("DFL800-MIB", "dfl800IfHCBitsOutCnt"), ("DFL800-MIB", "dfl800IfHCPktsTotCnt"), ("DFL800-MIB", "dfl800IfHCBitsTotCnt"), ("DFL800-MIB", "dfl800IfRxRingFifoErrors"), ("DFL800-MIB", "dfl800IfRxDespools"), ("DFL800-MIB", "dfl800IfRxAvgUse"), ("DFL800-MIB", "dfl800IfRxRingSaturation"), ("DFL800-MIB", "dfl800RxRingFlooded"), ("DFL800-MIB", "dfl800IfTxDespools"), ("DFL800-MIB", "dfl800IfTxAvgUse"), ("DFL800-MIB", "dfl800IfTxRingSaturation"), ("DFL800-MIB", "dfl800RxTingFlooded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl800IfStatsGroup = dfl800IfStatsGroup.setStatus('current')
dfl800LinkMonitorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 3, 1, 9)).setObjects(("DFL800-MIB", "dfl800LinkMonGrp"), ("DFL800-MIB", "dfl800LinkMonGrpName"), ("DFL800-MIB", "dfl800LinkMonGrpHostsUp"), ("DFL800-MIB", "dfl800LinkMonHostId"), ("DFL800-MIB", "dfl800LinkMonHostShortTermLoss"), ("DFL800-MIB", "dfl800LinkMonHostPacketsLost"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl800LinkMonitorGroup = dfl800LinkMonitorGroup.setStatus('current')
dfl800PipesObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 3, 1, 10)).setObjects(("DFL800-MIB", "dfl800PipeUsers"), ("DFL800-MIB", "dfl800PipeName"), ("DFL800-MIB", "dfl800PipeMinPrec"), ("DFL800-MIB", "dfl800PipeMaxPrec"), ("DFL800-MIB", "dfl800PipeDefPrec"), ("DFL800-MIB", "dfl800PipeNumPrec"), ("DFL800-MIB", "dfl800PipeNumUsers"), ("DFL800-MIB", "dfl800PipeCurrentBps"), ("DFL800-MIB", "dfl800PipeCurrentPps"), ("DFL800-MIB", "dfl800PipeDelayedPackets"), ("DFL800-MIB", "dfl800PipeDropedPackets"), ("DFL800-MIB", "dfl800PipePrec"), ("DFL800-MIB", "dfl800PipePrecBps"), ("DFL800-MIB", "dfl800PipePrecTotalPps"), ("DFL800-MIB", "dfl800PipePrecReservedBps"), ("DFL800-MIB", "dfl800PipePrecDynLimBps"), ("DFL800-MIB", "dfl800PipePrecDynUsrLimBps"), ("DFL800-MIB", "dfl800PipePrecDelayedPackets"), ("DFL800-MIB", "dfl800PipePrecDropedPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl800PipesObjectGroup = dfl800PipesObjectGroup.setStatus('current')
dfl800DHCPRelayObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 3, 1, 12)).setObjects(("DFL800-MIB", "dfl800DHCPRelayCurClients"), ("DFL800-MIB", "dfl800DHCPRelayCurTrans"), ("DFL800-MIB", "dfl800DHCPRelayRejected"), ("DFL800-MIB", "dfl800DHCPRelayRuleName"), ("DFL800-MIB", "dfl800DHCPRelayRuleHits"), ("DFL800-MIB", "dfl800DHCPRelayRuleCurClients"), ("DFL800-MIB", "dfl800DHCPRelayRuleRejCliPkts"), ("DFL800-MIB", "dfl800DHCPRelayRuleRejSrvPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl800DHCPRelayObjectGroup = dfl800DHCPRelayObjectGroup.setStatus('current')
dfl800AlgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 3, 1, 13)).setObjects(("DFL800-MIB", "dfl800AlgSessions"), ("DFL800-MIB", "dfl800AlgConnections"), ("DFL800-MIB", "dfl800AlgTCPStreams"), ("DFL800-MIB", "dfl800HttpAlgName"), ("DFL800-MIB", "dfl800HttpAlgTotalRequested"), ("DFL800-MIB", "dfl800HttpAlgTotalAllowed"), ("DFL800-MIB", "dfl800HttpAlgTotalBlocked"), ("DFL800-MIB", "dfl800HttpAlgCntFltName"), ("DFL800-MIB", "dfl800HttpAlgCntFltRequests"), ("DFL800-MIB", "dfl800HttpAlgCntFltAllowed"), ("DFL800-MIB", "dfl800HttpAlgCntFltBlocked"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl800AlgGroup = dfl800AlgGroup.setStatus('current')
dfl800HAGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 3, 1, 14)).setObjects(("DFL800-MIB", "dfl800HASyncSendQueueLength"), ("DFL800-MIB", "dfl800HASyncSendQueueUsagePkt"), ("DFL800-MIB", "dfl800HASyncSendQueueUsageOct"), ("DFL800-MIB", "dfl800HASyncSentPackets"), ("DFL800-MIB", "dfl800HASyncSendResentPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl800HAGroup = dfl800HAGroup.setStatus('current')
dfl800IfVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 3, 1, 15)).setObjects(("DFL800-MIB", "dfl800IfVlanUntaggedInPkts"), ("DFL800-MIB", "dfl800IfVlanUntaggedOutPkts"), ("DFL800-MIB", "dfl800IfVlanUntaggedTotPkts"), ("DFL800-MIB", "dfl800IfVlanUntaggedInOctets"), ("DFL800-MIB", "dfl800IfVlanUntaggedOutOctets"), ("DFL800-MIB", "dfl800IfVlanUntaggedTotOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl800IfVlanGroup = dfl800IfVlanGroup.setStatus('current')
dfl800SmtpAlgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 3, 1, 16)).setObjects(("DFL800-MIB", "dfl800SmtpAlgName"), ("DFL800-MIB", "dfl800SmtpAlgTotCheckedSes"), ("DFL800-MIB", "dfl800SmtpAlgTotSpamSes"), ("DFL800-MIB", "dfl800SmtpAlgTotDroppedSes"), ("DFL800-MIB", "dfl800SmtpAlgDnsBlName"), ("DFL800-MIB", "dfl800SmtpAlgDnsBlChecked"), ("DFL800-MIB", "dfl800SmtpAlgDnsBlMatched"), ("DFL800-MIB", "dfl800SmtpAlgDnsBlFailChecks"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl800SmtpAlgGroup = dfl800SmtpAlgGroup.setStatus('current')
dfl800SysTCPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 3, 1, 17)).setObjects(("DFL800-MIB", "dfl800SysTCPRecvSmall"), ("DFL800-MIB", "dfl800SysTCPRecvLarge"), ("DFL800-MIB", "dfl800SysTCPSendSmall"), ("DFL800-MIB", "dfl800SysTCPSendLarge"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl800SysTCPGroup = dfl800SysTCPGroup.setStatus('current')
dfl800StatsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 171, 20, 1, 2, 2, 2, 1, 1)).setObjects(("DFL800-MIB", "dfl800SystemObjectGroup"), ("DFL800-MIB", "dfl800IPsecObjectGroup"), ("DFL800-MIB", "dfl800StateCountersGroup"), ("DFL800-MIB", "dfl800IPPoolGroup"), ("DFL800-MIB", "dfl800DHCPServerGroup"), ("DFL800-MIB", "dfl800RuleUseGroup"), ("DFL800-MIB", "dfl800UserAuthGroup"), ("DFL800-MIB", "dfl800IfStatsGroup"), ("DFL800-MIB", "dfl800LinkMonitorGroup"), ("DFL800-MIB", "dfl800PipesObjectGroup"), ("DFL800-MIB", "dfl800DHCPRelayObjectGroup"), ("DFL800-MIB", "dfl800AlgGroup"), ("DFL800-MIB", "dfl800HAGroup"), ("DFL800-MIB", "dfl800IfVlanGroup"), ("DFL800-MIB", "dfl800SmtpAlgGroup"), ("DFL800-MIB", "dfl800SysTCPGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dfl800StatsCompliance = dfl800StatsCompliance.setStatus('current')
mibBuilder.exportSymbols("DFL800-MIB", dfl800IfStatsGroup=dfl800IfStatsGroup, dfl800SysConnOPS=dfl800SysConnOPS, dfl800LinkMonHostIndex=dfl800LinkMonHostIndex, dfl800HASyncSendQueueLength=dfl800HASyncSendQueueLength, dfl800DHCPRelayRuleEntry=dfl800DHCPRelayRuleEntry, dfl800DHCPRelayRuleRejSrvPkts=dfl800DHCPRelayRuleRejSrvPkts, dfl800LinkMonGrp=dfl800LinkMonGrp, dlink=dlink, dfl800IfHCBitsOutCnt=dfl800IfHCBitsOutCnt, dfl800IfRxRingFifoErrors=dfl800IfRxRingFifoErrors, dfl800RuleIndex=dfl800RuleIndex, dfl800IfPktsTotCnt=dfl800IfPktsTotCnt, dfl800DHCPTotalLeases=dfl800DHCPTotalLeases, dfl800LinkMonGrpTable=dfl800LinkMonGrpTable, dfl800DHCPRelayRuleRejCliPkts=dfl800DHCPRelayRuleRejCliPkts, dfl800IfHCBitsInCnt=dfl800IfHCBitsInCnt, dfl800RuleName=dfl800RuleName, dfl800UserAuthRuleIndex=dfl800UserAuthRuleIndex, dfl800SysPscIcmp=dfl800SysPscIcmp, dfl800IPsec=dfl800IPsec, dfl800IfVlanStatsEntry=dfl800IfVlanStatsEntry, dfl800LinkMonitor=dfl800LinkMonitor, dfl800IfHCPktsTotCnt=dfl800IfHCPktsTotCnt, dfl800SmtpAlgEntry=dfl800SmtpAlgEntry, dfl800DHCPRelayCurClients=dfl800DHCPRelayCurClients, dfl800SysPscUdp=dfl800SysPscUdp, dfl800IPPoolEntry=dfl800IPPoolEntry, dfl800SysPscTcpSyn=dfl800SysPscTcpSyn, dfl800Rules=dfl800Rules, dfl800SmtpAlgIndex=dfl800SmtpAlgIndex, dfl800HASyncSendQueueUsagePkt=dfl800HASyncSendQueueUsagePkt, dfl800HttpAlgName=dfl800HttpAlgName, dfl800RuleUseEntry=dfl800RuleUseEntry, dfl800IfHCPktsInCnt=dfl800IfHCPktsInCnt, dfl800IPsecOutOctetsComp=dfl800IPsecOutOctetsComp, dfl800SystemObjectGroup=dfl800SystemObjectGroup, dfl800IfVlanUntaggedTotOctets=dfl800IfVlanUntaggedTotOctets, dfl800IPsecPhaseOneRekeyed=dfl800IPsecPhaseOneRekeyed, dfl800IPsecForwardedOctetsUcomp=dfl800IPsecForwardedOctetsUcomp, dfl800HWSensorTable=dfl800HWSensorTable, dfl800IfTxRingTable=dfl800IfTxRingTable, dfl800AlgConnections=dfl800AlgConnections, dfl800UserAuthGroup=dfl800UserAuthGroup, dfl800IfBitsOutCnt=dfl800IfBitsOutCnt, dfl800HttpAlgCntFltTable=dfl800HttpAlgCntFltTable, dfl800HttpAlgCntFltEntry=dfl800HttpAlgCntFltEntry, dfl800IPPoolPrepare=dfl800IPPoolPrepare, dfl800LinkMonHostEntry=dfl800LinkMonHostEntry, dfl800UserAuth=dfl800UserAuth, dfl800IPsecInfoDone=dfl800IPsecInfoDone, dfl800UserAuthRuleName=dfl800UserAuthRuleName, dfl800AlgGroup=dfl800AlgGroup, dfl800RxTingFlooded=dfl800RxTingFlooded, dfl800HWSensorIndex=dfl800HWSensorIndex, dfl800HWSensorUnit=dfl800HWSensorUnit, dfl800IPsecForwardedOctetsComp=dfl800IPsecForwardedOctetsComp, dfl800IfBitsTotCnt=dfl800IfBitsTotCnt, dfl800IPsecOutOctetsUncomp=dfl800IPsecOutOctetsUncomp, dfl800IPsecTotalRekeys=dfl800IPsecTotalRekeys, dfl800PipeMaxPrec=dfl800PipeMaxPrec, dfl800IfVlanGroup=dfl800IfVlanGroup, dfl800IfVlanUntaggedTotPkts=dfl800IfVlanUntaggedTotPkts, dfl800IPsecInPackets=dfl800IPsecInPackets, dfl800HA=dfl800HA, dfl800PipeUsers=dfl800PipeUsers, dfl800SysMemUsage=dfl800SysMemUsage, dfl800IfHCBitsTotCnt=dfl800IfHCBitsTotCnt, dfl800PipePrecIndex=dfl800PipePrecIndex, dfl800IPsecInOctetsComp=dfl800IPsecInOctetsComp, dfl800DHCPRelayRuleCurClients=dfl800DHCPRelayRuleCurClients, dfl800IPsecGlobal=dfl800IPsecGlobal, dfl800HWSensorName=dfl800HWSensorName, dfl800AlgSessions=dfl800AlgSessions, dfl800IPsecPhaseOneAggrModeDone=dfl800IPsecPhaseOneAggrModeDone, dfl800SysBuffUse=dfl800SysBuffUse, dfl800IfRxRingSaturation=dfl800IfRxRingSaturation, dfl800LinkMonGrpEntry=dfl800LinkMonGrpEntry, dfl800PipeEntry=dfl800PipeEntry, dfl800ALG=dfl800ALG, dfl800HttpAlgTable=dfl800HttpAlgTable, dfl800SysTCPSendLarge=dfl800SysTCPSendLarge, dfl800IPsecQuickModeActive=dfl800IPsecQuickModeActive, dfl800SysPscTcpOpen=dfl800SysPscTcpOpen, dfl800_MIB=dfl800_MIB, dfl800IfStatsIndex=dfl800IfStatsIndex, dfl800IPPoolFree=dfl800IPPoolFree, dfl800DHCPRuleIndex=dfl800DHCPRuleIndex, dfl800PipeCurrentPps=dfl800PipeCurrentPps, dfl800AlgTCPStreams=dfl800AlgTCPStreams, dfl800DHCPRelayObjectGroup=dfl800DHCPRelayObjectGroup, dfl800SmtpAlgDnsBlFailChecks=dfl800SmtpAlgDnsBlFailChecks, dfl800IPPoolMisses=dfl800IPPoolMisses, dfl800IPPoolGroup=dfl800IPPoolGroup, dfl800IfTxRingIndex=dfl800IfTxRingIndex, dfl800MibModules=dfl800MibModules, dfl800DHCPRejectedRequests=dfl800DHCPRejectedRequests, dfl800IPsecQuickModeFailed=dfl800IPsecQuickModeFailed, dfl800SysTimerUsage=dfl800SysTimerUsage, dfl800DHCPActiveClients=dfl800DHCPActiveClients, dfl800UserAuthRuleUseTable=dfl800UserAuthRuleUseTable, dfl800PipeNumUsers=dfl800PipeNumUsers, dfl800PipeDropedPackets=dfl800PipeDropedPackets, dfl800PipePrecTotalPps=dfl800PipePrecTotalPps, dfl800PipePrecDelayedPackets=dfl800PipePrecDelayedPackets, dfl800IfStatsEntry=dfl800IfStatsEntry, dfl800LinkMonitorGroup=dfl800LinkMonitorGroup, dfl800SysTCPGroup=dfl800SysTCPGroup, dfl800IfPktsOutCnt=dfl800IfPktsOutCnt, dfl800HttpAlgEntry=dfl800HttpAlgEntry, dfl800SmtpAlgDnsBlChecked=dfl800SmtpAlgDnsBlChecked, dfl800IfBitsInCnt=dfl800IfBitsInCnt, dfl800IPsecInOctetsUncomp=dfl800IPsecInOctetsUncomp, dfl800=dfl800, dfl800SmtpAlgDnsBlEntry=dfl800SmtpAlgDnsBlEntry, dfl800SysForwardedBits=dfl800SysForwardedBits, dfl800SmtpAlgDnsBlMatched=dfl800SmtpAlgDnsBlMatched, dfl800IPPoolClientFails=dfl800IPPoolClientFails, dfl800MibObjectGroups=dfl800MibObjectGroups, dfl800IPsecObjectGroup=dfl800IPsecObjectGroup, dfl800StatsCompliance=dfl800StatsCompliance, dfl800IPsecOutPackets=dfl800IPsecOutPackets, dfl800LinkMonHostPacketsLost=dfl800LinkMonHostPacketsLost, dfl800OSStats=dfl800OSStats, dfl800SysHCForwardedBits=dfl800SysHCForwardedBits, dfl800LinkMonHostTable=dfl800LinkMonHostTable, dfl800PipesObjectGroup=dfl800PipesObjectGroup, dfl800IfTxRingEntry=dfl800IfTxRingEntry, dfl800UserAuthPPPUsers=dfl800UserAuthPPPUsers, dfl800RuleUseGroup=dfl800RuleUseGroup, dfl800StateCountersGroup=dfl800StateCountersGroup, dfl800SmtpAlgGroup=dfl800SmtpAlgGroup, dfl800DHCPRelayCurTrans=dfl800DHCPRelayCurTrans, dfl800DHCPRelayRuleTable=dfl800DHCPRelayRuleTable, dfl800SysConns=dfl800SysConns, dfl800SmtpAlgTotCheckedSes=dfl800SmtpAlgTotCheckedSes, dfl800PipePrec=dfl800PipePrec, dfl800SysCpuLoad=dfl800SysCpuLoad, dfl800IfVlanUntaggedInOctets=dfl800IfVlanUntaggedInOctets, dfl800IPsecInfoFailed=dfl800IPsecInfoFailed, dfl800DHCPRelayRuleName=dfl800DHCPRelayRuleName, dfl800PipePrecDynUsrLimBps=dfl800PipePrecDynUsrLimBps, dfl800HttpAlgTotalAllowed=dfl800HttpAlgTotalAllowed, dfl800DHCPTotalRejected=dfl800DHCPTotalRejected, dfl800IfPktsInCnt=dfl800IfPktsInCnt, dfl800HWSensorEntry=dfl800HWSensorEntry, dfl800SmtpAlgTable=dfl800SmtpAlgTable, dfl800SmtpAlgTotDroppedSes=dfl800SmtpAlgTotDroppedSes, dfl800RuleUseTable=dfl800RuleUseTable, dfl800IfRxRingTable=dfl800IfRxRingTable, dfl800IfTxDespools=dfl800IfTxDespools, dfl800IfTxAvgUse=dfl800IfTxAvgUse, dfl800DHCPRuleTable=dfl800DHCPRuleTable, dfl800PipeNumPrec=dfl800PipeNumPrec, dfl800HttpAlgTotalRequested=dfl800HttpAlgTotalRequested, dfl800HttpAlgCntFltBlocked=dfl800HttpAlgCntFltBlocked, dfl800StatsRegGroups=dfl800StatsRegGroups, dfl800IfFragsIn=dfl800IfFragsIn, dfl800UserAuthEAPUsers=dfl800UserAuthEAPUsers, dfl800OS=dfl800OS, dfl800IPsecPhaseOneActive=dfl800IPsecPhaseOneActive, dfl800LinkMonHostShortTermLoss=dfl800LinkMonHostShortTermLoss, dfl800DHCPRuleUsagePercent=dfl800DHCPRuleUsagePercent, dfl800DHCPRelayRuleIndex=dfl800DHCPRelayRuleIndex, dfl800PipeMinPrec=dfl800PipeMinPrec, dfl800DHCPServerGroup=dfl800DHCPServerGroup, dfl800PipeDelayedPackets=dfl800PipeDelayedPackets, dfl800PipePrecEntry=dfl800PipePrecEntry, dfl800UserAuthHTTPUsers=dfl800UserAuthHTTPUsers, dfl800IPPoolUsed=dfl800IPPoolUsed, dfl800IfFragReassOk=dfl800IfFragReassOk, dfl800IPPoolIndex=dfl800IPPoolIndex, dfl800SysForwardedPackets=dfl800SysForwardedPackets, dfl800VPN=dfl800VPN, dfl800IPsecPhaseOneDone=dfl800IPsecPhaseOneDone, dfl800HAGroup=dfl800HAGroup, dfl800DHCPServer=dfl800DHCPServer, netdefendMgmt=netdefendMgmt, dfl800PipeCurrentBps=dfl800PipeCurrentBps, dfl800IfRxRingIndex=dfl800IfRxRingIndex, dfl800SmtpAlgTotSpamSes=dfl800SmtpAlgTotSpamSes, dfl800IfRxDespools=dfl800IfRxDespools, dfl800SysTCPRecvLarge=dfl800SysTCPRecvLarge, dfl800IPsecQuickModeDone=dfl800IPsecQuickModeDone, dfl800StatsConformance=dfl800StatsConformance, dfl800System=dfl800System, dfl800IfVlanUntaggedInPkts=dfl800IfVlanUntaggedInPkts, dfl800IPPoolName=dfl800IPPoolName, dfl800SmtpAlgDnsBlIndex=dfl800SmtpAlgDnsBlIndex, dfl800IfTxRingSaturation=dfl800IfTxRingSaturation, dfl800HASyncSentPackets=dfl800HASyncSentPackets, dfl800IPPoolsNumber=dfl800IPPoolsNumber, dfl800IfVlanUntaggedOutOctets=dfl800IfVlanUntaggedOutOctets, dfl800IPsecTotalTransforms=dfl800IPsecTotalTransforms, dfl800IPPools=dfl800IPPools, dfl800IfVlanStatsTable=dfl800IfVlanStatsTable, dfl800SysTCPUsage=dfl800SysTCPUsage, dfl800SysPerStateCounters=dfl800SysPerStateCounters, dfl800IfVlanIndex=dfl800IfVlanIndex, dfl800IPsecPhaseOneFailed=dfl800IPsecPhaseOneFailed, dfl800SysTCPRecvSmall=dfl800SysTCPRecvSmall, dfl800IfHCPktsOutCnt=dfl800IfHCPktsOutCnt, dfl800UserAuthHTTPSUsers=dfl800UserAuthHTTPSUsers, dfl800HttpAlgCntFltAllowed=dfl800HttpAlgCntFltAllowed, dfl800HASyncSendQueueUsageOct=dfl800HASyncSendQueueUsageOct, dfl800DHCPRelayRejected=dfl800DHCPRelayRejected, dfl800SysPscTcpFin=dfl800SysPscTcpFin, dfl800LinkMonGrpIndex=dfl800LinkMonGrpIndex, dfl800DHCPRelayRuleHits=dfl800DHCPRelayRuleHits, dfl800DHCPRuleName=dfl800DHCPRuleName, dfl800LinkMonGrpName=dfl800LinkMonGrpName, dfl800HttpAlg=dfl800HttpAlg, dfl800UserAuthRuleUseEntry=dfl800UserAuthRuleUseEntry, dfl800SysConnCPS=dfl800SysConnCPS, dfl800LinkMonHostId=dfl800LinkMonHostId, dfl800HASyncSendResentPackets=dfl800HASyncSendResentPackets, dfl800SmtpAlgDnsBlName=dfl800SmtpAlgDnsBlName, dfl800PipePrecTable=dfl800PipePrecTable, dfl800SmtpAlgName=dfl800SmtpAlgName, dfl800DHCPRuleUsage=dfl800DHCPRuleUsage, dfl800PipeDefPrec=dfl800PipeDefPrec, dfl800PipeIndex=dfl800PipeIndex, dfl800SmtpAlgDnsBlTable=dfl800SmtpAlgDnsBlTable, dfl800MibConfs=dfl800MibConfs, dfl800IfRxRingEntry=dfl800IfRxRingEntry, dfl800IPsecOutOfTransforms=dfl800IPsecOutOfTransforms, dfl800DHCPRuleEntry=dfl800DHCPRuleEntry, dfl800IfVlanUntaggedOutPkts=dfl800IfVlanUntaggedOutPkts, dfl800DHCPActiveClientsPercent=dfl800DHCPActiveClientsPercent, dfl800HWSensorValue=dfl800HWSensorValue, dfl800IPPoolTable=dfl800IPPoolTable, dfl800IPsecForwardedPackets=dfl800IPsecForwardedPackets, dfl800IfFragReassFail=dfl800IfFragReassFail, dfl800HttpAlgCntFltRequests=dfl800HttpAlgCntFltRequests, ipsFirewall=ipsFirewall, dfl800PipeTable=dfl800PipeTable, dfl800HttpAlgIndex=dfl800HttpAlgIndex, dfl800DHCPRelay=dfl800DHCPRelay, dfl800LinkMonGrpHostsUp=dfl800LinkMonGrpHostsUp, dfl800SmtpAlg=dfl800SmtpAlg, dfl800IfRxAvgUse=dfl800IfRxAvgUse, dfl800IPsecActiveTransforms=dfl800IPsecActiveTransforms, dfl800PipePrecBps=dfl800PipePrecBps, dfl800IfStatsTable=dfl800IfStatsTable, dfl800Pipes=dfl800Pipes, dfl800PipeName=dfl800PipeName, dfl800HttpAlgTotalBlocked=dfl800HttpAlgTotalBlocked, dfl800reg=dfl800reg, dfl800HttpAlgCntFltName=dfl800HttpAlgCntFltName, PYSNMP_MODULE_ID=dfl800_MIB, dfl800UserAuthXAUTHUsers=dfl800UserAuthXAUTHUsers, dfl800PipePrecDynLimBps=dfl800PipePrecDynLimBps, dfl800UserAuthRuleUse=dfl800UserAuthRuleUse, dfl800PipePrecDropedPackets=dfl800PipePrecDropedPackets, dfl800PipePrecReservedBps=dfl800PipePrecReservedBps)
mibBuilder.exportSymbols("DFL800-MIB", dfl800IfName=dfl800IfName, dfl800RuleUse=dfl800RuleUse, dfl800SysPscOther=dfl800SysPscOther, dfl800HttpAlgCntFltIndex=dfl800HttpAlgCntFltIndex, dfl800SysTCPSendSmall=dfl800SysTCPSendSmall, dfl800RxRingFlooded=dfl800RxRingFlooded)
