#
# PySNMP MIB module Fore-Red-Port-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Fore-Red-Port-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:03:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
asx, = mibBuilder.importSymbols("Fore-Common-MIB", "asx")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Counter32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, iso, Counter64, NotificationType, Bits, MibIdentifier, Gauge32, Integer32, TimeTicks, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "iso", "Counter64", "NotificationType", "Bits", "MibIdentifier", "Gauge32", "Integer32", "TimeTicks", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
redPortConfModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 17))
if mibBuilder.loadTexts: redPortConfModule.setLastUpdated('9911050000Z')
if mibBuilder.loadTexts: redPortConfModule.setOrganization('FORE')
redPortConfTable = MibTable((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 17, 1), )
if mibBuilder.loadTexts: redPortConfTable.setStatus('current')
redPortConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 17, 1, 1), ).setIndexNames((0, "Fore-Red-Port-MIB", "redPortBoard"), (0, "Fore-Red-Port-MIB", "redPortModule"), (0, "Fore-Red-Port-MIB", "redPortPort"))
if mibBuilder.loadTexts: redPortConfEntry.setStatus('current')
redPortBoard = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 17, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redPortBoard.setStatus('current')
redPortModule = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 17, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redPortModule.setStatus('current')
redPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 17, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redPortPort.setStatus('current')
redPortPendingAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 17, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("working", 1), ("protection", 2), ("unprotected", 3), ("none", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redPortPendingAdminMode.setStatus('current')
redPortPendingCommitState = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 17, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redPortPendingCommitState.setStatus('current')
redPortAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 17, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("working", 1), ("protection", 2), ("unprotected", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redPortAdminMode.setStatus('current')
redPortOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 17, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("active", 1), ("standby", 2), ("unprotected", 3), ("loopbackon", 4), ("loopbackoff", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: redPortOperState.setStatus('current')
redPortCommit = MibScalar((1, 3, 6, 1, 4, 1, 326, 2, 2, 1, 1, 17, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("commit", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: redPortCommit.setStatus('current')
mibBuilder.exportSymbols("Fore-Red-Port-MIB", redPortPendingAdminMode=redPortPendingAdminMode, redPortConfModule=redPortConfModule, redPortModule=redPortModule, redPortBoard=redPortBoard, PYSNMP_MODULE_ID=redPortConfModule, redPortPort=redPortPort, redPortPendingCommitState=redPortPendingCommitState, redPortCommit=redPortCommit, redPortConfEntry=redPortConfEntry, redPortAdminMode=redPortAdminMode, redPortOperState=redPortOperState, redPortConfTable=redPortConfTable)
