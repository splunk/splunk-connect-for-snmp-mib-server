#
# PySNMP MIB module BENU-RADIUS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BENU-RADIUS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:20:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
benuWAG, = mibBuilder.importSymbols("BENU-WAG-MIB", "benuWAG")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, MibIdentifier, Integer32, IpAddress, ModuleIdentity, ObjectIdentity, NotificationType, Counter32, Counter64, Bits, TimeTicks, Unsigned32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibIdentifier", "Integer32", "IpAddress", "ModuleIdentity", "ObjectIdentity", "NotificationType", "Counter32", "Counter64", "Bits", "TimeTicks", "Unsigned32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
benuRadiusMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4))
benuRadiusMIB.setRevisions(('2016-07-28 00:00', '2016-03-17 00:00', '2015-06-24 00:00', '2015-05-21 00:00', '2015-05-20 00:00', '2015-03-16 00:00', '2015-03-02 00:00', '2015-02-24 00:00', '2015-01-26 00:00', '2015-01-02 00:00', '2014-12-02 00:00', '2014-07-17 00:00', '2014-05-19 00:00', '2013-04-18 00:00',))
if mibBuilder.loadTexts: benuRadiusMIB.setLastUpdated('201607280000Z')
if mibBuilder.loadTexts: benuRadiusMIB.setOrganization('Benu Networks,Inc')
class BenuRadiusInstance(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("radiusInstance0", 1))

bRadiusMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1))
if mibBuilder.loadTexts: bRadiusMIBObjects.setStatus('current')
bRadiusNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 0))
if mibBuilder.loadTexts: bRadiusNotifications.setStatus('current')
bRadiusNotifObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 2))
if mibBuilder.loadTexts: bRadiusNotifObjects.setStatus('current')
bRadiusProxyMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3))
if mibBuilder.loadTexts: bRadiusProxyMIBObjects.setStatus('current')
bRadiusProxyNotifObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 4))
if mibBuilder.loadTexts: bRadiusProxyNotifObjects.setStatus('current')
bRadiusServerAuthTable = MibTable((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1), )
if mibBuilder.loadTexts: bRadiusServerAuthTable.setStatus('current')
bRadiusServerAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1), ).setIndexNames((0, "BENU-RADIUS-MIB", "bRadiusAuthStatsInterval"), (0, "BENU-RADIUS-MIB", "bRadiusAuthServerIndex"))
if mibBuilder.loadTexts: bRadiusServerAuthEntry.setStatus('current')
bRadiusAuthStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: bRadiusAuthStatsInterval.setStatus('current')
bRadiusAuthServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: bRadiusAuthServerIndex.setStatus('current')
bRadiusAuthServerInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthServerInetAddressType.setStatus('current')
bRadiusAuthServerInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthServerInetAddress.setStatus('current')
bRadiusAuthIntervalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthIntervalDuration.setStatus('current')
bRadiusAccessRequestSent = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAccessRequestSent.setStatus('current')
bRadiusAccessAcceptReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAccessAcceptReceived.setStatus('current')
bRadiusAccessRejectReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAccessRejectReceived.setStatus('current')
bRadiusAccessChallengeReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAccessChallengeReceived.setStatus('current')
bRadiusAccessRequestResent = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAccessRequestResent.setStatus('current')
bRadiusAccessRequestDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAccessRequestDropped.setStatus('current')
bRadiusAccessRequestTimedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAccessRequestTimedOut.setStatus('current')
bRadiusAccessRequestSentFail = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAccessRequestSentFail.setStatus('current')
bRadiusAccessPeakRequestPending = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAccessPeakRequestPending.setStatus('current')
bRadiusAccessMalformedRespDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAccessMalformedRespDropped.setStatus('current')
bRadiusAccessBadAuthenticatorRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAccessBadAuthenticatorRcvd.setStatus('current')
bRadiusAccessServerMarkedDead = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAccessServerMarkedDead.setStatus('current')
bRadiusAuthLatencyMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthLatencyMin.setStatus('current')
bRadiusAuthLatencyMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthLatencyMax.setStatus('current')
bRadiusAuthLatencyAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthLatencyAvg.setStatus('current')
bRadiusAuthLatencyLast = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthLatencyLast.setStatus('current')
bRadiusAuthAAAGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 1, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthAAAGroupName.setStatus('current')
bRadiusProxyServerAuthTable = MibTable((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 1), )
if mibBuilder.loadTexts: bRadiusProxyServerAuthTable.setStatus('current')
bRadiusProxyServerAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 1, 1), ).setIndexNames((0, "BENU-RADIUS-MIB", "bRadiusProxyAuthStatsInterval"), (0, "BENU-RADIUS-MIB", "bRadiusProxyAuthServerIndex"))
if mibBuilder.loadTexts: bRadiusProxyServerAuthEntry.setStatus('current')
bRadiusProxyAuthStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: bRadiusProxyAuthStatsInterval.setStatus('current')
bRadiusProxyAuthServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 1, 1, 2), Integer32())
if mibBuilder.loadTexts: bRadiusProxyAuthServerIndex.setStatus('current')
bRadiusProxyAuthServerInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 1, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAuthServerInetAddressType.setStatus('current')
bRadiusProxyAuthServerInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 1, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAuthServerInetAddress.setStatus('current')
bRadiusProxyAuthIntervalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAuthIntervalDuration.setStatus('current')
bRadiusProxyAccessRequestRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAccessRequestRcvd.setStatus('current')
bRadiusProxyAccessUnknownTypeRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAccessUnknownTypeRcvd.setStatus('current')
bRadiusProxyAccessUnknownClientRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAccessUnknownClientRcvd.setStatus('current')
bRadiusProxyAccessRequestDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAccessRequestDropped.setStatus('current')
bRadiusProxyAccessSentFail = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAccessSentFail.setStatus('current')
bRadiusProxyAccessBadAuthenticatorRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAccessBadAuthenticatorRcvd.setStatus('current')
bRadiusProxyAccessAcceptRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAccessAcceptRcvd.setStatus('current')
bRadiusProxyAccessRejectRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAccessRejectRcvd.setStatus('current')
bRadiusProxyAccessChallengeRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAccessChallengeRcvd.setStatus('current')
bRadiusProxySubscriberBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxySubscriberBlocked.setStatus('current')
bRadiusProxySubscriberDeleted = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxySubscriberDeleted.setStatus('current')
bRadiusProxyAuthTPSTable = MibTable((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 3), )
if mibBuilder.loadTexts: bRadiusProxyAuthTPSTable.setStatus('current')
bRadiusProxyAuthTPSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 3, 1), ).setIndexNames((0, "BENU-RADIUS-MIB", "bRadiusProxyAuthTPSInterval"))
if mibBuilder.loadTexts: bRadiusProxyAuthTPSEntry.setStatus('current')
bRadiusProxyAuthTPSInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: bRadiusProxyAuthTPSInterval.setStatus('current')
bRadiusProxyAuthTPSIntervalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAuthTPSIntervalDuration.setStatus('current')
bRadiusProxyAuthTPSLow = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAuthTPSLow.setStatus('current')
bRadiusProxyAuthTPSHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAuthTPSHigh.setStatus('current')
bRadiusProxyAuthTPS = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAuthTPS.setStatus('current')
bRadiusServerAcctTable = MibTable((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2), )
if mibBuilder.loadTexts: bRadiusServerAcctTable.setStatus('current')
bRadiusServerAcctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1), ).setIndexNames((0, "BENU-RADIUS-MIB", "bRadiusAcctStatsInterval"), (0, "BENU-RADIUS-MIB", "bRadiusAcctServerIndex"))
if mibBuilder.loadTexts: bRadiusServerAcctEntry.setStatus('current')
bRadiusAcctStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: bRadiusAcctStatsInterval.setStatus('current')
bRadiusAcctServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: bRadiusAcctServerIndex.setStatus('current')
bRadiusAcctServerInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctServerInetAddressType.setStatus('current')
bRadiusAcctServerInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctServerInetAddress.setStatus('current')
bRadiusAcctIntervalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctIntervalDuration.setStatus('current')
bRadiusAcctRequestSent = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctRequestSent.setStatus('current')
bRadiusAcctStartRequestSent = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctStartRequestSent.setStatus('current')
bRadiusAcctStopRequestSent = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctStopRequestSent.setStatus('current')
bRadiusAcctInterimUpdateSent = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctInterimUpdateSent.setStatus('current')
bRadiusAcctResponseReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctResponseReceived.setStatus('current')
bRadiusAcctRequestResent = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctRequestResent.setStatus('current')
bRadiusAcctRequestDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctRequestDropped.setStatus('current')
bRadiusAcctRequestTimedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctRequestTimedOut.setStatus('current')
bRadiusAcctRequestSentFail = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctRequestSentFail.setStatus('current')
bRadiusAcctPeakRequestPending = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctPeakRequestPending.setStatus('current')
bRadiusAcctMalformedRespDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctMalformedRespDropped.setStatus('current')
bRadiusAcctBadAuthenticatorRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctBadAuthenticatorRcvd.setStatus('current')
bRadiusAcctServerMarkedDead = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctServerMarkedDead.setStatus('current')
bRadiusAcctLatencyMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctLatencyMin.setStatus('current')
bRadiusAcctLatencyMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctLatencyMax.setStatus('current')
bRadiusAcctLatencyAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctLatencyAvg.setStatus('current')
bRadiusAcctLatencyLast = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctLatencyLast.setStatus('current')
bRadiusAcctAAAGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 2, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAcctAAAGroupName.setStatus('current')
bRadiusProxyServerAcctTable = MibTable((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 2), )
if mibBuilder.loadTexts: bRadiusProxyServerAcctTable.setStatus('current')
bRadiusProxyServerAcctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 2, 1), ).setIndexNames((0, "BENU-RADIUS-MIB", "bRadiusProxyAcctStatsInterval"), (0, "BENU-RADIUS-MIB", "bRadiusProxyAcctServerIndex"))
if mibBuilder.loadTexts: bRadiusProxyServerAcctEntry.setStatus('current')
bRadiusProxyAcctStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: bRadiusProxyAcctStatsInterval.setStatus('current')
bRadiusProxyAcctServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: bRadiusProxyAcctServerIndex.setStatus('current')
bRadiusProxyAcctServerInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 2, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAcctServerInetAddressType.setStatus('current')
bRadiusProxyAcctServerInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 2, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAcctServerInetAddress.setStatus('current')
bRadiusProxyAcctIntervalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAcctIntervalDuration.setStatus('current')
bRadiusProxyAcctRequestRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAcctRequestRcvd.setStatus('current')
bRadiusProxyAcctRequestSent = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAcctRequestSent.setStatus('current')
bRadiusProxyAcctStartRequestRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAcctStartRequestRcvd.setStatus('current')
bRadiusProxyAcctStopRequestRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAcctStopRequestRcvd.setStatus('current')
bRadiusProxyAcctInterimUpdateRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAcctInterimUpdateRcvd.setStatus('current')
bRadiusProxyAcctStartRequestSent = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAcctStartRequestSent.setStatus('current')
bRadiusProxyAcctStopRequestSent = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAcctStopRequestSent.setStatus('current')
bRadiusProxyAcctInterimUpdateSent = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAcctInterimUpdateSent.setStatus('current')
bRadiusProxyAcctResponseRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 2, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAcctResponseRcvd.setStatus('current')
bRadiusProxyAcctResponseSent = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 3, 2, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusProxyAcctResponseSent.setStatus('current')
bRadiusClientCoATable = MibTable((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3), )
if mibBuilder.loadTexts: bRadiusClientCoATable.setStatus('current')
bRadiusClientCoAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1), ).setIndexNames((0, "BENU-RADIUS-MIB", "bRadiusCOAStatsInterval"), (0, "BENU-RADIUS-MIB", "bRadiusCoAClientIndex"))
if mibBuilder.loadTexts: bRadiusClientCoAEntry.setStatus('current')
bRadiusCOAStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: bRadiusCOAStatsInterval.setStatus('current')
bRadiusCoAClientIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 2), Integer32())
if mibBuilder.loadTexts: bRadiusCoAClientIndex.setStatus('current')
bRadiusCoAClientInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoAClientInetAddressType.setStatus('current')
bRadiusCoAClientInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoAClientInetAddress.setStatus('current')
bRadiusCoAIntervalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoAIntervalDuration.setStatus('current')
bRadiusCoAAckSent = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoAAckSent.setStatus('current')
bRadiusCoANackSent = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoANackSent.setStatus('current')
bRadiusCoARequestReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoARequestReceived.setStatus('current')
bRadiusCoARequestDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoARequestDropped.setStatus('current')
bRadiusCoAReqDropDueToDupReq = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoAReqDropDueToDupReq.setStatus('current')
bRadiusCoAReqDropDueToInvalidTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoAReqDropDueToInvalidTime.setStatus('current')
bRadiusCoAReqDropDueToBadAuthenticator = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoAReqDropDueToBadAuthenticator.setStatus('current')
bRadiusCoANackDueToInvalidReq = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoANackDueToInvalidReq.setStatus('current')
bRadiusCoANackDueToExceedMaxOutstanding = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoANackDueToExceedMaxOutstanding.setStatus('current')
bRadiusDisconnectRequestReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusDisconnectRequestReceived.setStatus('current')
bRadiusDisconnectAckSent = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusDisconnectAckSent.setStatus('current')
bRadiusDisconnectNackSent = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusDisconnectNackSent.setStatus('current')
bRadiusDisconnectRequestDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusDisconnectRequestDropped.setStatus('current')
bRadiusDisconnectReqDropDueToDupReq = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusDisconnectReqDropDueToDupReq.setStatus('current')
bRadiusDisconnectReqDropDueToInvalidTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusDisconnectReqDropDueToInvalidTime.setStatus('current')
bRadiusDisconnectReqDropDueToBadAuthenticator = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusDisconnectReqDropDueToBadAuthenticator.setStatus('current')
bRadiusDisconnectNackDueToInvalidReq = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusDisconnectNackDueToInvalidReq.setStatus('current')
bRadiusDisconnectNackDueToExceedMaxOutstanding = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 23), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusDisconnectNackDueToExceedMaxOutstanding.setStatus('current')
bRadiusCoALatencyMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoALatencyMin.setStatus('current')
bRadiusCoALatencyMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoALatencyMax.setStatus('current')
bRadiusCoALatencyAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoALatencyAvg.setStatus('current')
bRadiusCoALatencyLast = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoALatencyLast.setStatus('current')
bRadiusCoADMLatencyMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoADMLatencyMin.setStatus('current')
bRadiusCoADMLatencyMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoADMLatencyMax.setStatus('current')
bRadiusCoADMLatencyAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoADMLatencyAvg.setStatus('current')
bRadiusCoADMLatencyLast = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoADMLatencyLast.setStatus('current')
bRadiusCoAAAAGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 3, 1, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusCoAAAAGroupName.setStatus('current')
bAAAGroupAuthTable = MibTable((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 4), )
if mibBuilder.loadTexts: bAAAGroupAuthTable.setStatus('current')
bAAAGroupAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 4, 1), ).setIndexNames((0, "BENU-RADIUS-MIB", "bAAAGroupAuthStatsInterval"), (0, "BENU-RADIUS-MIB", "bAAAGroupAuthIndex"))
if mibBuilder.loadTexts: bAAAGroupAuthEntry.setStatus('current')
bAAAGroupAuthStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: bAAAGroupAuthStatsInterval.setStatus('current')
bAAAGroupAuthIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 4, 1, 2), Integer32())
if mibBuilder.loadTexts: bAAAGroupAuthIndex.setStatus('current')
bAAAGroupAuthName = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupAuthName.setStatus('current')
bAAAGroupAuthIntervalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupAuthIntervalDuration.setStatus('current')
bAAAGroupMaximumOutstandingAuthReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupMaximumOutstandingAuthReqs.setStatus('current')
bAAAGroupPeakOutstandingAuthReqsReached = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 4, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupPeakOutstandingAuthReqsReached.setStatus('current')
bAAAGroupAuthReqsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 4, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupAuthReqsDropped.setStatus('current')
bAAAGroupOutstandingAuthReqsHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 4, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupOutstandingAuthReqsHighThreshold.setStatus('current')
bAAAGroupOutstandingAuthReqsLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 4, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupOutstandingAuthReqsLowThreshold.setStatus('current')
bAAAGroupAuthCurrentOutstanding = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 4, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupAuthCurrentOutstanding.setStatus('current')
bAAAGroupAcctTable = MibTable((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 5), )
if mibBuilder.loadTexts: bAAAGroupAcctTable.setStatus('current')
bAAAGroupAcctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 5, 1), ).setIndexNames((0, "BENU-RADIUS-MIB", "bAAAGroupAcctStatsInterval"), (0, "BENU-RADIUS-MIB", "bAAAGroupAcctIndex"))
if mibBuilder.loadTexts: bAAAGroupAcctEntry.setStatus('current')
bAAAGroupAcctStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: bAAAGroupAcctStatsInterval.setStatus('current')
bAAAGroupAcctIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 5, 1, 2), Integer32())
if mibBuilder.loadTexts: bAAAGroupAcctIndex.setStatus('current')
bAAAGroupAcctName = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 5, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupAcctName.setStatus('current')
bAAAGroupAcctIntervalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupAcctIntervalDuration.setStatus('current')
bAAAGroupMaximumOutstandingAcctReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 5, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupMaximumOutstandingAcctReqs.setStatus('current')
bAAAGroupPeakOutstandingAcctReqsReached = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 5, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupPeakOutstandingAcctReqsReached.setStatus('current')
bAAAGroupAcctReqsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 5, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupAcctReqsDropped.setStatus('current')
bAAAGroupOutstandingAcctReqsHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 5, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupOutstandingAcctReqsHighThreshold.setStatus('current')
bAAAGroupOutstandingAcctReqsLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 5, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupOutstandingAcctReqsLowThreshold.setStatus('current')
bAAAGroupAcctCurrentOutstanding = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 5, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupAcctCurrentOutstanding.setStatus('current')
bAAAGroupCoATable = MibTable((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 6), )
if mibBuilder.loadTexts: bAAAGroupCoATable.setStatus('current')
bAAAGroupCoAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 6, 1), ).setIndexNames((0, "BENU-RADIUS-MIB", "bAAAGroupCoAStatsInterval"), (0, "BENU-RADIUS-MIB", "bAAAGroupCoAIndex"))
if mibBuilder.loadTexts: bAAAGroupCoAEntry.setStatus('current')
bAAAGroupCoAStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: bAAAGroupCoAStatsInterval.setStatus('current')
bAAAGroupCoAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 6, 1, 2), Integer32())
if mibBuilder.loadTexts: bAAAGroupCoAIndex.setStatus('current')
bAAAGroupCoAName = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 6, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupCoAName.setStatus('current')
bAAAGroupCoAIntervalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupCoAIntervalDuration.setStatus('current')
bAAAGroupCoANumOfClients = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 6, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupCoANumOfClients.setStatus('current')
bAAAGroupCoAReqsDropDueToInvalidClient = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 6, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupCoAReqsDropDueToInvalidClient.setStatus('current')
bAAAGroupDisconnectReqsDropDueToInvalidClient = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 6, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupDisconnectReqsDropDueToInvalidClient.setStatus('current')
bAAAGroupMaximumOutstandingCoAReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 6, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupMaximumOutstandingCoAReqs.setStatus('current')
bAAAGroupPeakOutstandingCoAReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 6, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupPeakOutstandingCoAReqs.setStatus('current')
bAAAGroupOutstandingCoAReqsHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 6, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupOutstandingCoAReqsHighThreshold.setStatus('current')
bAAAGroupOutstandingCoAReqsLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 6, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupOutstandingCoAReqsLowThreshold.setStatus('current')
bAAAGroupCoaCurrentOutstanding = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 6, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bAAAGroupCoaCurrentOutstanding.setStatus('current')
bRadiusLatencyAuthTable = MibTable((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 7), )
if mibBuilder.loadTexts: bRadiusLatencyAuthTable.setStatus('current')
bRadiusLatencyAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 7, 1), ).setIndexNames((0, "BENU-RADIUS-MIB", "bRadiusAuthLatencyStatsInterval"), (0, "BENU-RADIUS-MIB", "bRadiusAuthInstanceIndex"))
if mibBuilder.loadTexts: bRadiusLatencyAuthEntry.setStatus('current')
bRadiusAuthLatencyStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 7, 1, 1), Integer32())
if mibBuilder.loadTexts: bRadiusAuthLatencyStatsInterval.setStatus('current')
bRadiusAuthInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 7, 1, 2), BenuRadiusInstance())
if mibBuilder.loadTexts: bRadiusAuthInstanceIndex.setStatus('current')
bRadiusAuthLatencyIntervalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthLatencyIntervalDuration.setStatus('current')
bRadiusAuthRequestTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 7, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthRequestTotalPackets.setStatus('current')
bRadiusAuthRequestMaximumProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 7, 1, 5), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthRequestMaximumProcessingTime.setStatus('current')
bRadiusAuthRequestMinimumProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 7, 1, 6), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthRequestMinimumProcessingTime.setStatus('current')
bRadiusAuthRequestAverageProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 7, 1, 7), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthRequestAverageProcessingTime.setStatus('current')
bRadiusAuthRequestProcessingTimeGreaterthan1MS = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 7, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthRequestProcessingTimeGreaterthan1MS.setStatus('current')
bRadiusAuthResponseTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 7, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthResponseTotalPackets.setStatus('current')
bRadiusAuthResponseMaximumProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 7, 1, 10), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthResponseMaximumProcessingTime.setStatus('current')
bRadiusAuthResponseMinimumProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 7, 1, 11), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthResponseMinimumProcessingTime.setStatus('current')
bRadiusAuthResponseAverageProcessingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 7, 1, 12), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthResponseAverageProcessingTime.setStatus('current')
bRadiusAuthResponseProcessingTimeGreaterthan1MS = MibTableColumn((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 1, 7, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bRadiusAuthResponseProcessingTimeGreaterthan1MS.setStatus('current')
bRadiusServerIPAddrType = MibScalar((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 2, 1), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bRadiusServerIPAddrType.setStatus('current')
bRadiusServerIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 2, 2), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: bRadiusServerIPAddress.setStatus('current')
bAAAGroupOutstandingAuthReqsLow = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 0, 1)).setObjects(("BENU-RADIUS-MIB", "bAAAGroupAuthName"), ("BENU-RADIUS-MIB", "bAAAGroupMaximumOutstandingAuthReqs"), ("BENU-RADIUS-MIB", "bAAAGroupOutstandingAuthReqsLowThreshold"))
if mibBuilder.loadTexts: bAAAGroupOutstandingAuthReqsLow.setStatus('current')
bAAAGroupOutstandingAuthReqsHigh = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 0, 2)).setObjects(("BENU-RADIUS-MIB", "bAAAGroupAuthName"), ("BENU-RADIUS-MIB", "bAAAGroupMaximumOutstandingAuthReqs"), ("BENU-RADIUS-MIB", "bAAAGroupOutstandingAuthReqsHighThreshold"))
if mibBuilder.loadTexts: bAAAGroupOutstandingAuthReqsHigh.setStatus('current')
bAAAGroupOutstandingAcctReqsLow = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 0, 3)).setObjects(("BENU-RADIUS-MIB", "bAAAGroupAcctName"), ("BENU-RADIUS-MIB", "bAAAGroupMaximumOutstandingAcctReqs"), ("BENU-RADIUS-MIB", "bAAAGroupOutstandingAcctReqsLowThreshold"))
if mibBuilder.loadTexts: bAAAGroupOutstandingAcctReqsLow.setStatus('current')
bAAAGroupOutstandingAcctReqsHigh = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 0, 4)).setObjects(("BENU-RADIUS-MIB", "bAAAGroupAcctName"), ("BENU-RADIUS-MIB", "bAAAGroupMaximumOutstandingAcctReqs"), ("BENU-RADIUS-MIB", "bAAAGroupOutstandingAcctReqsHighThreshold"))
if mibBuilder.loadTexts: bAAAGroupOutstandingAcctReqsHigh.setStatus('current')
bAAAGroupOutstandingCoAReqsLow = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 0, 5)).setObjects(("BENU-RADIUS-MIB", "bAAAGroupCoAName"), ("BENU-RADIUS-MIB", "bAAAGroupMaximumOutstandingCoAReqs"), ("BENU-RADIUS-MIB", "bAAAGroupOutstandingCoAReqsLowThreshold"))
if mibBuilder.loadTexts: bAAAGroupOutstandingCoAReqsLow.setStatus('current')
bAAAGroupOutstandingCoAReqsHigh = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 0, 6)).setObjects(("BENU-RADIUS-MIB", "bAAAGroupCoAName"), ("BENU-RADIUS-MIB", "bAAAGroupMaximumOutstandingCoAReqs"), ("BENU-RADIUS-MIB", "bAAAGroupOutstandingCoAReqsHighThreshold"))
if mibBuilder.loadTexts: bAAAGroupOutstandingCoAReqsHigh.setStatus('current')
bRadiusAuthServerMarkedDead = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 0, 7)).setObjects(("BENU-RADIUS-MIB", "bRadiusServerIPAddrType"), ("BENU-RADIUS-MIB", "bRadiusServerIPAddress"))
if mibBuilder.loadTexts: bRadiusAuthServerMarkedDead.setStatus('current')
bRadiusAuthServerMarkedAlive = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 0, 8)).setObjects(("BENU-RADIUS-MIB", "bRadiusServerIPAddrType"), ("BENU-RADIUS-MIB", "bRadiusServerIPAddress"))
if mibBuilder.loadTexts: bRadiusAuthServerMarkedAlive.setStatus('current')
bRadiusAccountingServerMarkedDead = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 0, 9)).setObjects(("BENU-RADIUS-MIB", "bRadiusServerIPAddrType"), ("BENU-RADIUS-MIB", "bRadiusServerIPAddress"))
if mibBuilder.loadTexts: bRadiusAccountingServerMarkedDead.setStatus('current')
bRadiusAccountingServerMarkedAlive = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 0, 10)).setObjects(("BENU-RADIUS-MIB", "bRadiusServerIPAddrType"), ("BENU-RADIUS-MIB", "bRadiusServerIPAddress"))
if mibBuilder.loadTexts: bRadiusAccountingServerMarkedAlive.setStatus('current')
bRadiusProxyAuthTPSLowReached = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 0, 11)).setObjects(("BENU-RADIUS-MIB", "bRadiusProxyAuthTPS"))
if mibBuilder.loadTexts: bRadiusProxyAuthTPSLowReached.setStatus('current')
bRadiusProxyAuthTPSHighReached = NotificationType((1, 3, 6, 1, 4, 1, 39406, 2, 1, 4, 0, 12)).setObjects(("BENU-RADIUS-MIB", "bRadiusProxyAuthTPS"))
if mibBuilder.loadTexts: bRadiusProxyAuthTPSHighReached.setStatus('current')
mibBuilder.exportSymbols("BENU-RADIUS-MIB", bRadiusDisconnectAckSent=bRadiusDisconnectAckSent, bRadiusCoAIntervalDuration=bRadiusCoAIntervalDuration, bRadiusProxySubscriberBlocked=bRadiusProxySubscriberBlocked, bRadiusNotifObjects=bRadiusNotifObjects, bAAAGroupAcctIndex=bAAAGroupAcctIndex, bAAAGroupCoAStatsInterval=bAAAGroupCoAStatsInterval, bRadiusServerAuthEntry=bRadiusServerAuthEntry, bRadiusServerAuthTable=bRadiusServerAuthTable, bRadiusDisconnectNackSent=bRadiusDisconnectNackSent, bRadiusProxyServerAuthTable=bRadiusProxyServerAuthTable, bRadiusAuthServerIndex=bRadiusAuthServerIndex, bRadiusAcctServerInetAddress=bRadiusAcctServerInetAddress, bRadiusProxyAuthIntervalDuration=bRadiusProxyAuthIntervalDuration, bRadiusProxyAccessSentFail=bRadiusProxyAccessSentFail, bRadiusProxyAuthServerInetAddressType=bRadiusProxyAuthServerInetAddressType, bRadiusAuthRequestMaximumProcessingTime=bRadiusAuthRequestMaximumProcessingTime, bRadiusAcctPeakRequestPending=bRadiusAcctPeakRequestPending, bAAAGroupDisconnectReqsDropDueToInvalidClient=bAAAGroupDisconnectReqsDropDueToInvalidClient, PYSNMP_MODULE_ID=benuRadiusMIB, bRadiusProxyAccessChallengeRcvd=bRadiusProxyAccessChallengeRcvd, bAAAGroupCoANumOfClients=bAAAGroupCoANumOfClients, bRadiusProxyAuthTPS=bRadiusProxyAuthTPS, bRadiusMIBObjects=bRadiusMIBObjects, bRadiusCoAClientInetAddress=bRadiusCoAClientInetAddress, bRadiusAuthRequestProcessingTimeGreaterthan1MS=bRadiusAuthRequestProcessingTimeGreaterthan1MS, bRadiusCoADMLatencyLast=bRadiusCoADMLatencyLast, bRadiusProxyAcctInterimUpdateRcvd=bRadiusProxyAcctInterimUpdateRcvd, bRadiusProxyAuthServerInetAddress=bRadiusProxyAuthServerInetAddress, bAAAGroupMaximumOutstandingAuthReqs=bAAAGroupMaximumOutstandingAuthReqs, bRadiusDisconnectRequestReceived=bRadiusDisconnectRequestReceived, bRadiusAccessChallengeReceived=bRadiusAccessChallengeReceived, bRadiusCoANackDueToExceedMaxOutstanding=bRadiusCoANackDueToExceedMaxOutstanding, bAAAGroupAuthStatsInterval=bAAAGroupAuthStatsInterval, bAAAGroupOutstandingAcctReqsLowThreshold=bAAAGroupOutstandingAcctReqsLowThreshold, bRadiusCoARequestReceived=bRadiusCoARequestReceived, bAAAGroupCoATable=bAAAGroupCoATable, bRadiusAccessServerMarkedDead=bRadiusAccessServerMarkedDead, bRadiusProxyAccessUnknownTypeRcvd=bRadiusProxyAccessUnknownTypeRcvd, bAAAGroupPeakOutstandingAcctReqsReached=bAAAGroupPeakOutstandingAcctReqsReached, benuRadiusMIB=benuRadiusMIB, bRadiusAuthServerInetAddress=bRadiusAuthServerInetAddress, bRadiusAccountingServerMarkedDead=bRadiusAccountingServerMarkedDead, bAAAGroupAcctName=bAAAGroupAcctName, bRadiusCoAClientIndex=bRadiusCoAClientIndex, bRadiusProxyNotifObjects=bRadiusProxyNotifObjects, bAAAGroupOutstandingAcctReqsHighThreshold=bAAAGroupOutstandingAcctReqsHighThreshold, bRadiusProxyAcctStartRequestRcvd=bRadiusProxyAcctStartRequestRcvd, bAAAGroupOutstandingAuthReqsLowThreshold=bAAAGroupOutstandingAuthReqsLowThreshold, bRadiusAuthLatencyStatsInterval=bRadiusAuthLatencyStatsInterval, bRadiusCoAAAAGroupName=bRadiusCoAAAAGroupName, bRadiusAccessRequestSent=bRadiusAccessRequestSent, bRadiusAcctInterimUpdateSent=bRadiusAcctInterimUpdateSent, bAAAGroupCoAName=bAAAGroupCoAName, bRadiusProxyAuthTPSLowReached=bRadiusProxyAuthTPSLowReached, bRadiusAcctServerMarkedDead=bRadiusAcctServerMarkedDead, bRadiusProxyAcctStatsInterval=bRadiusProxyAcctStatsInterval, bRadiusAcctLatencyMin=bRadiusAcctLatencyMin, bAAAGroupAcctIntervalDuration=bAAAGroupAcctIntervalDuration, bRadiusProxyAuthTPSIntervalDuration=bRadiusProxyAuthTPSIntervalDuration, bRadiusAuthIntervalDuration=bRadiusAuthIntervalDuration, bRadiusProxyAccessAcceptRcvd=bRadiusProxyAccessAcceptRcvd, bAAAGroupAcctEntry=bAAAGroupAcctEntry, bAAAGroupCoAIndex=bAAAGroupCoAIndex, bRadiusServerIPAddrType=bRadiusServerIPAddrType, bAAAGroupAcctReqsDropped=bAAAGroupAcctReqsDropped, bAAAGroupCoAEntry=bAAAGroupCoAEntry, bAAAGroupOutstandingCoAReqsLowThreshold=bAAAGroupOutstandingCoAReqsLowThreshold, bRadiusDisconnectRequestDropped=bRadiusDisconnectRequestDropped, bRadiusProxyAuthTPSTable=bRadiusProxyAuthTPSTable, bRadiusDisconnectReqDropDueToBadAuthenticator=bRadiusDisconnectReqDropDueToBadAuthenticator, bAAAGroupOutstandingAuthReqsHigh=bAAAGroupOutstandingAuthReqsHigh, bRadiusCoANackSent=bRadiusCoANackSent, bAAAGroupAuthEntry=bAAAGroupAuthEntry, bRadiusProxyServerAcctTable=bRadiusProxyServerAcctTable, bRadiusProxyAcctStartRequestSent=bRadiusProxyAcctStartRequestSent, bAAAGroupOutstandingAcctReqsLow=bAAAGroupOutstandingAcctReqsLow, bRadiusAuthResponseTotalPackets=bRadiusAuthResponseTotalPackets, bRadiusAcctMalformedRespDropped=bRadiusAcctMalformedRespDropped, bRadiusCoALatencyLast=bRadiusCoALatencyLast, bRadiusAuthLatencyLast=bRadiusAuthLatencyLast, bAAAGroupAuthCurrentOutstanding=bAAAGroupAuthCurrentOutstanding, bRadiusClientCoAEntry=bRadiusClientCoAEntry, bRadiusAcctBadAuthenticatorRcvd=bRadiusAcctBadAuthenticatorRcvd, bAAAGroupOutstandingCoAReqsHigh=bAAAGroupOutstandingCoAReqsHigh, bRadiusDisconnectReqDropDueToInvalidTime=bRadiusDisconnectReqDropDueToInvalidTime, bRadiusAuthResponseProcessingTimeGreaterthan1MS=bRadiusAuthResponseProcessingTimeGreaterthan1MS, bRadiusProxyAccessRequestDropped=bRadiusProxyAccessRequestDropped, bAAAGroupAuthReqsDropped=bAAAGroupAuthReqsDropped, bRadiusProxySubscriberDeleted=bRadiusProxySubscriberDeleted, bRadiusProxyAcctRequestSent=bRadiusProxyAcctRequestSent, bRadiusProxyAcctStopRequestSent=bRadiusProxyAcctStopRequestSent, bRadiusAuthServerMarkedDead=bRadiusAuthServerMarkedDead, bRadiusCoALatencyAvg=bRadiusCoALatencyAvg, bRadiusAuthAAAGroupName=bRadiusAuthAAAGroupName, bRadiusProxyAcctResponseSent=bRadiusProxyAcctResponseSent, bAAAGroupOutstandingAuthReqsLow=bAAAGroupOutstandingAuthReqsLow, bRadiusDisconnectReqDropDueToDupReq=bRadiusDisconnectReqDropDueToDupReq, bRadiusServerAcctTable=bRadiusServerAcctTable, bRadiusCoADMLatencyMin=bRadiusCoADMLatencyMin, bAAAGroupOutstandingAcctReqsHigh=bAAAGroupOutstandingAcctReqsHigh, bAAAGroupAcctTable=bAAAGroupAcctTable, bRadiusAuthLatencyIntervalDuration=bRadiusAuthLatencyIntervalDuration, bAAAGroupAuthName=bAAAGroupAuthName, bRadiusAcctRequestDropped=bRadiusAcctRequestDropped, bRadiusProxyAuthTPSLow=bRadiusProxyAuthTPSLow, bRadiusAccessMalformedRespDropped=bRadiusAccessMalformedRespDropped, bRadiusProxyAcctServerInetAddress=bRadiusProxyAcctServerInetAddress, bRadiusAuthInstanceIndex=bRadiusAuthInstanceIndex, bAAAGroupOutstandingAuthReqsHighThreshold=bAAAGroupOutstandingAuthReqsHighThreshold, bRadiusCoALatencyMax=bRadiusCoALatencyMax, bAAAGroupAuthIndex=bAAAGroupAuthIndex, bRadiusAccountingServerMarkedAlive=bRadiusAccountingServerMarkedAlive, bRadiusAcctServerIndex=bRadiusAcctServerIndex, bRadiusAcctRequestTimedOut=bRadiusAcctRequestTimedOut, bRadiusCoADMLatencyAvg=bRadiusCoADMLatencyAvg, bRadiusProxyAcctServerIndex=bRadiusProxyAcctServerIndex, bRadiusAuthLatencyMin=bRadiusAuthLatencyMin, bRadiusAccessRejectReceived=bRadiusAccessRejectReceived, bRadiusProxyAcctInterimUpdateSent=bRadiusProxyAcctInterimUpdateSent, bRadiusProxyAccessBadAuthenticatorRcvd=bRadiusProxyAccessBadAuthenticatorRcvd, bRadiusProxyAuthStatsInterval=bRadiusProxyAuthStatsInterval, bRadiusProxyServerAuthEntry=bRadiusProxyServerAuthEntry, bRadiusAcctLatencyAvg=bRadiusAcctLatencyAvg, bRadiusNotifications=bRadiusNotifications, BenuRadiusInstance=BenuRadiusInstance, bRadiusAccessPeakRequestPending=bRadiusAccessPeakRequestPending, bRadiusAcctStopRequestSent=bRadiusAcctStopRequestSent, bRadiusAcctStatsInterval=bRadiusAcctStatsInterval, bRadiusProxyAccessUnknownClientRcvd=bRadiusProxyAccessUnknownClientRcvd, bRadiusProxyAcctStopRequestRcvd=bRadiusProxyAcctStopRequestRcvd, bRadiusAuthResponseMinimumProcessingTime=bRadiusAuthResponseMinimumProcessingTime, bRadiusAuthResponseAverageProcessingTime=bRadiusAuthResponseAverageProcessingTime, bRadiusCoAAckSent=bRadiusCoAAckSent, bRadiusProxyAuthServerIndex=bRadiusProxyAuthServerIndex, bRadiusProxyAuthTPSInterval=bRadiusProxyAuthTPSInterval, bRadiusAcctRequestSent=bRadiusAcctRequestSent, bRadiusCoADMLatencyMax=bRadiusCoADMLatencyMax, bAAAGroupAuthTable=bAAAGroupAuthTable, bRadiusAcctResponseReceived=bRadiusAcctResponseReceived, bRadiusAcctRequestSentFail=bRadiusAcctRequestSentFail, bRadiusCoAClientInetAddressType=bRadiusCoAClientInetAddressType, bRadiusServerAcctEntry=bRadiusServerAcctEntry, bRadiusAcctLatencyLast=bRadiusAcctLatencyLast, bRadiusProxyAcctRequestRcvd=bRadiusProxyAcctRequestRcvd, bRadiusProxyServerAcctEntry=bRadiusProxyServerAcctEntry, bAAAGroupOutstandingCoAReqsHighThreshold=bAAAGroupOutstandingCoAReqsHighThreshold, bRadiusAcctLatencyMax=bRadiusAcctLatencyMax, bAAAGroupCoaCurrentOutstanding=bAAAGroupCoaCurrentOutstanding, bRadiusProxyAuthTPSEntry=bRadiusProxyAuthTPSEntry, bRadiusAccessRequestDropped=bRadiusAccessRequestDropped, bRadiusCoANackDueToInvalidReq=bRadiusCoANackDueToInvalidReq, bRadiusProxyAuthTPSHighReached=bRadiusProxyAuthTPSHighReached, bRadiusProxyAcctServerInetAddressType=bRadiusProxyAcctServerInetAddressType, bRadiusCoAReqDropDueToBadAuthenticator=bRadiusCoAReqDropDueToBadAuthenticator, bRadiusProxyAccessRequestRcvd=bRadiusProxyAccessRequestRcvd, bRadiusAcctRequestResent=bRadiusAcctRequestResent, bAAAGroupAcctCurrentOutstanding=bAAAGroupAcctCurrentOutstanding, bRadiusAccessBadAuthenticatorRcvd=bRadiusAccessBadAuthenticatorRcvd, bAAAGroupMaximumOutstandingAcctReqs=bAAAGroupMaximumOutstandingAcctReqs, bRadiusAuthResponseMaximumProcessingTime=bRadiusAuthResponseMaximumProcessingTime, bAAAGroupPeakOutstandingCoAReqs=bAAAGroupPeakOutstandingCoAReqs, bRadiusAuthLatencyMax=bRadiusAuthLatencyMax, bRadiusAcctIntervalDuration=bRadiusAcctIntervalDuration, bAAAGroupAuthIntervalDuration=bAAAGroupAuthIntervalDuration, bRadiusServerIPAddress=bRadiusServerIPAddress, bRadiusProxyMIBObjects=bRadiusProxyMIBObjects, bRadiusAcctStartRequestSent=bRadiusAcctStartRequestSent, bRadiusAcctAAAGroupName=bRadiusAcctAAAGroupName, bAAAGroupCoAReqsDropDueToInvalidClient=bAAAGroupCoAReqsDropDueToInvalidClient, bRadiusAuthRequestTotalPackets=bRadiusAuthRequestTotalPackets, bRadiusAuthRequestMinimumProcessingTime=bRadiusAuthRequestMinimumProcessingTime, bRadiusCoARequestDropped=bRadiusCoARequestDropped, bRadiusCoAReqDropDueToInvalidTime=bRadiusCoAReqDropDueToInvalidTime, bRadiusAccessRequestSentFail=bRadiusAccessRequestSentFail, bRadiusCoALatencyMin=bRadiusCoALatencyMin, bRadiusAccessAcceptReceived=bRadiusAccessAcceptReceived, bRadiusAcctServerInetAddressType=bRadiusAcctServerInetAddressType, bAAAGroupCoAIntervalDuration=bAAAGroupCoAIntervalDuration, bRadiusLatencyAuthEntry=bRadiusLatencyAuthEntry, bAAAGroupPeakOutstandingAuthReqsReached=bAAAGroupPeakOutstandingAuthReqsReached, bRadiusAccessRequestTimedOut=bRadiusAccessRequestTimedOut, bRadiusProxyAcctIntervalDuration=bRadiusProxyAcctIntervalDuration, bAAAGroupMaximumOutstandingCoAReqs=bAAAGroupMaximumOutstandingCoAReqs, bRadiusCOAStatsInterval=bRadiusCOAStatsInterval, bRadiusProxyAccessRejectRcvd=bRadiusProxyAccessRejectRcvd, bRadiusClientCoATable=bRadiusClientCoATable, bRadiusAuthServerInetAddressType=bRadiusAuthServerInetAddressType, bRadiusCoAReqDropDueToDupReq=bRadiusCoAReqDropDueToDupReq, bRadiusProxyAcctResponseRcvd=bRadiusProxyAcctResponseRcvd, bRadiusAuthStatsInterval=bRadiusAuthStatsInterval, bRadiusAccessRequestResent=bRadiusAccessRequestResent, bRadiusDisconnectNackDueToExceedMaxOutstanding=bRadiusDisconnectNackDueToExceedMaxOutstanding, bAAAGroupAcctStatsInterval=bAAAGroupAcctStatsInterval, bAAAGroupOutstandingCoAReqsLow=bAAAGroupOutstandingCoAReqsLow, bRadiusAuthRequestAverageProcessingTime=bRadiusAuthRequestAverageProcessingTime, bRadiusLatencyAuthTable=bRadiusLatencyAuthTable, bRadiusProxyAuthTPSHigh=bRadiusProxyAuthTPSHigh, bRadiusAuthLatencyAvg=bRadiusAuthLatencyAvg, bRadiusAuthServerMarkedAlive=bRadiusAuthServerMarkedAlive, bRadiusDisconnectNackDueToInvalidReq=bRadiusDisconnectNackDueToInvalidReq)
