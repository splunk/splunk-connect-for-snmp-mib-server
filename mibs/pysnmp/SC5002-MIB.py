#
# PySNMP MIB module SC5002-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SC5002-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:52:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
SCinstance, = mibBuilder.importSymbols("GDCMACRO-MIB", "SCinstance")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, IpAddress, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, ObjectIdentity, MibIdentifier, Gauge32, Unsigned32, enterprises, Bits, TimeTicks, iso, Counter64, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "ObjectIdentity", "MibIdentifier", "Gauge32", "Unsigned32", "enterprises", "Bits", "TimeTicks", "iso", "Counter64", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
gdc = MibIdentifier((1, 3, 6, 1, 4, 1, 498))
dsx1 = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6))
sc5002 = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8))
sc5002Version = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 1))
sc5002NetworkCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 2))
sc5002Alarms = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3))
sc5002Diagnostics = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 4))
sc5002Maintenance = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 5))
sc5002Performance = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 6))
sc5002MIBversion = MibScalar((1, 3, 6, 1, 4, 1, 498, 6, 8, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002MIBversion.setStatus('mandatory')
sc5002VersionTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 8, 1, 2), )
if mibBuilder.loadTexts: sc5002VersionTable.setStatus('mandatory')
sc5002VersionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 8, 1, 2, 1), ).setIndexNames((0, "SC5002-MIB", "sc5002VersionIndex"))
if mibBuilder.loadTexts: sc5002VersionEntry.setStatus('mandatory')
sc5002VersionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 1, 2, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002VersionIndex.setStatus('mandatory')
sc5002ActiveFirmwareRev = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002ActiveFirmwareRev.setStatus('mandatory')
sc5002StoredFirmwareRev = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002StoredFirmwareRev.setStatus('mandatory')
sc5002BootRev = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002BootRev.setStatus('mandatory')
sc5002StoredFirmwareStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("statBlank", 1), ("statDownLoading", 2), ("statOK", 3), ("statCheckSumBad", 4), ("statUnZipping", 5), ("statBadUnZip", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002StoredFirmwareStatus.setStatus('mandatory')
sc5002SwitchActiveFirmware = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("switchNorm", 1), ("switchActive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sc5002SwitchActiveFirmware.setStatus('mandatory')
sc5002DownloadingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disableAll", 1), ("enableAndWait", 2), ("enableAndSwitch", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sc5002DownloadingMode.setStatus('mandatory')
sc5002FirmwareRev = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 1, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002FirmwareRev.setStatus('mandatory')
sc5002NetworkCfgTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 8, 2, 1), )
if mibBuilder.loadTexts: sc5002NetworkCfgTable.setStatus('mandatory')
sc5002NetworkCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 8, 2, 1, 1), ).setIndexNames((0, "SC5002-MIB", "sc5002NetworkCfgIndex"))
if mibBuilder.loadTexts: sc5002NetworkCfgEntry.setStatus('mandatory')
sc5002NetworkCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 2, 1, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002NetworkCfgIndex.setStatus('mandatory')
sc5002E1SignalingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("assocChanSigWithCRC4", 1), ("assocChanSigNoCRC4", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sc5002E1SignalingMode.setStatus('mandatory')
sc5002AlarmData = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1))
sc5002NoResponse = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 1))
sc5002DiagRxErr = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 2))
sc5002PowerUp = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 3))
sc5002NvRamCorrupt = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 4))
sc5002UnitFailure = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 5))
sc5002TimingLoss = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 6))
sc5002LossOfSignal = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 7))
sc5002LossOfFrame = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 8))
sc5002AlarmIndSignal = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 9))
sc5002FallbackTimingActive = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 10))
sc5002NearEndLnCodeViol = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 11))
sc5002NearEndErrSec = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 12))
sc5002NearEndBkdBlkErr = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 13))
sc5002NearEndSevErrSec = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 14))
sc5002NearEndUnavlSec = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 15))
sc5002FarEndErrSec = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 16))
sc5002FarEndBkdBlkErr = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 17))
sc5002FarEndSevErrSec = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 18))
sc5002FarEndUnavlSec = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 1, 19))
sc5002NearEndAlarmCfgTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 2), )
if mibBuilder.loadTexts: sc5002NearEndAlarmCfgTable.setStatus('mandatory')
sc5002NearEndAlarmCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 2, 1), ).setIndexNames((0, "SC5002-MIB", "sc5002NearEndAlarmCfgIndex"), (0, "SC5002-MIB", "sc5002NearEndAlarmCfgIdentifier"))
if mibBuilder.loadTexts: sc5002NearEndAlarmCfgEntry.setStatus('mandatory')
sc5002NearEndAlarmCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 2, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002NearEndAlarmCfgIndex.setStatus('mandatory')
sc5002NearEndAlarmCfgIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 2, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002NearEndAlarmCfgIdentifier.setStatus('mandatory')
sc5002NearEndAlarmWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("win30sec", 1), ("win1min", 2), ("win15min", 3), ("win1hr", 4), ("win24hr", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sc5002NearEndAlarmWindow.setStatus('mandatory')
sc5002NearEndAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("thr1", 1), ("thr3", 2), ("thr10", 3), ("thr100", 4), ("thr1000", 5), ("thr10000", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sc5002NearEndAlarmThreshold.setStatus('mandatory')
sc5002FarEndAlarmCfgTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 3), )
if mibBuilder.loadTexts: sc5002FarEndAlarmCfgTable.setStatus('mandatory')
sc5002FarEndAlarmCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 3, 1), ).setIndexNames((0, "SC5002-MIB", "sc5002FarEndAlarmCfgIndex"), (0, "SC5002-MIB", "sc5002FarEndAlarmCfgIdentifier"))
if mibBuilder.loadTexts: sc5002FarEndAlarmCfgEntry.setStatus('mandatory')
sc5002FarEndAlarmCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 3, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002FarEndAlarmCfgIndex.setStatus('mandatory')
sc5002FarEndAlarmCfgIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 3, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002FarEndAlarmCfgIdentifier.setStatus('mandatory')
sc5002FarEndAlarmWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("win30sec", 1), ("win1min", 2), ("win15min", 3), ("win1hr", 4), ("win24hr", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sc5002FarEndAlarmWindow.setStatus('mandatory')
sc5002FarEndAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("thr1", 1), ("thr3", 2), ("thr10", 3), ("thr100", 4), ("thr1000", 5), ("thr10000", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sc5002FarEndAlarmThreshold.setStatus('mandatory')
sc5002MaintenanceTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 8, 5, 1), )
if mibBuilder.loadTexts: sc5002MaintenanceTable.setStatus('mandatory')
sc5002MaintenanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 8, 5, 1, 1), ).setIndexNames((0, "SC5002-MIB", "sc5002MaintenanceLineIndex"))
if mibBuilder.loadTexts: sc5002MaintenanceEntry.setStatus('mandatory')
sc5002MaintenanceLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 5, 1, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002MaintenanceLineIndex.setStatus('mandatory')
sc5002SoftReset = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("norm", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sc5002SoftReset.setStatus('mandatory')
sc5002DefaultInit = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("factoryDefault", 1), ("normal", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sc5002DefaultInit.setStatus('mandatory')
sc5002NearEndResetStats = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("norm", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sc5002NearEndResetStats.setStatus('mandatory')
sc5002NearEndStatLastInitialized = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002NearEndStatLastInitialized.setStatus('mandatory')
sc5002FarEndResetStats = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("norm", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sc5002FarEndResetStats.setStatus('mandatory')
sc5002FarEndStatLastInitialized = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002FarEndStatLastInitialized.setStatus('mandatory')
sc5002LedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 5, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002LedStatus.setStatus('mandatory')
sc5002NearEndValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002NearEndValidIntervals.setStatus('mandatory')
sc5002FarEndValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002FarEndValidIntervals.setStatus('mandatory')
sc5002SysUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002SysUpTime.setStatus('mandatory')
sc5002NearEndCurrent15MinTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 1), )
if mibBuilder.loadTexts: sc5002NearEndCurrent15MinTable.setStatus('mandatory')
sc5002NearEndCurrent15MinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 1, 1), ).setIndexNames((0, "SC5002-MIB", "sc5002NearEndCurrent15MinIndex"))
if mibBuilder.loadTexts: sc5002NearEndCurrent15MinEntry.setStatus('mandatory')
sc5002NearEndCurrent15MinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 1, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002NearEndCurrent15MinIndex.setStatus('mandatory')
sc5002NearEndCurrent15MinStat = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002NearEndCurrent15MinStat.setStatus('mandatory')
sc5002NearEndIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 2), )
if mibBuilder.loadTexts: sc5002NearEndIntervalTable.setStatus('mandatory')
sc5002NearEndIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 2, 1), ).setIndexNames((0, "SC5002-MIB", "sc5002NearEndIntervalIndex"), (0, "SC5002-MIB", "sc5002NearEndIntervalNumber"))
if mibBuilder.loadTexts: sc5002NearEndIntervalEntry.setStatus('mandatory')
sc5002NearEndIntervalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 2, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002NearEndIntervalIndex.setStatus('mandatory')
sc5002NearEndIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002NearEndIntervalNumber.setStatus('mandatory')
sc5002NearEndIntervalStat = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002NearEndIntervalStat.setStatus('mandatory')
sc5002NearEndCurrent24HrTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 3), )
if mibBuilder.loadTexts: sc5002NearEndCurrent24HrTable.setStatus('mandatory')
sc5002NearEndCurrent24HrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 3, 1), ).setIndexNames((0, "SC5002-MIB", "sc5002NearEndCurrent24HrIndex"))
if mibBuilder.loadTexts: sc5002NearEndCurrent24HrEntry.setStatus('mandatory')
sc5002NearEndCurrent24HrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 3, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002NearEndCurrent24HrIndex.setStatus('mandatory')
sc5002NearEndCurrent24HrStat = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(15, 15)).setFixedLength(15)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002NearEndCurrent24HrStat.setStatus('mandatory')
sc5002NearEndRecent24HrTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 4), )
if mibBuilder.loadTexts: sc5002NearEndRecent24HrTable.setStatus('mandatory')
sc5002NearEndRecent24HrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 4, 1), ).setIndexNames((0, "SC5002-MIB", "sc5002NearEndRecent24HrIndex"))
if mibBuilder.loadTexts: sc5002NearEndRecent24HrEntry.setStatus('mandatory')
sc5002NearEndRecent24HrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 4, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002NearEndRecent24HrIndex.setStatus('mandatory')
sc5002NearEndRecent24HrStat = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(15, 15)).setFixedLength(15)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002NearEndRecent24HrStat.setStatus('mandatory')
sc5002FarEndCurrent15MinTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 5), )
if mibBuilder.loadTexts: sc5002FarEndCurrent15MinTable.setStatus('mandatory')
sc5002FarEndCurrent15MinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 5, 1), ).setIndexNames((0, "SC5002-MIB", "sc5002FarEndCurrent15MinIndex"))
if mibBuilder.loadTexts: sc5002FarEndCurrent15MinEntry.setStatus('mandatory')
sc5002FarEndCurrent15MinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 5, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002FarEndCurrent15MinIndex.setStatus('mandatory')
sc5002FarEndCurrent15MinStat = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(9, 9)).setFixedLength(9)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002FarEndCurrent15MinStat.setStatus('mandatory')
sc5002FarEndIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 6), )
if mibBuilder.loadTexts: sc5002FarEndIntervalTable.setStatus('mandatory')
sc5002FarEndIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 6, 1), ).setIndexNames((0, "SC5002-MIB", "sc5002FarEndIntervalIndex"), (0, "SC5002-MIB", "sc5002FarEndIntervalNumber"))
if mibBuilder.loadTexts: sc5002FarEndIntervalEntry.setStatus('mandatory')
sc5002FarEndIntervalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 6, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002FarEndIntervalIndex.setStatus('mandatory')
sc5002FarEndIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002FarEndIntervalNumber.setStatus('mandatory')
sc5002FarEndIntervalStat = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(9, 9)).setFixedLength(9)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002FarEndIntervalStat.setStatus('mandatory')
sc5002CurrentFarEnd24HrTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 7), )
if mibBuilder.loadTexts: sc5002CurrentFarEnd24HrTable.setStatus('mandatory')
sc5002CurrentFarEnd24HrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 7, 1), ).setIndexNames((0, "SC5002-MIB", "sc5002CurrentFarEnd24HrIndex"))
if mibBuilder.loadTexts: sc5002CurrentFarEnd24HrEntry.setStatus('mandatory')
sc5002CurrentFarEnd24HrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 7, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002CurrentFarEnd24HrIndex.setStatus('mandatory')
sc5002CurrentFarEnd24HrStat = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002CurrentFarEnd24HrStat.setStatus('mandatory')
sc5002RecentFarEnd24HrTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 8), )
if mibBuilder.loadTexts: sc5002RecentFarEnd24HrTable.setStatus('mandatory')
sc5002RecentFarEnd24HrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 8, 1), ).setIndexNames((0, "SC5002-MIB", "sc5002RecentFarEnd24HrIndex"))
if mibBuilder.loadTexts: sc5002RecentFarEnd24HrEntry.setStatus('mandatory')
sc5002RecentFarEnd24HrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 8, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002RecentFarEnd24HrIndex.setStatus('mandatory')
sc5002RecentFarEnd24HrStat = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002RecentFarEnd24HrStat.setStatus('mandatory')
sc5002NearEndUnavailableTimeRegTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 9), )
if mibBuilder.loadTexts: sc5002NearEndUnavailableTimeRegTable.setStatus('mandatory')
sc5002NearEndUnavailableTimeRegEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 9, 1), ).setIndexNames((0, "SC5002-MIB", "sc5002NearEndUnavailableTimeRegIndex"), (0, "SC5002-MIB", "sc5002NearEndUnavailableTimeRegNumber"))
if mibBuilder.loadTexts: sc5002NearEndUnavailableTimeRegEntry.setStatus('mandatory')
sc5002NearEndUnavailableTimeRegIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 9, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002NearEndUnavailableTimeRegIndex.setStatus('mandatory')
sc5002NearEndUnavailableTimeRegNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002NearEndUnavailableTimeRegNumber.setStatus('mandatory')
sc5002NearEndUnavailableTimeRegStart = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002NearEndUnavailableTimeRegStart.setStatus('mandatory')
sc5002NearEndUnavailableTimeRegStop = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002NearEndUnavailableTimeRegStop.setStatus('mandatory')
sc5002FarEndUnavailableTimeRegTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 10), )
if mibBuilder.loadTexts: sc5002FarEndUnavailableTimeRegTable.setStatus('mandatory')
sc5002FarEndUnavailableTimeRegEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 10, 1), ).setIndexNames((0, "SC5002-MIB", "sc5002FarEndUnavailableTimeRegIndex"), (0, "SC5002-MIB", "sc5002FarEndUnavailableTimeRegNumber"))
if mibBuilder.loadTexts: sc5002FarEndUnavailableTimeRegEntry.setStatus('mandatory')
sc5002FarEndUnavailableTimeRegIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 10, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002FarEndUnavailableTimeRegIndex.setStatus('mandatory')
sc5002FarEndUnavailableTimeRegNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002FarEndUnavailableTimeRegNumber.setStatus('mandatory')
sc5002FarEndUnavailableTimeRegStart = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002FarEndUnavailableTimeRegStart.setStatus('mandatory')
sc5002FarEndUnavailableTimeRegStop = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 6, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002FarEndUnavailableTimeRegStop.setStatus('mandatory')
sc5002DiagTable = MibTable((1, 3, 6, 1, 4, 1, 498, 6, 8, 4, 1), )
if mibBuilder.loadTexts: sc5002DiagTable.setStatus('mandatory')
sc5002DiagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 498, 6, 8, 4, 1, 1), ).setIndexNames((0, "SC5002-MIB", "sc5002DiagIndex"))
if mibBuilder.loadTexts: sc5002DiagEntry.setStatus('mandatory')
sc5002DiagIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 4, 1, 1, 1), SCinstance()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002DiagIndex.setStatus('mandatory')
sc5002LoopbackConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noLoopBack", 1), ("lineLoopBack", 2), ("unitTest", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sc5002LoopbackConfig.setStatus('mandatory')
sc5002TestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 498, 6, 8, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pass", 1), ("fail", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sc5002TestResult.setStatus('mandatory')
mibBuilder.exportSymbols("SC5002-MIB", sc5002RecentFarEnd24HrIndex=sc5002RecentFarEnd24HrIndex, sc5002FarEndAlarmCfgEntry=sc5002FarEndAlarmCfgEntry, sc5002Maintenance=sc5002Maintenance, sc5002NearEndUnavailableTimeRegIndex=sc5002NearEndUnavailableTimeRegIndex, sc5002NearEndAlarmCfgIdentifier=sc5002NearEndAlarmCfgIdentifier, sc5002FarEndAlarmCfgTable=sc5002FarEndAlarmCfgTable, sc5002FarEndUnavailableTimeRegEntry=sc5002FarEndUnavailableTimeRegEntry, sc5002CurrentFarEnd24HrTable=sc5002CurrentFarEnd24HrTable, sc5002NearEndUnavailableTimeRegNumber=sc5002NearEndUnavailableTimeRegNumber, sc5002DiagTable=sc5002DiagTable, sc5002FallbackTimingActive=sc5002FallbackTimingActive, sc5002RecentFarEnd24HrEntry=sc5002RecentFarEnd24HrEntry, sc5002SwitchActiveFirmware=sc5002SwitchActiveFirmware, sc5002MaintenanceEntry=sc5002MaintenanceEntry, sc5002SysUpTime=sc5002SysUpTime, dsx1=dsx1, sc5002LedStatus=sc5002LedStatus, sc5002NearEndRecent24HrStat=sc5002NearEndRecent24HrStat, sc5002FarEndCurrent15MinTable=sc5002FarEndCurrent15MinTable, sc5002TimingLoss=sc5002TimingLoss, sc5002AlarmIndSignal=sc5002AlarmIndSignal, sc5002FarEndErrSec=sc5002FarEndErrSec, sc5002NearEndCurrent24HrStat=sc5002NearEndCurrent24HrStat, sc5002VersionEntry=sc5002VersionEntry, sc5002NearEndCurrent15MinEntry=sc5002NearEndCurrent15MinEntry, sc5002FarEndCurrent15MinIndex=sc5002FarEndCurrent15MinIndex, sc5002CurrentFarEnd24HrIndex=sc5002CurrentFarEnd24HrIndex, sc5002Diagnostics=sc5002Diagnostics, sc5002NearEndErrSec=sc5002NearEndErrSec, sc5002NearEndCurrent24HrEntry=sc5002NearEndCurrent24HrEntry, sc5002FarEndSevErrSec=sc5002FarEndSevErrSec, sc5002FarEndResetStats=sc5002FarEndResetStats, sc5002NearEndValidIntervals=sc5002NearEndValidIntervals, sc5002FarEndAlarmCfgIdentifier=sc5002FarEndAlarmCfgIdentifier, sc5002FarEndUnavailableTimeRegTable=sc5002FarEndUnavailableTimeRegTable, sc5002NearEndSevErrSec=sc5002NearEndSevErrSec, sc5002NearEndCurrent15MinIndex=sc5002NearEndCurrent15MinIndex, sc5002FarEndUnavailableTimeRegNumber=sc5002FarEndUnavailableTimeRegNumber, sc5002FarEndAlarmWindow=sc5002FarEndAlarmWindow, sc5002NearEndRecent24HrTable=sc5002NearEndRecent24HrTable, sc5002NearEndCurrent15MinStat=sc5002NearEndCurrent15MinStat, sc5002ActiveFirmwareRev=sc5002ActiveFirmwareRev, sc5002NearEndRecent24HrEntry=sc5002NearEndRecent24HrEntry, sc5002CurrentFarEnd24HrEntry=sc5002CurrentFarEnd24HrEntry, sc5002FarEndUnavailableTimeRegStop=sc5002FarEndUnavailableTimeRegStop, sc5002NearEndAlarmThreshold=sc5002NearEndAlarmThreshold, sc5002FarEndIntervalTable=sc5002FarEndIntervalTable, sc5002NearEndIntervalNumber=sc5002NearEndIntervalNumber, sc5002FirmwareRev=sc5002FirmwareRev, sc5002NetworkCfgTable=sc5002NetworkCfgTable, sc5002RecentFarEnd24HrStat=sc5002RecentFarEnd24HrStat, sc5002NearEndUnavailableTimeRegStop=sc5002NearEndUnavailableTimeRegStop, sc5002StoredFirmwareStatus=sc5002StoredFirmwareStatus, sc5002UnitFailure=sc5002UnitFailure, sc5002MaintenanceTable=sc5002MaintenanceTable, sc5002NvRamCorrupt=sc5002NvRamCorrupt, sc5002LoopbackConfig=sc5002LoopbackConfig, sc5002LossOfSignal=sc5002LossOfSignal, sc5002RecentFarEnd24HrTable=sc5002RecentFarEnd24HrTable, sc5002NearEndUnavlSec=sc5002NearEndUnavlSec, sc5002CurrentFarEnd24HrStat=sc5002CurrentFarEnd24HrStat, sc5002FarEndUnavailableTimeRegIndex=sc5002FarEndUnavailableTimeRegIndex, sc5002NearEndBkdBlkErr=sc5002NearEndBkdBlkErr, sc5002SoftReset=sc5002SoftReset, sc5002NearEndStatLastInitialized=sc5002NearEndStatLastInitialized, sc5002NetworkCfgEntry=sc5002NetworkCfgEntry, sc5002NearEndIntervalStat=sc5002NearEndIntervalStat, sc5002E1SignalingMode=sc5002E1SignalingMode, sc5002NearEndIntervalIndex=sc5002NearEndIntervalIndex, sc5002NearEndCurrent24HrIndex=sc5002NearEndCurrent24HrIndex, sc5002NearEndCurrent24HrTable=sc5002NearEndCurrent24HrTable, sc5002NearEndIntervalEntry=sc5002NearEndIntervalEntry, sc5002NearEndCurrent15MinTable=sc5002NearEndCurrent15MinTable, sc5002NearEndAlarmCfgTable=sc5002NearEndAlarmCfgTable, sc5002FarEndIntervalIndex=sc5002FarEndIntervalIndex, sc5002MIBversion=sc5002MIBversion, sc5002Performance=sc5002Performance, sc5002NearEndUnavailableTimeRegStart=sc5002NearEndUnavailableTimeRegStart, sc5002Alarms=sc5002Alarms, sc5002NearEndLnCodeViol=sc5002NearEndLnCodeViol, sc5002VersionIndex=sc5002VersionIndex, sc5002FarEndUnavlSec=sc5002FarEndUnavlSec, sc5002FarEndIntervalNumber=sc5002FarEndIntervalNumber, sc5002NearEndResetStats=sc5002NearEndResetStats, sc5002NearEndAlarmCfgIndex=sc5002NearEndAlarmCfgIndex, sc5002BootRev=sc5002BootRev, sc5002DiagEntry=sc5002DiagEntry, sc5002NetworkCfg=sc5002NetworkCfg, sc5002PowerUp=sc5002PowerUp, sc5002FarEndAlarmThreshold=sc5002FarEndAlarmThreshold, sc5002FarEndStatLastInitialized=sc5002FarEndStatLastInitialized, sc5002FarEndAlarmCfgIndex=sc5002FarEndAlarmCfgIndex, sc5002NearEndAlarmWindow=sc5002NearEndAlarmWindow, gdc=gdc, sc5002NearEndUnavailableTimeRegTable=sc5002NearEndUnavailableTimeRegTable, sc5002FarEndIntervalStat=sc5002FarEndIntervalStat, sc5002NearEndIntervalTable=sc5002NearEndIntervalTable, sc5002=sc5002, sc5002FarEndCurrent15MinEntry=sc5002FarEndCurrent15MinEntry, sc5002Version=sc5002Version, sc5002FarEndBkdBlkErr=sc5002FarEndBkdBlkErr, sc5002MaintenanceLineIndex=sc5002MaintenanceLineIndex, sc5002AlarmData=sc5002AlarmData, sc5002NearEndUnavailableTimeRegEntry=sc5002NearEndUnavailableTimeRegEntry, sc5002NearEndAlarmCfgEntry=sc5002NearEndAlarmCfgEntry, sc5002DiagIndex=sc5002DiagIndex, sc5002TestResult=sc5002TestResult, sc5002NoResponse=sc5002NoResponse, sc5002FarEndUnavailableTimeRegStart=sc5002FarEndUnavailableTimeRegStart, sc5002LossOfFrame=sc5002LossOfFrame, sc5002NetworkCfgIndex=sc5002NetworkCfgIndex, sc5002NearEndRecent24HrIndex=sc5002NearEndRecent24HrIndex, sc5002StoredFirmwareRev=sc5002StoredFirmwareRev, sc5002FarEndIntervalEntry=sc5002FarEndIntervalEntry, sc5002FarEndCurrent15MinStat=sc5002FarEndCurrent15MinStat, sc5002DownloadingMode=sc5002DownloadingMode, sc5002VersionTable=sc5002VersionTable, sc5002FarEndValidIntervals=sc5002FarEndValidIntervals, sc5002DefaultInit=sc5002DefaultInit, sc5002DiagRxErr=sc5002DiagRxErr)
