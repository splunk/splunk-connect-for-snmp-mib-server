#
# PySNMP MIB module Nortel-Magellan-Passport-BgpMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-BgpMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:17:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
vrIp, vrIpIndex = mibBuilder.importSymbols("Nortel-Magellan-Passport-IpMIB", "vrIp", "vrIpIndex")
Counter32, DisplayString, StorageType, Gauge32, Unsigned32, Integer32, RowStatus = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "Counter32", "DisplayString", "StorageType", "Gauge32", "Unsigned32", "Integer32", "RowStatus")
HexString, NonReplicated, Hex, AsciiString, IntegerSequence = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "HexString", "NonReplicated", "Hex", "AsciiString", "IntegerSequence")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
vrIndex, = mibBuilder.importSymbols("Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, MibIdentifier, iso, TimeTicks, ObjectIdentity, ModuleIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Unsigned32, Bits, Counter64, NotificationType, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibIdentifier", "iso", "TimeTicks", "ObjectIdentity", "ModuleIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Unsigned32", "Bits", "Counter64", "NotificationType", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
bgpMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 141))
vrIpBgp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21))
vrIpBgpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 1), )
if mibBuilder.loadTexts: vrIpBgpRowStatusTable.setStatus('mandatory')
vrIpBgpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"))
if mibBuilder.loadTexts: vrIpBgpRowStatusEntry.setStatus('mandatory')
vrIpBgpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpRowStatus.setStatus('mandatory')
vrIpBgpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpComponentName.setStatus('mandatory')
vrIpBgpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpStorageType.setStatus('mandatory')
vrIpBgpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: vrIpBgpIndex.setStatus('mandatory')
vrIpBgpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 100), )
if mibBuilder.loadTexts: vrIpBgpProvTable.setStatus('mandatory')
vrIpBgpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 100, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"))
if mibBuilder.loadTexts: vrIpBgpProvEntry.setStatus('mandatory')
vrIpBgpBgpIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 100, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpBgpIdentifier.setStatus('mandatory')
vrIpBgpLocalAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 100, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpLocalAs.setStatus('mandatory')
vrIpBgpDefaultLocalPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 100, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(144)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpDefaultLocalPreference.setStatus('mandatory')
vrIpBgpDefaultMultiExitDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 100, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(4294967294)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpDefaultMultiExitDisc.setStatus('mandatory')
vrIpBgpRouteThrottleLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 100, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(250)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpRouteThrottleLimit.setStatus('mandatory')
vrIpBgpRouteThrottleInter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 100, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpRouteThrottleInter.setStatus('mandatory')
vrIpBgpRouteReflector = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 100, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpRouteReflector.setStatus('mandatory')
vrIpBgpRouteReflectorCluster = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 100, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpRouteReflectorCluster.setStatus('mandatory')
vrIpBgpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 101), )
if mibBuilder.loadTexts: vrIpBgpOperTable.setStatus('mandatory')
vrIpBgpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 101, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"))
if mibBuilder.loadTexts: vrIpBgpOperEntry.setStatus('mandatory')
vrIpBgpTableVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 101, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpTableVersion.setStatus('mandatory')
vrIpBgpInMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 101, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpInMsgs.setStatus('mandatory')
vrIpBgpInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 101, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpInErrors.setStatus('mandatory')
vrIpBgpInErrorMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 101, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpInErrorMsgs.setStatus('mandatory')
vrIpBgpOutMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 101, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOutMsgs.setStatus('mandatory')
vrIpBgpOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 101, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOutDiscards.setStatus('mandatory')
vrIpBgpOutErrorMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 101, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOutErrorMsgs.setStatus('mandatory')
vrIpBgpIndbSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 101, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpIndbSize.setStatus('mandatory')
vrIpBgpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 102), )
if mibBuilder.loadTexts: vrIpBgpStateTable.setStatus('mandatory')
vrIpBgpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 102, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"))
if mibBuilder.loadTexts: vrIpBgpStateEntry.setStatus('mandatory')
vrIpBgpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 102, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpAdminState.setStatus('mandatory')
vrIpBgpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 102, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOperationalState.setStatus('mandatory')
vrIpBgpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 102, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpUsageState.setStatus('mandatory')
vrIpBgpAdminControlTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 103), )
if mibBuilder.loadTexts: vrIpBgpAdminControlTable.setStatus('mandatory')
vrIpBgpAdminControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 103, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"))
if mibBuilder.loadTexts: vrIpBgpAdminControlEntry.setStatus('mandatory')
vrIpBgpSnmpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 103, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpSnmpAdminStatus.setStatus('mandatory')
vrIpBgpOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 106), )
if mibBuilder.loadTexts: vrIpBgpOperStatusTable.setStatus('mandatory')
vrIpBgpOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 106, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"))
if mibBuilder.loadTexts: vrIpBgpOperStatusEntry.setStatus('mandatory')
vrIpBgpSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 106, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpSnmpOperStatus.setStatus('mandatory')
vrIpBgpPeer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2))
vrIpBgpPeerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 1), )
if mibBuilder.loadTexts: vrIpBgpPeerRowStatusTable.setStatus('mandatory')
vrIpBgpPeerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpPeerPeerAddressIndex"))
if mibBuilder.loadTexts: vrIpBgpPeerRowStatusEntry.setStatus('mandatory')
vrIpBgpPeerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpPeerRowStatus.setStatus('mandatory')
vrIpBgpPeerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerComponentName.setStatus('mandatory')
vrIpBgpPeerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerStorageType.setStatus('mandatory')
vrIpBgpPeerPeerAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: vrIpBgpPeerPeerAddressIndex.setStatus('mandatory')
vrIpBgpPeerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 10), )
if mibBuilder.loadTexts: vrIpBgpPeerProvTable.setStatus('mandatory')
vrIpBgpPeerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpPeerPeerAddressIndex"))
if mibBuilder.loadTexts: vrIpBgpPeerProvEntry.setStatus('mandatory')
vrIpBgpPeerPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpPeerPeerAs.setStatus('mandatory')
vrIpBgpPeerLocalAddressConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 10, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpPeerLocalAddressConfigured.setStatus('mandatory')
vrIpBgpPeerKeepAliveConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 21845)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpPeerKeepAliveConfigured.setStatus('mandatory')
vrIpBgpPeerHoldTimeConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), )).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpPeerHoldTimeConfigured.setStatus('mandatory')
vrIpBgpPeerConnectRetryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpPeerConnectRetryTime.setStatus('mandatory')
vrIpBgpPeerMinAsOrigTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpPeerMinAsOrigTime.setStatus('mandatory')
vrIpBgpPeerMinRouteAdvTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpPeerMinRouteAdvTime.setStatus('mandatory')
vrIpBgpPeerDefaultInAggMed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(4294967295)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpPeerDefaultInAggMed.setStatus('mandatory')
vrIpBgpPeerIsRouteReflectorClient = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpPeerIsRouteReflectorClient.setStatus('mandatory')
vrIpBgpPeerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 11), )
if mibBuilder.loadTexts: vrIpBgpPeerStateTable.setStatus('mandatory')
vrIpBgpPeerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpPeerPeerAddressIndex"))
if mibBuilder.loadTexts: vrIpBgpPeerStateEntry.setStatus('mandatory')
vrIpBgpPeerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerAdminState.setStatus('mandatory')
vrIpBgpPeerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerOperationalState.setStatus('mandatory')
vrIpBgpPeerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerUsageState.setStatus('mandatory')
vrIpBgpPeerOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12), )
if mibBuilder.loadTexts: vrIpBgpPeerOperTable.setStatus('mandatory')
vrIpBgpPeerOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpPeerPeerAddressIndex"))
if mibBuilder.loadTexts: vrIpBgpPeerOperEntry.setStatus('mandatory')
vrIpBgpPeerConnectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("idle", 1), ("connect", 2), ("active", 3), ("openSent", 4), ("openConfirm", 5), ("established", 6))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerConnectionState.setStatus('mandatory')
vrIpBgpPeerBgpIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerBgpIdentifier.setStatus('mandatory')
vrIpBgpPeerVersionNegotiated = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerVersionNegotiated.setStatus('mandatory')
vrIpBgpPeerHoldTimeNegotiated = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerHoldTimeNegotiated.setStatus('mandatory')
vrIpBgpPeerKeepAliveNegotiated = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 21845))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerKeepAliveNegotiated.setStatus('mandatory')
vrIpBgpPeerLocalAddressUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerLocalAddressUsed.setStatus('mandatory')
vrIpBgpPeerLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerLocalPort.setStatus('mandatory')
vrIpBgpPeerRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerRemotePort.setStatus('mandatory')
vrIpBgpPeerLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 11), HexString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerLastError.setStatus('mandatory')
vrIpBgpPeerConnectionEstablishedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 12), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerConnectionEstablishedTime.setStatus('mandatory')
vrIpBgpPeerConnectionEstablishedTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerConnectionEstablishedTransitions.setStatus('mandatory')
vrIpBgpPeerInUpdateElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 14), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerInUpdateElapsedTime.setStatus('mandatory')
vrIpBgpPeerInMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerInMsgs.setStatus('mandatory')
vrIpBgpPeerInUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerInUpdates.setStatus('mandatory')
vrIpBgpPeerInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerInErrors.setStatus('mandatory')
vrIpBgpPeerInErrorMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerInErrorMsgs.setStatus('mandatory')
vrIpBgpPeerOutMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerOutMsgs.setStatus('mandatory')
vrIpBgpPeerOutUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerOutUpdates.setStatus('mandatory')
vrIpBgpPeerOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerOutDiscards.setStatus('mandatory')
vrIpBgpPeerOutErrorMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerOutErrorMsgs.setStatus('mandatory')
vrIpBgpPeerInRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 2, 12, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpPeerInRoutes.setStatus('mandatory')
vrIpBgpImport = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3))
vrIpBgpImportRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 1), )
if mibBuilder.loadTexts: vrIpBgpImportRowStatusTable.setStatus('mandatory')
vrIpBgpImportRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpImportIndex"))
if mibBuilder.loadTexts: vrIpBgpImportRowStatusEntry.setStatus('mandatory')
vrIpBgpImportRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpImportRowStatus.setStatus('mandatory')
vrIpBgpImportComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpImportComponentName.setStatus('mandatory')
vrIpBgpImportStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpImportStorageType.setStatus('mandatory')
vrIpBgpImportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vrIpBgpImportIndex.setStatus('mandatory')
vrIpBgpImportProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 10), )
if mibBuilder.loadTexts: vrIpBgpImportProvTable.setStatus('mandatory')
vrIpBgpImportProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpImportIndex"))
if mibBuilder.loadTexts: vrIpBgpImportProvEntry.setStatus('mandatory')
vrIpBgpImportPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpImportPeerAs.setStatus('mandatory')
vrIpBgpImportPeerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 10, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpImportPeerIpAddress.setStatus('mandatory')
vrIpBgpImportOriginAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpImportOriginAs.setStatus('mandatory')
vrIpBgpImportOriginProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("any", 0), ("igp", 1), ("egp", 2), ("incomplete", 3))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpImportOriginProtocol.setStatus('mandatory')
vrIpBgpImportUsageFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("use", 1), ("ignore", 2), ("exclude", 3))).clone('use')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpImportUsageFlag.setStatus('mandatory')
vrIpBgpImportLocalPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpImportLocalPreference.setStatus('mandatory')
vrIpBgpImportPreferredOver = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(6, 70))).clone(namedValues=NamedValues(("overIntOspf", 6), ("underIntOspf", 70))).clone('underIntOspf')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpImportPreferredOver.setStatus('mandatory')
vrIpBgpImportAsPathExpression = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 10, 1, 8), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpImportAsPathExpression.setStatus('mandatory')
vrIpBgpImportCommunityExpression = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 10, 1, 9), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpImportCommunityExpression.setStatus('mandatory')
vrIpBgpImportExpressPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpImportExpressPreference.setStatus('mandatory')
vrIpBgpImportAppendCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpImportAppendCommunity.setStatus('mandatory')
vrIpBgpImportNet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 2))
vrIpBgpImportNetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 2, 1), )
if mibBuilder.loadTexts: vrIpBgpImportNetRowStatusTable.setStatus('mandatory')
vrIpBgpImportNetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpImportIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpImportNetIndex"))
if mibBuilder.loadTexts: vrIpBgpImportNetRowStatusEntry.setStatus('mandatory')
vrIpBgpImportNetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpImportNetRowStatus.setStatus('mandatory')
vrIpBgpImportNetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpImportNetComponentName.setStatus('mandatory')
vrIpBgpImportNetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpImportNetStorageType.setStatus('mandatory')
vrIpBgpImportNetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vrIpBgpImportNetIndex.setStatus('mandatory')
vrIpBgpImportNetProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 2, 10), )
if mibBuilder.loadTexts: vrIpBgpImportNetProvTable.setStatus('mandatory')
vrIpBgpImportNetProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpImportIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpImportNetIndex"))
if mibBuilder.loadTexts: vrIpBgpImportNetProvEntry.setStatus('mandatory')
vrIpBgpImportNetPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 2, 10, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpImportNetPrefix.setStatus('mandatory')
vrIpBgpImportNetLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 3, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpImportNetLength.setStatus('mandatory')
vrIpBgpExport = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4))
vrIpBgpExportRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 1), )
if mibBuilder.loadTexts: vrIpBgpExportRowStatusTable.setStatus('mandatory')
vrIpBgpExportRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpExportIndex"))
if mibBuilder.loadTexts: vrIpBgpExportRowStatusEntry.setStatus('mandatory')
vrIpBgpExportRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportRowStatus.setStatus('mandatory')
vrIpBgpExportComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpExportComponentName.setStatus('mandatory')
vrIpBgpExportStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpExportStorageType.setStatus('mandatory')
vrIpBgpExportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vrIpBgpExportIndex.setStatus('mandatory')
vrIpBgpExportProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 10), )
if mibBuilder.loadTexts: vrIpBgpExportProvTable.setStatus('mandatory')
vrIpBgpExportProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpExportIndex"))
if mibBuilder.loadTexts: vrIpBgpExportProvEntry.setStatus('mandatory')
vrIpBgpExportPeerAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportPeerAs.setStatus('mandatory')
vrIpBgpExportPeerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 10, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportPeerIpAddress.setStatus('mandatory')
vrIpBgpExportProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("all", 1), ("egp", 2), ("rip", 3), ("ospfInternal", 4), ("ospfExternal", 5), ("staticLocal", 6), ("staticRemote", 7), ("bgpInternal", 8), ("bgpExternal", 9))).clone('all')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportProtocol.setStatus('mandatory')
vrIpBgpExportEgpAsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportEgpAsId.setStatus('mandatory')
vrIpBgpExportBgpAsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportBgpAsId.setStatus('mandatory')
vrIpBgpExportOspfTag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 10, 1, 6), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(4294967295)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportOspfTag.setStatus('mandatory')
vrIpBgpExportRipInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 10, 1, 7), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportRipInterface.setStatus('mandatory')
vrIpBgpExportRipNeighbor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 10, 1, 8), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportRipNeighbor.setStatus('mandatory')
vrIpBgpExportAdvertiseStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("send", 1), ("block", 2))).clone('send')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportAdvertiseStatus.setStatus('mandatory')
vrIpBgpExportMultiExitDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportMultiExitDisc.setStatus('mandatory')
vrIpBgpExportSendMultiExitDiscToEbgp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportSendMultiExitDiscToEbgp.setStatus('mandatory')
vrIpBgpExportAsPathExpression = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 10, 1, 12), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportAsPathExpression.setStatus('mandatory')
vrIpBgpExportCommunityExpression = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 10, 1, 13), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportCommunityExpression.setStatus('mandatory')
vrIpBgpExportExpressPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 10, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportExpressPreference.setStatus('mandatory')
vrIpBgpExportSendCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 10, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportSendCommunity.setStatus('mandatory')
vrIpBgpExportInsertDummyAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 10, 1, 200), IntegerSequence()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportInsertDummyAs.setStatus('mandatory')
vrIpBgpExportNet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 2))
vrIpBgpExportNetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 2, 1), )
if mibBuilder.loadTexts: vrIpBgpExportNetRowStatusTable.setStatus('mandatory')
vrIpBgpExportNetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpExportIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpExportNetIndex"))
if mibBuilder.loadTexts: vrIpBgpExportNetRowStatusEntry.setStatus('mandatory')
vrIpBgpExportNetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportNetRowStatus.setStatus('mandatory')
vrIpBgpExportNetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpExportNetComponentName.setStatus('mandatory')
vrIpBgpExportNetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpExportNetStorageType.setStatus('mandatory')
vrIpBgpExportNetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vrIpBgpExportNetIndex.setStatus('mandatory')
vrIpBgpExportNetProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 2, 10), )
if mibBuilder.loadTexts: vrIpBgpExportNetProvTable.setStatus('mandatory')
vrIpBgpExportNetProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpExportIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpExportNetIndex"))
if mibBuilder.loadTexts: vrIpBgpExportNetProvEntry.setStatus('mandatory')
vrIpBgpExportNetPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 2, 10, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportNetPrefix.setStatus('mandatory')
vrIpBgpExportNetLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 4, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpExportNetLength.setStatus('mandatory')
vrIpBgpAs = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 5))
vrIpBgpAsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 5, 1), )
if mibBuilder.loadTexts: vrIpBgpAsRowStatusTable.setStatus('mandatory')
vrIpBgpAsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 5, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpAsIndex"))
if mibBuilder.loadTexts: vrIpBgpAsRowStatusEntry.setStatus('mandatory')
vrIpBgpAsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpAsRowStatus.setStatus('mandatory')
vrIpBgpAsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpAsComponentName.setStatus('mandatory')
vrIpBgpAsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpAsStorageType.setStatus('mandatory')
vrIpBgpAsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vrIpBgpAsIndex.setStatus('mandatory')
vrIpBgpAsProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 5, 10), )
if mibBuilder.loadTexts: vrIpBgpAsProvTable.setStatus('mandatory')
vrIpBgpAsProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 5, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpAsIndex"))
if mibBuilder.loadTexts: vrIpBgpAsProvEntry.setStatus('mandatory')
vrIpBgpAsWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 5, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpAsWeight.setStatus('mandatory')
vrIpBgpAggregate = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6))
vrIpBgpAggregateRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 1), )
if mibBuilder.loadTexts: vrIpBgpAggregateRowStatusTable.setStatus('mandatory')
vrIpBgpAggregateRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpAggregatePrefixIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpAggregateLengthIndex"))
if mibBuilder.loadTexts: vrIpBgpAggregateRowStatusEntry.setStatus('mandatory')
vrIpBgpAggregateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpAggregateRowStatus.setStatus('mandatory')
vrIpBgpAggregateComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpAggregateComponentName.setStatus('mandatory')
vrIpBgpAggregateStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpAggregateStorageType.setStatus('mandatory')
vrIpBgpAggregatePrefixIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: vrIpBgpAggregatePrefixIndex.setStatus('mandatory')
vrIpBgpAggregateLengthIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)))
if mibBuilder.loadTexts: vrIpBgpAggregateLengthIndex.setStatus('mandatory')
vrIpBgpAggregateNet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 2))
vrIpBgpAggregateNetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 2, 1), )
if mibBuilder.loadTexts: vrIpBgpAggregateNetRowStatusTable.setStatus('mandatory')
vrIpBgpAggregateNetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpAggregatePrefixIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpAggregateLengthIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpAggregateNetIndex"))
if mibBuilder.loadTexts: vrIpBgpAggregateNetRowStatusEntry.setStatus('mandatory')
vrIpBgpAggregateNetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpAggregateNetRowStatus.setStatus('mandatory')
vrIpBgpAggregateNetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpAggregateNetComponentName.setStatus('mandatory')
vrIpBgpAggregateNetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpAggregateNetStorageType.setStatus('mandatory')
vrIpBgpAggregateNetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: vrIpBgpAggregateNetIndex.setStatus('mandatory')
vrIpBgpAggregateNetProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 2, 10), )
if mibBuilder.loadTexts: vrIpBgpAggregateNetProvTable.setStatus('mandatory')
vrIpBgpAggregateNetProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpAggregatePrefixIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpAggregateLengthIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpAggregateNetIndex"))
if mibBuilder.loadTexts: vrIpBgpAggregateNetProvEntry.setStatus('mandatory')
vrIpBgpAggregateNetPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 2, 10, 1, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpAggregateNetPrefix.setStatus('mandatory')
vrIpBgpAggregateNetLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpAggregateNetLength.setStatus('mandatory')
vrIpBgpAggregateNetProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("all", 1), ("egp", 2), ("rip", 3), ("ospfInternal", 4), ("ospfExternal", 5), ("staticLocal", 6), ("staticRemote", 7), ("bgpInternal", 8), ("bgpExternal", 9))).clone('all')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpAggregateNetProtocol.setStatus('mandatory')
vrIpBgpAggregateNetEgpAsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpAggregateNetEgpAsId.setStatus('mandatory')
vrIpBgpAggregateNetBgpAsId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpAggregateNetBgpAsId.setStatus('mandatory')
vrIpBgpAggregateNetOspfTag = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 2, 10, 1, 6), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(4294967295)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpAggregateNetOspfTag.setStatus('mandatory')
vrIpBgpAggregateNetRipInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 2, 10, 1, 7), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpAggregateNetRipInterface.setStatus('mandatory')
vrIpBgpAggregateNetAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 6, 2, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("aggregate", 1), ("advertise", 2))).clone('aggregate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrIpBgpAggregateNetAction.setStatus('mandatory')
vrIpBgpIndb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7))
vrIpBgpIndbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 1), )
if mibBuilder.loadTexts: vrIpBgpIndbRowStatusTable.setStatus('mandatory')
vrIpBgpIndbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndbPrefixIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndbLengthIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndbPeerIndex"))
if mibBuilder.loadTexts: vrIpBgpIndbRowStatusEntry.setStatus('mandatory')
vrIpBgpIndbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpIndbRowStatus.setStatus('mandatory')
vrIpBgpIndbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpIndbComponentName.setStatus('mandatory')
vrIpBgpIndbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpIndbStorageType.setStatus('mandatory')
vrIpBgpIndbPrefixIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: vrIpBgpIndbPrefixIndex.setStatus('mandatory')
vrIpBgpIndbLengthIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)))
if mibBuilder.loadTexts: vrIpBgpIndbLengthIndex.setStatus('mandatory')
vrIpBgpIndbPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 1, 1, 12), IpAddress())
if mibBuilder.loadTexts: vrIpBgpIndbPeerIndex.setStatus('mandatory')
vrIpBgpIndbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 10), )
if mibBuilder.loadTexts: vrIpBgpIndbOperTable.setStatus('mandatory')
vrIpBgpIndbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndbPrefixIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndbLengthIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndbPeerIndex"))
if mibBuilder.loadTexts: vrIpBgpIndbOperEntry.setStatus('mandatory')
vrIpBgpIndbOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("igp", 1), ("egp", 2), ("incomplete", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpIndbOrigin.setStatus('mandatory')
vrIpBgpIndbInLocaldb = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpIndbInLocaldb.setStatus('mandatory')
vrIpBgpIndbNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 10, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpIndbNextHop.setStatus('mandatory')
vrIpBgpIndbLocalPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpIndbLocalPreference.setStatus('mandatory')
vrIpBgpIndbCalcLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpIndbCalcLocalPref.setStatus('mandatory')
vrIpBgpIndbMultiExitDiscriminator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpIndbMultiExitDiscriminator.setStatus('mandatory')
vrIpBgpIndbAtomicAggregate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lessSpecificRouteNotSelected", 1), ("lessSpecificRouteSelected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpIndbAtomicAggregate.setStatus('mandatory')
vrIpBgpIndbAggregatorAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpIndbAggregatorAs.setStatus('mandatory')
vrIpBgpIndbAggregatorAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 10, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpIndbAggregatorAddr.setStatus('mandatory')
vrIpBgpIndbAsPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 10, 1, 13), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(2, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpIndbAsPath.setStatus('mandatory')
vrIpBgpIndbUnknownAttributes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 10, 1, 14), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpIndbUnknownAttributes.setStatus('mandatory')
vrIpBgpIndbCommunityPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 10, 1, 15), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpIndbCommunityPath.setStatus('mandatory')
vrIpBgpIndbAsOriginatorId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 10, 1, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpIndbAsOriginatorId.setStatus('mandatory')
vrIpBgpIndbRrClusterListTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 798), )
if mibBuilder.loadTexts: vrIpBgpIndbRrClusterListTable.setStatus('mandatory')
vrIpBgpIndbRrClusterListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 798, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndbPrefixIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndbLengthIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndbPeerIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndbRrClusterListValue"))
if mibBuilder.loadTexts: vrIpBgpIndbRrClusterListEntry.setStatus('mandatory')
vrIpBgpIndbRrClusterListValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 7, 798, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpIndbRrClusterListValue.setStatus('mandatory')
vrIpBgpLocaldb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8))
vrIpBgpLocaldbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 1), )
if mibBuilder.loadTexts: vrIpBgpLocaldbRowStatusTable.setStatus('mandatory')
vrIpBgpLocaldbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpLocaldbPrefixIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpLocaldbLengthIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpLocaldbPeerIndex"))
if mibBuilder.loadTexts: vrIpBgpLocaldbRowStatusEntry.setStatus('mandatory')
vrIpBgpLocaldbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpLocaldbRowStatus.setStatus('mandatory')
vrIpBgpLocaldbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpLocaldbComponentName.setStatus('mandatory')
vrIpBgpLocaldbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpLocaldbStorageType.setStatus('mandatory')
vrIpBgpLocaldbPrefixIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: vrIpBgpLocaldbPrefixIndex.setStatus('mandatory')
vrIpBgpLocaldbLengthIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)))
if mibBuilder.loadTexts: vrIpBgpLocaldbLengthIndex.setStatus('mandatory')
vrIpBgpLocaldbPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 1, 1, 12), IpAddress())
if mibBuilder.loadTexts: vrIpBgpLocaldbPeerIndex.setStatus('mandatory')
vrIpBgpLocaldbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 10), )
if mibBuilder.loadTexts: vrIpBgpLocaldbOperTable.setStatus('mandatory')
vrIpBgpLocaldbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpLocaldbPrefixIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpLocaldbLengthIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpLocaldbPeerIndex"))
if mibBuilder.loadTexts: vrIpBgpLocaldbOperEntry.setStatus('mandatory')
vrIpBgpLocaldbOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("igp", 1), ("egp", 2), ("incomplete", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpLocaldbOrigin.setStatus('mandatory')
vrIpBgpLocaldbNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 10, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpLocaldbNextHop.setStatus('mandatory')
vrIpBgpLocaldbLocalPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpLocaldbLocalPreference.setStatus('mandatory')
vrIpBgpLocaldbMultiExitDiscriminator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpLocaldbMultiExitDiscriminator.setStatus('mandatory')
vrIpBgpLocaldbAtomicAggregate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lessSpecificRouteNotSelected", 1), ("lessSpecificRouteSelected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpLocaldbAtomicAggregate.setStatus('mandatory')
vrIpBgpLocaldbAggregatorAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpLocaldbAggregatorAs.setStatus('mandatory')
vrIpBgpLocaldbAggregatorAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 10, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpLocaldbAggregatorAddr.setStatus('mandatory')
vrIpBgpLocaldbAsPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 10, 1, 11), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(2, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpLocaldbAsPath.setStatus('mandatory')
vrIpBgpLocaldbUnknownAttributes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 10, 1, 12), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpLocaldbUnknownAttributes.setStatus('mandatory')
vrIpBgpLocaldbCommunityPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 10, 1, 13), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpLocaldbCommunityPath.setStatus('mandatory')
vrIpBgpLocaldbAsOriginatorId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 10, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpLocaldbAsOriginatorId.setStatus('mandatory')
vrIpBgpLocaldbRrClusterListTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 797), )
if mibBuilder.loadTexts: vrIpBgpLocaldbRrClusterListTable.setStatus('mandatory')
vrIpBgpLocaldbRrClusterListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 797, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpLocaldbPrefixIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpLocaldbLengthIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpLocaldbPeerIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpLocaldbRrClusterListValue"))
if mibBuilder.loadTexts: vrIpBgpLocaldbRrClusterListEntry.setStatus('mandatory')
vrIpBgpLocaldbRrClusterListValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 8, 797, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpLocaldbRrClusterListValue.setStatus('mandatory')
vrIpBgpOutdb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9))
vrIpBgpOutdbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 1), )
if mibBuilder.loadTexts: vrIpBgpOutdbRowStatusTable.setStatus('mandatory')
vrIpBgpOutdbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpOutdbPrefixIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpOutdbLengthIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpOutdbPeerIndex"))
if mibBuilder.loadTexts: vrIpBgpOutdbRowStatusEntry.setStatus('mandatory')
vrIpBgpOutdbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOutdbRowStatus.setStatus('mandatory')
vrIpBgpOutdbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOutdbComponentName.setStatus('mandatory')
vrIpBgpOutdbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOutdbStorageType.setStatus('mandatory')
vrIpBgpOutdbPrefixIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: vrIpBgpOutdbPrefixIndex.setStatus('mandatory')
vrIpBgpOutdbLengthIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)))
if mibBuilder.loadTexts: vrIpBgpOutdbLengthIndex.setStatus('mandatory')
vrIpBgpOutdbPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 1, 1, 12), IpAddress())
if mibBuilder.loadTexts: vrIpBgpOutdbPeerIndex.setStatus('mandatory')
vrIpBgpOutdbOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 10), )
if mibBuilder.loadTexts: vrIpBgpOutdbOperTable.setStatus('mandatory')
vrIpBgpOutdbOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpOutdbPrefixIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpOutdbLengthIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpOutdbPeerIndex"))
if mibBuilder.loadTexts: vrIpBgpOutdbOperEntry.setStatus('mandatory')
vrIpBgpOutdbOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("igp", 1), ("egp", 2), ("incomplete", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOutdbOrigin.setStatus('mandatory')
vrIpBgpOutdbNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 10, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOutdbNextHop.setStatus('mandatory')
vrIpBgpOutdbLocalPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOutdbLocalPreference.setStatus('mandatory')
vrIpBgpOutdbMultiExitDiscriminator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOutdbMultiExitDiscriminator.setStatus('mandatory')
vrIpBgpOutdbAtomicAggregate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lessSpecificRouteNotSelected", 1), ("lessSpecificRouteSelected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOutdbAtomicAggregate.setStatus('mandatory')
vrIpBgpOutdbAggregatorAs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOutdbAggregatorAs.setStatus('mandatory')
vrIpBgpOutdbAggregatorAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 10, 1, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOutdbAggregatorAddr.setStatus('mandatory')
vrIpBgpOutdbAsPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 10, 1, 11), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(2, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOutdbAsPath.setStatus('mandatory')
vrIpBgpOutdbUnknownAttributes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 10, 1, 12), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOutdbUnknownAttributes.setStatus('mandatory')
vrIpBgpOutdbCommunityPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 10, 1, 13), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOutdbCommunityPath.setStatus('mandatory')
vrIpBgpOutdbAsOriginatorId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 10, 1, 14), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOutdbAsOriginatorId.setStatus('mandatory')
vrIpBgpOutdbRrClusterListTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 799), )
if mibBuilder.loadTexts: vrIpBgpOutdbRrClusterListTable.setStatus('mandatory')
vrIpBgpOutdbRrClusterListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 799, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-VirtualRouterMIB", "vrIndex"), (0, "Nortel-Magellan-Passport-IpMIB", "vrIpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpOutdbPrefixIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpOutdbLengthIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpOutdbPeerIndex"), (0, "Nortel-Magellan-Passport-BgpMIB", "vrIpBgpOutdbRrClusterListValue"))
if mibBuilder.loadTexts: vrIpBgpOutdbRrClusterListEntry.setStatus('mandatory')
vrIpBgpOutdbRrClusterListValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 100, 6, 21, 9, 799, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrIpBgpOutdbRrClusterListValue.setStatus('mandatory')
bgpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 141, 1))
bgpGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 141, 1, 5))
bgpGroupBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 141, 1, 5, 2))
bgpGroupBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 141, 1, 5, 2, 2))
bgpCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 141, 3))
bgpCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 141, 3, 5))
bgpCapabilitiesBE01 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 141, 3, 5, 2))
bgpCapabilitiesBE01A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 141, 3, 5, 2, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-BgpMIB", vrIpBgpAggregateNetRowStatusTable=vrIpBgpAggregateNetRowStatusTable, vrIpBgpPeerBgpIdentifier=vrIpBgpPeerBgpIdentifier, vrIpBgpProvTable=vrIpBgpProvTable, vrIpBgpPeerRowStatus=vrIpBgpPeerRowStatus, vrIpBgpOutErrorMsgs=vrIpBgpOutErrorMsgs, vrIpBgpExportNetIndex=vrIpBgpExportNetIndex, vrIpBgpOutdbRrClusterListTable=vrIpBgpOutdbRrClusterListTable, bgpCapabilitiesBE01A=bgpCapabilitiesBE01A, vrIpBgpPeerAdminState=vrIpBgpPeerAdminState, vrIpBgpAggregateNetOspfTag=vrIpBgpAggregateNetOspfTag, vrIpBgpIndbOperTable=vrIpBgpIndbOperTable, vrIpBgpAggregateNetStorageType=vrIpBgpAggregateNetStorageType, vrIpBgpAggregateNetLength=vrIpBgpAggregateNetLength, vrIpBgpPeerKeepAliveNegotiated=vrIpBgpPeerKeepAliveNegotiated, vrIpBgpImportUsageFlag=vrIpBgpImportUsageFlag, vrIpBgpImportLocalPreference=vrIpBgpImportLocalPreference, vrIpBgpExportAdvertiseStatus=vrIpBgpExportAdvertiseStatus, vrIpBgpIndbPeerIndex=vrIpBgpIndbPeerIndex, vrIpBgpOutdbRowStatusEntry=vrIpBgpOutdbRowStatusEntry, vrIpBgpImportOriginProtocol=vrIpBgpImportOriginProtocol, vrIpBgpImportNetStorageType=vrIpBgpImportNetStorageType, vrIpBgpLocaldbComponentName=vrIpBgpLocaldbComponentName, vrIpBgpLocaldbOperTable=vrIpBgpLocaldbOperTable, vrIpBgpImport=vrIpBgpImport, vrIpBgpExportRowStatusTable=vrIpBgpExportRowStatusTable, vrIpBgpOutdbNextHop=vrIpBgpOutdbNextHop, vrIpBgpPeerPeerAddressIndex=vrIpBgpPeerPeerAddressIndex, vrIpBgpIndbCommunityPath=vrIpBgpIndbCommunityPath, vrIpBgpPeerLocalAddressUsed=vrIpBgpPeerLocalAddressUsed, vrIpBgpStateTable=vrIpBgpStateTable, vrIpBgpPeerOperationalState=vrIpBgpPeerOperationalState, vrIpBgpAdminControlEntry=vrIpBgpAdminControlEntry, bgpGroupBE=bgpGroupBE, vrIpBgpSnmpAdminStatus=vrIpBgpSnmpAdminStatus, vrIpBgpOutdbRrClusterListValue=vrIpBgpOutdbRrClusterListValue, vrIpBgpAs=vrIpBgpAs, vrIpBgpImportNetRowStatusEntry=vrIpBgpImportNetRowStatusEntry, vrIpBgpLocaldbPrefixIndex=vrIpBgpLocaldbPrefixIndex, vrIpBgpLocaldbAggregatorAddr=vrIpBgpLocaldbAggregatorAddr, vrIpBgpOperStatusEntry=vrIpBgpOperStatusEntry, vrIpBgpRouteReflector=vrIpBgpRouteReflector, vrIpBgpExportNetRowStatusTable=vrIpBgpExportNetRowStatusTable, vrIpBgpLocaldbPeerIndex=vrIpBgpLocaldbPeerIndex, vrIpBgpRouteThrottleLimit=vrIpBgpRouteThrottleLimit, vrIpBgpExportOspfTag=vrIpBgpExportOspfTag, vrIpBgpAsWeight=vrIpBgpAsWeight, vrIpBgpPeerPeerAs=vrIpBgpPeerPeerAs, vrIpBgpOutdbRowStatusTable=vrIpBgpOutdbRowStatusTable, vrIpBgpAsStorageType=vrIpBgpAsStorageType, vrIpBgpExportNetStorageType=vrIpBgpExportNetStorageType, vrIpBgpAggregateNetProvEntry=vrIpBgpAggregateNetProvEntry, vrIpBgpIndbAggregatorAs=vrIpBgpIndbAggregatorAs, vrIpBgpAsRowStatus=vrIpBgpAsRowStatus, vrIpBgpIndbAtomicAggregate=vrIpBgpIndbAtomicAggregate, vrIpBgpPeerOutErrorMsgs=vrIpBgpPeerOutErrorMsgs, vrIpBgpAggregateRowStatusTable=vrIpBgpAggregateRowStatusTable, vrIpBgpLocaldbMultiExitDiscriminator=vrIpBgpLocaldbMultiExitDiscriminator, bgpGroupBE01=bgpGroupBE01, vrIpBgpPeerStateTable=vrIpBgpPeerStateTable, vrIpBgpPeerProvTable=vrIpBgpPeerProvTable, vrIpBgpImportPeerIpAddress=vrIpBgpImportPeerIpAddress, vrIpBgpIndbInLocaldb=vrIpBgpIndbInLocaldb, vrIpBgpProvEntry=vrIpBgpProvEntry, vrIpBgpLocaldbLocalPreference=vrIpBgpLocaldbLocalPreference, vrIpBgpImportComponentName=vrIpBgpImportComponentName, vrIpBgpRouteReflectorCluster=vrIpBgpRouteReflectorCluster, vrIpBgpLocaldbNextHop=vrIpBgpLocaldbNextHop, vrIpBgpOperEntry=vrIpBgpOperEntry, vrIpBgpLocaldbStorageType=vrIpBgpLocaldbStorageType, vrIpBgpLocaldbAsPath=vrIpBgpLocaldbAsPath, vrIpBgpOutDiscards=vrIpBgpOutDiscards, vrIpBgpImportAppendCommunity=vrIpBgpImportAppendCommunity, vrIpBgpIndbSize=vrIpBgpIndbSize, vrIpBgpIndbRrClusterListEntry=vrIpBgpIndbRrClusterListEntry, vrIpBgpIndbNextHop=vrIpBgpIndbNextHop, vrIpBgpImportNetRowStatus=vrIpBgpImportNetRowStatus, vrIpBgpExportExpressPreference=vrIpBgpExportExpressPreference, vrIpBgpAdminState=vrIpBgpAdminState, vrIpBgpOperationalState=vrIpBgpOperationalState, vrIpBgpExportProvEntry=vrIpBgpExportProvEntry, vrIpBgpPeerHoldTimeConfigured=vrIpBgpPeerHoldTimeConfigured, vrIpBgpOutdbStorageType=vrIpBgpOutdbStorageType, vrIpBgpPeerInRoutes=vrIpBgpPeerInRoutes, vrIpBgpPeerConnectionEstablishedTime=vrIpBgpPeerConnectionEstablishedTime, vrIpBgpImportExpressPreference=vrIpBgpImportExpressPreference, vrIpBgpInErrors=vrIpBgpInErrors, vrIpBgpLocaldbLengthIndex=vrIpBgpLocaldbLengthIndex, vrIpBgpAggregateNetProtocol=vrIpBgpAggregateNetProtocol, vrIpBgpIndbUnknownAttributes=vrIpBgpIndbUnknownAttributes, vrIpBgpOutdbRrClusterListEntry=vrIpBgpOutdbRrClusterListEntry, vrIpBgpAggregateComponentName=vrIpBgpAggregateComponentName, vrIpBgpAsIndex=vrIpBgpAsIndex, vrIpBgpExportRowStatusEntry=vrIpBgpExportRowStatusEntry, vrIpBgpAggregateNetIndex=vrIpBgpAggregateNetIndex, vrIpBgpAsRowStatusTable=vrIpBgpAsRowStatusTable, vrIpBgpOutdb=vrIpBgpOutdb, vrIpBgpExportSendMultiExitDiscToEbgp=vrIpBgpExportSendMultiExitDiscToEbgp, vrIpBgpPeerOutMsgs=vrIpBgpPeerOutMsgs, vrIpBgpLocaldbAsOriginatorId=vrIpBgpLocaldbAsOriginatorId, vrIpBgpDefaultMultiExitDisc=vrIpBgpDefaultMultiExitDisc, vrIpBgp=vrIpBgp, vrIpBgpOutdbLengthIndex=vrIpBgpOutdbLengthIndex, vrIpBgpImportStorageType=vrIpBgpImportStorageType, vrIpBgpAggregateNetAction=vrIpBgpAggregateNetAction, vrIpBgpLocaldbRowStatusTable=vrIpBgpLocaldbRowStatusTable, vrIpBgpExportNetRowStatusEntry=vrIpBgpExportNetRowStatusEntry, vrIpBgpPeerRowStatusTable=vrIpBgpPeerRowStatusTable, vrIpBgpLocaldbUnknownAttributes=vrIpBgpLocaldbUnknownAttributes, vrIpBgpLocaldb=vrIpBgpLocaldb, vrIpBgpOutdbAsOriginatorId=vrIpBgpOutdbAsOriginatorId, vrIpBgpAsProvEntry=vrIpBgpAsProvEntry, vrIpBgpExportRowStatus=vrIpBgpExportRowStatus, vrIpBgpOutdbAggregatorAs=vrIpBgpOutdbAggregatorAs, vrIpBgpLocaldbRowStatus=vrIpBgpLocaldbRowStatus, bgpMIB=bgpMIB, vrIpBgpIndbAggregatorAddr=vrIpBgpIndbAggregatorAddr, vrIpBgpLocaldbRrClusterListTable=vrIpBgpLocaldbRrClusterListTable, vrIpBgpImportOriginAs=vrIpBgpImportOriginAs, vrIpBgpExportNetProvEntry=vrIpBgpExportNetProvEntry, vrIpBgpExportStorageType=vrIpBgpExportStorageType, vrIpBgpIndbOperEntry=vrIpBgpIndbOperEntry, vrIpBgpPeerDefaultInAggMed=vrIpBgpPeerDefaultInAggMed, vrIpBgpUsageState=vrIpBgpUsageState, vrIpBgpLocaldbRrClusterListEntry=vrIpBgpLocaldbRrClusterListEntry, vrIpBgpStorageType=vrIpBgpStorageType, vrIpBgpIndbRowStatusEntry=vrIpBgpIndbRowStatusEntry, vrIpBgpPeerMinAsOrigTime=vrIpBgpPeerMinAsOrigTime, vrIpBgpPeerVersionNegotiated=vrIpBgpPeerVersionNegotiated, vrIpBgpPeerOutUpdates=vrIpBgpPeerOutUpdates, vrIpBgpPeerOperEntry=vrIpBgpPeerOperEntry, vrIpBgpRowStatus=vrIpBgpRowStatus, vrIpBgpImportRowStatusTable=vrIpBgpImportRowStatusTable, vrIpBgpPeerUsageState=vrIpBgpPeerUsageState, vrIpBgpIndbComponentName=vrIpBgpIndbComponentName, vrIpBgpIndbAsPath=vrIpBgpIndbAsPath, vrIpBgpOutdbRowStatus=vrIpBgpOutdbRowStatus, vrIpBgpAggregateNetProvTable=vrIpBgpAggregateNetProvTable, bgpCapabilitiesBE01=bgpCapabilitiesBE01, vrIpBgpRouteThrottleInter=vrIpBgpRouteThrottleInter, vrIpBgpPeerIsRouteReflectorClient=vrIpBgpPeerIsRouteReflectorClient, vrIpBgpImportPeerAs=vrIpBgpImportPeerAs, vrIpBgpAggregate=vrIpBgpAggregate, vrIpBgpPeerStateEntry=vrIpBgpPeerStateEntry, vrIpBgpOutdbLocalPreference=vrIpBgpOutdbLocalPreference, vrIpBgpLocalAs=vrIpBgpLocalAs, vrIpBgpOutdbOperTable=vrIpBgpOutdbOperTable, vrIpBgpBgpIdentifier=vrIpBgpBgpIdentifier, vrIpBgpPeerRemotePort=vrIpBgpPeerRemotePort, vrIpBgpAggregateRowStatusEntry=vrIpBgpAggregateRowStatusEntry, vrIpBgpAggregateNetRowStatusEntry=vrIpBgpAggregateNetRowStatusEntry, vrIpBgpOutdbPeerIndex=vrIpBgpOutdbPeerIndex, vrIpBgpPeer=vrIpBgpPeer, vrIpBgpPeerOutDiscards=vrIpBgpPeerOutDiscards, vrIpBgpExportCommunityExpression=vrIpBgpExportCommunityExpression, vrIpBgpIndbRrClusterListValue=vrIpBgpIndbRrClusterListValue, vrIpBgpLocaldbAggregatorAs=vrIpBgpLocaldbAggregatorAs, vrIpBgpOutMsgs=vrIpBgpOutMsgs, vrIpBgpAggregateNetRowStatus=vrIpBgpAggregateNetRowStatus, vrIpBgpPeerInUpdates=vrIpBgpPeerInUpdates, vrIpBgpOperStatusTable=vrIpBgpOperStatusTable, vrIpBgpIndbCalcLocalPref=vrIpBgpIndbCalcLocalPref, vrIpBgpAsProvTable=vrIpBgpAsProvTable, vrIpBgpOutdbComponentName=vrIpBgpOutdbComponentName, vrIpBgpOutdbMultiExitDiscriminator=vrIpBgpOutdbMultiExitDiscriminator, vrIpBgpTableVersion=vrIpBgpTableVersion, vrIpBgpImportNetRowStatusTable=vrIpBgpImportNetRowStatusTable, vrIpBgpExportNet=vrIpBgpExportNet, bgpGroup=bgpGroup, vrIpBgpAggregateNetBgpAsId=vrIpBgpAggregateNetBgpAsId, vrIpBgpAsComponentName=vrIpBgpAsComponentName, vrIpBgpPeerComponentName=vrIpBgpPeerComponentName, vrIpBgpAggregatePrefixIndex=vrIpBgpAggregatePrefixIndex, vrIpBgpImportAsPathExpression=vrIpBgpImportAsPathExpression, vrIpBgpLocaldbOrigin=vrIpBgpLocaldbOrigin, vrIpBgpPeerInUpdateElapsedTime=vrIpBgpPeerInUpdateElapsedTime, vrIpBgpOutdbAsPath=vrIpBgpOutdbAsPath, vrIpBgpExportPeerAs=vrIpBgpExportPeerAs, vrIpBgpPeerInErrors=vrIpBgpPeerInErrors, vrIpBgpExportRipNeighbor=vrIpBgpExportRipNeighbor, vrIpBgpIndbRowStatusTable=vrIpBgpIndbRowStatusTable, vrIpBgpIndbOrigin=vrIpBgpIndbOrigin, vrIpBgpPeerLocalPort=vrIpBgpPeerLocalPort, vrIpBgpIndex=vrIpBgpIndex, vrIpBgpImportRowStatus=vrIpBgpImportRowStatus, vrIpBgpPeerOperTable=vrIpBgpPeerOperTable, vrIpBgpAggregateStorageType=vrIpBgpAggregateStorageType, vrIpBgpImportNet=vrIpBgpImportNet, vrIpBgpOutdbAtomicAggregate=vrIpBgpOutdbAtomicAggregate, vrIpBgpOutdbAggregatorAddr=vrIpBgpOutdbAggregatorAddr, vrIpBgpIndbStorageType=vrIpBgpIndbStorageType, vrIpBgpExportProvTable=vrIpBgpExportProvTable, vrIpBgpLocaldbRowStatusEntry=vrIpBgpLocaldbRowStatusEntry, vrIpBgpImportNetComponentName=vrIpBgpImportNetComponentName, vrIpBgpExportNetPrefix=vrIpBgpExportNetPrefix, vrIpBgpAdminControlTable=vrIpBgpAdminControlTable, vrIpBgpExport=vrIpBgpExport, vrIpBgpExportIndex=vrIpBgpExportIndex, vrIpBgpDefaultLocalPreference=vrIpBgpDefaultLocalPreference, vrIpBgpAggregateNetEgpAsId=vrIpBgpAggregateNetEgpAsId, vrIpBgpIndbLocalPreference=vrIpBgpIndbLocalPreference, vrIpBgpImportNetPrefix=vrIpBgpImportNetPrefix, vrIpBgpAggregateNetPrefix=vrIpBgpAggregateNetPrefix, vrIpBgpPeerStorageType=vrIpBgpPeerStorageType, vrIpBgpImportIndex=vrIpBgpImportIndex, vrIpBgpImportNetProvTable=vrIpBgpImportNetProvTable, vrIpBgpLocaldbOperEntry=vrIpBgpLocaldbOperEntry, vrIpBgpImportNetIndex=vrIpBgpImportNetIndex, vrIpBgpInMsgs=vrIpBgpInMsgs, vrIpBgpExportBgpAsId=vrIpBgpExportBgpAsId, vrIpBgpImportProvEntry=vrIpBgpImportProvEntry, vrIpBgpOutdbOperEntry=vrIpBgpOutdbOperEntry, vrIpBgpExportProtocol=vrIpBgpExportProtocol, vrIpBgpExportAsPathExpression=vrIpBgpExportAsPathExpression, vrIpBgpExportSendCommunity=vrIpBgpExportSendCommunity, vrIpBgpOutdbUnknownAttributes=vrIpBgpOutdbUnknownAttributes, vrIpBgpComponentName=vrIpBgpComponentName, vrIpBgpLocaldbCommunityPath=vrIpBgpLocaldbCommunityPath, bgpCapabilitiesBE=bgpCapabilitiesBE, vrIpBgpIndb=vrIpBgpIndb, vrIpBgpLocaldbRrClusterListValue=vrIpBgpLocaldbRrClusterListValue, vrIpBgpExportNetComponentName=vrIpBgpExportNetComponentName, vrIpBgpIndbMultiExitDiscriminator=vrIpBgpIndbMultiExitDiscriminator, vrIpBgpPeerHoldTimeNegotiated=vrIpBgpPeerHoldTimeNegotiated, vrIpBgpRowStatusTable=vrIpBgpRowStatusTable, vrIpBgpIndbAsOriginatorId=vrIpBgpIndbAsOriginatorId, vrIpBgpPeerConnectionState=vrIpBgpPeerConnectionState, vrIpBgpPeerProvEntry=vrIpBgpPeerProvEntry, vrIpBgpPeerLocalAddressConfigured=vrIpBgpPeerLocalAddressConfigured, vrIpBgpExportComponentName=vrIpBgpExportComponentName, vrIpBgpExportMultiExitDisc=vrIpBgpExportMultiExitDisc, vrIpBgpExportNetRowStatus=vrIpBgpExportNetRowStatus, vrIpBgpPeerInMsgs=vrIpBgpPeerInMsgs, vrIpBgpAggregateNetRipInterface=vrIpBgpAggregateNetRipInterface, vrIpBgpAggregateNet=vrIpBgpAggregateNet, vrIpBgpPeerLastError=vrIpBgpPeerLastError, vrIpBgpPeerInErrorMsgs=vrIpBgpPeerInErrorMsgs, vrIpBgpIndbLengthIndex=vrIpBgpIndbLengthIndex, vrIpBgpIndbRrClusterListTable=vrIpBgpIndbRrClusterListTable, vrIpBgpOutdbPrefixIndex=vrIpBgpOutdbPrefixIndex, vrIpBgpLocaldbAtomicAggregate=vrIpBgpLocaldbAtomicAggregate, vrIpBgpOutdbOrigin=vrIpBgpOutdbOrigin, vrIpBgpExportNetLength=vrIpBgpExportNetLength, vrIpBgpPeerKeepAliveConfigured=vrIpBgpPeerKeepAliveConfigured, vrIpBgpPeerConnectionEstablishedTransitions=vrIpBgpPeerConnectionEstablishedTransitions, vrIpBgpImportProvTable=vrIpBgpImportProvTable, vrIpBgpExportEgpAsId=vrIpBgpExportEgpAsId, vrIpBgpImportPreferredOver=vrIpBgpImportPreferredOver, vrIpBgpExportInsertDummyAs=vrIpBgpExportInsertDummyAs, vrIpBgpPeerConnectRetryTime=vrIpBgpPeerConnectRetryTime, vrIpBgpImportNetLength=vrIpBgpImportNetLength, vrIpBgpAggregateLengthIndex=vrIpBgpAggregateLengthIndex, vrIpBgpImportCommunityExpression=vrIpBgpImportCommunityExpression, vrIpBgpOutdbCommunityPath=vrIpBgpOutdbCommunityPath, vrIpBgpPeerMinRouteAdvTime=vrIpBgpPeerMinRouteAdvTime)
mibBuilder.exportSymbols("Nortel-Magellan-Passport-BgpMIB", vrIpBgpAggregateRowStatus=vrIpBgpAggregateRowStatus, vrIpBgpIndbRowStatus=vrIpBgpIndbRowStatus, vrIpBgpImportRowStatusEntry=vrIpBgpImportRowStatusEntry, vrIpBgpRowStatusEntry=vrIpBgpRowStatusEntry, vrIpBgpImportNetProvEntry=vrIpBgpImportNetProvEntry, vrIpBgpStateEntry=vrIpBgpStateEntry, vrIpBgpOperTable=vrIpBgpOperTable, vrIpBgpInErrorMsgs=vrIpBgpInErrorMsgs, vrIpBgpExportPeerIpAddress=vrIpBgpExportPeerIpAddress, vrIpBgpPeerRowStatusEntry=vrIpBgpPeerRowStatusEntry, vrIpBgpExportNetProvTable=vrIpBgpExportNetProvTable, vrIpBgpAggregateNetComponentName=vrIpBgpAggregateNetComponentName, vrIpBgpIndbPrefixIndex=vrIpBgpIndbPrefixIndex, vrIpBgpSnmpOperStatus=vrIpBgpSnmpOperStatus, vrIpBgpExportRipInterface=vrIpBgpExportRipInterface, vrIpBgpAsRowStatusEntry=vrIpBgpAsRowStatusEntry, bgpCapabilities=bgpCapabilities, bgpGroupBE01A=bgpGroupBE01A)
