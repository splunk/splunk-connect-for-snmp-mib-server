#
# PySNMP MIB module HH3C-LswDHCP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-LswDHCP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:15:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
hh3clswCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3clswCommon")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Bits, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ModuleIdentity, MibIdentifier, NotificationType, TimeTicks, Integer32, Gauge32, Unsigned32, iso, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Bits", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ModuleIdentity", "MibIdentifier", "NotificationType", "TimeTicks", "Integer32", "Gauge32", "Unsigned32", "iso", "Counter64")
MacAddress, TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "DisplayString", "RowStatus")
hh3cLswDhcpMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8))
hh3cLswDhcpMib.setRevisions(('2001-06-29 00:00',))
if mibBuilder.loadTexts: hh3cLswDhcpMib.setLastUpdated('200106290000Z')
if mibBuilder.loadTexts: hh3cLswDhcpMib.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3cLswDhcpMibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1))
hh3cDhcpGroupTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1, 1), )
if mibBuilder.loadTexts: hh3cDhcpGroupTable.setStatus('current')
hh3cDhcpGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1, 1, 1), ).setIndexNames((0, "HH3C-LswDHCP-MIB", "hh3cDhcpGroupID"))
if mibBuilder.loadTexts: hh3cDhcpGroupEntry.setStatus('current')
hh3cDhcpGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 19))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDhcpGroupID.setStatus('current')
hh3cIpDhcpServerAddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIpDhcpServerAddress1.setStatus('current')
hh3cIpDhcpServerAddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cIpDhcpServerAddress2.setStatus('current')
hh3cDhcpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDhcpRowStatus.setStatus('current')
hh3cDhcpSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1, 2), )
if mibBuilder.loadTexts: hh3cDhcpSecurityTable.setStatus('current')
hh3cDhcpSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1, 2, 1), ).setIndexNames((0, "HH3C-LswDHCP-MIB", "hh3cDhcpClientIpAddress"))
if mibBuilder.loadTexts: hh3cDhcpSecurityEntry.setStatus('current')
hh3cDhcpClientIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDhcpClientIpAddress.setStatus('current')
hh3cDhcpClientMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1, 2, 1, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDhcpClientMacAddress.setStatus('current')
hh3cDhcpClientProperty = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDhcpClientProperty.setStatus('current')
hh3cDhcpClientRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDhcpClientRowStatus.setStatus('current')
hh3cDhcpToL3IfTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1, 3), )
if mibBuilder.loadTexts: hh3cDhcpToL3IfTable.setStatus('current')
hh3cDhcpToL3IfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1, 3, 1), ).setIndexNames((0, "HH3C-LswDHCP-MIB", "hh3cDhcpToL3VlanIfIndex"))
if mibBuilder.loadTexts: hh3cDhcpToL3IfEntry.setStatus('current')
hh3cDhcpToL3VlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDhcpToL3VlanIfIndex.setStatus('current')
hh3cDhcpToL3GroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 19))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDhcpToL3GroupId.setStatus('current')
hh3cDhcpToL3AddressCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cDhcpToL3AddressCheck.setStatus('current')
hh3cDhcpToL3RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 8, 35, 8, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cDhcpToL3RowStatus.setStatus('current')
mibBuilder.exportSymbols("HH3C-LswDHCP-MIB", hh3cIpDhcpServerAddress1=hh3cIpDhcpServerAddress1, hh3cDhcpGroupEntry=hh3cDhcpGroupEntry, hh3cDhcpToL3IfTable=hh3cDhcpToL3IfTable, hh3cLswDhcpMibObject=hh3cLswDhcpMibObject, hh3cDhcpToL3IfEntry=hh3cDhcpToL3IfEntry, PYSNMP_MODULE_ID=hh3cLswDhcpMib, hh3cDhcpSecurityEntry=hh3cDhcpSecurityEntry, hh3cDhcpClientIpAddress=hh3cDhcpClientIpAddress, hh3cDhcpSecurityTable=hh3cDhcpSecurityTable, hh3cDhcpToL3RowStatus=hh3cDhcpToL3RowStatus, hh3cDhcpGroupID=hh3cDhcpGroupID, hh3cDhcpToL3VlanIfIndex=hh3cDhcpToL3VlanIfIndex, hh3cDhcpRowStatus=hh3cDhcpRowStatus, hh3cIpDhcpServerAddress2=hh3cIpDhcpServerAddress2, hh3cDhcpClientRowStatus=hh3cDhcpClientRowStatus, hh3cDhcpGroupTable=hh3cDhcpGroupTable, hh3cDhcpToL3AddressCheck=hh3cDhcpToL3AddressCheck, hh3cDhcpToL3GroupId=hh3cDhcpToL3GroupId, hh3cDhcpClientMacAddress=hh3cDhcpClientMacAddress, hh3cDhcpClientProperty=hh3cDhcpClientProperty, hh3cLswDhcpMib=hh3cLswDhcpMib)
