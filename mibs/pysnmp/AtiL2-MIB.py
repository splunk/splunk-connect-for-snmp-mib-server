#
# PySNMP MIB module AtiL2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AtiL2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:17:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, IpAddress, enterprises, Unsigned32, ModuleIdentity, MibIdentifier, Bits, NotificationType, Gauge32, Counter64, Integer32, NotificationType, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "IpAddress", "enterprises", "Unsigned32", "ModuleIdentity", "MibIdentifier", "Bits", "NotificationType", "Gauge32", "Counter64", "Integer32", "NotificationType", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class BridgeId(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class Timeout(Integer32):
    pass

alliedTelesyn = MibIdentifier((1, 3, 6, 1, 4, 1, 207))
atiProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1))
swhub = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4))
at_8324 = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 37)).setLabel("at-8324")
at_8124XL_V2 = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 52)).setLabel("at-8124XL-V2")
at_8326GB = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 72)).setLabel("at-8326GB")
at_9410GB = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 73)).setLabel("at-9410GB")
at_8350GB = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 74)).setLabel("at-8350GB")
at_8316F = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 1, 4, 77)).setLabel("at-8316F")
mibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8))
atiL2Mib = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33))
atiL2GlobalGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 1))
atiL2IpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 2))
atiL2NMGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 3))
atiL2DHCPGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 4))
atiL2DeviceGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 5))
atiL2EthernetStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 6))
atiL2DevicePortConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 7))
atiL2VlanConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 8))
atiL2IfExt = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 9))
atiL2BridgeMib = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 10))
atiL2BrBase = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 1))
atiL2BrStp = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2))
atiL2BrTp = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3))
atiL2TrapAttrGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 11))
atiL2QOSConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 12))
atiL2SwProduct = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2SwProduct.setStatus('mandatory')
atiL2SwVersion = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2SwVersion.setStatus('mandatory')
atiL2Reset = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("switch-no-reset", 1), ("switch-reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2Reset.setStatus('mandatory')
atiL2MirroringSourceModule = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2MirroringSourceModule.setStatus('mandatory')
atiL2MirroringSourcePort = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2MirroringSourcePort.setStatus('mandatory')
atiL2MirroringDestinationModule = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2MirroringDestinationModule.setStatus('mandatory')
atiL2MirroringDestinationPort = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2MirroringDestinationPort.setStatus('mandatory')
atiL2MirrorState = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("receive-and-transmit", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2MirrorState.setStatus('mandatory')
atiL2IGMPState = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2IGMPState.setStatus('mandatory')
atiL2DeviceNumber = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2DeviceNumber.setStatus('mandatory')
atiL2CurrentIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 2, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2CurrentIpAddress.setStatus('mandatory')
atiL2ConfiguredIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2ConfiguredIpAddress.setStatus('mandatory')
atiL2ConfiguredSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2ConfiguredSubnetMask.setStatus('mandatory')
atiL2ConfiguredRouter = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2ConfiguredRouter.setStatus('mandatory')
atiL2IPAddressStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("from-dhcp", 1), ("from-bootp", 2), ("from-psuedoip", 3), ("from-Omega", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2IPAddressStatus.setStatus('mandatory')
atiL2DNServer = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 2, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2DNServer.setStatus('mandatory')
atiL2DefaultDomainName = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2DefaultDomainName.setStatus('mandatory')
atiL2NwMgrTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 33, 3, 1), )
if mibBuilder.loadTexts: atiL2NwMgrTable.setStatus('mandatory')
atiL2NwMgrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 33, 3, 1, 1), ).setIndexNames((0, "AtiL2-MIB", "atiL2NwMgrIndex"))
if mibBuilder.loadTexts: atiL2NwMgrEntry.setStatus('mandatory')
atiL2NwMgrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2NwMgrIndex.setStatus('mandatory')
atiL2NwMgrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 3, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2NwMgrIpAddr.setStatus('mandatory')
atiL2DHCPSysGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 4, 1))
atiL2DHCPTimerGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 4, 2))
atiL2DHCPCurrentDHCPClientAddress = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2DHCPCurrentDHCPClientAddress.setStatus('mandatory')
atiL2DHCPSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2DHCPSubnetMask.setStatus('mandatory')
atiL2DHCPCurrentRelayAgentAddress = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2DHCPCurrentRelayAgentAddress.setStatus('mandatory')
atiL2DHCPNextDHCPServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 4, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2DHCPNextDHCPServerAddress.setStatus('mandatory')
atiL2DHCPLeaseTimer = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 4, 2, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2DHCPLeaseTimer.setStatus('mandatory')
atiL2DHCPReacquisitionTimer = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 4, 2, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2DHCPReacquisitionTimer.setStatus('mandatory')
atiL2DHCPExpirationTimer = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 4, 2, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2DHCPExpirationTimer.setStatus('mandatory')
atiL2deviceTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 33, 5, 1), )
if mibBuilder.loadTexts: atiL2deviceTable.setStatus('mandatory')
atiL2deviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 33, 5, 1, 1), ).setIndexNames((0, "AtiL2-MIB", "atiL2deviceIndex"))
if mibBuilder.loadTexts: atiL2deviceEntry.setStatus('mandatory')
atiL2deviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2deviceIndex.setStatus('mandatory')
atiL2deviceDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 5, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2deviceDescr.setStatus('mandatory')
atiL2deviceProductType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 20))).clone(namedValues=NamedValues(("at-8324", 1), ("at-8316F", 2), ("at-8124XL-V2", 3), ("at-8326GB", 4), ("at-9410GB", 5), ("at-8350GB", 6), ("other", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2deviceProductType.setStatus('mandatory')
atiL2devicePortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2devicePortCount.setStatus('mandatory')
atiL2deviceSecurityConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled-with-learning-locked", 2), ("limited-enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2deviceSecurityConfig.setStatus('mandatory')
atiL2deviceSecurityAction = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("send-trap-only", 1), ("disable-port-only", 2), ("disable-port-and-send-trap", 3), ("do-nothing", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2deviceSecurityAction.setStatus('mandatory')
atiL2deviceDebugAvailableBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 5, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2deviceDebugAvailableBytes.setStatus('mandatory')
atiL2deviceMDA1Type = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ten-100rj45-mii", 1), ("hundredfiber-mii", 2), ("oneGb-rj45", 3), ("oneGb-Fiber", 4), ("none", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2deviceMDA1Type.setStatus('mandatory')
atiL2deviceMDA2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ten-100rj45-mii", 1), ("hundredfiber-mii", 2), ("oneGb-rj45", 3), ("oneGb-Fiber", 4), ("none", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2deviceMDA2Type.setStatus('mandatory')
atiL2deviceReset = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("switch-no-reset", 1), ("switch-reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2deviceReset.setStatus('mandatory')
atiL2EthMonStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1))
atiL2EthErrStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 2))
atiL2EthMonStatsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 1), )
if mibBuilder.loadTexts: atiL2EthMonStatsTable.setStatus('mandatory')
atiL2EthMonStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 1, 1), ).setIndexNames((0, "AtiL2-MIB", "atiL2EthMonModuleId"))
if mibBuilder.loadTexts: atiL2EthMonStatsEntry.setStatus('mandatory')
atiL2EthMonModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthMonModuleId.setStatus('mandatory')
atiL2EthMonRxGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthMonRxGoodFrames.setStatus('mandatory')
atiL2EthMonTxGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthMonTxGoodFrames.setStatus('mandatory')
atiL2EthMonTxTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthMonTxTotalBytes.setStatus('mandatory')
atiL2EthMonTxDeferred = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthMonTxDeferred.setStatus('deprecated')
atiL2EthMonTxCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthMonTxCollisions.setStatus('mandatory')
atiL2EthMonTxBroadcastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthMonTxBroadcastFrames.setStatus('mandatory')
atiL2EthMonTxMulticastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthMonTxMulticastFrames.setStatus('mandatory')
atiL2EthMonRxOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthMonRxOverruns.setStatus('mandatory')
atiL2EthPortMonStatsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 2), )
if mibBuilder.loadTexts: atiL2EthPortMonStatsTable.setStatus('mandatory')
atiL2EthPortMonStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 2, 1), ).setIndexNames((0, "AtiL2-MIB", "atiL2EthPortMonModuleId"), (0, "AtiL2-MIB", "atiL2EthPortMonPortId"))
if mibBuilder.loadTexts: atiL2EthPortMonStatsEntry.setStatus('mandatory')
atiL2EthPortMonModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthPortMonModuleId.setStatus('mandatory')
atiL2EthPortMonPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthPortMonPortId.setStatus('mandatory')
atiL2EthPortMonRxGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthPortMonRxGoodFrames.setStatus('mandatory')
atiL2EthPortMonTxGoodFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthPortMonTxGoodFrames.setStatus('mandatory')
atiL2EthPortMonTxTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthPortMonTxTotalBytes.setStatus('mandatory')
atiL2EthPortMonTxDeferred = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthPortMonTxDeferred.setStatus('deprecated')
atiL2EthPortMonTxCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthPortMonTxCollisions.setStatus('mandatory')
atiL2EthPortMonTxBroadcastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthPortMonTxBroadcastFrames.setStatus('mandatory')
atiL2EthPortMonTxMulticastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthPortMonTxMulticastFrames.setStatus('mandatory')
atiL2EthPortMonRxOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthPortMonRxOverruns.setStatus('mandatory')
atiL2EthErrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 2, 1), )
if mibBuilder.loadTexts: atiL2EthErrStatsTable.setStatus('mandatory')
atiL2EthErrorStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 2, 1, 1), ).setIndexNames((0, "AtiL2-MIB", "atiL2EthErrModuleId"))
if mibBuilder.loadTexts: atiL2EthErrorStatsEntry.setStatus('mandatory')
atiL2EthErrModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthErrModuleId.setStatus('mandatory')
atiL2EthErrorCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthErrorCRC.setStatus('mandatory')
atiL2EthErrorAlignment = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthErrorAlignment.setStatus('mandatory')
atiL2EthErrorRxBadFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthErrorRxBadFrames.setStatus('mandatory')
atiL2EthErrorLateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthErrorLateCollisions.setStatus('mandatory')
atiL2EthErrorTxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthErrorTxTotal.setStatus('mandatory')
atiL2EthPortErrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 2, 2), )
if mibBuilder.loadTexts: atiL2EthPortErrStatsTable.setStatus('mandatory')
atiL2EthPortErrorStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 2, 2, 1), ).setIndexNames((0, "AtiL2-MIB", "atiL2EthPortErrModuleId"), (0, "AtiL2-MIB", "atiL2EthPortErrPortId"))
if mibBuilder.loadTexts: atiL2EthPortErrorStatsEntry.setStatus('mandatory')
atiL2EthPortErrModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthPortErrModuleId.setStatus('mandatory')
atiL2EthPortErrPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthPortErrPortId.setStatus('mandatory')
atiL2EthPortErrorCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthPortErrorCRC.setStatus('mandatory')
atiL2EthPortErrorAlignment = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthPortErrorAlignment.setStatus('mandatory')
atiL2EthPortErrorRxBadFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthPortErrorRxBadFrames.setStatus('mandatory')
atiL2EthPortErrorLateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthPortErrorLateCollisions.setStatus('mandatory')
atiL2EthPortErrorTxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 6, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2EthPortErrorTxTotal.setStatus('mandatory')
atiL2DevicePortTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1), )
if mibBuilder.loadTexts: atiL2DevicePortTable.setStatus('mandatory')
atiL2DevicePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1, 1), ).setIndexNames((0, "AtiL2-MIB", "atiL2DeviceId"), (0, "AtiL2-MIB", "atiL2DevicePortNumber"))
if mibBuilder.loadTexts: atiL2DevicePortEntry.setStatus('mandatory')
atiL2DeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2DeviceId.setStatus('mandatory')
atiL2DevicePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2DevicePortNumber.setStatus('mandatory')
atiL2DevicePortName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2DevicePortName.setStatus('mandatory')
atiL2DevicePortAutosenseOrHalfDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("portAutoSense", 1), ("forceHalfDuplex-10M", 2), ("forceHalfDuplex-100M", 3), ("forceFullDuplex-10M", 4), ("forceFullDuplex-100M", 5), ("forceHalfDuplex-1G", 6), ("forceFullDuplex-1G", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2DevicePortAutosenseOrHalfDuplex.setStatus('mandatory')
atiL2DevicePortLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("online", 1), ("offline", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2DevicePortLinkState.setStatus('mandatory')
atiL2DevicePortDuplexStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fullDuplex", 1), ("halfDuplex", 2), ("autosense", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2DevicePortDuplexStatus.setStatus('mandatory')
atiL2DevicePortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("tenMBits", 1), ("hundredMBits", 2), ("gigaBits", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2DevicePortSpeed.setStatus('mandatory')
atiL2DevicePortState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("blocking", 3), ("listening", 4), ("learning", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2DevicePortState.setStatus('mandatory')
atiL2DevicePortTransmitPacingConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2DevicePortTransmitPacingConfig.setStatus('mandatory')
atiL2DevicePortSTPConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2DevicePortSTPConfig.setStatus('mandatory')
atiL2DevicePortBridgeid = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2DevicePortBridgeid.setStatus('mandatory')
atiL2DevicePortSTPCost = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2DevicePortSTPCost.setStatus('mandatory')
atiL2DevicePortSTPPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2DevicePortSTPPriority.setStatus('mandatory')
atiL2DevicePortFlowControlEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2DevicePortFlowControlEnable.setStatus('deprecated')
atiL2DevicePortBackPressureEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2DevicePortBackPressureEnable.setStatus('deprecated')
atiL2DevicePortVlanTagPriorityConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("use-vlan-priority", 1), ("override-vlan-priority", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2DevicePortVlanTagPriorityConfig.setStatus('deprecated')
atiL2DevicePortQOSPriorityConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 7, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("high-priority", 1), ("normal-priority", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2DevicePortQOSPriorityConfig.setStatus('deprecated')
atiL2BasicVlanTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1), )
if mibBuilder.loadTexts: atiL2BasicVlanTable.setStatus('mandatory')
atiL2BasicVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1), ).setIndexNames((0, "AtiL2-MIB", "atiL2BeVlanIndex"))
if mibBuilder.loadTexts: atiL2BasicVlanEntry.setStatus('mandatory')
atiL2BeVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BeVlanIndex.setStatus('mandatory')
atiL2BeVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanName.setStatus('mandatory')
atiL2BeVlanTagId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanTagId.setStatus('mandatory')
atiL2BeVlanModule1UntaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanModule1UntaggedPorts.setStatus('mandatory')
atiL2BeVlanModule1TaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanModule1TaggedPorts.setStatus('mandatory')
atiL2BeVlanModule2UntaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanModule2UntaggedPorts.setStatus('mandatory')
atiL2BeVlanModule2TaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanModule2TaggedPorts.setStatus('mandatory')
atiL2BeVlanModule3UntaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanModule3UntaggedPorts.setStatus('mandatory')
atiL2BeVlanModule3TaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanModule3TaggedPorts.setStatus('mandatory')
atiL2BeVlanModule4UntaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanModule4UntaggedPorts.setStatus('mandatory')
atiL2BeVlanModule4TaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanModule4TaggedPorts.setStatus('mandatory')
atiL2BeVlanModule5UntaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanModule5UntaggedPorts.setStatus('mandatory')
atiL2BeVlanModule5TaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanModule5TaggedPorts.setStatus('mandatory')
atiL2BeVlanModule6UntaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanModule6UntaggedPorts.setStatus('mandatory')
atiL2BeVlanModule6TaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanModule6TaggedPorts.setStatus('mandatory')
atiL2BeVlanModule7UntaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanModule7UntaggedPorts.setStatus('mandatory')
atiL2BeVlanModule7TaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanModule7TaggedPorts.setStatus('mandatory')
atiL2BeVlanModule8UntaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanModule8UntaggedPorts.setStatus('mandatory')
atiL2BeVlanModule8TaggedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanModule8TaggedPorts.setStatus('mandatory')
atiL2BeVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 1), ("operational", 2), ("under-construction", 3), ("not-operational", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BeVlanRowStatus.setStatus('mandatory')
atiL2Port2VlanTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 2), )
if mibBuilder.loadTexts: atiL2Port2VlanTable.setStatus('mandatory')
atiL2Port2VlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 2, 1), ).setIndexNames((0, "AtiL2-MIB", "atiL2PvModuleId"), (0, "AtiL2-MIB", "atiL2PvPortNumber"))
if mibBuilder.loadTexts: atiL2Port2VlanEntry.setStatus('mandatory')
atiL2PvModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2PvModuleId.setStatus('mandatory')
atiL2PvPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2PvPortNumber.setStatus('mandatory')
atiL2PvVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 8, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2PvVlanName.setStatus('mandatory')
atiL2IfExtensions = MibIdentifier((1, 3, 6, 1, 4, 1, 207, 8, 33, 9, 1))
atiIfExtnTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 33, 9, 1, 1), )
if mibBuilder.loadTexts: atiIfExtnTable.setStatus('mandatory')
atiIfExtnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 33, 9, 1, 1, 1), ).setIndexNames((0, "AtiL2-MIB", "atiIfExtnIndex"))
if mibBuilder.loadTexts: atiIfExtnEntry.setStatus('mandatory')
atiIfExtnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 9, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiIfExtnIndex.setStatus('mandatory')
atiIfExtnModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 9, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiIfExtnModuleId.setStatus('mandatory')
atiIfExtnPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 9, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiIfExtnPort.setStatus('mandatory')
atiL2BrBaseTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 1, 1), )
if mibBuilder.loadTexts: atiL2BrBaseTable.setStatus('mandatory')
atiL2BrBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 1, 1, 1), ).setIndexNames((0, "AtiL2-MIB", "atiL2BrBaseLanId"))
if mibBuilder.loadTexts: atiL2BrBaseEntry.setStatus('mandatory')
atiL2BrBaseLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrBaseLanId.setStatus('mandatory')
atiL2BrBaseBridgeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 1, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrBaseBridgeAddress.setStatus('mandatory')
atiL2BrBaseNumPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrBaseNumPorts.setStatus('mandatory')
atiL2BrBaseType = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("transparent-only", 2), ("sourceroute-only", 3), ("srt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrBaseType.setStatus('mandatory')
atiL2BrBasePortTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 1, 4), )
if mibBuilder.loadTexts: atiL2BrBasePortTable.setStatus('mandatory')
atiL2BrBasePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 1, 4, 1), ).setIndexNames((0, "AtiL2-MIB", "atiL2BrBasePortLanId"), (0, "AtiL2-MIB", "atiL2BrBasePort"))
if mibBuilder.loadTexts: atiL2BrBasePortEntry.setStatus('mandatory')
atiL2BrBasePortLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrBasePortLanId.setStatus('mandatory')
atiL2BrBasePort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrBasePort.setStatus('mandatory')
atiL2BrBasePortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 1, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrBasePortIfIndex.setStatus('mandatory')
atiL2BrBasePortCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 1, 4, 1, 4), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrBasePortCircuit.setStatus('mandatory')
atiL2BrBasePortDelayExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrBasePortDelayExceededDiscards.setStatus('mandatory')
atiL2BrBasePortMtuExceededDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 1, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrBasePortMtuExceededDiscards.setStatus('mandatory')
atiL2BrStpTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 1), )
if mibBuilder.loadTexts: atiL2BrStpTable.setStatus('mandatory')
atiL2BrStpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 1, 1), ).setIndexNames((0, "AtiL2-MIB", "atiL2BrStpLanId"))
if mibBuilder.loadTexts: atiL2BrStpEntry.setStatus('mandatory')
atiL2BrStpLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpLanId.setStatus('mandatory')
atiL2BrStpProtocolSpecification = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("decLb100", 2), ("ieee8021d", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpProtocolSpecification.setStatus('mandatory')
atiL2BrStpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BrStpPriority.setStatus('mandatory')
atiL2BrStpTimeSinceTopologyChange = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpTimeSinceTopologyChange.setStatus('mandatory')
atiL2BrStpTopChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpTopChanges.setStatus('mandatory')
atiL2BrStpDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 1, 1, 6), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpDesignatedRoot.setStatus('mandatory')
atiL2BrStpRootCost = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpRootCost.setStatus('mandatory')
atiL2BrStpRootPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpRootPort.setStatus('mandatory')
atiL2BrStpMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 1, 1, 9), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpMaxAge.setStatus('mandatory')
atiL2BrStpHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 1, 1, 10), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpHelloTime.setStatus('mandatory')
atiL2BrStpHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpHoldTime.setStatus('mandatory')
atiL2BrStpForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 1, 1, 12), Timeout()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpForwardDelay.setStatus('mandatory')
atiL2BrStpBridgeMaxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 1, 1, 13), Timeout().subtype(subtypeSpec=ValueRangeConstraint(600, 4000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BrStpBridgeMaxAge.setStatus('mandatory')
atiL2BrStpBridgeHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 1, 1, 14), Timeout().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BrStpBridgeHelloTime.setStatus('mandatory')
atiL2BrStpBridgeForwardDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 1, 1, 15), Timeout().subtype(subtypeSpec=ValueRangeConstraint(400, 3000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BrStpBridgeForwardDelay.setStatus('mandatory')
atiL2BrStpPortTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 15), )
if mibBuilder.loadTexts: atiL2BrStpPortTable.setStatus('mandatory')
atiL2BrStpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 15, 1), ).setIndexNames((0, "AtiL2-MIB", "atiL2BrStpPortLanId"), (0, "AtiL2-MIB", "atiL2BrStpPort"))
if mibBuilder.loadTexts: atiL2BrStpPortEntry.setStatus('mandatory')
atiL2BrStpPortLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpPortLanId.setStatus('mandatory')
atiL2BrStpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 15, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpPort.setStatus('mandatory')
atiL2BrStpPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 15, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BrStpPortPriority.setStatus('mandatory')
atiL2BrStpPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("disabled", 1), ("blocking", 2), ("listening", 3), ("learning", 4), ("forwarding", 5), ("broken", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpPortState.setStatus('mandatory')
atiL2BrStpPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BrStpPortEnable.setStatus('mandatory')
atiL2BrStpPortPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 15, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BrStpPortPathCost.setStatus('mandatory')
atiL2BrStpPortDesignatedRoot = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 15, 1, 7), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpPortDesignatedRoot.setStatus('mandatory')
atiL2BrStpPortDesignatedCost = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 15, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpPortDesignatedCost.setStatus('mandatory')
atiL2BrStpPortDesignatedBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 15, 1, 9), BridgeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpPortDesignatedBridge.setStatus('mandatory')
atiL2BrStpPortDesignatedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 15, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpPortDesignatedPort.setStatus('mandatory')
atiL2BrStpPortForwardTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 2, 15, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrStpPortForwardTransitions.setStatus('mandatory')
atiL2BrTpTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 1), )
if mibBuilder.loadTexts: atiL2BrTpTable.setStatus('mandatory')
atiL2BrTpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 1, 1), ).setIndexNames((0, "AtiL2-MIB", "atiL2BrTpLanId"))
if mibBuilder.loadTexts: atiL2BrTpEntry.setStatus('mandatory')
atiL2BrTpLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrTpLanId.setStatus('mandatory')
atiL2BrTpLearnedEntryDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrTpLearnedEntryDiscards.setStatus('mandatory')
atiL2BrTpAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2BrTpAgingTime.setStatus('mandatory')
atiL2BrTpFdbTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 3), )
if mibBuilder.loadTexts: atiL2BrTpFdbTable.setStatus('mandatory')
atiL2BrTpFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 3, 1), ).setIndexNames((0, "AtiL2-MIB", "atiL2BrTpFdbLanId"), (0, "AtiL2-MIB", "atiL2BrTpFdbAddress"))
if mibBuilder.loadTexts: atiL2BrTpFdbEntry.setStatus('mandatory')
atiL2BrTpFdbLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrTpFdbLanId.setStatus('mandatory')
atiL2BrTpFdbAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrTpFdbAddress.setStatus('mandatory')
atiL2BrTpFdbPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrTpFdbPort.setStatus('mandatory')
atiL2BrTpFdbStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrTpFdbStatus.setStatus('mandatory')
atiL2BrTpPortTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 4), )
if mibBuilder.loadTexts: atiL2BrTpPortTable.setStatus('mandatory')
atiL2BrTpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 4, 1), ).setIndexNames((0, "AtiL2-MIB", "atiL2BrTpPortLanId"), (0, "AtiL2-MIB", "atiL2BrTpPort"))
if mibBuilder.loadTexts: atiL2BrTpPortEntry.setStatus('mandatory')
atiL2BrTpPortLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrTpPortLanId.setStatus('mandatory')
atiL2BrTpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrTpPort.setStatus('mandatory')
atiL2BrTpPortMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrTpPortMaxInfo.setStatus('mandatory')
atiL2BrTpPortInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrTpPortInFrames.setStatus('mandatory')
atiL2BrTpPortOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrTpPortOutFrames.setStatus('mandatory')
atiL2BrTpPortInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 10, 3, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2BrTpPortInDiscards.setStatus('mandatory')
atiL2TrapAttrModuleId = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 11, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: atiL2TrapAttrModuleId.setStatus('mandatory')
atiL2TrapAttrPortId = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 11, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: atiL2TrapAttrPortId.setStatus('mandatory')
newRoot = NotificationType((1, 3, 6, 1, 4, 1, 207) + (0,101))
topologyChange = NotificationType((1, 3, 6, 1, 4, 1, 207) + (0,102))
atiL2FanStopTrap = NotificationType((1, 3, 6, 1, 4, 1, 207) + (0,103)).setObjects(("AtiL2-MIB", "atiL2TrapAttrModuleId"))
atiL2TemperatureAbnormalTrap = NotificationType((1, 3, 6, 1, 4, 1, 207) + (0,104)).setObjects(("AtiL2-MIB", "atiL2TrapAttrModuleId"))
atiL2PowerSupplyOutage = NotificationType((1, 3, 6, 1, 4, 1, 207) + (0,105)).setObjects(("AtiL2-MIB", "atiL2TrapAttrModuleId"))
atiL2IntruderAlert = NotificationType((1, 3, 6, 1, 4, 1, 207) + (0,106)).setObjects(("AtiL2-MIB", "atiL2TrapAttrModuleId"), ("AtiL2-MIB", "atiL2TrapAttrPortId"))
atiL2QOSStatus = MibScalar((1, 3, 6, 1, 4, 1, 207, 8, 33, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2QOSStatus.setStatus('mandatory')
atiL2TrafficMappingTable = MibTable((1, 3, 6, 1, 4, 1, 207, 8, 33, 12, 2), )
if mibBuilder.loadTexts: atiL2TrafficMappingTable.setStatus('mandatory')
atiL2TrafficMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 207, 8, 33, 12, 2, 1), ).setIndexNames((0, "AtiL2-MIB", "atiL2TrafficClassIndex"))
if mibBuilder.loadTexts: atiL2TrafficMappingEntry.setStatus('mandatory')
atiL2TrafficClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atiL2TrafficClassIndex.setStatus('mandatory')
atiL2PriorityQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 207, 8, 33, 12, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("highest", 0), ("lowest", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atiL2PriorityQueue.setStatus('mandatory')
mibBuilder.exportSymbols("AtiL2-MIB", atiL2DevicePortSTPPriority=atiL2DevicePortSTPPriority, atiL2DNServer=atiL2DNServer, atiL2BeVlanIndex=atiL2BeVlanIndex, atiL2SwProduct=atiL2SwProduct, atiL2EthPortMonTxMulticastFrames=atiL2EthPortMonTxMulticastFrames, atiL2BrTpPortOutFrames=atiL2BrTpPortOutFrames, mibObject=mibObject, at_9410GB=at_9410GB, atiL2BrStpForwardDelay=atiL2BrStpForwardDelay, atiL2PvModuleId=atiL2PvModuleId, atiL2EthPortMonTxCollisions=atiL2EthPortMonTxCollisions, atiL2DevicePortState=atiL2DevicePortState, atiL2EthMonModuleId=atiL2EthMonModuleId, atiL2EthPortErrorAlignment=atiL2EthPortErrorAlignment, atiL2BrTpEntry=atiL2BrTpEntry, atiL2EthMonTxMulticastFrames=atiL2EthMonTxMulticastFrames, atiL2TemperatureAbnormalTrap=atiL2TemperatureAbnormalTrap, atiIfExtnIndex=atiIfExtnIndex, atiL2TrafficClassIndex=atiL2TrafficClassIndex, atiIfExtnModuleId=atiIfExtnModuleId, atiL2DeviceId=atiL2DeviceId, atiL2DevicePortSpeed=atiL2DevicePortSpeed, atiL2DevicePortEntry=atiL2DevicePortEntry, atiL2EthPortMonModuleId=atiL2EthPortMonModuleId, atiL2BrStpPortEnable=atiL2BrStpPortEnable, atiL2BrStpPriority=atiL2BrStpPriority, atiL2EthPortMonTxDeferred=atiL2EthPortMonTxDeferred, atiL2BrBaseType=atiL2BrBaseType, atiL2DHCPSysGroup=atiL2DHCPSysGroup, atiL2BrStpPortEntry=atiL2BrStpPortEntry, BridgeId=BridgeId, atiL2IfExt=atiL2IfExt, atiL2EthErrStatsTable=atiL2EthErrStatsTable, atiL2BrStpBridgeMaxAge=atiL2BrStpBridgeMaxAge, atiL2DevicePortBridgeid=atiL2DevicePortBridgeid, atiL2DHCPGroup=atiL2DHCPGroup, atiL2BeVlanModule5UntaggedPorts=atiL2BeVlanModule5UntaggedPorts, atiL2BrTpPortLanId=atiL2BrTpPortLanId, atiL2NwMgrEntry=atiL2NwMgrEntry, atiL2BrStpBridgeHelloTime=atiL2BrStpBridgeHelloTime, atiL2BrBasePortIfIndex=atiL2BrBasePortIfIndex, atiL2MirroringDestinationPort=atiL2MirroringDestinationPort, atiL2EthernetStatsGroup=atiL2EthernetStatsGroup, atiL2BeVlanModule2TaggedPorts=atiL2BeVlanModule2TaggedPorts, atiL2BrTpPortMaxInfo=atiL2BrTpPortMaxInfo, atiL2DHCPNextDHCPServerAddress=atiL2DHCPNextDHCPServerAddress, atiL2BrBasePortEntry=atiL2BrBasePortEntry, alliedTelesyn=alliedTelesyn, atiL2DevicePortTransmitPacingConfig=atiL2DevicePortTransmitPacingConfig, atiL2BrTpLanId=atiL2BrTpLanId, atiL2NwMgrIndex=atiL2NwMgrIndex, atiL2DevicePortBackPressureEnable=atiL2DevicePortBackPressureEnable, atiL2BeVlanTagId=atiL2BeVlanTagId, atiL2EthMonStatsTable=atiL2EthMonStatsTable, atiL2MirroringSourceModule=atiL2MirroringSourceModule, atiL2NwMgrIpAddr=atiL2NwMgrIpAddr, atiL2EthErrorRxBadFrames=atiL2EthErrorRxBadFrames, atiL2DHCPCurrentDHCPClientAddress=atiL2DHCPCurrentDHCPClientAddress, atiL2EthPortErrorCRC=atiL2EthPortErrorCRC, atiL2BrStpPortDesignatedRoot=atiL2BrStpPortDesignatedRoot, atiL2BrTpFdbEntry=atiL2BrTpFdbEntry, atiL2MirroringSourcePort=atiL2MirroringSourcePort, at_8350GB=at_8350GB, atiL2BrTpPort=atiL2BrTpPort, atiL2EthPortErrStatsTable=atiL2EthPortErrStatsTable, atiL2DefaultDomainName=atiL2DefaultDomainName, atiL2BeVlanModule2UntaggedPorts=atiL2BeVlanModule2UntaggedPorts, atiL2TrapAttrGroup=atiL2TrapAttrGroup, atiL2BrStpTable=atiL2BrStpTable, atiL2BeVlanModule3TaggedPorts=atiL2BeVlanModule3TaggedPorts, atiL2BrBaseTable=atiL2BrBaseTable, atiL2BeVlanName=atiL2BeVlanName, atiL2BrTpFdbLanId=atiL2BrTpFdbLanId, atiL2BrBasePortTable=atiL2BrBasePortTable, atiL2GlobalGroup=atiL2GlobalGroup, at_8124XL_V2=at_8124XL_V2, atiL2FanStopTrap=atiL2FanStopTrap, atiL2BeVlanModule6TaggedPorts=atiL2BeVlanModule6TaggedPorts, atiL2BrBasePortMtuExceededDiscards=atiL2BrBasePortMtuExceededDiscards, atiL2EthPortMonTxTotalBytes=atiL2EthPortMonTxTotalBytes, atiL2Port2VlanEntry=atiL2Port2VlanEntry, atiL2BrBaseEntry=atiL2BrBaseEntry, atiL2BeVlanModule4TaggedPorts=atiL2BeVlanModule4TaggedPorts, at_8326GB=at_8326GB, atiL2BrStpRootCost=atiL2BrStpRootCost, atiL2BeVlanModule4UntaggedPorts=atiL2BeVlanModule4UntaggedPorts, atiL2BrStpRootPort=atiL2BrStpRootPort, atiL2EthPortErrPortId=atiL2EthPortErrPortId, atiL2EthMonRxOverruns=atiL2EthMonRxOverruns, atiL2EthPortErrorStatsEntry=atiL2EthPortErrorStatsEntry, atiL2DevicePortVlanTagPriorityConfig=atiL2DevicePortVlanTagPriorityConfig, atiL2SwVersion=atiL2SwVersion, atiL2BeVlanModule1TaggedPorts=atiL2BeVlanModule1TaggedPorts, atiL2Port2VlanTable=atiL2Port2VlanTable, atiL2BrTpAgingTime=atiL2BrTpAgingTime, atiL2BrStpPortState=atiL2BrStpPortState, atiL2BrTpPortEntry=atiL2BrTpPortEntry, atiL2IGMPState=atiL2IGMPState, atiL2PvVlanName=atiL2PvVlanName, atiL2EthMonStatsGroup=atiL2EthMonStatsGroup, atiL2DevicePortFlowControlEnable=atiL2DevicePortFlowControlEnable, atiL2BrBaseBridgeAddress=atiL2BrBaseBridgeAddress, atiL2BrStpPortPriority=atiL2BrStpPortPriority, atiL2BeVlanModule1UntaggedPorts=atiL2BeVlanModule1UntaggedPorts, atiL2BrStpDesignatedRoot=atiL2BrStpDesignatedRoot, atiL2TrapAttrModuleId=atiL2TrapAttrModuleId, atiL2BeVlanRowStatus=atiL2BeVlanRowStatus, atiL2deviceReset=atiL2deviceReset, atiL2deviceProductType=atiL2deviceProductType, atiL2QOSConfigGroup=atiL2QOSConfigGroup, atiL2EthErrStatsGroup=atiL2EthErrStatsGroup, atiL2NMGroup=atiL2NMGroup, atiL2EthPortErrorRxBadFrames=atiL2EthPortErrorRxBadFrames, atiL2DevicePortConfigGroup=atiL2DevicePortConfigGroup, atiL2BrStpMaxAge=atiL2BrStpMaxAge, atiL2BeVlanModule6UntaggedPorts=atiL2BeVlanModule6UntaggedPorts, atiL2DHCPExpirationTimer=atiL2DHCPExpirationTimer, atiL2ConfiguredRouter=atiL2ConfiguredRouter, atiL2deviceEntry=atiL2deviceEntry, atiL2PriorityQueue=atiL2PriorityQueue, atiL2BrStpTimeSinceTopologyChange=atiL2BrStpTimeSinceTopologyChange, atiL2DHCPTimerGroup=atiL2DHCPTimerGroup, atiL2devicePortCount=atiL2devicePortCount, atiL2BrTpFdbTable=atiL2BrTpFdbTable, atiL2BasicVlanTable=atiL2BasicVlanTable, atiL2IpGroup=atiL2IpGroup, atiL2BrTpTable=atiL2BrTpTable, atiL2EthPortErrorTxTotal=atiL2EthPortErrorTxTotal, atiL2BrBasePortCircuit=atiL2BrBasePortCircuit, atiL2IfExtensions=atiL2IfExtensions, atiL2DevicePortNumber=atiL2DevicePortNumber, atiL2BrStpBridgeForwardDelay=atiL2BrStpBridgeForwardDelay, atiL2EthMonRxGoodFrames=atiL2EthMonRxGoodFrames, atiL2EthMonTxBroadcastFrames=atiL2EthMonTxBroadcastFrames, atiL2EthPortMonTxGoodFrames=atiL2EthPortMonTxGoodFrames, atiL2BrStp=atiL2BrStp, atiL2EthMonTxGoodFrames=atiL2EthMonTxGoodFrames, atiL2deviceSecurityAction=atiL2deviceSecurityAction, atiIfExtnTable=atiIfExtnTable, atiL2DevicePortName=atiL2DevicePortName, atiL2BeVlanModule7UntaggedPorts=atiL2BeVlanModule7UntaggedPorts, atiL2BrTpLearnedEntryDiscards=atiL2BrTpLearnedEntryDiscards, atiL2DevicePortLinkState=atiL2DevicePortLinkState, atiL2BrStpPortDesignatedBridge=atiL2BrStpPortDesignatedBridge, atiL2DevicePortTable=atiL2DevicePortTable, atiL2BrStpPortLanId=atiL2BrStpPortLanId, atiL2EthErrModuleId=atiL2EthErrModuleId, atiL2DeviceGroup=atiL2DeviceGroup, atiL2EthPortMonTxBroadcastFrames=atiL2EthPortMonTxBroadcastFrames, atiL2PowerSupplyOutage=atiL2PowerSupplyOutage, atiL2EthMonTxCollisions=atiL2EthMonTxCollisions, atiL2deviceMDA1Type=atiL2deviceMDA1Type, atiL2deviceSecurityConfig=atiL2deviceSecurityConfig, at_8316F=at_8316F, atiL2EthErrorAlignment=atiL2EthErrorAlignment, atiL2DevicePortDuplexStatus=atiL2DevicePortDuplexStatus, atiL2BrBasePortLanId=atiL2BrBasePortLanId, atiL2BrStpHoldTime=atiL2BrStpHoldTime, atiL2EthErrorCRC=atiL2EthErrorCRC, atiL2BrBaseLanId=atiL2BrBaseLanId, atiL2BrStpPortDesignatedCost=atiL2BrStpPortDesignatedCost, atiL2DevicePortAutosenseOrHalfDuplex=atiL2DevicePortAutosenseOrHalfDuplex, atiL2BrStpTopChanges=atiL2BrStpTopChanges, atiL2BrBasePortDelayExceededDiscards=atiL2BrBasePortDelayExceededDiscards, atiIfExtnPort=atiIfExtnPort, atiL2TrapAttrPortId=atiL2TrapAttrPortId, atiL2MirrorState=atiL2MirrorState, atiL2BeVlanModule7TaggedPorts=atiL2BeVlanModule7TaggedPorts, atiL2BrStpHelloTime=atiL2BrStpHelloTime, atiL2EthPortErrorLateCollisions=atiL2EthPortErrorLateCollisions, at_8324=at_8324, atiL2CurrentIpAddress=atiL2CurrentIpAddress, atiL2BrStpPortDesignatedPort=atiL2BrStpPortDesignatedPort, atiL2BrStpPort=atiL2BrStpPort, atiL2BeVlanModule3UntaggedPorts=atiL2BeVlanModule3UntaggedPorts, atiL2BeVlanModule5TaggedPorts=atiL2BeVlanModule5TaggedPorts, atiL2BrStpPortPathCost=atiL2BrStpPortPathCost, atiL2EthErrorStatsEntry=atiL2EthErrorStatsEntry, atiL2BrTpPortTable=atiL2BrTpPortTable, atiL2EthPortMonRxGoodFrames=atiL2EthPortMonRxGoodFrames, atiL2BeVlanModule8TaggedPorts=atiL2BeVlanModule8TaggedPorts, atiL2BrStpPortTable=atiL2BrStpPortTable, atiL2BrTpPortInDiscards=atiL2BrTpPortInDiscards, atiL2ConfiguredSubnetMask=atiL2ConfiguredSubnetMask, atiIfExtnEntry=atiIfExtnEntry, atiL2EthPortMonStatsTable=atiL2EthPortMonStatsTable, atiL2EthPortMonStatsEntry=atiL2EthPortMonStatsEntry, swhub=swhub, atiL2BrStpEntry=atiL2BrStpEntry, atiL2IPAddressStatus=atiL2IPAddressStatus, atiL2EthPortMonPortId=atiL2EthPortMonPortId, atiL2DHCPSubnetMask=atiL2DHCPSubnetMask, atiL2BrTpFdbAddress=atiL2BrTpFdbAddress, newRoot=newRoot, atiL2DHCPLeaseTimer=atiL2DHCPLeaseTimer, atiL2MirroringDestinationModule=atiL2MirroringDestinationModule, atiL2IntruderAlert=atiL2IntruderAlert, atiL2EthPortMonRxOverruns=atiL2EthPortMonRxOverruns, atiL2DevicePortQOSPriorityConfig=atiL2DevicePortQOSPriorityConfig, atiL2deviceMDA2Type=atiL2deviceMDA2Type, atiL2NwMgrTable=atiL2NwMgrTable, atiL2EthMonTxTotalBytes=atiL2EthMonTxTotalBytes, Timeout=Timeout, topologyChange=topologyChange, atiL2Reset=atiL2Reset, atiL2BrBasePort=atiL2BrBasePort, MacAddress=MacAddress, atiL2DevicePortSTPConfig=atiL2DevicePortSTPConfig, atiL2BrStpPortForwardTransitions=atiL2BrStpPortForwardTransitions, atiL2BrTpFdbPort=atiL2BrTpFdbPort, atiL2BeVlanModule8UntaggedPorts=atiL2BeVlanModule8UntaggedPorts, atiL2BrBaseNumPorts=atiL2BrBaseNumPorts, atiL2deviceDebugAvailableBytes=atiL2deviceDebugAvailableBytes, atiL2TrafficMappingEntry=atiL2TrafficMappingEntry, atiProduct=atiProduct, atiL2PvPortNumber=atiL2PvPortNumber, atiL2DeviceNumber=atiL2DeviceNumber, atiL2BasicVlanEntry=atiL2BasicVlanEntry, atiL2BrTp=atiL2BrTp, atiL2BrStpLanId=atiL2BrStpLanId, atiL2deviceDescr=atiL2deviceDescr, atiL2EthMonTxDeferred=atiL2EthMonTxDeferred, atiL2BrTpPortInFrames=atiL2BrTpPortInFrames, atiL2EthMonStatsEntry=atiL2EthMonStatsEntry, atiL2deviceIndex=atiL2deviceIndex, atiL2QOSStatus=atiL2QOSStatus, atiL2BrBase=atiL2BrBase, atiL2EthErrorLateCollisions=atiL2EthErrorLateCollisions, atiL2DevicePortSTPCost=atiL2DevicePortSTPCost, atiL2BrStpProtocolSpecification=atiL2BrStpProtocolSpecification, atiL2BridgeMib=atiL2BridgeMib, atiL2ConfiguredIpAddress=atiL2ConfiguredIpAddress, atiL2VlanConfigGroup=atiL2VlanConfigGroup, atiL2EthPortErrModuleId=atiL2EthPortErrModuleId, atiL2BrTpFdbStatus=atiL2BrTpFdbStatus, atiL2Mib=atiL2Mib, atiL2TrafficMappingTable=atiL2TrafficMappingTable, atiL2EthErrorTxTotal=atiL2EthErrorTxTotal, atiL2deviceTable=atiL2deviceTable, atiL2DHCPCurrentRelayAgentAddress=atiL2DHCPCurrentRelayAgentAddress, atiL2DHCPReacquisitionTimer=atiL2DHCPReacquisitionTimer)
