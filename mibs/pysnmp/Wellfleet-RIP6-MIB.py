#
# PySNMP MIB module Wellfleet-RIP6-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-RIP6-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:34:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, MibIdentifier, Counter64, Integer32, TimeTicks, Bits, Unsigned32, iso, IpAddress, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ModuleIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "Counter64", "Integer32", "TimeTicks", "Bits", "Unsigned32", "iso", "IpAddress", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ModuleIdentity", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfIpv6RoutingGroup, wfIpv6PolicyGroup = mibBuilder.importSymbols("Wellfleet-IPV6-MIB", "wfIpv6RoutingGroup", "wfIpv6PolicyGroup")
wfRipv6Group = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2))
wfRipv6IfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 1), )
if mibBuilder.loadTexts: wfRipv6IfTable.setStatus('mandatory')
wfRipv6IfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 1, 1), ).setIndexNames((0, "Wellfleet-RIP6-MIB", "wfRipv6IntfIndex"))
if mibBuilder.loadTexts: wfRipv6IfEntry.setStatus('mandatory')
wfRipv6IntfCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6IntfCreate.setStatus('mandatory')
wfRipv6IntfEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6IntfEnable.setStatus('mandatory')
wfRipv6IntfState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRipv6IntfState.setStatus('mandatory')
wfRipv6IntfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRipv6IntfIndex.setStatus('mandatory')
wfRipv6IntfSupply = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6IntfSupply.setStatus('mandatory')
wfRipv6IntfListen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6IntfListen.setStatus('mandatory')
wfRipv6IntfDefaultRouteSupply = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("generated", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6IntfDefaultRouteSupply.setStatus('mandatory')
wfRipv6IntfDefaultRouteListen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6IntfDefaultRouteListen.setStatus('mandatory')
wfRipv6IntfPoisonedReversed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("poisoned", 1), ("actual", 2), ("split", 3))).clone('poisoned')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6IntfPoisonedReversed.setStatus('mandatory')
wfRipv6IntfBroadcastTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6IntfBroadcastTimer.setStatus('mandatory')
wfRipv6IntfTimeoutTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(15, 259200)).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6IntfTimeoutTimer.setStatus('mandatory')
wfRipv6IntfHolddownTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(15, 259200)).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6IntfHolddownTimer.setStatus('mandatory')
wfRipv6IntfTriggeredUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6IntfTriggeredUpdates.setStatus('mandatory')
wfRipv6IntfDiameter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6IntfDiameter.setStatus('mandatory')
wfRipv6IfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 2), )
if mibBuilder.loadTexts: wfRipv6IfStatsTable.setStatus('mandatory')
wfRipv6IfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 2, 1), ).setIndexNames((0, "Wellfleet-RIP6-MIB", "wfRipv6IfStatsIntfIndex"))
if mibBuilder.loadTexts: wfRipv6IfStatsEntry.setStatus('mandatory')
wfRipv6IfStatsIntfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRipv6IfStatsIntfIndex.setStatus('mandatory')
wfRipv6IfStatsInMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRipv6IfStatsInMsgs.setStatus('mandatory')
wfRipv6IfStatsInRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRipv6IfStatsInRequests.setStatus('mandatory')
wfRipv6IfStatsInResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRipv6IfStatsInResponses.setStatus('mandatory')
wfRipv6IfStatsInBadResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRipv6IfStatsInBadResponses.setStatus('mandatory')
wfRipv6IfStatsInBadRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRipv6IfStatsInBadRoutes.setStatus('mandatory')
wfRipv6IfStatsOutMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRipv6IfStatsOutMsgs.setStatus('mandatory')
wfRipv6IfStatsOutRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRipv6IfStatsOutRequests.setStatus('mandatory')
wfRipv6IfStatsOutResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRipv6IfStatsOutResponses.setStatus('mandatory')
wfRipv6IfStatsOutFullUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRipv6IfStatsOutFullUpdates.setStatus('mandatory')
wfRipv6IfStatsOutTriggeredUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRipv6IfStatsOutTriggeredUpdates.setStatus('mandatory')
wfRipv6IfStatsOutRoutesAdvertised = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRipv6IfStatsOutRoutesAdvertised.setStatus('mandatory')
wfRip6AcceptTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 1), )
if mibBuilder.loadTexts: wfRip6AcceptTable.setStatus('mandatory')
wfRip6AcceptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 1, 1), ).setIndexNames((0, "Wellfleet-RIP6-MIB", "wfRip6AcceptIndex"))
if mibBuilder.loadTexts: wfRip6AcceptEntry.setStatus('mandatory')
wfRip6AcceptDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AcceptDelete.setStatus('mandatory')
wfRip6AcceptDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AcceptDisable.setStatus('mandatory')
wfRip6AcceptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRip6AcceptIndex.setStatus('mandatory')
wfRip6AcceptName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AcceptName.setStatus('mandatory')
wfRip6AcceptPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 1, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AcceptPrefixes.setStatus('mandatory')
wfRip6AcceptAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("accept", 1), ("ignore", 3))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AcceptAction.setStatus('mandatory')
wfRip6AcceptPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AcceptPreference.setStatus('mandatory')
wfRip6AcceptPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AcceptPrecedence.setStatus('mandatory')
wfRip6AcceptInject = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 1, 1, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AcceptInject.setStatus('mandatory')
wfRip6AcceptGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 1, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AcceptGateway.setStatus('mandatory')
wfRip6AcceptInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 1, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AcceptInterface.setStatus('mandatory')
wfRip6AcceptLog = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AcceptLog.setStatus('mandatory')
wfRip6AnnounceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 2), )
if mibBuilder.loadTexts: wfRip6AnnounceTable.setStatus('mandatory')
wfRip6AnnounceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 2, 1), ).setIndexNames((0, "Wellfleet-RIP6-MIB", "wfRip6AnnounceIndex"))
if mibBuilder.loadTexts: wfRip6AnnounceEntry.setStatus('mandatory')
wfRip6AnnounceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AnnounceDelete.setStatus('mandatory')
wfRip6AnnounceDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AnnounceDisable.setStatus('mandatory')
wfRip6AnnounceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRip6AnnounceIndex.setStatus('mandatory')
wfRip6AnnounceName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AnnounceName.setStatus('mandatory')
wfRip6AnnouncePrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 2, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AnnouncePrefixes.setStatus('mandatory')
wfRip6AnnounceAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("announce", 2), ("ignore", 3))).clone('announce')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AnnounceAction.setStatus('mandatory')
wfRip6AnnouncePrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AnnouncePrecedence.setStatus('mandatory')
wfRip6AnnounceRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 2, 1, 8), Integer32().clone(63)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AnnounceRouteSource.setStatus('mandatory')
wfRip6AnnounceExtRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 2, 1, 9), Integer32().clone(63)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AnnounceExtRouteSource.setStatus('mandatory')
wfRip6AnnounceAdvertise = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 2, 1, 10), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AnnounceAdvertise.setStatus('mandatory')
wfRip6AnnounceRipGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 2, 1, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AnnounceRipGateway.setStatus('mandatory')
wfRip6AnnounceInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 2, 1, 12), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AnnounceInterface.setStatus('mandatory')
wfRip6AnnounceRipMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 6, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRip6AnnounceRipMetric.setStatus('mandatory')
wfRipv6Log = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 3))
wfRipv6LogDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6LogDelete.setStatus('mandatory')
wfRipv6LogDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6LogDisable.setStatus('mandatory')
wfRipv6LogLevel = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("debug", 1), ("trace", 2), ("info", 3), ("warning", 4), ("fault", 5))).clone('info')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6LogLevel.setStatus('mandatory')
wfRipv6LogEvent = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6LogEvent.setStatus('mandatory')
wfRipv6LogEventDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6LogEventDisable.setStatus('mandatory')
wfRipv6LogEvents = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 3, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRipv6LogEvents.setStatus('mandatory')
wfRipv6LogCfgEvents = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 3, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6LogCfgEvents.setStatus('mandatory')
wfRipv6Base = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 4))
wfRipv6BaseDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6BaseDelete.setStatus('mandatory')
wfRipv6BaseDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6BaseDisable.setStatus('mandatory')
wfRipv6BaseState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfRipv6BaseState.setStatus('mandatory')
wfRipv6BaseDiameter = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 16, 1, 2, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfRipv6BaseDiameter.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-RIP6-MIB", wfRip6AnnounceDelete=wfRip6AnnounceDelete, wfRipv6IfStatsInResponses=wfRipv6IfStatsInResponses, wfRipv6IntfDiameter=wfRipv6IntfDiameter, wfRipv6IfStatsOutMsgs=wfRipv6IfStatsOutMsgs, wfRip6AcceptInject=wfRip6AcceptInject, wfRip6AnnounceInterface=wfRip6AnnounceInterface, wfRip6AnnounceAdvertise=wfRip6AnnounceAdvertise, wfRipv6LogDisable=wfRipv6LogDisable, wfRipv6IfStatsOutFullUpdates=wfRipv6IfStatsOutFullUpdates, wfRip6AnnounceIndex=wfRip6AnnounceIndex, wfRipv6Log=wfRipv6Log, wfRipv6IfStatsOutRequests=wfRipv6IfStatsOutRequests, wfRipv6IfStatsInBadResponses=wfRipv6IfStatsInBadResponses, wfRip6AnnounceName=wfRip6AnnounceName, wfRip6AnnounceDisable=wfRip6AnnounceDisable, wfRip6AnnounceRipMetric=wfRip6AnnounceRipMetric, wfRip6AcceptGateway=wfRip6AcceptGateway, wfRipv6IntfSupply=wfRipv6IntfSupply, wfRip6AnnounceExtRouteSource=wfRip6AnnounceExtRouteSource, wfRipv6IfStatsIntfIndex=wfRipv6IfStatsIntfIndex, wfRip6AnnounceTable=wfRip6AnnounceTable, wfRipv6Base=wfRipv6Base, wfRipv6IfTable=wfRipv6IfTable, wfRipv6LogCfgEvents=wfRipv6LogCfgEvents, wfRipv6IfStatsOutResponses=wfRipv6IfStatsOutResponses, wfRip6AcceptTable=wfRip6AcceptTable, wfRip6AnnounceAction=wfRip6AnnounceAction, wfRipv6IntfPoisonedReversed=wfRipv6IntfPoisonedReversed, wfRipv6BaseDisable=wfRipv6BaseDisable, wfRip6AcceptEntry=wfRip6AcceptEntry, wfRip6AcceptDisable=wfRip6AcceptDisable, wfRip6AnnounceEntry=wfRip6AnnounceEntry, wfRipv6IfEntry=wfRipv6IfEntry, wfRip6AnnouncePrefixes=wfRip6AnnouncePrefixes, wfRipv6BaseDiameter=wfRipv6BaseDiameter, wfRipv6IfStatsEntry=wfRipv6IfStatsEntry, wfRipv6IntfTriggeredUpdates=wfRipv6IntfTriggeredUpdates, wfRipv6IntfBroadcastTimer=wfRipv6IntfBroadcastTimer, wfRipv6IntfDefaultRouteListen=wfRipv6IntfDefaultRouteListen, wfRip6AcceptIndex=wfRip6AcceptIndex, wfRip6AcceptPrecedence=wfRip6AcceptPrecedence, wfRip6AcceptLog=wfRip6AcceptLog, wfRip6AnnouncePrecedence=wfRip6AnnouncePrecedence, wfRipv6LogEvent=wfRipv6LogEvent, wfRipv6BaseState=wfRipv6BaseState, wfRipv6IntfEnable=wfRipv6IntfEnable, wfRipv6IntfState=wfRipv6IntfState, wfRip6AcceptInterface=wfRip6AcceptInterface, wfRip6AcceptDelete=wfRip6AcceptDelete, wfRip6AcceptAction=wfRip6AcceptAction, wfRipv6IfStatsInMsgs=wfRipv6IfStatsInMsgs, wfRip6AcceptName=wfRip6AcceptName, wfRip6AnnounceRouteSource=wfRip6AnnounceRouteSource, wfRipv6Group=wfRipv6Group, wfRipv6IntfTimeoutTimer=wfRipv6IntfTimeoutTimer, wfRipv6IfStatsTable=wfRipv6IfStatsTable, wfRipv6IfStatsInBadRoutes=wfRipv6IfStatsInBadRoutes, wfRipv6IfStatsOutRoutesAdvertised=wfRipv6IfStatsOutRoutesAdvertised, wfRip6AcceptPreference=wfRip6AcceptPreference, wfRipv6IntfCreate=wfRipv6IntfCreate, wfRipv6IntfListen=wfRipv6IntfListen, wfRipv6LogLevel=wfRipv6LogLevel, wfRipv6IntfIndex=wfRipv6IntfIndex, wfRipv6BaseDelete=wfRipv6BaseDelete, wfRipv6IfStatsOutTriggeredUpdates=wfRipv6IfStatsOutTriggeredUpdates, wfRip6AcceptPrefixes=wfRip6AcceptPrefixes, wfRipv6LogEvents=wfRipv6LogEvents, wfRipv6LogEventDisable=wfRipv6LogEventDisable, wfRipv6LogDelete=wfRipv6LogDelete, wfRipv6IfStatsInRequests=wfRipv6IfStatsInRequests, wfRipv6IntfHolddownTimer=wfRipv6IntfHolddownTimer, wfRip6AnnounceRipGateway=wfRip6AnnounceRipGateway, wfRipv6IntfDefaultRouteSupply=wfRipv6IntfDefaultRouteSupply)
