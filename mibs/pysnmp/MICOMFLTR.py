#
# PySNMP MIB module MICOMFLTR (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MICOMFLTR
# Produced by pysmi-0.3.4 at Mon Apr 29 20:02:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
micom_oscar, = mibBuilder.importSymbols("MICOM-OSCAR-MIB", "micom-oscar")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, IpAddress, ObjectIdentity, NotificationType, Unsigned32, Integer32, Gauge32, ModuleIdentity, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, MibIdentifier, Bits, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "ObjectIdentity", "NotificationType", "Unsigned32", "Integer32", "Gauge32", "ModuleIdentity", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "MibIdentifier", "Bits", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
mcmfilter = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 12))
class NetNumber(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

class SapType(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(2, 2)
    fixedLength = 2

mcmipxMacFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 1), )
if mibBuilder.loadTexts: mcmipxMacFltrTable.setStatus('obsolete')
mcmipxMacFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 1, 1), ).setIndexNames((0, "MICOMFLTR", "mcmipxMacFltrSysInstance"), (0, "MICOMFLTR", "mcmipxMacFltrId"))
if mibBuilder.loadTexts: mcmipxMacFltrEntry.setStatus('obsolete')
mcmipxMacFltrSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxMacFltrSysInstance.setStatus('obsolete')
mcmipxMacFltrId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxMacFltrId.setStatus('obsolete')
mcmipxMacFltrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxMacFltrStatus.setStatus('obsolete')
mcmipxMacFltrSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxMacFltrSrcAddress.setStatus('obsolete')
mcmipxMacFltrDstAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxMacFltrDstAddress.setStatus('obsolete')
mcmipxMacFltrSrcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 1, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxMacFltrSrcMask.setStatus('obsolete')
mcmipxMacFltrDstMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 1, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxMacFltrDstMask.setStatus('obsolete')
mcmipxMacFltrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxMacFltrPort.setStatus('obsolete')
mcmipxMacFltrDir = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("incoming", 1), ("outgoing", 2), ("both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxMacFltrDir.setStatus('obsolete')
mcmipxNetFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 2), )
if mibBuilder.loadTexts: mcmipxNetFltrTable.setStatus('obsolete')
mcmipxNetFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 2, 1), ).setIndexNames((0, "MICOMFLTR", "mcmipxNetFltrSysInstance"), (0, "MICOMFLTR", "mcmipxNetFltrId"))
if mibBuilder.loadTexts: mcmipxNetFltrEntry.setStatus('obsolete')
mcmipxNetFltrSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxNetFltrSysInstance.setStatus('obsolete')
mcmipxNetFltrId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxNetFltrId.setStatus('obsolete')
mcmipxNetFltrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxNetFltrStatus.setStatus('obsolete')
mcmipxNetFltrNetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 2, 1, 4), NetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxNetFltrNetNumber.setStatus('obsolete')
mcmipxNetFltrSapType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 2, 1, 5), SapType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxNetFltrSapType.setStatus('obsolete')
mcmipxNetFltrNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 2, 1, 6), NetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxNetFltrNetMask.setStatus('obsolete')
mcmipxNetFltrSapMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 2, 1, 7), SapType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxNetFltrSapMask.setStatus('obsolete')
mcmipxNetFltrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxNetFltrPort.setStatus('obsolete')
mcmipxNetFltrDir = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("incoming", 1), ("outgoing", 2), ("both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxNetFltrDir.setStatus('obsolete')
nvmipxMacFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 3), )
if mibBuilder.loadTexts: nvmipxMacFltrTable.setStatus('obsolete')
nvmipxMacFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 3, 1), ).setIndexNames((0, "MICOMFLTR", "nvmipxMacFltrSysInstance"), (0, "MICOMFLTR", "nvmipxMacFltrId"))
if mibBuilder.loadTexts: nvmipxMacFltrEntry.setStatus('obsolete')
nvmipxMacFltrSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 3, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxMacFltrSysInstance.setStatus('obsolete')
nvmipxMacFltrId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxMacFltrId.setStatus('obsolete')
nvmipxMacFltrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxMacFltrStatus.setStatus('obsolete')
nvmipxMacFltrSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 3, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxMacFltrSrcAddress.setStatus('obsolete')
nvmipxMacFltrDstAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 3, 1, 5), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxMacFltrDstAddress.setStatus('obsolete')
nvmipxMacFltrSrcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 3, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxMacFltrSrcMask.setStatus('obsolete')
nvmipxMacFltrDstMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 3, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxMacFltrDstMask.setStatus('obsolete')
nvmipxMacFltrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 3, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxMacFltrPort.setStatus('obsolete')
nvmipxMacFltrDir = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("incoming", 1), ("outgoing", 2), ("both", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxMacFltrDir.setStatus('obsolete')
nvmipxNetFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 4), )
if mibBuilder.loadTexts: nvmipxNetFltrTable.setStatus('obsolete')
nvmipxNetFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 4, 1), ).setIndexNames((0, "MICOMFLTR", "nvmipxNetFltrSysInstance"), (0, "MICOMFLTR", "nvmipxNetFltrId"))
if mibBuilder.loadTexts: nvmipxNetFltrEntry.setStatus('obsolete')
nvmipxNetFltrSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 4, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxNetFltrSysInstance.setStatus('obsolete')
nvmipxNetFltrId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxNetFltrId.setStatus('obsolete')
nvmipxNetFltrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxNetFltrStatus.setStatus('obsolete')
nvmipxNetFltrNetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 4, 1, 4), NetNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxNetFltrNetNumber.setStatus('obsolete')
nvmipxNetFltrSapType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 4, 1, 5), SapType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxNetFltrSapType.setStatus('obsolete')
nvmipxNetFltrNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 4, 1, 6), NetNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxNetFltrNetMask.setStatus('obsolete')
nvmipxNetFltrSapMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 4, 1, 7), SapType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxNetFltrSapMask.setStatus('obsolete')
nvmipxNetFltrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 4, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxNetFltrPort.setStatus('obsolete')
nvmipxNetFltrDir = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("incoming", 1), ("outgoing", 2), ("both", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxNetFltrDir.setStatus('obsolete')
mcmipxSysFilterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 19))
mcmipxSysRipFilter = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 19, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inclusive", 1), ("exclusive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxSysRipFilter.setStatus('mandatory')
mcmipxSysSapFilter = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 19, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inclusive", 1), ("exclusive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxSysSapFilter.setStatus('mandatory')
mcmipxSysNetFilter = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 19, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inclusive", 1), ("exclusive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmipxSysNetFilter.setStatus('mandatory')
nvmipxSysFilterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 20))
nvmipxSysRipFilter = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inclusive", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxSysRipFilter.setStatus('mandatory')
nvmipxSysSapFilter = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 20, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inclusive", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxSysSapFilter.setStatus('mandatory')
nvmipxSysNetFilter = MibScalar((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 20, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inclusive", 1), ("exclusive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmipxSysNetFilter.setStatus('mandatory')
mcmIpxRipFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 21), )
if mibBuilder.loadTexts: mcmIpxRipFltrTable.setStatus('mandatory')
mcmIpxRipFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 21, 1), ).setIndexNames((0, "MICOMFLTR", "mcmIpxRipFltrSysInstance"), (0, "MICOMFLTR", "mcmIpxRipFltrNetNumber"))
if mibBuilder.loadTexts: mcmIpxRipFltrEntry.setStatus('mandatory')
mcmIpxRipFltrSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpxRipFltrSysInstance.setStatus('mandatory')
mcmIpxRipFltrNetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 21, 1, 2), NetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpxRipFltrNetNumber.setStatus('mandatory')
mcmIpxRipFltrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("wan", 1), ("ethernet", 2), ("both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpxRipFltrPort.setStatus('mandatory')
mcmIpxSapFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 22), )
if mibBuilder.loadTexts: mcmIpxSapFltrTable.setStatus('mandatory')
mcmIpxSapFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 22, 1), ).setIndexNames((0, "MICOMFLTR", "mcmIpxSapFltrSysInstance"), (0, "MICOMFLTR", "mcmIpxSapFltrSapType"))
if mibBuilder.loadTexts: mcmIpxSapFltrEntry.setStatus('mandatory')
mcmIpxSapFltrSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpxSapFltrSysInstance.setStatus('mandatory')
mcmIpxSapFltrSapType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 22, 1, 2), SapType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpxSapFltrSapType.setStatus('mandatory')
mcmIpxSapFltrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 22, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("wan", 1), ("ethernet", 2), ("both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpxSapFltrPort.setStatus('mandatory')
mcmIpxNetFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 23), )
if mibBuilder.loadTexts: mcmIpxNetFltrTable.setStatus('mandatory')
mcmIpxNetFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 23, 1), ).setIndexNames((0, "MICOMFLTR", "mcmIpxNetFltrSysInstance"), (0, "MICOMFLTR", "mcmIpxNetFltrNetNumber"))
if mibBuilder.loadTexts: mcmIpxNetFltrEntry.setStatus('mandatory')
mcmIpxNetFltrSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpxNetFltrSysInstance.setStatus('mandatory')
mcmIpxNetFltrNetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 23, 1, 2), NetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpxNetFltrNetNumber.setStatus('mandatory')
mcmIpxNetFltrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 23, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("wan", 1), ("ethernet", 2), ("both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpxNetFltrPort.setStatus('mandatory')
mcmIpxNetFltrDir = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 23, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("source", 1), ("destination", 2), ("both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpxNetFltrDir.setStatus('mandatory')
nvmIpxRipFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 24), )
if mibBuilder.loadTexts: nvmIpxRipFltrTable.setStatus('mandatory')
nvmIpxRipFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 24, 1), ).setIndexNames((0, "MICOMFLTR", "nvmIpxRipFltrSysInstance"), (0, "MICOMFLTR", "nvmIpxRipFltrNetNumber"))
if mibBuilder.loadTexts: nvmIpxRipFltrEntry.setStatus('mandatory')
nvmIpxRipFltrSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 24, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpxRipFltrSysInstance.setStatus('mandatory')
nvmIpxRipFltrNetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 24, 1, 2), NetNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpxRipFltrNetNumber.setStatus('mandatory')
nvmIpxRipFltrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 24, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("wan", 1), ("ethernet", 2), ("both", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpxRipFltrPort.setStatus('mandatory')
nvmIpxRipFltrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 24, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6))).clone(namedValues=NamedValues(("active", 1), ("createAndGo", 4), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpxRipFltrRowStatus.setStatus('mandatory')
nvmIpxSapFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 25), )
if mibBuilder.loadTexts: nvmIpxSapFltrTable.setStatus('mandatory')
nvmIpxSapFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 25, 1), ).setIndexNames((0, "MICOMFLTR", "nvmIpxSapFltrSysInstance"), (0, "MICOMFLTR", "nvmIpxSapFltrSapType"))
if mibBuilder.loadTexts: nvmIpxSapFltrEntry.setStatus('mandatory')
nvmIpxSapFltrSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpxSapFltrSysInstance.setStatus('mandatory')
nvmIpxSapFltrSapType = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 25, 1, 2), SapType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpxSapFltrSapType.setStatus('mandatory')
nvmIpxSapFltrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 25, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("wan", 1), ("ethernet", 2), ("both", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpxSapFltrPort.setStatus('mandatory')
nvmIpxSapFltrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 25, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6))).clone(namedValues=NamedValues(("active", 1), ("createAndGo", 4), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpxSapFltrRowStatus.setStatus('mandatory')
nvmIpxNetFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 26), )
if mibBuilder.loadTexts: nvmIpxNetFltrTable.setStatus('mandatory')
nvmIpxNetFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 26, 1), ).setIndexNames((0, "MICOMFLTR", "nvmIpxNetFltrSysInstance"), (0, "MICOMFLTR", "nvmIpxNetFltrNetNumber"))
if mibBuilder.loadTexts: nvmIpxNetFltrEntry.setStatus('mandatory')
nvmIpxNetFltrSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpxNetFltrSysInstance.setStatus('mandatory')
nvmIpxNetFltrNetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 26, 1, 2), NetNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpxNetFltrNetNumber.setStatus('mandatory')
nvmIpxNetFltrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 26, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("wan", 1), ("ethernet", 2), ("both", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpxNetFltrPort.setStatus('mandatory')
nvmIpxNetFltrDir = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 26, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("source", 1), ("destination", 2), ("both", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpxNetFltrDir.setStatus('mandatory')
nvmIpxNetFltrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 26, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6))).clone(namedValues=NamedValues(("active", 1), ("createAndGo", 4), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpxNetFltrRowStatus.setStatus('mandatory')
mcmIpRipInFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 5), )
if mibBuilder.loadTexts: mcmIpRipInFltrTable.setStatus('mandatory')
mcmIpRipInFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 5, 1), ).setIndexNames((0, "MICOMFLTR", "mcmIpRipInFltrMask"), (0, "MICOMFLTR", "mcmIpRipInFltrAddr"))
if mibBuilder.loadTexts: mcmIpRipInFltrEntry.setStatus('mandatory')
mcmIpRipInFltrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 5, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpRipInFltrMask.setStatus('mandatory')
mcmIpRipInFltrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpRipInFltrAddr.setStatus('mandatory')
mcmIpRipInFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forward", 1), ("discard", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpRipInFltrAction.setStatus('mandatory')
mcmIpRipOutFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 6), )
if mibBuilder.loadTexts: mcmIpRipOutFltrTable.setStatus('mandatory')
mcmIpRipOutFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 6, 1), ).setIndexNames((0, "MICOMFLTR", "mcmIpRipOutFltrMask"), (0, "MICOMFLTR", "mcmIpRipOutFltrAddr"))
if mibBuilder.loadTexts: mcmIpRipOutFltrEntry.setStatus('mandatory')
mcmIpRipOutFltrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 6, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpRipOutFltrMask.setStatus('mandatory')
mcmIpRipOutFltrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 6, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpRipOutFltrAddr.setStatus('mandatory')
mcmIpRipOutFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forward", 1), ("discard", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpRipOutFltrAction.setStatus('mandatory')
mcmIpRipGwyFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 7), )
if mibBuilder.loadTexts: mcmIpRipGwyFltrTable.setStatus('mandatory')
mcmIpRipGwyFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 7, 1), ).setIndexNames((0, "MICOMFLTR", "mcmIpRipGwyFltrMask"), (0, "MICOMFLTR", "mcmIpRipGwyFltrAddr"))
if mibBuilder.loadTexts: mcmIpRipGwyFltrEntry.setStatus('mandatory')
mcmIpRipGwyFltrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpRipGwyFltrMask.setStatus('mandatory')
mcmIpRipGwyFltrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 7, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpRipGwyFltrAddr.setStatus('mandatory')
mcmIpRipGwyFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forward", 1), ("discard", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpRipGwyFltrAction.setStatus('mandatory')
mcmIpOspfOutFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 8), )
if mibBuilder.loadTexts: mcmIpOspfOutFltrTable.setStatus('mandatory')
mcmIpOspfOutFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 8, 1), ).setIndexNames((0, "MICOMFLTR", "mcmIpOspfOutFltrMask"), (0, "MICOMFLTR", "mcmIpOspfOutFltrAddr"))
if mibBuilder.loadTexts: mcmIpOspfOutFltrEntry.setStatus('mandatory')
mcmIpOspfOutFltrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpOspfOutFltrMask.setStatus('mandatory')
mcmIpOspfOutFltrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpOspfOutFltrAddr.setStatus('mandatory')
mcmIpOspfOutFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forward", 1), ("discard", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpOspfOutFltrAction.setStatus('mandatory')
mcmIpFwdPortInFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 9), )
if mibBuilder.loadTexts: mcmIpFwdPortInFltrTable.setStatus('mandatory')
mcmIpFwdPortInFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 9, 1), ).setIndexNames((0, "MICOMFLTR", "mcmIpFwdPortInFltrPortNo"), (0, "MICOMFLTR", "mcmIpFwdPortInFltrMask"), (0, "MICOMFLTR", "mcmIpFwdPortInFltrAddr"), (0, "MICOMFLTR", "mcmIpFwdPortInFltrProtId"), (0, "MICOMFLTR", "mcmIpFwdPortInFltrPortId"))
if mibBuilder.loadTexts: mcmIpFwdPortInFltrEntry.setStatus('mandatory')
mcmIpFwdPortInFltrPortNo = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpFwdPortInFltrPortNo.setStatus('mandatory')
mcmIpFwdPortInFltrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 9, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpFwdPortInFltrMask.setStatus('mandatory')
mcmIpFwdPortInFltrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 9, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpFwdPortInFltrAddr.setStatus('mandatory')
mcmIpFwdPortInFltrProtId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpFwdPortInFltrProtId.setStatus('mandatory')
mcmIpFwdPortInFltrPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 9, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpFwdPortInFltrPortId.setStatus('mandatory')
mcmIpFwdPortInFltrSrcDst = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("source", 1), ("destination", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpFwdPortInFltrSrcDst.setStatus('mandatory')
mcmIpFwdPortInFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forward", 1), ("discard", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpFwdPortInFltrAction.setStatus('mandatory')
mcmIpFwdPortOutFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 10), )
if mibBuilder.loadTexts: mcmIpFwdPortOutFltrTable.setStatus('mandatory')
mcmIpFwdPortOutFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 10, 1), ).setIndexNames((0, "MICOMFLTR", "mcmIpFwdPortOutFltrPortNo"), (0, "MICOMFLTR", "mcmIpFwdPortOutFltrMask"), (0, "MICOMFLTR", "mcmIpFwdPortOutFltrAddr"), (0, "MICOMFLTR", "mcmIpFwdPortOutFltrProtId"), (0, "MICOMFLTR", "mcmIpFwdPortOutFltrPortId"))
if mibBuilder.loadTexts: mcmIpFwdPortOutFltrEntry.setStatus('mandatory')
mcmIpFwdPortOutFltrPortNo = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpFwdPortOutFltrPortNo.setStatus('mandatory')
mcmIpFwdPortOutFltrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 10, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpFwdPortOutFltrMask.setStatus('mandatory')
mcmIpFwdPortOutFltrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 10, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpFwdPortOutFltrAddr.setStatus('mandatory')
mcmIpFwdPortOutFltrProtId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpFwdPortOutFltrProtId.setStatus('mandatory')
mcmIpFwdPortOutFltrPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpFwdPortOutFltrPortId.setStatus('mandatory')
mcmIpFwdPortOutFltrSrcDst = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("source", 1), ("destination", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpFwdPortOutFltrSrcDst.setStatus('mandatory')
mcmIpFwdPortOutFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forward", 1), ("discard", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpFwdPortOutFltrAction.setStatus('mandatory')
mcmIpSysFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 11), )
if mibBuilder.loadTexts: mcmIpSysFltrTable.setStatus('mandatory')
mcmIpSysFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 11, 1), ).setIndexNames((0, "MICOMFLTR", "mcmIpSysFltrDstMask"), (0, "MICOMFLTR", "mcmIpSysFltrDstAddr"), (0, "MICOMFLTR", "mcmIpSysFltrSrcMask"), (0, "MICOMFLTR", "mcmIpSysFltrSrcAddr"), (0, "MICOMFLTR", "mcmIpSysFltrProtId"), (0, "MICOMFLTR", "mcmIpSysFltrPortId"))
if mibBuilder.loadTexts: mcmIpSysFltrEntry.setStatus('mandatory')
mcmIpSysFltrDstMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 11, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpSysFltrDstMask.setStatus('mandatory')
mcmIpSysFltrDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 11, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpSysFltrDstAddr.setStatus('mandatory')
mcmIpSysFltrSrcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 11, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpSysFltrSrcMask.setStatus('mandatory')
mcmIpSysFltrSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 11, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpSysFltrSrcAddr.setStatus('mandatory')
mcmIpSysFltrProtId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 11, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpSysFltrProtId.setStatus('mandatory')
mcmIpSysFltrPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpSysFltrPortId.setStatus('mandatory')
mcmIpSysFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forward", 1), ("discard", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mcmIpSysFltrAction.setStatus('mandatory')
nvmIpRipInFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 12), )
if mibBuilder.loadTexts: nvmIpRipInFltrTable.setStatus('mandatory')
nvmIpRipInFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 12, 1), ).setIndexNames((0, "MICOMFLTR", "nvmIpRipInFltrMask"), (0, "MICOMFLTR", "nvmIpRipInFltrAddr"))
if mibBuilder.loadTexts: nvmIpRipInFltrEntry.setStatus('mandatory')
nvmIpRipInFltrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 12, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpRipInFltrMask.setStatus('mandatory')
nvmIpRipInFltrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 12, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpRipInFltrAddr.setStatus('mandatory')
nvmIpRipInFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forward", 1), ("discard", 2), ("invalid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpRipInFltrAction.setStatus('mandatory')
nvmIpRipOutFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 13), )
if mibBuilder.loadTexts: nvmIpRipOutFltrTable.setStatus('mandatory')
nvmIpRipOutFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 13, 1), ).setIndexNames((0, "MICOMFLTR", "nvmIpRipOutFltrMask"), (0, "MICOMFLTR", "nvmIpRipOutFltrAddr"))
if mibBuilder.loadTexts: nvmIpRipOutFltrEntry.setStatus('mandatory')
nvmIpRipOutFltrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 13, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpRipOutFltrMask.setStatus('mandatory')
nvmIpRipOutFltrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 13, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpRipOutFltrAddr.setStatus('mandatory')
nvmIpRipOutFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forward", 1), ("discard", 2), ("invalid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpRipOutFltrAction.setStatus('mandatory')
nvmIpRipGwyFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 14), )
if mibBuilder.loadTexts: nvmIpRipGwyFltrTable.setStatus('mandatory')
nvmIpRipGwyFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 14, 1), ).setIndexNames((0, "MICOMFLTR", "nvmIpRipGwyFltrMask"), (0, "MICOMFLTR", "nvmIpRipGwyFltrAddr"))
if mibBuilder.loadTexts: nvmIpRipGwyFltrEntry.setStatus('mandatory')
nvmIpRipGwyFltrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 14, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpRipGwyFltrMask.setStatus('mandatory')
nvmIpRipGwyFltrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 14, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpRipGwyFltrAddr.setStatus('mandatory')
nvmIpRipGwyFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forward", 1), ("discard", 2), ("invalid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpRipGwyFltrAction.setStatus('mandatory')
nvmIpOspfOutFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 15), )
if mibBuilder.loadTexts: nvmIpOspfOutFltrTable.setStatus('mandatory')
nvmIpOspfOutFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 15, 1), ).setIndexNames((0, "MICOMFLTR", "nvmIpOspfOutFltrMask"), (0, "MICOMFLTR", "nvmIpOspfOutFltrAddr"))
if mibBuilder.loadTexts: nvmIpOspfOutFltrEntry.setStatus('mandatory')
nvmIpOspfOutFltrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 15, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpOspfOutFltrMask.setStatus('mandatory')
nvmIpOspfOutFltrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 15, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpOspfOutFltrAddr.setStatus('mandatory')
nvmIpOspfOutFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forward", 1), ("discard", 2), ("invalid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpOspfOutFltrAction.setStatus('mandatory')
nvmIpFwdPortInFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 16), )
if mibBuilder.loadTexts: nvmIpFwdPortInFltrTable.setStatus('mandatory')
nvmIpFwdPortInFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 16, 1), ).setIndexNames((0, "MICOMFLTR", "nvmIpFwdPortInFltrPortNo"), (0, "MICOMFLTR", "nvmIpFwdPortInFltrMask"), (0, "MICOMFLTR", "nvmIpFwdPortInFltrAddr"), (0, "MICOMFLTR", "nvmIpFwdPortInFltrProtId"), (0, "MICOMFLTR", "nvmIpFwdPortInFltrPortId"))
if mibBuilder.loadTexts: nvmIpFwdPortInFltrEntry.setStatus('mandatory')
nvmIpFwdPortInFltrPortNo = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpFwdPortInFltrPortNo.setStatus('mandatory')
nvmIpFwdPortInFltrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 16, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpFwdPortInFltrMask.setStatus('mandatory')
nvmIpFwdPortInFltrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 16, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpFwdPortInFltrAddr.setStatus('mandatory')
nvmIpFwdPortInFltrProtId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 16, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpFwdPortInFltrProtId.setStatus('mandatory')
nvmIpFwdPortInFltrPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 16, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpFwdPortInFltrPortId.setStatus('mandatory')
nvmIpFwdPortInFltrSrcDst = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("source", 1), ("destination", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpFwdPortInFltrSrcDst.setStatus('mandatory')
nvmIpFwdPortInFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forward", 1), ("discard", 2), ("invalid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpFwdPortInFltrAction.setStatus('mandatory')
nvmIpFwdPortOutFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 17), )
if mibBuilder.loadTexts: nvmIpFwdPortOutFltrTable.setStatus('mandatory')
nvmIpFwdPortOutFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 17, 1), ).setIndexNames((0, "MICOMFLTR", "nvmIpFwdPortOutFltrPortNo"), (0, "MICOMFLTR", "nvmIpFwdPortOutFltrMask"), (0, "MICOMFLTR", "nvmIpFwdPortOutFltrAddr"), (0, "MICOMFLTR", "nvmIpFwdPortOutFltrProtId"), (0, "MICOMFLTR", "nvmIpFwdPortOutFltrPortId"))
if mibBuilder.loadTexts: nvmIpFwdPortOutFltrEntry.setStatus('mandatory')
nvmIpFwdPortOutFltrPortNo = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpFwdPortOutFltrPortNo.setStatus('mandatory')
nvmIpFwdPortOutFltrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 17, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpFwdPortOutFltrMask.setStatus('mandatory')
nvmIpFwdPortOutFltrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 17, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpFwdPortOutFltrAddr.setStatus('mandatory')
nvmIpFwdPortOutFltrProtId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 17, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpFwdPortOutFltrProtId.setStatus('mandatory')
nvmIpFwdPortOutFltrPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 17, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpFwdPortOutFltrPortId.setStatus('mandatory')
nvmIpFwdPortOutFltrSrcDst = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 17, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("source", 1), ("destination", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpFwdPortOutFltrSrcDst.setStatus('mandatory')
nvmIpFwdPortOutFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 17, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forward", 1), ("discard", 2), ("invalid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpFwdPortOutFltrAction.setStatus('mandatory')
nvmIpSysFltrTable = MibTable((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 18), )
if mibBuilder.loadTexts: nvmIpSysFltrTable.setStatus('mandatory')
nvmIpSysFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 18, 1), ).setIndexNames((0, "MICOMFLTR", "nvmIpSysFltrDstMask"), (0, "MICOMFLTR", "nvmIpSysFltrDstAddr"), (0, "MICOMFLTR", "nvmIpSysFltrSrcMask"), (0, "MICOMFLTR", "nvmIpSysFltrSrcAddr"), (0, "MICOMFLTR", "nvmIpSysFltrProtId"), (0, "MICOMFLTR", "nvmIpSysFltrPortId"))
if mibBuilder.loadTexts: nvmIpSysFltrEntry.setStatus('mandatory')
nvmIpSysFltrDstMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 18, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpSysFltrDstMask.setStatus('mandatory')
nvmIpSysFltrDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 18, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpSysFltrDstAddr.setStatus('mandatory')
nvmIpSysFltrSrcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 18, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpSysFltrSrcMask.setStatus('mandatory')
nvmIpSysFltrSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 18, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpSysFltrSrcAddr.setStatus('mandatory')
nvmIpSysFltrProtId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 18, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpSysFltrProtId.setStatus('mandatory')
nvmIpSysFltrPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 18, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpSysFltrPortId.setStatus('mandatory')
nvmIpSysFltrAction = MibTableColumn((1, 3, 6, 1, 4, 1, 335, 1, 4, 12, 18, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("forward", 1), ("discard", 2), ("invalid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nvmIpSysFltrAction.setStatus('mandatory')
mibBuilder.exportSymbols("MICOMFLTR", mcmIpxRipFltrEntry=mcmIpxRipFltrEntry, mcmipxNetFltrSapMask=mcmipxNetFltrSapMask, nvmIpOspfOutFltrMask=nvmIpOspfOutFltrMask, nvmIpxNetFltrPort=nvmIpxNetFltrPort, nvmipxNetFltrId=nvmipxNetFltrId, nvmipxNetFltrSysInstance=nvmipxNetFltrSysInstance, nvmIpSysFltrProtId=nvmIpSysFltrProtId, SapType=SapType, mcmIpOspfOutFltrAddr=mcmIpOspfOutFltrAddr, mcmIpSysFltrSrcMask=mcmIpSysFltrSrcMask, mcmipxMacFltrSrcMask=mcmipxMacFltrSrcMask, mcmipxMacFltrDstAddress=mcmipxMacFltrDstAddress, nvmIpxRipFltrNetNumber=nvmIpxRipFltrNetNumber, mcmipxMacFltrSrcAddress=mcmipxMacFltrSrcAddress, mcmipxSysSapFilter=mcmipxSysSapFilter, nvmipxMacFltrSrcMask=nvmipxMacFltrSrcMask, mcmIpRipGwyFltrTable=mcmIpRipGwyFltrTable, mcmIpFwdPortInFltrTable=mcmIpFwdPortInFltrTable, mcmIpSysFltrDstAddr=mcmIpSysFltrDstAddr, mcmipxMacFltrDir=mcmipxMacFltrDir, mcmipxSysNetFilter=mcmipxSysNetFilter, nvmIpxNetFltrRowStatus=nvmIpxNetFltrRowStatus, mcmipxMacFltrDstMask=mcmipxMacFltrDstMask, nvmIpxNetFltrTable=nvmIpxNetFltrTable, mcmIpFwdPortInFltrMask=mcmIpFwdPortInFltrMask, nvmIpSysFltrDstMask=nvmIpSysFltrDstMask, mcmipxNetFltrDir=mcmipxNetFltrDir, nvmIpFwdPortInFltrPortId=nvmIpFwdPortInFltrPortId, nvmipxSysRipFilter=nvmipxSysRipFilter, mcmipxSysFilterGroup=mcmipxSysFilterGroup, mcmipxMacFltrTable=mcmipxMacFltrTable, nvmIpxSapFltrPort=nvmIpxSapFltrPort, nvmIpRipInFltrAddr=nvmIpRipInFltrAddr, nvmIpRipInFltrMask=nvmIpRipInFltrMask, nvmIpSysFltrAction=nvmIpSysFltrAction, nvmIpxRipFltrTable=nvmIpxRipFltrTable, nvmIpxRipFltrEntry=nvmIpxRipFltrEntry, nvmIpFwdPortOutFltrMask=nvmIpFwdPortOutFltrMask, mcmIpxNetFltrEntry=mcmIpxNetFltrEntry, nvmIpOspfOutFltrEntry=nvmIpOspfOutFltrEntry, nvmIpxRipFltrRowStatus=nvmIpxRipFltrRowStatus, nvmIpFwdPortInFltrAction=nvmIpFwdPortInFltrAction, mcmIpFwdPortOutFltrMask=mcmIpFwdPortOutFltrMask, nvmIpOspfOutFltrAddr=nvmIpOspfOutFltrAddr, mcmIpSysFltrProtId=mcmIpSysFltrProtId, nvmIpxNetFltrEntry=nvmIpxNetFltrEntry, mcmIpRipInFltrAction=mcmIpRipInFltrAction, mcmIpFwdPortInFltrPortNo=mcmIpFwdPortInFltrPortNo, mcmIpRipGwyFltrAction=mcmIpRipGwyFltrAction, mcmIpxSapFltrEntry=mcmIpxSapFltrEntry, mcmIpRipInFltrMask=mcmIpRipInFltrMask, mcmIpRipOutFltrMask=mcmIpRipOutFltrMask, nvmIpRipOutFltrAddr=nvmIpRipOutFltrAddr, mcmIpxRipFltrPort=mcmIpxRipFltrPort, mcmfilter=mcmfilter, mcmIpxNetFltrPort=mcmIpxNetFltrPort, nvmIpFwdPortOutFltrEntry=nvmIpFwdPortOutFltrEntry, nvmipxSysNetFilter=nvmipxSysNetFilter, nvmIpFwdPortInFltrEntry=nvmIpFwdPortInFltrEntry, nvmIpFwdPortOutFltrTable=nvmIpFwdPortOutFltrTable, nvmipxMacFltrId=nvmipxMacFltrId, mcmIpxRipFltrSysInstance=mcmIpxRipFltrSysInstance, mcmIpFwdPortOutFltrProtId=mcmIpFwdPortOutFltrProtId, nvmipxMacFltrDstMask=nvmipxMacFltrDstMask, mcmIpFwdPortInFltrSrcDst=mcmIpFwdPortInFltrSrcDst, nvmIpRipOutFltrMask=nvmIpRipOutFltrMask, mcmIpSysFltrTable=mcmIpSysFltrTable, nvmIpFwdPortOutFltrSrcDst=nvmIpFwdPortOutFltrSrcDst, mcmipxNetFltrNetNumber=mcmipxNetFltrNetNumber, mcmIpRipGwyFltrMask=mcmIpRipGwyFltrMask, nvmIpxRipFltrPort=nvmIpxRipFltrPort, nvmipxNetFltrStatus=nvmipxNetFltrStatus, nvmIpSysFltrPortId=nvmIpSysFltrPortId, nvmIpxSapFltrTable=nvmIpxSapFltrTable, mcmipxSysRipFilter=mcmipxSysRipFilter, nvmIpFwdPortInFltrAddr=nvmIpFwdPortInFltrAddr, mcmIpFwdPortOutFltrSrcDst=mcmIpFwdPortOutFltrSrcDst, nvmIpSysFltrEntry=nvmIpSysFltrEntry, mcmIpxRipFltrNetNumber=mcmIpxRipFltrNetNumber, nvmIpFwdPortInFltrTable=nvmIpFwdPortInFltrTable, nvmIpFwdPortOutFltrAction=nvmIpFwdPortOutFltrAction, nvmIpRipGwyFltrAction=nvmIpRipGwyFltrAction, mcmipxMacFltrEntry=mcmipxMacFltrEntry, mcmIpxNetFltrDir=mcmIpxNetFltrDir, nvmIpFwdPortInFltrMask=nvmIpFwdPortInFltrMask, mcmipxMacFltrId=mcmipxMacFltrId, mcmIpRipGwyFltrEntry=mcmIpRipGwyFltrEntry, nvmIpFwdPortOutFltrAddr=nvmIpFwdPortOutFltrAddr, mcmIpxNetFltrTable=mcmIpxNetFltrTable, nvmipxNetFltrNetMask=nvmipxNetFltrNetMask, nvmipxNetFltrEntry=nvmipxNetFltrEntry, mcmipxNetFltrPort=mcmipxNetFltrPort, mcmIpRipInFltrTable=mcmIpRipInFltrTable, nvmIpRipGwyFltrTable=nvmIpRipGwyFltrTable, mcmIpFwdPortInFltrAction=mcmIpFwdPortInFltrAction, nvmIpRipInFltrTable=nvmIpRipInFltrTable, nvmIpSysFltrSrcAddr=nvmIpSysFltrSrcAddr, mcmipxMacFltrSysInstance=mcmipxMacFltrSysInstance, mcmIpxNetFltrNetNumber=mcmIpxNetFltrNetNumber, mcmIpOspfOutFltrMask=mcmIpOspfOutFltrMask, mcmIpxSapFltrTable=mcmIpxSapFltrTable, mcmIpSysFltrPortId=mcmIpSysFltrPortId, mcmipxMacFltrPort=mcmipxMacFltrPort, nvmIpFwdPortOutFltrPortNo=nvmIpFwdPortOutFltrPortNo, nvmipxNetFltrPort=nvmipxNetFltrPort, mcmIpOspfOutFltrAction=mcmIpOspfOutFltrAction, nvmIpFwdPortOutFltrPortId=nvmIpFwdPortOutFltrPortId, mcmIpSysFltrDstMask=mcmIpSysFltrDstMask, nvmIpRipOutFltrTable=nvmIpRipOutFltrTable, mcmipxNetFltrTable=mcmipxNetFltrTable, nvmIpSysFltrDstAddr=nvmIpSysFltrDstAddr, nvmipxMacFltrSrcAddress=nvmipxMacFltrSrcAddress, nvmipxMacFltrDir=nvmipxMacFltrDir, nvmIpSysFltrSrcMask=nvmIpSysFltrSrcMask, nvmipxMacFltrTable=nvmipxMacFltrTable, mcmIpFwdPortOutFltrPortNo=mcmIpFwdPortOutFltrPortNo, nvmipxMacFltrSysInstance=nvmipxMacFltrSysInstance, nvmIpOspfOutFltrAction=nvmIpOspfOutFltrAction, mcmIpRipOutFltrAddr=mcmIpRipOutFltrAddr, nvmIpFwdPortOutFltrProtId=nvmIpFwdPortOutFltrProtId, mcmIpFwdPortInFltrEntry=mcmIpFwdPortInFltrEntry, nvmIpRipGwyFltrAddr=nvmIpRipGwyFltrAddr, nvmipxNetFltrSapMask=nvmipxNetFltrSapMask, nvmIpRipOutFltrAction=nvmIpRipOutFltrAction, mcmipxNetFltrSysInstance=mcmipxNetFltrSysInstance, mcmIpxSapFltrSapType=mcmIpxSapFltrSapType, mcmipxMacFltrStatus=mcmipxMacFltrStatus, mcmIpRipOutFltrAction=mcmIpRipOutFltrAction, mcmIpFwdPortOutFltrTable=mcmIpFwdPortOutFltrTable, mcmIpxSapFltrSysInstance=mcmIpxSapFltrSysInstance, nvmIpxSapFltrEntry=nvmIpxSapFltrEntry, mcmipxNetFltrSapType=mcmipxNetFltrSapType, nvmIpxSapFltrRowStatus=nvmIpxSapFltrRowStatus, mcmipxNetFltrStatus=mcmipxNetFltrStatus, mcmIpSysFltrEntry=mcmIpSysFltrEntry, mcmIpFwdPortInFltrAddr=mcmIpFwdPortInFltrAddr, mcmIpOspfOutFltrEntry=mcmIpOspfOutFltrEntry, mcmipxNetFltrNetMask=mcmipxNetFltrNetMask, nvmipxNetFltrDir=nvmipxNetFltrDir, mcmipxNetFltrEntry=mcmipxNetFltrEntry, nvmipxNetFltrSapType=nvmipxNetFltrSapType, nvmipxSysFilterGroup=nvmipxSysFilterGroup, mcmIpRipOutFltrTable=mcmIpRipOutFltrTable, nvmipxNetFltrTable=nvmipxNetFltrTable, nvmIpxSapFltrSapType=nvmIpxSapFltrSapType, nvmipxMacFltrStatus=nvmipxMacFltrStatus, NetNumber=NetNumber, mcmIpRipOutFltrEntry=mcmIpRipOutFltrEntry, mcmIpxSapFltrPort=mcmIpxSapFltrPort, nvmIpRipInFltrEntry=nvmIpRipInFltrEntry, mcmIpFwdPortOutFltrAddr=mcmIpFwdPortOutFltrAddr, nvmIpxRipFltrSysInstance=nvmIpxRipFltrSysInstance, nvmIpFwdPortInFltrPortNo=nvmIpFwdPortInFltrPortNo, nvmIpxSapFltrSysInstance=nvmIpxSapFltrSysInstance, nvmIpxNetFltrDir=nvmIpxNetFltrDir, mcmIpFwdPortOutFltrEntry=mcmIpFwdPortOutFltrEntry, mcmIpFwdPortOutFltrPortId=mcmIpFwdPortOutFltrPortId, nvmIpRipInFltrAction=nvmIpRipInFltrAction, mcmIpFwdPortOutFltrAction=mcmIpFwdPortOutFltrAction, mcmIpFwdPortInFltrProtId=mcmIpFwdPortInFltrProtId, nvmipxMacFltrPort=nvmipxMacFltrPort, mcmIpxRipFltrTable=mcmIpxRipFltrTable, mcmIpRipInFltrAddr=mcmIpRipInFltrAddr, mcmIpSysFltrAction=mcmIpSysFltrAction, nvmIpRipGwyFltrMask=nvmIpRipGwyFltrMask, mcmIpOspfOutFltrTable=mcmIpOspfOutFltrTable, nvmIpFwdPortInFltrSrcDst=nvmIpFwdPortInFltrSrcDst, mcmIpSysFltrSrcAddr=mcmIpSysFltrSrcAddr, nvmIpRipOutFltrEntry=nvmIpRipOutFltrEntry, nvmIpxNetFltrNetNumber=nvmIpxNetFltrNetNumber, nvmIpOspfOutFltrTable=nvmIpOspfOutFltrTable, nvmIpFwdPortInFltrProtId=nvmIpFwdPortInFltrProtId, nvmipxMacFltrEntry=nvmipxMacFltrEntry, mcmIpxNetFltrSysInstance=mcmIpxNetFltrSysInstance, mcmIpRipInFltrEntry=mcmIpRipInFltrEntry, nvmIpxNetFltrSysInstance=nvmIpxNetFltrSysInstance, mcmipxNetFltrId=mcmipxNetFltrId, mcmIpFwdPortInFltrPortId=mcmIpFwdPortInFltrPortId, nvmIpSysFltrTable=nvmIpSysFltrTable, nvmipxNetFltrNetNumber=nvmipxNetFltrNetNumber, nvmipxSysSapFilter=nvmipxSysSapFilter, mcmIpRipGwyFltrAddr=mcmIpRipGwyFltrAddr, nvmipxMacFltrDstAddress=nvmipxMacFltrDstAddress, nvmIpRipGwyFltrEntry=nvmIpRipGwyFltrEntry)
