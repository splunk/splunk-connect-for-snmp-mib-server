#
# PySNMP MIB module CISCO-MGX82XX-ATM-UNI-PORT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-MGX82XX-ATM-UNI-PORT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:50:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
AtmAddress, NetPrefix = mibBuilder.importSymbols("ATM-FORUM-TC-MIB", "AtmAddress", "NetPrefix")
atmAddressRegistration, = mibBuilder.importSymbols("BASIS-MIB", "atmAddressRegistration")
ciscoWan, = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, IpAddress, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, MibIdentifier, Gauge32, Unsigned32, iso, Counter32, NotificationType, ModuleIdentity, Bits, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "IpAddress", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "MibIdentifier", "Gauge32", "Unsigned32", "iso", "Counter32", "NotificationType", "ModuleIdentity", "Bits", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoMgx82xxAtmUniPortMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 71))
ciscoMgx82xxAtmUniPortMIB.setRevisions(('2003-04-18 00:00',))
if mibBuilder.loadTexts: ciscoMgx82xxAtmUniPortMIB.setLastUpdated('200304180000Z')
if mibBuilder.loadTexts: ciscoMgx82xxAtmUniPortMIB.setOrganization('Cisco Systems, Inc.')
atmNetPrefixGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 1, 4, 1, 1))
atmAddressGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 1, 4, 1, 2))
atmAddressTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 1, 4, 1, 2, 1), )
if mibBuilder.loadTexts: atmAddressTable.setStatus('current')
atmAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 1, 4, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-MGX82XX-ATM-UNI-PORT-MIB", "axisAtmAddressPort"), (0, "CISCO-MGX82XX-ATM-UNI-PORT-MIB", "axisAtmAddressAtmAddress"))
if mibBuilder.loadTexts: atmAddressEntry.setStatus('current')
axisAtmAddressPort = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 1, 4, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: axisAtmAddressPort.setStatus('current')
axisAtmAddressAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 1, 4, 1, 2, 1, 1, 2), AtmAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axisAtmAddressAtmAddress.setStatus('current')
axisAtmAddressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 1, 4, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: axisAtmAddressStatus.setStatus('current')
atmNetPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 1, 4, 1, 1, 1), )
if mibBuilder.loadTexts: atmNetPrefixTable.setStatus('current')
atmNetPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 1, 4, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-MGX82XX-ATM-UNI-PORT-MIB", "axisAtmNetPrefixPort"), (0, "CISCO-MGX82XX-ATM-UNI-PORT-MIB", "axisAtmNetPrefixPrefix"))
if mibBuilder.loadTexts: atmNetPrefixEntry.setStatus('current')
axisAtmNetPrefixPort = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 1, 4, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: axisAtmNetPrefixPort.setStatus('current')
axisAtmNetPrefixPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 1, 4, 1, 1, 1, 1, 2), NetPrefix()).setMaxAccess("readonly")
if mibBuilder.loadTexts: axisAtmNetPrefixPrefix.setStatus('current')
axisAtmNetPrefixAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 1, 4, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: axisAtmNetPrefixAdminStatus.setStatus('current')
axisAtmNetPrefixOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 1, 4, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("registering", 1), ("de-registering", 2), ("registered", 3), ("de-registered", 4), ("failRegistering", 5), ("failDe-registering", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: axisAtmNetPrefixOperStatus.setStatus('current')
cmauPortMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 71, 2))
cmauPortMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 71, 2, 1))
cmauPortMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 71, 2, 2))
cmauPortCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 71, 2, 2, 1)).setObjects(("CISCO-MGX82XX-ATM-UNI-PORT-MIB", "cmauAtmAddressGroup"), ("CISCO-MGX82XX-ATM-UNI-PORT-MIB", "cmauNetPrefixGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmauPortCompliance = cmauPortCompliance.setStatus('current')
cmauAtmAddressGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 71, 2, 1, 1)).setObjects(("CISCO-MGX82XX-ATM-UNI-PORT-MIB", "axisAtmAddressPort"), ("CISCO-MGX82XX-ATM-UNI-PORT-MIB", "axisAtmAddressAtmAddress"), ("CISCO-MGX82XX-ATM-UNI-PORT-MIB", "axisAtmAddressStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmauAtmAddressGroup = cmauAtmAddressGroup.setStatus('current')
cmauNetPrefixGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 71, 2, 1, 2)).setObjects(("CISCO-MGX82XX-ATM-UNI-PORT-MIB", "axisAtmNetPrefixPort"), ("CISCO-MGX82XX-ATM-UNI-PORT-MIB", "axisAtmNetPrefixPrefix"), ("CISCO-MGX82XX-ATM-UNI-PORT-MIB", "axisAtmNetPrefixAdminStatus"), ("CISCO-MGX82XX-ATM-UNI-PORT-MIB", "axisAtmNetPrefixOperStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmauNetPrefixGroup = cmauNetPrefixGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-MGX82XX-ATM-UNI-PORT-MIB", cmauNetPrefixGroup=cmauNetPrefixGroup, cmauPortMIBCompliances=cmauPortMIBCompliances, atmAddressGroup=atmAddressGroup, ciscoMgx82xxAtmUniPortMIB=ciscoMgx82xxAtmUniPortMIB, axisAtmNetPrefixPrefix=axisAtmNetPrefixPrefix, cmauPortCompliance=cmauPortCompliance, axisAtmNetPrefixAdminStatus=axisAtmNetPrefixAdminStatus, atmNetPrefixGroup=atmNetPrefixGroup, atmNetPrefixEntry=atmNetPrefixEntry, axisAtmNetPrefixOperStatus=axisAtmNetPrefixOperStatus, axisAtmAddressStatus=axisAtmAddressStatus, atmAddressEntry=atmAddressEntry, cmauPortMIBGroups=cmauPortMIBGroups, atmNetPrefixTable=atmNetPrefixTable, axisAtmNetPrefixPort=axisAtmNetPrefixPort, axisAtmAddressPort=axisAtmAddressPort, cmauPortMIBConformance=cmauPortMIBConformance, PYSNMP_MODULE_ID=ciscoMgx82xxAtmUniPortMIB, axisAtmAddressAtmAddress=axisAtmAddressAtmAddress, cmauAtmAddressGroup=cmauAtmAddressGroup, atmAddressTable=atmAddressTable)
