#
# PySNMP MIB module GESINGLEUPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GESINGLEUPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:06:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Counter64, MibIdentifier, Unsigned32, Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ObjectIdentity, Gauge32, iso, TimeTicks, enterprises, ModuleIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "MibIdentifier", "Unsigned32", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ObjectIdentity", "Gauge32", "iso", "TimeTicks", "enterprises", "ModuleIdentity", "Counter32")
TextualConvention, AutonomousType, DisplayString, TimeInterval, TimeStamp, TestAndIncr = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "AutonomousType", "DisplayString", "TimeInterval", "TimeStamp", "TestAndIncr")
imv = ModuleIdentity((1, 3, 6, 1, 4, 1, 818))
imv.setRevisions(('2010-07-05 00:00', '2008-01-08 00:00',))
if mibBuilder.loadTexts: imv.setLastUpdated('201007050000Z')
if mibBuilder.loadTexts: imv.setOrganization('GE Digital Energy')
class PositiveInteger32(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class NonNegativeInteger32(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

geHardware = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1))
geUPS = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1))
geGenericUPS = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10))
upsIdentgen = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1))
upsBatterygen = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 2))
upsInputgen = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3))
upsOutputgen = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4))
upsBypassgen = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 5))
upsAlarmgen = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6))
upsWellKnownAlarmsgen = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3))
upsTestgen = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7))
upsWellKnownTestsgen = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 7))
upsControlgen = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8))
upsConfiggen = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9))
upsGetSetgen = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10))
geUPSTrapsgen = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11))
upsDiagnosticgen = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 12))
geDevices = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 100))
geDevicesDescriptions = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 100, 1))
advSNMPWebIntCard = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 100, 1, 1))
snmpWebIntCard = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 100, 1, 2))
snmpWebIntBox = MibIdentifier((1, 3, 6, 1, 4, 1, 818, 1, 100, 1, 3))
geDiscoveredUPSsMask = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: geDiscoveredUPSsMask.setStatus('current')
geRequestPacket = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: geRequestPacket.setStatus('current')
geReplyPacket = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: geReplyPacket.setStatus('current')
upsIdentManufacturergen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentManufacturergen.setStatus('current')
upsIdentModelgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentModelgen.setStatus('current')
upsIdentUPSSoftwareVersiongen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSoftwareVersiongen.setStatus('current')
upsIdentAgentSoftwareVersiongen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentAgentSoftwareVersiongen.setStatus('current')
upsIdentNamegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentNamegen.setStatus('current')
upsIdentAttachedDevicesgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsIdentAttachedDevicesgen.setStatus('current')
upsIdentUPSSerialNumbergen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentUPSSerialNumbergen.setStatus('current')
upsIdentComProtVersiongen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentComProtVersiongen.setStatus('current')
upsIdentOperatingTimegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 1, 9), NonNegativeInteger32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsIdentOperatingTimegen.setStatus('current')
upsBatteryStatusgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("batteryNormal", 2), ("batteryLow", 3), ("batteryDepleted", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryStatusgen.setStatus('current')
upsSecondsOnBatterygen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 2, 2), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsSecondsOnBatterygen.setStatus('current')
upsEstimatedMinutesRemaininggen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 2, 3), PositiveInteger32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedMinutesRemaininggen.setStatus('current')
upsEstimatedChargeRemaininggen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEstimatedChargeRemaininggen.setStatus('current')
upsBatteryVoltagegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 2, 5), NonNegativeInteger32()).setUnits('0.1 Volt DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryVoltagegen.setStatus('current')
upsBatteryCurrentgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 2, 6), Integer32()).setUnits('0.1 Amp DC').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryCurrentgen.setStatus('current')
upsBatteryTemperaturegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 2, 7), Integer32()).setUnits('degrees Centigrade').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryTemperaturegen.setStatus('current')
upsBatteryRipplegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 2, 8), Integer32()).setUnits('0.1 Volt RMS').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBatteryRipplegen.setStatus('current')
upsInputLineBadsgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputLineBadsgen.setStatus('current')
upsInputNumLinesgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputNumLinesgen.setStatus('current')
upsInputGenTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 3), )
if mibBuilder.loadTexts: upsInputGenTable.setStatus('current')
upsInputGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 3, 1), ).setIndexNames((0, "GESINGLEUPS-MIB", "upsInputLineIndexgen"))
if mibBuilder.loadTexts: upsInputGenEntry.setStatus('current')
upsInputLineIndexgen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsInputLineIndexgen.setStatus('current')
upsInputFrequencygen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 3, 1, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputFrequencygen.setStatus('current')
upsInputVoltagegen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 3, 1, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltagegen.setStatus('current')
upsInputCurrentgen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 3, 1, 4), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputCurrentgen.setStatus('current')
upsInputTruePowergen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 3, 1, 5), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputTruePowergen.setStatus('current')
upsInputVoltageMingen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 3, 1, 6), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMingen.setStatus('current')
upsInputVoltageMaxgen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 3, 3, 1, 7), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsInputVoltageMaxgen.setStatus('current')
upsOutputSourcegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("normal", 3), ("bypass", 4), ("battery", 5), ("booster", 6), ("reducer", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputSourcegen.setStatus('current')
upsOutputFrequencygen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputFrequencygen.setStatus('current')
upsOutputNumLinesgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputNumLinesgen.setStatus('current')
upsOutputGenTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4), )
if mibBuilder.loadTexts: upsOutputGenTable.setStatus('current')
upsOutputGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4, 1), ).setIndexNames((0, "GESINGLEUPS-MIB", "upsOutputLineIndexgen"))
if mibBuilder.loadTexts: upsOutputGenEntry.setStatus('current')
upsOutputLineIndexgen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsOutputLineIndexgen.setStatus('current')
upsOutputVoltagegen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputVoltagegen.setStatus('current')
upsOutputCurrentgen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputCurrentgen.setStatus('current')
upsOutputPowergen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowergen.setStatus('current')
upsOutputPercentLoadgen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPercentLoadgen.setStatus('current')
upsOutputPowerFactorgen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-99, 100))).setUnits('0.01 cos phi').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPowerFactorgen.setStatus('current')
upsOutputPeakCurrentgen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4, 1, 7), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputPeakCurrentgen.setStatus('current')
upsOutputShareCurrentgen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 4, 4, 1, 8), Integer32()).setUnits('Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsOutputShareCurrentgen.setStatus('current')
upsBypassFrequencygen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 5, 1), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassFrequencygen.setStatus('current')
upsBypassNumLinesgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 5, 2), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassNumLinesgen.setStatus('current')
upsBypassGenTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 5, 3), )
if mibBuilder.loadTexts: upsBypassGenTable.setStatus('current')
upsBypassGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 5, 3, 1), ).setIndexNames((0, "GESINGLEUPS-MIB", "upsBypassLineIndexgen"))
if mibBuilder.loadTexts: upsBypassGenEntry.setStatus('current')
upsBypassLineIndexgen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 5, 3, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsBypassLineIndexgen.setStatus('current')
upsBypassVoltagegen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 5, 3, 1, 2), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassVoltagegen.setStatus('current')
upsBypassCurrentgen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 5, 3, 1, 3), NonNegativeInteger32()).setUnits('0.1 RMS Amp').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassCurrentgen.setStatus('current')
upsBypassPowergen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 5, 3, 1, 4), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsBypassPowergen.setStatus('current')
upsAlarmsPresentgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmsPresentgen.setStatus('current')
upsAlarmGenTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 2), )
if mibBuilder.loadTexts: upsAlarmGenTable.setStatus('current')
upsAlarmGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 2, 1), ).setIndexNames((0, "GESINGLEUPS-MIB", "upsAlarmIdgen"))
if mibBuilder.loadTexts: upsAlarmGenEntry.setStatus('current')
upsAlarmIdgen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 2, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsAlarmIdgen.setStatus('current')
upsAlarmDescrgen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 2, 1, 2), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmDescrgen.setStatus('current')
upsAlarmTimegen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmTimegen.setStatus('current')
upsAlarmBatteryBadgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 1))
if mibBuilder.loadTexts: upsAlarmBatteryBadgen.setStatus('current')
upsAlarmOnBatterygen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 2))
if mibBuilder.loadTexts: upsAlarmOnBatterygen.setStatus('current')
upsAlarmLowBatterygen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 3))
if mibBuilder.loadTexts: upsAlarmLowBatterygen.setStatus('current')
upsAlarmDepletedBatterygen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 4))
if mibBuilder.loadTexts: upsAlarmDepletedBatterygen.setStatus('current')
upsAlarmTempBadgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 5))
if mibBuilder.loadTexts: upsAlarmTempBadgen.setStatus('current')
upsAlarmInputBadgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 6))
if mibBuilder.loadTexts: upsAlarmInputBadgen.setStatus('current')
upsAlarmOutputBadgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 7))
if mibBuilder.loadTexts: upsAlarmOutputBadgen.setStatus('current')
upsAlarmOutputOverloadgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 8))
if mibBuilder.loadTexts: upsAlarmOutputOverloadgen.setStatus('current')
upsAlarmOnBypassgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 9))
if mibBuilder.loadTexts: upsAlarmOnBypassgen.setStatus('current')
upsAlarmBypassBadgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 10))
if mibBuilder.loadTexts: upsAlarmBypassBadgen.setStatus('current')
upsAlarmOutputOffAsRequestedgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 11))
if mibBuilder.loadTexts: upsAlarmOutputOffAsRequestedgen.setStatus('current')
upsAlarmUpsOffAsRequestedgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 12))
if mibBuilder.loadTexts: upsAlarmUpsOffAsRequestedgen.setStatus('current')
upsAlarmChargerFailedgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 13))
if mibBuilder.loadTexts: upsAlarmChargerFailedgen.setStatus('current')
upsAlarmUpsOutputOffgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 14))
if mibBuilder.loadTexts: upsAlarmUpsOutputOffgen.setStatus('current')
upsAlarmUpsSystemOffgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 15))
if mibBuilder.loadTexts: upsAlarmUpsSystemOffgen.setStatus('current')
upsAlarmFanFailuregen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 16))
if mibBuilder.loadTexts: upsAlarmFanFailuregen.setStatus('current')
upsAlarmFuseFailuregen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 17))
if mibBuilder.loadTexts: upsAlarmFuseFailuregen.setStatus('current')
upsAlarmGeneralFaultgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 18))
if mibBuilder.loadTexts: upsAlarmGeneralFaultgen.setStatus('current')
upsAlarmDiagnosticTestFailedgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 19))
if mibBuilder.loadTexts: upsAlarmDiagnosticTestFailedgen.setStatus('current')
upsAlarmCommunicationsLostgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 20))
if mibBuilder.loadTexts: upsAlarmCommunicationsLostgen.setStatus('current')
upsAlarmAwaitingPowergen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 21))
if mibBuilder.loadTexts: upsAlarmAwaitingPowergen.setStatus('current')
upsAlarmShutdownPendinggen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 22))
if mibBuilder.loadTexts: upsAlarmShutdownPendinggen.setStatus('current')
upsAlarmShutdownImminentgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 23))
if mibBuilder.loadTexts: upsAlarmShutdownImminentgen.setStatus('current')
upsAlarmTestInProgressgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 24))
if mibBuilder.loadTexts: upsAlarmTestInProgressgen.setStatus('current')
upsAlarmReceptacleOffgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 25))
if mibBuilder.loadTexts: upsAlarmReceptacleOffgen.setStatus('current')
upsAlarmHighSpeedBusFailuregen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 26))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusFailuregen.setStatus('current')
upsAlarmHighSpeedBusJACRCFailuregen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 27))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJACRCFailuregen.setStatus('current')
upsAlarmConnectivityBusFailuregen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 28))
if mibBuilder.loadTexts: upsAlarmConnectivityBusFailuregen.setStatus('current')
upsAlarmHighSpeedBusJBCRCFailuregen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 29))
if mibBuilder.loadTexts: upsAlarmHighSpeedBusJBCRCFailuregen.setStatus('current')
upsAlarmCurrentSharinggen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 30))
if mibBuilder.loadTexts: upsAlarmCurrentSharinggen.setStatus('current')
upsAlarmDCRipplegen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 3, 31))
if mibBuilder.loadTexts: upsAlarmDCRipplegen.setStatus('current')
upsAlarmMaskAgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 6, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsAlarmMaskAgen.setStatus('current')
upsTestIdgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 1), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestIdgen.setStatus('current')
upsTestSpinLockgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 2), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTestSpinLockgen.setStatus('current')
upsTestResultsSummarygen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("donePass", 1), ("doneWarning", 2), ("doneError", 3), ("aborted", 4), ("inProgress", 5), ("noTestsInitiated", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsSummarygen.setStatus('current')
upsTestResultsDetailgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestResultsDetailgen.setStatus('current')
upsTestStartTimegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestStartTimegen.setStatus('current')
upsTestElapsedTimegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 6), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsTestElapsedTimegen.setStatus('current')
upsTestNoTestsInitiatedgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 7, 1))
if mibBuilder.loadTexts: upsTestNoTestsInitiatedgen.setStatus('current')
upsTestAbortTestInProgressgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 7, 2))
if mibBuilder.loadTexts: upsTestAbortTestInProgressgen.setStatus('current')
upsTestGeneralSystemsTestgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 7, 3))
if mibBuilder.loadTexts: upsTestGeneralSystemsTestgen.setStatus('current')
upsTestQuickBatteryTestgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 7, 4))
if mibBuilder.loadTexts: upsTestQuickBatteryTestgen.setStatus('current')
upsTestDeepBatteryCalibrationgen = ObjectIdentity((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 7, 7, 5))
if mibBuilder.loadTexts: upsTestDeepBatteryCalibrationgen.setStatus('current')
upsShutdownTypegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("output", 1), ("system", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownTypegen.setStatus('current')
upsShutdownAfterDelaygen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsShutdownAfterDelaygen.setStatus('current')
upsStartupAfterDelaygen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsStartupAfterDelaygen.setStatus('current')
upsRebootWithDurationgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 300))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRebootWithDurationgen.setStatus('current')
upsAutoRestartgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsAutoRestartgen.setStatus('current')
upsReceptaclesNumgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 6), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsReceptaclesNumgen.setStatus('current')
upsReceptacleGenTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 7), )
if mibBuilder.loadTexts: upsReceptacleGenTable.setStatus('current')
upsReceptacleGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 7, 1), ).setIndexNames((0, "GESINGLEUPS-MIB", "upsReceptacleLineIndexgen"))
if mibBuilder.loadTexts: upsReceptacleGenEntry.setStatus('current')
upsReceptacleLineIndexgen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 7, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsReceptacleLineIndexgen.setStatus('current')
upsReceptacleOnOffgen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsReceptacleOnOffgen.setStatus('current')
upsUPSModegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("offLine", 1), ("onLine", 2), ("ecomode", 3), ("iem", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsUPSModegen.setStatus('current')
upsRectifierOnOffgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRectifierOnOffgen.setStatus('current')
upsBatteryChargeMethodgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normalcharge", 1), ("boostcharge", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBatteryChargeMethodgen.setStatus('current')
upsInverterOnOffgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsInverterOnOffgen.setStatus('current')
upsBypassOnOffgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsBypassOnOffgen.setStatus('current')
upsLoadSourcegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 8, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("onbypass", 1), ("onInverter", 2), ("onDetour", 3), ("loadOff", 4), ("other", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsLoadSourcegen.setStatus('current')
upsConfigInputVoltagegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 1), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputVoltagegen.setStatus('current')
upsConfigInputFreqgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 2), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigInputFreqgen.setStatus('current')
upsConfigOutputVoltagegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 3), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputVoltagegen.setStatus('current')
upsConfigOutputFreqgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 4), NonNegativeInteger32()).setUnits('0.1 Hertz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigOutputFreqgen.setStatus('current')
upsConfigOutputVAgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 5), NonNegativeInteger32()).setUnits('Volt-Amps').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputVAgen.setStatus('current')
upsConfigOutputPowergen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 6), NonNegativeInteger32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: upsConfigOutputPowergen.setStatus('current')
upsConfigLowBattTimegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 7), NonNegativeInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowBattTimegen.setStatus('current')
upsConfigAudibleStatusgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("muted", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigAudibleStatusgen.setStatus('current')
upsConfigLowVoltageTransferPointgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 9), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigLowVoltageTransferPointgen.setStatus('current')
upsConfigHighVoltageTransferPointgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 10), NonNegativeInteger32()).setUnits('RMS Volts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigHighVoltageTransferPointgen.setStatus('current')
upsConfigBatteryCapacitygen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 11), NonNegativeInteger32()).setUnits('Amps Hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryCapacitygen.setStatus('current')
upsConfigBatteryChargeCurrentgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 12), NonNegativeInteger32()).setUnits('0.1 Amp DC').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigBatteryChargeCurrentgen.setStatus('current')
upsConfigNoLoadShutdowngen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigNoLoadShutdowngen.setStatus('current')
upsConfigStartDelaygen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 9, 14), PositiveInteger32()).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsConfigStartDelaygen.setStatus('current')
upsEventGetNextgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 1), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetNextgen.setStatus('current')
upsEventGetPreviousgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 2), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetPreviousgen.setStatus('current')
upsEventSetStartingTimeStampgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 3), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSetStartingTimeStampgen.setStatus('current')
upsEventRetreiveCurrentTimeStampgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventRetreiveCurrentTimeStampgen.setStatus('current')
upsEventTableSizegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 5), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTableSizegen.setStatus('current')
upsEventGenTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 6), )
if mibBuilder.loadTexts: upsEventGenTable.setStatus('current')
upsEventGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 6, 1), ).setIndexNames((0, "GESINGLEUPS-MIB", "upsEventLineIndexgen"))
if mibBuilder.loadTexts: upsEventGenEntry.setStatus('current')
upsEventLineIndexgen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 6, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsEventLineIndexgen.setStatus('current')
upsEventCodegen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventCodegen.setStatus('current')
upsEventStatusgen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 6, 1, 3), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventStatusgen.setStatus('current')
upsEventTimegen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 6, 1, 4), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsEventTimegen.setStatus('current')
upsParametersReadgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 7), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersReadgen.setStatus('current')
upsParametersWritegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 8), PositiveInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersWritegen.setStatus('current')
upsParametersStartAddressgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 9), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParametersStartAddressgen.setStatus('current')
upsParameterTableSizegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 10), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsParameterTableSizegen.setStatus('current')
upsParameterGenTable = MibTable((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 11), )
if mibBuilder.loadTexts: upsParameterGenTable.setStatus('current')
upsParameterGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 11, 1), ).setIndexNames((0, "GESINGLEUPS-MIB", "upsParameterLineIndexgen"))
if mibBuilder.loadTexts: upsParameterGenEntry.setStatus('current')
upsParameterLineIndexgen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 11, 1, 1), PositiveInteger32())
if mibBuilder.loadTexts: upsParameterLineIndexgen.setStatus('current')
upsParameterValuegen = MibTableColumn((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 11, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterValuegen.setStatus('current')
upsStatusgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 12), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsStatusgen.setStatus('current')
upsMainsStatisticsMBfailgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 13), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMBfailgen.setStatus('current')
upsMainsStatisticsMRfailgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 14), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsMRfailgen.setStatus('current')
upsMainsStatisticsB2gen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 15), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB2gen.setStatus('current')
upsMainsStatisticsB5gen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 16), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB5gen.setStatus('current')
upsMainsStatisticsB10gen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 17), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB10gen.setStatus('current')
upsMainsStatisticsB200gen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 18), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsB200gen.setStatus('current')
upsMainsStatisticsBypRelgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 19), NonNegativeInteger32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsMainsStatisticsBypRelgen.setStatus('current')
upsTimegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 20), NonNegativeInteger32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsTimegen.setStatus('current')
upsRequestPermissiongen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsRequestPermissiongen.setStatus('current')
upsEventGetCodegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventGetCodegen.setStatus('current')
upsEventSpinLockgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 23), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsEventSpinLockgen.setStatus('current')
upsParameterSpinLockgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 10, 24), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: upsParameterSpinLockgen.setStatus('current')
upsTrapAlarmBatteryBadgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 1))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadgen.setStatus('current')
upsTrapAlarmOnBatterygen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 2)).setObjects(("GESINGLEUPS-MIB", "upsSecondsOnBatterygen"))
if mibBuilder.loadTexts: upsTrapAlarmOnBatterygen.setStatus('current')
upsTrapAlarmLowBatterygen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 3))
if mibBuilder.loadTexts: upsTrapAlarmLowBatterygen.setStatus('current')
upsTrapAlarmDepletedBatterygen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 4))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatterygen.setStatus('current')
upsTrapAlarmTempBadgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 5)).setObjects(("GESINGLEUPS-MIB", "upsBatteryTemperaturegen"))
if mibBuilder.loadTexts: upsTrapAlarmTempBadgen.setStatus('current')
upsTrapAlarmInputBadgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 6))
if mibBuilder.loadTexts: upsTrapAlarmInputBadgen.setStatus('current')
upsTrapAlarmOutputBadgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 7))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadgen.setStatus('current')
upsTrapAlarmOutputOverloadgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 8)).setObjects(("GESINGLEUPS-MIB", "upsOutputNumLinesgen"), ("GESINGLEUPS-MIB", "upsOutputPercentLoadgen"))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadgen.setStatus('current')
upsTrapAlarmOnBypassgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 9))
if mibBuilder.loadTexts: upsTrapAlarmOnBypassgen.setStatus('current')
upsTrapAlarmBypassBadgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 10))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadgen.setStatus('current')
upsTrapAlarmOutputOffAsRequestedgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 11))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedgen.setStatus('current')
upsTrapAlarmUpsOffAsRequestedgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 12))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedgen.setStatus('current')
upsTrapAlarmChargerFailedgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 13))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedgen.setStatus('current')
upsTrapAlarmUpsOutputOffgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 14))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOffgen.setStatus('current')
upsTrapAlarmUpsSystemOffgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 15))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOffgen.setStatus('current')
upsTrapAlarmFanFailuregen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 16))
if mibBuilder.loadTexts: upsTrapAlarmFanFailuregen.setStatus('current')
upsTrapAlarmFuseFailuregen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 17))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailuregen.setStatus('current')
upsTrapAlarmGeneralFaultgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 18))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaultgen.setStatus('current')
upsTrapAlarmDiagnosticTestFailedgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 19))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedgen.setStatus('current')
upsTrapAlarmCommunicationsLostgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 20))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLostgen.setStatus('current')
upsTrapAlarmAwaitingPowergen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 21))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowergen.setStatus('current')
upsTrapAlarmShutdownPendinggen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 22)).setObjects(("GESINGLEUPS-MIB", "upsShutdownAfterDelaygen"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendinggen.setStatus('current')
upsTrapAlarmShutdownImminentgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 23))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminentgen.setStatus('current')
upsTrapAlarmTestInProgressgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 24)).setObjects(("GESINGLEUPS-MIB", "upsTestIdgen"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgressgen.setStatus('current')
upsTrapAlarmReceptacleOffgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 25))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOffgen.setStatus('current')
upsTrapAlarmHighspeedBusFailuregen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 26))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusFailuregen.setStatus('current')
upsTrapAlarmHighspeedBusJACRCFailuregen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 27))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCFailuregen.setStatus('current')
upsTrapAlarmConnectivityBusFailuregen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 28))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusFailuregen.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCFailuregen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 29))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCFailuregen.setStatus('current')
upsTrapAlarmCurrentSharingFailuregen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 30))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingFailuregen.setStatus('current')
upsTrapAlarmDCRippleFailuregen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 31))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleFailuregen.setStatus('current')
upsTrapAlarmBatteryBadRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 33))
if mibBuilder.loadTexts: upsTrapAlarmBatteryBadRestoredgen.setStatus('current')
upsTrapAlarmOnBatteryRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 34))
if mibBuilder.loadTexts: upsTrapAlarmOnBatteryRestoredgen.setStatus('current')
upsTrapAlarmLowBatteryRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 35))
if mibBuilder.loadTexts: upsTrapAlarmLowBatteryRestoredgen.setStatus('current')
upsTrapAlarmDepletedBatteryRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 36))
if mibBuilder.loadTexts: upsTrapAlarmDepletedBatteryRestoredgen.setStatus('current')
upsTrapAlarmTempBadRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 37))
if mibBuilder.loadTexts: upsTrapAlarmTempBadRestoredgen.setStatus('current')
upsTrapAlarmInputBadRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 38))
if mibBuilder.loadTexts: upsTrapAlarmInputBadRestoredgen.setStatus('current')
upsTrapAlarmOutputBadRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 39))
if mibBuilder.loadTexts: upsTrapAlarmOutputBadRestoredgen.setStatus('current')
upsTrapAlarmOutputOverloadRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 40))
if mibBuilder.loadTexts: upsTrapAlarmOutputOverloadRestoredgen.setStatus('current')
upsTrapAlarmOnBypassRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 41))
if mibBuilder.loadTexts: upsTrapAlarmOnBypassRestoredgen.setStatus('current')
upsTrapAlarmBypassBadRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 42))
if mibBuilder.loadTexts: upsTrapAlarmBypassBadRestoredgen.setStatus('current')
upsTrapAlarmOutputOffAsRequestedRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 43))
if mibBuilder.loadTexts: upsTrapAlarmOutputOffAsRequestedRestoredgen.setStatus('current')
upsTrapAlarmUpsOffAsRequestedRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 44))
if mibBuilder.loadTexts: upsTrapAlarmUpsOffAsRequestedRestoredgen.setStatus('current')
upsTrapAlarmChargerFailedRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 45))
if mibBuilder.loadTexts: upsTrapAlarmChargerFailedRestoredgen.setStatus('current')
upsTrapAlarmUpsOutputOngen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 46))
if mibBuilder.loadTexts: upsTrapAlarmUpsOutputOngen.setStatus('current')
upsTrapAlarmUpsSystemOngen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 47))
if mibBuilder.loadTexts: upsTrapAlarmUpsSystemOngen.setStatus('current')
upsTrapAlarmFanFailureRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 48))
if mibBuilder.loadTexts: upsTrapAlarmFanFailureRestoredgen.setStatus('current')
upsTrapAlarmFuseFailureRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 49))
if mibBuilder.loadTexts: upsTrapAlarmFuseFailureRestoredgen.setStatus('current')
upsTrapAlarmGeneralFaultRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 50))
if mibBuilder.loadTexts: upsTrapAlarmGeneralFaultRestoredgen.setStatus('current')
upsTrapAlarmDiagnosticTestFailedRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 51))
if mibBuilder.loadTexts: upsTrapAlarmDiagnosticTestFailedRestoredgen.setStatus('current')
upsTrapAlarmCommunicationsLostRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 52))
if mibBuilder.loadTexts: upsTrapAlarmCommunicationsLostRestoredgen.setStatus('current')
upsTrapAlarmAwaitingPowerRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 53))
if mibBuilder.loadTexts: upsTrapAlarmAwaitingPowerRestoredgen.setStatus('current')
upsTrapAlarmShutdownPendingRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 54)).setObjects(("GESINGLEUPS-MIB", "upsShutdownAfterDelaygen"))
if mibBuilder.loadTexts: upsTrapAlarmShutdownPendingRestoredgen.setStatus('current')
upsTrapAlarmShutdownImminentRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 55))
if mibBuilder.loadTexts: upsTrapAlarmShutdownImminentRestoredgen.setStatus('current')
upsTrapAlarmTestInProgressRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 56)).setObjects(("GESINGLEUPS-MIB", "upsTestIdgen"))
if mibBuilder.loadTexts: upsTrapAlarmTestInProgressRestoredgen.setStatus('current')
upsTrapAlarmReceptacleOn = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 57))
if mibBuilder.loadTexts: upsTrapAlarmReceptacleOn.setStatus('current')
upsTrapAlarmHighspeedBusRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 58))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusRestoredgen.setStatus('current')
upsTrapAlarmHighspeedBusJACRCRestoredAgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 59))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJACRCRestoredAgen.setStatus('current')
upsTrapAlarmConnectivityBusRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 60))
if mibBuilder.loadTexts: upsTrapAlarmConnectivityBusRestoredgen.setStatus('current')
upsTrapAlarmHighspeedBusJBCRCRestoredBgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 61))
if mibBuilder.loadTexts: upsTrapAlarmHighspeedBusJBCRCRestoredBgen.setStatus('current')
upsTrapAlarmCurrentSharingRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 62))
if mibBuilder.loadTexts: upsTrapAlarmCurrentSharingRestoredgen.setStatus('current')
upsTrapAlarmDCRippleRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 63))
if mibBuilder.loadTexts: upsTrapAlarmDCRippleRestoredgen.setStatus('current')
upsTrapAlarmValueLowgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 129))
if mibBuilder.loadTexts: upsTrapAlarmValueLowgen.setStatus('current')
upsTrapAlarmValueHighgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 130))
if mibBuilder.loadTexts: upsTrapAlarmValueHighgen.setStatus('current')
upsTrapAlarmValueLowRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 133))
if mibBuilder.loadTexts: upsTrapAlarmValueLowRestoredgen.setStatus('current')
upsTrapAlarmValueHighRestoredgen = NotificationType((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 11, 134))
if mibBuilder.loadTexts: upsTrapAlarmValueHighRestoredgen.setStatus('current')
upsDiagnosticBusJACommunicationStatusgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJACommunicationStatusgen.setStatus('current')
upsDiagnosticBusJBCommunicationStatusgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 12, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBusJBCommunicationStatusgen.setStatus('current')
upsDiagnosticBatteryLifetimegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 12, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticBatteryLifetimegen.setStatus('current')
upsDiagnosticFansLifetimegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 12, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticFansLifetimegen.setStatus('current')
upsDiagnosticDCcapacitorsLifetimegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 12, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticDCcapacitorsLifetimegen.setStatus('current')
upsDiagnosticACcapacitorsLifetimegen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 12, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticACcapacitorsLifetimegen.setStatus('current')
upsDiagnosticGlobalServiceCheckgen = MibScalar((1, 3, 6, 1, 4, 1, 818, 1, 1, 10, 12, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upsDiagnosticGlobalServiceCheckgen.setStatus('current')
mibBuilder.exportSymbols("GESINGLEUPS-MIB", upsConfigNoLoadShutdowngen=upsConfigNoLoadShutdowngen, upsEstimatedMinutesRemaininggen=upsEstimatedMinutesRemaininggen, upsInputVoltageMingen=upsInputVoltageMingen, upsAlarmBatteryBadgen=upsAlarmBatteryBadgen, PYSNMP_MODULE_ID=imv, upsRectifierOnOffgen=upsRectifierOnOffgen, upsTrapAlarmCurrentSharingFailuregen=upsTrapAlarmCurrentSharingFailuregen, geUPS=geUPS, upsAlarmDepletedBatterygen=upsAlarmDepletedBatterygen, upsTestResultsDetailgen=upsTestResultsDetailgen, upsTrapAlarmHighspeedBusJACRCRestoredAgen=upsTrapAlarmHighspeedBusJACRCRestoredAgen, upsStatusgen=upsStatusgen, upsTrapAlarmTestInProgressgen=upsTrapAlarmTestInProgressgen, upsTrapAlarmOnBatteryRestoredgen=upsTrapAlarmOnBatteryRestoredgen, upsAlarmBypassBadgen=upsAlarmBypassBadgen, upsTestAbortTestInProgressgen=upsTestAbortTestInProgressgen, upsTrapAlarmShutdownPendinggen=upsTrapAlarmShutdownPendinggen, upsAlarmOnBatterygen=upsAlarmOnBatterygen, upsDiagnosticFansLifetimegen=upsDiagnosticFansLifetimegen, geReplyPacket=geReplyPacket, upsRebootWithDurationgen=upsRebootWithDurationgen, upsTrapAlarmValueLowRestoredgen=upsTrapAlarmValueLowRestoredgen, upsOutputPeakCurrentgen=upsOutputPeakCurrentgen, imv=imv, upsTrapAlarmDCRippleRestoredgen=upsTrapAlarmDCRippleRestoredgen, upsOutputFrequencygen=upsOutputFrequencygen, upsMainsStatisticsMRfailgen=upsMainsStatisticsMRfailgen, upsDiagnosticgen=upsDiagnosticgen, upsRequestPermissiongen=upsRequestPermissiongen, upsTrapAlarmHighspeedBusRestoredgen=upsTrapAlarmHighspeedBusRestoredgen, advSNMPWebIntCard=advSNMPWebIntCard, upsIdentAgentSoftwareVersiongen=upsIdentAgentSoftwareVersiongen, upsTrapAlarmUpsOffAsRequestedgen=upsTrapAlarmUpsOffAsRequestedgen, upsControlgen=upsControlgen, upsTestIdgen=upsTestIdgen, upsTrapAlarmValueHighRestoredgen=upsTrapAlarmValueHighRestoredgen, upsTrapAlarmCommunicationsLostgen=upsTrapAlarmCommunicationsLostgen, geDiscoveredUPSsMask=geDiscoveredUPSsMask, upsTrapAlarmChargerFailedgen=upsTrapAlarmChargerFailedgen, upsTrapAlarmBypassBadgen=upsTrapAlarmBypassBadgen, upsTrapAlarmHighspeedBusFailuregen=upsTrapAlarmHighspeedBusFailuregen, upsConfigOutputFreqgen=upsConfigOutputFreqgen, upsMainsStatisticsBypRelgen=upsMainsStatisticsBypRelgen, upsIdentComProtVersiongen=upsIdentComProtVersiongen, upsInputGenTable=upsInputGenTable, upsAlarmCurrentSharinggen=upsAlarmCurrentSharinggen, upsTrapAlarmReceptacleOn=upsTrapAlarmReceptacleOn, upsWellKnownAlarmsgen=upsWellKnownAlarmsgen, upsOutputShareCurrentgen=upsOutputShareCurrentgen, upsBatteryCurrentgen=upsBatteryCurrentgen, upsAlarmGenEntry=upsAlarmGenEntry, upsTrapAlarmUpsOutputOngen=upsTrapAlarmUpsOutputOngen, upsTrapAlarmShutdownImminentgen=upsTrapAlarmShutdownImminentgen, upsTestStartTimegen=upsTestStartTimegen, upsTrapAlarmCommunicationsLostRestoredgen=upsTrapAlarmCommunicationsLostRestoredgen, snmpWebIntBox=snmpWebIntBox, upsInputGenEntry=upsInputGenEntry, upsBypassGenTable=upsBypassGenTable, upsTestResultsSummarygen=upsTestResultsSummarygen, upsParameterGenEntry=upsParameterGenEntry, upsBypassOnOffgen=upsBypassOnOffgen, upsParameterLineIndexgen=upsParameterLineIndexgen, upsBatteryRipplegen=upsBatteryRipplegen, upsOutputLineIndexgen=upsOutputLineIndexgen, upsMainsStatisticsB200gen=upsMainsStatisticsB200gen, upsTimegen=upsTimegen, upsAlarmUpsSystemOffgen=upsAlarmUpsSystemOffgen, upsTrapAlarmLowBatteryRestoredgen=upsTrapAlarmLowBatteryRestoredgen, upsDiagnosticBusJACommunicationStatusgen=upsDiagnosticBusJACommunicationStatusgen, upsTrapAlarmHighspeedBusJBCRCFailuregen=upsTrapAlarmHighspeedBusJBCRCFailuregen, upsAlarmOutputBadgen=upsAlarmOutputBadgen, upsAlarmOutputOverloadgen=upsAlarmOutputOverloadgen, upsConfigStartDelaygen=upsConfigStartDelaygen, upsAlarmDiagnosticTestFailedgen=upsAlarmDiagnosticTestFailedgen, upsEventStatusgen=upsEventStatusgen, upsTrapAlarmHighspeedBusJACRCFailuregen=upsTrapAlarmHighspeedBusJACRCFailuregen, upsConfigOutputPowergen=upsConfigOutputPowergen, upsBypassNumLinesgen=upsBypassNumLinesgen, upsEventGetCodegen=upsEventGetCodegen, upsConfigOutputVAgen=upsConfigOutputVAgen, upsTrapAlarmUpsOffAsRequestedRestoredgen=upsTrapAlarmUpsOffAsRequestedRestoredgen, upsInputCurrentgen=upsInputCurrentgen, upsReceptaclesNumgen=upsReceptaclesNumgen, upsTrapAlarmTestInProgressRestoredgen=upsTrapAlarmTestInProgressRestoredgen, upsTrapAlarmCurrentSharingRestoredgen=upsTrapAlarmCurrentSharingRestoredgen, upsIdentModelgen=upsIdentModelgen, upsBatteryVoltagegen=upsBatteryVoltagegen, upsIdentUPSSerialNumbergen=upsIdentUPSSerialNumbergen, upsTrapAlarmTempBadgen=upsTrapAlarmTempBadgen, upsAlarmDCRipplegen=upsAlarmDCRipplegen, upsInputVoltageMaxgen=upsInputVoltageMaxgen, upsAlarmCommunicationsLostgen=upsAlarmCommunicationsLostgen, upsInputTruePowergen=upsInputTruePowergen, upsConfigLowVoltageTransferPointgen=upsConfigLowVoltageTransferPointgen, upsTrapAlarmDepletedBatterygen=upsTrapAlarmDepletedBatterygen, upsTrapAlarmOnBypassRestoredgen=upsTrapAlarmOnBypassRestoredgen, upsTrapAlarmOnBypassgen=upsTrapAlarmOnBypassgen, upsIdentgen=upsIdentgen, upsDiagnosticBusJBCommunicationStatusgen=upsDiagnosticBusJBCommunicationStatusgen, upsDiagnosticBatteryLifetimegen=upsDiagnosticBatteryLifetimegen, upsDiagnosticGlobalServiceCheckgen=upsDiagnosticGlobalServiceCheckgen, upsOutputPowergen=upsOutputPowergen, upsEventGenEntry=upsEventGenEntry, upsReceptacleLineIndexgen=upsReceptacleLineIndexgen, upsShutdownTypegen=upsShutdownTypegen, upsAlarmTestInProgressgen=upsAlarmTestInProgressgen, upsParameterTableSizegen=upsParameterTableSizegen, upsOutputGenEntry=upsOutputGenEntry, upsTrapAlarmConnectivityBusRestoredgen=upsTrapAlarmConnectivityBusRestoredgen, upsTrapAlarmDCRippleFailuregen=upsTrapAlarmDCRippleFailuregen, upsInverterOnOffgen=upsInverterOnOffgen, upsBypassLineIndexgen=upsBypassLineIndexgen, upsAlarmShutdownPendinggen=upsAlarmShutdownPendinggen, geHardware=geHardware, upsTrapAlarmReceptacleOffgen=upsTrapAlarmReceptacleOffgen, upsAlarmMaskAgen=upsAlarmMaskAgen, upsTrapAlarmConnectivityBusFailuregen=upsTrapAlarmConnectivityBusFailuregen, upsTrapAlarmValueHighgen=upsTrapAlarmValueHighgen, upsTestgen=upsTestgen, upsEventGetPreviousgen=upsEventGetPreviousgen, upsAlarmConnectivityBusFailuregen=upsAlarmConnectivityBusFailuregen, upsTrapAlarmShutdownImminentRestoredgen=upsTrapAlarmShutdownImminentRestoredgen, upsSecondsOnBatterygen=upsSecondsOnBatterygen, upsConfigInputVoltagegen=upsConfigInputVoltagegen, upsIdentUPSSoftwareVersiongen=upsIdentUPSSoftwareVersiongen, upsAlarmFuseFailuregen=upsAlarmFuseFailuregen, upsParameterValuegen=upsParameterValuegen, upsAlarmInputBadgen=upsAlarmInputBadgen, upsAlarmGeneralFaultgen=upsAlarmGeneralFaultgen, PositiveInteger32=PositiveInteger32, upsBypassgen=upsBypassgen, geDevicesDescriptions=geDevicesDescriptions, upsEstimatedChargeRemaininggen=upsEstimatedChargeRemaininggen, upsReceptacleGenEntry=upsReceptacleGenEntry, upsTrapAlarmDiagnosticTestFailedRestoredgen=upsTrapAlarmDiagnosticTestFailedRestoredgen, upsIdentNamegen=upsIdentNamegen, upsConfigOutputVoltagegen=upsConfigOutputVoltagegen, upsAlarmHighSpeedBusFailuregen=upsAlarmHighSpeedBusFailuregen, upsOutputNumLinesgen=upsOutputNumLinesgen, upsAlarmDescrgen=upsAlarmDescrgen, upsConfigBatteryCapacitygen=upsConfigBatteryCapacitygen, upsEventCodegen=upsEventCodegen, upsIdentAttachedDevicesgen=upsIdentAttachedDevicesgen, upsEventSpinLockgen=upsEventSpinLockgen, upsBypassFrequencygen=upsBypassFrequencygen, upsConfigHighVoltageTransferPointgen=upsConfigHighVoltageTransferPointgen, upsMainsStatisticsB5gen=upsMainsStatisticsB5gen, upsReceptacleOnOffgen=upsReceptacleOnOffgen, upsTrapAlarmUpsSystemOffgen=upsTrapAlarmUpsSystemOffgen, upsEventRetreiveCurrentTimeStampgen=upsEventRetreiveCurrentTimeStampgen, upsTrapAlarmGeneralFaultgen=upsTrapAlarmGeneralFaultgen, upsAlarmFanFailuregen=upsAlarmFanFailuregen, upsTrapAlarmOutputOffAsRequestedRestoredgen=upsTrapAlarmOutputOffAsRequestedRestoredgen, upsTrapAlarmUpsSystemOngen=upsTrapAlarmUpsSystemOngen, upsAlarmGenTable=upsAlarmGenTable, geUPSTrapsgen=geUPSTrapsgen, upsBatteryStatusgen=upsBatteryStatusgen, upsOutputGenTable=upsOutputGenTable, upsAlarmLowBatterygen=upsAlarmLowBatterygen, upsStartupAfterDelaygen=upsStartupAfterDelaygen, upsParametersReadgen=upsParametersReadgen, upsIdentManufacturergen=upsIdentManufacturergen, upsConfigLowBattTimegen=upsConfigLowBattTimegen, upsInputFrequencygen=upsInputFrequencygen, upsAlarmgen=upsAlarmgen, upsTrapAlarmAwaitingPowergen=upsTrapAlarmAwaitingPowergen, upsShutdownAfterDelaygen=upsShutdownAfterDelaygen, upsIdentOperatingTimegen=upsIdentOperatingTimegen, upsTrapAlarmFanFailuregen=upsTrapAlarmFanFailuregen, upsTrapAlarmGeneralFaultRestoredgen=upsTrapAlarmGeneralFaultRestoredgen, upsAlarmAwaitingPowergen=upsAlarmAwaitingPowergen, upsWellKnownTestsgen=upsWellKnownTestsgen, upsAlarmHighSpeedBusJBCRCFailuregen=upsAlarmHighSpeedBusJBCRCFailuregen, upsAlarmIdgen=upsAlarmIdgen, upsOutputPowerFactorgen=upsOutputPowerFactorgen, upsTrapAlarmDepletedBatteryRestoredgen=upsTrapAlarmDepletedBatteryRestoredgen, upsReceptacleGenTable=upsReceptacleGenTable, upsConfigAudibleStatusgen=upsConfigAudibleStatusgen, upsBatteryTemperaturegen=upsBatteryTemperaturegen, upsBypassCurrentgen=upsBypassCurrentgen, upsTrapAlarmHighspeedBusJBCRCRestoredBgen=upsTrapAlarmHighspeedBusJBCRCRestoredBgen, upsDiagnosticDCcapacitorsLifetimegen=upsDiagnosticDCcapacitorsLifetimegen, upsBatterygen=upsBatterygen, upsMainsStatisticsMBfailgen=upsMainsStatisticsMBfailgen, upsTrapAlarmOutputBadgen=upsTrapAlarmOutputBadgen, upsTrapAlarmFuseFailureRestoredgen=upsTrapAlarmFuseFailureRestoredgen, upsAlarmReceptacleOffgen=upsAlarmReceptacleOffgen, upsTrapAlarmDiagnosticTestFailedgen=upsTrapAlarmDiagnosticTestFailedgen, upsLoadSourcegen=upsLoadSourcegen, upsInputVoltagegen=upsInputVoltagegen, upsMainsStatisticsB2gen=upsMainsStatisticsB2gen, upsTrapAlarmUpsOutputOffgen=upsTrapAlarmUpsOutputOffgen, upsAlarmChargerFailedgen=upsAlarmChargerFailedgen, upsTestSpinLockgen=upsTestSpinLockgen, upsAlarmUpsOffAsRequestedgen=upsAlarmUpsOffAsRequestedgen, upsTestQuickBatteryTestgen=upsTestQuickBatteryTestgen, upsEventGetNextgen=upsEventGetNextgen, upsOutputCurrentgen=upsOutputCurrentgen, upsOutputPercentLoadgen=upsOutputPercentLoadgen, upsBypassVoltagegen=upsBypassVoltagegen, upsInputLineIndexgen=upsInputLineIndexgen, upsAlarmTempBadgen=upsAlarmTempBadgen, upsInputgen=upsInputgen, upsConfigInputFreqgen=upsConfigInputFreqgen, upsTrapAlarmShutdownPendingRestoredgen=upsTrapAlarmShutdownPendingRestoredgen, upsTestNoTestsInitiatedgen=upsTestNoTestsInitiatedgen, NonNegativeInteger32=NonNegativeInteger32, upsTrapAlarmInputBadRestoredgen=upsTrapAlarmInputBadRestoredgen, upsAlarmShutdownImminentgen=upsAlarmShutdownImminentgen, upsTrapAlarmAwaitingPowerRestoredgen=upsTrapAlarmAwaitingPowerRestoredgen, upsAlarmsPresentgen=upsAlarmsPresentgen, upsTrapAlarmChargerFailedRestoredgen=upsTrapAlarmChargerFailedRestoredgen, upsTrapAlarmOutputBadRestoredgen=upsTrapAlarmOutputBadRestoredgen, upsUPSModegen=upsUPSModegen, snmpWebIntCard=snmpWebIntCard, upsInputLineBadsgen=upsInputLineBadsgen, upsBypassGenEntry=upsBypassGenEntry, upsGetSetgen=upsGetSetgen, upsParametersWritegen=upsParametersWritegen, upsAutoRestartgen=upsAutoRestartgen, upsParameterSpinLockgen=upsParameterSpinLockgen, upsTrapAlarmOutputOverloadgen=upsTrapAlarmOutputOverloadgen, upsAlarmHighSpeedBusJACRCFailuregen=upsAlarmHighSpeedBusJACRCFailuregen, upsConfigBatteryChargeCurrentgen=upsConfigBatteryChargeCurrentgen, geRequestPacket=geRequestPacket, upsMainsStatisticsB10gen=upsMainsStatisticsB10gen, upsEventLineIndexgen=upsEventLineIndexgen, upsTrapAlarmTempBadRestoredgen=upsTrapAlarmTempBadRestoredgen, upsAlarmTimegen=upsAlarmTimegen, upsAlarmUpsOutputOffgen=upsAlarmUpsOutputOffgen, upsEventTableSizegen=upsEventTableSizegen, upsTrapAlarmOnBatterygen=upsTrapAlarmOnBatterygen, upsTrapAlarmLowBatterygen=upsTrapAlarmLowBatterygen, geDevices=geDevices, upsDiagnosticACcapacitorsLifetimegen=upsDiagnosticACcapacitorsLifetimegen, upsTrapAlarmInputBadgen=upsTrapAlarmInputBadgen, upsParametersStartAddressgen=upsParametersStartAddressgen, geGenericUPS=geGenericUPS, upsEventSetStartingTimeStampgen=upsEventSetStartingTimeStampgen, upsBypassPowergen=upsBypassPowergen, upsTestGeneralSystemsTestgen=upsTestGeneralSystemsTestgen, upsOutputVoltagegen=upsOutputVoltagegen, upsInputNumLinesgen=upsInputNumLinesgen, upsTrapAlarmOutputOffAsRequestedgen=upsTrapAlarmOutputOffAsRequestedgen, upsTrapAlarmBatteryBadRestoredgen=upsTrapAlarmBatteryBadRestoredgen, upsTrapAlarmBypassBadRestoredgen=upsTrapAlarmBypassBadRestoredgen, upsTrapAlarmValueLowgen=upsTrapAlarmValueLowgen, upsEventGenTable=upsEventGenTable, upsOutputgen=upsOutputgen, upsTestElapsedTimegen=upsTestElapsedTimegen, upsTrapAlarmFuseFailuregen=upsTrapAlarmFuseFailuregen, upsTrapAlarmFanFailureRestoredgen=upsTrapAlarmFanFailureRestoredgen, upsTestDeepBatteryCalibrationgen=upsTestDeepBatteryCalibrationgen, upsBatteryChargeMethodgen=upsBatteryChargeMethodgen)
mibBuilder.exportSymbols("GESINGLEUPS-MIB", upsEventTimegen=upsEventTimegen, upsConfiggen=upsConfiggen, upsParameterGenTable=upsParameterGenTable, upsTrapAlarmOutputOverloadRestoredgen=upsTrapAlarmOutputOverloadRestoredgen, upsAlarmOutputOffAsRequestedgen=upsAlarmOutputOffAsRequestedgen, upsAlarmOnBypassgen=upsAlarmOnBypassgen, upsTrapAlarmBatteryBadgen=upsTrapAlarmBatteryBadgen, upsOutputSourcegen=upsOutputSourcegen)
