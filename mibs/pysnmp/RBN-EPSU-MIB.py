#
# PySNMP MIB module RBN-EPSU-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RBN-EPSU-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:44:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
rbnMgmt, = mibBuilder.importSymbols("RBN-SMI", "rbnMgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibIdentifier, NotificationType, Unsigned32, iso, TimeTicks, Bits, Gauge32, Counter32, ObjectIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ModuleIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "NotificationType", "Unsigned32", "iso", "TimeTicks", "Bits", "Gauge32", "Counter32", "ObjectIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ModuleIdentity", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
rbnEpsuMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2352, 2, 47))
rbnEpsuMIB.setRevisions(('2009-09-23 12:00',))
if mibBuilder.loadTexts: rbnEpsuMIB.setLastUpdated('200909231200Z')
if mibBuilder.loadTexts: rbnEpsuMIB.setOrganization('Redback Networks, Inc.')
rbnEpsuStatMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1))
rbnEpsuS1uGtp = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 1))
rbnEpsuS1uDlPktsSent = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 1, 1), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS1uDlPktsSent.setStatus('current')
rbnEpsuS1uDlOctetsSent = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 1, 2), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS1uDlOctetsSent.setStatus('current')
rbnEpsuS1uDlPktsDropped = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS1uDlPktsDropped.setStatus('current')
rbnEpsuS1uDlPolicingPktsDropped = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 1, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS1uDlPolicingPktsDropped.setStatus('current')
rbnEpsuS1uDlUeIdlePktsDropped = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 1, 5), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS1uDlUeIdlePktsDropped.setStatus('current')
rbnEpsuS1uUlPktsRcvd = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 1, 6), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS1uUlPktsRcvd.setStatus('current')
rbnEpsuS1uUlOctetsRcvd = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 1, 7), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS1uUlOctetsRcvd.setStatus('current')
rbnEpsuS1uUlPktsDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 1, 8), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS1uUlPktsDiscarded.setStatus('current')
rbnEpsuS1uUlBearerPktsDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 1, 9), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS1uUlBearerPktsDiscarded.setStatus('current')
rbnEpsuS1uUlPolicingPktsDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 1, 10), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS1uUlPolicingPktsDiscarded.setStatus('current')
rbnEpsuSgwGtp = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 2))
rbnEpsuS5S8GtpDlPktsRcvd = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 2, 1), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS5S8GtpDlPktsRcvd.setStatus('current')
rbnEpsuS5S8GtpDlOctetsRcvd = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 2, 2), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS5S8GtpDlOctetsRcvd.setStatus('current')
rbnEpsuS5S8GtpDlPktsDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 2, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS5S8GtpDlPktsDiscarded.setStatus('current')
rbnEpsuS5S8GtpUlPktsSent = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 2, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS5S8GtpUlPktsSent.setStatus('current')
rbnEpsuS5S8GtpUlOctetsSent = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 2, 5), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS5S8GtpUlOctetsSent.setStatus('current')
rbnEpsuS5S8GtpUlPktsDropped = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 2, 6), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS5S8GtpUlPktsDropped.setStatus('current')
rbnEpsuPgwGtp = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 3))
rbnEpsuS5S8GtpDlPktsSent = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 3, 1), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS5S8GtpDlPktsSent.setStatus('current')
rbnEpsuS5S8GtpDlOctetsSent = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 3, 2), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS5S8GtpDlOctetsSent.setStatus('current')
rbnEpsuS5S8GtpDlPktsDropped = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 3, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS5S8GtpDlPktsDropped.setStatus('current')
rbnEpsuS5S8GtpDlPolicingPktsDropped = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 3, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS5S8GtpDlPolicingPktsDropped.setStatus('current')
rbnEpsuS5S8GtpUlPktsRcvd = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 3, 5), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS5S8GtpUlPktsRcvd.setStatus('current')
rbnEpsuS5S8GtpUlOctetsRcvd = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 3, 6), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS5S8GtpUlOctetsRcvd.setStatus('current')
rbnEpsuS5S8GtpUlPktsDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 3, 7), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS5S8GtpUlPktsDiscarded.setStatus('current')
rbnEpsuS5S8GtpUlBearerPktsDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 3, 8), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS5S8GtpUlBearerPktsDiscarded.setStatus('current')
rbnEpsuS5S8GtpUlPolicingPktsDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 3, 9), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuS5S8GtpUlPolicingPktsDiscarded.setStatus('current')
rbnEpsuSgi = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 4))
rbnEpsuSgiDlPktsRcvd = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 4, 1), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiDlPktsRcvd.setStatus('current')
rbnEpsuSgiDlOctetsRcvd = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 4, 2), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiDlOctetsRcvd.setStatus('current')
rbnEpsuSgiDlV6PktsRcvd = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 4, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiDlV6PktsRcvd.setStatus('current')
rbnEpsuSgiDlV6OctetsRcvd = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 4, 4), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiDlV6OctetsRcvd.setStatus('current')
rbnEpsuSgiDlPktsDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 4, 5), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiDlPktsDiscarded.setStatus('current')
rbnEpsuSgiUlPktsSent = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 4, 6), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiUlPktsSent.setStatus('current')
rbnEpsuSgiUlOctetsSent = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 4, 7), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiUlOctetsSent.setStatus('current')
rbnEpsuSgiUlV6PktsSent = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 4, 8), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiUlV6PktsSent.setStatus('current')
rbnEpsuSgiUlV6OctetsSent = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 4, 9), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiUlV6OctetsSent.setStatus('current')
rbnEpsuSgiUlPktsDropped = MibScalar((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 4, 10), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiUlPktsDropped.setStatus('current')
rbnEpsuSgiApn = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 5))
rbnEpsuSgiApnStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 5, 1), )
if mibBuilder.loadTexts: rbnEpsuSgiApnStatsTable.setStatus('current')
rbnEpsuSgiApnStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 5, 1, 1), ).setIndexNames((0, "RBN-EPSU-MIB", "rbnEpsuSgiApnIndex"))
if mibBuilder.loadTexts: rbnEpsuSgiApnStatsEntry.setStatus('current')
rbnEpsuSgiApnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 5, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: rbnEpsuSgiApnIndex.setStatus('current')
rbnEpsuSgiApnName = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 5, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiApnName.setStatus('current')
rbnEpsuSgiApnDlPktsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 5, 1, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiApnDlPktsRcvd.setStatus('current')
rbnEpsuSgiApnDlOctetsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 5, 1, 1, 4), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiApnDlOctetsRcvd.setStatus('current')
rbnEpsuSgiApnDlPktsDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 5, 1, 1, 5), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiApnDlPktsDiscarded.setStatus('current')
rbnEpsuSgiApnUlPktsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 5, 1, 1, 6), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiApnUlPktsSent.setStatus('current')
rbnEpsuSgiApnUlOctetsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 5, 1, 1, 7), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiApnUlOctetsSent.setStatus('current')
rbnEpsuSgiApnUlPktsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 5, 1, 1, 8), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiApnUlPktsDropped.setStatus('current')
rbnEpsuSgiApnDlV6PktsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 5, 1, 1, 9), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiApnDlV6PktsRcvd.setStatus('current')
rbnEpsuSgiApnDlV6OctetsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 5, 1, 1, 10), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiApnDlV6OctetsRcvd.setStatus('current')
rbnEpsuSgiApnUlV6PktsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 5, 1, 1, 11), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiApnUlV6PktsSent.setStatus('current')
rbnEpsuSgiApnUlV6OctetsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 47, 1, 5, 1, 1, 12), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnEpsuSgiApnUlV6OctetsSent.setStatus('current')
rbnEpsuNotifcationGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 47, 0))
rbnEpsuMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 47, 2))
rbnEpsuMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 47, 2, 1))
rbnEpsuMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 47, 2, 2))
rbnEpsuS1uGtpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2352, 2, 47, 2, 1, 1)).setObjects(("RBN-EPSU-MIB", "rbnEpsuS1uDlPktsSent"), ("RBN-EPSU-MIB", "rbnEpsuS1uDlOctetsSent"), ("RBN-EPSU-MIB", "rbnEpsuS1uDlPktsDropped"), ("RBN-EPSU-MIB", "rbnEpsuS1uDlPolicingPktsDropped"), ("RBN-EPSU-MIB", "rbnEpsuS1uDlUeIdlePktsDropped"), ("RBN-EPSU-MIB", "rbnEpsuS1uUlPktsRcvd"), ("RBN-EPSU-MIB", "rbnEpsuS1uUlOctetsRcvd"), ("RBN-EPSU-MIB", "rbnEpsuS1uUlPktsDiscarded"), ("RBN-EPSU-MIB", "rbnEpsuS1uUlBearerPktsDiscarded"), ("RBN-EPSU-MIB", "rbnEpsuS1uUlPolicingPktsDiscarded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnEpsuS1uGtpGroup = rbnEpsuS1uGtpGroup.setStatus('current')
rbnEpsuSgwGtpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2352, 2, 47, 2, 1, 2)).setObjects(("RBN-EPSU-MIB", "rbnEpsuS5S8GtpDlPktsRcvd"), ("RBN-EPSU-MIB", "rbnEpsuS5S8GtpDlOctetsRcvd"), ("RBN-EPSU-MIB", "rbnEpsuS5S8GtpDlPktsDiscarded"), ("RBN-EPSU-MIB", "rbnEpsuS5S8GtpUlPktsSent"), ("RBN-EPSU-MIB", "rbnEpsuS5S8GtpUlOctetsSent"), ("RBN-EPSU-MIB", "rbnEpsuS5S8GtpUlPktsDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnEpsuSgwGtpGroup = rbnEpsuSgwGtpGroup.setStatus('current')
rbnEpsuPgwGtpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2352, 2, 47, 2, 1, 3)).setObjects(("RBN-EPSU-MIB", "rbnEpsuS5S8GtpDlPktsSent"), ("RBN-EPSU-MIB", "rbnEpsuS5S8GtpDlOctetsSent"), ("RBN-EPSU-MIB", "rbnEpsuS5S8GtpDlPktsDropped"), ("RBN-EPSU-MIB", "rbnEpsuS5S8GtpDlPolicingPktsDropped"), ("RBN-EPSU-MIB", "rbnEpsuS5S8GtpUlPktsRcvd"), ("RBN-EPSU-MIB", "rbnEpsuS5S8GtpUlOctetsRcvd"), ("RBN-EPSU-MIB", "rbnEpsuS5S8GtpUlPktsDiscarded"), ("RBN-EPSU-MIB", "rbnEpsuS5S8GtpUlBearerPktsDiscarded"), ("RBN-EPSU-MIB", "rbnEpsuS5S8GtpUlPolicingPktsDiscarded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnEpsuPgwGtpGroup = rbnEpsuPgwGtpGroup.setStatus('current')
rbnEpsuSgiGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2352, 2, 47, 2, 1, 4)).setObjects(("RBN-EPSU-MIB", "rbnEpsuSgiDlPktsRcvd"), ("RBN-EPSU-MIB", "rbnEpsuSgiDlOctetsRcvd"), ("RBN-EPSU-MIB", "rbnEpsuSgiDlV6PktsRcvd"), ("RBN-EPSU-MIB", "rbnEpsuSgiDlV6OctetsRcvd"), ("RBN-EPSU-MIB", "rbnEpsuSgiDlPktsDiscarded"), ("RBN-EPSU-MIB", "rbnEpsuSgiUlPktsSent"), ("RBN-EPSU-MIB", "rbnEpsuSgiUlOctetsSent"), ("RBN-EPSU-MIB", "rbnEpsuSgiUlPktsDropped"), ("RBN-EPSU-MIB", "rbnEpsuSgiUlV6PktsSent"), ("RBN-EPSU-MIB", "rbnEpsuSgiUlV6OctetsSent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnEpsuSgiGroup = rbnEpsuSgiGroup.setStatus('current')
rbnEspuSgiApnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2352, 2, 47, 2, 1, 5)).setObjects(("RBN-EPSU-MIB", "rbnEpsuSgiApnName"), ("RBN-EPSU-MIB", "rbnEpsuSgiApnDlPktsRcvd"), ("RBN-EPSU-MIB", "rbnEpsuSgiApnDlOctetsRcvd"), ("RBN-EPSU-MIB", "rbnEpsuSgiApnDlV6PktsRcvd"), ("RBN-EPSU-MIB", "rbnEpsuSgiApnDlV6OctetsRcvd"), ("RBN-EPSU-MIB", "rbnEpsuSgiApnDlPktsDiscarded"), ("RBN-EPSU-MIB", "rbnEpsuSgiApnUlPktsSent"), ("RBN-EPSU-MIB", "rbnEpsuSgiApnUlOctetsSent"), ("RBN-EPSU-MIB", "rbnEpsuSgiApnUlV6PktsSent"), ("RBN-EPSU-MIB", "rbnEpsuSgiApnUlV6OctetsSent"), ("RBN-EPSU-MIB", "rbnEpsuSgiApnUlPktsDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnEspuSgiApnGroup = rbnEspuSgiApnGroup.setStatus('current')
rbnEpsuMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2352, 2, 47, 2, 2, 1)).setObjects(("RBN-EPSU-MIB", "rbnEpsuS1uGtpGroup"), ("RBN-EPSU-MIB", "rbnEpsuSgwGtpGroup"), ("RBN-EPSU-MIB", "rbnEpsuPgwGtpGroup"), ("RBN-EPSU-MIB", "rbnEpsuSgiGroup"), ("RBN-EPSU-MIB", "rbnEspuSgiApnGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnEpsuMIBCompliance = rbnEpsuMIBCompliance.setStatus('current')
mibBuilder.exportSymbols("RBN-EPSU-MIB", rbnEpsuSgi=rbnEpsuSgi, rbnEpsuS1uUlPktsRcvd=rbnEpsuS1uUlPktsRcvd, rbnEpsuNotifcationGroup=rbnEpsuNotifcationGroup, rbnEpsuS1uDlOctetsSent=rbnEpsuS1uDlOctetsSent, rbnEpsuSgiApnName=rbnEpsuSgiApnName, rbnEpsuSgwGtpGroup=rbnEpsuSgwGtpGroup, rbnEpsuPgwGtpGroup=rbnEpsuPgwGtpGroup, rbnEpsuS1uDlUeIdlePktsDropped=rbnEpsuS1uDlUeIdlePktsDropped, rbnEpsuS1uGtpGroup=rbnEpsuS1uGtpGroup, rbnEpsuS5S8GtpDlPktsDropped=rbnEpsuS5S8GtpDlPktsDropped, rbnEpsuSgiDlPktsDiscarded=rbnEpsuSgiDlPktsDiscarded, rbnEpsuS1uUlBearerPktsDiscarded=rbnEpsuS1uUlBearerPktsDiscarded, rbnEpsuS5S8GtpUlPktsDiscarded=rbnEpsuS5S8GtpUlPktsDiscarded, rbnEpsuSgiApnDlV6OctetsRcvd=rbnEpsuSgiApnDlV6OctetsRcvd, rbnEpsuS1uDlPktsDropped=rbnEpsuS1uDlPktsDropped, rbnEpsuS1uUlOctetsRcvd=rbnEpsuS1uUlOctetsRcvd, rbnEpsuS1uDlPktsSent=rbnEpsuS1uDlPktsSent, rbnEpsuMIBGroups=rbnEpsuMIBGroups, rbnEpsuSgiApnDlPktsRcvd=rbnEpsuSgiApnDlPktsRcvd, rbnEpsuS5S8GtpDlPktsSent=rbnEpsuS5S8GtpDlPktsSent, rbnEpsuStatMIBObjects=rbnEpsuStatMIBObjects, rbnEpsuS5S8GtpDlOctetsRcvd=rbnEpsuS5S8GtpDlOctetsRcvd, rbnEpsuS5S8GtpUlBearerPktsDiscarded=rbnEpsuS5S8GtpUlBearerPktsDiscarded, rbnEpsuSgiDlOctetsRcvd=rbnEpsuSgiDlOctetsRcvd, rbnEpsuSgiUlV6PktsSent=rbnEpsuSgiUlV6PktsSent, rbnEpsuSgiApnUlV6PktsSent=rbnEpsuSgiApnUlV6PktsSent, rbnEpsuS1uUlPktsDiscarded=rbnEpsuS1uUlPktsDiscarded, rbnEpsuS5S8GtpUlPktsRcvd=rbnEpsuS5S8GtpUlPktsRcvd, rbnEpsuSgiUlPktsDropped=rbnEpsuSgiUlPktsDropped, rbnEpsuSgiApn=rbnEpsuSgiApn, rbnEpsuSgiApnIndex=rbnEpsuSgiApnIndex, rbnEpsuSgiGroup=rbnEpsuSgiGroup, rbnEspuSgiApnGroup=rbnEspuSgiApnGroup, rbnEpsuSgiApnUlV6OctetsSent=rbnEpsuSgiApnUlV6OctetsSent, rbnEpsuSgiApnStatsEntry=rbnEpsuSgiApnStatsEntry, rbnEpsuSgiApnDlPktsDiscarded=rbnEpsuSgiApnDlPktsDiscarded, rbnEpsuS5S8GtpDlPktsDiscarded=rbnEpsuS5S8GtpDlPktsDiscarded, rbnEpsuSgwGtp=rbnEpsuSgwGtp, rbnEpsuMIB=rbnEpsuMIB, rbnEpsuS1uGtp=rbnEpsuS1uGtp, rbnEpsuSgiDlV6OctetsRcvd=rbnEpsuSgiDlV6OctetsRcvd, rbnEpsuSgiApnDlOctetsRcvd=rbnEpsuSgiApnDlOctetsRcvd, rbnEpsuSgiApnUlPktsSent=rbnEpsuSgiApnUlPktsSent, rbnEpsuS5S8GtpUlOctetsSent=rbnEpsuS5S8GtpUlOctetsSent, rbnEpsuS5S8GtpDlPolicingPktsDropped=rbnEpsuS5S8GtpDlPolicingPktsDropped, rbnEpsuS5S8GtpUlPolicingPktsDiscarded=rbnEpsuS5S8GtpUlPolicingPktsDiscarded, rbnEpsuMIBConformance=rbnEpsuMIBConformance, rbnEpsuS1uDlPolicingPktsDropped=rbnEpsuS1uDlPolicingPktsDropped, rbnEpsuS1uUlPolicingPktsDiscarded=rbnEpsuS1uUlPolicingPktsDiscarded, rbnEpsuS5S8GtpUlOctetsRcvd=rbnEpsuS5S8GtpUlOctetsRcvd, rbnEpsuSgiApnUlOctetsSent=rbnEpsuSgiApnUlOctetsSent, rbnEpsuMIBCompliance=rbnEpsuMIBCompliance, rbnEpsuS5S8GtpUlPktsDropped=rbnEpsuS5S8GtpUlPktsDropped, rbnEpsuSgiApnDlV6PktsRcvd=rbnEpsuSgiApnDlV6PktsRcvd, rbnEpsuSgiApnUlPktsDropped=rbnEpsuSgiApnUlPktsDropped, rbnEpsuSgiUlOctetsSent=rbnEpsuSgiUlOctetsSent, rbnEpsuS5S8GtpUlPktsSent=rbnEpsuS5S8GtpUlPktsSent, rbnEpsuMIBCompliances=rbnEpsuMIBCompliances, rbnEpsuPgwGtp=rbnEpsuPgwGtp, rbnEpsuS5S8GtpDlOctetsSent=rbnEpsuS5S8GtpDlOctetsSent, rbnEpsuSgiUlPktsSent=rbnEpsuSgiUlPktsSent, rbnEpsuSgiDlPktsRcvd=rbnEpsuSgiDlPktsRcvd, rbnEpsuSgiApnStatsTable=rbnEpsuSgiApnStatsTable, PYSNMP_MODULE_ID=rbnEpsuMIB, rbnEpsuSgiUlV6OctetsSent=rbnEpsuSgiUlV6OctetsSent, rbnEpsuS5S8GtpDlPktsRcvd=rbnEpsuS5S8GtpDlPktsRcvd, rbnEpsuSgiDlV6PktsRcvd=rbnEpsuSgiDlV6PktsRcvd)
