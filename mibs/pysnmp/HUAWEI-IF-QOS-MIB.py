#
# PySNMP MIB module HUAWEI-IF-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-IF-QOS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:33:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, iso, Integer32, Bits, ModuleIdentity, Counter32, TimeTicks, Gauge32, Unsigned32, MibIdentifier, IpAddress, Counter64, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "Integer32", "Bits", "ModuleIdentity", "Counter32", "TimeTicks", "Gauge32", "Unsigned32", "MibIdentifier", "IpAddress", "Counter64", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
hwIfQoSMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2))
if mibBuilder.loadTexts: hwIfQoSMib.setLastUpdated('200409150000Z')
if mibBuilder.loadTexts: hwIfQoSMib.setOrganization('Huawei Technologies co.,Ltd.')
hwQoS = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32))
qosFIFOTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 1), )
if mibBuilder.loadTexts: qosFIFOTable.setStatus('mandatory')
qosFIFOEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 1, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosFIFOIfIndex"))
if mibBuilder.loadTexts: qosFIFOEntry.setStatus('mandatory')
qosFIFOIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosFIFOIfIndex.setStatus('mandatory')
qosFIFOIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosFIFOIfName.setStatus('mandatory')
qosFIFOMaxQueueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosFIFOMaxQueueLen.setStatus('mandatory')
qosFIFOCurQueueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosFIFOCurQueueLen.setStatus('mandatory')
qosFIFODiscardPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosFIFODiscardPkt.setStatus('mandatory')
qosUndoFIFO = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosFIFO", 0), ("qosNoFIFO", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoFIFO.setStatus('mandatory')
qosPqlDefaultTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 2), )
if mibBuilder.loadTexts: qosPqlDefaultTable.setStatus('mandatory')
qosPqlDefaultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 2, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosPqlDefaultListNum"))
if mibBuilder.loadTexts: qosPqlDefaultEntry.setStatus('mandatory')
qosPqlDefaultListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPqlDefaultListNum.setStatus('mandatory')
qosPqlDefaultQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("top", 0), ("middle", 1), ("normal", 2), ("bottom", 3))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosPqlDefaultQueueType.setStatus('mandatory')
qosUndoPqlDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosPqlDefault", 0), ("qosNoPqlDefault", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoPqlDefault.setStatus('mandatory')
qosPqlQueueLenTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 3), )
if mibBuilder.loadTexts: qosPqlQueueLenTable.setStatus('mandatory')
qosPqlQueueLenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 3, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosPqlQueLenListNum"), (0, "HUAWEI-IF-QOS-MIB", "qosPqlQueLenQueueType"))
if mibBuilder.loadTexts: qosPqlQueueLenEntry.setStatus('mandatory')
qosPqlQueLenListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPqlQueLenListNum.setStatus('mandatory')
qosPqlQueLenQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("top", 0), ("middle", 1), ("normal", 2), ("bottom", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPqlQueLenQueueType.setStatus('mandatory')
qosPqlQueLenValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosPqlQueLenValue.setStatus('mandatory')
qosUndoPqlQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosPqlQueLen", 0), ("qosNoPqlQueLen", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoPqlQueLen.setStatus('mandatory')
qosPqlIfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 4), )
if mibBuilder.loadTexts: qosPqlIfTable.setStatus('mandatory')
qosPqlIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 4, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosPqlIfListNum"), (0, "HUAWEI-IF-QOS-MIB", "qosPqlIfIndex"))
if mibBuilder.loadTexts: qosPqlIfEntry.setStatus('mandatory')
qosPqlIfListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPqlIfListNum.setStatus('mandatory')
qosPqlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPqlIfIndex.setStatus('mandatory')
qosPqlIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 4, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPqlIfName.setStatus('mandatory')
qosPqlIfQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("top", 0), ("middle", 1), ("normal", 2), ("bottom", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosPqlIfQueueType.setStatus('mandatory')
qosUndoPqlIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosPqlIF", 0), ("qosNoPqlIF", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoPqlIf.setStatus('mandatory')
qosPqlProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 5), )
if mibBuilder.loadTexts: qosPqlProtocolTable.setStatus('mandatory')
qosPqlProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 5, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosPqlProListNum"), (0, "HUAWEI-IF-QOS-MIB", "qosPqlProName"), (0, "HUAWEI-IF-QOS-MIB", "qosPqlProQueKey"), (0, "HUAWEI-IF-QOS-MIB", "qosPqlProQueKeyValue"))
if mibBuilder.loadTexts: qosPqlProtocolEntry.setStatus('mandatory')
qosPqlProListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPqlProListNum.setStatus('mandatory')
qosPqlProName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ip", 1), ("mpls", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPqlProName.setStatus('mandatory')
qosPqlProQueKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("null", 1), ("fragment", 2), ("acl", 3), ("less-than", 4), ("greater-than", 5), ("tcp", 6), ("udp", 7), ("exp-mask", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPqlProQueKey.setStatus('mandatory')
qosPqlProQueKeyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPqlProQueKeyValue.setStatus('mandatory')
qosPqlProQueType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("top", 0), ("middle", 1), ("normal", 2), ("bottom", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosPqlProQueType.setStatus('mandatory')
qosUndoPqlProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosPqlProtocol", 0), ("qosNoPqlProtocol", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoPqlProtocol.setStatus('mandatory')
qosPQTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 6), )
if mibBuilder.loadTexts: qosPQTable.setStatus('mandatory')
qosPQEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 6, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosPQIfIndex"))
if mibBuilder.loadTexts: qosPQEntry.setStatus('mandatory')
qosPQIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQIfIndex.setStatus('mandatory')
qosPQListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosPQListNum.setStatus('mandatory')
qosPQIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 6, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQIfName.setStatus('mandatory')
qosPQTopPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQTopPkt.setStatus('mandatory')
qosPQTopDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQTopDiscard.setStatus('mandatory')
qosPQTopMaxQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQTopMaxQueLen.setStatus('mandatory')
qosPQMiddlePkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQMiddlePkt.setStatus('mandatory')
qosPQMiddleDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQMiddleDiscard.setStatus('mandatory')
qosPQMiddleMaxQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQMiddleMaxQueLen.setStatus('mandatory')
qosPQNormalPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQNormalPkt.setStatus('mandatory')
qosPQNormalDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQNormalDiscard.setStatus('mandatory')
qosPQNormalMaxQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 6, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQNormalMaxQueLen.setStatus('mandatory')
qosPQBottomPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 6, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQBottomPkt.setStatus('mandatory')
qosPQBottomDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQBottomDiscard.setStatus('mandatory')
qosPQBottomMaxQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 6, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosPQBottomMaxQueLen.setStatus('mandatory')
qosUndoPQ = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 6, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosPQ", 0), ("qosNoPQ", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoPQ.setStatus('mandatory')
qosCqlDefaultTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 7), )
if mibBuilder.loadTexts: qosCqlDefaultTable.setStatus('mandatory')
qosCqlDefaultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 7, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosCqlListNum"))
if mibBuilder.loadTexts: qosCqlDefaultEntry.setStatus('mandatory')
qosCqlListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCqlListNum.setStatus('mandatory')
qosCqlQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCqlQueueNum.setStatus('mandatory')
qosUndoCqlDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosCqlDefault", 0), ("qosNoCqlDefault", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoCqlDefault.setStatus('mandatory')
qosCqlIfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 8), )
if mibBuilder.loadTexts: qosCqlIfTable.setStatus('mandatory')
qosCqlIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 8, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosCqlIfListNum"), (0, "HUAWEI-IF-QOS-MIB", "qosCqlIfIndex"))
if mibBuilder.loadTexts: qosCqlIfEntry.setStatus('mandatory')
qosCqlIfListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCqlIfListNum.setStatus('mandatory')
qosCqlIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCqlIfIndex.setStatus('mandatory')
qosCqlIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 8, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCqlIfName.setStatus('mandatory')
qosCqlIfQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCqlIfQueueNum.setStatus('mandatory')
qosUndoCqlIf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosCqlIf", 0), ("qosNoCqlIf", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoCqlIf.setStatus('mandatory')
qosCqlProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 9), )
if mibBuilder.loadTexts: qosCqlProtocolTable.setStatus('mandatory')
qosCqlProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 9, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosCqlProListNum"), (0, "HUAWEI-IF-QOS-MIB", "qosCqlProName"), (0, "HUAWEI-IF-QOS-MIB", "qosCqlProQueKey"), (0, "HUAWEI-IF-QOS-MIB", "qosCqlProQueKeyValue"))
if mibBuilder.loadTexts: qosCqlProtocolEntry.setStatus('mandatory')
qosCqlProListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCqlProListNum.setStatus('mandatory')
qosCqlProName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ip", 1), ("mpls", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCqlProName.setStatus('mandatory')
qosCqlProQueKey = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("null", 1), ("fragment", 2), ("acl", 3), ("less-than", 4), ("greater-than", 5), ("tcp", 6), ("udp", 7), ("exp-mask", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCqlProQueKey.setStatus('mandatory')
qosCqlProQueKeyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCqlProQueKeyValue.setStatus('mandatory')
qosCqlProQueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCqlProQueNum.setStatus('mandatory')
qosUndoCqlProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosCqlProtocol", 0), ("qosNoCqlProtocol", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoCqlProtocol.setStatus('mandatory')
qosCqlQueParaTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 10), )
if mibBuilder.loadTexts: qosCqlQueParaTable.setStatus('mandatory')
qosCqlQueParaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 10, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosCqlQueParaListNum"), (0, "HUAWEI-IF-QOS-MIB", "qosCqlQueParaQueNum"))
if mibBuilder.loadTexts: qosCqlQueParaEntry.setStatus('mandatory')
qosCqlQueParaListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCqlQueParaListNum.setStatus('mandatory')
qosCqlQueParaQueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCqlQueParaQueNum.setStatus('mandatory')
qosCqlQueParaServing = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215)).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCqlQueParaServing.setStatus('mandatory')
qosCqlQueParaMaxQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCqlQueParaMaxQueLen.setStatus('mandatory')
qosUndoCqlQueParaServing = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosCqlQueParaServing", 0), ("qosNoCqlQueParaServing", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoCqlQueParaServing.setStatus('mandatory')
qosUndoCqlQueParaMaxQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosCqlQueParaMaxQueLen", 0), ("qosNoCqlQueParaMaxQueLen", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoCqlQueParaMaxQueLen.setStatus('mandatory')
qosCQTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 11), )
if mibBuilder.loadTexts: qosCQTable.setStatus('mandatory')
qosCQEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 11, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosCQIfIndex"))
if mibBuilder.loadTexts: qosCQEntry.setStatus('mandatory')
qosCQIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCQIfIndex.setStatus('mandatory')
qosCQListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCQListNum.setStatus('mandatory')
qosCQIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 11, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCQIfName.setStatus('mandatory')
qosUndoCQ = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosCQ", 0), ("qosNoCQ", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoCQ.setStatus('mandatory')
qosCQRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 12), )
if mibBuilder.loadTexts: qosCQRunInfoTable.setStatus('mandatory')
qosCQRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 12, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosCQRunInfoIfIndex"), (0, "HUAWEI-IF-QOS-MIB", "qosCQRunInfoQueNum"))
if mibBuilder.loadTexts: qosCQRunInfoEntry.setStatus('mandatory')
qosCQRunInfoIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCQRunInfoIfIndex.setStatus('mandatory')
qosCQRunInfoQueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCQRunInfoQueNum.setStatus('mandatory')
qosCQRunInfoIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 12, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCQRunInfoIfName.setStatus('mandatory')
qosCQRunInfoQuePkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCQRunInfoQuePkt.setStatus('mandatory')
qosCQRunInfoQueDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCQRunInfoQueDiscard.setStatus('mandatory')
qosCQRunInfoMaxQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCQRunInfoMaxQueLen.setStatus('mandatory')
qosWFQTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 13), )
if mibBuilder.loadTexts: qosWFQTable.setStatus('mandatory')
qosWFQEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 13, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosWFQIfIndex"))
if mibBuilder.loadTexts: qosWFQEntry.setStatus('mandatory')
qosWFQIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWFQIfIndex.setStatus('mandatory')
qosWFQIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 13, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWFQIfName.setStatus('mandatory')
qosWFQMaxQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosWFQMaxQueLen.setStatus('mandatory')
qosWFQTotalQueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 32, 64, 128, 256, 512, 1024, 2048, 4096))).clone(namedValues=NamedValues(("a16", 16), ("a32", 32), ("a64", 64), ("a128", 128), ("a256", 256), ("a512", 512), ("a1024", 1024), ("a2048", 2048), ("a4096", 4096)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosWFQTotalQueNum.setStatus('mandatory')
qosWFQCurQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 13, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWFQCurQueLen.setStatus('mandatory')
qosWFQTotalDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWFQTotalDiscard.setStatus('mandatory')
qosWFQActiveQueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 13, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWFQActiveQueNum.setStatus('mandatory')
qosWFQMaxActiveQueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 13, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWFQMaxActiveQueNum.setStatus('mandatory')
qosUndoWFQ = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 13, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosWFQ", 0), ("qosNoWFQ", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoWFQ.setStatus('mandatory')
qosWREDTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 14), )
if mibBuilder.loadTexts: qosWREDTable.setStatus('mandatory')
qosWREDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 14, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosWREDIfIndex"))
if mibBuilder.loadTexts: qosWREDEntry.setStatus('mandatory')
qosWREDIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWREDIfIndex.setStatus('mandatory')
qosWREDIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 14, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWREDIfName.setStatus('mandatory')
qosWREDWeightConstant = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 14, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(9)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosWREDWeightConstant.setStatus('mandatory')
qosWREDEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosWREDEnable.setStatus('mandatory')
qosUndoWREDWeightConstant = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 14, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosWREDExponent", 0), ("qosNoWREDExponent", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoWREDWeightConstant.setStatus('mandatory')
qosWREDPreTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 15), )
if mibBuilder.loadTexts: qosWREDPreTable.setStatus('mandatory')
qosWREDPreEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 15, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosWREDPreIfIndex"), (0, "HUAWEI-IF-QOS-MIB", "qosWREDPrecedence"))
if mibBuilder.loadTexts: qosWREDPreEntry.setStatus('mandatory')
qosWREDPreIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWREDPreIfIndex.setStatus('mandatory')
qosWREDPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 15, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWREDPrecedence.setStatus('mandatory')
qosWREDPreIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 15, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWREDPreIfName.setStatus('mandatory')
qosWREDPreLowLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 15, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosWREDPreLowLimit.setStatus('mandatory')
qosWREDPreHighLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 15, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosWREDPreHighLimit.setStatus('mandatory')
qosWREDPreDiscardProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 15, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosWREDPreDiscardProbability.setStatus('mandatory')
qosWREDPreRandomDropNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 15, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWREDPreRandomDropNum.setStatus('mandatory')
qosWREDPreTailDropNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 15, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosWREDPreTailDropNum.setStatus('mandatory')
qosUndoWREDPre = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 15, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosWREDPre", 0), ("qosNoWREDPre", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoWREDPre.setStatus('mandatory')
qosCarlTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 16), )
if mibBuilder.loadTexts: qosCarlTable.setStatus('mandatory')
qosCarlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 16, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosCarlListNum"))
if mibBuilder.loadTexts: qosCarlEntry.setStatus('mandatory')
qosCarlListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 16, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCarlListNum.setStatus('mandatory')
qosCarlParaType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mac-address", 1), ("prec-mask", 2), ("dscp-mask", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCarlParaType.setStatus('mandatory')
qosCarlParaValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 16, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCarlParaValue.setStatus('mandatory')
qosUndoCarl = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosCARL", 0), ("qosNoCARL", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoCarl.setStatus('mandatory')
qosCARTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17), )
if mibBuilder.loadTexts: qosCARTable.setStatus('mandatory')
qosCAREntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosCARIfIndex"), (0, "HUAWEI-IF-QOS-MIB", "qosCARPktDirection"), (0, "HUAWEI-IF-QOS-MIB", "qosCARType"), (0, "HUAWEI-IF-QOS-MIB", "qosCARListNum"), (0, "HUAWEI-IF-QOS-MIB", "qosCARCIR"), (0, "HUAWEI-IF-QOS-MIB", "qosCARBurstSize"), (0, "HUAWEI-IF-QOS-MIB", "qosCARExcessBurstSize"))
if mibBuilder.loadTexts: qosCAREntry.setStatus('mandatory')
qosCARIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCARIfIndex.setStatus('mandatory')
qosCARIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCARIfName.setStatus('mandatory')
qosCARPktDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCARPktDirection.setStatus('mandatory')
qosCARType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("acl", 1), ("carl", 2), ("all", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCARType.setStatus('mandatory')
qosCARListNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 199), ValueRangeConstraint(2000, 3999), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCARListNum.setStatus('mandatory')
qosCARCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8000, 155000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCARCIR.setStatus('mandatory')
qosCARBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(15000, 155000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCARBurstSize.setStatus('mandatory')
qosCARExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 155000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCARExcessBurstSize.setStatus('mandatory')
qosCARConformAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("continue", 1), ("discard", 2), ("remark-prec-continue", 3), ("remark-prec-pass", 4), ("pass", 5), ("remark-mplsexp-continue", 6), ("remark-mplsexp-pass", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCARConformAction.setStatus('mandatory')
qosCARExceedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("continue", 1), ("discard", 2), ("remark-prec-continue", 3), ("remark-prec-pass", 4), ("pass", 5), ("remark-mplsexp-continue", 6), ("remark-mplsexp-pass", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCARExceedAction.setStatus('mandatory')
qosCARConformNewPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCARConformNewPrec.setStatus('mandatory')
qosCARExceedNewPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosCARExceedNewPrec.setStatus('mandatory')
qosCARConformPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCARConformPkt.setStatus('mandatory')
qosCARConformByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCARConformByte.setStatus('mandatory')
qosCARExceedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCARExceedPkt.setStatus('mandatory')
qosCARExceedByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosCARExceedByte.setStatus('mandatory')
qosUndoCAR = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 17, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosCAR", 0), ("qosNoCAR", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoCAR.setStatus('mandatory')
qosGTSTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 18), )
if mibBuilder.loadTexts: qosGTSTable.setStatus('mandatory')
qosGTSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 18, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosGTSIfIndex"), (0, "HUAWEI-IF-QOS-MIB", "qosGTSType"), (0, "HUAWEI-IF-QOS-MIB", "qosGTSACLNum"))
if mibBuilder.loadTexts: qosGTSEntry.setStatus('mandatory')
qosGTSIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 18, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSIfIndex.setStatus('mandatory')
qosGTSIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 18, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSIfName.setStatus('mandatory')
qosGTSType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("acl", 1), ("all", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSType.setStatus('mandatory')
qosGTSACLNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 18, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSACLNum.setStatus('mandatory')
qosGTSCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 18, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8000, 155000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosGTSCIR.setStatus('mandatory')
qosGTSBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 18, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(15000, 155000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosGTSBurstSize.setStatus('mandatory')
qosGTSExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 18, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 155000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosGTSExcessBurstSize.setStatus('mandatory')
qosGTSMaxQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 18, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosGTSMaxQueLen.setStatus('mandatory')
qosGTSCurQueLen = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 18, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSCurQueLen.setStatus('mandatory')
qosGTSPassPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 18, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSPassPkt.setStatus('mandatory')
qosGTSPassByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 18, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSPassByte.setStatus('mandatory')
qosGTSDelayPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 18, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSDelayPkt.setStatus('mandatory')
qosGTSDelayByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 18, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSDelayByte.setStatus('mandatory')
qosGTSDiscardPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 18, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSDiscardPkt.setStatus('mandatory')
qosGTSDiscardByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 18, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosGTSDiscardByte.setStatus('mandatory')
qosUndoGTS = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 18, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosGTS", 0), ("qosNoGTS", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoGTS.setStatus('mandatory')
qosLRTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 19), )
if mibBuilder.loadTexts: qosLRTable.setStatus('mandatory')
qosLREntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 19, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosLRIfIndex"))
if mibBuilder.loadTexts: qosLREntry.setStatus('mandatory')
qosLRIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 19, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosLRIfIndex.setStatus('mandatory')
qosLRIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 19, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosLRIfName.setStatus('mandatory')
qosLRCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 19, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8000, 155000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosLRCIR.setStatus('mandatory')
qosLRBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 19, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(15000, 155000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosLRBurstSize.setStatus('mandatory')
qosLRExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 19, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 155000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosLRExcessBurstSize.setStatus('mandatory')
qosLRPassPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 19, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosLRPassPkt.setStatus('mandatory')
qosLRPassByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 19, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosLRPassByte.setStatus('mandatory')
qosLRDelayPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 19, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosLRDelayPkt.setStatus('mandatory')
qosLRDelayByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 19, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosLRDelayByte.setStatus('mandatory')
qosUndoLR = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 19, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("qosLR", 0), ("qosNoLR", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosUndoLR.setStatus('mandatory')
qosIfBandwidthTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 20), )
if mibBuilder.loadTexts: qosIfBandwidthTable.setStatus('current')
qosIfBandwidthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 20, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosIfBandwidthIfIndex"))
if mibBuilder.loadTexts: qosIfBandwidthEntry.setStatus('current')
qosIfBandwidthIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 20, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosIfBandwidthIfIndex.setStatus('current')
qosIFBandwidthMaxBW = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 20, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosIFBandwidthMaxBW.setStatus('current')
qosIFBandwidthMaxReservedBWPct = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 20, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: qosIFBandwidthMaxReservedBWPct.setStatus('current')
qosIFBandwidthMaxReservedBW = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 20, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosIFBandwidthMaxReservedBW.setStatus('current')
qosIFBandwidthAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 20, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosIFBandwidthAvailable.setStatus('current')
qosIFBandwidthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 20, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosIFBandwidthRowStatus.setStatus('current')
qosRTPIfApplyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 21), )
if mibBuilder.loadTexts: qosRTPIfApplyTable.setStatus('current')
qosRTPIfApplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 21, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosRTPIfApplyIfIndex"))
if mibBuilder.loadTexts: qosRTPIfApplyEntry.setStatus('current')
qosRTPIfApplyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 21, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosRTPIfApplyIfIndex.setStatus('current')
qosRTPIfApplyStartPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 21, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2000, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosRTPIfApplyStartPort.setStatus('current')
qosRTPIfApplyEndPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 21, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2000, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosRTPIfApplyEndPort.setStatus('current')
qosRTPIfApplyBandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 21, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosRTPIfApplyBandWidth.setStatus('current')
qosRTPIfApplyCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 21, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1500, 2000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosRTPIfApplyCbs.setStatus('current')
qosRTPIfApplyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 21, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: qosRTPIfApplyRowStatus.setStatus('current')
qosRTPIfQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 22), )
if mibBuilder.loadTexts: qosRTPIfQueueRunInfoTable.setStatus('current')
qosRTPIfQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 22, 1), ).setIndexNames((0, "HUAWEI-IF-QOS-MIB", "qosRTPIfApplyIfIndex"))
if mibBuilder.loadTexts: qosRTPIfQueueRunInfoEntry.setStatus('current')
qosRTPIfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 22, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosRTPIfQueueSize.setStatus('current')
qosRTPIfQueueMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 22, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosRTPIfQueueMaxSize.setStatus('current')
qosRTPIfQueueOutputs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 22, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosRTPIfQueueOutputs.setStatus('current')
qosRTPIfQueueDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 2, 22, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: qosRTPIfQueueDiscards.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-IF-QOS-MIB", qosWFQTotalQueNum=qosWFQTotalQueNum, qosUndoWREDPre=qosUndoWREDPre, qosGTSIfName=qosGTSIfName, qosGTSType=qosGTSType, qosCARBurstSize=qosCARBurstSize, qosPQEntry=qosPQEntry, qosPQMiddlePkt=qosPQMiddlePkt, qosCQIfName=qosCQIfName, qosWREDPreIfIndex=qosWREDPreIfIndex, qosCqlProQueNum=qosCqlProQueNum, qosCqlQueParaListNum=qosCqlQueParaListNum, qosWFQTable=qosWFQTable, qosUndoLR=qosUndoLR, qosRTPIfApplyIfIndex=qosRTPIfApplyIfIndex, qosPqlQueueLenTable=qosPqlQueueLenTable, qosPqlIfEntry=qosPqlIfEntry, qosPqlIfTable=qosPqlIfTable, qosPqlProQueKey=qosPqlProQueKey, qosGTSDiscardByte=qosGTSDiscardByte, qosCQRunInfoIfName=qosCQRunInfoIfName, qosCARExceedNewPrec=qosCARExceedNewPrec, qosCQRunInfoEntry=qosCQRunInfoEntry, qosCARConformPkt=qosCARConformPkt, qosGTSACLNum=qosGTSACLNum, qosCARConformNewPrec=qosCARConformNewPrec, qosRTPIfApplyRowStatus=qosRTPIfApplyRowStatus, qosGTSIfIndex=qosGTSIfIndex, qosCARCIR=qosCARCIR, qosUndoPqlQueLen=qosUndoPqlQueLen, qosPqlIfName=qosPqlIfName, qosCqlQueParaQueNum=qosCqlQueParaQueNum, qosPQNormalPkt=qosPQNormalPkt, qosRTPIfQueueSize=qosRTPIfQueueSize, qosGTSDiscardPkt=qosGTSDiscardPkt, qosLRCIR=qosLRCIR, qosPqlQueLenValue=qosPqlQueLenValue, qosPQBottomDiscard=qosPQBottomDiscard, qosUndoCqlQueParaMaxQueLen=qosUndoCqlQueParaMaxQueLen, qosWFQCurQueLen=qosWFQCurQueLen, qosIFBandwidthRowStatus=qosIFBandwidthRowStatus, qosCqlDefaultEntry=qosCqlDefaultEntry, qosPqlProQueKeyValue=qosPqlProQueKeyValue, qosWREDPreIfName=qosWREDPreIfName, qosPqlProName=qosPqlProName, qosCQTable=qosCQTable, qosGTSCurQueLen=qosGTSCurQueLen, qosRTPIfApplyCbs=qosRTPIfApplyCbs, qosLRTable=qosLRTable, qosRTPIfApplyEndPort=qosRTPIfApplyEndPort, qosRTPIfQueueRunInfoTable=qosRTPIfQueueRunInfoTable, qosWREDEntry=qosWREDEntry, qosPQNormalDiscard=qosPQNormalDiscard, qosCQRunInfoTable=qosCQRunInfoTable, qosPqlIfListNum=qosPqlIfListNum, qosCqlDefaultTable=qosCqlDefaultTable, qosWREDIfIndex=qosWREDIfIndex, qosCARListNum=qosCARListNum, qosLREntry=qosLREntry, qosCARTable=qosCARTable, qosCQRunInfoMaxQueLen=qosCQRunInfoMaxQueLen, qosRTPIfQueueMaxSize=qosRTPIfQueueMaxSize, qosPQTopMaxQueLen=qosPQTopMaxQueLen, qosFIFODiscardPkt=qosFIFODiscardPkt, qosPqlIfIndex=qosPqlIfIndex, qosGTSPassByte=qosGTSPassByte, qosCarlListNum=qosCarlListNum, qosUndoGTS=qosUndoGTS, qosIFBandwidthMaxReservedBW=qosIFBandwidthMaxReservedBW, qosCqlQueueNum=qosCqlQueueNum, qosPqlDefaultEntry=qosPqlDefaultEntry, qosUndoPqlDefault=qosUndoPqlDefault, qosLRDelayPkt=qosLRDelayPkt, qosGTSMaxQueLen=qosGTSMaxQueLen, qosIFBandwidthMaxReservedBWPct=qosIFBandwidthMaxReservedBWPct, qosCqlIfListNum=qosCqlIfListNum, qosGTSEntry=qosGTSEntry, qosPqlDefaultListNum=qosPqlDefaultListNum, qosCarlEntry=qosCarlEntry, qosLRPassByte=qosLRPassByte, qosCqlIfTable=qosCqlIfTable, qosWREDPreTailDropNum=qosWREDPreTailDropNum, qosWFQActiveQueNum=qosWFQActiveQueNum, qosPqlProtocolTable=qosPqlProtocolTable, qosUndoFIFO=qosUndoFIFO, qosFIFOTable=qosFIFOTable, qosCARPktDirection=qosCARPktDirection, qosGTSPassPkt=qosGTSPassPkt, qosPQTable=qosPQTable, qosCQIfIndex=qosCQIfIndex, qosCARIfName=qosCARIfName, qosFIFOEntry=qosFIFOEntry, qosPQIfName=qosPQIfName, qosCqlProQueKeyValue=qosCqlProQueKeyValue, qosWFQTotalDiscard=qosWFQTotalDiscard, qosCqlQueParaServing=qosCqlQueParaServing, qosCarlTable=qosCarlTable, qosWREDIfName=qosWREDIfName, qosIfBandwidthTable=qosIfBandwidthTable, qosCarlParaValue=qosCarlParaValue, qosWFQIfName=qosWFQIfName, qosGTSExcessBurstSize=qosGTSExcessBurstSize, qosLRPassPkt=qosLRPassPkt, qosCqlIfIndex=qosCqlIfIndex, qosWREDPreRandomDropNum=qosWREDPreRandomDropNum, qosCQRunInfoQueNum=qosCQRunInfoQueNum, qosUndoCarl=qosUndoCarl, qosCqlProtocolTable=qosCqlProtocolTable, qosWREDEnable=qosWREDEnable, qosGTSBurstSize=qosGTSBurstSize, qosPqlProtocolEntry=qosPqlProtocolEntry, qosCARExceedByte=qosCARExceedByte, qosRTPIfQueueRunInfoEntry=qosRTPIfQueueRunInfoEntry, qosPQBottomMaxQueLen=qosPQBottomMaxQueLen, qosCqlIfQueueNum=qosCqlIfQueueNum, qosRTPIfApplyEntry=qosRTPIfApplyEntry, qosWFQMaxQueLen=qosWFQMaxQueLen, qosLRExcessBurstSize=qosLRExcessBurstSize, qosCQListNum=qosCQListNum, qosPQTopDiscard=qosPQTopDiscard, PYSNMP_MODULE_ID=hwIfQoSMib, qosPqlProQueType=qosPqlProQueType, qosUndoCqlDefault=qosUndoCqlDefault, qosWFQEntry=qosWFQEntry, qosIfBandwidthEntry=qosIfBandwidthEntry, qosCqlProtocolEntry=qosCqlProtocolEntry, qosCQRunInfoQuePkt=qosCQRunInfoQuePkt, qosWREDWeightConstant=qosWREDWeightConstant, qosPqlQueLenListNum=qosPqlQueLenListNum, qosCqlQueParaEntry=qosCqlQueParaEntry, qosUndoPQ=qosUndoPQ, qosCARType=qosCARType, qosFIFOIfIndex=qosFIFOIfIndex, qosPQIfIndex=qosPQIfIndex, qosPqlDefaultTable=qosPqlDefaultTable, qosLRBurstSize=qosLRBurstSize, qosPqlQueueLenEntry=qosPqlQueueLenEntry, qosFIFOMaxQueueLen=qosFIFOMaxQueueLen, qosIfBandwidthIfIndex=qosIfBandwidthIfIndex, qosIFBandwidthAvailable=qosIFBandwidthAvailable, qosWFQIfIndex=qosWFQIfIndex, qosCARConformAction=qosCARConformAction, qosUndoWFQ=qosUndoWFQ, qosRTPIfQueueDiscards=qosRTPIfQueueDiscards, qosPqlIfQueueType=qosPqlIfQueueType, hwIfQoSMib=hwIfQoSMib, qosRTPIfApplyTable=qosRTPIfApplyTable, qosCQRunInfoIfIndex=qosCQRunInfoIfIndex, qosCAREntry=qosCAREntry, qosUndoCAR=qosUndoCAR, qosCARExcessBurstSize=qosCARExcessBurstSize, qosIFBandwidthMaxBW=qosIFBandwidthMaxBW, qosCqlQueParaMaxQueLen=qosCqlQueParaMaxQueLen, qosPqlProListNum=qosPqlProListNum, qosPqlQueLenQueueType=qosPqlQueLenQueueType, qosCARExceedAction=qosCARExceedAction, qosUndoPqlProtocol=qosUndoPqlProtocol, qosGTSDelayByte=qosGTSDelayByte, qosCqlProName=qosCqlProName, qosUndoCqlQueParaServing=qosUndoCqlQueParaServing, qosCqlQueParaTable=qosCqlQueParaTable, qosWREDPreEntry=qosWREDPreEntry, qosCqlListNum=qosCqlListNum, qosLRIfName=qosLRIfName, qosUndoPqlIf=qosUndoPqlIf, qosCARExceedPkt=qosCARExceedPkt, qosLRIfIndex=qosLRIfIndex, qosPQMiddleDiscard=qosPQMiddleDiscard, qosWREDTable=qosWREDTable, qosGTSCIR=qosGTSCIR, qosCqlIfName=qosCqlIfName, qosCqlProQueKey=qosCqlProQueKey, qosUndoWREDWeightConstant=qosUndoWREDWeightConstant, qosWREDPreLowLimit=qosWREDPreLowLimit, qosPqlDefaultQueueType=qosPqlDefaultQueueType, qosUndoCqlProtocol=qosUndoCqlProtocol, qosRTPIfApplyStartPort=qosRTPIfApplyStartPort, qosFIFOIfName=qosFIFOIfName, qosCQRunInfoQueDiscard=qosCQRunInfoQueDiscard, qosUndoCQ=qosUndoCQ, qosGTSDelayPkt=qosGTSDelayPkt, qosPQBottomPkt=qosPQBottomPkt, qosWREDPreDiscardProbability=qosWREDPreDiscardProbability, hwQoS=hwQoS, qosCQEntry=qosCQEntry, qosCARConformByte=qosCARConformByte, qosCARIfIndex=qosCARIfIndex, qosGTSTable=qosGTSTable, qosWREDPrecedence=qosWREDPrecedence, qosCqlIfEntry=qosCqlIfEntry, qosCqlProListNum=qosCqlProListNum, qosPQTopPkt=qosPQTopPkt, qosRTPIfApplyBandWidth=qosRTPIfApplyBandWidth, qosUndoCqlIf=qosUndoCqlIf, qosPQListNum=qosPQListNum, qosRTPIfQueueOutputs=qosRTPIfQueueOutputs, qosCarlParaType=qosCarlParaType, qosWREDPreHighLimit=qosWREDPreHighLimit, qosWFQMaxActiveQueNum=qosWFQMaxActiveQueNum, qosPQNormalMaxQueLen=qosPQNormalMaxQueLen, qosFIFOCurQueueLen=qosFIFOCurQueueLen, qosWREDPreTable=qosWREDPreTable, qosLRDelayByte=qosLRDelayByte, qosPQMiddleMaxQueLen=qosPQMiddleMaxQueLen)
