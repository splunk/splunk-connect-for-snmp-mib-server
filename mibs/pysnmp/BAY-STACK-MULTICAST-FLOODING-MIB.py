#
# PySNMP MIB module BAY-STACK-MULTICAST-FLOODING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BAY-STACK-MULTICAST-FLOODING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:19:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
iso, ModuleIdentity, ObjectIdentity, Unsigned32, Counter32, Gauge32, Bits, Counter64, TimeTicks, NotificationType, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ModuleIdentity", "ObjectIdentity", "Unsigned32", "Counter32", "Gauge32", "Bits", "Counter64", "TimeTicks", "NotificationType", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "MibIdentifier")
TextualConvention, TruthValue, MacAddress, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "MacAddress", "DisplayString", "RowStatus")
bayStackMibs, = mibBuilder.importSymbols("SYNOPTICS-ROOT-MIB", "bayStackMibs")
bayStackMulticastFloodingMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 5, 6))
bayStackMulticastFloodingMib.setRevisions(('2009-06-25 00:00', '2008-06-25 00:00', '2008-06-19 00:00', '2006-08-07 00:00', '2004-05-19 00:00',))
if mibBuilder.loadTexts: bayStackMulticastFloodingMib.setLastUpdated('200906250000Z')
if mibBuilder.loadTexts: bayStackMulticastFloodingMib.setOrganization('Nortel Networks')
bsmfNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 6, 0))
bsmfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 6, 1))
bsmfMulticastFloodingEnabled = MibScalar((1, 3, 6, 1, 4, 1, 45, 5, 6, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsmfMulticastFloodingEnabled.setStatus('current')
bsmfAllowedAddressTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 6, 2), )
if mibBuilder.loadTexts: bsmfAllowedAddressTable.setStatus('current')
bsmfAllowedAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 6, 2, 1), ).setIndexNames((0, "BAY-STACK-MULTICAST-FLOODING-MIB", "bsmfAllowedAddressMacAddr"))
if mibBuilder.loadTexts: bsmfAllowedAddressEntry.setStatus('current')
bsmfAllowedAddressMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 6, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: bsmfAllowedAddressMacAddr.setStatus('current')
bsmfAllowedAddressRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 6, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsmfAllowedAddressRowStatus.setStatus('current')
bsmfAllowedInetAddressTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 6, 3), )
if mibBuilder.loadTexts: bsmfAllowedInetAddressTable.setStatus('current')
bsmfAllowedInetAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 6, 3, 1), ).setIndexNames((0, "BAY-STACK-MULTICAST-FLOODING-MIB", "bsmfAllowedInetAddressType"), (1, "BAY-STACK-MULTICAST-FLOODING-MIB", "bsmfAllowedInetAddress"))
if mibBuilder.loadTexts: bsmfAllowedInetAddressEntry.setStatus('current')
bsmfAllowedInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 6, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: bsmfAllowedInetAddressType.setStatus('current')
bsmfAllowedInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 6, 3, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: bsmfAllowedInetAddress.setStatus('current')
bsmfAllowedInetAddressRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 6, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsmfAllowedInetAddressRowStatus.setStatus('current')
bsmfVlanTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 6, 4), )
if mibBuilder.loadTexts: bsmfVlanTable.setStatus('current')
bsmfVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 6, 4, 1), ).setIndexNames((0, "BAY-STACK-MULTICAST-FLOODING-MIB", "bsmfVlanId"))
if mibBuilder.loadTexts: bsmfVlanEntry.setStatus('current')
bsmfVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 6, 4, 1, 1), VlanId())
if mibBuilder.loadTexts: bsmfVlanId.setStatus('current')
bsmfVlanMulticastFloodingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 6, 4, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsmfVlanMulticastFloodingEnabled.setStatus('current')
bsmfVlanAllowedAddressTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 6, 5), )
if mibBuilder.loadTexts: bsmfVlanAllowedAddressTable.setStatus('current')
bsmfVlanAllowedAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 6, 5, 1), ).setIndexNames((0, "BAY-STACK-MULTICAST-FLOODING-MIB", "bsmfVlanAllowedAddressVlanId"), (0, "BAY-STACK-MULTICAST-FLOODING-MIB", "bsmfVlanAllowedAddressMacAddr"))
if mibBuilder.loadTexts: bsmfVlanAllowedAddressEntry.setStatus('current')
bsmfVlanAllowedAddressVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 6, 5, 1, 1), VlanId())
if mibBuilder.loadTexts: bsmfVlanAllowedAddressVlanId.setStatus('current')
bsmfVlanAllowedAddressMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 6, 5, 1, 2), MacAddress())
if mibBuilder.loadTexts: bsmfVlanAllowedAddressMacAddr.setStatus('current')
bsmfVlanAllowedAddressRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 6, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsmfVlanAllowedAddressRowStatus.setStatus('current')
bsmfVlanAllowedInetAddressTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 6, 6), )
if mibBuilder.loadTexts: bsmfVlanAllowedInetAddressTable.setStatus('current')
bsmfVlanAllowedInetAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 6, 6, 1), ).setIndexNames((0, "BAY-STACK-MULTICAST-FLOODING-MIB", "bsmfVlanAllowedInetAddressVlanId"), (0, "BAY-STACK-MULTICAST-FLOODING-MIB", "bsmfVlanAllowedInetAddressType"), (1, "BAY-STACK-MULTICAST-FLOODING-MIB", "bsmfVlanAllowedInetAddress"))
if mibBuilder.loadTexts: bsmfVlanAllowedInetAddressEntry.setStatus('current')
bsmfVlanAllowedInetAddressVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 6, 6, 1, 1), VlanId())
if mibBuilder.loadTexts: bsmfVlanAllowedInetAddressVlanId.setStatus('current')
bsmfVlanAllowedInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 6, 6, 1, 2), InetAddressType())
if mibBuilder.loadTexts: bsmfVlanAllowedInetAddressType.setStatus('current')
bsmfVlanAllowedInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 6, 6, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: bsmfVlanAllowedInetAddress.setStatus('current')
bsmfVlanAllowedInetAddressRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 6, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsmfVlanAllowedInetAddressRowStatus.setStatus('current')
mibBuilder.exportSymbols("BAY-STACK-MULTICAST-FLOODING-MIB", bsmfNotifications=bsmfNotifications, bsmfVlanAllowedInetAddressVlanId=bsmfVlanAllowedInetAddressVlanId, bsmfVlanAllowedAddressRowStatus=bsmfVlanAllowedAddressRowStatus, bsmfAllowedAddressEntry=bsmfAllowedAddressEntry, bsmfVlanMulticastFloodingEnabled=bsmfVlanMulticastFloodingEnabled, bayStackMulticastFloodingMib=bayStackMulticastFloodingMib, bsmfVlanEntry=bsmfVlanEntry, bsmfAllowedInetAddressType=bsmfAllowedInetAddressType, bsmfVlanAllowedAddressMacAddr=bsmfVlanAllowedAddressMacAddr, bsmfVlanAllowedInetAddressEntry=bsmfVlanAllowedInetAddressEntry, bsmfVlanAllowedInetAddressType=bsmfVlanAllowedInetAddressType, bsmfAllowedInetAddress=bsmfAllowedInetAddress, bsmfObjects=bsmfObjects, bsmfAllowedInetAddressRowStatus=bsmfAllowedInetAddressRowStatus, bsmfAllowedInetAddressEntry=bsmfAllowedInetAddressEntry, bsmfVlanAllowedInetAddressRowStatus=bsmfVlanAllowedInetAddressRowStatus, bsmfAllowedInetAddressTable=bsmfAllowedInetAddressTable, bsmfVlanAllowedAddressTable=bsmfVlanAllowedAddressTable, bsmfVlanAllowedAddressVlanId=bsmfVlanAllowedAddressVlanId, bsmfAllowedAddressMacAddr=bsmfAllowedAddressMacAddr, bsmfMulticastFloodingEnabled=bsmfMulticastFloodingEnabled, bsmfVlanId=bsmfVlanId, bsmfAllowedAddressRowStatus=bsmfAllowedAddressRowStatus, bsmfVlanTable=bsmfVlanTable, bsmfAllowedAddressTable=bsmfAllowedAddressTable, bsmfVlanAllowedInetAddressTable=bsmfVlanAllowedInetAddressTable, bsmfVlanAllowedInetAddress=bsmfVlanAllowedInetAddress, bsmfVlanAllowedAddressEntry=bsmfVlanAllowedAddressEntry, PYSNMP_MODULE_ID=bayStackMulticastFloodingMib)
