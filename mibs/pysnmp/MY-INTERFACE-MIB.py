#
# PySNMP MIB module MY-INTERFACE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MY-INTERFACE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:06:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
myMgmt, = mibBuilder.importSymbols("MY-SMI", "myMgmt")
MemberMap, IfIndex, ConfigStatus = mibBuilder.importSymbols("MY-TC", "MemberMap", "IfIndex", "ConfigStatus")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, NotificationType, Gauge32, Counter32, Counter64, Integer32, IpAddress, Unsigned32, MibIdentifier, iso, Gauge, Bits, TimeTicks, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "NotificationType", "Gauge32", "Counter32", "Counter64", "Integer32", "IpAddress", "Unsigned32", "MibIdentifier", "iso", "Gauge", "Bits", "TimeTicks", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, MacAddress, RowStatus, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "RowStatus", "TextualConvention", "TruthValue")
myInterfaceMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10))
myInterfaceMIB.setRevisions(('2002-03-20 00:00',))
if mibBuilder.loadTexts: myInterfaceMIB.setLastUpdated('200203200000Z')
if mibBuilder.loadTexts: myInterfaceMIB.setOrganization('D-Link Crop.')
myIfConfigMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1))
myIfTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 1), )
if mibBuilder.loadTexts: myIfTable.setStatus('current')
myIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 1, 1), ).setIndexNames((0, "MY-INTERFACE-MIB", "myIfIndex"))
if mibBuilder.loadTexts: myIfEntry.setStatus('current')
myIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 1, 1, 1), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myIfIndex.setStatus('current')
myIfPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19))).clone(namedValues=NamedValues(("unknown", 1), ("port10M100MBASETX", 2), ("port100MBASEFXL", 3), ("port100MBASEFXS", 4), ("port1000MBASESX", 5), ("port1000MBASELX", 6), ("port1000MBASETX", 7), ("portGBIC", 8), ("port100MBASEFX", 9), ("port1000MBASEFX", 10), ("portSFP", 11), ("port10GBASESR", 12), ("port10GBASELR", 13), ("port10GBASEER", 14), ("port10GBASELX4", 15), ("port10GBASESW", 16), ("port10GBASELW", 17), ("port10GBASEEW", 18), ("port10GBASE", 19)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myIfPortType.setStatus('current')
myIfFlowControlAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("autonego", 3), ("unknown", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myIfFlowControlAdminStatus.setStatus('current')
myIfFlowControlOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 1, 1, 4), EnabledStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myIfFlowControlOperStatus.setStatus('current')
myIfAdminSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("speed10Mb", 1), ("speed100Mb", 2), ("speed1000Mb", 3), ("autonego", 4), ("speed10Gb", 5), ("unknown", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myIfAdminSpeed.setStatus('current')
myIfAdminDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("full", 1), ("half", 2), ("autonego", 3), ("unknown", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myIfAdminDuplex.setStatus('current')
myIfOperSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("speed10Mb", 1), ("speed100Mb", 2), ("speed1000Mb", 3), ("unknown", 4), ("speed10Gb", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myIfOperSpeed.setStatus('current')
myIfOperDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("full", 1), ("half", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myIfOperDuplex.setStatus('current')
myIfManageStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 1, 1, 9), EnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myIfManageStatus.setStatus('current')
myIfIpBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 1, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myIfIpBroadcast.setStatus('current')
myIfLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("layer-2", 1), ("layer-3", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myIfLayer.setStatus('current')
myIfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("access", 1), ("trunk", 2), ("dot1q-tunnel", 3), ("hybrid", 4), ("other", 5), ("uplink", 6), ("host", 7), ("promiscuous", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myIfMode.setStatus('current')
myIfCounterClear = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myIfCounterClear.setStatus('current')
myIfEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 1, 1, 14), ConfigStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: myIfEntryStatus.setStatus('current')
myIfMediumType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("copper", 1), ("fiber", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myIfMediumType.setStatus('current')
myIfIpTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 2), )
if mibBuilder.loadTexts: myIfIpTable.setStatus('current')
myIfIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 2, 1), ).setIndexNames((0, "MY-INTERFACE-MIB", "myIfIpIfIndex"), (0, "MY-INTERFACE-MIB", "myIfIpId"), (0, "MY-INTERFACE-MIB", "myIfIp"))
if mibBuilder.loadTexts: myIfIpEntry.setStatus('current')
myIfIpIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 2, 1, 1), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myIfIpIfIndex.setStatus('current')
myIfIpId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myIfIpId.setStatus('current')
myIfIp = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myIfIp.setStatus('current')
myIfIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myIfIpMask.setStatus('current')
myIfIpEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: myIfIpEntryStatus.setStatus('current')
myIfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 3), )
if mibBuilder.loadTexts: myIfStatusTable.setStatus('current')
myIfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 3, 1), ).setIndexNames((0, "MY-INTERFACE-MIB", "myIfStatusIndex"))
if mibBuilder.loadTexts: myIfStatusEntry.setStatus('current')
myIfStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 3, 1, 1), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myIfStatusIndex.setStatus('current')
myIfStatusLoopBackExamine = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myIfStatusLoopBackExamine.setStatus('current')
myIfErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("no-error", 1), ("err-disable-bpduguard", 2), ("err-disable-ptsecurity", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myIfErrorStatus.setStatus('current')
myIfLineDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myIfLineDetect.setStatus('current')
myGlobalIfDisableRecovery = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myGlobalIfDisableRecovery.setStatus('current')
myPortTypeChooseTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 5), )
if mibBuilder.loadTexts: myPortTypeChooseTable.setStatus('current')
myPortTypeChooseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 5, 1), ).setIndexNames((0, "MY-INTERFACE-MIB", "myPortTypeChooseIndex"))
if mibBuilder.loadTexts: myPortTypeChooseEntry.setStatus('current')
myPortTypeChooseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 5, 1, 1), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myPortTypeChooseIndex.setStatus('current')
myPortTypeChooseType = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fiber", 1), ("copper", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myPortTypeChooseType.setStatus('current')
myIfMTUTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 6), )
if mibBuilder.loadTexts: myIfMTUTable.setStatus('current')
myIfMTUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 6, 1), ).setIndexNames((0, "MY-INTERFACE-MIB", "myIfMTUIndex"))
if mibBuilder.loadTexts: myIfMTUEntry.setStatus('current')
myIfMTUIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 6, 1, 1), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myIfMTUIndex.setStatus('current')
myIfMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 6, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: myIfMTU.setStatus('current')
myIfAvailableBWTable = MibTable((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 7), )
if mibBuilder.loadTexts: myIfAvailableBWTable.setStatus('current')
myIfAvailableBWEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 7, 1), ).setIndexNames((0, "MY-INTERFACE-MIB", "myIfAvailableBWIfIndex"))
if mibBuilder.loadTexts: myIfAvailableBWEntry.setStatus('current')
myIfAvailableBWIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 7, 1, 1), IfIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myIfAvailableBWIfIndex.setStatus('current')
myIfAvailableBWIfBW = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 1, 7, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myIfAvailableBWIfBW.setStatus('current')
myInterfaceTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 2))
lineDetectStatus = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ok", 1), ("open", 2), ("short", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: lineDetectStatus.setStatus('current')
lineDetectPosition = MibScalar((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 2, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: lineDetectPosition.setStatus('current')
lineQualityDetect = NotificationType((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 2, 3)).setObjects(("IF-MIB", "ifIndex"), ("MY-INTERFACE-MIB", "lineDetectStatus"), ("MY-INTERFACE-MIB", "lineDetectPosition"))
if mibBuilder.loadTexts: lineQualityDetect.setStatus('current')
myInterfaceMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 3))
myInterfaceMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 3, 1))
myInterfaceMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 3, 2))
myInterfaceMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 3, 1, 1)).setObjects(("MY-INTERFACE-MIB", "myInterfaceMIBGroup"), ("MY-INTERFACE-MIB", "myPortTypeChooseMibGroup"), ("MY-INTERFACE-MIB", "myIfMTUMibGroup"), ("MY-INTERFACE-MIB", "myIfLineDetectGroup"), ("MY-INTERFACE-MIB", "myIfAvailableBWMibGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myInterfaceMIBCompliance = myInterfaceMIBCompliance.setStatus('current')
myInterfaceMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 3, 2, 1)).setObjects(("MY-INTERFACE-MIB", "myIfIndex"), ("MY-INTERFACE-MIB", "myIfPortType"), ("MY-INTERFACE-MIB", "myIfFlowControlAdminStatus"), ("MY-INTERFACE-MIB", "myIfFlowControlOperStatus"), ("MY-INTERFACE-MIB", "myIfAdminSpeed"), ("MY-INTERFACE-MIB", "myIfAdminDuplex"), ("MY-INTERFACE-MIB", "myIfOperSpeed"), ("MY-INTERFACE-MIB", "myIfOperDuplex"), ("MY-INTERFACE-MIB", "myIfManageStatus"), ("MY-INTERFACE-MIB", "myIfIpBroadcast"), ("MY-INTERFACE-MIB", "myIfLayer"), ("MY-INTERFACE-MIB", "myIfMode"), ("MY-INTERFACE-MIB", "myIfCounterClear"), ("MY-INTERFACE-MIB", "myIfEntryStatus"), ("MY-INTERFACE-MIB", "myIfMediumType"), ("MY-INTERFACE-MIB", "myIfIpIfIndex"), ("MY-INTERFACE-MIB", "myIfIpId"), ("MY-INTERFACE-MIB", "myIfIp"), ("MY-INTERFACE-MIB", "myIfIpMask"), ("MY-INTERFACE-MIB", "myIfIpEntryStatus"), ("MY-INTERFACE-MIB", "myIfStatusIndex"), ("MY-INTERFACE-MIB", "myIfStatusLoopBackExamine"), ("MY-INTERFACE-MIB", "myIfErrorStatus"), ("MY-INTERFACE-MIB", "myGlobalIfDisableRecovery"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myInterfaceMIBGroup = myInterfaceMIBGroup.setStatus('current')
myPortTypeChooseMibGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 3, 2, 2)).setObjects(("MY-INTERFACE-MIB", "myPortTypeChooseIndex"), ("MY-INTERFACE-MIB", "myPortTypeChooseType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myPortTypeChooseMibGroup = myPortTypeChooseMibGroup.setStatus('current')
myIfMTUMibGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 3, 2, 3)).setObjects(("MY-INTERFACE-MIB", "myIfMTUIndex"), ("MY-INTERFACE-MIB", "myIfMTU"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myIfMTUMibGroup = myIfMTUMibGroup.setStatus('current')
myIfLineDetectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 3, 2, 4)).setObjects(("MY-INTERFACE-MIB", "myIfLineDetect"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myIfLineDetectGroup = myIfLineDetectGroup.setStatus('current')
myIfAvailableBWMibGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 171, 10, 97, 2, 10, 3, 2, 5)).setObjects(("MY-INTERFACE-MIB", "myIfAvailableBWIfIndex"), ("MY-INTERFACE-MIB", "myIfAvailableBWIfBW"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    myIfAvailableBWMibGroup = myIfAvailableBWMibGroup.setStatus('current')
mibBuilder.exportSymbols("MY-INTERFACE-MIB", myPortTypeChooseType=myPortTypeChooseType, myIfIpMask=myIfIpMask, myInterfaceMIB=myInterfaceMIB, myIfFlowControlAdminStatus=myIfFlowControlAdminStatus, myIfEntryStatus=myIfEntryStatus, myIfStatusEntry=myIfStatusEntry, myIfEntry=myIfEntry, myIfMTUIndex=myIfMTUIndex, lineQualityDetect=lineQualityDetect, myIfLineDetect=myIfLineDetect, myIfAvailableBWIfIndex=myIfAvailableBWIfIndex, myInterfaceMIBGroups=myInterfaceMIBGroups, myInterfaceMIBGroup=myInterfaceMIBGroup, myIfAdminDuplex=myIfAdminDuplex, myPortTypeChooseTable=myPortTypeChooseTable, myIfTable=myIfTable, myIfStatusLoopBackExamine=myIfStatusLoopBackExamine, myGlobalIfDisableRecovery=myGlobalIfDisableRecovery, PYSNMP_MODULE_ID=myInterfaceMIB, myIfStatusTable=myIfStatusTable, myPortTypeChooseMibGroup=myPortTypeChooseMibGroup, myIfAvailableBWTable=myIfAvailableBWTable, myIfIndex=myIfIndex, myIfPortType=myIfPortType, myIfOperSpeed=myIfOperSpeed, myPortTypeChooseEntry=myPortTypeChooseEntry, myIfCounterClear=myIfCounterClear, lineDetectStatus=lineDetectStatus, myIfMode=myIfMode, myIfIpEntry=myIfIpEntry, myIfIpEntryStatus=myIfIpEntryStatus, myIfConfigMIBObjects=myIfConfigMIBObjects, myIfMTUTable=myIfMTUTable, myPortTypeChooseIndex=myPortTypeChooseIndex, myIfAdminSpeed=myIfAdminSpeed, myIfMTU=myIfMTU, myInterfaceMIBCompliances=myInterfaceMIBCompliances, myIfLineDetectGroup=myIfLineDetectGroup, myIfIp=myIfIp, myIfErrorStatus=myIfErrorStatus, myIfIpTable=myIfIpTable, myIfMTUEntry=myIfMTUEntry, myIfManageStatus=myIfManageStatus, myIfLayer=myIfLayer, myIfAvailableBWIfBW=myIfAvailableBWIfBW, myInterfaceMIBConformance=myInterfaceMIBConformance, myIfMTUMibGroup=myIfMTUMibGroup, myIfAvailableBWMibGroup=myIfAvailableBWMibGroup, myIfOperDuplex=myIfOperDuplex, myIfIpBroadcast=myIfIpBroadcast, myInterfaceTraps=myInterfaceTraps, lineDetectPosition=lineDetectPosition, myIfStatusIndex=myIfStatusIndex, myIfIpId=myIfIpId, myInterfaceMIBCompliance=myInterfaceMIBCompliance, myIfAvailableBWEntry=myIfAvailableBWEntry, myIfMediumType=myIfMediumType, myIfFlowControlOperStatus=myIfFlowControlOperStatus, myIfIpIfIndex=myIfIpIfIndex)
