#
# PySNMP MIB module SOCOMECUPS-MIB-v2 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SOCOMECUPS-MIB-v2
# Produced by pysmi-0.3.4 at Mon Apr 29 21:01:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Counter32, Gauge32, Integer32, TimeTicks, MibIdentifier, ObjectIdentity, NotificationType, NotificationType, iso, ModuleIdentity, Unsigned32, Bits, enterprises, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter32", "Gauge32", "Integer32", "TimeTicks", "MibIdentifier", "ObjectIdentity", "NotificationType", "NotificationType", "iso", "ModuleIdentity", "Unsigned32", "Bits", "enterprises", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
socomecSicon = MibIdentifier((1, 3, 6, 1, 4, 1, 4555))
product = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1))
pduAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1))
iPDU = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20))
ipduObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1))
ipduTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2))
ipduIdent = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 1))
ipduAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2))
ipduDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3))
ipduSlave = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4))
ipduEnv = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5))
ipduIdentManufacturer = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduIdentManufacturer.setStatus('mandatory')
ipduIdentModel = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduIdentModel.setStatus('mandatory')
ipduIdentAgentSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipduIdentAgentSoftwareVersion.setStatus('mandatory')
ipduIdentName = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduIdentName.setStatus('mandatory')
ipduAgentConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1))
ipduAgentMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipduAgentMibVersion.setStatus('mandatory')
ipduAgentTime = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 2))
ipduAgentTimeDate = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentTimeDate.setStatus('mandatory')
ipduAgentTimeTime = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentTimeTime.setStatus('mandatory')
ipduAgentTimerFromNtp = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentTimerFromNtp.setStatus('mandatory')
ipduAgentNtpIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentNtpIpAddress.setStatus('mandatory')
ipduAgentNtpTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28))).clone(namedValues=NamedValues(("gMT-1200", 1), ("gMT-1100", 2), ("gMT-1000", 3), ("gMT-0900", 4), ("gMT-0800", 5), ("gMT-0700", 6), ("gMT-0600", 7), ("gMT-0500", 8), ("gMT-0400", 9), ("gMT-0330", 10), ("gMT-0300", 11), ("gMT-0200", 12), ("gMT-0100", 13), ("gMT-0000", 14), ("gMT0100", 15), ("gMT0200", 16), ("gMT0300", 17), ("gMT0330", 18), ("gMT0400", 19), ("gMT0500", 20), ("gMT0530", 21), ("gMT0600", 22), ("gMT0700", 23), ("gMT0800", 24), ("gMT0900", 25), ("gMT1000", 26), ("gMT1100", 27), ("gMT1200", 28)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentNtpTimeZone.setStatus('mandatory')
ipduAgentDayLightSaving = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentDayLightSaving.setStatus('mandatory')
ipduAgentNetwork = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 3))
ipduAgentNetworkIp = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 3, 1))
ipduAgentNetworkIpAdress = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 3, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentNetworkIpAdress.setStatus('mandatory')
ipduAgentNetworkIpGateway = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentNetworkIpGateway.setStatus('mandatory')
ipduAgentNetworkIpSubnet = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 3, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentNetworkIpSubnet.setStatus('mandatory')
ipduAgentNetworkDhcpControl = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentNetworkDhcpControl.setStatus('mandatory')
ipduAgentNetworkPingControl = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentNetworkPingControl.setStatus('mandatory')
ipduAgentNetworkTftpControl = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentNetworkTftpControl.setStatus('mandatory')
ipduAgentNetworkTelnet = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 3, 5))
ipduAgentTelnetControl = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 3, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentTelnetControl.setStatus('mandatory')
ipduAgentTelnetPort = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 3, 5, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentTelnetPort.setStatus('mandatory')
ipduAgentNetworkHttp = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 3, 6))
ipduAgentHttpControl = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 3, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentHttpControl.setStatus('mandatory')
ipduAgentHttpPort = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 3, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentHttpPort.setStatus('mandatory')
ipduAgentNetworkSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 3, 7))
ipduAgentSnmpControl = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 3, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentSnmpControl.setStatus('mandatory')
ipduAgentSnmpPort = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 3, 7, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentSnmpPort.setStatus('mandatory')
ipduAgentLog = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 4))
pduAgentDataLogInterval = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 28800))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pduAgentDataLogInterval.setStatus('mandatory')
ipduAgentControl = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 5))
ipduAgentControlDefault = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentControlDefault.setStatus('mandatory')
ipduAgentControlRestart = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("restart", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentControlRestart.setStatus('mandatory')
ipduAgentTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 6))
ipduAgentTrapRetryCount = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 6, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentTrapRetryCount.setStatus('mandatory')
ipduAgentTrapRetryTime = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentTrapRetryTime.setStatus('mandatory')
ipduAgentTrapAckSignature = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 6, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduAgentTrapAckSignature.setStatus('mandatory')
ipduAgentTrapsReceiversTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 7), )
if mibBuilder.loadTexts: ipduAgentTrapsReceiversTable.setStatus('mandatory')
ipduAgentTrapsReceiversEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 7, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "trapsIndex"))
if mibBuilder.loadTexts: ipduAgentTrapsReceiversEntry.setStatus('mandatory')
trapsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapsIndex.setStatus('mandatory')
trapsReceiverAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 7, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapsReceiverAddr.setStatus('mandatory')
receiverCommunityString = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 7, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: receiverCommunityString.setStatus('mandatory')
receiverNmsType = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("iPDU-trap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: receiverNmsType.setStatus('mandatory')
receiverSeverityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("informational", 1), ("warning", 2), ("severe", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: receiverSeverityLevel.setStatus('mandatory')
receiverDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: receiverDescription.setStatus('mandatory')
ipduAgentAccessControlTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 8), )
if mibBuilder.loadTexts: ipduAgentAccessControlTable.setStatus('mandatory')
ipduAgentAccessControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 8, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "accessIndex"))
if mibBuilder.loadTexts: ipduAgentAccessControlEntry.setStatus('mandatory')
accessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: accessIndex.setStatus('mandatory')
accessControlAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 8, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accessControlAddr.setStatus('mandatory')
accessControlMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 2, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permitted", 1), ("denied", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: accessControlMode.setStatus('mandatory')
ipduDeviceInlet = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1))
ipduDeviceInletNumber = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipduDeviceInletNumber.setStatus('mandatory')
ipduDeviceInletConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 2), )
if mibBuilder.loadTexts: ipduDeviceInletConfigTable.setStatus('mandatory')
ipduDeviceInletConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 2, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "inletConfigIndex"))
if mibBuilder.loadTexts: ipduDeviceInletConfigEntry.setStatus('mandatory')
inletConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletConfigIndex.setStatus('mandatory')
inletConfigDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigDesc.setStatus('mandatory')
inletConfigVoltageHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigVoltageHigh.setStatus('mandatory')
inletConfigVoltageHighAction = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outletsOff", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigVoltageHighAction.setStatus('mandatory')
inletConfigVoltageLow = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigVoltageLow.setStatus('mandatory')
inletConfigVoltageLowAction = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outletsOff", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigVoltageLowAction.setStatus('mandatory')
inletConfigCurrentHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 160))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigCurrentHigh.setStatus('mandatory')
inletConfigCurrentHighAction = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outletsOff", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigCurrentHighAction.setStatus('mandatory')
inletConfigFrequencyHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigFrequencyHigh.setStatus('mandatory')
inletConfigfrequencyHighAction = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outletsOff", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigfrequencyHighAction.setStatus('mandatory')
inletConfigFrequencyLow = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigFrequencyLow.setStatus('mandatory')
inletConfigfrequencyLowAction = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outletsOff", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletConfigfrequencyLowAction.setStatus('mandatory')
ipduDeviceInletStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 3), )
if mibBuilder.loadTexts: ipduDeviceInletStatusTable.setStatus('mandatory')
ipduDeviceInletStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 3, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "inletStatusIndex"))
if mibBuilder.loadTexts: ipduDeviceInletStatusEntry.setStatus('mandatory')
inletStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletStatusIndex.setStatus('mandatory')
inletStatusVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletStatusVoltage.setStatus('mandatory')
inletStatusCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletStatusCurrent.setStatus('mandatory')
inletStatusFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletStatusFrequency.setStatus('mandatory')
inletStatusKwatt = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletStatusKwatt.setStatus('mandatory')
inletStatusWH = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletStatusWH.setStatus('mandatory')
inletWattReset = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("inlet1", 2), ("inlet2", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inletWattReset.setStatus('mandatory')
ipduDeviceOutlet = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2))
ipduDeviceOutletNumber = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipduDeviceOutletNumber.setStatus('mandatory')
ipduDeviceOutletConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 2), )
if mibBuilder.loadTexts: ipduDeviceOutletConfigTable.setStatus('mandatory')
ipduDeviceOutletConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 2, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "inletConfigIndex"))
if mibBuilder.loadTexts: ipduDeviceOutletConfigEntry.setStatus('mandatory')
outletConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletConfigIndex.setStatus('mandatory')
outletConfigDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletConfigDesc.setStatus('mandatory')
outletConfigLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletConfigLocation.setStatus('mandatory')
outletConfigOnDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletConfigOnDelay.setStatus('mandatory')
outletConfigOffDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletConfigOffDelay.setStatus('mandatory')
outletConfigCurrentHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletConfigCurrentHigh.setStatus('mandatory')
outletConfigCurrentHighAction = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outletOff", 1), ("nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletConfigCurrentHighAction.setStatus('mandatory')
ipduDeviceOutletStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 3), )
if mibBuilder.loadTexts: ipduDeviceOutletStatusTable.setStatus('mandatory')
ipduDeviceOutletStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 3, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "outletStatusIndex"))
if mibBuilder.loadTexts: ipduDeviceOutletStatusEntry.setStatus('mandatory')
outletStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletStatusIndex.setStatus('mandatory')
outletStatusStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknow", 1), ("outletOff", 2), ("outletOn", 3), ("outletOffToOn", 4), ("outletOnToOff", 5), ("outletCycling", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletStatusStatus.setStatus('mandatory')
outletStatusCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletStatusCurrent.setStatus('mandatory')
outletStatusKwatt = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletStatusKwatt.setStatus('mandatory')
outletStatusWH = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletStatusWH.setStatus('mandatory')
outletStatusStateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletStatusStateTime.setStatus('mandatory')
outletStatusTimeToGo = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletStatusTimeToGo.setStatus('mandatory')
ipduDeviceOutletControlTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 4), )
if mibBuilder.loadTexts: ipduDeviceOutletControlTable.setStatus('mandatory')
ipduDeviceOutletControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 4, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "outletControlIndex"))
if mibBuilder.loadTexts: ipduDeviceOutletControlEntry.setStatus('mandatory')
outletControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: outletControlIndex.setStatus('mandatory')
outletControlControl = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outletControlControl.setStatus('mandatory')
ipduDeviceOutletControlAll = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimers", 6), ("offByActionTimers", 7), ("cycleByActionTimers", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduDeviceOutletControlAll.setStatus('mandatory')
ipduDeviceOutletWattReset = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("none", 1), ("outleta", 2), ("outletb", 3), ("outletc", 4), ("outletd", 5), ("outlete", 6), ("outletf", 7), ("outletg", 8), ("outleth", 9), ("outleti", 10), ("outletj", 11), ("outletk", 12), ("outletl", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduDeviceOutletWattReset.setStatus('mandatory')
ipduDeviceCcOut = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 3))
ipduDeviceCcOutNumber = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipduDeviceCcOutNumber.setStatus('mandatory')
ipduDeviceCcOutConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 3, 2), )
if mibBuilder.loadTexts: ipduDeviceCcOutConfigTable.setStatus('mandatory')
ipduDeviceCcOutConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 3, 2, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "ccOutConfigIndex"))
if mibBuilder.loadTexts: ipduDeviceCcOutConfigEntry.setStatus('mandatory')
ccOutConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccOutConfigIndex.setStatus('mandatory')
ccOutConfigDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccOutConfigDesc.setStatus('mandatory')
ccOutConfigEventAction = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccOutConfigEventAction.setStatus('mandatory')
ccOutConfigCloseDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 3, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccOutConfigCloseDelay.setStatus('mandatory')
ccOutConfigOpenDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 3, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccOutConfigOpenDelay.setStatus('mandatory')
ipduDeviceCcOutStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 3, 3), )
if mibBuilder.loadTexts: ipduDeviceCcOutStatusTable.setStatus('mandatory')
ipduDeviceCcOutStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 3, 3, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "ccOutStatusIndex"))
if mibBuilder.loadTexts: ipduDeviceCcOutStatusEntry.setStatus('mandatory')
ccOutStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccOutStatusIndex.setStatus('mandatory')
ccOutStatusStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("closed", 1), ("open", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccOutStatusStatus.setStatus('mandatory')
ccOutStatusTimeOnState = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 3, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccOutStatusTimeOnState.setStatus('mandatory')
ipduDeviceCcOutControlTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 3, 4), )
if mibBuilder.loadTexts: ipduDeviceCcOutControlTable.setStatus('mandatory')
ipduDeviceCcOutControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 3, 4, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "ccOutControlIndex"))
if mibBuilder.loadTexts: ipduDeviceCcOutControlEntry.setStatus('mandatory')
ccOutControlIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccOutControlIndex.setStatus('mandatory')
ccOutControlControl = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 3, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("closeImmediately", 3), ("openImmediately", 4), ("cycleImmediately", 5), ("closeByCloseTimer", 6), ("openByOpenTimer", 7), ("cycleByActionTimer", 8), ("closeThenOpenByActionTimers", 9), ("openThenCloseByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccOutControlControl.setStatus('mandatory')
ipduSlaveState = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 1))
ipduSlaveStateTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 1, 1), )
if mibBuilder.loadTexts: ipduSlaveStateTable.setStatus('mandatory')
ipduSlaveStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 1, 1, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "slaveStateIndex"))
if mibBuilder.loadTexts: ipduSlaveStateEntry.setStatus('mandatory')
slaveStateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveStateIndex.setStatus('mandatory')
slaveStateControl01 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disconnected", 1), ("connected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveStateControl01.setStatus('mandatory')
ipduSlaveInlet = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2))
ipduSlaveInletStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 1))
ipduDeviceSlaveInletStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 1, 1), )
if mibBuilder.loadTexts: ipduDeviceSlaveInletStatusTable.setStatus('mandatory')
ipduDeviceSlaveInletStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 1, 1, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "inletStatusIndex"))
if mibBuilder.loadTexts: ipduDeviceSlaveInletStatusEntry.setStatus('mandatory')
inletSlaveStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusIndex.setStatus('mandatory')
inletSlaveStatusVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusVoltage.setStatus('mandatory')
inletSlaveStatusCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusCurrent.setStatus('mandatory')
inletSlaveStatusFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusFrequency.setStatus('mandatory')
inletSlaveStatusKwatt = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusKwatt.setStatus('mandatory')
inletSlaveStatusWH = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusWH.setStatus('mandatory')
inletSlaveStatusVoltage2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusVoltage2.setStatus('mandatory')
inletSlaveStatusCurrent2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusCurrent2.setStatus('mandatory')
inletSlaveStatusFrequency2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusFrequency2.setStatus('mandatory')
inletSlaveStatusKwatt2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusKwatt2.setStatus('mandatory')
inletSlaveStatusWH2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: inletSlaveStatusWH2.setStatus('mandatory')
ipduSlaveInletConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 2))
ipduDeviceslaveInletConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 2, 1), )
if mibBuilder.loadTexts: ipduDeviceslaveInletConfigTable.setStatus('mandatory')
ipduDeviceslaveInletConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 2, 1, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "slaveInletConfigIndex"))
if mibBuilder.loadTexts: ipduDeviceslaveInletConfigEntry.setStatus('mandatory')
slaveInletConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveInletConfigIndex.setStatus('mandatory')
slaveInletConfigVoltageHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveInletConfigVoltageHigh.setStatus('mandatory')
slaveInletConfigVoltageLow = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveInletConfigVoltageLow.setStatus('mandatory')
slaveInlet2ConfigVoltageHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveInlet2ConfigVoltageHigh.setStatus('mandatory')
slaveInlet2ConfigVoltageLow = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 2, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveInlet2ConfigVoltageLow.setStatus('mandatory')
ipduSlaveOutlet = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3))
ipduSlaveOutletConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1))
ipduSlaveDeviceOutletNameTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 1), )
if mibBuilder.loadTexts: ipduSlaveDeviceOutletNameTable.setStatus('mandatory')
ipduSlaveDeviceOutletNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 1, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "slaveOutletNameIndex"))
if mibBuilder.loadTexts: ipduSlaveDeviceOutletNameEntry.setStatus('mandatory')
slaveOutletNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletNameIndex.setStatus('mandatory')
slaveOutletName01 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName01.setStatus('mandatory')
slaveOutletName02 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName02.setStatus('mandatory')
slaveOutletName03 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName03.setStatus('mandatory')
slaveOutletName04 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName04.setStatus('mandatory')
slaveOutletName05 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName05.setStatus('mandatory')
slaveOutletName06 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName06.setStatus('mandatory')
slaveOutletName07 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName07.setStatus('mandatory')
slaveOutletName08 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName08.setStatus('mandatory')
slaveOutletName09 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName09.setStatus('mandatory')
slaveOutletName10 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName10.setStatus('mandatory')
slaveOutletName11 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName11.setStatus('mandatory')
slaveOutletName12 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletName12.setStatus('mandatory')
ipduSlaveDeviceOutletLocationTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 2), )
if mibBuilder.loadTexts: ipduSlaveDeviceOutletLocationTable.setStatus('mandatory')
ipduSlaveDeviceOutletLocationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 2, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "slaveOutletLocationIndex"))
if mibBuilder.loadTexts: ipduSlaveDeviceOutletLocationEntry.setStatus('mandatory')
slaveOutletLocationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletLocationIndex.setStatus('mandatory')
slaveOutletLocation01 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation01.setStatus('mandatory')
slaveOutletLocation02 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation02.setStatus('mandatory')
slaveOutletLocation03 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation03.setStatus('mandatory')
slaveOutletLocation04 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation04.setStatus('mandatory')
slaveOutletLocation05 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation05.setStatus('mandatory')
slaveOutletLocation06 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation06.setStatus('mandatory')
slaveOutletLocation07 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation07.setStatus('mandatory')
slaveOutletLocation08 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation08.setStatus('mandatory')
slaveOutletLocation09 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation09.setStatus('mandatory')
slaveOutletLocation10 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation10.setStatus('mandatory')
slaveOutletLocation11 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation11.setStatus('mandatory')
slaveOutletLocation12 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletLocation12.setStatus('mandatory')
ipduSlaveDeviceOutletOnTimeTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 3), )
if mibBuilder.loadTexts: ipduSlaveDeviceOutletOnTimeTable.setStatus('mandatory')
ipduSlaveDeviceOutletOnTimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 3, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "slaveOutletOnTimeIndex"))
if mibBuilder.loadTexts: ipduSlaveDeviceOutletOnTimeEntry.setStatus('mandatory')
slaveOutletOnTimeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletOnTimeIndex.setStatus('mandatory')
slaveOutletOnTime01 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime01.setStatus('mandatory')
slaveOutletOnTime02 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime02.setStatus('mandatory')
slaveOutletOnTime03 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime03.setStatus('mandatory')
slaveOutletOnTime04 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime04.setStatus('mandatory')
slaveOutletOnTime05 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime05.setStatus('mandatory')
slaveOutletOnTime06 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime06.setStatus('mandatory')
slaveOutletOnTime07 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 3, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime07.setStatus('mandatory')
slaveOutletOnTime08 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 3, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime08.setStatus('mandatory')
slaveOutletOnTime09 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 3, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime09.setStatus('mandatory')
slaveOutletOnTime10 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 3, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime10.setStatus('mandatory')
slaveOutletOnTime11 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 3, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime11.setStatus('mandatory')
slaveOutletOnTime12 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 3, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOnTime12.setStatus('mandatory')
ipduSlaveDeviceOutletOffTimeTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 4), )
if mibBuilder.loadTexts: ipduSlaveDeviceOutletOffTimeTable.setStatus('mandatory')
ipduSlaveDeviceOutletOffTimeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 4, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "slaveOutletOffTimeIndex"))
if mibBuilder.loadTexts: ipduSlaveDeviceOutletOffTimeEntry.setStatus('mandatory')
slaveOutletOffTimeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletOffTimeIndex.setStatus('mandatory')
slaveOutletOffTime01 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 4, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime01.setStatus('mandatory')
slaveOutletOffTime02 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 4, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime02.setStatus('mandatory')
slaveOutletOffTime03 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime03.setStatus('mandatory')
slaveOutletOffTime04 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 4, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime04.setStatus('mandatory')
slaveOutletOffTime05 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime05.setStatus('mandatory')
slaveOutletOffTime06 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 4, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime06.setStatus('mandatory')
slaveOutletOffTime07 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 4, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime07.setStatus('mandatory')
slaveOutletOffTime08 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 4, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime08.setStatus('mandatory')
slaveOutletOffTime09 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 4, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime09.setStatus('mandatory')
slaveOutletOffTime10 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 4, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime10.setStatus('mandatory')
slaveOutletOffTime11 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 4, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime11.setStatus('mandatory')
slaveOutletOffTime12 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 4, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletOffTime12.setStatus('mandatory')
ipduSlaveDeviceOutletCurrThTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 5), )
if mibBuilder.loadTexts: ipduSlaveDeviceOutletCurrThTable.setStatus('mandatory')
ipduSlaveDeviceOutletCurrThEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 5, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "slaveOutletCurrThIndex"))
if mibBuilder.loadTexts: ipduSlaveDeviceOutletCurrThEntry.setStatus('mandatory')
slaveOutletCurrThIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrThIndex.setStatus('mandatory')
slaveOutletCurrTh01 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 5, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh01.setStatus('mandatory')
slaveOutletCurrTh02 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 5, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh02.setStatus('mandatory')
slaveOutletCurrTh03 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 5, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh03.setStatus('mandatory')
slaveOutletCurrTh04 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 5, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh04.setStatus('mandatory')
slaveOutletCurrTh05 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 5, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh05.setStatus('mandatory')
slaveOutletCurrTh06 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 5, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh06.setStatus('mandatory')
slaveOutletCurrTh07 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 5, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh07.setStatus('mandatory')
slaveOutletCurrTh08 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 5, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh08.setStatus('mandatory')
slaveOutletCurrTh09 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 5, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh09.setStatus('mandatory')
slaveOutletCurrTh10 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 5, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh10.setStatus('mandatory')
slaveOutletCurrTh11 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 5, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh11.setStatus('mandatory')
slaveOutletCurrTh12 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 1, 5, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletCurrTh12.setStatus('mandatory')
ipduSlaveOutletStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2))
ipduSlaveDeviceOutletCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 1), )
if mibBuilder.loadTexts: ipduSlaveDeviceOutletCurrentTable.setStatus('mandatory')
ipduSlaveDeviceOutletCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 1, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "slaveOutletCurrentIndex"))
if mibBuilder.loadTexts: ipduSlaveDeviceOutletCurrentEntry.setStatus('mandatory')
slaveOutletCurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrentIndex.setStatus('mandatory')
slaveOutletCurrent01 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent01.setStatus('mandatory')
slaveOutletCurrent02 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent02.setStatus('mandatory')
slaveOutletCurrent03 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent03.setStatus('mandatory')
slaveOutletCurrent04 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent04.setStatus('mandatory')
slaveOutletCurrent05 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent05.setStatus('mandatory')
slaveOutletCurrent06 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent06.setStatus('mandatory')
slaveOutletCurrent07 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent07.setStatus('mandatory')
slaveOutletCurrent08 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent08.setStatus('mandatory')
slaveOutletCurrent09 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent09.setStatus('mandatory')
slaveOutletCurrent10 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent10.setStatus('mandatory')
slaveOutletCurrent11 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent11.setStatus('mandatory')
slaveOutletCurrent12 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletCurrent12.setStatus('mandatory')
ipduSlaveDeviceOutletWattTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 2), )
if mibBuilder.loadTexts: ipduSlaveDeviceOutletWattTable.setStatus('mandatory')
ipduSlaveDeviceOutletWattEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 2, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "slaveOutletWattIndex"))
if mibBuilder.loadTexts: ipduSlaveDeviceOutletWattEntry.setStatus('mandatory')
slaveOutletWattIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWattIndex.setStatus('mandatory')
slaveOutletWatt01 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt01.setStatus('mandatory')
slaveOutletWatt02 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt02.setStatus('mandatory')
slaveOutletWatt03 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt03.setStatus('mandatory')
slaveOutletWatt04 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt04.setStatus('mandatory')
slaveOutletWatt05 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt05.setStatus('mandatory')
slaveOutletWatt06 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt06.setStatus('mandatory')
slaveOutletWatt07 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt07.setStatus('mandatory')
slaveOutletWatt08 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt08.setStatus('mandatory')
slaveOutletWatt09 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt09.setStatus('mandatory')
slaveOutletWatt10 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt10.setStatus('mandatory')
slaveOutletWatt11 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt11.setStatus('mandatory')
slaveOutletWatt12 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletWatt12.setStatus('mandatory')
ipduSlaveDeviceOutletKwattTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 3), )
if mibBuilder.loadTexts: ipduSlaveDeviceOutletKwattTable.setStatus('mandatory')
ipduSlaveDeviceOutletKwattEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 3, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "slaveOutletKwattIndex"))
if mibBuilder.loadTexts: ipduSlaveDeviceOutletKwattEntry.setStatus('mandatory')
slaveOutletKwattIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwattIndex.setStatus('mandatory')
slaveOutletKwatt01 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt01.setStatus('mandatory')
slaveOutletKwatt02 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt02.setStatus('mandatory')
slaveOutletKwatt03 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt03.setStatus('mandatory')
slaveOutletKwatt04 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt04.setStatus('mandatory')
slaveOutletKwatt05 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt05.setStatus('mandatory')
slaveOutletKwatt06 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt06.setStatus('mandatory')
slaveOutletKwatt07 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt07.setStatus('mandatory')
slaveOutletKwatt08 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt08.setStatus('mandatory')
slaveOutletKwatt09 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt09.setStatus('mandatory')
slaveOutletKwatt10 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt10.setStatus('mandatory')
slaveOutletKwatt11 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt11.setStatus('mandatory')
slaveOutletKwatt12 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 2, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletKwatt12.setStatus('mandatory')
ipduSlaveOutletAction = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 3))
ipduSlaveDeviceOutletActionTable = MibTable((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 3, 1), )
if mibBuilder.loadTexts: ipduSlaveDeviceOutletActionTable.setStatus('mandatory')
ipduSlaveDeviceOutletActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 3, 1, 1), ).setIndexNames((0, "SOCOMECUPS-MIB-v2", "slaveOutletActionIndex"))
if mibBuilder.loadTexts: ipduSlaveDeviceOutletActionEntry.setStatus('mandatory')
slaveOutletActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: slaveOutletActionIndex.setStatus('mandatory')
slaveOutletAction01 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction01.setStatus('mandatory')
slaveOutletAction02 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction02.setStatus('mandatory')
slaveOutletAction03 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction03.setStatus('mandatory')
slaveOutletAction04 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction04.setStatus('mandatory')
slaveOutletAction05 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction05.setStatus('mandatory')
slaveOutletAction06 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction06.setStatus('mandatory')
slaveOutletAction07 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction07.setStatus('mandatory')
slaveOutletAction08 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction08.setStatus('mandatory')
slaveOutletAction09 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction09.setStatus('mandatory')
slaveOutletAction10 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction10.setStatus('mandatory')
slaveOutletAction11 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction11.setStatus('mandatory')
slaveOutletAction12 = MibTableColumn((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 4, 3, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("cancelAction", 2), ("onImmediately", 3), ("offImmediately", 4), ("cycleImmediately", 5), ("onByActionTimer", 6), ("offByActionTimer", 7), ("cycleByActionTimer", 8), ("onThenOffByActionTimers", 9), ("offThenOnByActionTimers", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: slaveOutletAction12.setStatus('mandatory')
ipduEnvEmd = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1))
ipduEnvEmdStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 1))
ipduEnvEmdStatusEmdType = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("disabled", 2), ("eMD-HT", 3), ("eMD-T", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipduEnvEmdStatusEmdType.setStatus('mandatory')
ipduEnvEmdStatusTemperature = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipduEnvEmdStatusTemperature.setStatus('mandatory')
ipduEnvEmdStatusHumidity = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipduEnvEmdStatusHumidity.setStatus('mandatory')
ipduEnvEmdStatusAlarm1 = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("disabled", 2), ("alarm", 3), ("normal", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipduEnvEmdStatusAlarm1.setStatus('mandatory')
ipduEnvEmdStatusAlarm2 = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("disabled", 2), ("alarm", 3), ("normal", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipduEnvEmdStatusAlarm2.setStatus('mandatory')
ipduEnvEmdConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2))
ipduEnvEmdConfigEmdPresence = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("autoDetect", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduEnvEmdConfigEmdPresence.setStatus('mandatory')
ipduEnvEmdConfigEmdName = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduEnvEmdConfigEmdName.setStatus('mandatory')
ipduEnvEmdConfigTemp = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 3))
ipduEnvEmdConfigTempName = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduEnvEmdConfigTempName.setStatus('mandatory')
ipduEnvEmdConfigTempHighSetPoint = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 65))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduEnvEmdConfigTempHighSetPoint.setStatus('mandatory')
ipduEnvEmdConfigTempHighStatus = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduEnvEmdConfigTempHighStatus.setStatus('mandatory')
ipduEnvEmdConfigTempLowSetPoint = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 65))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduEnvEmdConfigTempLowSetPoint.setStatus('mandatory')
ipduEnvEmdConfigTempLowStatus = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduEnvEmdConfigTempLowStatus.setStatus('mandatory')
ipduEnvEmdConfigTempOffset = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("t0p0", 1), ("t0p5", 2), ("t1p0", 3), ("t1p5", 4), ("t2p0", 5), ("t2p5", 6), ("t3p0", 7), ("t-0p5", 8), ("t-1p0", 9), ("t-1p5", 10), ("t-2p0", 11), ("t-2p5", 12), ("t-3p0", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduEnvEmdConfigTempOffset.setStatus('mandatory')
ipduEnvEmdConfigHumi = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 4))
ipduEnvEmdConfigHumiName = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 4, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduEnvEmdConfigHumiName.setStatus('mandatory')
ipduEnvEmdConfigHumiHighSetPoint = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 95))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduEnvEmdConfigHumiHighSetPoint.setStatus('mandatory')
ipduEnvEmdConfigHumiHighStatus = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduEnvEmdConfigHumiHighStatus.setStatus('mandatory')
ipduEnvEmdConfigHumiLowSetPoint = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 95))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduEnvEmdConfigHumiLowSetPoint.setStatus('mandatory')
ipduEnvEmdConfigHumiLowStatus = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduEnvEmdConfigHumiLowStatus.setStatus('mandatory')
ipduEnvEmdConfigHumiOffset = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("h0p0", 1), ("h1p0", 2), ("h2p0", 3), ("h3p0", 4), ("h4p0", 5), ("h5p0", 6), ("h6p0", 7), ("h-1p0", 8), ("h-2p0", 9), ("h-3p0", 10), ("h-4p0", 11), ("h-5p0", 12), ("h-6p0", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduEnvEmdConfigHumiOffset.setStatus('mandatory')
ipduEnvEmdConfigAlarm1 = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 5))
ipduEnvEmdConfigAlarm1Name = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduEnvEmdConfigAlarm1Name.setStatus('mandatory')
ipduEnvEmdConfigAlarm1Type = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("normalOpen", 2), ("normalClose", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduEnvEmdConfigAlarm1Type.setStatus('mandatory')
ipduEnvEmdConfigAlarm2 = MibIdentifier((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 6))
ipduEnvEmdConfigAlarm2Name = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 6, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduEnvEmdConfigAlarm2Name.setStatus('mandatory')
ipduEnvEmdConfigAlarm2Type = MibScalar((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 1, 5, 1, 2, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("normalOpen", 2), ("normalClose", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipduEnvEmdConfigAlarm2Type.setStatus('mandatory')
ipduInletVoltageTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,1)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusVoltage"), ("SOCOMECUPS-MIB-v2", "inletConfigVoltageHigh"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInletVoltageNotTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,2)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusVoltage"), ("SOCOMECUPS-MIB-v2", "inletConfigVoltageHigh"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInletVoltageTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,3)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusVoltage"), ("SOCOMECUPS-MIB-v2", "inletConfigVoltageLow"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInletVoltageNotTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,4)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusVoltage"), ("SOCOMECUPS-MIB-v2", "inletConfigVoltageLow"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInletCurrentTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,5)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusCurrent"), ("SOCOMECUPS-MIB-v2", "inletConfigCurrentHigh"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInletCurrentNotTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,6)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusCurrent"), ("SOCOMECUPS-MIB-v2", "inletConfigCurrentHigh"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInletFrequencyTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,7)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusFrequency"), ("SOCOMECUPS-MIB-v2", "inletConfigFrequencyHigh"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInletFrequencyNotTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,8)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusFrequency"), ("SOCOMECUPS-MIB-v2", "inletConfigFrequencyHigh"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInletFrequencyTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,9)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusFrequency"), ("SOCOMECUPS-MIB-v2", "inletConfigFrequencyLow"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInletFrequencyNotTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,10)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusFrequency"), ("SOCOMECUPS-MIB-v2", "inletConfigFrequencyLow"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInlet2VoltageTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,11)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusVoltage"), ("SOCOMECUPS-MIB-v2", "inletConfigVoltageHigh"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInlet2VoltageNotTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,12)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusVoltage"), ("SOCOMECUPS-MIB-v2", "inletConfigVoltageHigh"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInlet2VoltageTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,13)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusVoltage"), ("SOCOMECUPS-MIB-v2", "inletConfigVoltageLow"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInlet2VoltageNotTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,14)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusVoltage"), ("SOCOMECUPS-MIB-v2", "inletConfigVoltageLow"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInlet2CurrentTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,15)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusCurrent"), ("SOCOMECUPS-MIB-v2", "inletConfigCurrentHigh"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInlet2CurrentNotTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,16)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusCurrent"), ("SOCOMECUPS-MIB-v2", "inletConfigCurrentHigh"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInlet2FrequencyTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,17)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusFrequency"), ("SOCOMECUPS-MIB-v2", "inletConfigFrequencyHigh"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInlet2FrequencyNotTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,18)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusFrequency"), ("SOCOMECUPS-MIB-v2", "inletConfigFrequencyHigh"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInlet2FrequencyTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,19)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusFrequency"), ("SOCOMECUPS-MIB-v2", "inletConfigFrequencyLow"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduInlet2FrequencyNotTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,20)).setObjects(("SOCOMECUPS-MIB-v2", "inletConfigIndex"), ("SOCOMECUPS-MIB-v2", "inletStatusFrequency"), ("SOCOMECUPS-MIB-v2", "inletConfigFrequencyLow"), ("SOCOMECUPS-MIB-v2", "inletConfigDesc"))
ipduOutletCurrentTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,21)).setObjects(("SOCOMECUPS-MIB-v2", "outletConfigIndex"), ("SOCOMECUPS-MIB-v2", "outletStatusCurrent"), ("SOCOMECUPS-MIB-v2", "outletConfigCurrentHigh"), ("SOCOMECUPS-MIB-v2", "outletConfigDesc"))
ipduOutletCurrentNotTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,22)).setObjects(("SOCOMECUPS-MIB-v2", "outletConfigIndex"), ("SOCOMECUPS-MIB-v2", "outletStatusCurrent"), ("SOCOMECUPS-MIB-v2", "outletConfigCurrentHigh"), ("SOCOMECUPS-MIB-v2", "outletConfigDesc"))
ipduOutletStateChanged = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,23)).setObjects(("SOCOMECUPS-MIB-v2", "outletConfigIndex"), ("SOCOMECUPS-MIB-v2", "outletStatusStatus"), ("SOCOMECUPS-MIB-v2", "outletConfigDesc"))
ipduEmdTemperatureNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,24)).setObjects(("SOCOMECUPS-MIB-v2", "ipduEnvEmdStatusTemperature"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigTempHighSetPoint"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigTempName"))
ipduEmdTemperatureTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,25)).setObjects(("SOCOMECUPS-MIB-v2", "ipduEnvEmdStatusTemperature"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigTempHighSetPoint"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigTempName"))
ipduEmdTemperatureNotLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,26)).setObjects(("SOCOMECUPS-MIB-v2", "ipduEnvEmdStatusTemperature"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigTempLowSetPoint"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigTempName"))
ipduEmdTemperatureTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,27)).setObjects(("SOCOMECUPS-MIB-v2", "ipduEnvEmdStatusTemperature"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigTempLowSetPoint"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigTempName"))
ipduEmdHumidityNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,28)).setObjects(("SOCOMECUPS-MIB-v2", "ipduEnvEmdStatusHumidity"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigHumiHighSetPoint"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigHumiName"))
ipduEmdHumidityTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,29)).setObjects(("SOCOMECUPS-MIB-v2", "ipduEnvEmdStatusHumidity"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigHumiHighSetPoint"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigHumiName"))
ipduEmdHumidityNotLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,30)).setObjects(("SOCOMECUPS-MIB-v2", "ipduEnvEmdStatusHumidity"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigHumiLowSetPoint"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigHumiName"))
ipduEmdHumidityTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,31)).setObjects(("SOCOMECUPS-MIB-v2", "ipduEnvEmdStatusHumidity"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigHumiLowSetPoint"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigHumiName"))
ipduEmdAlarm1Normal = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,32)).setObjects(("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigAlarm1Type"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigAlarm1Name"))
ipduEmdAlarm1Active = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,33)).setObjects(("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigAlarm1Type"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigAlarm1Name"))
ipduEmdAlarm2Normal = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,34)).setObjects(("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigAlarm2Type"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigAlarm2Name"))
ipduEmdAlarm2Active = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,35)).setObjects(("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigAlarm2Type"), ("SOCOMECUPS-MIB-v2", "ipduEnvEmdConfigAlarm2Name"))
ipduSlave01Inlet01OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,36))
ipduSlave01Inlet01NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,37))
ipduSlave01Inlet02OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,38))
ipduSlave01Inlet02NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,39))
ipduSlave01Inlet01UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,40))
ipduSlave01Inlet01NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,41))
ipduSlave01Inlet02UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,42))
ipduSlave01Inlet02NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,43))
ipduSlave01Inlet01CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,44))
ipduSlave01Inlet01NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,45))
ipduSlave01Inlet02CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,46))
ipduSlave01Inlet02NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,47))
ipduSlave01EmdTemperatureNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,48))
ipduSlave01EmdTemperatureTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,49))
ipduSlave01EmdTemperatureNotLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,50))
ipduSlave01EmdTemperatureTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,51))
ipduSlave01EmdHumidityNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,52))
ipduSlave01EmdHumidityTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,53))
ipduSlave01EmdHumidityNotLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,54))
ipduSlave01EmdHumidityTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,55))
ipduSlave01EmdAlarm1Normal = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,56))
ipduSlave01EmdAlarm1Active = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,57))
ipduSlave01EmdAlarm2Normal = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,58))
ipduSlave01EmdAlarm2Active = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,59))
ipduSlave01OutletCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,60))
ipduSlave02Inlet01OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,61))
ipduSlave02Inlet01NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,62))
ipduSlave02Inlet02OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,63))
ipduSlave02Inlet02NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,64))
ipduSlave02Inlet01UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,65))
ipduSlave02Inlet01NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,66))
ipduSlave02Inlet02UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,67))
ipduSlave02Inlet02NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,68))
ipduSlave02Inlet01CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,69))
ipduSlave02Inlet01NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,70))
ipduSlave02Inlet02CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,71))
ipduSlave02Inlet02NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,72))
ipduSlave02EmdTemperatureNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,73))
ipduSlave02EmdTemperatureTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,74))
ipduSlave02EmdTemperatureNotLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,75))
ipduSlave02EmdTemperatureTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,76))
ipduSlave02EmdHumidityNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,77))
ipduSlave02EmdHumidityTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,78))
ipduSlave02EmdHumidityNotLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,79))
ipduSlave02EmdHumidityTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,80))
ipduSlave02EmdAlarm1Normal = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,81))
ipduSlave02EmdAlarm1Active = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,82))
ipduSlave02EmdAlarm2Normal = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,83))
ipduSlave02EmdAlarm2Active = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,84))
ipduSlave02OutletCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,85))
ipduSlave03Inlet01OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,86))
ipduSlave03Inlet01NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,87))
ipduSlave03Inlet02OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,88))
ipduSlave03Inlet02NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,89))
ipduSlave03Inlet01UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,90))
ipduSlave03Inlet01NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,91))
ipduSlave03Inlet02UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,92))
ipduSlave03Inlet02NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,93))
ipduSlave03Inlet01CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,94))
ipduSlave03Inlet01NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,95))
ipduSlave03Inlet02CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,96))
ipduSlave03Inlet02NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,97))
ipduSlave03EmdTemperatureNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,98))
ipduSlave03EmdTemperatureTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,99))
ipduSlave03EmdTemperatureNotLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,100))
ipduSlave03EmdTemperatureTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,101))
ipduSlave03EmdHumidityNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,102))
ipduSlave03EmdHumidityTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,103))
ipduSlave03EmdHumidityNotLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,104))
ipduSlave03EmdHumidityTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,105))
ipduSlave03EmdAlarm1Normal = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,106))
ipduSlave03EmdAlarm1Active = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,107))
ipduSlave03EmdAlarm2Normal = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,108))
ipduSlave03EmdAlarm2Active = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,109))
ipduSlave03OutletCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,110))
ipduSlave04Inlet01OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,111))
ipduSlave04Inlet01NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,112))
ipduSlave04Inlet02OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,113))
ipduSlave04Inlet02NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,114))
ipduSlave04Inlet01UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,115))
ipduSlave04Inlet01NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,116))
ipduSlave04Inlet02UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,117))
ipduSlave04Inlet02NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,118))
ipduSlave04Inlet01CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,119))
ipduSlave04Inlet01NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,120))
ipduSlave04Inlet02CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,121))
ipduSlave04Inlet02NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,122))
ipduSlave04EmdTemperatureNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,123))
ipduSlave04EmdTemperatureTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,124))
ipduSlave04EmdTemperatureNotLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,125))
ipduSlave04EmdTemperatureTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,126))
ipduSlave04EmdHumidityNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,127))
ipduSlave04EmdHumidityTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,128))
ipduSlave04EmdHumidityNotLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,129))
ipduSlave04EmdHumidityTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,130))
ipduSlave04EmdAlarm1Normal = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,131))
ipduSlave04EmdAlarm1Active = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,132))
ipduSlave04EmdAlarm2Normal = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,133))
ipduSlave04EmdAlarm2Active = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,134))
ipduSlave04OutletCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,135))
ipduSlave05Inlet01OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,136))
ipduSlave05Inlet01NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,137))
ipduSlave05Inlet02OverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,138))
ipduSlave05Inlet02NotOverHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,139))
ipduSlave05Inlet01UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,140))
ipduSlave05Inlet01NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,141))
ipduSlave05Inlet02UnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,142))
ipduSlave05Inlet02NotUnderLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,143))
ipduSlave05Inlet01CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,144))
ipduSlave05Inlet01NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,145))
ipduSlave05Inlet02CurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,146))
ipduSlave05Inlet02NotCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,147))
ipduSlave05EmdTemperatureNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,148))
ipduSlave05EmdTemperatureTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,149))
ipduSlave05EmdTemperatureNotLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,150))
ipduSlave05EmdTemperatureTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,151))
ipduSlave05EmdHumidityNotHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,152))
ipduSlave05EmdHumidityTooHigh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,153))
ipduSlave05EmdHumidityNotLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,154))
ipduSlave05EmdHumidityTooLow = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,155))
ipduSlave05EmdAlarm1Normal = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,156))
ipduSlave05EmdAlarm1Active = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,157))
ipduSlave05EmdAlarm2Normal = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,158))
ipduSlave05EmdAlarm2Active = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,159))
ipduSlave05OutletCurrentOverTh = NotificationType((1, 3, 6, 1, 4, 1, 4555, 1, 1, 20, 2) + (0,160))
mibBuilder.exportSymbols("SOCOMECUPS-MIB-v2", slaveOutletLocation05=slaveOutletLocation05, ipduSlave03EmdTemperatureNotLow=ipduSlave03EmdTemperatureNotLow, outletStatusTimeToGo=outletStatusTimeToGo, ipduInletFrequencyNotTooHigh=ipduInletFrequencyNotTooHigh, ipduInlet2VoltageTooLow=ipduInlet2VoltageTooLow, slaveOutletName06=slaveOutletName06, ipduInlet2VoltageTooHigh=ipduInlet2VoltageTooHigh, ipduDeviceCcOutConfigEntry=ipduDeviceCcOutConfigEntry, ipduSlaveDeviceOutletNameEntry=ipduSlaveDeviceOutletNameEntry, slaveOutletCurrent03=slaveOutletCurrent03, ipduInletVoltageNotTooLow=ipduInletVoltageNotTooLow, ipduSlave02EmdAlarm1Normal=ipduSlave02EmdAlarm1Normal, ipduSlave03Inlet02OverHigh=ipduSlave03Inlet02OverHigh, ipduSlave03Inlet01NotCurrentOverTh=ipduSlave03Inlet01NotCurrentOverTh, slaveOutletName02=slaveOutletName02, ipduSlave04EmdHumidityTooHigh=ipduSlave04EmdHumidityTooHigh, slaveOutletCurrTh12=slaveOutletCurrTh12, ipduEnvEmdConfigAlarm1Type=ipduEnvEmdConfigAlarm1Type, slaveOutletKwatt08=slaveOutletKwatt08, ipduEnvEmdConfigHumiLowStatus=ipduEnvEmdConfigHumiLowStatus, ipduSlave05EmdAlarm2Normal=ipduSlave05EmdAlarm2Normal, inletConfigIndex=inletConfigIndex, ipduSlave01Inlet01NotUnderLow=ipduSlave01Inlet01NotUnderLow, ipduSlave04Inlet01NotUnderLow=ipduSlave04Inlet01NotUnderLow, ipduSlaveDeviceOutletLocationTable=ipduSlaveDeviceOutletLocationTable, slaveOutletWatt06=slaveOutletWatt06, ipduAgentNtpTimeZone=ipduAgentNtpTimeZone, ipduEnvEmdStatusEmdType=ipduEnvEmdStatusEmdType, slaveOutletAction07=slaveOutletAction07, ipduSlave01EmdAlarm1Normal=ipduSlave01EmdAlarm1Normal, ipduAgentNetworkIpAdress=ipduAgentNetworkIpAdress, ipduSlave03EmdHumidityTooHigh=ipduSlave03EmdHumidityTooHigh, outletStatusWH=outletStatusWH, ipduSlave05Inlet01NotOverHigh=ipduSlave05Inlet01NotOverHigh, ipduInlet2FrequencyNotTooLow=ipduInlet2FrequencyNotTooLow, slaveOutletCurrTh05=slaveOutletCurrTh05, ipduSlave04EmdHumidityNotLow=ipduSlave04EmdHumidityNotLow, ipduSlave04EmdTemperatureNotHigh=ipduSlave04EmdTemperatureNotHigh, pduAgent=pduAgent, outletStatusStatus=outletStatusStatus, slaveOutletOnTime03=slaveOutletOnTime03, ipduSlave02EmdHumidityNotLow=ipduSlave02EmdHumidityNotLow, ipduDeviceslaveInletConfigEntry=ipduDeviceslaveInletConfigEntry, ipduSlave01EmdAlarm1Active=ipduSlave01EmdAlarm1Active, slaveOutletWatt10=slaveOutletWatt10, slaveOutletLocation04=slaveOutletLocation04, slaveOutletAction12=slaveOutletAction12, ipduSlave03Inlet01OverHigh=ipduSlave03Inlet01OverHigh, ipduInlet2CurrentNotTooHigh=ipduInlet2CurrentNotTooHigh, accessControlMode=accessControlMode, slaveOutletName12=slaveOutletName12, ipduDeviceInletStatusTable=ipduDeviceInletStatusTable, inletStatusKwatt=inletStatusKwatt, ipduDeviceOutletControlAll=ipduDeviceOutletControlAll, ipduDeviceOutletNumber=ipduDeviceOutletNumber, ipduAgentDayLightSaving=ipduAgentDayLightSaving, ipduEmdHumidityTooHigh=ipduEmdHumidityTooHigh, ipduEnvEmdConfigAlarm2Name=ipduEnvEmdConfigAlarm2Name, slaveOutletLocation10=slaveOutletLocation10, ipduSlave02EmdTemperatureNotLow=ipduSlave02EmdTemperatureNotLow, ipduSlaveDeviceOutletNameTable=ipduSlaveDeviceOutletNameTable, slaveOutletOnTime05=slaveOutletOnTime05, ipduSlaveState=ipduSlaveState, ipduSlaveDeviceOutletCurrentTable=ipduSlaveDeviceOutletCurrentTable, accessControlAddr=accessControlAddr, slaveOutletLocation06=slaveOutletLocation06, outletConfigCurrentHigh=outletConfigCurrentHigh, ipduSlave02OutletCurrentOverTh=ipduSlave02OutletCurrentOverTh, ipduEmdTemperatureTooHigh=ipduEmdTemperatureTooHigh, ipduSlave05OutletCurrentOverTh=ipduSlave05OutletCurrentOverTh, slaveOutletOffTime12=slaveOutletOffTime12, ipduSlave02Inlet01NotUnderLow=ipduSlave02Inlet01NotUnderLow, ccOutControlIndex=ccOutControlIndex, ipduSlave05EmdAlarm2Active=ipduSlave05EmdAlarm2Active, ipduIdentName=ipduIdentName, ipduSlaveDeviceOutletOnTimeTable=ipduSlaveDeviceOutletOnTimeTable, ipduSlave01EmdHumidityNotLow=ipduSlave01EmdHumidityNotLow, inletConfigCurrentHighAction=inletConfigCurrentHighAction, ipduDeviceOutletControlEntry=ipduDeviceOutletControlEntry, ipduSlave05EmdTemperatureNotLow=ipduSlave05EmdTemperatureNotLow, slaveOutletName05=slaveOutletName05, slaveOutletCurrentIndex=slaveOutletCurrentIndex, ipduSlave02Inlet02UnderLow=ipduSlave02Inlet02UnderLow, ipduSlave03OutletCurrentOverTh=ipduSlave03OutletCurrentOverTh, outletControlControl=outletControlControl, ipduSlave03Inlet02UnderLow=ipduSlave03Inlet02UnderLow, inletConfigFrequencyHigh=inletConfigFrequencyHigh, ipduAgentNetworkIpGateway=ipduAgentNetworkIpGateway, ipduDeviceOutletWattReset=ipduDeviceOutletWattReset, inletSlaveStatusWH2=inletSlaveStatusWH2, ipduSlave05EmdHumidityTooHigh=ipduSlave05EmdHumidityTooHigh, inletConfigCurrentHigh=inletConfigCurrentHigh, ipduSlave02EmdAlarm2Active=ipduSlave02EmdAlarm2Active, ipduDeviceOutlet=ipduDeviceOutlet, ipduEnvEmdConfigTempLowStatus=ipduEnvEmdConfigTempLowStatus, inletSlaveStatusKwatt=inletSlaveStatusKwatt, ipduEnvEmdConfigAlarm1Name=ipduEnvEmdConfigAlarm1Name, slaveOutletKwatt09=slaveOutletKwatt09, ipduIdentModel=ipduIdentModel, ipduAgentNetworkDhcpControl=ipduAgentNetworkDhcpControl, ipduDeviceInletConfigTable=ipduDeviceInletConfigTable, slaveOutletWatt08=slaveOutletWatt08, ipduSlave02Inlet01OverHigh=ipduSlave02Inlet01OverHigh, ipduSlave04Inlet02UnderLow=ipduSlave04Inlet02UnderLow, ipduInlet2VoltageNotTooHigh=ipduInlet2VoltageNotTooHigh, slaveOutletOffTime05=slaveOutletOffTime05, slaveOutletOnTime06=slaveOutletOnTime06, slaveOutletKwatt04=slaveOutletKwatt04, outletConfigIndex=outletConfigIndex, ipduSlave02Inlet01CurrentOverTh=ipduSlave02Inlet01CurrentOverTh, ipduSlave04EmdTemperatureTooHigh=ipduSlave04EmdTemperatureTooHigh, inletSlaveStatusWH=inletSlaveStatusWH, inletConfigVoltageLowAction=inletConfigVoltageLowAction, slaveOutletCurrTh02=slaveOutletCurrTh02, ipduAgentNetworkHttp=ipduAgentNetworkHttp, ipduDeviceCcOut=ipduDeviceCcOut, ipduEnvEmdStatusTemperature=ipduEnvEmdStatusTemperature, ipduSlave03Inlet02NotCurrentOverTh=ipduSlave03Inlet02NotCurrentOverTh, ccOutConfigOpenDelay=ccOutConfigOpenDelay, ipduSlave02EmdAlarm1Active=ipduSlave02EmdAlarm1Active, slaveOutletOnTime12=slaveOutletOnTime12, slaveOutletOffTimeIndex=slaveOutletOffTimeIndex, ipduSlaveDeviceOutletCurrThEntry=ipduSlaveDeviceOutletCurrThEntry, slaveOutletCurrTh03=slaveOutletCurrTh03, ipduSlaveDeviceOutletOffTimeEntry=ipduSlaveDeviceOutletOffTimeEntry, ipduSlave05Inlet02NotCurrentOverTh=ipduSlave05Inlet02NotCurrentOverTh, slaveOutletKwatt05=slaveOutletKwatt05, ipduSlave05EmdAlarm1Active=ipduSlave05EmdAlarm1Active, slaveOutletOffTime10=slaveOutletOffTime10, inletSlaveStatusVoltage=inletSlaveStatusVoltage, ipduEmdHumidityTooLow=ipduEmdHumidityTooLow, ipduSlaveDeviceOutletWattEntry=ipduSlaveDeviceOutletWattEntry, ipduSlave05Inlet02CurrentOverTh=ipduSlave05Inlet02CurrentOverTh, ipduSlave03Inlet01NotOverHigh=ipduSlave03Inlet01NotOverHigh, ipduEnvEmdConfigAlarm2=ipduEnvEmdConfigAlarm2, ipduSlave01EmdTemperatureNotHigh=ipduSlave01EmdTemperatureNotHigh, slaveStateControl01=slaveStateControl01, ipduTraps=ipduTraps, ipduInlet2FrequencyTooHigh=ipduInlet2FrequencyTooHigh, slaveStateIndex=slaveStateIndex, ipduEmdTemperatureNotLow=ipduEmdTemperatureNotLow, inletStatusIndex=inletStatusIndex, slaveOutletWatt12=slaveOutletWatt12, ipduSlave04OutletCurrentOverTh=ipduSlave04OutletCurrentOverTh, ipduSlave04Inlet02OverHigh=ipduSlave04Inlet02OverHigh, ipduAgentTrap=ipduAgentTrap, ipduSlave01EmdAlarm2Active=ipduSlave01EmdAlarm2Active, ipduDeviceCcOutConfigTable=ipduDeviceCcOutConfigTable, ipduDeviceSlaveInletStatusTable=ipduDeviceSlaveInletStatusTable, product=product, pduAgentDataLogInterval=pduAgentDataLogInterval, ipduAgentControl=ipduAgentControl, slaveInletConfigVoltageHigh=slaveInletConfigVoltageHigh, ipduAgentControlDefault=ipduAgentControlDefault, ipduDeviceInletStatusEntry=ipduDeviceInletStatusEntry, slaveOutletKwatt07=slaveOutletKwatt07, ipduAgentTelnetControl=ipduAgentTelnetControl, outletConfigCurrentHighAction=outletConfigCurrentHighAction, slaveOutletCurrent10=slaveOutletCurrent10, ipduAgentTelnetPort=ipduAgentTelnetPort, inletStatusVoltage=inletStatusVoltage, slaveOutletName03=slaveOutletName03, inletConfigfrequencyLowAction=inletConfigfrequencyLowAction, slaveOutletKwatt12=slaveOutletKwatt12, ccOutConfigEventAction=ccOutConfigEventAction, ipduSlave01Inlet01CurrentOverTh=ipduSlave01Inlet01CurrentOverTh, ipduSlave04EmdTemperatureTooLow=ipduSlave04EmdTemperatureTooLow, slaveOutletActionIndex=slaveOutletActionIndex, ipduAgentTimeDate=ipduAgentTimeDate, ipduSlave02Inlet02NotUnderLow=ipduSlave02Inlet02NotUnderLow, ipduSlaveDeviceOutletWattTable=ipduSlaveDeviceOutletWattTable, slaveInlet2ConfigVoltageHigh=slaveInlet2ConfigVoltageHigh, ipduAgentControlRestart=ipduAgentControlRestart, ipduSlave02Inlet01NotOverHigh=ipduSlave02Inlet01NotOverHigh, slaveOutletAction08=slaveOutletAction08, ipduEnvEmd=ipduEnvEmd, ipduEnvEmdConfigTemp=ipduEnvEmdConfigTemp, ipduSlave05Inlet01OverHigh=ipduSlave05Inlet01OverHigh, inletSlaveStatusIndex=inletSlaveStatusIndex, slaveOutletAction01=slaveOutletAction01, ipduSlave04Inlet02NotCurrentOverTh=ipduSlave04Inlet02NotCurrentOverTh, ipduSlave05Inlet01CurrentOverTh=ipduSlave05Inlet01CurrentOverTh, ipduSlaveStateTable=ipduSlaveStateTable, ipduSlave01Inlet02NotOverHigh=ipduSlave01Inlet02NotOverHigh, slaveOutletLocation02=slaveOutletLocation02, ipduEnvEmdConfigHumiLowSetPoint=ipduEnvEmdConfigHumiLowSetPoint, slaveOutletAction03=slaveOutletAction03, slaveOutletWatt11=slaveOutletWatt11, ipduDeviceslaveInletConfigTable=ipduDeviceslaveInletConfigTable, ipduSlave04EmdHumidityNotHigh=ipduSlave04EmdHumidityNotHigh, ipduEmdAlarm1Normal=ipduEmdAlarm1Normal, ipduAgentTrapsReceiversEntry=ipduAgentTrapsReceiversEntry, ipduSlave05EmdHumidityTooLow=ipduSlave05EmdHumidityTooLow, slaveOutletCurrThIndex=slaveOutletCurrThIndex, trapsIndex=trapsIndex, ipduEmdAlarm2Normal=ipduEmdAlarm2Normal, ipduAgentTrapsReceiversTable=ipduAgentTrapsReceiversTable, ipduEnvEmdStatusHumidity=ipduEnvEmdStatusHumidity, ipduSlave03EmdHumidityNotHigh=ipduSlave03EmdHumidityNotHigh, ipduEmdHumidityNotHigh=ipduEmdHumidityNotHigh, inletSlaveStatusFrequency2=inletSlaveStatusFrequency2, ipduDeviceOutletStatusTable=ipduDeviceOutletStatusTable, ipduSlave02EmdAlarm2Normal=ipduSlave02EmdAlarm2Normal, ipduAgentTrapRetryTime=ipduAgentTrapRetryTime, slaveOutletKwatt03=slaveOutletKwatt03, inletStatusFrequency=inletStatusFrequency, ipduEnvEmdStatusAlarm1=ipduEnvEmdStatusAlarm1, slaveOutletOnTimeIndex=slaveOutletOnTimeIndex, ipduAgentSnmpPort=ipduAgentSnmpPort, ipduEmdTemperatureTooLow=ipduEmdTemperatureTooLow, ipduSlave01EmdTemperatureNotLow=ipduSlave01EmdTemperatureNotLow, slaveOutletWatt03=slaveOutletWatt03, ipduAgentAccessControlTable=ipduAgentAccessControlTable, ipduSlaveDeviceOutletCurrentEntry=ipduSlaveDeviceOutletCurrentEntry, socomecSicon=socomecSicon, ipduSlaveInletStatus=ipduSlaveInletStatus, ipduEnv=ipduEnv, ipduInletVoltageTooHigh=ipduInletVoltageTooHigh, ipduSlave=ipduSlave, ipduDeviceInlet=ipduDeviceInlet, ipduSlaveInlet=ipduSlaveInlet, ipduDeviceOutletControlTable=ipduDeviceOutletControlTable, ipduAgentHttpControl=ipduAgentHttpControl, ipduSlave03EmdTemperatureTooHigh=ipduSlave03EmdTemperatureTooHigh, ipduEnvEmdStatusAlarm2=ipduEnvEmdStatusAlarm2, ipduDeviceCcOutControlEntry=ipduDeviceCcOutControlEntry, ipduEnvEmdConfig=ipduEnvEmdConfig, ipduIdent=ipduIdent, ipduSlaveDeviceOutletKwattEntry=ipduSlaveDeviceOutletKwattEntry, ipduEmdAlarm2Active=ipduEmdAlarm2Active, ipduSlave05Inlet02UnderLow=ipduSlave05Inlet02UnderLow, ipduEnvEmdConfigAlarm2Type=ipduEnvEmdConfigAlarm2Type, ipduDeviceInletConfigEntry=ipduDeviceInletConfigEntry, ipduSlave01EmdHumidityNotHigh=ipduSlave01EmdHumidityNotHigh, slaveOutletName07=slaveOutletName07, ipduSlave03EmdHumidityNotLow=ipduSlave03EmdHumidityNotLow, ipduIdentAgentSoftwareVersion=ipduIdentAgentSoftwareVersion, ipduAgentNetworkPingControl=ipduAgentNetworkPingControl, outletStatusStateTime=outletStatusStateTime, ipduDeviceOutletConfigEntry=ipduDeviceOutletConfigEntry, slaveOutletLocation11=slaveOutletLocation11, ipduInlet2CurrentTooHigh=ipduInlet2CurrentTooHigh, slaveOutletOffTime07=slaveOutletOffTime07, inletStatusCurrent=inletStatusCurrent, slaveOutletLocation08=slaveOutletLocation08, slaveOutletName11=slaveOutletName11, ipduSlave04EmdTemperatureNotLow=ipduSlave04EmdTemperatureNotLow, slaveOutletCurrent07=slaveOutletCurrent07, inletConfigVoltageLow=inletConfigVoltageLow, ipduSlave03Inlet01UnderLow=ipduSlave03Inlet01UnderLow, ipduEnvEmdConfigEmdName=ipduEnvEmdConfigEmdName, ipduAgentLog=ipduAgentLog, ipduSlave01Inlet01OverHigh=ipduSlave01Inlet01OverHigh, slaveOutletCurrent12=slaveOutletCurrent12)
mibBuilder.exportSymbols("SOCOMECUPS-MIB-v2", slaveOutletOffTime06=slaveOutletOffTime06, slaveOutletLocationIndex=slaveOutletLocationIndex, slaveOutletWattIndex=slaveOutletWattIndex, ccOutControlControl=ccOutControlControl, ipduSlave03EmdHumidityTooLow=ipduSlave03EmdHumidityTooLow, slaveOutletOnTime08=slaveOutletOnTime08, ipduSlave01EmdTemperatureTooHigh=ipduSlave01EmdTemperatureTooHigh, ipduSlave05Inlet01NotCurrentOverTh=ipduSlave05Inlet01NotCurrentOverTh, slaveOutletCurrent05=slaveOutletCurrent05, slaveOutletAction06=slaveOutletAction06, ipduEmdAlarm1Active=ipduEmdAlarm1Active, ipduSlave01Inlet01NotCurrentOverTh=ipduSlave01Inlet01NotCurrentOverTh, ipduSlave02Inlet02CurrentOverTh=ipduSlave02Inlet02CurrentOverTh, ccOutStatusStatus=ccOutStatusStatus, ipduEnvEmdConfigAlarm1=ipduEnvEmdConfigAlarm1, ipduAgentTimerFromNtp=ipduAgentTimerFromNtp, outletConfigDesc=outletConfigDesc, inletSlaveStatusCurrent=inletSlaveStatusCurrent, slaveOutletOffTime09=slaveOutletOffTime09, ipduSlave02Inlet02NotOverHigh=ipduSlave02Inlet02NotOverHigh, ipduAgentConfig=ipduAgentConfig, slaveOutletOnTime09=slaveOutletOnTime09, outletStatusKwatt=outletStatusKwatt, receiverDescription=receiverDescription, ipduSlaveDeviceOutletActionEntry=ipduSlaveDeviceOutletActionEntry, ipduSlave04Inlet01NotOverHigh=ipduSlave04Inlet01NotOverHigh, slaveInletConfigIndex=slaveInletConfigIndex, ipduAgentTime=ipduAgentTime, ipduAgentNetworkIpSubnet=ipduAgentNetworkIpSubnet, ipduSlave02EmdHumidityTooHigh=ipduSlave02EmdHumidityTooHigh, slaveOutletCurrTh10=slaveOutletCurrTh10, slaveOutletName08=slaveOutletName08, ipduAgent=ipduAgent, inletConfigDesc=inletConfigDesc, ipduSlaveStateEntry=ipduSlaveStateEntry, ipduSlave04Inlet02CurrentOverTh=ipduSlave04Inlet02CurrentOverTh, ipduSlave02EmdTemperatureTooHigh=ipduSlave02EmdTemperatureTooHigh, ipduSlave03EmdTemperatureTooLow=ipduSlave03EmdTemperatureTooLow, ipduSlave05Inlet01NotUnderLow=ipduSlave05Inlet01NotUnderLow, ipduSlave01Inlet02UnderLow=ipduSlave01Inlet02UnderLow, ipduSlave03EmdAlarm1Normal=ipduSlave03EmdAlarm1Normal, ipduInletCurrentTooHigh=ipduInletCurrentTooHigh, slaveOutletWatt04=slaveOutletWatt04, slaveOutletCurrent06=slaveOutletCurrent06, ipduEnvEmdConfigHumiName=ipduEnvEmdConfigHumiName, ipduSlaveDeviceOutletOffTimeTable=ipduSlaveDeviceOutletOffTimeTable, ipduInletCurrentNotTooHigh=ipduInletCurrentNotTooHigh, slaveOutletCurrent09=slaveOutletCurrent09, accessIndex=accessIndex, ipduSlave04EmdAlarm2Active=ipduSlave04EmdAlarm2Active, ipduInlet2VoltageNotTooLow=ipduInlet2VoltageNotTooLow, ipduSlave03Inlet01NotUnderLow=ipduSlave03Inlet01NotUnderLow, ipduDeviceCcOutControlTable=ipduDeviceCcOutControlTable, ipduSlaveOutletAction=ipduSlaveOutletAction, ipduAgentNetworkSnmp=ipduAgentNetworkSnmp, outletStatusCurrent=outletStatusCurrent, ipduDeviceCcOutStatusEntry=ipduDeviceCcOutStatusEntry, slaveOutletKwatt06=slaveOutletKwatt06, receiverCommunityString=receiverCommunityString, ipduSlaveDeviceOutletCurrThTable=ipduSlaveDeviceOutletCurrThTable, slaveOutletKwattIndex=slaveOutletKwattIndex, slaveOutletLocation09=slaveOutletLocation09, ipduSlaveDeviceOutletOnTimeEntry=ipduSlaveDeviceOutletOnTimeEntry, slaveOutletOffTime03=slaveOutletOffTime03, slaveOutletAction02=slaveOutletAction02, ipduInlet2FrequencyTooLow=ipduInlet2FrequencyTooLow, slaveOutletCurrTh11=slaveOutletCurrTh11, ipduSlave02EmdTemperatureTooLow=ipduSlave02EmdTemperatureTooLow, slaveOutletKwatt11=slaveOutletKwatt11, ipduSlave04Inlet01NotCurrentOverTh=ipduSlave04Inlet01NotCurrentOverTh, ipduSlave01Inlet01NotOverHigh=ipduSlave01Inlet01NotOverHigh, slaveOutletCurrent01=slaveOutletCurrent01, slaveOutletOnTime11=slaveOutletOnTime11, slaveOutletWatt01=slaveOutletWatt01, ipduAgentNetwork=ipduAgentNetwork, slaveOutletAction09=slaveOutletAction09, ipduSlave01Inlet02OverHigh=ipduSlave01Inlet02OverHigh, ipduSlave04Inlet01OverHigh=ipduSlave04Inlet01OverHigh, ipduSlave05Inlet01UnderLow=ipduSlave05Inlet01UnderLow, ipduSlaveOutlet=ipduSlaveOutlet, ipduSlave05Inlet02NotOverHigh=ipduSlave05Inlet02NotOverHigh, slaveOutletCurrTh08=slaveOutletCurrTh08, ipduSlave04Inlet01CurrentOverTh=ipduSlave04Inlet01CurrentOverTh, ipduSlave04EmdHumidityTooLow=ipduSlave04EmdHumidityTooLow, ipduOutletCurrentTooHigh=ipduOutletCurrentTooHigh, ipduEnvEmdConfigHumiOffset=ipduEnvEmdConfigHumiOffset, slaveOutletCurrent08=slaveOutletCurrent08, ipduEnvEmdConfigTempOffset=ipduEnvEmdConfigTempOffset, ipduSlave05EmdTemperatureTooLow=ipduSlave05EmdTemperatureTooLow, inletConfigVoltageHighAction=inletConfigVoltageHighAction, slaveOutletName04=slaveOutletName04, ipduSlave04EmdAlarm1Normal=ipduSlave04EmdAlarm1Normal, ccOutConfigDesc=ccOutConfigDesc, ipduSlaveDeviceOutletLocationEntry=ipduSlaveDeviceOutletLocationEntry, ipduSlave01EmdHumidityTooLow=ipduSlave01EmdHumidityTooLow, ipduSlave01EmdHumidityTooHigh=ipduSlave01EmdHumidityTooHigh, slaveOutletName09=slaveOutletName09, slaveOutletOffTime01=slaveOutletOffTime01, slaveOutletCurrTh09=slaveOutletCurrTh09, ipduOutletCurrentNotTooHigh=ipduOutletCurrentNotTooHigh, slaveOutletNameIndex=slaveOutletNameIndex, inletConfigVoltageHigh=inletConfigVoltageHigh, slaveOutletLocation12=slaveOutletLocation12, ipduAgentAccessControlEntry=ipduAgentAccessControlEntry, slaveOutletCurrTh01=slaveOutletCurrTh01, ipduSlave03Inlet01CurrentOverTh=ipduSlave03Inlet01CurrentOverTh, ipduSlave02EmdHumidityTooLow=ipduSlave02EmdHumidityTooLow, ipduSlave01EmdTemperatureTooLow=ipduSlave01EmdTemperatureTooLow, ipduSlave05EmdAlarm1Normal=ipduSlave05EmdAlarm1Normal, outletConfigOffDelay=outletConfigOffDelay, slaveOutletAction04=slaveOutletAction04, slaveOutletOnTime02=slaveOutletOnTime02, ipduSlave04Inlet02NotUnderLow=ipduSlave04Inlet02NotUnderLow, ipduAgentTrapAckSignature=ipduAgentTrapAckSignature, ipduDeviceSlaveInletStatusEntry=ipduDeviceSlaveInletStatusEntry, ipduEmdTemperatureNotHigh=ipduEmdTemperatureNotHigh, ipduEnvEmdConfigTempName=ipduEnvEmdConfigTempName, ipduSlave04EmdAlarm2Normal=ipduSlave04EmdAlarm2Normal, ipduSlaveDeviceOutletKwattTable=ipduSlaveDeviceOutletKwattTable, ipduAgentNetworkIp=ipduAgentNetworkIp, slaveOutletOffTime08=slaveOutletOffTime08, ipduSlave02Inlet02NotCurrentOverTh=ipduSlave02Inlet02NotCurrentOverTh, ccOutStatusIndex=ccOutStatusIndex, slaveOutletWatt07=slaveOutletWatt07, ipduAgentNetworkTelnet=ipduAgentNetworkTelnet, slaveOutletKwatt01=slaveOutletKwatt01, slaveOutletWatt05=slaveOutletWatt05, ipduSlave05EmdHumidityNotLow=ipduSlave05EmdHumidityNotLow, ccOutConfigCloseDelay=ccOutConfigCloseDelay, slaveOutletOnTime04=slaveOutletOnTime04, iPDU=iPDU, slaveInlet2ConfigVoltageLow=slaveInlet2ConfigVoltageLow, outletConfigOnDelay=outletConfigOnDelay, outletStatusIndex=outletStatusIndex, ipduAgentHttpPort=ipduAgentHttpPort, inletSlaveStatusKwatt2=inletSlaveStatusKwatt2, ipduEnvEmdConfigTempLowSetPoint=ipduEnvEmdConfigTempLowSetPoint, ipduSlave01Inlet02NotCurrentOverTh=ipduSlave01Inlet02NotCurrentOverTh, ipduSlave02Inlet01UnderLow=ipduSlave02Inlet01UnderLow, ipduSlave03EmdTemperatureNotHigh=ipduSlave03EmdTemperatureNotHigh, ipduObjects=ipduObjects, ipduAgentTimeTime=ipduAgentTimeTime, slaveOutletOffTime11=slaveOutletOffTime11, ipduSlave05EmdHumidityNotHigh=ipduSlave05EmdHumidityNotHigh, slaveOutletWatt02=slaveOutletWatt02, ipduSlave03Inlet02CurrentOverTh=ipduSlave03Inlet02CurrentOverTh, ipduInlet2FrequencyNotTooHigh=ipduInlet2FrequencyNotTooHigh, inletSlaveStatusCurrent2=inletSlaveStatusCurrent2, ipduEnvEmdConfigTempHighSetPoint=ipduEnvEmdConfigTempHighSetPoint, ipduEnvEmdConfigHumiHighSetPoint=ipduEnvEmdConfigHumiHighSetPoint, receiverNmsType=receiverNmsType, ipduSlave01Inlet01UnderLow=ipduSlave01Inlet01UnderLow, ipduInletFrequencyTooLow=ipduInletFrequencyTooLow, ipduEnvEmdConfigTempHighStatus=ipduEnvEmdConfigTempHighStatus, slaveOutletLocation01=slaveOutletLocation01, ccOutStatusTimeOnState=ccOutStatusTimeOnState, inletSlaveStatusVoltage2=inletSlaveStatusVoltage2, ipduSlave03EmdAlarm1Active=ipduSlave03EmdAlarm1Active, ipduOutletStateChanged=ipduOutletStateChanged, ccOutConfigIndex=ccOutConfigIndex, slaveOutletName01=slaveOutletName01, ipduEnvEmdStatus=ipduEnvEmdStatus, ipduSlave05EmdTemperatureNotHigh=ipduSlave05EmdTemperatureNotHigh, ipduEmdHumidityNotLow=ipduEmdHumidityNotLow, ipduAgentNtpIpAddress=ipduAgentNtpIpAddress, ipduInletFrequencyTooHigh=ipduInletFrequencyTooHigh, ipduAgentNetworkTftpControl=ipduAgentNetworkTftpControl, slaveOutletCurrent04=slaveOutletCurrent04, ipduSlave02Inlet01NotCurrentOverTh=ipduSlave02Inlet01NotCurrentOverTh, ipduInletVoltageNotTooHigh=ipduInletVoltageNotTooHigh, ipduDeviceCcOutStatusTable=ipduDeviceCcOutStatusTable, slaveOutletAction10=slaveOutletAction10, inletConfigfrequencyHighAction=inletConfigfrequencyHighAction, ipduSlave01OutletCurrentOverTh=ipduSlave01OutletCurrentOverTh, slaveOutletOnTime10=slaveOutletOnTime10, inletSlaveStatusFrequency=inletSlaveStatusFrequency, inletConfigFrequencyLow=inletConfigFrequencyLow, outletControlIndex=outletControlIndex, ipduSlave04Inlet02NotOverHigh=ipduSlave04Inlet02NotOverHigh, slaveOutletAction05=slaveOutletAction05, ipduSlave03EmdAlarm2Active=ipduSlave03EmdAlarm2Active, slaveOutletCurrTh04=slaveOutletCurrTh04, ipduSlave01EmdAlarm2Normal=ipduSlave01EmdAlarm2Normal, ipduDeviceOutletConfigTable=ipduDeviceOutletConfigTable, slaveOutletWatt09=slaveOutletWatt09, ipduSlave03Inlet02NotUnderLow=ipduSlave03Inlet02NotUnderLow, ipduSlave03EmdAlarm2Normal=ipduSlave03EmdAlarm2Normal, ipduInletVoltageTooLow=ipduInletVoltageTooLow, ipduAgentSnmpControl=ipduAgentSnmpControl, ipduIdentManufacturer=ipduIdentManufacturer, slaveOutletKwatt02=slaveOutletKwatt02, slaveOutletOffTime02=slaveOutletOffTime02, slaveOutletOnTime01=slaveOutletOnTime01, slaveInletConfigVoltageLow=slaveInletConfigVoltageLow, slaveOutletCurrTh07=slaveOutletCurrTh07, trapsReceiverAddr=trapsReceiverAddr, ipduSlaveInletConfig=ipduSlaveInletConfig, ipduDevice=ipduDevice, ipduAgentMibVersion=ipduAgentMibVersion, slaveOutletAction11=slaveOutletAction11, slaveOutletLocation03=slaveOutletLocation03, inletStatusWH=inletStatusWH, ipduDeviceOutletStatusEntry=ipduDeviceOutletStatusEntry, ipduSlave03Inlet02NotOverHigh=ipduSlave03Inlet02NotOverHigh, inletWattReset=inletWattReset, ipduDeviceInletNumber=ipduDeviceInletNumber, ipduSlave05Inlet02NotUnderLow=ipduSlave05Inlet02NotUnderLow, receiverSeverityLevel=receiverSeverityLevel, ipduSlave02EmdHumidityNotHigh=ipduSlave02EmdHumidityNotHigh, ipduSlave04EmdAlarm1Active=ipduSlave04EmdAlarm1Active, ipduSlave01Inlet02NotUnderLow=ipduSlave01Inlet02NotUnderLow, ipduDeviceCcOutNumber=ipduDeviceCcOutNumber, slaveOutletOffTime04=slaveOutletOffTime04, ipduSlave04Inlet01UnderLow=ipduSlave04Inlet01UnderLow, ipduEnvEmdConfigHumi=ipduEnvEmdConfigHumi, ipduSlave01Inlet02CurrentOverTh=ipduSlave01Inlet02CurrentOverTh, slaveOutletCurrTh06=slaveOutletCurrTh06, slaveOutletCurrent02=slaveOutletCurrent02, ipduEnvEmdConfigHumiHighStatus=ipduEnvEmdConfigHumiHighStatus, ipduInletFrequencyNotTooLow=ipduInletFrequencyNotTooLow, ipduSlave02Inlet02OverHigh=ipduSlave02Inlet02OverHigh, ipduAgentTrapRetryCount=ipduAgentTrapRetryCount, ipduSlaveDeviceOutletActionTable=ipduSlaveDeviceOutletActionTable, slaveOutletLocation07=slaveOutletLocation07, ipduSlaveOutletStatus=ipduSlaveOutletStatus, slaveOutletOnTime07=slaveOutletOnTime07, ipduSlave02EmdTemperatureNotHigh=ipduSlave02EmdTemperatureNotHigh, slaveOutletName10=slaveOutletName10, slaveOutletCurrent11=slaveOutletCurrent11, ipduSlave05EmdTemperatureTooHigh=ipduSlave05EmdTemperatureTooHigh, ipduEnvEmdConfigEmdPresence=ipduEnvEmdConfigEmdPresence, ipduSlave05Inlet02OverHigh=ipduSlave05Inlet02OverHigh, slaveOutletKwatt10=slaveOutletKwatt10, outletConfigLocation=outletConfigLocation, ipduSlaveOutletConfig=ipduSlaveOutletConfig)
