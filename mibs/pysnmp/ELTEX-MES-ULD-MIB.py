#
# PySNMP MIB module ELTEX-MES-ULD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-MES-ULD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:47:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
eltMesMng, = mibBuilder.importSymbols("ELTEX-MES", "eltMesMng")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, IpAddress, Gauge32, Counter32, Counter64, ModuleIdentity, ObjectIdentity, MibIdentifier, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Unsigned32, TimeTicks, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "IpAddress", "Gauge32", "Counter32", "Counter64", "ModuleIdentity", "ObjectIdentity", "MibIdentifier", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Unsigned32", "TimeTicks", "NotificationType")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
eltMesULDMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 87))
eltMesULDMIB.setRevisions(('2015-11-19 00:00',))
if mibBuilder.loadTexts: eltMesULDMIB.setLastUpdated('201511190000Z')
if mibBuilder.loadTexts: eltMesULDMIB.setOrganization('Eltex Ltd.')
eltMesULDNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 87, 0))
eltMesULDMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 87, 1))
eltULDTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 87, 1, 1), )
if mibBuilder.loadTexts: eltULDTable.setStatus('deprecated')
eltULDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 87, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: eltULDEntry.setStatus('deprecated')
eltULDAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 87, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltULDAdminState.setStatus('deprecated')
eltULDOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 87, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltULDOperStatus.setStatus('deprecated')
eltULDMode = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 87, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("log", 1), ("err-disable", 2))).clone('log')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltULDMode.setStatus('deprecated')
eltULDDiscoveryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 87, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 300)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltULDDiscoveryTime.setStatus('deprecated')
eltULDIsAggressive = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 87, 1, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eltULDIsAggressive.setStatus('deprecated')
eltULDLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 87, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("unidirectional", 2), ("bidirectional", 3), ("tx-rx-loop", 4), ("neighbor-mismatch", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eltULDLinkStatus.setStatus('deprecated')
eltULDLinkStatusChanged = NotificationType((1, 3, 6, 1, 4, 1, 35265, 1, 23, 1, 87, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("ELTEX-MES-ULD-MIB", "eltULDLinkStatus"))
if mibBuilder.loadTexts: eltULDLinkStatusChanged.setStatus('deprecated')
mibBuilder.exportSymbols("ELTEX-MES-ULD-MIB", eltULDAdminState=eltULDAdminState, eltMesULDMgmt=eltMesULDMgmt, eltULDLinkStatusChanged=eltULDLinkStatusChanged, eltMesULDMIB=eltMesULDMIB, eltULDLinkStatus=eltULDLinkStatus, eltULDIsAggressive=eltULDIsAggressive, eltULDTable=eltULDTable, PYSNMP_MODULE_ID=eltMesULDMIB, eltMesULDNotifications=eltMesULDNotifications, eltULDDiscoveryTime=eltULDDiscoveryTime, eltULDOperStatus=eltULDOperStatus, eltULDMode=eltULDMode, eltULDEntry=eltULDEntry)
