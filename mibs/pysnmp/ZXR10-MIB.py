#
# PySNMP MIB module ZXR10-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZXR10-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:42:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, TimeTicks, NotificationType, MibIdentifier, NotificationType, enterprises, mgmt, IpAddress, Counter64, ModuleIdentity, Bits, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ObjectIdentity, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "TimeTicks", "NotificationType", "MibIdentifier", "NotificationType", "enterprises", "mgmt", "IpAddress", "Counter64", "ModuleIdentity", "Bits", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ObjectIdentity", "iso", "Integer32")
MacAddress, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "DisplayString")
zte = MibIdentifier((1, 3, 6, 1, 4, 1, 3902))
zxr10 = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3))
class DisplayString(OctetString):
    pass

class AvailStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("out", 0), ("in", 1))

class OperStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("down", 0), ("up", 1))

class PortProperty(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 3, 4))
    namedValues = NamedValues(("photo", 0), ("electricity", 1), ("phoelecmix", 3), ("console", 4))

class MasterStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("master", 1), ("slave", 2), ("member", 3))

class UnitRunStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("down", 0), ("up", 1))

class PidUsedStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("reserved", 0), ("used", 1))

class BoolStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 0))
    namedValues = NamedValues(("true", 1), ("false", 0))

class ProductID(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 417, 418, 419, 420, 5000))
    namedValues = NamedValues(("zxr10RouterT128", 1), ("zxr10RouterT64", 2), ("zxr10RouterT32", 3), ("zxr10Routergar-2608", 4), ("zxr10Routerger8", 5), ("zxr10Routergar-2604", 6), ("zxr10SwitchT160G", 7), ("zxr10Routergar-3608", 8), ("zxr10Routergar-7208", 9), ("zxr10SwitchT64G", 10), ("zxr10Switch3206", 11), ("zxr10Switch3906", 12), ("zxr10Switch3228", 13), ("zxr10Switch3928", 14), ("zxr10Switch3252", 15), ("zxr10Switch3952", 16), ("zxr10Switch5224", 17), ("zxr10Switch5228", 18), ("zxr10Switch5228F", 19), ("zxr10Switch5928", 20), ("zxr10Switch5928F", 21), ("zxr10Switch5252", 22), ("zxr10Switch5952", 23), ("zxr10Switch3226", 24), ("zxr10SwitchT40G", 25), ("zxr10RouterT1200", 26), ("zxr10RouterT600", 27), ("zxr10Routerger2", 28), ("zxr10Routerger4", 29), ("zxr10Switch3226FI", 30), ("zxr10Switch3928A", 31), ("zxr10Switch3928AFI", 32), ("zxr10Switch3952A", 33), ("zxr10Switch3228A-EI", 34), ("zxr10Switch3228A", 35), ("zxr10Switch3228A-FI", 36), ("zxr10Switch3252A", 37), ("zxr10Switch5228A", 38), ("zxr10Switch5252A", 39), ("zxr10Switch3928E", 40), ("zxr10Switch3928E-FI", 41), ("zxr10Switch3952E", 42), ("zxr10Switch5952E", 43), ("zxr10RouterR10-1822-AC", 100), ("zxr10RouterR10-1822-DC", 101), ("zxr10RouterR10-1821-AC", 102), ("zxr10RouterR10-1821-DC", 103), ("zxr10RouterR10-1812-AC", 104), ("zxr10RouterR10-1812-DC", 105), ("zxr10RouterR10-1811-AC", 106), ("zxr10RouterR10-1811-DC", 107), ("zxr10RouterR10-1822E-AC", 108), ("zxr10RouterR10-1822E-DC", 109), ("zxr10RouterR10-1821E-AC", 110), ("zxr10RouterR10-1821E-DC", 111), ("zxr10RouterR10-1812E-AC", 112), ("zxr10RouterR10-1812E-DC", 113), ("zxr10RouterR10-1811E-AC", 114), ("zxr10RouterR10-1811E-DC", 115), ("zxr10RouterR10-3881-AC", 132), ("zxr10RouterR10-3882-AC", 133), ("zxr10RouterR10-3883-AC", 134), ("zxr10RouterR10-3884-AC", 135), ("zxr10RouterR10-3881-DC", 136), ("zxr10RouterR10-3882-DC", 137), ("zxr10RouterR10-3883-DC", 138), ("zxr10RouterR10-3884-DC", 139), ("zxr10RouterR10-3841-AC", 140), ("zxr10RouterR10-3842-AC", 141), ("zxr10RouterR10-3843-AC", 142), ("zxr10RouterR10-3844-AC", 143), ("zxr10RouterR10-3841-DC", 144), ("zxr10RouterR10-3842-DC", 145), ("zxr10RouterR10-3843-DC", 146), ("zxr10RouterR10-3844-DC", 147), ("zxr10RouterR10-3821-AC", 148), ("zxr10RouterR10-3822-AC", 149), ("zxr10RouterR10-3823-AC", 150), ("zxr10RouterR10-3824-AC", 151), ("zxr10RouterR10-3821-DC", 152), ("zxr10RouterR10-3822-DC", 153), ("zxr10RouterR10-3823-DC", 154), ("zxr10RouterR10-3824-DC", 155), ("zxr10RouterR10-2841-AC", 172), ("zxr10RouterR10-2842-AC", 173), ("zxr10RouterR10-2843-AC", 174), ("zxr10RouterR10-2844-AC", 175), ("zxr10RouterR10-2841-DC", 176), ("zxr10RouterR10-2842-DC", 177), ("zxr10RouterR10-2843-DC", 178), ("zxr10RouterR10-2844-DC", 179), ("zxr10RouterR10-2881-AC", 180), ("zxr10RouterR10-2882-AC", 181), ("zxr10RouterR10-2883-AC", 182), ("zxr10RouterR10-2884-AC", 183), ("zxr10RouterR10-2881-DC", 184), ("zxr10RouterR10-2882-DC", 185), ("zxr10RouterR10-2883-DC", 186), ("zxr10RouterR10-2884-DC", 187), ("zxr10RouterR10-2821-AC", 188), ("zxr10RouterR10-2822-AC", 189), ("zxr10RouterR10-2823-AC", 190), ("zxr10RouterR10-2824-AC", 191), ("zxr10RouterR10-2821-DC", 192), ("zxr10RouterR10-2822-DC", 193), ("zxr10RouterR10-2823-DC", 194), ("zxr10RouterR10-2824-DC", 195), ("zxr10RouterR10-1841-AC", 196), ("zxr10RouterR10-1842-AC", 197), ("zxr10RouterR10-1843-AC", 198), ("zxr10RouterR10-1844-AC", 199), ("zxr10RouterR10-1841-DC", 200), ("zxr10RouterR10-1842-DC", 201), ("zxr10RouterR10-1843-DC", 202), ("zxr10RouterR10-1844-DC", 203), ("zxr10Switch-6907", 400), ("zxr10Switch-T240G", 401), ("zxr10Switch-6902", 402), ("zxr10Switch-6905", 403), ("zxr10Switch-6908", 404), ("zxr10Switch-8902", 405), ("zxr10Switch-8905", 406), ("zxr10Switch-8908", 407), ("zxr10Switch-8912", 408), ("zxctn-6100", 409), ("zxr10Switch5928-PS", 417), ("zxr10Switch3928A-PS", 418), ("zxr10Switch3928E", 419), ("zxr10Switch3928E-FI", 420), ("zxr10UAS10600", 5000))

class BoardType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("upc-board", 1), ("sfc-board", 2), ("npc-board", 3), ("mec-board", 4), ("smp-board", 5), ("mcp-board", 6))

class NpcType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 542, 543, 544, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1235, 1236, 1237, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 2051, 2052, 2053, 2054, 2055, 2564, 2565, 2566), SingleValueConstraint(2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 3077, 3078, 3079, 3080, 3081, 4103, 4104, 4609, 4610, 4611, 4616, 4617, 4865, 4866, 4867, 5129, 5130, 5131, 5132, 5133, 5134, 5135, 5136, 5137, 5138, 5139, 5642, 5643, 5644, 5645, 5646, 5647, 128, 129, 130, 131, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 5001, 5101, 5102, 5103, 5201, 5301, 5401))
    namedValues = NamedValues(("card-fei-8", 512), ("card-fei-f", 513), ("card-fei-b", 514), ("card-fei-o", 515), ("card-fei-e", 516), ("card-fei-1", 517), ("card-fei-b2", 518), ("card-fei-b-es", 519), ("card-fei-48", 520), ("card-fei-o8", 521), ("card-fei-44-4-e", 522), ("card-fei-44-4-e-ez", 523), ("card-fei-24", 524), ("card-fei-16", 525), ("card-fei-2", 526), ("card-fei-4", 527), ("card-fei-o-16", 528), ("card-fei-44-4-fi", 529), ("card-fei-44-4-fi-ez", 530), ("card-mfe-2", 531), ("card-fei-24e", 532), ("card-fei-24eo", 533), ("card-mefes", 534), ("card-mfef", 535), ("card-msgfs", 536), ("card-megfs", 537), ("card-msfes", 538), ("card-mfef-2", 539), ("card-fei-24-2-fi", 542), ("card-fei-o24-2-fi", 543), ("card-fei-48-4-fi", 544), ("card-gei-8", 1025), ("card-gei-l", 1026), ("card-gei-g-1", 1027), ("card-gei-g-2", 1028), ("card-gei-2", 1029), ("card-gei-o", 1030), ("card-gei-o-g", 1031), ("card-gei-e", 1032), ("card-gei-g-2-es", 1033), ("card-gei-12", 1034), ("card-gei-x", 1035), ("card-gei-h4", 1036), ("card-gei-h2", 1037), ("card-gei-24", 1038), ("card-gei-12-4e", 1039), ("card-gei-24-4e", 1040), ("card-gei-x-2", 1041), ("card-gei-x-1-ez", 1042), ("card-gei-x-ez", 1043), ("card-gei-12-4e-ez", 1044), ("card-gei-t2", 1045), ("card-gei-4-12e", 1046), ("card-gei-4-24e", 1047), ("card-gei-4-12e-ez", 1048), ("card-10gei-1", 1049), ("card-gei-1", 1050), ("card-gei-4o-24e-l", 1051), ("card-gei-24o-4e", 1052), ("card-gei-x-1o-w", 1053), ("card-gei-x-1o-la", 1054), ("card-gei-x-1e", 1055), ("card-gei-x-1e-d", 1056), ("card-gei-x-4o-48e", 1057), ("card-gei-f-2", 1058), ("card-gei-10", 1059), ("card-gei-4", 1060), ("card-gei-2e", 1061), ("card-gei-2o", 1062), ("card-gei-1o-1e", 1063), ("card-gei-8-p4", 1064), ("card-gei-8-p4-ez", 1065), ("card-gei-4b", 1066), ("card-gei-10-b", 1067), ("card-gei-4-b", 1068), ("card-gei-x-2ef", 1069), ("card-gei-x-4ef", 1070), ("card-gei-24ec", 1071), ("card-gei-24ef", 1072), ("card-gei-48ec", 1073), ("card-gei-48ef", 1074), ("ccard-gei-x2-n-ez", 1075), ("card-gei-24-n-ez", 1076), ("card-gei-x-2ef-lit", 1077), ("card-gei-x-4ef-lit", 1078), ("card-gei-24ec-lit", 1079), ("card-gei-24ef-lit", 1080), ("card-gei-48ec-lit", 1081), ("card-gei-48ef-lit", 1082), ("card-gei-x-2ef-den", 1083), ("card-gei-x-4ef-den", 1084), ("card-gei-24ec-den", 1085), ("card-gei-24ef-den", 1086), ("card-gei-48ec-den", 1087), ("card-gei-48ef-den", 1088), ("card-gei-24f-fg", 1089), ("card-gei-24f-fg-lit", 1090), ("card-gei-24f-fg-den", 1091), ("card-gei-24hec", 1092), ("card-gei-24hec-lit", 1093), ("card-gei-24hec-den", 1094), ("card-gei-24hef", 1095), ("card-gei-24hef-lit", 1096), ("card-gei-24hef-den", 1097), ("card-gei-24hf-fg", 1098), ("card-gei-24hf-fg-lit", 1099), ("card-gei-24hf-fg-den", 1100), ("card-gei-48f-fg", 1101), ("card-gei-48f-fg-lit", 1102), ("card-gei-48f-fg-den", 1103), ("card-gei-24ef-x11", 1104), ("card-gei-24ec-x11", 1105), ("card-gei-24hef-x11", 1106), ("card-gei-48ef-x11", 1107), ("card-gei-24hec-x11", 1108), ("card-gei-48ec-x11", 1109), ("card-gei-x-2ef-x11", 1110), ("card-gei-x-4ef-x11", 1111), ("card-wan-x", 1112), ("card-gei-4-d", 1113), ("card-gei-x-8ef", 1114), ("card-ugse-gei-48ec", 1115), ("card-ugse-gei-48ec-lit", 1116), ("card-ugse-gei-48ec-den", 1117), ("card-ugsf-gei-48ef", 1118), ("card-ugsf-gei-48ef-lit", 1119), ("card-ugsf-gei-48ef-den", 1120), ("card-umtf-gei-24ef", 1121), ("card-umtf-gei-24ef-lit", 1122), ("card-umtf-gei-24ef-den", 1123), ("card-umtf-gei-24ef-2x", 1124), ("card-umtf-gei-24ef-2x-lit", 1125), ("card-umtf-gei-24ef-2x-den", 1126), ("card-umtf-gei-24ef-ez", 1127), ("card-umtf-gei-24ef-lit-ez", 1128), ("card-umtf-gei-24ef-den-ez", 1129), ("card-umte-gei-24ef", 1130), ("card-umte-gei-24ef-lit", 1131), ("card-umte-gei-24ef-den", 1132), ("card-umte-gei-24ef-2x", 1133), ("card-umte-gei-24ef-2x-lit", 1134), ("card-umte-gei-24ef-2x-den", 1135), ("card-umte-gei-24ef-ez", 1136), ("card-umte-gei-24ef-lit-ez", 1137), ("card-umte-gei-24ef-den-ez", 1138), ("card-gei-e-sfp", 1139), ("card-gei-8f", 1140), ("card-uwsa8541-g-24", 1141), ("card-stack", 1142), ("card-gei-8e", 1143), ("card-umhf-gei-x-4ef", 1144), ("card-umhf-gei-x-4ef-1ez", 1145), ("card-umhf-gei-x-4ef-2ez", 1146), ("card-umhf-gei-x-4ef-1ez-left", 1147), ("card-umtf1-gei-l2ef", 1149), ("card-umtf1-gei-l2ef-lit", 1150), ("card-umtf1-gei-l2ef-den", 1151), ("card-umtf1-gei-l2ef-2x", 1152), ("card-umtf1-gei-l2ef-2x-lit", 1153), ("card-umtf1-gei-l2ef-2x-den", 1154), ("card-umtf1-gei-l2ef-ez", 1155), ("card-umtf1-gei-l2ef-lit-ez", 1156), ("card-umtf1-gei-l2ef-den-ez", 1157), ("card-umte1-gei-l2ef", 1158), ("card-umte1-gei-l2ef-lit", 1159), ("card-umte1-gei-l2ef-den", 1160), ("card-umte1-gei-l2ef-2x", 1161), ("card-umte1-gei-l2ef-2x-lit", 1162), ("card-umte1-gei-l2ef-2x-den", 1163), ("card-umte1-gei-l2ef-ez", 1164), ("card-umte1-gei-l2ef-lit-ez", 1165), ("card-umte1-gei-l2ef-den-ez", 1166), ("card-sygf-gei-12ef-2x", 1168), ("card-sygf-gei-12ef-2x-den", 1169), ("card-sygf-gei-12ef-2x-ez", 1170), ("card-sygf-gei-12ef-2x-den-ez", 1171), ("card-sygf-gei-12ef-2x-clock", 1172), ("card-sygf-gei-12ef-2x-den-clock", 1173), ("card-sygf-gei-12ef-2x-ez-clock", 1174), ("card-sygf-gei-12ef-2x-den-ez-clock", 1175), ("card-umhf-gei-x-2ef", 1184), ("card-umhf-gei-x-2ef-1ez", 1185), ("card-umhf-gei-x-2ef-2ez", 1186), ("card-umhf-gei-x-2ef-1ez-left", 1187), ("card-gei-4oi-48e", 1188), ("card-gei-4oi-24e", 1189), ("card-umop-12gefi-12epon", 1190), ("card-umop-12gefi-12epon-den", 1191), ("card-umop-12gefi-12epon-ez", 1192), ("card-umop-12gefi-12epon-den-ez", 1193), ("card-umop-12gefi-8epon", 1194), ("card-umop-12gefi-8epon-den", 1195), ("card-umop-12gefi-8epon-ez", 1196), ("card-umop-12gefi-8epon-den-ez", 1197), ("card-umop-12gefi-4epon", 1198), ("card-umop-12gefi-4epon-den", 1199), ("card-umop-12gefi-4epon-ez", 1200), ("card-umop-12gefi-4epon-den-ez", 1201), ("card-uxhf-2c-2xefi", 1202), ("card-uxhf-2c-2xefi-lit", 1203), ("card-uxhf-2c-2xefi-den", 1204), ("card-ge48a", 1205), ("card-ge24a", 1206), ("card-utqf-gei-12ef-1588-clock-no", 1207), ("card-utqf-gei-12ef-1588-clock-left", 1208), ("card-utqf-gei-12ef-1588-clock-right", 1209), ("card-utqf-gei-12ef-1588-clock", 1210), ("card-utqf-gei-12ef-1588-clock-no-den", 1211), ("card-utqf-gei-12ef-1588-clock-left-den", 1212), ("card-utqf-gei-12ef-1588-clock-right-den", 1213), ("card-utqf-gei-12ef-1588-clock-den", 1214), ("card-utqf-gei-12ef-1588-clock-no-ez", 1215), ("card-utqf-gei-12ef-1588-clock-left-ez", 1216), ("card-utqf-gei-12ef-1588-clock-right-ez", 1217), ("card-utqf-gei-12ef-1588-clock-ez", 1218), ("card-utqf-gei-12ef-1588-clock-no-den-ez", 1219), ("card-utqf-gei-12ef-1588-clock-left-den-ez", 1220), ("card-utqf-gei-12ef-1588-clock-right-den-ez", 1221), ("card-utqf-gei-12ef-1588-clock-den-ez", 1222), ("card-gei-48ef-den-replace-ufsf", 1223), ("card-gei-48ef-replace-ufsf", 1224), ("card-umtf1-gei-12ef-ez-replace-xgm", 1225), ("card-umtf1-gei-12ef-den-ez-replace-xgm", 1226), ("card-ge24d", 1227), ("card-UVSF-H3", 1228), ("card-UVFF-H3", 1229), ("card-UWSF-H3", 1230), ("card-UVTF-H3", 1235), ("card-USFF-H3", 1236), ("card-SF-24GE-H3", 1237), ("card-oc3", 1538), ("card-oc3-4", 1539), ("card-oc12", 1540), ("card-oc48", 1541), ("card-oc48-2", 1542), ("card-oc3-c", 1543), ("card-oc48-c", 1544), ("card-oc48-dl", 1545), ("card-oc48-sg", 1546), ("card-oc48-2-dl", 1547), ("card-oc3-8", 1548), ("card-oc192-1-ez", 1549), ("card-oc3-8-pm5351", 1550), ("card-oc3-c-2", 1551), ("card-oc192b-1-ez", 1552), ("card-oc48f", 1553), ("card-oc48-4", 1554), ("card-atm155", 2051), ("card-atm622", 2052), ("card-atm155-8", 2053), ("card-atm155-rev", 2054), ("card-atm155-4", 2055), ("card-e1-16", 2564), ("card-e1-32", 2565), ("card-e1-c-32", 2566)) + NamedValues(("card-e1-c", 2567), ("card-e1-c-4", 2568), ("card-e1-c-8", 2569), ("card-e1-c-8-ixbus", 2570), ("card-e1-c-1", 2571), ("card-e1-c-2", 2572), ("card-e1vi", 2573), ("card-e1-c-8-pm7366", 2574), ("card-t1-c-4", 3077), ("card-t1-4", 3078), ("card-t1-c-1", 3079), ("card-t1-c-2", 3080), ("card-t1-c-8-pm7366", 3081), ("card-t3-c", 4103), ("card-t3", 4104), ("card-smb", 4609), ("card-e1te", 4610), ("card-manage-qx-lct", 4611), ("card-e3-c", 4616), ("card-e3", 4617), ("card-sygf-clkc-mmpi", 4865), ("card-utqf-tphy-mmpi", 4866), ("card-bpts", 4867), ("card-lhs", 5129), ("card-aux", 5130), ("card-lfxs", 5131), ("card-lhsu", 5132), ("card-lfxo", 5133), ("card-lffxs-4", 5134), ("card-lffxs-2", 5135), ("card-ndec", 5136), ("card-mhs8", 5137), ("card-mhs16", 5138), ("card-mndec", 5139), ("card-mpc-tmcs-non-hg", 5642), ("card-mpc-tmcs-8-hg", 5643), ("card-mpc-umcs-12-hg", 5644), ("card-mpc-umcs-16-hg", 5645), ("card-mpc-umct-24-hg", 5646), ("card-mpc-umcu-12-hg", 5647), ("card-manage", 128), ("card-manage-spec", 129), ("card-manage-qx", 130), ("card-manage-lct", 131), ("card-loopback", 161), ("card-gre", 163), ("card-tunnel", 164), ("card-mppp", 165), ("card-vlan", 166), ("card-null", 167), ("card-port-channel", 168), ("card-supervlan", 169), ("card-dialer", 170), ("card-vbui", 171), ("card-virtual-template", 173), ("card-virtual-access", 174), ("card-superpvc", 175), ("card-l2tpdialer", 176), ("card-qinq", 177), ("card-superqinq", 178), ("card-uni", 179), ("card-ces", 180), ("card-cip", 181), ("card-vip", 182), ("upc-board", 5001), ("sfc-board", 5101), ("sfc2-board", 5102), ("sfc3-board", 5103), ("smp-board", 5201), ("mcp-board", 5301), ("mec-board", 5401))

class PortType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(512, 1025, 1026, 1027, 1028, 1061, 1062, 1063, 1190, 1538, 1539, 1540, 1541, 1542, 1543, 2051, 2052, 2564, 2565, 2566, 2567, 2568, 3077, 3078, 3590, 3591, 3592, 3593, 4103, 4104, 4616, 4617, 5129, 5130, 5131, 5132, 5133, 5134, 5135, 5136, 5137, 5138, 5139, 5140, 5141, 5142, 5143, 128, 129, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182))
    namedValues = NamedValues(("port-fei", 512), ("port-gei", 1025), ("port-gei-x", 1026), ("port-wan-x", 1027), ("port-stack", 1028), ("port-gei-2e", 1061), ("port-gei-2o", 1062), ("port-gei-1o-1e", 1063), ("port-gei-epon", 1190), ("port-oc3", 1538), ("port-oc12", 1539), ("port-oc48", 1540), ("port-oc3-c", 1541), ("port-oc48-c", 1542), ("port-oc192", 1543), ("port-atm155", 2051), ("port-atm622", 2052), ("port-e1", 2564), ("port-e1-c", 2565), ("port-e1-c-ixbus", 2566), ("port-e1vi", 2567), ("port-e1vi-serial", 2568), ("port-t1", 3077), ("port-t1-c", 3078), ("port-tdm-e1", 3590), ("port-tdm-ether", 3591), ("port-tdm-inte-ether", 3592), ("port-tdm-t1", 3593), ("port-t3", 4103), ("port-t3-c", 4104), ("port-e3", 4616), ("port-e3-c", 4617), ("port-lhs", 5129), ("port-aux", 5130), ("port-lfxs", 5131), ("port-lhsu", 5132), ("port-lfxo", 5133), ("port-async", 5134), ("port-lffxs-2", 5135), ("port-ndec", 5136), ("port-mndec", 5137), ("port-timer1588", 5138), ("port-timer-ext", 5139), ("port-manage-qx", 5140), ("port-manage-lct", 5141), ("port-timer-abs", 5142), ("port-gps", 5143), ("port-manage", 128), ("port-manage-spec", 129), ("port-loopback", 161), ("port-gre", 163), ("port-tunnel", 164), ("port-mppp", 165), ("port-vlan", 166), ("port-null", 167), ("port-port-channel", 168), ("port-supervlan", 169), ("port-dialer", 170), ("port-vbui", 171), ("port-virtual-template", 173), ("port-virtual-access", 174), ("port-superpvc", 175), ("port-l2tpdialer", 176), ("port-qinq", 177), ("port-superqinq", 178), ("port-uni", 179), ("port-ces", 180), ("port-cip", 181), ("port-vip", 182))

class AlarmType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 128, 129, 130, 131))
    namedValues = NamedValues(("hardware-environment", 1), ("hardware-board", 2), ("hardware-port", 3), ("softprotocol-ros", 65), ("softprotocol-database", 66), ("softprotocol-oam", 67), ("softprotocol-security", 68), ("softprotocol-ospf", 69), ("softprotocol-rip", 70), ("softprotocol-bgp", 71), ("softprotocol-drp", 72), ("softprotocol-tcp-udp", 73), ("softprotocol-ip", 74), ("softprotocol-igmp", 75), ("softprotocol-telnet", 76), ("softprotocol-udp", 77), ("softprotocol-arp", 78), ("softprotocol-isis", 79), ("softprotocol-icmp", 80), ("softprotocol-snmp", 81), ("softprotocol-rmon", 82), ("softprotocol-nat", 83), ("softprotocol-urpf", 84), ("softprotocol-vswitch", 85), ("softprotocol-acl", 86), ("softprotocol-vrrp", 87), ("softprotocol-ppp", 88), ("softprotocol-scan", 89), ("softprotocol-mac", 90), ("softprotocol-alg", 91), ("softprotocol-loopdetect", 92), ("softprotocol-session", 93), ("softprotocol-dhcp", 94), ("softprotocol-mld", 95), ("softprotocol-stp", 96), ("softprotocol-vlan", 97), ("softprotocol-local-accounting", 98), ("softprotocol-radius", 99), ("softprotocol-ldp", 100), ("softprotocol-amat", 101), ("softprotocol-l2vpn", 102), ("softprotocol-rsvp", 103), ("softprotocol-zesr", 104), ("softprotocol-igmp-snooping", 105), ("softprotocol-fr", 106), ("softprotocol-ethoam", 107), ("softprotocol-ssh", 108), ("softprotocol-tdm", 109), ("softprotocol-qos", 110), ("softprotocol-tacacs", 111), ("softprotocol-aaa", 112), ("softprotocol-ipv6", 113), ("softprotocol-pim", 114), ("softprotocol-fw", 115), ("softprotocol-mux", 116), ("softprotocol-udld", 117), ("softprotocol-mix", 118), ("softprotocol-bfd", 119), ("softprotocol-cfm", 120), ("softprotocol-zess", 128), ("statistics-aps", 129), ("statistics-pdh-2m", 130), ("statistics-epon", 131))

class PortWorkingType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("auto-config", 0), ("full-duplex", 1), ("half-duplex", 2))

class ShelfAttrib(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("workshelf", 1), ("fanshelf", 2), ("powershelf", 3), ("environshelf", 4))

class HostAttr(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("global", 0), ("mng", 1), ("vrf", 2))

class SystemDeviceType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("single", 0), ("stack", 1))

zxr10systemconfig = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 1))
zxr10rack = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 2))
zxr10SystemID = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 1, 1), ProductID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SystemID.setStatus('current')
zxr10SystemserialNo = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SystemserialNo.setStatus('current')
zxr10SystemDescrip = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SystemDescrip.setStatus('current')
zxr10SystemTrapHost = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10SystemTrapHost.setStatus('current')
zxr10SystemTrapCommunity = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10SystemTrapCommunity.setStatus('current')
zxr10SystemVersion = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SystemVersion.setStatus('current')
zxr10SystemVpnName = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10SystemVpnName.setStatus('current')
zxr10SystemHostAttr = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 1, 8), HostAttr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10SystemHostAttr.setStatus('current')
zxr10SystemEnableSecret = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxr10SystemEnableSecret.setStatus('current')
zxr10SystemDeviceType = MibScalar((1, 3, 6, 1, 4, 1, 3902, 3, 1, 12), SystemDeviceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SystemDeviceType.setStatus('current')
zxr10rackTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 2, 1), )
if mibBuilder.loadTexts: zxr10rackTable.setStatus('current')
zxr10rackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 2, 1, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10RackNo"))
if mibBuilder.loadTexts: zxr10rackEntry.setStatus('current')
zxr10RackNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10RackNo.setStatus('current')
zxr10RackAttrib = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 1, 1, 2), MasterStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10RackAttrib.setStatus('current')
zxr10RackAvailStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 1, 1, 3), AvailStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10RackAvailStatus.setStatus('current')
zxr10shelfTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 2, 2), )
if mibBuilder.loadTexts: zxr10shelfTable.setStatus('current')
zxr10shelfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 2, 2, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10RackNo"), (0, "ZXR10-MIB", "zxr10ShelfNo"))
if mibBuilder.loadTexts: zxr10shelfEntry.setStatus('current')
zxr10ShelfNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ShelfNo.setStatus('current')
zxr10ShelfAttrib = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ShelfAttrib.setStatus('current')
zxr10ShelfAvailStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 2, 1, 3), AvailStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ShelfAvailStatus.setStatus('current')
zxr10slotTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3), )
if mibBuilder.loadTexts: zxr10slotTable.setStatus('current')
zxr10slotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10RackNo"), (0, "ZXR10-MIB", "zxr10ShelfNo"), (0, "ZXR10-MIB", "zxr10PosInRack"))
if mibBuilder.loadTexts: zxr10slotEntry.setStatus('current')
zxr10PaneNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PaneNo.setStatus('current')
zxr10PosInRack = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PosInRack.setStatus('current')
zxr10SlotBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 3), BoardType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SlotBoardType.setStatus('current')
zxr10SlotNPCType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 4), NpcType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SlotNPCType.setStatus('current')
zxr10SlotPortsNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SlotPortsNumber.setStatus('current')
zxr10SlotAvailStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 6), AvailStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SlotAvailStatus.setStatus('current')
zxr10SlotOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 7), OperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SlotOperStatus.setStatus('current')
zxr10SlotMasterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 8), MasterStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SlotMasterStatus.setStatus('current')
zxr10ReceiveTick = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10ReceiveTick.setStatus('current')
zxr10SlotTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SlotTemperature.setStatus('current')
zxr10SubcardMax = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SubcardMax.setStatus('current')
zxr10BootVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10BootVersion.setStatus('current')
zxr10PCBVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PCBVersion.setStatus('current')
zxr10FPGAVer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10FPGAVer.setStatus('current')
zxr10McodeVer = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10McodeVer.setStatus('current')
zxr10MasterQDRSRAMSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10MasterQDRSRAMSize.setStatus('current')
zxr10SlaveQDRSRAMSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SlaveQDRSRAMSize.setStatus('current')
zxr10camSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10camSize.setStatus('current')
zxr10BoardSilkLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 3, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10BoardSilkLabel.setStatus('current')
zxr10portTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4), )
if mibBuilder.loadTexts: zxr10portTable.setStatus('current')
zxr10portEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10RackNo"), (0, "ZXR10-MIB", "zxr10ShelfNo"), (0, "ZXR10-MIB", "zxr10PosInRack"), (0, "ZXR10-MIB", "zxr10PortNo"))
if mibBuilder.loadTexts: zxr10portEntry.setStatus('current')
zxr10PortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortIfIndex.setStatus('current')
zxr10PortNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortNo.setStatus('current')
zxr10PortType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 3), PortType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortType.setStatus('current')
zxr10PortWorkingType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 4), PortWorkingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortWorkingType.setStatus('current')
zxr10PortMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortMTU.setStatus('current')
zxr10PortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortSpeed.setStatus('current')
zxr10PortAvailStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 7), AvailStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortAvailStatus.setStatus('current')
zxr10PortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 8), OperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortOperStatus.setStatus('current')
zxr10PortProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 9), OperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortProtocolStatus.setStatus('current')
zxr10PortProperty = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 10), PortProperty()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortProperty.setStatus('current')
zxr10PortDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 2, 4, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10PortDesc.setStatus('current')
zxr10_alarm = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 4)).setLabel("zxr10-alarm")
zxr10HardwareAlarmTrapTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 4, 6), )
if mibBuilder.loadTexts: zxr10HardwareAlarmTrapTable.setStatus('current')
zxr10HardwareAlarmTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 4, 6, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10HardwareAlarmSlotNo"), (0, "ZXR10-MIB", "zxr10HardwareAlarmCode"))
if mibBuilder.loadTexts: zxr10HardwareAlarmTrapEntry.setStatus('current')
zxr10HardwareAlarmRackNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareAlarmRackNo.setStatus('current')
zxr10HardwareAlarmShelfNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareAlarmShelfNo.setStatus('current')
zxr10HardwareAlarmSlotNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareAlarmSlotNo.setStatus('current')
zxr10HardwareAlarmPortNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareAlarmPortNo.setStatus('current')
zxr10HardwareAlarmCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareAlarmCode.setStatus('current')
zxr10HardwareAlarmLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareAlarmLevel.setStatus('current')
zxr10HardwareAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 6, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareAlarmTime.setStatus('current')
zxr10HardwareAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 6, 1, 8), BoolStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareAlarmStatus.setStatus('current')
zxr10HardwareAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 6, 1, 9), AlarmType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareAlarmType.setStatus('current')
zxr10HardwareAlarmVariableValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareAlarmVariableValue.setStatus('current')
zxr10HardwareAlarmValueRisingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareAlarmValueRisingThreshold.setStatus('current')
zxr10HardwareAlarmValueFallingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareAlarmValueFallingThreshold.setStatus('current')
zxr10HardwareAlarmDescrip = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 6, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareAlarmDescrip.setStatus('current')
zxr10SoftProtocolAlarmTrapTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 4, 7), )
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmTrapTable.setStatus('current')
zxr10SoftProtocolAlarmTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 4, 7, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10SoftProtocolAlarmSlotNo"), (0, "ZXR10-MIB", "zxr10SoftProtocolAlarmCode"))
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmTrapEntry.setStatus('current')
zxr10SoftProtocolAlarmRackNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmRackNo.setStatus('current')
zxr10SoftProtocolAlarmShelfNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmShelfNo.setStatus('current')
zxr10SoftProtocolAlarmSlotNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmSlotNo.setStatus('current')
zxr10SoftProtocolAlarmCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 7, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmCode.setStatus('current')
zxr10SoftProtocolAlarmLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmLevel.setStatus('current')
zxr10SoftProtocolAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 7, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmTime.setStatus('current')
zxr10SoftProtocolAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 7, 1, 7), BoolStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmStatus.setStatus('current')
zxr10SoftProtocolAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 7, 1, 8), AlarmType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmType.setStatus('current')
zxr10SoftProtocolAlarmDescrip = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 7, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmDescrip.setStatus('current')
zxr10StatisticsAlarmTrapTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 4, 8), )
if mibBuilder.loadTexts: zxr10StatisticsAlarmTrapTable.setStatus('current')
zxr10StatisticsAlarmTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 4, 8, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10StatisticsAlarmSlotNo"), (0, "ZXR10-MIB", "zxr10StatisticsAlarmCode"))
if mibBuilder.loadTexts: zxr10StatisticsAlarmTrapEntry.setStatus('current')
zxr10StatisticsAlarmRackNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StatisticsAlarmRackNo.setStatus('current')
zxr10StatisticsAlarmShelfNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StatisticsAlarmShelfNo.setStatus('current')
zxr10StatisticsAlarmSlotNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StatisticsAlarmSlotNo.setStatus('current')
zxr10StatisticsAlarmPortNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StatisticsAlarmPortNo.setStatus('current')
zxr10StatisticsAlarmCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StatisticsAlarmCode.setStatus('current')
zxr10StatisticsAlarmLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 8, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StatisticsAlarmLevel.setStatus('current')
zxr10StatisticsAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 8, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StatisticsAlarmTime.setStatus('current')
zxr10StatisticsAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 8, 1, 8), BoolStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StatisticsAlarmStatus.setStatus('current')
zxr10StatisticsAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 8, 1, 9), AlarmType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StatisticsAlarmType.setStatus('current')
zxr10StatisticsAlarmVariableValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 8, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StatisticsAlarmVariableValue.setStatus('current')
zxr10StatisticsAlarmValueRisingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 8, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StatisticsAlarmValueRisingThreshold.setStatus('current')
zxr10StatisticsAlarmValueFallingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 8, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StatisticsAlarmValueFallingThreshold.setStatus('current')
zxr10StatisticsAlarmDescrip = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 8, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StatisticsAlarmDescrip.setStatus('current')
zxr10AlarmTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 4, 20))
zxr10HardwareAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 3902, 3, 4, 20, 1)).setObjects(("ZXR10-MIB", "zxr10HardwareAlarmRackNo"), ("ZXR10-MIB", "zxr10HardwareAlarmShelfNo"), ("ZXR10-MIB", "zxr10HardwareAlarmSlotNo"), ("ZXR10-MIB", "zxr10HardwareAlarmPortNo"), ("ZXR10-MIB", "zxr10HardwareAlarmCode"), ("ZXR10-MIB", "zxr10HardwareAlarmLevel"), ("ZXR10-MIB", "zxr10HardwareAlarmTime"), ("ZXR10-MIB", "zxr10HardwareAlarmStatus"), ("ZXR10-MIB", "zxr10HardwareAlarmType"), ("ZXR10-MIB", "zxr10HardwareAlarmVariableValue"), ("ZXR10-MIB", "zxr10HardwareAlarmValueRisingThreshold"), ("ZXR10-MIB", "zxr10HardwareAlarmValueFallingThreshold"), ("ZXR10-MIB", "zxr10HardwareAlarmDescrip"))
if mibBuilder.loadTexts: zxr10HardwareAlarmTrap.setStatus('current')
zxr10SoftProtocolAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 3902, 3, 4, 20, 2)).setObjects(("ZXR10-MIB", "zxr10SoftProtocolAlarmRackNo"), ("ZXR10-MIB", "zxr10SoftProtocolAlarmShelfNo"), ("ZXR10-MIB", "zxr10SoftProtocolAlarmSlotNo"), ("ZXR10-MIB", "zxr10SoftProtocolAlarmCode"), ("ZXR10-MIB", "zxr10SoftProtocolAlarmLevel"), ("ZXR10-MIB", "zxr10SoftProtocolAlarmTime"), ("ZXR10-MIB", "zxr10SoftProtocolAlarmStatus"), ("ZXR10-MIB", "zxr10SoftProtocolAlarmType"), ("ZXR10-MIB", "zxr10SoftProtocolAlarmDescrip"))
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmTrap.setStatus('current')
zxr10StatisticsAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 3902, 3, 4, 20, 3)).setObjects(("ZXR10-MIB", "zxr10StatisticsAlarmRackNo"), ("ZXR10-MIB", "zxr10StatisticsAlarmShelfNo"), ("ZXR10-MIB", "zxr10StatisticsAlarmSlotNo"), ("ZXR10-MIB", "zxr10StatisticsAlarmPortNo"), ("ZXR10-MIB", "zxr10StatisticsAlarmCode"), ("ZXR10-MIB", "zxr10StatisticsAlarmLevel"), ("ZXR10-MIB", "zxr10StatisticsAlarmTime"), ("ZXR10-MIB", "zxr10StatisticsAlarmStatus"), ("ZXR10-MIB", "zxr10StatisticsAlarmType"), ("ZXR10-MIB", "zxr10StatisticsAlarmVariableValue"), ("ZXR10-MIB", "zxr10StatisticsAlarmValueRisingThreshold"), ("ZXR10-MIB", "zxr10StatisticsAlarmValueFallingThreshold"), ("ZXR10-MIB", "zxr10StatisticsAlarmDescrip"))
if mibBuilder.loadTexts: zxr10StatisticsAlarmTrap.setStatus('current')
zxr10_statistics = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 3)).setLabel("zxr10-statistics")
zxr10SystemUnitTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 3, 1), )
if mibBuilder.loadTexts: zxr10SystemUnitTable.setStatus('current')
zxr10SystemUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 3, 1, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10SystemUnitIndex"))
if mibBuilder.loadTexts: zxr10SystemUnitEntry.setStatus('current')
zxr10SystemUnitIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SystemUnitIndex.setStatus('current')
zxr10SystemUnitRunStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 1, 1, 2), UnitRunStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SystemUnitRunStatus.setStatus('current')
zxr10SystemMemSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SystemMemSize.setStatus('current')
zxr10SystemMemUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SystemMemUsed.setStatus('current')
zxr10SystemCpuUtility2m = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SystemCpuUtility2m.setStatus('current')
zxr10SystemCpuUtility5s = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SystemCpuUtility5s.setStatus('current')
zxr10SystemCpuUtility30s = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SystemCpuUtility30s.setStatus('current')
zxr10SystemPeakCpuUtility = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SystemPeakCpuUtility.setStatus('current')
zxr10SystemUnitUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 1, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SystemUnitUpTime.setStatus('current')
zxr10SystemUnitPidNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SystemUnitPidNum.setStatus('current')
zxr10SystemCpuUtility1m = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SystemCpuUtility1m.setStatus('current')
zxr10SystemCpuUtility5m = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SystemCpuUtility5m.setStatus('current')
zxr10UnitPidTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3), )
if mibBuilder.loadTexts: zxr10UnitPidTable.setStatus('current')
zxr10UnitPidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10SystemUnitIndex"), (0, "ZXR10-MIB", "zxr10UnitPidNo"))
if mibBuilder.loadTexts: zxr10UnitPidEntry.setStatus('current')
zxr10UnitPidNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidNo.setStatus('current')
zxr10UnitPidUsedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidUsedStatus.setStatus('current')
zxr10UnitPidName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidName.setStatus('current')
zxr10UnitPidPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidPrio.setStatus('current')
zxr10UnitPidStackSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidStackSize.setStatus('current')
zxr10UnitPidCalledTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidCalledTimes.setStatus('current')
zxr10UnitPidCpuOccupanTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidCpuOccupanTime.setStatus('current')
zxr10UnitPidInterruptTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidInterruptTimes.setStatus('current')
zxr10UnitPidAsyQuenMsgMax = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidAsyQuenMsgMax.setStatus('current')
zxr10UnitPidAsyQuenUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidAsyQuenUsed.setStatus('current')
zxr10UnitPidAsyQuenBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidAsyQuenBlocked.setStatus('current')
zxr10UnitPidAsyQuenSendTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidAsyQuenSendTimeouts.setStatus('current')
zxr10UnitPidAsyQuenRecTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidAsyQuenRecTimeouts.setStatus('current')
zxr10UnitPidSynQuenMsgMax = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidSynQuenMsgMax.setStatus('current')
zxr10UnitPidSynQuenUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidSynQuenUsed.setStatus('current')
zxr10UnitPidSynQuenBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidSynQuenBlocked.setStatus('current')
zxr10UnitPidSynQuenSendTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidSynQuenSendTimeouts.setStatus('current')
zxr10UnitPidSynQuenRecTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidSynQuenRecTimeouts.setStatus('current')
zxr10UnitPidTimerNamedUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidTimerNamedUsed.setStatus('current')
zxr10UnitPidTimerUnnamedUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 3, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitPidTimerUnnamedUsed.setStatus('current')
zxr10UnitCommStatTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 3, 4), )
if mibBuilder.loadTexts: zxr10UnitCommStatTable.setStatus('current')
zxr10UnitCommStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 3, 4, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10SystemUnitIndex"), (0, "ZXR10-MIB", "zxr10UnitNo"))
if mibBuilder.loadTexts: zxr10UnitCommStatEntry.setStatus('current')
zxr10UnitNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitNo.setStatus('current')
zxr10UnitsndMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitsndMsgs.setStatus('current')
zxr10UnitsndBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitsndBytes.setStatus('current')
zxr10UnitsndByteGigas = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitsndByteGigas.setStatus('current')
zxr10UnitrcvMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitrcvMsgs.setStatus('current')
zxr10UnitrcvBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitrcvBytes.setStatus('current')
zxr10UnitrcvByteGigas = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 3, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10UnitrcvByteGigas.setStatus('current')
zxr10HardwareEnvironAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 4, 1), )
if mibBuilder.loadTexts: zxr10HardwareEnvironAlarmTable.setStatus('current')
zxr10HardwareEnvironAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 4, 1, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10HardwareEnvironAlarmSlotNo"), (0, "ZXR10-MIB", "zxr10HardwareEnvironAlarmCode"))
if mibBuilder.loadTexts: zxr10HardwareEnvironAlarmEntry.setStatus('current')
zxr10HardwareEnvironAlarmRackNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareEnvironAlarmRackNo.setStatus('current')
zxr10HardwareEnvironAlarmShelfNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareEnvironAlarmShelfNo.setStatus('current')
zxr10HardwareEnvironAlarmSlotNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareEnvironAlarmSlotNo.setStatus('current')
zxr10HardwareEnvironAlarmCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareEnvironAlarmCode.setStatus('current')
zxr10HardwareEnvironAlarmLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareEnvironAlarmLevel.setStatus('current')
zxr10HardwareEnvironAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareEnvironAlarmTime.setStatus('current')
zxr10HardwareEnvironAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 1, 1, 7), BoolStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareEnvironAlarmStatus.setStatus('current')
zxr10HardwareEnvironAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 1, 1, 8), AlarmType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareEnvironAlarmType.setStatus('current')
zxr10HardwareEnvironAlarmDescrip = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareEnvironAlarmDescrip.setStatus('current')
zxr10HardwareBoardAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 4, 2), )
if mibBuilder.loadTexts: zxr10HardwareBoardAlarmTable.setStatus('current')
zxr10HardwareBoardAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 4, 2, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10HardwareBoardAlarmSlotNo"), (0, "ZXR10-MIB", "zxr10HardwareBoardAlarmCode"))
if mibBuilder.loadTexts: zxr10HardwareBoardAlarmEntry.setStatus('current')
zxr10HardwareBoardAlarmRackNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareBoardAlarmRackNo.setStatus('current')
zxr10HardwareBoardAlarmShelfNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareBoardAlarmShelfNo.setStatus('current')
zxr10HardwareBoardAlarmSlotNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareBoardAlarmSlotNo.setStatus('current')
zxr10HardwareBoardAlarmCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareBoardAlarmCode.setStatus('current')
zxr10HardwareBoardAlarmLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareBoardAlarmLevel.setStatus('current')
zxr10HardwareBoardAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 2, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareBoardAlarmTime.setStatus('current')
zxr10HardwareBoardAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 2, 1, 7), BoolStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareBoardAlarmStatus.setStatus('current')
zxr10HardwareBoardAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 2, 1, 8), AlarmType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareBoardAlarmType.setStatus('current')
zxr10HardwareBoardAlarmDescrip = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwareBoardAlarmDescrip.setStatus('current')
zxr10HardwarePortAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 4, 3), )
if mibBuilder.loadTexts: zxr10HardwarePortAlarmTable.setStatus('current')
zxr10HardwarePortAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 4, 3, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10HardwarePortAlarmSlotNo"), (0, "ZXR10-MIB", "zxr10HardwarePortAlarmPortNo"), (0, "ZXR10-MIB", "zxr10HardwarePortAlarmCode"))
if mibBuilder.loadTexts: zxr10HardwarePortAlarmEntry.setStatus('current')
zxr10HardwarePortAlarmRackNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwarePortAlarmRackNo.setStatus('current')
zxr10HardwarePortAlarmShelfNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwarePortAlarmShelfNo.setStatus('current')
zxr10HardwarePortAlarmSlotNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwarePortAlarmSlotNo.setStatus('current')
zxr10HardwarePortAlarmPortNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwarePortAlarmPortNo.setStatus('current')
zxr10HardwarePortAlarmCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwarePortAlarmCode.setStatus('current')
zxr10HardwarePortAlarmLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwarePortAlarmLevel.setStatus('current')
zxr10HardwarePortAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 3, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwarePortAlarmTime.setStatus('current')
zxr10HardwarePortAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 3, 1, 8), BoolStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwarePortAlarmStatus.setStatus('current')
zxr10HardwarePortAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 3, 1, 9), AlarmType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwarePortAlarmType.setStatus('current')
zxr10HardwarePortAlarmDescrip = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 3, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10HardwarePortAlarmDescrip.setStatus('current')
zxr10SoftProtocolAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 4, 4), )
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmTable.setStatus('current')
zxr10SoftProtocolAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 4, 4, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10SoftProtocolAlarmSaveCode"))
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmEntry.setStatus('current')
zxr10SoftProtocolAlarmSaveCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmSaveCode.setStatus('current')
zxr10SoftProtocolAlarmSaveLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmSaveLevel.setStatus('current')
zxr10SoftProtocolAlarmSaveLasttime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 4, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmSaveLasttime.setStatus('current')
zxr10SoftProtocolAlarmSaveTotaltimes = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmSaveTotaltimes.setStatus('current')
zxr10SoftProtocolAlarmSaveType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 4, 1, 5), AlarmType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10SoftProtocolAlarmSaveType.setStatus('current')
zxr10StatisticsAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 3, 4, 5), )
if mibBuilder.loadTexts: zxr10StatisticsAlarmTable.setStatus('current')
zxr10StatisticsAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 3, 4, 5, 1), ).setIndexNames((0, "ZXR10-MIB", "zxr10StatisticsAlarmSaveCode"))
if mibBuilder.loadTexts: zxr10StatisticsAlarmEntry.setStatus('current')
zxr10StatisticsAlarmSaveCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StatisticsAlarmSaveCode.setStatus('current')
zxr10StatisticsAlarmSaveLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StatisticsAlarmSaveLevel.setStatus('current')
zxr10StatisticsAlarmSaveLasttime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 5, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StatisticsAlarmSaveLasttime.setStatus('current')
zxr10StatisticsAlarmSaveTotaltimes = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StatisticsAlarmSaveTotaltimes.setStatus('current')
zxr10StatisticsAlarmSaveType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 3, 4, 5, 1, 5), AlarmType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxr10StatisticsAlarmSaveType.setStatus('current')
zxr10_objectID = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 3, 100)).setLabel("zxr10-objectID")
zxr10RouterT128SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 1))
if mibBuilder.loadTexts: zxr10RouterT128SysID.setStatus('current')
zxr10RouterT64SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 2))
if mibBuilder.loadTexts: zxr10RouterT64SysID.setStatus('current')
zxr10SwitchT32SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 3))
if mibBuilder.loadTexts: zxr10SwitchT32SysID.setStatus('current')
zxr10RouterGER8SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 5))
if mibBuilder.loadTexts: zxr10RouterGER8SysID.setStatus('current')
zxr10RouterGAR_2608SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 4)).setLabel("zxr10RouterGAR-2608SysID")
if mibBuilder.loadTexts: zxr10RouterGAR_2608SysID.setStatus('current')
zxr10RouterGAR_2604SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 6)).setLabel("zxr10RouterGAR-2604SysID")
if mibBuilder.loadTexts: zxr10RouterGAR_2604SysID.setStatus('current')
zxr10SwitchT160GSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 7))
if mibBuilder.loadTexts: zxr10SwitchT160GSysID.setStatus('current')
zxr10RouterGAR_3608SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 8)).setLabel("zxr10RouterGAR-3608SysID")
if mibBuilder.loadTexts: zxr10RouterGAR_3608SysID.setStatus('current')
zxr10RouterGAR_7208SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 9)).setLabel("zxr10RouterGAR-7208SysID")
if mibBuilder.loadTexts: zxr10RouterGAR_7208SysID.setStatus('current')
zxr10SwitchT64GSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 10))
if mibBuilder.loadTexts: zxr10SwitchT64GSysID.setStatus('current')
zxr10Switch3206SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 11))
if mibBuilder.loadTexts: zxr10Switch3206SysID.setStatus('current')
zxr10Switch3906SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 12))
if mibBuilder.loadTexts: zxr10Switch3906SysID.setStatus('current')
zxr10Switch3228SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 13))
if mibBuilder.loadTexts: zxr10Switch3228SysID.setStatus('current')
zxr10Switch3928SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 14))
if mibBuilder.loadTexts: zxr10Switch3928SysID.setStatus('current')
zxr10Switch3252SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 15))
if mibBuilder.loadTexts: zxr10Switch3252SysID.setStatus('current')
zxr10Switch3952SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 16))
if mibBuilder.loadTexts: zxr10Switch3952SysID.setStatus('current')
zxr10Switch5224SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 17))
if mibBuilder.loadTexts: zxr10Switch5224SysID.setStatus('current')
zxr10Switch5228SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 18))
if mibBuilder.loadTexts: zxr10Switch5228SysID.setStatus('current')
zxr10Switch5228FSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 19))
if mibBuilder.loadTexts: zxr10Switch5228FSysID.setStatus('current')
zxr10Switch5928SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 20))
if mibBuilder.loadTexts: zxr10Switch5928SysID.setStatus('current')
zxr10Switch5928FSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 21))
if mibBuilder.loadTexts: zxr10Switch5928FSysID.setStatus('current')
zxr10Switch5252SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 22))
if mibBuilder.loadTexts: zxr10Switch5252SysID.setStatus('current')
zxr10Switch5952SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 23))
if mibBuilder.loadTexts: zxr10Switch5952SysID.setStatus('current')
zxr10Switch3226SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 24))
if mibBuilder.loadTexts: zxr10Switch3226SysID.setStatus('current')
zxr10SwitchT40GSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 25))
if mibBuilder.loadTexts: zxr10SwitchT40GSysID.setStatus('current')
zxr10RouterT1200SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 26))
if mibBuilder.loadTexts: zxr10RouterT1200SysID.setStatus('current')
zxr10RouterT600SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 27))
if mibBuilder.loadTexts: zxr10RouterT600SysID.setStatus('current')
zxr10RouterGER2SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 28))
if mibBuilder.loadTexts: zxr10RouterGER2SysID.setStatus('current')
zxr10RouterGER4SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 29))
if mibBuilder.loadTexts: zxr10RouterGER4SysID.setStatus('current')
zxr10Switch3226FISysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 30))
if mibBuilder.loadTexts: zxr10Switch3226FISysID.setStatus('current')
zxr10Switch3928ASysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 31))
if mibBuilder.loadTexts: zxr10Switch3928ASysID.setStatus('current')
zxr10Switch3928AFISysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 32))
if mibBuilder.loadTexts: zxr10Switch3928AFISysID.setStatus('current')
zxr10Switch3952ASysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 33))
if mibBuilder.loadTexts: zxr10Switch3952ASysID.setStatus('current')
zxr10Switch3228A_EISysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 34)).setLabel("zxr10Switch3228A-EISysID")
if mibBuilder.loadTexts: zxr10Switch3228A_EISysID.setStatus('current')
zxr10Switch3228ASysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 35))
if mibBuilder.loadTexts: zxr10Switch3228ASysID.setStatus('current')
zxr10Switch3228A_FISysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 36)).setLabel("zxr10Switch3228A-FISysID")
if mibBuilder.loadTexts: zxr10Switch3228A_FISysID.setStatus('current')
zxr10Switch3252ASysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 37))
if mibBuilder.loadTexts: zxr10Switch3252ASysID.setStatus('current')
zxr10Switch5228ASysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 38))
if mibBuilder.loadTexts: zxr10Switch5228ASysID.setStatus('current')
zxr10Switch5252ASysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 39))
if mibBuilder.loadTexts: zxr10Switch5252ASysID.setStatus('current')
zxr10Switch5928ESysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 40))
if mibBuilder.loadTexts: zxr10Switch5928ESysID.setStatus('current')
zxr10Switch5928E_FISysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 41)).setLabel("zxr10Switch5928E-FISysID")
if mibBuilder.loadTexts: zxr10Switch5928E_FISysID.setStatus('current')
zxr10Switch3952ESysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 42))
if mibBuilder.loadTexts: zxr10Switch3952ESysID.setStatus('current')
zxr10Switch5952ESysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 43))
if mibBuilder.loadTexts: zxr10Switch5952ESysID.setStatus('current')
zxr10RouterR10_1822_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 100)).setLabel("zxr10RouterR10-1822-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1822_ACSysID.setStatus('current')
zxr10RouterR10_1822_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 101)).setLabel("zxr10RouterR10-1822-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1822_DCSysID.setStatus('current')
zxr10RouterR10_1821_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 102)).setLabel("zxr10RouterR10-1821-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1821_ACSysID.setStatus('current')
zxr10RouterR10_1821_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 103)).setLabel("zxr10RouterR10-1821-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1821_DCSysID.setStatus('current')
zxr10RouterR10_1812_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 104)).setLabel("zxr10RouterR10-1812-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1812_ACSysID.setStatus('current')
zxr10RouterR10_1812_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 105)).setLabel("zxr10RouterR10-1812-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1812_DCSysID.setStatus('current')
zxr10RouterR10_1811_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 106)).setLabel("zxr10RouterR10-1811-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1811_ACSysID.setStatus('current')
zxr10RouterR10_1811_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 107)).setLabel("zxr10RouterR10-1811-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1811_DCSysID.setStatus('current')
zxr10RouterR10_1822E_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 108)).setLabel("zxr10RouterR10-1822E-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1822E_ACSysID.setStatus('current')
zxr10RouterR10_1822E_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 109)).setLabel("zxr10RouterR10-1822E-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1822E_DCSysID.setStatus('current')
zxr10RouterR10_1821E_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 110)).setLabel("zxr10RouterR10-1821E-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1821E_ACSysID.setStatus('current')
zxr10RouterR10_1821E_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 111)).setLabel("zxr10RouterR10-1821E-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1821E_DCSysID.setStatus('current')
zxr10RouterR10_1812E_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 112)).setLabel("zxr10RouterR10-1812E-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1812E_ACSysID.setStatus('current')
zxr10RouterR10_1812E_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 113)).setLabel("zxr10RouterR10-1812E-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1812E_DCSysID.setStatus('current')
zxr10RouterR10_1811E_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 114)).setLabel("zxr10RouterR10-1811E-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1811E_ACSysID.setStatus('current')
zxr10RouterR10_1811E_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 115)).setLabel("zxr10RouterR10-1811E-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1811E_DCSysID.setStatus('current')
zxr10RouterR10_3881_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 132)).setLabel("zxr10RouterR10-3881-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3881_ACSysID.setStatus('current')
zxr10RouterR10_3882_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 133)).setLabel("zxr10RouterR10-3882-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3882_ACSysID.setStatus('current')
zxr10RouterR10_3883_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 134)).setLabel("zxr10RouterR10-3883-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3883_ACSysID.setStatus('current')
zxr10RouterR10_3884_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 135)).setLabel("zxr10RouterR10-3884-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3884_ACSysID.setStatus('current')
zxr10RouterR10_3881_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 136)).setLabel("zxr10RouterR10-3881-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3881_DCSysID.setStatus('current')
zxr10RouterR10_3882_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 137)).setLabel("zxr10RouterR10-3882-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3882_DCSysID.setStatus('current')
zxr10RouterR10_3883_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 138)).setLabel("zxr10RouterR10-3883-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3883_DCSysID.setStatus('current')
zxr10RouterR10_3884_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 139)).setLabel("zxr10RouterR10-3884-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3884_DCSysID.setStatus('current')
zxr10RouterR10_3841_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 140)).setLabel("zxr10RouterR10-3841-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3841_ACSysID.setStatus('current')
zxr10RouterR10_3842_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 141)).setLabel("zxr10RouterR10-3842-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3842_ACSysID.setStatus('current')
zxr10RouterR10_3843_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 142)).setLabel("zxr10RouterR10-3843-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3843_ACSysID.setStatus('current')
zxr10RouterR10_3844_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 143)).setLabel("zxr10RouterR10-3844-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3844_ACSysID.setStatus('current')
zxr10RouterR10_3841_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 144)).setLabel("zxr10RouterR10-3841-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3841_DCSysID.setStatus('current')
zxr10RouterR10_3842_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 145)).setLabel("zxr10RouterR10-3842-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3842_DCSysID.setStatus('current')
zxr10RouterR10_3843_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 146)).setLabel("zxr10RouterR10-3843-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3843_DCSysID.setStatus('current')
zxr10RouterR10_3844_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 147)).setLabel("zxr10RouterR10-3844-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3844_DCSysID.setStatus('current')
zxr10RouterR10_3821_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 148)).setLabel("zxr10RouterR10-3821-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3821_ACSysID.setStatus('current')
zxr10RouterR10_3822_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 149)).setLabel("zxr10RouterR10-3822-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3822_ACSysID.setStatus('current')
zxr10RouterR10_3823_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 150)).setLabel("zxr10RouterR10-3823-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3823_ACSysID.setStatus('current')
zxr10RouterR10_3824_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 151)).setLabel("zxr10RouterR10-3824-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3824_ACSysID.setStatus('current')
zxr10RouterR10_3821_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 152)).setLabel("zxr10RouterR10-3821-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3821_DCSysID.setStatus('current')
zxr10RouterR10_3822_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 153)).setLabel("zxr10RouterR10-3822-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3822_DCSysID.setStatus('current')
zxr10RouterR10_3823_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 154)).setLabel("zxr10RouterR10-3823-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3823_DCSysID.setStatus('current')
zxr10RouterR10_3824_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 155)).setLabel("zxr10RouterR10-3824-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_3824_DCSysID.setStatus('current')
zxr10RouterR10_2841_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 172)).setLabel("zxr10RouterR10-2841-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2841_ACSysID.setStatus('current')
zxr10RouterR10_2842_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 173)).setLabel("zxr10RouterR10-2842-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2842_ACSysID.setStatus('current')
zxr10RouterR10_2843_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 174)).setLabel("zxr10RouterR10-2843-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2843_ACSysID.setStatus('current')
zxr10RouterR10_2844_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 175)).setLabel("zxr10RouterR10-2844-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2844_ACSysID.setStatus('current')
zxr10RouterR10_2841_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 176)).setLabel("zxr10RouterR10-2841-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2841_DCSysID.setStatus('current')
zxr10RouterR10_2842_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 177)).setLabel("zxr10RouterR10-2842-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2842_DCSysID.setStatus('current')
zxr10RouterR10_2843_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 178)).setLabel("zxr10RouterR10-2843-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2843_DCSysID.setStatus('current')
zxr10RouterR10_2844_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 179)).setLabel("zxr10RouterR10-2844-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2844_DCSysID.setStatus('current')
zxr10RouterR10_2881_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 180)).setLabel("zxr10RouterR10-2881-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2881_ACSysID.setStatus('current')
zxr10RouterR10_2882_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 181)).setLabel("zxr10RouterR10-2882-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2882_ACSysID.setStatus('current')
zxr10RouterR10_2883_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 182)).setLabel("zxr10RouterR10-2883-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2883_ACSysID.setStatus('current')
zxr10RouterR10_2884_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 183)).setLabel("zxr10RouterR10-2884-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2884_ACSysID.setStatus('current')
zxr10RouterR10_2881_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 184)).setLabel("zxr10RouterR10-2881-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2881_DCSysID.setStatus('current')
zxr10RouterR10_2882_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 185)).setLabel("zxr10RouterR10-2882-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2882_DCSysID.setStatus('current')
zxr10RouterR10_2883_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 186)).setLabel("zxr10RouterR10-2883-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2883_DCSysID.setStatus('current')
zxr10RouterR10_2884_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 187)).setLabel("zxr10RouterR10-2884-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2884_DCSysID.setStatus('current')
zxr10RouterR10_2821_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 188)).setLabel("zxr10RouterR10-2821-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2821_ACSysID.setStatus('current')
zxr10RouterR10_2822_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 189)).setLabel("zxr10RouterR10-2822-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2822_ACSysID.setStatus('current')
zxr10RouterR10_2823_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 190)).setLabel("zxr10RouterR10-2823-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2823_ACSysID.setStatus('current')
zxr10RouterR10_2824_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 191)).setLabel("zxr10RouterR10-2824-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2824_ACSysID.setStatus('current')
zxr10RouterR10_2821_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 192)).setLabel("zxr10RouterR10-2821-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2821_DCSysID.setStatus('current')
zxr10RouterR10_2822_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 193)).setLabel("zxr10RouterR10-2822-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2822_DCSysID.setStatus('current')
zxr10RouterR10_2823_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 194)).setLabel("zxr10RouterR10-2823-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2823_DCSysID.setStatus('current')
zxr10RouterR10_2824_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 195)).setLabel("zxr10RouterR10-2824-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_2824_DCSysID.setStatus('current')
zxr10RouterR10_1841_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 196)).setLabel("zxr10RouterR10-1841-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1841_ACSysID.setStatus('current')
zxr10RouterR10_1842_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 197)).setLabel("zxr10RouterR10-1842-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1842_ACSysID.setStatus('current')
zxr10RouterR10_1843_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 198)).setLabel("zxr10RouterR10-1843-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1843_ACSysID.setStatus('current')
zxr10RouterR10_1844_ACSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 199)).setLabel("zxr10RouterR10-1844-ACSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1844_ACSysID.setStatus('current')
zxr10RouterR10_1841_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 200)).setLabel("zxr10RouterR10-1841-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1841_DCSysID.setStatus('current')
zxr10RouterR10_1842_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 201)).setLabel("zxr10RouterR10-1842-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1842_DCSysID.setStatus('current')
zxr10RouterR10_1843_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 202)).setLabel("zxr10RouterR10-1843-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1843_DCSysID.setStatus('current')
zxr10RouterR10_1844_DCSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 203)).setLabel("zxr10RouterR10-1844-DCSysID")
if mibBuilder.loadTexts: zxr10RouterR10_1844_DCSysID.setStatus('current')
zxr10Switch_6907SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 400)).setLabel("zxr10Switch-6907SysID")
if mibBuilder.loadTexts: zxr10Switch_6907SysID.setStatus('current')
zxr10Switch_T240GSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 401)).setLabel("zxr10Switch-T240GSysID")
if mibBuilder.loadTexts: zxr10Switch_T240GSysID.setStatus('current')
zxr10Switch_6902SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 402)).setLabel("zxr10Switch-6902SysID")
if mibBuilder.loadTexts: zxr10Switch_6902SysID.setStatus('current')
zxr10Switch_6905SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 403)).setLabel("zxr10Switch-6905SysID")
if mibBuilder.loadTexts: zxr10Switch_6905SysID.setStatus('current')
zxr10Switch_6908SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 404)).setLabel("zxr10Switch-6908SysID")
if mibBuilder.loadTexts: zxr10Switch_6908SysID.setStatus('current')
zxr10Switch_8902SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 405)).setLabel("zxr10Switch-8902SysID")
if mibBuilder.loadTexts: zxr10Switch_8902SysID.setStatus('current')
zxr10Switch_8905SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 406)).setLabel("zxr10Switch-8905SysID")
if mibBuilder.loadTexts: zxr10Switch_8905SysID.setStatus('current')
zxr10Switch_8908SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 407)).setLabel("zxr10Switch-8908SysID")
if mibBuilder.loadTexts: zxr10Switch_8908SysID.setStatus('current')
zxr10Switch_8912SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 408)).setLabel("zxr10Switch-8912SysID")
if mibBuilder.loadTexts: zxr10Switch_8912SysID.setStatus('current')
zxctn_6100SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 409)).setLabel("zxctn-6100SysID")
if mibBuilder.loadTexts: zxctn_6100SysID.setStatus('current')
zxr10Switch5928_PSSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 417)).setLabel("zxr10Switch5928-PSSysID")
if mibBuilder.loadTexts: zxr10Switch5928_PSSysID.setStatus('current')
zxr10Switch3928A_PSSysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 418)).setLabel("zxr10Switch3928A-PSSysID")
if mibBuilder.loadTexts: zxr10Switch3928A_PSSysID.setStatus('current')
zxr10Switch3928ESysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 419))
if mibBuilder.loadTexts: zxr10Switch3928ESysID.setStatus('current')
zxr10Switch3928E_FISysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 420)).setLabel("zxr10Switch3928E-FISysID")
if mibBuilder.loadTexts: zxr10Switch3928E_FISysID.setStatus('current')
zxr10UAS10600SysID = ObjectIdentity((1, 3, 6, 1, 4, 1, 3902, 3, 100, 5000))
if mibBuilder.loadTexts: zxr10UAS10600SysID.setStatus('current')
mibBuilder.exportSymbols("ZXR10-MIB", zxr10SoftProtocolAlarmSaveCode=zxr10SoftProtocolAlarmSaveCode, zxr10StatisticsAlarmValueRisingThreshold=zxr10StatisticsAlarmValueRisingThreshold, zxr10SoftProtocolAlarmSaveLasttime=zxr10SoftProtocolAlarmSaveLasttime, zxr10BoardSilkLabel=zxr10BoardSilkLabel, zxr10HardwareAlarmValueFallingThreshold=zxr10HardwareAlarmValueFallingThreshold, zxr10StatisticsAlarmStatus=zxr10StatisticsAlarmStatus, zxr10HardwareBoardAlarmSlotNo=zxr10HardwareBoardAlarmSlotNo, zxr10RouterR10_1821_DCSysID=zxr10RouterR10_1821_DCSysID, zxr10BootVersion=zxr10BootVersion, zxr10SwitchT32SysID=zxr10SwitchT32SysID, zxr10RouterR10_3824_DCSysID=zxr10RouterR10_3824_DCSysID, zxr10RouterGAR_2608SysID=zxr10RouterGAR_2608SysID, zxr10SystemEnableSecret=zxr10SystemEnableSecret, zxr10Switch3952ASysID=zxr10Switch3952ASysID, zxr10RouterR10_3822_DCSysID=zxr10RouterR10_3822_DCSysID, zxr10SystemTrapHost=zxr10SystemTrapHost, zxr10StatisticsAlarmCode=zxr10StatisticsAlarmCode, zxr10UnitPidAsyQuenMsgMax=zxr10UnitPidAsyQuenMsgMax, zxr10RouterT64SysID=zxr10RouterT64SysID, zxr10HardwareBoardAlarmShelfNo=zxr10HardwareBoardAlarmShelfNo, zxr10Switch_6902SysID=zxr10Switch_6902SysID, zxr10Switch3928ESysID=zxr10Switch3928ESysID, AlarmType=AlarmType, zxr10shelfEntry=zxr10shelfEntry, zxr10UnitCommStatTable=zxr10UnitCommStatTable, zxr10StatisticsAlarmVariableValue=zxr10StatisticsAlarmVariableValue, zxr10Switch_6905SysID=zxr10Switch_6905SysID, zxr10SlotOperStatus=zxr10SlotOperStatus, zxr10SystemTrapCommunity=zxr10SystemTrapCommunity, zxr10SystemMemUsed=zxr10SystemMemUsed, zxr10HardwareAlarmRackNo=zxr10HardwareAlarmRackNo, zxr10SoftProtocolAlarmCode=zxr10SoftProtocolAlarmCode, zxr10RouterR10_2882_ACSysID=zxr10RouterR10_2882_ACSysID, zxr10UnitPidUsedStatus=zxr10UnitPidUsedStatus, zxr10RouterR10_2821_DCSysID=zxr10RouterR10_2821_DCSysID, DisplayString=DisplayString, zxr10RouterR10_3882_DCSysID=zxr10RouterR10_3882_DCSysID, zxr10SystemCpuUtility5m=zxr10SystemCpuUtility5m, zxr10RouterR10_1822E_DCSysID=zxr10RouterR10_1822E_DCSysID, zxr10rackEntry=zxr10rackEntry, zxr10UnitPidName=zxr10UnitPidName, zxr10Switch3252SysID=zxr10Switch3252SysID, zxr10StatisticsAlarmSaveLasttime=zxr10StatisticsAlarmSaveLasttime, zxr10RouterR10_3822_ACSysID=zxr10RouterR10_3822_ACSysID, zxr10Switch3228A_FISysID=zxr10Switch3228A_FISysID, zxr10SlotAvailStatus=zxr10SlotAvailStatus, zxr10StatisticsAlarmValueFallingThreshold=zxr10StatisticsAlarmValueFallingThreshold, zxr10HardwareEnvironAlarmEntry=zxr10HardwareEnvironAlarmEntry, zxr10PortIfIndex=zxr10PortIfIndex, PortProperty=PortProperty, zxr10PortSpeed=zxr10PortSpeed, zxr10Switch_6908SysID=zxr10Switch_6908SysID, zxr10RouterR10_3823_DCSysID=zxr10RouterR10_3823_DCSysID, zxr10RouterR10_2842_DCSysID=zxr10RouterR10_2842_DCSysID, zxr10HardwarePortAlarmSlotNo=zxr10HardwarePortAlarmSlotNo, zxr10HardwareEnvironAlarmTable=zxr10HardwareEnvironAlarmTable, zxctn_6100SysID=zxctn_6100SysID, zxr10RouterR10_3821_DCSysID=zxr10RouterR10_3821_DCSysID, zxr10Switch5228ASysID=zxr10Switch5228ASysID, zxr10HardwarePortAlarmRackNo=zxr10HardwarePortAlarmRackNo, zxr10StatisticsAlarmSaveType=zxr10StatisticsAlarmSaveType, zxr10McodeVer=zxr10McodeVer, zxr10StatisticsAlarmSlotNo=zxr10StatisticsAlarmSlotNo, zxr10UnitsndByteGigas=zxr10UnitsndByteGigas, zte=zte, zxr10RouterGER8SysID=zxr10RouterGER8SysID, zxr10RouterR10_1811E_DCSysID=zxr10RouterR10_1811E_DCSysID, zxr10RouterGER4SysID=zxr10RouterGER4SysID, zxr10HardwareEnvironAlarmDescrip=zxr10HardwareEnvironAlarmDescrip, BoardType=BoardType, zxr10RouterR10_1811E_ACSysID=zxr10RouterR10_1811E_ACSysID, zxr10HardwareBoardAlarmCode=zxr10HardwareBoardAlarmCode, zxr10RouterR10_2842_ACSysID=zxr10RouterR10_2842_ACSysID, zxr10Switch3928SysID=zxr10Switch3928SysID, zxr10RouterR10_1842_ACSysID=zxr10RouterR10_1842_ACSysID, zxr10Switch3252ASysID=zxr10Switch3252ASysID, zxr10Switch_8905SysID=zxr10Switch_8905SysID, zxr10PortType=zxr10PortType, zxr10PortProperty=zxr10PortProperty, zxr10SystemUnitUpTime=zxr10SystemUnitUpTime, zxr10FPGAVer=zxr10FPGAVer, zxr10RouterR10_1812_ACSysID=zxr10RouterR10_1812_ACSysID, zxr10SoftProtocolAlarmLevel=zxr10SoftProtocolAlarmLevel, zxr10RouterR10_2843_DCSysID=zxr10RouterR10_2843_DCSysID, zxr10RouterR10_3821_ACSysID=zxr10RouterR10_3821_ACSysID, zxr10HardwareBoardAlarmEntry=zxr10HardwareBoardAlarmEntry, zxr10RouterR10_3881_DCSysID=zxr10RouterR10_3881_DCSysID, zxr10camSize=zxr10camSize, zxr10RouterR10_1843_ACSysID=zxr10RouterR10_1843_ACSysID, zxr10RouterR10_2882_DCSysID=zxr10RouterR10_2882_DCSysID, zxr10RouterT128SysID=zxr10RouterT128SysID, zxr10Switch5952SysID=zxr10Switch5952SysID, zxr10RouterR10_3824_ACSysID=zxr10RouterR10_3824_ACSysID, zxr10SystemHostAttr=zxr10SystemHostAttr, zxr10RouterGAR_7208SysID=zxr10RouterGAR_7208SysID, zxr10SoftProtocolAlarmDescrip=zxr10SoftProtocolAlarmDescrip, PortWorkingType=PortWorkingType, zxr10UnitsndMsgs=zxr10UnitsndMsgs, zxr10Switch3226SysID=zxr10Switch3226SysID, zxr10StatisticsAlarmTrapEntry=zxr10StatisticsAlarmTrapEntry, zxr10RouterR10_1844_DCSysID=zxr10RouterR10_1844_DCSysID, zxr10SystemMemSize=zxr10SystemMemSize, zxr10RouterR10_1844_ACSysID=zxr10RouterR10_1844_ACSysID, zxr10HardwareBoardAlarmDescrip=zxr10HardwareBoardAlarmDescrip, zxr10RouterR10_1841_ACSysID=zxr10RouterR10_1841_ACSysID, zxr10RouterR10_3844_DCSysID=zxr10RouterR10_3844_DCSysID, zxr10Switch3228A_EISysID=zxr10Switch3228A_EISysID, zxr10portEntry=zxr10portEntry, zxr10PortMTU=zxr10PortMTU, zxr10Switch3226FISysID=zxr10Switch3226FISysID, zxr10StatisticsAlarmDescrip=zxr10StatisticsAlarmDescrip, zxr10UAS10600SysID=zxr10UAS10600SysID, zxr10SlotMasterStatus=zxr10SlotMasterStatus, zxr10UnitPidAsyQuenUsed=zxr10UnitPidAsyQuenUsed, zxr10RouterT600SysID=zxr10RouterT600SysID, zxr10RouterR10_2822_DCSysID=zxr10RouterR10_2822_DCSysID, zxr10Switch3206SysID=zxr10Switch3206SysID, zxr10StatisticsAlarmTrapTable=zxr10StatisticsAlarmTrapTable, zxr10_alarm=zxr10_alarm, zxr10UnitPidAsyQuenSendTimeouts=zxr10UnitPidAsyQuenSendTimeouts, zxr10UnitPidAsyQuenRecTimeouts=zxr10UnitPidAsyQuenRecTimeouts, zxr10slotTable=zxr10slotTable, zxr10HardwareAlarmStatus=zxr10HardwareAlarmStatus, zxr10SystemUnitEntry=zxr10SystemUnitEntry, zxr10ShelfAttrib=zxr10ShelfAttrib, zxr10Switch_6907SysID=zxr10Switch_6907SysID, zxr10RouterR10_1821_ACSysID=zxr10RouterR10_1821_ACSysID, zxr10SoftProtocolAlarmStatus=zxr10SoftProtocolAlarmStatus, zxr10UnitPidPrio=zxr10UnitPidPrio, zxr10Switch_T240GSysID=zxr10Switch_T240GSysID, zxr10RouterGAR_2604SysID=zxr10RouterGAR_2604SysID, zxr10Switch5928_PSSysID=zxr10Switch5928_PSSysID, zxr10UnitPidSynQuenBlocked=zxr10UnitPidSynQuenBlocked, zxr10SoftProtocolAlarmTrapTable=zxr10SoftProtocolAlarmTrapTable, zxr10Switch3906SysID=zxr10Switch3906SysID, zxr10Switch3228SysID=zxr10Switch3228SysID, zxr10shelfTable=zxr10shelfTable, zxr10SystemUnitRunStatus=zxr10SystemUnitRunStatus, zxr10RouterR10_2824_ACSysID=zxr10RouterR10_2824_ACSysID, zxr10rack=zxr10rack, zxr10RouterR10_1811_ACSysID=zxr10RouterR10_1811_ACSysID, zxr10Switch5224SysID=zxr10Switch5224SysID, zxr10SystemPeakCpuUtility=zxr10SystemPeakCpuUtility, zxr10StatisticsAlarmLevel=zxr10StatisticsAlarmLevel, zxr10PortProtocolStatus=zxr10PortProtocolStatus, zxr10UnitPidSynQuenRecTimeouts=zxr10UnitPidSynQuenRecTimeouts, zxr10HardwareEnvironAlarmShelfNo=zxr10HardwareEnvironAlarmShelfNo, zxr10StatisticsAlarmTable=zxr10StatisticsAlarmTable, zxr10SoftProtocolAlarmType=zxr10SoftProtocolAlarmType, zxr10AlarmTrap=zxr10AlarmTrap, zxr10HardwareBoardAlarmLevel=zxr10HardwareBoardAlarmLevel, zxr10RouterR10_1822E_ACSysID=zxr10RouterR10_1822E_ACSysID, zxr10RouterR10_1842_DCSysID=zxr10RouterR10_1842_DCSysID, zxr10RouterR10_2881_ACSysID=zxr10RouterR10_2881_ACSysID, zxr10HardwareBoardAlarmStatus=zxr10HardwareBoardAlarmStatus, zxr10UnitPidCpuOccupanTime=zxr10UnitPidCpuOccupanTime, zxr10RouterR10_3841_ACSysID=zxr10RouterR10_3841_ACSysID, zxr10UnitrcvBytes=zxr10UnitrcvBytes, zxr10Switch_8908SysID=zxr10Switch_8908SysID, SystemDeviceType=SystemDeviceType, PortType=PortType, zxr10=zxr10, zxr10StatisticsAlarmShelfNo=zxr10StatisticsAlarmShelfNo, zxr10RouterR10_3882_ACSysID=zxr10RouterR10_3882_ACSysID, zxr10HardwareBoardAlarmTime=zxr10HardwareBoardAlarmTime, zxr10HardwareEnvironAlarmLevel=zxr10HardwareEnvironAlarmLevel, zxr10SystemCpuUtility1m=zxr10SystemCpuUtility1m, zxr10SystemDescrip=zxr10SystemDescrip, zxr10RouterR10_3841_DCSysID=zxr10RouterR10_3841_DCSysID, zxr10RackAvailStatus=zxr10RackAvailStatus, zxr10UnitCommStatEntry=zxr10UnitCommStatEntry, zxr10RouterR10_2841_DCSysID=zxr10RouterR10_2841_DCSysID, zxr10PortOperStatus=zxr10PortOperStatus, zxr10UnitrcvMsgs=zxr10UnitrcvMsgs, zxr10ShelfNo=zxr10ShelfNo, zxr10HardwareEnvironAlarmType=zxr10HardwareEnvironAlarmType, zxr10Switch5928ESysID=zxr10Switch5928ESysID, zxr10RouterR10_1821E_ACSysID=zxr10RouterR10_1821E_ACSysID, zxr10RouterR10_1822_DCSysID=zxr10RouterR10_1822_DCSysID, zxr10ShelfAvailStatus=zxr10ShelfAvailStatus, zxr10HardwareAlarmPortNo=zxr10HardwareAlarmPortNo, zxr10RouterR10_3883_ACSysID=zxr10RouterR10_3883_ACSysID, zxr10HardwareEnvironAlarmStatus=zxr10HardwareEnvironAlarmStatus, HostAttr=HostAttr, zxr10HardwareBoardAlarmTable=zxr10HardwareBoardAlarmTable, zxr10Switch_8902SysID=zxr10Switch_8902SysID, zxr10SwitchT40GSysID=zxr10SwitchT40GSysID, zxr10HardwareAlarmType=zxr10HardwareAlarmType, zxr10SoftProtocolAlarmSaveType=zxr10SoftProtocolAlarmSaveType, PidUsedStatus=PidUsedStatus, zxr10SwitchT160GSysID=zxr10SwitchT160GSysID, zxr10RouterGER2SysID=zxr10RouterGER2SysID, zxr10SoftProtocolAlarmEntry=zxr10SoftProtocolAlarmEntry, zxr10UnitPidTable=zxr10UnitPidTable, zxr10SlotBoardType=zxr10SlotBoardType, zxr10SoftProtocolAlarmSlotNo=zxr10SoftProtocolAlarmSlotNo, zxr10PaneNo=zxr10PaneNo, OperStatus=OperStatus, zxr10RouterR10_1822_ACSysID=zxr10RouterR10_1822_ACSysID, zxr10SlotTemperature=zxr10SlotTemperature, zxr10SystemCpuUtility2m=zxr10SystemCpuUtility2m, zxr10UnitPidInterruptTimes=zxr10UnitPidInterruptTimes, AvailStatus=AvailStatus, zxr10SoftProtocolAlarmTable=zxr10SoftProtocolAlarmTable, zxr10SystemCpuUtility5s=zxr10SystemCpuUtility5s, zxr10StatisticsAlarmTrap=zxr10StatisticsAlarmTrap, zxr10SystemDeviceType=zxr10SystemDeviceType, zxr10SystemserialNo=zxr10SystemserialNo, zxr10UnitPidSynQuenUsed=zxr10UnitPidSynQuenUsed, zxr10HardwarePortAlarmTable=zxr10HardwarePortAlarmTable, zxr10SoftProtocolAlarmTrap=zxr10SoftProtocolAlarmTrap, zxr10RouterR10_2843_ACSysID=zxr10RouterR10_2843_ACSysID, zxr10SubcardMax=zxr10SubcardMax, zxr10SystemVersion=zxr10SystemVersion, zxr10SoftProtocolAlarmTime=zxr10SoftProtocolAlarmTime, zxr10RouterR10_1821E_DCSysID=zxr10RouterR10_1821E_DCSysID, zxr10HardwareEnvironAlarmTime=zxr10HardwareEnvironAlarmTime, zxr10PCBVersion=zxr10PCBVersion, zxr10Switch5952ESysID=zxr10Switch5952ESysID, zxr10slotEntry=zxr10slotEntry, zxr10UnitPidAsyQuenBlocked=zxr10UnitPidAsyQuenBlocked, zxr10Switch5928SysID=zxr10Switch5928SysID, zxr10MasterQDRSRAMSize=zxr10MasterQDRSRAMSize, zxr10ReceiveTick=zxr10ReceiveTick, zxr10SystemVpnName=zxr10SystemVpnName, zxr10HardwareBoardAlarmRackNo=zxr10HardwareBoardAlarmRackNo, zxr10Switch5228FSysID=zxr10Switch5228FSysID, zxr10HardwareAlarmTrapTable=zxr10HardwareAlarmTrapTable, zxr10HardwareAlarmLevel=zxr10HardwareAlarmLevel, zxr10RouterR10_3843_DCSysID=zxr10RouterR10_3843_DCSysID, zxr10RouterR10_2844_DCSysID=zxr10RouterR10_2844_DCSysID, zxr10RouterR10_3881_ACSysID=zxr10RouterR10_3881_ACSysID, zxr10Switch5928E_FISysID=zxr10Switch5928E_FISysID, zxr10HardwareBoardAlarmType=zxr10HardwareBoardAlarmType, zxr10systemconfig=zxr10systemconfig, zxr10PosInRack=zxr10PosInRack, zxr10SystemUnitTable=zxr10SystemUnitTable, zxr10StatisticsAlarmPortNo=zxr10StatisticsAlarmPortNo, zxr10HardwarePortAlarmDescrip=zxr10HardwarePortAlarmDescrip, zxr10PortDesc=zxr10PortDesc, zxr10SoftProtocolAlarmSaveLevel=zxr10SoftProtocolAlarmSaveLevel, zxr10HardwareEnvironAlarmRackNo=zxr10HardwareEnvironAlarmRackNo, zxr10UnitPidCalledTimes=zxr10UnitPidCalledTimes, zxr10RouterR10_2881_DCSysID=zxr10RouterR10_2881_DCSysID, zxr10RouterR10_1811_DCSysID=zxr10RouterR10_1811_DCSysID, zxr10StatisticsAlarmSaveTotaltimes=zxr10StatisticsAlarmSaveTotaltimes, zxr10UnitPidTimerNamedUsed=zxr10UnitPidTimerNamedUsed, zxr10PortAvailStatus=zxr10PortAvailStatus, zxr10RouterR10_1843_DCSysID=zxr10RouterR10_1843_DCSysID, zxr10HardwarePortAlarmShelfNo=zxr10HardwarePortAlarmShelfNo, zxr10SystemID=zxr10SystemID, zxr10HardwarePortAlarmType=zxr10HardwarePortAlarmType, zxr10Switch5252ASysID=zxr10Switch5252ASysID, zxr10RouterR10_3884_ACSysID=zxr10RouterR10_3884_ACSysID)
mibBuilder.exportSymbols("ZXR10-MIB", zxr10RouterR10_1841_DCSysID=zxr10RouterR10_1841_DCSysID, zxr10Switch3928E_FISysID=zxr10Switch3928E_FISysID, zxr10RackAttrib=zxr10RackAttrib, UnitRunStatus=UnitRunStatus, zxr10HardwarePortAlarmPortNo=zxr10HardwarePortAlarmPortNo, zxr10HardwareAlarmCode=zxr10HardwareAlarmCode, zxr10StatisticsAlarmTime=zxr10StatisticsAlarmTime, zxr10HardwareAlarmSlotNo=zxr10HardwareAlarmSlotNo, zxr10RouterR10_2824_DCSysID=zxr10RouterR10_2824_DCSysID, zxr10RouterR10_1812E_ACSysID=zxr10RouterR10_1812E_ACSysID, zxr10UnitPidSynQuenSendTimeouts=zxr10UnitPidSynQuenSendTimeouts, zxr10HardwareAlarmVariableValue=zxr10HardwareAlarmVariableValue, zxr10SwitchT64GSysID=zxr10SwitchT64GSysID, zxr10_objectID=zxr10_objectID, zxr10portTable=zxr10portTable, zxr10RouterR10_2822_ACSysID=zxr10RouterR10_2822_ACSysID, zxr10UnitPidStackSize=zxr10UnitPidStackSize, zxr10Switch5228SysID=zxr10Switch5228SysID, zxr10StatisticsAlarmSaveCode=zxr10StatisticsAlarmSaveCode, zxr10RouterR10_2823_DCSysID=zxr10RouterR10_2823_DCSysID, zxr10HardwareAlarmValueRisingThreshold=zxr10HardwareAlarmValueRisingThreshold, zxr10HardwareEnvironAlarmCode=zxr10HardwareEnvironAlarmCode, zxr10HardwarePortAlarmCode=zxr10HardwarePortAlarmCode, zxr10Switch3952ESysID=zxr10Switch3952ESysID, zxr10RouterR10_3844_ACSysID=zxr10RouterR10_3844_ACSysID, zxr10SoftProtocolAlarmRackNo=zxr10SoftProtocolAlarmRackNo, zxr10PortWorkingType=zxr10PortWorkingType, zxr10_statistics=zxr10_statistics, zxr10UnitPidEntry=zxr10UnitPidEntry, zxr10Switch3228ASysID=zxr10Switch3228ASysID, zxr10HardwareAlarmDescrip=zxr10HardwareAlarmDescrip, zxr10StatisticsAlarmRackNo=zxr10StatisticsAlarmRackNo, ShelfAttrib=ShelfAttrib, zxr10UnitNo=zxr10UnitNo, zxr10SoftProtocolAlarmShelfNo=zxr10SoftProtocolAlarmShelfNo, zxr10StatisticsAlarmSaveLevel=zxr10StatisticsAlarmSaveLevel, zxr10RouterR10_3883_DCSysID=zxr10RouterR10_3883_DCSysID, zxr10RouterR10_3842_DCSysID=zxr10RouterR10_3842_DCSysID, zxr10RouterR10_2821_ACSysID=zxr10RouterR10_2821_ACSysID, zxr10UnitrcvByteGigas=zxr10UnitrcvByteGigas, zxr10UnitPidTimerUnnamedUsed=zxr10UnitPidTimerUnnamedUsed, zxr10HardwareAlarmTrap=zxr10HardwareAlarmTrap, zxr10RouterR10_2884_DCSysID=zxr10RouterR10_2884_DCSysID, zxr10RouterR10_2883_DCSysID=zxr10RouterR10_2883_DCSysID, zxr10SystemCpuUtility30s=zxr10SystemCpuUtility30s, zxr10RouterGAR_3608SysID=zxr10RouterGAR_3608SysID, zxr10HardwarePortAlarmLevel=zxr10HardwarePortAlarmLevel, zxr10Switch5928FSysID=zxr10Switch5928FSysID, zxr10Switch3928AFISysID=zxr10Switch3928AFISysID, zxr10RouterR10_2883_ACSysID=zxr10RouterR10_2883_ACSysID, zxr10RouterR10_2841_ACSysID=zxr10RouterR10_2841_ACSysID, MasterStatus=MasterStatus, zxr10HardwarePortAlarmStatus=zxr10HardwarePortAlarmStatus, zxr10RackNo=zxr10RackNo, zxr10SystemUnitIndex=zxr10SystemUnitIndex, zxr10SoftProtocolAlarmTrapEntry=zxr10SoftProtocolAlarmTrapEntry, zxr10SlotNPCType=zxr10SlotNPCType, zxr10HardwareAlarmShelfNo=zxr10HardwareAlarmShelfNo, zxr10Switch_8912SysID=zxr10Switch_8912SysID, BoolStatus=BoolStatus, zxr10UnitsndBytes=zxr10UnitsndBytes, zxr10RouterR10_2823_ACSysID=zxr10RouterR10_2823_ACSysID, zxr10SlotPortsNumber=zxr10SlotPortsNumber, zxr10HardwarePortAlarmEntry=zxr10HardwarePortAlarmEntry, zxr10RouterR10_3842_ACSysID=zxr10RouterR10_3842_ACSysID, zxr10HardwareAlarmTime=zxr10HardwareAlarmTime, zxr10Switch3952SysID=zxr10Switch3952SysID, zxr10RouterR10_1812_DCSysID=zxr10RouterR10_1812_DCSysID, zxr10Switch5252SysID=zxr10Switch5252SysID, zxr10HardwareEnvironAlarmSlotNo=zxr10HardwareEnvironAlarmSlotNo, zxr10RouterR10_3884_DCSysID=zxr10RouterR10_3884_DCSysID, zxr10HardwareAlarmTrapEntry=zxr10HardwareAlarmTrapEntry, zxr10PortNo=zxr10PortNo, zxr10Switch3928A_PSSysID=zxr10Switch3928A_PSSysID, zxr10HardwarePortAlarmTime=zxr10HardwarePortAlarmTime, zxr10RouterR10_2844_ACSysID=zxr10RouterR10_2844_ACSysID, zxr10Switch3928ASysID=zxr10Switch3928ASysID, zxr10RouterR10_1812E_DCSysID=zxr10RouterR10_1812E_DCSysID, zxr10RouterR10_3823_ACSysID=zxr10RouterR10_3823_ACSysID, zxr10SoftProtocolAlarmSaveTotaltimes=zxr10SoftProtocolAlarmSaveTotaltimes, zxr10rackTable=zxr10rackTable, ProductID=ProductID, zxr10SystemUnitPidNum=zxr10SystemUnitPidNum, zxr10RouterT1200SysID=zxr10RouterT1200SysID, zxr10RouterR10_2884_ACSysID=zxr10RouterR10_2884_ACSysID, zxr10StatisticsAlarmEntry=zxr10StatisticsAlarmEntry, zxr10UnitPidNo=zxr10UnitPidNo, zxr10RouterR10_3843_ACSysID=zxr10RouterR10_3843_ACSysID, zxr10SlaveQDRSRAMSize=zxr10SlaveQDRSRAMSize, NpcType=NpcType, zxr10StatisticsAlarmType=zxr10StatisticsAlarmType, zxr10UnitPidSynQuenMsgMax=zxr10UnitPidSynQuenMsgMax)
