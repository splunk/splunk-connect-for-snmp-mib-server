#
# PySNMP MIB module ESWITCH-MIB-V3-0 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ESWITCH-MIB-V3-0
# Produced by pysmi-0.3.4 at Mon Apr 29 18:52:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, TimeTicks, ModuleIdentity, Counter32, Integer32, ObjectIdentity, Unsigned32, IpAddress, MibIdentifier, Counter64, iso, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "TimeTicks", "ModuleIdentity", "Counter32", "Integer32", "ObjectIdentity", "Unsigned32", "IpAddress", "MibIdentifier", "Counter64", "iso", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
dec = MibIdentifier((1, 3, 6, 1, 4, 1, 36))
ema = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2))
decMIBextension = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18))
decHub900 = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11))
eSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7))
eSwitchIf = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 1))
eSwitchIfTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 1, 1), )
if mibBuilder.loadTexts: eSwitchIfTable.setStatus('mandatory')
eSwitchIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 1, 1, 1), ).setIndexNames((0, "ESWITCH-MIB-V3-0", "eSwitchIfIndex"))
if mibBuilder.loadTexts: eSwitchIfEntry.setStatus('mandatory')
eSwitchIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchIfIndex.setStatus('mandatory')
eSwitchIfPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("present", 1), ("not-present", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchIfPresent.setStatus('mandatory')
eSwitchPort = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 2))
eSwitchPortTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 2, 1), )
if mibBuilder.loadTexts: eSwitchPortTable.setStatus('mandatory')
eSwitchPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 2, 1, 1), ).setIndexNames((0, "ESWITCH-MIB-V3-0", "eSwitchPortIndex"))
if mibBuilder.loadTexts: eSwitchPortEntry.setStatus('mandatory')
eSwitchPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchPortIndex.setStatus('mandatory')
eSwitchPortFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("failed", 2), ("not-failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchPortFailed.setStatus('mandatory')
eSwitchPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("undefined", 1), ("connected", 2), ("disconnected", 3), ("shutdown", 4), ("isolated", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eSwitchPortStatus.setStatus('mandatory')
eSwitchPortShutDownReason = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("other", 2), ("mgmt", 3), ("security", 4), ("internal", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchPortShutDownReason.setStatus('mandatory')
eSwitchPortSwitchingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("standard", 1), ("workgroup", 2), ("backbone", 3), ("manual", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eSwitchPortSwitchingMode.setStatus('mandatory')
eSwitchFdb = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 3))
eSwitchAddrFdb = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 3, 1))
eSwitchAddrFdbMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchAddrFdbMaxEntries.setStatus('mandatory')
eSwitchAddrFdbMaxStaticEntries = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchAddrFdbMaxStaticEntries.setStatus('mandatory')
eSwitchAddrFdbMaxNVStaticEntries = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchAddrFdbMaxNVStaticEntries.setStatus('mandatory')
eSwitchAddrFdbDynamicEntries = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchAddrFdbDynamicEntries.setStatus('mandatory')
eSwitchAddrFdbStaticEntries = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchAddrFdbStaticEntries.setStatus('mandatory')
eSwitchAddrFdbNVStaticEntries = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchAddrFdbNVStaticEntries.setStatus('mandatory')
eSwitchAddrFdbPurgeStaticEntries = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("purge", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eSwitchAddrFdbPurgeStaticEntries.setStatus('mandatory')
eSwitchStorm = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 4))
eSwitchStormFrameTypeRegulated = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("broadcast", 2), ("multicast", 3), ("broadcastAndMulticast", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eSwitchStormFrameTypeRegulated.setStatus('mandatory')
eSwitchStormPollingInterval = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 360000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eSwitchStormPollingInterval.setStatus('mandatory')
eSwitchStormRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eSwitchStormRateLimit.setStatus('mandatory')
eSwitchStormControlAction = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("frame-suppression", 1), ("port-isolation", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eSwitchStormControlAction.setStatus('mandatory')
eSwitchStormResumptionPolicy = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("continue-control", 1), ("auto-interval", 2), ("rate-limit", 3), ("responsive-rate-limit", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eSwitchStormResumptionPolicy.setStatus('mandatory')
eSwitchStormAutoInterval = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 4, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eSwitchStormAutoInterval.setStatus('mandatory')
eSwitchStormFramesLost = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchStormFramesLost.setStatus('mandatory')
eSwitchStormActionsInitiated = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 4, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchStormActionsInitiated.setStatus('mandatory')
eSwitchStormPortTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 4, 9), )
if mibBuilder.loadTexts: eSwitchStormPortTable.setStatus('mandatory')
eSwitchStormPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 4, 9, 1), ).setIndexNames((0, "ESWITCH-MIB-V3-0", "eSwitchStormPortIndex"))
if mibBuilder.loadTexts: eSwitchStormPortEntry.setStatus('mandatory')
eSwitchStormPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 4, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchStormPortIndex.setStatus('mandatory')
eSwitchStormPortControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 4, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchStormPortControlStatus.setStatus('mandatory')
eSwitchStormPortFramesLost = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 4, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchStormPortFramesLost.setStatus('mandatory')
eSwitchStormPortActionsInitiated = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 4, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchStormPortActionsInitiated.setStatus('mandatory')
eSwitchSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5))
eSwitchSecurityViolationsDetected = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchSecurityViolationsDetected.setStatus('mandatory')
eSwitchSecurityPortTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 2), )
if mibBuilder.loadTexts: eSwitchSecurityPortTable.setStatus('mandatory')
eSwitchSecurityPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 2, 1), ).setIndexNames((0, "ESWITCH-MIB-V3-0", "eSwitchSecurityPortIndex"))
if mibBuilder.loadTexts: eSwitchSecurityPortEntry.setStatus('mandatory')
eSwitchSecurityPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchSecurityPortIndex.setStatus('mandatory')
eSwitchSecurityPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("manual-authorize", 2), ("auto-authorize", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eSwitchSecurityPortMode.setStatus('mandatory')
eSwitchSecurityPortViolationsDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchSecurityPortViolationsDetected.setStatus('mandatory')
eSwitchSecurityPortViolationResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("filter", 1), ("filter-and-log", 2), ("shutdown-and-log", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eSwitchSecurityPortViolationResponse.setStatus('mandatory')
eSwitchSecurityPortMaxAuthAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchSecurityPortMaxAuthAddr.setStatus('mandatory')
eSwitchSecurityPortMaxAutoAuthAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eSwitchSecurityPortMaxAutoAuthAddr.setStatus('mandatory')
eSwitchSecurityPortCurrAuthAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchSecurityPortCurrAuthAddr.setStatus('mandatory')
eSwitchSecurityPortPurgeAuthAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("trigger", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eSwitchSecurityPortPurgeAuthAddr.setStatus('mandatory')
eSwitchSecurityAuthTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 3), )
if mibBuilder.loadTexts: eSwitchSecurityAuthTable.setStatus('mandatory')
eSwitchSecurityAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 3, 1), ).setIndexNames((0, "ESWITCH-MIB-V3-0", "eSwitchSecurityAuthPort"), (0, "ESWITCH-MIB-V3-0", "eSwitchSecurityAuthAddress"))
if mibBuilder.loadTexts: eSwitchSecurityAuthEntry.setStatus('mandatory')
eSwitchSecurityAuthPort = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eSwitchSecurityAuthPort.setStatus('mandatory')
eSwitchSecurityAuthAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eSwitchSecurityAuthAddress.setStatus('mandatory')
eSwitchSecurityAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("invalid", 1), ("active", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eSwitchSecurityAuthStatus.setStatus('mandatory')
eSwitchSecurityLog = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 4))
eSwitchSecurityLogMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchSecurityLogMaxEntries.setStatus('mandatory')
eSwitchSecurityLogTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 4, 2), )
if mibBuilder.loadTexts: eSwitchSecurityLogTable.setStatus('mandatory')
eSwitchSecurityLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 4, 2, 1), ).setIndexNames((0, "ESWITCH-MIB-V3-0", "eSwitchSecurityLogIndex"))
if mibBuilder.loadTexts: eSwitchSecurityLogEntry.setStatus('mandatory')
eSwitchSecurityLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchSecurityLogIndex.setStatus('mandatory')
eSwitchSecurityLogPort = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchSecurityLogPort.setStatus('mandatory')
eSwitchSecurityLogAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 4, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchSecurityLogAddress.setStatus('mandatory')
eSwitchSecurityLogResetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchSecurityLogResetNumber.setStatus('mandatory')
eSwitchSecurityLogTime = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 11, 7, 5, 4, 2, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eSwitchSecurityLogTime.setStatus('mandatory')
mibBuilder.exportSymbols("ESWITCH-MIB-V3-0", eSwitchAddrFdbStaticEntries=eSwitchAddrFdbStaticEntries, eSwitchAddrFdbMaxNVStaticEntries=eSwitchAddrFdbMaxNVStaticEntries, eSwitchSecurityAuthPort=eSwitchSecurityAuthPort, decMIBextension=decMIBextension, eSwitchSecurityPortMaxAuthAddr=eSwitchSecurityPortMaxAuthAddr, eSwitchStormPortEntry=eSwitchStormPortEntry, eSwitchStormResumptionPolicy=eSwitchStormResumptionPolicy, eSwitchIfTable=eSwitchIfTable, dec=dec, eSwitchSecurityAuthTable=eSwitchSecurityAuthTable, eSwitchSecurityLogIndex=eSwitchSecurityLogIndex, eSwitchSecurityLogTime=eSwitchSecurityLogTime, eSwitchSecurityLogEntry=eSwitchSecurityLogEntry, eSwitchStormActionsInitiated=eSwitchStormActionsInitiated, eSwitchStormAutoInterval=eSwitchStormAutoInterval, eSwitchSecurityPortEntry=eSwitchSecurityPortEntry, eSwitchSecurityPortViolationsDetected=eSwitchSecurityPortViolationsDetected, eSwitchSecurityLogMaxEntries=eSwitchSecurityLogMaxEntries, eSwitchSecurityLogPort=eSwitchSecurityLogPort, eSwitchStormPortControlStatus=eSwitchStormPortControlStatus, eSwitchSecurityAuthAddress=eSwitchSecurityAuthAddress, eSwitchPortTable=eSwitchPortTable, eSwitchSecurityPortIndex=eSwitchSecurityPortIndex, eSwitchSecurityPortPurgeAuthAddr=eSwitchSecurityPortPurgeAuthAddr, eSwitchSecurityLogTable=eSwitchSecurityLogTable, eSwitchSecurityPortTable=eSwitchSecurityPortTable, eSwitchIfPresent=eSwitchIfPresent, eSwitchIf=eSwitchIf, eSwitchSecurityPortMode=eSwitchSecurityPortMode, eSwitchSecurityPortMaxAutoAuthAddr=eSwitchSecurityPortMaxAutoAuthAddr, eSwitchPortShutDownReason=eSwitchPortShutDownReason, eSwitchSecurityViolationsDetected=eSwitchSecurityViolationsDetected, eSwitchPortStatus=eSwitchPortStatus, eSwitchPortIndex=eSwitchPortIndex, eSwitchStormPollingInterval=eSwitchStormPollingInterval, eSwitchStormPortTable=eSwitchStormPortTable, eSwitchStormPortActionsInitiated=eSwitchStormPortActionsInitiated, eSwitchPortFailed=eSwitchPortFailed, eSwitchPortEntry=eSwitchPortEntry, eSwitchStormControlAction=eSwitchStormControlAction, eSwitchAddrFdb=eSwitchAddrFdb, eSwitchStormPortFramesLost=eSwitchStormPortFramesLost, eSwitchFdb=eSwitchFdb, eSwitchIfEntry=eSwitchIfEntry, eSwitchStorm=eSwitchStorm, eSwitchIfIndex=eSwitchIfIndex, eSwitchPort=eSwitchPort, decHub900=decHub900, eSwitchAddrFdbMaxEntries=eSwitchAddrFdbMaxEntries, eSwitchPortSwitchingMode=eSwitchPortSwitchingMode, eSwitchStormFramesLost=eSwitchStormFramesLost, eSwitchStormPortIndex=eSwitchStormPortIndex, eSwitchAddrFdbDynamicEntries=eSwitchAddrFdbDynamicEntries, eSwitchAddrFdbMaxStaticEntries=eSwitchAddrFdbMaxStaticEntries, eSwitchStormFrameTypeRegulated=eSwitchStormFrameTypeRegulated, eSwitchSecurityAuthEntry=eSwitchSecurityAuthEntry, eSwitchSecurityAuthStatus=eSwitchSecurityAuthStatus, eSwitchSecurityLogResetNumber=eSwitchSecurityLogResetNumber, eSwitchSecurityPortViolationResponse=eSwitchSecurityPortViolationResponse, eSwitch=eSwitch, eSwitchSecurityPortCurrAuthAddr=eSwitchSecurityPortCurrAuthAddr, eSwitchAddrFdbPurgeStaticEntries=eSwitchAddrFdbPurgeStaticEntries, eSwitchAddrFdbNVStaticEntries=eSwitchAddrFdbNVStaticEntries, eSwitchSecurityLogAddress=eSwitchSecurityLogAddress, eSwitchSecurityLog=eSwitchSecurityLog, ema=ema, eSwitchSecurity=eSwitchSecurity, eSwitchStormRateLimit=eSwitchStormRateLimit)
