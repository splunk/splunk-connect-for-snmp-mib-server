#
# PySNMP MIB module CORE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CORE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:11:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress, MibIdentifier, Integer32, Counter32, TimeTicks, NotificationType, Bits, Counter64, enterprises, ModuleIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress", "MibIdentifier", "Integer32", "Counter32", "TimeTicks", "NotificationType", "Bits", "Counter64", "enterprises", "ModuleIdentity", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class LedColor(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("none", 1), ("green", 2), ("black", 3), ("yellow", 4), ("red", 5), ("white", 6), ("blue", 7), ("magenta", 8), ("grey", 9))

class RingId(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("undefined", 1), ("a", 2), ("b", 3))

class AdminStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("undefined", 1), ("disabled", 2), ("enabled", 3))

class LinkStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("undefined", 1), ("linkOff", 2), ("linkOn", 3))

class FlowControlStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("undefined", 1), ("flowControlOff", 2), ("flowControlOn", 3))

nbase = MibIdentifier((1, 3, 6, 1, 4, 1, 629))
nbSwitchG1 = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1))
nbSwitchG1Il = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50))
core = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 9))
coreInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 1))
coreSlotsMaxNumber = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coreSlotsMaxNumber.setStatus('mandatory')
coreChannelsMaxNumber = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coreChannelsMaxNumber.setStatus('mandatory')
coreRingsMaxNumber = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coreRingsMaxNumber.setStatus('mandatory')
coreSlotsActNumber = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coreSlotsActNumber.setStatus('mandatory')
coreRingsActNumber = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coreRingsActNumber.setStatus('mandatory')
coreSlotsTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 2), )
if mibBuilder.loadTexts: coreSlotsTable.setStatus('mandatory')
coreSlotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 2, 1), ).setIndexNames((0, "CORE-MIB", "coreSlotPosition"))
if mibBuilder.loadTexts: coreSlotEntry.setStatus('mandatory')
coreSlotPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coreSlotPosition.setStatus('mandatory')
coreSlotType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 9, 11, 12, 13, 14, 20, 30, 40, 50))).clone(namedValues=NamedValues(("empty", 1), ("cooper20", 2), ("mCoreAgent", 9), ("mCore1Wdm1", 11), ("mCore1Wdm2", 12), ("mCore1Wdm3", 13), ("mCore1Wdm4", 14), ("mCore4Wdm", 20), ("mCore4Giga", 30), ("mEdge2Giga", 40), ("mEdge2Wdm", 50)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coreSlotType.setStatus('mandatory')
coreSlotPortsNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coreSlotPortsNumber.setStatus('mandatory')
corePortTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3), )
if mibBuilder.loadTexts: corePortTable.setStatus('mandatory')
corePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1), ).setIndexNames((0, "CORE-MIB", "coreSlotNumber"), (0, "CORE-MIB", "corePortNumber"))
if mibBuilder.loadTexts: corePortEntry.setStatus('mandatory')
coreSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coreSlotNumber.setStatus('mandatory')
corePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortNumber.setStatus('mandatory')
corePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undefined", 1), ("coreGigaBit", 2), ("coreWDM", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortType.setStatus('mandatory')
corePortRingId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 4), RingId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortRingId.setStatus('mandatory')
corePortFirstChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortFirstChannel.setStatus('mandatory')
corePortLastChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortLastChannel.setStatus('mandatory')
corePortLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 7), LinkStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortLinkStatus.setStatus('mandatory')
corePortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 8), AdminStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: corePortAdminStatus.setStatus('mandatory')
corePortRingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nonRing", 1), ("internal", 2), ("external", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortRingStatus.setStatus('mandatory')
corePortFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 10), FlowControlStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: corePortFlowControl.setStatus('mandatory')
corePortDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("half", 1), ("full", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: corePortDuplex.setStatus('mandatory')
corePortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortSpeed.setStatus('mandatory')
corePortGoodByteRx = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortGoodByteRx.setStatus('mandatory')
corePortByteTx = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortByteTx.setStatus('mandatory')
corePortGoodFrameRx = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortGoodFrameRx.setStatus('mandatory')
corePortFrameTx = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortFrameTx.setStatus('mandatory')
corePortTotalByteRx = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortTotalByteRx.setStatus('mandatory')
corePortTotalFrameRx = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortTotalFrameRx.setStatus('mandatory')
corePortBcstFrameRx = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortBcstFrameRx.setStatus('mandatory')
corePortMcstFrameRx = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortMcstFrameRx.setStatus('mandatory')
corePortCRCError = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortCRCError.setStatus('mandatory')
corePortOversize = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortOversize.setStatus('mandatory')
corePortFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortFragment.setStatus('mandatory')
corePortJabber = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortJabber.setStatus('mandatory')
corePortCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortCollision.setStatus('mandatory')
corePortLateCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortLateCollision.setStatus('mandatory')
corePortFr64 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortFr64.setStatus('mandatory')
corePortFr64to127 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortFr64to127.setStatus('mandatory')
corePortFr128to255 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortFr128to255.setStatus('mandatory')
corePortFr256to511 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortFr256to511.setStatus('mandatory')
corePortFr512to1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortFr512to1023.setStatus('mandatory')
corePortFr1024to1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortFr1024to1023.setStatus('mandatory')
corePortFr1023toMAX = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortFr1023toMAX.setStatus('mandatory')
corePortDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortDropped.setStatus('mandatory')
corePortMcstFrameTx = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortMcstFrameTx.setStatus('mandatory')
corePortBcstFrameTx = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortBcstFrameTx.setStatus('mandatory')
corePortUndersize = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 3, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: corePortUndersize.setStatus('mandatory')
coreChannelTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 4), )
if mibBuilder.loadTexts: coreChannelTable.setStatus('mandatory')
coreChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 4, 1), ).setIndexNames((0, "CORE-MIB", "coreChannelRingId"), (0, "CORE-MIB", "coreChannelNumber"))
if mibBuilder.loadTexts: coreChannelEntry.setStatus('mandatory')
coreChannelRingId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 4, 1, 1), RingId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coreChannelRingId.setStatus('mandatory')
coreChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coreChannelNumber.setStatus('mandatory')
coreChannelTxPwr = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 4, 1, 3), LedColor()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coreChannelTxPwr.setStatus('mandatory')
coreChannelTxWave = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 4, 1, 4), LedColor()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coreChannelTxWave.setStatus('mandatory')
coreChannelRxPwr = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 4, 1, 5), LedColor()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coreChannelRxPwr.setStatus('mandatory')
coreChannelRxLink = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 9, 4, 1, 6), LedColor()).setMaxAccess("readonly")
if mibBuilder.loadTexts: coreChannelRxLink.setStatus('mandatory')
mibBuilder.exportSymbols("CORE-MIB", coreChannelNumber=coreChannelNumber, corePortFr512to1023=corePortFr512to1023, corePortOversize=corePortOversize, corePortDropped=corePortDropped, coreChannelRingId=coreChannelRingId, corePortGoodByteRx=corePortGoodByteRx, corePortFr1024to1023=corePortFr1024to1023, coreSlotEntry=coreSlotEntry, corePortUndersize=corePortUndersize, nbase=nbase, coreRingsActNumber=coreRingsActNumber, LedColor=LedColor, corePortLastChannel=corePortLastChannel, corePortMcstFrameRx=corePortMcstFrameRx, coreSlotsActNumber=coreSlotsActNumber, corePortFr256to511=corePortFr256to511, coreInfo=coreInfo, corePortTotalByteRx=corePortTotalByteRx, corePortFirstChannel=corePortFirstChannel, corePortFr64to127=corePortFr64to127, corePortFr128to255=corePortFr128to255, corePortEntry=corePortEntry, corePortNumber=corePortNumber, corePortMcstFrameTx=corePortMcstFrameTx, corePortGoodFrameRx=corePortGoodFrameRx, coreChannelEntry=coreChannelEntry, coreChannelsMaxNumber=coreChannelsMaxNumber, corePortBcstFrameTx=corePortBcstFrameTx, corePortJabber=corePortJabber, corePortFlowControl=corePortFlowControl, corePortBcstFrameRx=corePortBcstFrameRx, coreRingsMaxNumber=coreRingsMaxNumber, corePortCollision=corePortCollision, coreSlotPosition=coreSlotPosition, corePortFr64=corePortFr64, corePortType=corePortType, coreSlotType=coreSlotType, corePortRingStatus=corePortRingStatus, coreChannelRxPwr=coreChannelRxPwr, coreSlotPortsNumber=coreSlotPortsNumber, corePortRingId=corePortRingId, LinkStatus=LinkStatus, coreChannelTxPwr=coreChannelTxPwr, coreChannelTable=coreChannelTable, corePortLateCollision=corePortLateCollision, coreSlotsMaxNumber=coreSlotsMaxNumber, core=core, corePortTable=corePortTable, corePortByteTx=corePortByteTx, corePortFrameTx=corePortFrameTx, RingId=RingId, coreChannelRxLink=coreChannelRxLink, corePortFr1023toMAX=corePortFr1023toMAX, coreSlotsTable=coreSlotsTable, coreChannelTxWave=coreChannelTxWave, corePortTotalFrameRx=corePortTotalFrameRx, corePortSpeed=corePortSpeed, nbSwitchG1=nbSwitchG1, corePortAdminStatus=corePortAdminStatus, FlowControlStatus=FlowControlStatus, corePortDuplex=corePortDuplex, corePortCRCError=corePortCRCError, corePortFragment=corePortFragment, corePortLinkStatus=corePortLinkStatus, nbSwitchG1Il=nbSwitchG1Il, coreSlotNumber=coreSlotNumber, AdminStatus=AdminStatus)
