#
# PySNMP MIB module ISDN-OPT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ISDN-OPT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:46:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, ObjectIdentity, Counter32, ModuleIdentity, Bits, enterprises, Counter64, NotificationType, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, IpAddress, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ObjectIdentity", "Counter32", "ModuleIdentity", "Bits", "enterprises", "Counter64", "NotificationType", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "IpAddress", "iso", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
codex = MibIdentifier((1, 3, 6, 1, 4, 1, 449))
cdxProductSpecific = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2))
cdx6500 = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1))
cdx6500Configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2))
cdx6500CfgGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2))
isgIsdnCfgGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19))
cdx6500Statistics = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3))
cdx6500StatOtherStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2))
isgIsdnStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9))
cdx6500Controls = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 4))
isgIsdnCtrlGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 4, 8))
class DisplayString(OctetString):
    pass

isgVGIsdnCfgChanTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1), )
if mibBuilder.loadTexts: isgVGIsdnCfgChanTable.setStatus('mandatory')
isgVGIsdnCfgChanTableEntry = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1), ).setIndexNames((0, "ISDN-OPT-MIB", "isgVGIsdnCfgEntryNum"))
if mibBuilder.loadTexts: isgVGIsdnCfgChanTableEntry.setStatus('mandatory')
isgVGIsdnCfgEntryNum = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCfgEntryNum.setStatus('mandatory')
isgVGIsdnCfgChanType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("isdnNone", 1), ("isdnD", 2), ("isdnB1", 3), ("isdnB2", 4), ("isdn2B", 5), ("isdnB", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCfgChanType.setStatus('mandatory')
isgVGIsdnCfgDChanPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 5, 100))).clone(namedValues=NamedValues(("dchanzero", 1), ("dchanone", 2), ("dchanfour", 5), ("nc", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgDChanPort.setStatus('mandatory')
isgVGIsdnCfgSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 6, 8, 9, 11, 13, 14, 15))).clone(namedValues=NamedValues(("bri1tr6Stype", 2), ("bri5essStype", 3), ("briDms100Stype", 6), ("briKddStype", 8), ("briEtsiStype", 9), ("briNi1Stype", 11), ("briNttStype", 13), ("briTs013Stype", 14), ("briVnStype", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgSwitchType.setStatus('mandatory')
isgVGIsdnCfgDChanTEI = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgDChanTEI.setStatus('mandatory')
isgVGIsdnCfgDPckTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgDPckTraffic.setStatus('mandatory')
isgVGIsdnCfgDChanDN = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgDChanDN.setStatus('mandatory')
isgVGIsdnCfgDSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgDSPID.setStatus('mandatory')
isgVGIsdnCfgFirstBChanPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstBChanPort.setStatus('mandatory')
isgVGIsdnCfgFirstAccType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("perm", 1), ("cmd", 2), ("pmd", 3), ("cvl", 4), ("dov", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstAccType.setStatus('mandatory')
isgVGIsdnCfgFirstCallDisablSTm = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstCallDisablSTm.setStatus('mandatory')
isgVGIsdnCfgFirstCallEnablSTm = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstCallEnablSTm.setStatus('mandatory')
isgVGIsdnCfgFirstSPBU = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstSPBU.setStatus('mandatory')
isgVGIsdnCfgFirstSPBUOpt = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstSPBUOpt.setStatus('mandatory')
isgVGIsdnCfgFirstSPBUTmOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 240))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstSPBUTmOut.setStatus('mandatory')
isgVGIsdnCfgFirstRate = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("rate64k", 1), ("rate128k", 2), ("rate56k", 3), ("rate112k", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstRate.setStatus('mandatory')
isgVGIsdnCfgFirstTEI = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstTEI.setStatus('mandatory')
isgVGIsdnCfgFirstSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstSPID.setStatus('mandatory')
isgVGIsdnCfgFirstDN = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstDN.setStatus('mandatory')
isgVGIsdnCfgFirstSubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstSubAddr.setStatus('mandatory')
isgVGIsdnCfgFirstOutDialNum1 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 21), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstOutDialNum1.setStatus('mandatory')
isgVGIsdnCfgFirstOutDialNum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 22), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstOutDialNum2.setStatus('mandatory')
isgVGIsdnCfgFirstDialRetryIntrvl = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstDialRetryIntrvl.setStatus('mandatory')
isgVGIsdnCfgFirstNumCallRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstNumCallRetries.setStatus('mandatory')
isgVGIsdnCfgSecondChanPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondChanPort.setStatus('mandatory')
isgVGIsdnCfgSecondAccType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("perm", 1), ("cmd", 2), ("pmd", 3), ("cvl", 4), ("dov", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondAccType.setStatus('mandatory')
isgVGIsdnCfgSecondCallDisablSTm = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondCallDisablSTm.setStatus('mandatory')
isgVGIsdnCfgSecondCallEnablSTm = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondCallEnablSTm.setStatus('mandatory')
isgVGIsdnCfgSecondSPBU = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondSPBU.setStatus('mandatory')
isgVGIsdnCfgSecondSPBUOpt = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondSPBUOpt.setStatus('mandatory')
isgVGIsdnCfgSecondSPBUTmOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 240))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondSPBUTmOut.setStatus('mandatory')
isgVGIsdnCfgSecondRate = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("rate64k", 1), ("rate56k", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondRate.setStatus('mandatory')
isgVGIsdnCfgSecondTEI = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondTEI.setStatus('mandatory')
isgVGIsdnCfgSecondSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondSPID.setStatus('mandatory')
isgVGIsdnCfgSecondDN = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondDN.setStatus('mandatory')
isgVGIsdnCfgSecondSubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondSubAddr.setStatus('mandatory')
isgVGIsdnCfgSecondOutDialNum1 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 37), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondOutDialNum1.setStatus('mandatory')
isgVGIsdnCfgSecondOutDialNum2 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondOutDialNum2.setStatus('mandatory')
isgVGIsdnCfgSecondDialRetryIntrvl = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 39), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondDialRetryIntrvl.setStatus('mandatory')
isgVGIsdnCfgSecondNumCallRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondNumCallRetries.setStatus('mandatory')
isgVGIsdnCfgFirstPlainOldTelSet = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 41), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstPlainOldTelSet.setStatus('mandatory')
isgVGIsdnCfgFirstCallPerm = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 42), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstCallPerm.setStatus('mandatory')
isgVGIsdnCfgFirstChSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("preferred", 1), ("exclusive", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgFirstChSelect.setStatus('mandatory')
isgVGIsdnCfgSecondPlainOldTelSet = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondPlainOldTelSet.setStatus('mandatory')
isgVGIsdnCfgSecondCallPerm = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 45), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondCallPerm.setStatus('mandatory')
isgVGIsdnCfgSecondChSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 2, 19, 1, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("preferred", 1), ("exclusive", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isgVGIsdnCfgSecondChSelect.setStatus('mandatory')
isgVGIsdnStats = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1))
isgVGIsdnCCStatsTbl = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1), )
if mibBuilder.loadTexts: isgVGIsdnCCStatsTbl.setStatus('mandatory')
isgVGIsdnCCStatsTblEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1), ).setIndexNames((0, "ISDN-OPT-MIB", "isgVGIsdnCCStatsDSLNum"), (0, "ISDN-OPT-MIB", "isgVGIsdnCCStatsChType"))
if mibBuilder.loadTexts: isgVGIsdnCCStatsTblEntry.setStatus('mandatory')
isgVGIsdnCCStatsDSLNum = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCCStatsDSLNum.setStatus('mandatory')
isgVGIsdnCCStatsChType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dChannel", 1), ("b1Channel", 2), ("b2Channel", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCCStatsChType.setStatus('mandatory')
isgVGIsdnCCStatsSwtchType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 6, 8, 9, 11, 13, 14, 15, 16))).clone(namedValues=NamedValues(("bri1tr6Stype", 2), ("bri5essStype", 3), ("briDms100Stype", 6), ("briKddStype", 8), ("briEtsiStype", 9), ("briNi1Stype", 11), ("briNttStype", 13), ("briTs013Stype", 14), ("briVnStype", 15), ("unsupported", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCCStatsSwtchType.setStatus('mandatory')
isgVGIsdnCCStatsL1State = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("l1Setup", 1), ("l1Active", 2), ("l1Deactive", 3), ("l1B1Loop", 4), ("l1B2Loop", 5), ("l1B1B2Loop", 6), ("l12BDLoop", 7), ("unknown", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCCStatsL1State.setStatus('mandatory')
isgVGIsdnCCStatsTEI = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCCStatsTEI.setStatus('mandatory')
isgVGIsdnCCStatsCallgAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCCStatsCallgAddr.setStatus('mandatory')
isgVGIsdnCCStatsCalldAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCCStatsCalldAddr.setStatus('mandatory')
isgVGIsdnCCStatsSubaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 21))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCCStatsSubaddr.setStatus('mandatory')
isgVGIsdnCCStatsDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noCall", 1), ("outgoing", 2), ("incoming", 3), ("collision", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCCStatsDirection.setStatus('mandatory')
isgVGIsdnCCStatsAccType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("permanent", 1), ("cktMode", 2), ("pktMode", 3), ("cvl", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCCStatsAccType.setStatus('mandatory')
isgVGIsdnCCStatsCallStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("waitInit", 1), ("initFail", 2), ("termIdle", 3), ("callInit", 4), ("discSent", 5), ("hostProc", 6), ("callConn", 7), ("notApplicable", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCCStatsCallStatus.setStatus('mandatory')
isgVGIsdnCCStatsLineSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rate64k", 1), ("rate56k", 2), ("rate0k", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCCStatsLineSpeed.setStatus('mandatory')
isgVGIsdnCCStatsPortConn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCCStatsPortConn.setStatus('mandatory')
isgVGIsdnCCStatsCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCCStatsCauseCode.setStatus('mandatory')
isgVGIsdnCCStatsCallStarted = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCCStatsCallStarted.setStatus('mandatory')
isgVGIsdnCCStatsDChanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCCStatsDChanStatus.setStatus('mandatory')
isgVGIsdnCCStatsTrmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("fitWaitInit", 1), ("fitFailed", 2), ("fitTimeout", 3), ("networkTimeout", 4), ("spiDerror", 5), ("online", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCCStatsTrmStatus.setStatus('mandatory')
isgVGIsdnCCStatsTrmTei = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCCStatsTrmTei.setStatus('mandatory')
isgVGIsdnCHStatsTbl = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 2), )
if mibBuilder.loadTexts: isgVGIsdnCHStatsTbl.setStatus('mandatory')
isgVGIsdnCHStatsTblEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 2, 1), ).setIndexNames((0, "ISDN-OPT-MIB", "isgVGIsdnCHStatsDSLNum"), (0, "ISDN-OPT-MIB", "isgVGIsdnCHStatsChType"), (0, "ISDN-OPT-MIB", "isgVGIsdnCHStatsSession"))
if mibBuilder.loadTexts: isgVGIsdnCHStatsTblEntry.setStatus('mandatory')
isgVGIsdnCHStatsDSLNum = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCHStatsDSLNum.setStatus('mandatory')
isgVGIsdnCHStatsChType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("b1Channel", 1), ("b2Channel", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCHStatsChType.setStatus('mandatory')
isgVGIsdnCHStatsSession = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCHStatsSession.setStatus('mandatory')
isgVGIsdnCHStatsNumCalld = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCHStatsNumCalld.setStatus('mandatory')
isgVGIsdnCHStatsDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noCall", 1), ("outgoing", 2), ("incoming", 3), ("collision", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCHStatsDirection.setStatus('mandatory')
isgVGIsdnCHStatsCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCHStatsCauseCode.setStatus('mandatory')
isgVGIsdnCHStatsLineSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rate64k", 1), ("rate56k", 2), ("rate0k", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCHStatsLineSpeed.setStatus('mandatory')
isgVGIsdnCHStatsAsscPort = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCHStatsAsscPort.setStatus('mandatory')
isgVGIsdnCHStatsStrtTm = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCHStatsStrtTm.setStatus('mandatory')
isgVGIsdnCHStatsEndTm = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 13))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnCHStatsEndTm.setStatus('mandatory')
isgVGIsdnPRICCStatsTbl = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 3), )
if mibBuilder.loadTexts: isgVGIsdnPRICCStatsTbl.setStatus('mandatory')
isgVGIsdnPRICCStatsTblEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 3, 1), ).setIndexNames((0, "ISDN-OPT-MIB", "isgVGIsdnPRICCStatsDSLNum"))
if mibBuilder.loadTexts: isgVGIsdnPRICCStatsTblEntry.setStatus('mandatory')
isgVGIsdnPRICCStatsDSLNum = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnPRICCStatsDSLNum.setStatus('mandatory')
isgVGIsdnPRICCStatsSwtchType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("priUnspecifiedStype", 1), ("priNi2Stype", 2), ("pri5essStype", 3), ("priDms100Stype", 4), ("priNttStype", 5), ("priTs014Stype", 6), ("priEtsiStype", 7), ("priQsigMStype", 8), ("priQsigSStype", 9), ("priT1QsigMStype", 10), ("priT1QsigSStype", 11), ("unsupported", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnPRICCStatsSwtchType.setStatus('mandatory')
isgVGIsdnPRICCStatsDChannelState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 2, 9, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dChannelUp", 1), ("dChannelDown", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isgVGIsdnPRICCStatsDChannelState.setStatus('mandatory')
isgVGIsdnBootChannel = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 4, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("boot", 1), ("noBoot", 2)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: isgVGIsdnBootChannel.setStatus('mandatory')
mibBuilder.exportSymbols("ISDN-OPT-MIB", cdx6500Statistics=cdx6500Statistics, isgVGIsdnCfgSecondSPID=isgVGIsdnCfgSecondSPID, cdx6500Configuration=cdx6500Configuration, isgVGIsdnCHStatsTblEntry=isgVGIsdnCHStatsTblEntry, DisplayString=DisplayString, isgVGIsdnCHStatsStrtTm=isgVGIsdnCHStatsStrtTm, isgVGIsdnCfgSecondCallPerm=isgVGIsdnCfgSecondCallPerm, cdx6500StatOtherStatsGroup=cdx6500StatOtherStatsGroup, isgVGIsdnCHStatsChType=isgVGIsdnCHStatsChType, isgVGIsdnCfgSecondSPBU=isgVGIsdnCfgSecondSPBU, isgVGIsdnCfgFirstDN=isgVGIsdnCfgFirstDN, isgVGIsdnCfgDSPID=isgVGIsdnCfgDSPID, isgVGIsdnCfgSecondCallEnablSTm=isgVGIsdnCfgSecondCallEnablSTm, isgVGIsdnCHStatsDSLNum=isgVGIsdnCHStatsDSLNum, isgVGIsdnCHStatsCauseCode=isgVGIsdnCHStatsCauseCode, isgVGIsdnPRICCStatsTbl=isgVGIsdnPRICCStatsTbl, isgVGIsdnCCStatsDChanStatus=isgVGIsdnCCStatsDChanStatus, isgVGIsdnCCStatsCauseCode=isgVGIsdnCCStatsCauseCode, isgVGIsdnCfgSecondChSelect=isgVGIsdnCfgSecondChSelect, isgVGIsdnCHStatsDirection=isgVGIsdnCHStatsDirection, isgVGIsdnCCStatsAccType=isgVGIsdnCCStatsAccType, isgVGIsdnCfgSecondCallDisablSTm=isgVGIsdnCfgSecondCallDisablSTm, isgVGIsdnCfgFirstOutDialNum2=isgVGIsdnCfgFirstOutDialNum2, isgVGIsdnCCStatsL1State=isgVGIsdnCCStatsL1State, isgVGIsdnCCStatsPortConn=isgVGIsdnCCStatsPortConn, isgVGIsdnCfgSecondSubAddr=isgVGIsdnCfgSecondSubAddr, isgIsdnCfgGroup=isgIsdnCfgGroup, isgVGIsdnCfgFirstChSelect=isgVGIsdnCfgFirstChSelect, isgVGIsdnCHStatsTbl=isgVGIsdnCHStatsTbl, isgVGIsdnCfgSecondOutDialNum2=isgVGIsdnCfgSecondOutDialNum2, isgVGIsdnCfgSecondDialRetryIntrvl=isgVGIsdnCfgSecondDialRetryIntrvl, isgVGIsdnCfgFirstPlainOldTelSet=isgVGIsdnCfgFirstPlainOldTelSet, isgVGIsdnCfgSecondPlainOldTelSet=isgVGIsdnCfgSecondPlainOldTelSet, isgVGIsdnCfgDChanPort=isgVGIsdnCfgDChanPort, isgVGIsdnCfgDChanDN=isgVGIsdnCfgDChanDN, isgVGIsdnCfgFirstBChanPort=isgVGIsdnCfgFirstBChanPort, isgVGIsdnCCStatsSwtchType=isgVGIsdnCCStatsSwtchType, isgVGIsdnCfgEntryNum=isgVGIsdnCfgEntryNum, isgVGIsdnCfgFirstSubAddr=isgVGIsdnCfgFirstSubAddr, isgVGIsdnCfgChanTableEntry=isgVGIsdnCfgChanTableEntry, isgVGIsdnCHStatsAsscPort=isgVGIsdnCHStatsAsscPort, cdx6500=cdx6500, isgVGIsdnStats=isgVGIsdnStats, isgVGIsdnCfgSwitchType=isgVGIsdnCfgSwitchType, isgVGIsdnCfgFirstNumCallRetries=isgVGIsdnCfgFirstNumCallRetries, isgVGIsdnCfgSecondSPBUTmOut=isgVGIsdnCfgSecondSPBUTmOut, isgVGIsdnCCStatsSubaddr=isgVGIsdnCCStatsSubaddr, isgVGIsdnCfgSecondSPBUOpt=isgVGIsdnCfgSecondSPBUOpt, isgVGIsdnCCStatsTrmTei=isgVGIsdnCCStatsTrmTei, isgVGIsdnCfgFirstOutDialNum1=isgVGIsdnCfgFirstOutDialNum1, isgVGIsdnCfgSecondAccType=isgVGIsdnCfgSecondAccType, isgVGIsdnCfgFirstCallPerm=isgVGIsdnCfgFirstCallPerm, isgVGIsdnCCStatsTbl=isgVGIsdnCCStatsTbl, isgIsdnCtrlGroup=isgIsdnCtrlGroup, isgVGIsdnCCStatsCallStatus=isgVGIsdnCCStatsCallStatus, isgVGIsdnCfgFirstRate=isgVGIsdnCfgFirstRate, cdx6500CfgGeneralGroup=cdx6500CfgGeneralGroup, isgVGIsdnCfgChanType=isgVGIsdnCfgChanType, codex=codex, isgVGIsdnCCStatsTEI=isgVGIsdnCCStatsTEI, isgVGIsdnCCStatsLineSpeed=isgVGIsdnCCStatsLineSpeed, isgVGIsdnCCStatsCallStarted=isgVGIsdnCCStatsCallStarted, isgVGIsdnCfgSecondRate=isgVGIsdnCfgSecondRate, isgVGIsdnCfgDChanTEI=isgVGIsdnCfgDChanTEI, cdxProductSpecific=cdxProductSpecific, isgVGIsdnCfgFirstSPBU=isgVGIsdnCfgFirstSPBU, isgVGIsdnCfgFirstSPBUOpt=isgVGIsdnCfgFirstSPBUOpt, isgVGIsdnCfgFirstDialRetryIntrvl=isgVGIsdnCfgFirstDialRetryIntrvl, isgVGIsdnCCStatsDirection=isgVGIsdnCCStatsDirection, isgVGIsdnCfgSecondDN=isgVGIsdnCfgSecondDN, isgVGIsdnCfgSecondChanPort=isgVGIsdnCfgSecondChanPort, isgVGIsdnCfgFirstSPBUTmOut=isgVGIsdnCfgFirstSPBUTmOut, isgVGIsdnCfgSecondOutDialNum1=isgVGIsdnCfgSecondOutDialNum1, isgVGIsdnCfgSecondNumCallRetries=isgVGIsdnCfgSecondNumCallRetries, isgIsdnStatsGroup=isgIsdnStatsGroup, isgVGIsdnCHStatsLineSpeed=isgVGIsdnCHStatsLineSpeed, cdx6500Controls=cdx6500Controls, isgVGIsdnCCStatsTblEntry=isgVGIsdnCCStatsTblEntry, isgVGIsdnPRICCStatsDSLNum=isgVGIsdnPRICCStatsDSLNum, isgVGIsdnCCStatsTrmStatus=isgVGIsdnCCStatsTrmStatus, isgVGIsdnCfgDPckTraffic=isgVGIsdnCfgDPckTraffic, isgVGIsdnCCStatsChType=isgVGIsdnCCStatsChType, isgVGIsdnCCStatsDSLNum=isgVGIsdnCCStatsDSLNum, isgVGIsdnCfgFirstAccType=isgVGIsdnCfgFirstAccType, isgVGIsdnCHStatsEndTm=isgVGIsdnCHStatsEndTm, isgVGIsdnCfgSecondTEI=isgVGIsdnCfgSecondTEI, isgVGIsdnCfgFirstSPID=isgVGIsdnCfgFirstSPID, isgVGIsdnCfgChanTable=isgVGIsdnCfgChanTable, isgVGIsdnCfgFirstTEI=isgVGIsdnCfgFirstTEI, isgVGIsdnCCStatsCallgAddr=isgVGIsdnCCStatsCallgAddr, isgVGIsdnCCStatsCalldAddr=isgVGIsdnCCStatsCalldAddr, isgVGIsdnCHStatsSession=isgVGIsdnCHStatsSession, isgVGIsdnBootChannel=isgVGIsdnBootChannel, isgVGIsdnCfgFirstCallDisablSTm=isgVGIsdnCfgFirstCallDisablSTm, isgVGIsdnPRICCStatsTblEntry=isgVGIsdnPRICCStatsTblEntry, isgVGIsdnPRICCStatsSwtchType=isgVGIsdnPRICCStatsSwtchType, isgVGIsdnCfgFirstCallEnablSTm=isgVGIsdnCfgFirstCallEnablSTm, isgVGIsdnPRICCStatsDChannelState=isgVGIsdnPRICCStatsDChannelState, isgVGIsdnCHStatsNumCalld=isgVGIsdnCHStatsNumCalld)
