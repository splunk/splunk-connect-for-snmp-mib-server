#
# PySNMP MIB module HUAWEI-CBQOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-CBQOS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:31:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
IpAddress, NotificationType, TimeTicks, MibIdentifier, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Bits, Counter64, ModuleIdentity, iso, Counter32, ObjectIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "NotificationType", "TimeTicks", "MibIdentifier", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Bits", "Counter64", "ModuleIdentity", "iso", "Counter32", "ObjectIdentity", "Integer32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
hwCBQoSMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1))
hwCBQoSMIB.setRevisions(('2015-09-01 17:37', '2014-02-19 17:37', '2013-07-20 16:00', '2013-06-04 16:00', '2014-02-19 17:37', '2015-03-28 18:08', '2015-09-17 18:08',))
if mibBuilder.loadTexts: hwCBQoSMIB.setLastUpdated('201509011737Z')
if mibBuilder.loadTexts: hwCBQoSMIB.setOrganization('Huawei Technologies Co.,Ltd.')
class MatchRuleType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39))
    namedValues = NamedValues(("any", 1), ("ipv4Acl", 2), ("rtpPort", 3), ("protocol", 4), ("ipPrec", 5), ("dscp", 6), ("vlan8021p", 7), ("mplsExp", 8), ("sourceMac", 9), ("destinationMac", 10), ("classifier", 11), ("inboundInterface", 12), ("macGroup", 13), ("ipv6Acl", 14), ("qosLocalId", 15), ("frDe", 16), ("atmClp", 17), ("ipv6Dscp", 18), ("ipv6NextHeader", 19), ("ipv6Any", 20), ("ipv6DstIp", 21), ("ipv6SrcIp", 22), ("ruleString", 23), ("vlanId", 24), ("outboundInterface", 25), ("l2Protocol", 26), ("l2Acl", 27), ("tcpFlag", 28), ("cvlanId", 29), ("doubleTag", 30), ("sourceQosLocalId", 31), ("cvlan8021p", 32), ("discard", 33), ("dlci", 34), ("app-protocol", 35), ("protocol-group", 36), ("vlanid-cvlanid", 37), ("tagged-vxlan", 38), ("untagged-vxlan", 39))

class CarAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("pass", 1), ("discard", 2), ("remarkIpPrec", 3), ("remarkDscp", 4), ("remarkMplsExp", 5), ("remark", 6), ("remark8021p", 7))

class RemarkType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))
    namedValues = NamedValues(("ipPrec", 1), ("dscp", 2), ("mplsExp", 3), ("vlan8021p", 4), ("atmClp", 5), ("frDe", 6), ("qosLocalId", 7), ("ipv6Dscp", 8), ("localPrec", 9), ("destinationMac", 10), ("vlanId", 11), ("vlanProtocol", 12))

class CBQueueType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("ef", 1), ("af", 2), ("wfq", 3), ("llq", 4))

class QueueBandwidthUnit(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(-1, 1, 2))
    namedValues = NamedValues(("unavailable", -1), ("absoluteUnitKbps", 1), ("percentUnit", 2))

class WredType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("ipPrecbased", 1), ("dscpbased", 2))

class SamplingType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("fixPackets", 1), ("fixTime", 2), ("randomPackets", 3), ("randomTime", 4))

class LrCirUnit(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("absoluteUnitBps", 1), ("percentUnit", 2))

class RedirectType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("cp", 1), ("ipNexthop", 2), ("lspLabel", 3), ("ipv6Cp", 4), ("ipv6Nexthop", 5), ("lspPath", 6))

class RedirectCtrlType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("strict", 1), ("loose", 2))

class UrpfCtrlType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("strict", 1), ("loose", 2))

class DirectionType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("inbound", 1), ("outbound", 2))

class CosType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("be", 1), ("af1", 2), ("af2", 3), ("af3", 4), ("af4", 5), ("ef", 6), ("cs6", 7), ("cs7", 8))

hwQoS = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32))
hwCBQoSObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1))
hwCBQoSClassifierObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1))
hwCBQoSClassifierIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSClassifierIndexNext.setStatus('current')
hwCBQoSClassifierCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 2), )
if mibBuilder.loadTexts: hwCBQoSClassifierCfgInfoTable.setStatus('current')
hwCBQoSClassifierCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 2, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSClassifierIndex"))
if mibBuilder.loadTexts: hwCBQoSClassifierCfgInfoEntry.setStatus('current')
hwCBQoSClassifierIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSClassifierIndex.setStatus('current')
hwCBQoSClassifierName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSClassifierName.setStatus('current')
hwCBQoSClassifierRuleCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSClassifierRuleCount.setStatus('current')
hwCBQoSClassifierOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("and", 1), ("or", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSClassifierOperator.setStatus('current')
hwCBQoSClassifierLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 1, 2, 3))).clone(namedValues=NamedValues(("unavailable", -1), ("l2", 1), ("l3", 2), ("both", 3))).clone('l3')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSClassifierLayer.setStatus('current')
hwCBQoSClassifierRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSClassifierRowStatus.setStatus('current')
hwCBQoSMatchRuleCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3), )
if mibBuilder.loadTexts: hwCBQoSMatchRuleCfgInfoTable.setStatus('current')
hwCBQoSMatchRuleCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSClassifierIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSMatchRuleIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSMatchVlanBeginId"))
if mibBuilder.loadTexts: hwCBQoSMatchRuleCfgInfoEntry.setStatus('current')
hwCBQoSMatchRuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMatchRuleIndex.setStatus('current')
hwCBQoSMatchRuleIfNot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("match", 1), ("notMatch", 2))).clone('match')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSMatchRuleIfNot.setStatus('current')
hwCBQoSMatchRuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3, 1, 3), MatchRuleType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSMatchRuleType.setStatus('current')
hwCBQoSMatchRuleStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSMatchRuleStringValue.setStatus('current')
hwCBQoSMatchRuleIntValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSMatchRuleIntValue1.setStatus('current')
hwCBQoSMatchRuleIntValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSMatchRuleIntValue2.setStatus('current')
hwCBQoSMatchRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSMatchRuleRowStatus.setStatus('current')
hwCBQoSMatchMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSMatchMacMask.setStatus('current')
hwCBQoSMatchVlanBeginId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3, 1, 9), Unsigned32())
if mibBuilder.loadTexts: hwCBQoSMatchVlanBeginId.setStatus('current')
hwCBQoSMatchVlanEndId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3, 1, 10), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSMatchVlanEndId.setStatus('current')
hwCBQoSMatchInnerSrcIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3, 1, 11), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSMatchInnerSrcIp.setStatus('current')
hwCBQoSMatchInnerSrcIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSMatchInnerSrcIpMask.setStatus('current')
hwCBQoSMatchInnerDstIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3, 1, 13), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSMatchInnerDstIp.setStatus('current')
hwCBQoSMatchInnerDstIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSMatchInnerDstIpMask.setStatus('current')
hwCBQoSMatchInnerSrcPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3, 1, 15), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 65535), ValueRangeConstraint(65536, 65536), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSMatchInnerSrcPort.setStatus('current')
hwCBQoSMatchInnerDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3, 1, 16), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 65535), ValueRangeConstraint(65536, 65536), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSMatchInnerDstPort.setStatus('current')
hwCBQoSMatchInnerProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 1, 3, 1, 17), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 255), ValueRangeConstraint(65536, 65536), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSMatchInnerProtocol.setStatus('current')
hwCBQoSBehaviorObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2))
hwCBQoSBehaviorIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSBehaviorIndexNext.setStatus('current')
hwCBQoSBehaviorCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 2), )
if mibBuilder.loadTexts: hwCBQoSBehaviorCfgInfoTable.setStatus('current')
hwCBQoSBehaviorCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 2, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSBehaviorCfgInfoEntry.setStatus('current')
hwCBQoSBehaviorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSBehaviorIndex.setStatus('current')
hwCBQoSBehaviorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSBehaviorName.setStatus('current')
hwCBQoSBehaviorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSBehaviorRowStatus.setStatus('current')
hwCBQoSCarCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 3), )
if mibBuilder.loadTexts: hwCBQoSCarCfgInfoTable.setStatus('current')
hwCBQoSCarCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 3, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSCarCfgInfoEntry.setStatus('current')
hwCBQoSCarCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 3, 1, 1), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSCarCir.setStatus('current')
hwCBQoSCarCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 3, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSCarCbs.setStatus('current')
hwCBQoSCarEbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSCarEbs.setStatus('current')
hwCBQoSCarPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSCarPir.setStatus('current')
hwCBQoSCarPbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 3, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSCarPbs.setStatus('current')
hwCBQoSCarGreenAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 3, 1, 6), CarAction().clone('pass')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSCarGreenAction.setStatus('current')
hwCBQoSCarGreenRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(11, 81), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSCarGreenRemarkValue.setStatus('current')
hwCBQoSCarYellowAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 3, 1, 8), CarAction().clone('pass')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSCarYellowAction.setStatus('current')
hwCBQoSCarYellowRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(11, 81), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSCarYellowRemarkValue.setStatus('current')
hwCBQoSCarRedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 3, 1, 10), CarAction().clone('discard')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSCarRedAction.setStatus('current')
hwCBQoSCarRedRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(11, 81), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSCarRedRemarkValue.setStatus('current')
hwCBQoSCarRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 3, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSCarRowStatus.setStatus('current')
hwCBQosCarAggregation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("aggregationCar", 1), ("noneAggregationCar", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQosCarAggregation.setStatus('current')
hwCBQoSGtsCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 4), )
if mibBuilder.loadTexts: hwCBQoSGtsCfgInfoTable.setStatus('current')
hwCBQoSGtsCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 4, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSGtsCfgInfoEntry.setStatus('current')
hwCBQoSGtsCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 4, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSGtsCir.setStatus('current')
hwCBQoSGtsCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(15000, 155000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSGtsCbs.setStatus('current')
hwCBQoSGtsEbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 155000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSGtsEbs.setStatus('current')
hwCBQoSGtsQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSGtsQueueLength.setStatus('current')
hwCBQoSGtsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSGtsRowStatus.setStatus('current')
hwCBQoSGtsPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 155000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSGtsPir.setStatus('current')
hwCBQoSRemarkCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 5), )
if mibBuilder.loadTexts: hwCBQoSRemarkCfgInfoTable.setStatus('current')
hwCBQoSRemarkCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 5, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSRemarkType"))
if mibBuilder.loadTexts: hwCBQoSRemarkCfgInfoEntry.setStatus('current')
hwCBQoSRemarkType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 5, 1, 1), RemarkType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSRemarkType.setStatus('current')
hwCBQoSRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRemarkValue.setStatus('current')
hwCBQoSRemarkStringValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRemarkStringValue.setStatus('current')
hwCBQoSRemarkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 5, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRemarkRowStatus.setStatus('current')
hwCBQoSQueueCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 6), )
if mibBuilder.loadTexts: hwCBQoSQueueCfgInfoTable.setStatus('current')
hwCBQoSQueueCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 6, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSQueueCfgInfoEntry.setStatus('current')
hwCBQoSQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 6, 1, 1), CBQueueType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSQueueType.setStatus('current')
hwCBQoSQueueDropType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 1, 2))).clone(namedValues=NamedValues(("unavailable", -1), ("tailDrop", 1), ("wred", 2))).clone('tailDrop')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSQueueDropType.setStatus('current')
hwCBQoSQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 1024), )).clone(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSQueueLength.setStatus('current')
hwCBQoSQueueBandwidthUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 6, 1, 4), QueueBandwidthUnit()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSQueueBandwidthUnit.setStatus('current')
hwCBQoSQueueBandwidthValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 1000000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSQueueBandwidthValue.setStatus('current')
hwCBQoSQueueCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(32, 2000000), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSQueueCbs.setStatus('current')
hwCBQoSQueueQueueNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 1, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096))).clone(namedValues=NamedValues(("unavailable", -1), ("a1", 1), ("a8", 8), ("a16", 16), ("a32", 32), ("a64", 64), ("a128", 128), ("a256", 256), ("a512", 512), ("a1024", 1024), ("a2048", 2048), ("a4096", 4096))).clone('a256')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSQueueQueueNumber.setStatus('current')
hwCBQoSQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 6, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSQueueRowStatus.setStatus('current')
hwCBQoSQueueCbsRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(25, 500), )).clone(25)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSQueueCbsRatio.setStatus('current')
hwCBQoSWredCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 7), )
if mibBuilder.loadTexts: hwCBQoSWredCfgInfoTable.setStatus('current')
hwCBQoSWredCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 7, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSWredCfgInfoEntry.setStatus('current')
hwCBQoSWredType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 7, 1, 1), WredType().clone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCBQoSWredType.setStatus('current')
hwCBQoSWredWeightConst = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(9)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCBQoSWredWeightConst.setStatus('current')
hwCBQoSWredDropProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 7, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCBQoSWredDropProfileIndex.setStatus('current')
hwCBQoSWredCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 7, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSWredCfgRowStatus.setStatus('current')
hwCBQoSWredClassCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 8), )
if mibBuilder.loadTexts: hwCBQoSWredClassCfgInfoTable.setStatus('current')
hwCBQoSWredClassCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 8, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSWredClassValue"))
if mibBuilder.loadTexts: hwCBQoSWredClassCfgInfoEntry.setStatus('current')
hwCBQoSWredClassValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSWredClassValue.setStatus('current')
hwCBQoSWredClassLowLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCBQoSWredClassLowLimit.setStatus('current')
hwCBQoSWredClassHighLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCBQoSWredClassHighLimit.setStatus('current')
hwCBQoSWredClassDiscardProb = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCBQoSWredClassDiscardProb.setStatus('current')
hwCBQoSNatCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 10), )
if mibBuilder.loadTexts: hwCBQoSNatCfgInfoTable.setStatus('current')
hwCBQoSNatCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 10, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSNatCfgInfoEntry.setStatus('current')
hwCBQoSNatAddressGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 10, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSNatAddressGroup.setStatus('current')
hwCBQoSNatNoPat = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nopat", 1), ("pat", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSNatNoPat.setStatus('current')
hwCBQoSNatServiceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSNatServiceClass.setStatus('current')
hwCBQoSNatRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 10, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSNatRowStatus.setStatus('current')
hwCBQoSFirewallCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 11), )
if mibBuilder.loadTexts: hwCBQoSFirewallCfgInfoTable.setStatus('current')
hwCBQoSFirewallCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 11, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSFirewallCfgInfoEntry.setStatus('current')
hwCBQoSFirewallAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2))).clone('permit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSFirewallAction.setStatus('current')
hwCBQoSFirewallRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 11, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSFirewallRowStatus.setStatus('current')
hwCBQoSSamplingCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 12), )
if mibBuilder.loadTexts: hwCBQoSSamplingCfgInfoTable.setStatus('current')
hwCBQoSSamplingCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 12, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSSamplingCfgInfoEntry.setStatus('current')
hwCBQoSIfSamplingType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 12, 1, 1), SamplingType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSIfSamplingType.setStatus('current')
hwCBQoSSamplingNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSSamplingNum.setStatus('current')
hwCBQoSSamplingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 12, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSSamplingRowStatus.setStatus('current')
hwCBQoSLrCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 13), )
if mibBuilder.loadTexts: hwCBQoSLrCfgInfoTable.setStatus('current')
hwCBQoSLrCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 13, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSLrCfgInfoEntry.setStatus('current')
hwCBQoSLrUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 13, 1, 1), LrCirUnit()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSLrUnit.setStatus('current')
hwCBQoSLrCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 155000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSLrCir.setStatus('current')
hwCBQoSLrCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 155000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSLrCbs.setStatus('current')
hwCBQoSLrEbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 13, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 155000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSLrEbs.setStatus('current')
hwCBQoSLrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 13, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSLrRowStatus.setStatus('current')
hwCBQoSNestPolicyCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 14), )
if mibBuilder.loadTexts: hwCBQoSNestPolicyCfgInfoTable.setStatus('current')
hwCBQoSNestPolicyCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 14, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSNestPolicyCfgInfoEntry.setStatus('current')
hwCBQoSNestPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 14, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSNestPolicyName.setStatus('current')
hwCBQoSNestPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 14, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSNestPolicyRowStatus.setStatus('current')
hwCBQoSRedirectCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 15), )
if mibBuilder.loadTexts: hwCBQoSRedirectCfgInfoTable.setStatus('current')
hwCBQoSRedirectCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 15, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSRedirectType"))
if mibBuilder.loadTexts: hwCBQoSRedirectCfgInfoEntry.setStatus('current')
hwCBQoSRedirectType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 15, 1, 1), RedirectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSRedirectType.setStatus('current')
hwCBQoSRedirectIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 15, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectIpAddress.setStatus('current')
hwCBQoSRedirectIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 15, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectIfIndex.setStatus('current')
hwCBQoSRedirectVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 4094), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectVlanId.setStatus('current')
hwCBQoSRedirectCtrlType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 15, 1, 5), RedirectCtrlType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectCtrlType.setStatus('current')
hwCBQoSRedirectRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 15, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectRowStatus.setStatus('current')
hwCBQoSRedirectLSPDstIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 15, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectLSPDstIpAddress.setStatus('current')
hwCBQoSRedirectLSPSecondary = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 15, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 1, 2))).clone(namedValues=NamedValues(("notConfigLSP", -1), ("mainLSPPath", 1), ("backupLSPPath", 2))).clone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectLSPSecondary.setStatus('current')
hwCBQoSMirrorCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 16), )
if mibBuilder.loadTexts: hwCBQoSMirrorCfgInfoTable.setStatus('current')
hwCBQoSMirrorCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 16, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSMirrorCfgInfoEntry.setStatus('current')
hwCBQoSMirrorObserveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSMirrorObserveIndex.setStatus('current')
hwCBQoSMirrorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 16, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSMirrorRowStatus.setStatus('current')
hwCBQoSUrpfCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 17), )
if mibBuilder.loadTexts: hwCBQoSUrpfCfgInfoTable.setStatus('current')
hwCBQoSUrpfCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 17, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSUrpfCfgInfoEntry.setStatus('current')
hwCBQoSUrpfCtrlType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 17, 1, 1), UrpfCtrlType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSUrpfCtrlType.setStatus('current')
hwCBQoSUrpfAllowDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 17, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSUrpfAllowDefault.setStatus('current')
hwCBQoSUrpfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 17, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSUrpfRowStatus.setStatus('current')
hwCBQoSCountCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 18), )
if mibBuilder.loadTexts: hwCBQoSCountCfgInfoTable.setStatus('current')
hwCBQoSCountCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 18, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSCountCfgInfoEntry.setStatus('current')
hwCBQoSCountAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("count", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSCountAction.setStatus('current')
hwCBQoSCountRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 18, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSCountRowStatus.setStatus('current')
hwCBQoSHighDropCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 19), )
if mibBuilder.loadTexts: hwCBQoSHighDropCfgInfoTable.setStatus('current')
hwCBQoSHighDropCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 19, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSHighDropCfgInfoEntry.setStatus('current')
hwCBQoSHighDropPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 19, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("high", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSHighDropPrecedence.setStatus('current')
hwCBQoSHighDropRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 19, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSHighDropRowStatus.setStatus('current')
hwCBQoSLoadBalanceCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 20), )
if mibBuilder.loadTexts: hwCBQoSLoadBalanceCfgInfoTable.setStatus('current')
hwCBQoSLoadBalanceCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 20, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSLoadBalanceCfgInfoEntry.setStatus('current')
hwCBQoSLoadBalanceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("flow", 1), ("packet", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSLoadBalanceType.setStatus('current')
hwCBQoSLoadBalanceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 20, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSLoadBalanceRowStatus.setStatus('current')
hwCBQoSEgressGtsCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 21), )
if mibBuilder.loadTexts: hwCBQoSEgressGtsCfgInfoTable.setStatus('current')
hwCBQoSEgressGtsCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 21, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSEgressGtsIfIndex"))
if mibBuilder.loadTexts: hwCBQoSEgressGtsCfgInfoEntry.setStatus('current')
hwCBQoSEgressGtsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 21, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: hwCBQoSEgressGtsIfIndex.setStatus('current')
hwCBQoSEgressGtsCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 21, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSEgressGtsCir.setStatus('current')
hwCBQoSEgressGtsPir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 21, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSEgressGtsPir.setStatus('current')
hwCBQoSEgressGtsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 21, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSEgressGtsRowStatus.setStatus('current')
hwCBQoSServiceClassCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 22), )
if mibBuilder.loadTexts: hwCBQoSServiceClassCfgInfoTable.setStatus('current')
hwCBQoSServiceClassCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 22, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSServiceClassCfgInfoEntry.setStatus('current')
hwCBQoSServiceClassQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 22, 1, 1), CosType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSServiceClassQueueId.setStatus('current')
hwCBQoSServiceClassColor = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 22, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("green", 1), ("yellow", 2), ("red", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSServiceClassColor.setStatus('current')
hwCBQoSServiceClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 22, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSServiceClassRowStatus.setStatus('current')
hwCBQoSServiceClassNoremarkflag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 22, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSServiceClassNoremarkflag.setStatus('current')
hwCBQoSRedirectMULCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 23), )
if mibBuilder.loadTexts: hwCBQoSRedirectMULCfgInfoTable.setStatus('current')
hwCBQoSRedirectMULCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 23, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSRedirectMULCfgInfoEntry.setStatus('current')
hwCBQoSRedirectMULIpAddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 23, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectMULIpAddress1.setStatus('current')
hwCBQoSRedirectMULIfIndex1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 23, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectMULIfIndex1.setStatus('current')
hwCBQoSRedirectMULIpAddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 23, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectMULIpAddress2.setStatus('current')
hwCBQoSRedirectMULIfIndex2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 23, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectMULIfIndex2.setStatus('current')
hwCBQoSRedirectMULIpAddress3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 23, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectMULIpAddress3.setStatus('current')
hwCBQoSRedirectMULIfIndex3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 23, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectMULIfIndex3.setStatus('current')
hwCBQoSRedirectMULIpAddress4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 23, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectMULIpAddress4.setStatus('current')
hwCBQoSRedirectMULIfIndex4 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 23, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectMULIfIndex4.setStatus('current')
hwCBQoSRedirectMULCtrlType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 23, 1, 9), RedirectCtrlType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectMULCtrlType.setStatus('current')
hwCBQoSRedirectMULRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 23, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectMULRowStatus.setStatus('current')
hwCBQoSRandomDiscardCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 24), )
if mibBuilder.loadTexts: hwCBQoSRandomDiscardCfgInfoTable.setStatus('current')
hwCBQoSRandomDiscardCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 24, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSRandomDiscardCfgInfoEntry.setStatus('current')
hwCBQoSRandomPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 24, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRandomPercent.setStatus('current')
hwCBQoSRandomDiscardRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 24, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRandomDiscardRowStatus.setStatus('current')
hwCBQoSDenyPacketLengthCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 25), )
if mibBuilder.loadTexts: hwCBQoSDenyPacketLengthCfgInfoTable.setStatus('current')
hwCBQoSDenyPacketLengthCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 25, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSDenyPacketLengthCfgInfoEntry.setStatus('current')
hwCBQoSDenyPacketLengthOptype = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 25, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("range", 1), ("eq", 2), ("gt", 3), ("lt", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSDenyPacketLengthOptype.setStatus('current')
hwCBQoSDenyPacketLengthMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 25, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSDenyPacketLengthMin.setStatus('current')
hwCBQoSDenyPacketLengthMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 25, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSDenyPacketLengthMax.setStatus('current')
hwCBQoSDenyPacketLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 25, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSDenyPacketLength.setStatus('current')
hwCBQoSDenyPacketLengthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 25, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSDenyPacketLengthRowStatus.setStatus('current')
hwCBQoSDAAStatisticsCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 26), )
if mibBuilder.loadTexts: hwCBQoSDAAStatisticsCfgInfoTable.setStatus('current')
hwCBQoSDAAStatisticsCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 26, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSDAAStatisticsCfgInfoEntry.setStatus('current')
hwCBQoSDAAStatisticsSummary = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 26, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSDAAStatisticsSummary.setStatus('current')
hwCBQoSDAAStatisticsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 26, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSDAAStatisticsRowStatus.setStatus('current')
hwCBQoSDAATariffLevelCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 27), )
if mibBuilder.loadTexts: hwCBQoSDAATariffLevelCfgInfoTable.setStatus('current')
hwCBQoSDAATariffLevelCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 27, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSDAATariffLevelCfgInfoEntry.setStatus('current')
hwCBQoSDAATariffLevelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 27, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSDAATariffLevelValue.setStatus('current')
hwCBQoSDAATariffLevelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 27, 1, 50), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSDAATariffLevelRowStatus.setStatus('current')
hwCBQoSRemarkIpDfCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 28), )
if mibBuilder.loadTexts: hwCBQoSRemarkIpDfCfgInfoTable.setStatus('current')
hwCBQoSRemarkIpDfCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 28, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSRemarkIpDfCfgInfoEntry.setStatus('current')
hwCBQoSRemarkIpDf = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 28, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRemarkIpDf.setStatus('current')
hwCBQoSRemarkIpDfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 28, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRemarkIpDfRowStatus.setStatus('current')
hwCBQoSDropProfileCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 29), )
if mibBuilder.loadTexts: hwCBQoSDropProfileCfgInfoTable.setStatus('current')
hwCBQoSDropProfileCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 29, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSDropProfileIndex"))
if mibBuilder.loadTexts: hwCBQoSDropProfileCfgInfoEntry.setStatus('current')
hwCBQoSDropProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 29, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSDropProfileIndex.setStatus('current')
hwCBQoSDropProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 29, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSDropProfileName.setStatus('current')
hwCBQoSDropProfileType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 29, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSDropProfileType.setStatus('current')
hwCBQoSDropProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 29, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSDropProfileRowStatus.setStatus('current')
hwCBQoSDropProfileClassCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 30), )
if mibBuilder.loadTexts: hwCBQoSDropProfileClassCfgInfoTable.setStatus('current')
hwCBQoSDropProfileClassCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 30, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSDropProfileIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSDropProfileClassValue"))
if mibBuilder.loadTexts: hwCBQoSDropProfileClassCfgInfoEntry.setStatus('current')
hwCBQoSDropProfileClassValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 30, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSDropProfileClassValue.setStatus('current')
hwCBQoSDropProfileLowLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 30, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCBQoSDropProfileLowLimit.setStatus('current')
hwCBQoSDropProfileHighLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 30, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCBQoSDropProfileHighLimit.setStatus('current')
hwCBQoSDropProfileDiscardProb = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 30, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCBQoSDropProfileDiscardProb.setStatus('current')
hwCBQoSRedirectVsiTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 31), )
if mibBuilder.loadTexts: hwCBQoSRedirectVsiTable.setStatus('current')
hwCBQoSRedirectVsiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 31, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSRedirectVsiEntry.setStatus('current')
hwCBQoSRedirectVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 31, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectVsiName.setStatus('current')
hwCBQoSRedirectVsiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 31, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSRedirectVsiRowStatus.setStatus('current')
hwCBQoSSuppressionCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 32), )
if mibBuilder.loadTexts: hwCBQoSSuppressionCfgInfoTable.setStatus('current')
hwCBQoSSuppressionCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 32, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"))
if mibBuilder.loadTexts: hwCBQoSSuppressionCfgInfoEntry.setStatus('current')
hwCBQoSSuppressionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 32, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("broadcast", 1), ("multicast", 2), ("unkonwnunicast", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSuppressionType.setStatus('current')
hwCBQoSSuppressionCir = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 32, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSSuppressionCir.setStatus('current')
hwCBQoSSuppressionCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 32, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSSuppressionCbs.setStatus('current')
hwCBQoSSuppressionGreenAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 32, 1, 4), CarAction().clone('pass')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSSuppressionGreenAction.setStatus('current')
hwCBQoSSuppressionGreenRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 32, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(11, 81), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSSuppressionGreenRemarkValue.setStatus('current')
hwCBQoSSuppressionRedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 32, 1, 6), CarAction().clone('discard')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSSuppressionRedAction.setStatus('current')
hwCBQoSSuppressionRedRemarkValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 32, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(11, 81), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSSuppressionRedRemarkValue.setStatus('current')
hwCBQoSSuppressionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 2, 32, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSSuppressionRowStatus.setStatus('current')
hwCBQoSPolicyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3))
hwCBQoSPolicyIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyIndexNext.setStatus('current')
hwCBQoSPolicyCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 2), )
if mibBuilder.loadTexts: hwCBQoSPolicyCfgInfoTable.setStatus('current')
hwCBQoSPolicyCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 2, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyIndex"))
if mibBuilder.loadTexts: hwCBQoSPolicyCfgInfoEntry.setStatus('current')
hwCBQoSPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyIndex.setStatus('current')
hwCBQoSPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSPolicyName.setStatus('current')
hwCBQoSPolicyClassCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyClassCount.setStatus('current')
hwCBQoSPolicyConfigMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 1, 2))).clone(namedValues=NamedValues(("unavailable", -1), ("config", 1), ("auto", 2))).clone('config')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSPolicyConfigMode.setStatus('current')
hwCBQoSPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSPolicyRowStatus.setStatus('current')
hwCBQoSPolicyShareFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("multiple", 1), ("single", 2))).clone('multiple')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSPolicyShareFlag.setStatus('current')
hwCBQoSPolicyStatisticsFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 2, 1, 7), EnabledStatus().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSPolicyStatisticsFlag.setStatus('current')
hwCBQoSPolicyClassCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 3), )
if mibBuilder.loadTexts: hwCBQoSPolicyClassCfgInfoTable.setStatus('current')
hwCBQoSPolicyClassCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 3, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSPolicyClassCfgInfoEntry.setStatus('current')
hwCBQoSPolicyClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyClassIndex.setStatus('current')
hwCBQoSPolicyClassClassifierIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 3, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSPolicyClassClassifierIndex.setStatus('current')
hwCBQoSPolicyClassClassifierName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyClassClassifierName.setStatus('current')
hwCBQoSPolicyClassBehaviorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 3, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSPolicyClassBehaviorIndex.setStatus('current')
hwCBQoSPolicyClassBehaviorName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyClassBehaviorName.setStatus('current')
hwCBQoSPolicyClassPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSPolicyClassPrecedence.setStatus('current')
hwCBQoSPolicyClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 3, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSPolicyClassRowStatus.setStatus('current')
hwCBQoSPolicyShareModeCfgInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 4), )
if mibBuilder.loadTexts: hwCBQoSPolicyShareModeCfgInfoTable.setStatus('current')
hwCBQoSPolicyShareModeCfgInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 4, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyIndex"))
if mibBuilder.loadTexts: hwCBQoSPolicyShareModeCfgInfoEntry.setStatus('current')
hwCBQoSPolicyShareModeFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 4, 1, 1), EnabledStatus().clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSPolicyShareModeFlag.setStatus('current')
hwCBQoSPolicyShareModeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 3, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSPolicyShareModeRowStatus.setStatus('current')
hwCBQoSApplyPolicyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4))
hwCBQoSIfApplyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 1), )
if mibBuilder.loadTexts: hwCBQoSIfApplyPolicyTable.setStatus('current')
hwCBQoSIfApplyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 1, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"))
if mibBuilder.loadTexts: hwCBQoSIfApplyPolicyEntry.setStatus('current')
hwCBQoSIfApplyPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfApplyPolicyIfIndex.setStatus('current')
hwCBQoSIfApplyPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 1, 1, 2), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfApplyPolicyDirection.setStatus('current')
hwCBQoSIfApplyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSIfApplyPolicyName.setStatus('current')
hwCBQoSIfApplyPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSIfApplyPolicyRowStatus.setStatus('current')
hwCBQoSIfApplyPolicyLinkLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("linklayer", 1), ("alllayer", 2), ("iplayer", 3), ("mplslayer", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSIfApplyPolicyLinkLayer.setStatus('current')
hwCBQoSAtmPvcApplyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 2), )
if mibBuilder.loadTexts: hwCBQoSAtmPvcApplyPolicyTable.setStatus('current')
hwCBQoSAtmPvcApplyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 2, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVPI"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVCI"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyDirection"))
if mibBuilder.loadTexts: hwCBQoSAtmPvcApplyPolicyEntry.setStatus('current')
hwCBQoSAtmPvcApplyPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcApplyPolicyIfIndex.setStatus('current')
hwCBQoSAtmPvcApplyPolicyVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcApplyPolicyVPI.setStatus('current')
hwCBQoSAtmPvcApplyPolicyVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcApplyPolicyVCI.setStatus('current')
hwCBQoSAtmPvcApplyPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 2, 1, 4), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcApplyPolicyDirection.setStatus('current')
hwCBQoSAtmPvcApplyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSAtmPvcApplyPolicyName.setStatus('current')
hwCBQoSAtmPvcApplyPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSAtmPvcApplyPolicyRowStatus.setStatus('current')
hwCBQoSIfVlanApplyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 3), )
if mibBuilder.loadTexts: hwCBQoSIfVlanApplyPolicyTable.setStatus('current')
hwCBQoSIfVlanApplyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 3, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyVlanid1"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyVlanid2"))
if mibBuilder.loadTexts: hwCBQoSIfVlanApplyPolicyEntry.setStatus('current')
hwCBQoSIfVlanApplyPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfVlanApplyPolicyIfIndex.setStatus('current')
hwCBQoSIfVlanApplyPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 3, 1, 2), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfVlanApplyPolicyDirection.setStatus('current')
hwCBQoSIfVlanApplyPolicyVlanid1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfVlanApplyPolicyVlanid1.setStatus('current')
hwCBQoSIfVlanApplyPolicyVlanid2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 3, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSIfVlanApplyPolicyVlanid2.setStatus('current')
hwCBQoSIfVlanApplyPolicyCeVidEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 3, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSIfVlanApplyPolicyCeVidEnd.setStatus('current')
hwCBQoSIfVlanApplyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSIfVlanApplyPolicyName.setStatus('current')
hwCBQoSIfVlanApplyPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 3, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSIfVlanApplyPolicyRowStatus.setStatus('current')
hwCBQoSIfVlanApplyPolicyLinkLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("linklayer", 1), ("alllayer", 2), ("iplayer", 3), ("mplslayer", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSIfVlanApplyPolicyLinkLayer.setStatus('current')
hwCBQoSFrClassApplyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 4), )
if mibBuilder.loadTexts: hwCBQoSFrClassApplyPolicyTable.setStatus('current')
hwCBQoSFrClassApplyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 4, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrClassApplyPolicyFrClassName"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrClassApplyPolicyDirection"))
if mibBuilder.loadTexts: hwCBQoSFrClassApplyPolicyEntry.setStatus('current')
hwCBQoSFrClassApplyPolicyFrClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrClassApplyPolicyFrClassName.setStatus('current')
hwCBQoSFrClassApplyPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 4, 1, 2), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrClassApplyPolicyDirection.setStatus('current')
hwCBQoSFrClassApplyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSFrClassApplyPolicyName.setStatus('current')
hwCBQoSFrClassApplyPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSFrClassApplyPolicyRowStatus.setStatus('current')
hwCBQoSFrPvcApplyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 5), )
if mibBuilder.loadTexts: hwCBQoSFrPvcApplyPolicyTable.setStatus('current')
hwCBQoSFrPvcApplyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 5, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDlciNum"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDirection"))
if mibBuilder.loadTexts: hwCBQoSFrPvcApplyPolicyEntry.setStatus('current')
hwCBQoSFrPvcApplyPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcApplyPolicyIfIndex.setStatus('current')
hwCBQoSFrPvcApplyPolicyDlciNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcApplyPolicyDlciNum.setStatus('current')
hwCBQoSFrPvcApplyPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 5, 1, 3), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcApplyPolicyDirection.setStatus('current')
hwCBQoSFrPvcApplyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcApplyPolicyName.setStatus('current')
hwCBQoSVsiApplyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 6), )
if mibBuilder.loadTexts: hwCBQoSVsiApplyPolicyTable.setStatus('current')
hwCBQoSVsiApplyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 6, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSVsiApplyPolicyVsiIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSVsiApplyPolicyDirection"))
if mibBuilder.loadTexts: hwCBQoSVsiApplyPolicyEntry.setStatus('current')
hwCBQoSVsiApplyPolicyVsiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSVsiApplyPolicyVsiIndex.setStatus('current')
hwCBQoSVsiName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSVsiName.setStatus('current')
hwCBQoSVsiApplyPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 6, 1, 3), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSVsiApplyPolicyDirection.setStatus('current')
hwCBQoSVsiApplyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 6, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSVsiApplyPolicyName.setStatus('current')
hwCBQoSVsiApplyPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 6, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSVsiApplyPolicyRowStatus.setStatus('current')
hwCBQoSVlanApplyPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 7), )
if mibBuilder.loadTexts: hwCBQoSVlanApplyPolicyTable.setStatus('current')
hwCBQoSVlanApplyPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 7, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSVlanApplyPolicyVlanId"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSVlanApplyPolicyDirection"))
if mibBuilder.loadTexts: hwCBQoSVlanApplyPolicyEntry.setStatus('current')
hwCBQoSVlanApplyPolicyVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSVlanApplyPolicyVlanId.setStatus('current')
hwCBQoSVlanApplyPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSVlanApplyPolicyDirection.setStatus('current')
hwCBQoSVlanApplyPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSVlanApplyPolicyName.setStatus('current')
hwCBQoSVlanApplyPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 7, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSVlanApplyPolicyRowStatus.setStatus('current')
hwCBQoSRuleNotSupportAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 8), )
if mibBuilder.loadTexts: hwCBQoSRuleNotSupportAlarmTable.setStatus('current')
hwCBQoSRuleNotSupportAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 8, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSRuleDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSRuleSlotID"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSRuleInfo"))
if mibBuilder.loadTexts: hwCBQoSRuleNotSupportAlarmEntry.setStatus('current')
hwCBQoSRuleDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 8, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSRuleDirection.setStatus('current')
hwCBQoSRuleSlotID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSRuleSlotID.setStatus('current')
hwCBQoSRuleInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 8, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSRuleInfo.setStatus('current')
hwCBQoSActionNotSupportAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 9), )
if mibBuilder.loadTexts: hwCBQoSActionNotSupportAlarmTable.setStatus('current')
hwCBQoSActionNotSupportAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 9, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSActionDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSActionSlotID"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSActionInfo"))
if mibBuilder.loadTexts: hwCBQoSActionNotSupportAlarmEntry.setStatus('current')
hwCBQoSActionDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 9, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSActionDirection.setStatus('current')
hwCBQoSActionSlotID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSActionSlotID.setStatus('current')
hwCBQoSActionInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 9, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSActionInfo.setStatus('current')
hwCBQoSIfApplyMultiPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 10), )
if mibBuilder.loadTexts: hwCBQoSIfApplyMultiPolicyTable.setStatus('current')
hwCBQoSIfApplyMultiPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 10, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyMultiPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyMultiPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyMultiPolicyIndex"))
if mibBuilder.loadTexts: hwCBQoSIfApplyMultiPolicyEntry.setStatus('current')
hwCBQoSIfApplyMultiPolicyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfApplyMultiPolicyIfIndex.setStatus('current')
hwCBQoSIfApplyMultiPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 10, 1, 2), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfApplyMultiPolicyDirection.setStatus('current')
hwCBQoSIfApplyMultiPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 10, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfApplyMultiPolicyIndex.setStatus('current')
hwCBQoSIfApplyMultiPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfApplyMultiPolicyName.setStatus('current')
hwCBQoSIfApplyMultiPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 10, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSIfApplyMultiPolicyRowStatus.setStatus('current')
hwCBQoSVlanApplyMultiPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 11), )
if mibBuilder.loadTexts: hwCBQoSVlanApplyMultiPolicyTable.setStatus('current')
hwCBQoSVlanApplyMultiPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 11, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSVlanApplyMultiPolicyVlanId"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSVlanApplyMultiPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSVlanApplyMultiPolicyIndex"))
if mibBuilder.loadTexts: hwCBQoSVlanApplyMultiPolicyEntry.setStatus('current')
hwCBQoSVlanApplyMultiPolicyVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSVlanApplyMultiPolicyVlanId.setStatus('current')
hwCBQoSVlanApplyMultiPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSVlanApplyMultiPolicyDirection.setStatus('current')
hwCBQoSVlanApplyMultiPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSVlanApplyMultiPolicyIndex.setStatus('current')
hwCBQoSVlanApplyMultiPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSVlanApplyMultiPolicyName.setStatus('current')
hwCBQoSVlanApplyMultiPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 4, 11, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSVlanApplyMultiPolicyRowStatus.setStatus('current')
hwCBQoSApplyPolicyStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5))
hwCBQoSIfStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1))
hwCBQoSIfCbqRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 1), )
if mibBuilder.loadTexts: hwCBQoSIfCbqRunInfoTable.setStatus('current')
hwCBQoSIfCbqRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 1, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"))
if mibBuilder.loadTexts: hwCBQoSIfCbqRunInfoEntry.setStatus('current')
hwCBQoSIfCbqQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCbqQueueSize.setStatus('current')
hwCBQoSIfCbqDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCbqDiscard.setStatus('current')
hwCBQoSIfCbqEfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCbqEfQueueSize.setStatus('current')
hwCBQoSIfCbqAfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCbqAfQueueSize.setStatus('current')
hwCBQoSIfCbqBeQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCbqBeQueueSize.setStatus('current')
hwCBQoSIfCbqBeActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCbqBeActiveQueueNum.setStatus('current')
hwCBQoSIfCbqBeMaxActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCbqBeMaxActiveQueueNum.setStatus('current')
hwCBQoSIfCbqBeTotalQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCbqBeTotalQueueNum.setStatus('current')
hwCBQoSIfCbqAfAllocatedQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCbqAfAllocatedQueueNum.setStatus('current')
hwCBQoSIfClassMatchRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 2), )
if mibBuilder.loadTexts: hwCBQoSIfClassMatchRunInfoTable.setStatus('current')
hwCBQoSIfClassMatchRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 2, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSIfClassMatchRunInfoEntry.setStatus('current')
hwCBQoSIfClassMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfClassMatchedPackets.setStatus('current')
hwCBQoSIfClassMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfClassMatchedBytes.setStatus('current')
hwCBQoSIfClassAverageRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfClassAverageRate.setStatus('current')
hwCBQosIfClassPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQosIfClassPassedPackets.setStatus('current')
hwCBQosIfClassDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQosIfClassDroppedPackets.setStatus('current')
hwCBQoSIfCarRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3), )
if mibBuilder.loadTexts: hwCBQoSIfCarRunInfoTable.setStatus('current')
hwCBQoSIfCarRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyVlanid1"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSIfCarRunInfoEntry.setStatus('current')
hwCBQoSIfCarGreenPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarGreenPassedPackets.setStatus('current')
hwCBQoSIfCarGreenPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarGreenPassedBytes.setStatus('current')
hwCBQoSIfCarGreenRemarkedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarGreenRemarkedPackets.setStatus('current')
hwCBQoSIfCarGreenRemarkedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarGreenRemarkedBytes.setStatus('current')
hwCBQoSIfCarGreenDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarGreenDiscardedPackets.setStatus('current')
hwCBQoSIfCarGreenDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarGreenDiscardedBytes.setStatus('current')
hwCBQoSIfCarYellowPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarYellowPassedPackets.setStatus('current')
hwCBQoSIfCarYellowPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarYellowPassedBytes.setStatus('current')
hwCBQoSIfCarYellowRemarkedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarYellowRemarkedPackets.setStatus('current')
hwCBQoSIfCarYellowRemarkedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarYellowRemarkedBytes.setStatus('current')
hwCBQoSIfCarYellowDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarYellowDiscardedPackets.setStatus('current')
hwCBQoSIfCarYellowDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarYellowDiscardedBytes.setStatus('current')
hwCBQoSIfCarRedPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarRedPassedPackets.setStatus('current')
hwCBQoSIfCarRedPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarRedPassedBytes.setStatus('current')
hwCBQoSIfCarRedRemarkedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarRedRemarkedPackets.setStatus('current')
hwCBQoSIfCarRedRemarkedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarRedRemarkedBytes.setStatus('current')
hwCBQoSIfCarRedDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarRedDiscardedPackets.setStatus('current')
hwCBQoSIfCarRedDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarRedDiscardedBytes.setStatus('current')
hwCBQoSIfCarGreenPassedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarGreenPassedPacketsRate.setStatus('current')
hwCBQoSIfCarGreenPassedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarGreenPassedBytesRate.setStatus('current')
hwCBQoSIfCarGreenRemarkedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarGreenRemarkedPacketsRate.setStatus('current')
hwCBQoSIfCarGreenRemarkedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarGreenRemarkedBytesRate.setStatus('current')
hwCBQoSIfCarGreenDiscardedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarGreenDiscardedPacketsRate.setStatus('current')
hwCBQoSIfCarGreenDiscardedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarGreenDiscardedBytesRate.setStatus('current')
hwCBQoSIfCarYellowPassedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarYellowPassedPacketsRate.setStatus('current')
hwCBQoSIfCarYellowPassedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarYellowPassedBytesRate.setStatus('current')
hwCBQoSIfCarYellowRemarkedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarYellowRemarkedPacketsRate.setStatus('current')
hwCBQoSIfCarYellowRemarkedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarYellowRemarkedBytesRate.setStatus('current')
hwCBQoSIfCarYellowDiscardedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarYellowDiscardedPacketsRate.setStatus('current')
hwCBQoSIfCarYellowDiscardedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarYellowDiscardedBytesRate.setStatus('current')
hwCBQoSIfCarRedPassedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarRedPassedPacketsRate.setStatus('current')
hwCBQoSIfCarRedPassedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarRedPassedBytesRate.setStatus('current')
hwCBQoSIfCarRedRemarkedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarRedRemarkedPacketsRate.setStatus('current')
hwCBQoSIfCarRedRemarkedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarRedRemarkedBytesRate.setStatus('current')
hwCBQoSIfCarRedDiscardedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarRedDiscardedPacketsRate.setStatus('current')
hwCBQoSIfCarRedDiscardedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 3, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfCarRedDiscardedBytesRate.setStatus('current')
hwCBQoSIfGtsRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 4), )
if mibBuilder.loadTexts: hwCBQoSIfGtsRunInfoTable.setStatus('current')
hwCBQoSIfGtsRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 4, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSIfGtsRunInfoEntry.setStatus('current')
hwCBQoSIfGtsPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfGtsPassedPackets.setStatus('current')
hwCBQoSIfGtsPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfGtsPassedBytes.setStatus('current')
hwCBQoSIfGtsDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfGtsDiscardedPackets.setStatus('current')
hwCBQoSIfGtsDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfGtsDiscardedBytes.setStatus('current')
hwCBQoSIfGtsDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfGtsDelayedPackets.setStatus('current')
hwCBQoSIfGtsDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfGtsDelayedBytes.setStatus('current')
hwCBQoSIfGtsQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfGtsQueueSize.setStatus('current')
hwCBQoSIfRemarkRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 5), )
if mibBuilder.loadTexts: hwCBQoSIfRemarkRunInfoTable.setStatus('current')
hwCBQoSIfRemarkRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 5, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSIfRemarkRunInfoEntry.setStatus('current')
hwCBQoSIfRemarkedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfRemarkedPackets.setStatus('current')
hwCBQoSIfRemarkedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfRemarkedBytes.setStatus('current')
hwCBQoSIfQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 6), )
if mibBuilder.loadTexts: hwCBQoSIfQueueRunInfoTable.setStatus('current')
hwCBQoSIfQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 6, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSIfQueueRunInfoEntry.setStatus('current')
hwCBQoSIfQueueMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 6, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfQueueMatchedPackets.setStatus('current')
hwCBQoSIfQueueMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfQueueMatchedBytes.setStatus('current')
hwCBQoSIfQueueEnqueuedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfQueueEnqueuedPackets.setStatus('current')
hwCBQoSIfQueueEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfQueueEnqueuedBytes.setStatus('current')
hwCBQoSIfQueueDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfQueueDiscardedPackets.setStatus('current')
hwCBQoSIfQueueDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfQueueDiscardedBytes.setStatus('current')
hwCBQoSIfQueueMatchedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfQueueMatchedPacketsRate.setStatus('current')
hwCBQoSIfQueueMatchedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfQueueMatchedBytesRate.setStatus('current')
hwCBQoSIfQueueEnqueuedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfQueueEnqueuedPacketsRate.setStatus('current')
hwCBQoSIfQueueEnqueuedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 6, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfQueueEnqueuedBytesRate.setStatus('current')
hwCBQoSIfQueueDiscardedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 6, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfQueueDiscardedPacketsRate.setStatus('current')
hwCBQoSIfQueueDiscardedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 6, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfQueueDiscardedBytesRate.setStatus('current')
hwCBQoSIfWredRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 7), )
if mibBuilder.loadTexts: hwCBQoSIfWredRunInfoTable.setStatus('current')
hwCBQoSIfWredRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 7, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSWredClassValue"))
if mibBuilder.loadTexts: hwCBQoSIfWredRunInfoEntry.setStatus('current')
hwCBQoSIfWredRandomDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 7, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfWredRandomDiscardedPackets.setStatus('current')
hwCBQoSIfWredTailDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfWredTailDiscardedPackets.setStatus('current')
hwCBQoSIfLrRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 8), )
if mibBuilder.loadTexts: hwCBQoSIfLrRunInfoTable.setStatus('current')
hwCBQoSIfLrRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 8, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSIfLrRunInfoEntry.setStatus('current')
hwCBQoSIfLrPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 8, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfLrPassedPackets.setStatus('current')
hwCBQoSIfLrPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 8, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfLrPassedBytes.setStatus('current')
hwCBQoSIfLrDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 8, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfLrDiscardedPackets.setStatus('current')
hwCBQoSIfLrDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 8, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfLrDiscardedBytes.setStatus('current')
hwCBQoSIfLrDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 8, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfLrDelayedPackets.setStatus('current')
hwCBQoSIfLrDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 8, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfLrDelayedBytes.setStatus('current')
hwCBQoSIfRedirectRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 9), )
if mibBuilder.loadTexts: hwCBQoSIfRedirectRunInfoTable.setStatus('current')
hwCBQoSIfRedirectRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 9, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSIfRedirectRunInfoEntry.setStatus('current')
hwCBQoSIfRedirectedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 9, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfRedirectedPackets.setStatus('current')
hwCBQoSIfRedirectedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 9, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfRedirectedBytes.setStatus('current')
hwCBQoSIfFirewallRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 10), )
if mibBuilder.loadTexts: hwCBQoSIfFirewallRunInfoTable.setStatus('current')
hwCBQoSIfFirewallRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 10, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSIfFirewallRunInfoEntry.setStatus('current')
hwCBQoSIfFilteredPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfFilteredPackets.setStatus('current')
hwCBQoSIfFilteredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfFilteredBytes.setStatus('current')
hwCBQoSIfMirrorRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 11), )
if mibBuilder.loadTexts: hwCBQoSIfMirrorRunInfoTable.setStatus('current')
hwCBQoSIfMirrorRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 11, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSIfMirrorRunInfoEntry.setStatus('current')
hwCBQoSIfMirroredPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 11, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfMirroredPackets.setStatus('current')
hwCBQoSIfMirroredBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 11, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfMirroredBytes.setStatus('current')
hwCBQoSIfUrpfRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 12), )
if mibBuilder.loadTexts: hwCBQoSIfUrpfRunInfoTable.setStatus('current')
hwCBQoSIfUrpfRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 12, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSIfUrpfRunInfoEntry.setStatus('current')
hwCBQoSIfUrpfPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 12, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfUrpfPassedPackets.setStatus('current')
hwCBQoSIfUrpfPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 12, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfUrpfPassedBytes.setStatus('current')
hwCBQoSIfUrpfDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 12, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfUrpfDroppedPackets.setStatus('current')
hwCBQoSIfUrpfDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 12, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfUrpfDroppedBytes.setStatus('current')
hwCBQoSIfSampleRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 13), )
if mibBuilder.loadTexts: hwCBQoSIfSampleRunInfoTable.setStatus('current')
hwCBQoSIfSampleRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 13, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSIfSampleRunInfoEntry.setStatus('current')
hwCBQoSIfSampledPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 13, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfSampledPackets.setStatus('current')
hwCBQoSIfSampledBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 1, 13, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfSampledBytes.setStatus('current')
hwCBQoSAtmPvcStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2))
hwCBQoSAtmPvcCbqRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 1), )
if mibBuilder.loadTexts: hwCBQoSAtmPvcCbqRunInfoTable.setStatus('current')
hwCBQoSAtmPvcCbqRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 1, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVPI"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVCI"))
if mibBuilder.loadTexts: hwCBQoSAtmPvcCbqRunInfoEntry.setStatus('current')
hwCBQoSAtmPvcCbqQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcCbqQueueSize.setStatus('current')
hwCBQoSAtmPvcCbqDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcCbqDiscard.setStatus('current')
hwCBQoSAtmPvcCbqEfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcCbqEfQueueSize.setStatus('current')
hwCBQoSAtmPvcCbqAfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcCbqAfQueueSize.setStatus('current')
hwCBQoSAtmPvcCbqBeQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcCbqBeQueueSize.setStatus('current')
hwCBQoSAtmPvcCbqBeActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcCbqBeActiveQueueNum.setStatus('current')
hwCBQoSAtmPvcCbqBeMaxActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcCbqBeMaxActiveQueueNum.setStatus('current')
hwCBQoSAtmPvcCbqBeTotalQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcCbqBeTotalQueueNum.setStatus('current')
hwCBQoSAtmPvcCbqAfAllocatedQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcCbqAfAllocatedQueueNum.setStatus('current')
hwCBQoSAtmPvcClassMatchRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 2), )
if mibBuilder.loadTexts: hwCBQoSAtmPvcClassMatchRunInfoTable.setStatus('current')
hwCBQoSAtmPvcClassMatchRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 2, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVPI"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVCI"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSAtmPvcClassMatchRunInfoEntry.setStatus('current')
hwCBQoSAtmPvcClassMatchPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcClassMatchPackets.setStatus('current')
hwCBQoSAtmPvcClassMatchBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcClassMatchBytes.setStatus('current')
hwCBQoSAtmPvcClassAverageRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcClassAverageRate.setStatus('current')
hwCBQoSAtmPvcCarRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 3), )
if mibBuilder.loadTexts: hwCBQoSAtmPvcCarRunInfoTable.setStatus('current')
hwCBQoSAtmPvcCarRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 3, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVPI"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVCI"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSAtmPvcCarRunInfoEntry.setStatus('current')
hwCBQoSAtmPvcCarConformPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcCarConformPackets.setStatus('current')
hwCBQoSAtmPvcCarConformBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcCarConformBytes.setStatus('current')
hwCBQoSAtmPvcCarExceedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcCarExceedPackets.setStatus('current')
hwCBQoSAtmPvcCarExceedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcCarExceedBytes.setStatus('current')
hwCBQoSAtmPvcCarConformPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcCarConformPacketsRate.setStatus('current')
hwCBQoSAtmPvcCarConformBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcCarConformBytesRate.setStatus('current')
hwCBQoSAtmPvcCarExceedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcCarExceedPacketsRate.setStatus('current')
hwCBQoSAtmPvcCarExceedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcCarExceedBytesRate.setStatus('current')
hwCBQoSAtmPvcGtsRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 4), )
if mibBuilder.loadTexts: hwCBQoSAtmPvcGtsRunInfoTable.setStatus('current')
hwCBQoSAtmPvcGtsRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 4, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVPI"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVCI"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSAtmPvcGtsRunInfoEntry.setStatus('current')
hwCBQoSAtmPvcGtsPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcGtsPassedPackets.setStatus('current')
hwCBQoSAtmPvcGtsPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcGtsPassedBytes.setStatus('current')
hwCBQoSAtmPvcGtsDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcGtsDiscardedPackets.setStatus('current')
hwCBQoSAtmPvcGtsDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcGtsDiscardedBytes.setStatus('current')
hwCBQoSAtmPvcGtsDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcGtsDelayedPackets.setStatus('current')
hwCBQoSAtmPvcGtsDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcGtsDelayedBytes.setStatus('current')
hwCBQoSAtmPvcGtsQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcGtsQueueSize.setStatus('current')
hwCBQoSAtmPvcRemarkRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 5), )
if mibBuilder.loadTexts: hwCBQoSAtmPvcRemarkRunInfoTable.setStatus('current')
hwCBQoSAtmPvcRemarkRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 5, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVPI"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVCI"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSAtmPvcRemarkRunInfoEntry.setStatus('current')
hwCBQoSAtmPvcRemarkedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcRemarkedPackets.setStatus('current')
hwCBQoSAtmPvcQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 6), )
if mibBuilder.loadTexts: hwCBQoSAtmPvcQueueRunInfoTable.setStatus('current')
hwCBQoSAtmPvcQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 6, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVPI"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVCI"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSAtmPvcQueueRunInfoEntry.setStatus('current')
hwCBQoSAtmPvcQueueMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 6, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcQueueMatchedPackets.setStatus('current')
hwCBQoSAtmPvcQueueMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcQueueMatchedBytes.setStatus('current')
hwCBQoSAtmPvcQueueEnqueuedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcQueueEnqueuedPackets.setStatus('current')
hwCBQoSAtmPvcQueueEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcQueueEnqueuedBytes.setStatus('current')
hwCBQoSAtmPvcQueueDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcQueueDiscardedPackets.setStatus('current')
hwCBQoSAtmPvcQueueDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcQueueDiscardedBytes.setStatus('current')
hwCBQoSAtmPvcQueueMatchedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcQueueMatchedPacketsRate.setStatus('current')
hwCBQoSAtmPvcQueueMatchedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcQueueMatchedBytesRate.setStatus('current')
hwCBQoSAtmPvcQueueEnqueuedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcQueueEnqueuedPacketsRate.setStatus('current')
hwCBQoSAtmPvcQueueEnqueuedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 6, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcQueueEnqueuedBytesRate.setStatus('current')
hwCBQoSAtmPvcQueueDiscardedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 6, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcQueueDiscardedPacketsRate.setStatus('current')
hwCBQoSAtmPvcQueueDiscardedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 6, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcQueueDiscardedBytesRate.setStatus('current')
hwCBQoSAtmPvcWredRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 7), )
if mibBuilder.loadTexts: hwCBQoSAtmPvcWredRunInfoTable.setStatus('current')
hwCBQoSAtmPvcWredRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 7, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVPI"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVCI"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSWredClassValue"))
if mibBuilder.loadTexts: hwCBQoSAtmPvcWredRunInfoEntry.setStatus('current')
hwCBQoSAtmPvcWredRandomDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 7, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcWredRandomDiscardedPackets.setStatus('current')
hwCBQoSAtmPvcWredTailDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcWredTailDiscardedPackets.setStatus('current')
hwCBQoSAtmPvcLrRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 8), )
if mibBuilder.loadTexts: hwCBQoSAtmPvcLrRunInfoTable.setStatus('current')
hwCBQoSAtmPvcLrRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 8, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVPI"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVCI"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSAtmPvcLrRunInfoEntry.setStatus('current')
hwCBQoSAtmPvcLrPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 8, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcLrPassedPackets.setStatus('current')
hwCBQoSAtmPvcLrPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 8, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcLrPassedBytes.setStatus('current')
hwCBQoSAtmPvcLrDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 8, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcLrDiscardedPackets.setStatus('current')
hwCBQoSAtmPvcLrDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 8, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcLrDiscardedBytes.setStatus('current')
hwCBQoSAtmPvcLrDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 8, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcLrDelayedPackets.setStatus('current')
hwCBQoSAtmPvcLrDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 2, 8, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSAtmPvcLrDelayedBytes.setStatus('current')
hwCBQoSFrPvcStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3))
hwCBQoSFrPvcCbqRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 1), )
if mibBuilder.loadTexts: hwCBQoSFrPvcCbqRunInfoTable.setStatus('current')
hwCBQoSFrPvcCbqRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 1, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDlciNum"))
if mibBuilder.loadTexts: hwCBQoSFrPvcCbqRunInfoEntry.setStatus('current')
hwCBQoSFrPvcCbqQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcCbqQueueSize.setStatus('current')
hwCBQoSFrPvcCbqDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcCbqDiscard.setStatus('current')
hwCBQoSFrPvcCbqEfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcCbqEfQueueSize.setStatus('current')
hwCBQoSFrPvcCbqAfQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcCbqAfQueueSize.setStatus('current')
hwCBQoSFrPvcCbqBeQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcCbqBeQueueSize.setStatus('current')
hwCBQoSFrPvcCbqBeActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcCbqBeActiveQueueNum.setStatus('current')
hwCBQoSFrPvcCbqBeMaxActiveQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcCbqBeMaxActiveQueueNum.setStatus('current')
hwCBQoSFrPvcCbqBeTotalQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcCbqBeTotalQueueNum.setStatus('current')
hwCBQoSFrPvcCbqAfAllocatedQueueNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcCbqAfAllocatedQueueNum.setStatus('current')
hwCBQoSFrPvcClassMatchRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 2), )
if mibBuilder.loadTexts: hwCBQoSFrPvcClassMatchRunInfoTable.setStatus('current')
hwCBQoSFrPvcClassMatchRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 2, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDlciNum"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSFrPvcClassMatchRunInfoEntry.setStatus('current')
hwCBQoSFrPvcClassMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcClassMatchedPackets.setStatus('current')
hwCBQoSFrPvcClassMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcClassMatchedBytes.setStatus('current')
hwCBQoSFrPvcClassAverageRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcClassAverageRate.setStatus('current')
hwCBQoSFrPvcCarRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 3), )
if mibBuilder.loadTexts: hwCBQoSFrPvcCarRunInfoTable.setStatus('current')
hwCBQoSFrPvcCarRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 3, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDlciNum"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSFrPvcCarRunInfoEntry.setStatus('current')
hwCBQoSFrPvcCarConformPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcCarConformPackets.setStatus('current')
hwCBQoSFrPvcCarConformBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcCarConformBytes.setStatus('current')
hwCBQoSFrPvcCarExceedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcCarExceedPackets.setStatus('current')
hwCBQoSFrPvcCarExceedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcCarExceedBytes.setStatus('current')
hwCBQoSFrPvcCarConformPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcCarConformPacketsRate.setStatus('current')
hwCBQoSFrPvcCarConformBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcCarConformBytesRate.setStatus('current')
hwCBQoSFrPvcCarExceedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcCarExceedPacketsRate.setStatus('current')
hwCBQoSFrPvcCarExceedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcCarExceedBytesRate.setStatus('current')
hwCBQoSFrPvcGtsRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 4), )
if mibBuilder.loadTexts: hwCBQoSFrPvcGtsRunInfoTable.setStatus('current')
hwCBQoSFrPvcGtsRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 4, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDlciNum"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSFrPvcGtsRunInfoEntry.setStatus('current')
hwCBQoSFrPvcGtsPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcGtsPassedPackets.setStatus('current')
hwCBQoSFrPvcGtsPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcGtsPassedBytes.setStatus('current')
hwCBQoSFrPvcGtsDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcGtsDiscardedPackets.setStatus('current')
hwCBQoSFrPvcGtsDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcGtsDiscardedBytes.setStatus('current')
hwCBQoSFrPvcGtsDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcGtsDelayedPackets.setStatus('current')
hwCBQoSFrPvcGtsDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcGtsDelayedBytes.setStatus('current')
hwCBQoSFrPvcGtsQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcGtsQueueSize.setStatus('current')
hwCBQoSFrPvcRemarkRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 5), )
if mibBuilder.loadTexts: hwCBQoSFrPvcRemarkRunInfoTable.setStatus('current')
hwCBQoSFrPvcRemarkRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 5, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDlciNum"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSFrPvcRemarkRunInfoEntry.setStatus('current')
hwCBQoSFrPvcRemarkedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcRemarkedPackets.setStatus('current')
hwCBQoSFrPvcQueueRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 6), )
if mibBuilder.loadTexts: hwCBQoSFrPvcQueueRunInfoTable.setStatus('current')
hwCBQoSFrPvcQueueRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 6, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDlciNum"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSFrPvcQueueRunInfoEntry.setStatus('current')
hwCBQoSFrPvcQueueMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 6, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcQueueMatchedPackets.setStatus('current')
hwCBQoSFrPvcQueueMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcQueueMatchedBytes.setStatus('current')
hwCBQoSFrPvcQueueEnqueuedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcQueueEnqueuedPackets.setStatus('current')
hwCBQoSFrPvcQueueEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcQueueEnqueuedBytes.setStatus('current')
hwCBQoSFrPvcQueueDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcQueueDiscardedPackets.setStatus('current')
hwCBQoSFrPvcQueueDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcQueueDiscardedBytes.setStatus('current')
hwCBQoSFrPvcQueueMatchedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcQueueMatchedPacketsRate.setStatus('current')
hwCBQoSFrPvcQueueMatchedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcQueueMatchedBytesRate.setStatus('current')
hwCBQoSFrPvcQueueEnqueuedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcQueueEnqueuedPacketsRate.setStatus('current')
hwCBQoSFrPvcQueueEnqueuedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 6, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcQueueEnqueuedBytesRate.setStatus('current')
hwCBQoSFrPvcQueueDiscardedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 6, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcQueueDiscardedPacketsRate.setStatus('current')
hwCBQoSFrPvcQueueDiscardedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 6, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcQueueDiscardedBytesRate.setStatus('current')
hwCBQoSFrPvcWredRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 7), )
if mibBuilder.loadTexts: hwCBQoSFrPvcWredRunInfoTable.setStatus('current')
hwCBQoSFrPvcWredRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 7, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDlciNum"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSWredClassValue"))
if mibBuilder.loadTexts: hwCBQoSFrPvcWredRunInfoEntry.setStatus('current')
hwCBQoSFrPvcWredRandomDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 7, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcWredRandomDiscardedPackets.setStatus('current')
hwCBQoSFrPvcWredTailDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcWredTailDiscardedPackets.setStatus('current')
hwCBQoSFrPvcLrRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 8), )
if mibBuilder.loadTexts: hwCBQoSFrPvcLrRunInfoTable.setStatus('current')
hwCBQoSFrPvcLrRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 8, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDlciNum"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSFrPvcLrRunInfoEntry.setStatus('current')
hwCBQoSFrPvcLrPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 8, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcLrPassedPackets.setStatus('current')
hwCBQoSFrPvcLrPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 8, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcLrPassedBytes.setStatus('current')
hwCBQoSFrPvcLrDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 8, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcLrDiscardedPackets.setStatus('current')
hwCBQoSFrPvcLrDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 8, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcLrDiscardedBytes.setStatus('current')
hwCBQoSFrPvcLrDelayedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 8, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcLrDelayedPackets.setStatus('current')
hwCBQoSFrPvcLrDelayedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 3, 8, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrPvcLrDelayedBytes.setStatus('current')
hwCBQoSIfVlanStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 4))
hwCBQoSIfVlanClassMatchRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 4, 1), )
if mibBuilder.loadTexts: hwCBQoSIfVlanClassMatchRunInfoTable.setStatus('current')
hwCBQoSIfVlanClassMatchRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 4, 1, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyVlanid1"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSIfVlanClassMatchRunInfoEntry.setStatus('current')
hwCBQoSIfVlanClassMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 4, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfVlanClassMatchedPackets.setStatus('current')
hwCBQoSIfVlanClassMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 4, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSIfVlanClassMatchedBytes.setStatus('current')
hwCBQoSVsiStaticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 5))
hwCBQoSVsiClassMatchRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 5, 1), )
if mibBuilder.loadTexts: hwCBQoSVsiClassMatchRunInfoTable.setStatus('current')
hwCBQoSVsiClassMatchRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 5, 1, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSVsiApplyPolicyVsiIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSVsiApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSVsiClassMatchRunInfoEntry.setStatus('current')
hwCBQoSVsiClassMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 5, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSVsiClassMatchedPackets.setStatus('current')
hwCBQoSVsiClassMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 5, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSVsiClassMatchedBytes.setStatus('current')
hwCBQoSPolicyStatisticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6))
hwCBQoSCarStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 1), )
if mibBuilder.loadTexts: hwCBQoSCarStatisticsTable.setStatus('current')
hwCBQoSCarStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 1, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyVlanid1"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyVlanid2"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSCarStatisticsEntry.setStatus('current')
hwCBQoSCarConformedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSCarConformedPackets.setStatus('current')
hwCBQoSCarConformedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSCarConformedBytes.setStatus('current')
hwCBQoSCarConformedPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSCarConformedPacketRate.setStatus('current')
hwCBQoSCarConformedByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSCarConformedByteRate.setStatus('current')
hwCBQoSCarExceededPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 1, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSCarExceededPackets.setStatus('current')
hwCBQoSCarExceededBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSCarExceededBytes.setStatus('current')
hwCBQoSCarExceededPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSCarExceededPacketRate.setStatus('current')
hwCBQoSCarExceededByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSCarExceededByteRate.setStatus('current')
hwCBQoSCarOverflowPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSCarOverflowPackets.setStatus('current')
hwCBQoSCarOverflowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 1, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSCarOverflowBytes.setStatus('current')
hwCBQoSCarOverflowPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSCarOverflowPacketRate.setStatus('current')
hwCBQoSCarOverflowByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSCarOverflowByteRate.setStatus('current')
hwCBQoSCarPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSCarPassedPackets.setStatus('current')
hwCBQoSCarPassedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSCarPassedBytes.setStatus('current')
hwCBQoSCarDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 1, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSCarDroppedPackets.setStatus('current')
hwCBQoSCarDroppedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 1, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSCarDroppedBytes.setStatus('current')
hwCBQoSPolicyStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 2), )
if mibBuilder.loadTexts: hwCBQoSPolicyStatisticsTable.setStatus('current')
hwCBQoSPolicyStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 2, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyVlanid1"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyVlanid2"))
if mibBuilder.loadTexts: hwCBQoSPolicyStatisticsEntry.setStatus('current')
hwCBQoSPolicyMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyMatchedPackets.setStatus('current')
hwCBQoSPolicyMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyMatchedBytes.setStatus('current')
hwCBQoSPolicyUnmatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyUnmatchedPackets.setStatus('current')
hwCBQoSPolicyUnmatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyUnmatchedBytes.setStatus('current')
hwCBQoSPolicyMatchedPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyMatchedPassPackets.setStatus('current')
hwCBQoSPolicyMatchedPassBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyMatchedPassBytes.setStatus('current')
hwCBQoSPolicyMatchedDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyMatchedDropPackets.setStatus('current')
hwCBQoSPolicyMatchedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyMatchedDropBytes.setStatus('current')
hwCBQoSPolicyResetFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 2, 1, 19), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCBQoSPolicyResetFlag.setStatus('current')
hwCBQoSPolicyMatchedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyMatchedPacketsRate.setStatus('current')
hwCBQoSPolicyMatchedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyMatchedBytesRate.setStatus('current')
hwCBQoSPolicyMatchedPassPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyMatchedPassPacketsRate.setStatus('current')
hwCBQoSPolicyMatchedPassBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyMatchedPassBytesRate.setStatus('current')
hwCBQoSPolicyMatchedDropPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 2, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyMatchedDropPacketsRate.setStatus('current')
hwCBQoSPolicyMatchedDropBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 2, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyMatchedDropBytesRate.setStatus('current')
hwCBQoSClassifierStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 3), )
if mibBuilder.loadTexts: hwCBQoSClassifierStatisticsTable.setStatus('current')
hwCBQoSClassifierStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 3, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyVlanid1"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyVlanid2"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassifierIndex"))
if mibBuilder.loadTexts: hwCBQoSClassifierStatisticsEntry.setStatus('current')
hwCBQoSPolicyClassifierIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyClassifierIndex.setStatus('current')
hwCBQoSClassifierMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSClassifierMatchedPackets.setStatus('current')
hwCBQoSClassifierMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSClassifierMatchedBytes.setStatus('current')
hwCBQoSClassifierMatchedPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSClassifierMatchedPassPackets.setStatus('current')
hwCBQoSClassifierMatchedPassBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSClassifierMatchedPassBytes.setStatus('current')
hwCBQoSClassifierMatchedDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSClassifierMatchedDropPackets.setStatus('current')
hwCBQoSClassifierMatchedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSClassifierMatchedDropBytes.setStatus('current')
hwCBQoSPolicyStatisticsClassifierTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 4), )
if mibBuilder.loadTexts: hwCBQoSPolicyStatisticsClassifierTable.setStatus('current')
hwCBQoSPolicyStatisticsClassifierEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 4, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyVlanid1"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyStatClassifierName"))
if mibBuilder.loadTexts: hwCBQoSPolicyStatisticsClassifierEntry.setStatus('current')
hwCBQoSPolicyStatClassifierName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyStatClassifierName.setStatus('current')
hwCBQoSPolicyStatClassifierMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyStatClassifierMatchedPackets.setStatus('current')
hwCBQoSPolicyStatClassifierMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyStatClassifierMatchedBytes.setStatus('current')
hwCBQoSPolicyStatClassifierUnmatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyStatClassifierUnmatchedPackets.setStatus('current')
hwCBQoSPolicyStatClassifierUnmatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyStatClassifierUnmatchedBytes.setStatus('current')
hwCBQoSPolicyStatClassifierMatchedPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyStatClassifierMatchedPassPackets.setStatus('current')
hwCBQoSPolicyStatClassifierMatchedPassBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyStatClassifierMatchedPassBytes.setStatus('current')
hwCBQoSPolicyStatClassifierMatchedDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyStatClassifierMatchedDropPackets.setStatus('current')
hwCBQoSPolicyStatClassifierMatchedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyStatClassifierMatchedDropBytes.setStatus('current')
hwCBQoSPolicyStatClassifierMatchedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyStatClassifierMatchedPacketsRate.setStatus('current')
hwCBQoSPolicyStatClassifierMatchedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyStatClassifierMatchedBytesRate.setStatus('current')
hwCBQoSPolicyStatClassifierMatchedPassPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyStatClassifierMatchedPassPacketsRate.setStatus('current')
hwCBQoSPolicyStatClassifierMatchedPassBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyStatClassifierMatchedPassBytesRate.setStatus('current')
hwCBQoSPolicyStatClassifierMatchedDropPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyStatClassifierMatchedDropPacketsRate.setStatus('current')
hwCBQoSPolicyStatClassifierMatchedDropBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPolicyStatClassifierMatchedDropBytesRate.setStatus('current')
hwCBQoSVlanClassMatchRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 5), )
if mibBuilder.loadTexts: hwCBQoSVlanClassMatchRunInfoTable.setStatus('current')
hwCBQoSVlanClassMatchRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 5, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSVlanApplyPolicyVlanId"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSVlanApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSVlanClassMatchRunInfoEntry.setStatus('current')
hwCBQoSVlanClassMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSVlanClassMatchedPackets.setStatus('current')
hwCBQoSVlanClassPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSVlanClassPassedPackets.setStatus('current')
hwCBQoSVlanClassDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSVlanClassDroppedPackets.setStatus('current')
hwCBQoSVlanCarRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 6), )
if mibBuilder.loadTexts: hwCBQoSVlanCarRunInfoTable.setStatus('current')
hwCBQoSVlanCarRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 6, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSVlanApplyPolicyVlanId"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSVlanApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSVlanCarRunInfoEntry.setStatus('current')
hwCBQoSVlanCarPassedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 6, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSVlanCarPassedPackets.setStatus('current')
hwCBQoSVlanCarDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSVlanCarDiscardedPackets.setStatus('current')
hwCBQoSMultiPolicyStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 7), )
if mibBuilder.loadTexts: hwCBQoSMultiPolicyStatisticsTable.setStatus('current')
hwCBQoSMultiPolicyStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 7, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyMultiPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyMultiPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSVlanApplyMultiPolicyVlanId"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSMultiPolicyIndex"))
if mibBuilder.loadTexts: hwCBQoSMultiPolicyStatisticsEntry.setStatus('current')
hwCBQoSMultiPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 7, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyIndex.setStatus('current')
hwCBQoSMultiPolicyMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 7, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyMatchedPackets.setStatus('current')
hwCBQoSMultiPolicyMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 7, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyMatchedBytes.setStatus('current')
hwCBQoSMultiPolicyUnmatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 7, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyUnmatchedPackets.setStatus('current')
hwCBQoSMultiPolicyUnmatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 7, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyUnmatchedBytes.setStatus('current')
hwCBQoSMultiPolicyMatchedPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 7, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyMatchedPassPackets.setStatus('current')
hwCBQoSMultiPolicyMatchedPassBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 7, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyMatchedPassBytes.setStatus('current')
hwCBQoSMultiPolicyMatchedDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 7, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyMatchedDropPackets.setStatus('current')
hwCBQoSMultiPolicyMatchedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 7, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyMatchedDropBytes.setStatus('current')
hwCBQoSMultiPolicyResetFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 7, 1, 20), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyResetFlag.setStatus('current')
hwCBQoSMultiPolicyStatisticsClassifierTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 8), )
if mibBuilder.loadTexts: hwCBQoSMultiPolicyStatisticsClassifierTable.setStatus('current')
hwCBQoSMultiPolicyStatisticsClassifierEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 8, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyMultiPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSVlanApplyMultiPolicyVlanId"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyMultiPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSMultiPolicyStaPolicyIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSMultiPolicyStatClassifierIndex"))
if mibBuilder.loadTexts: hwCBQoSMultiPolicyStatisticsClassifierEntry.setStatus('current')
hwCBQoSMultiPolicyStaPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyStaPolicyIndex.setStatus('current')
hwCBQoSMultiPolicyStatClassifierIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyStatClassifierIndex.setStatus('current')
hwCBQoSMultiPolicyStatClassifierName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 8, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyStatClassifierName.setStatus('current')
hwCBQoSMultiPolicyStatClassifierMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 8, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyStatClassifierMatchedPackets.setStatus('current')
hwCBQoSMultiPolicyStatClassifierMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 8, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyStatClassifierMatchedBytes.setStatus('current')
hwCBQoSMultiPolicyStatClassifierUnmatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 8, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyStatClassifierUnmatchedPackets.setStatus('current')
hwCBQoSMultiPolicyStatClassifierUnmatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 8, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyStatClassifierUnmatchedBytes.setStatus('current')
hwCBQoSMultiPolicyStatClassifierMatchedPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 8, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyStatClassifierMatchedPassPackets.setStatus('current')
hwCBQoSMultiPolicyStatClassifierMatchedPassBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 8, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyStatClassifierMatchedPassBytes.setStatus('current')
hwCBQoSMultiPolicyStatClassifierMatchedDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 8, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyStatClassifierMatchedDropPackets.setStatus('current')
hwCBQoSMultiPolicyStatClassifierMatchedDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 8, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSMultiPolicyStatClassifierMatchedDropBytes.setStatus('current')
hwCBQoSPolicyStatSubPolicyClassifierRunInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9), )
if mibBuilder.loadTexts: hwCBQoSPolicyStatSubPolicyClassifierRunInfoTable.setStatus('current')
hwCBQoSPolicyStatSubPolicyClassifierRunInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyVlanid1"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyClassIndex"))
if mibBuilder.loadTexts: hwCBQoSPolicyStatSubPolicyClassifierRunInfoEntry.setStatus('current')
hwCBQoSSubPolicyClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyClassIndex.setStatus('current')
hwCBQoSSubPolicyStatClassifierMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierMatchedPackets.setStatus('current')
hwCBQoSSubPolicyStatClassifierMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierMatchedBytes.setStatus('current')
hwCBQoSSubPolicyStatClassifierPassPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierPassPackets.setStatus('current')
hwCBQoSSubPolicyStatClassifierPassBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierPassBytes.setStatus('current')
hwCBQoSSubPolicyStatClassifierDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierDropPackets.setStatus('current')
hwCBQoSSubPolicyStatClassifierDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierDropBytes.setStatus('current')
hwCBQoSSubPolicyStatClassifierQueueMatchedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierQueueMatchedPackets.setStatus('current')
hwCBQoSSubPolicyStatClassifierQueueMatchedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierQueueMatchedBytes.setStatus('current')
hwCBQoSSubPolicyStatClassifierQueueEnqueuedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierQueueEnqueuedPackets.setStatus('current')
hwCBQoSSubPolicyStatClassifierQueueEnqueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierQueueEnqueuedBytes.setStatus('current')
hwCBQoSSubPolicyStatClassifierQueueDiscardedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierQueueDiscardedPackets.setStatus('current')
hwCBQoSSubPolicyStatClassifierQueueDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierQueueDiscardedBytes.setStatus('current')
hwCBQoSSubPolicyStatClassifierCarGreenPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierCarGreenPackets.setStatus('current')
hwCBQoSSubPolicyStatClassifierCarGreenBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierCarGreenBytes.setStatus('current')
hwCBQoSSubPolicyStatClassifierCarYellowPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierCarYellowPackets.setStatus('current')
hwCBQoSSubPolicyStatClassifierCarYellowBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierCarYellowBytes.setStatus('current')
hwCBQoSSubPolicyStatClassifierCarRedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierCarRedPackets.setStatus('current')
hwCBQoSSubPolicyStatClassifierCarRedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierCarRedBytes.setStatus('current')
hwCBQoSSubPolicyStatClassifierMatchedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierMatchedPacketsRate.setStatus('current')
hwCBQoSSubPolicyStatClassifierMatchedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierMatchedBytesRate.setStatus('current')
hwCBQoSSubPolicyStatClassifierMatchedPassPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierMatchedPassPacketsRate.setStatus('current')
hwCBQoSSubPolicyStatClassifierMatchedPassBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierMatchedPassBytesRate.setStatus('current')
hwCBQoSSubPolicyStatClassifierMatchedDropPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierMatchedDropPacketsRate.setStatus('current')
hwCBQoSSubPolicyStatClassifierMatchedDropBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierMatchedDropBytesRate.setStatus('current')
hwCBQoSSubPolicyStatClassifierQueueMatchedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierQueueMatchedPacketsRate.setStatus('current')
hwCBQoSSubPolicyStatClassifierQueueMatchedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierQueueMatchedBytesRate.setStatus('current')
hwCBQoSSubPolicyStatClassifierQueueEnqueuedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierQueueEnqueuedPacketsRate.setStatus('current')
hwCBQoSSubPolicyStatClassifierQueueEnqueuedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierQueueEnqueuedBytesRate.setStatus('current')
hwCBQoSSubPolicyStatClassifierQueueDiscardedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierQueueDiscardedPacketsRate.setStatus('current')
hwCBQoSSubPolicyStatClassifierQueueDiscardedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierQueueDiscardedBytesRate.setStatus('current')
hwCBQoSSubPolicyStatClassifierCarGreenPassedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierCarGreenPassedPacketsRate.setStatus('current')
hwCBQoSSubPolicyStatClassifierCarGreenPassedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierCarGreenPassedBytesRate.setStatus('current')
hwCBQoSSubPolicyStatClassifierCarYellowPassedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierCarYellowPassedPacketsRate.setStatus('current')
hwCBQoSSubPolicyStatClassifierCarYellowPassedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierCarYellowPassedBytesRate.setStatus('current')
hwCBQoSSubPolicyStatClassifierCarRedPassedPacketsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierCarRedPassedPacketsRate.setStatus('current')
hwCBQoSSubPolicyStatClassifierCarRedPassedBytesRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 5, 6, 9, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSubPolicyStatClassifierCarRedPassedBytesRate.setStatus('current')
hwCBQoSGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 6))
hwCBQoSFrameId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSFrameId.setStatus('current')
hwCBQoSSlotId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 6, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSSlotId.setStatus('current')
hwCBQoSPortId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 6, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSPortId.setStatus('current')
hwCBQoSTrapIfName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 6, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSTrapIfName.setStatus('current')
hwCBQoSTrapType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cir", 1), ("pir", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSTrapType.setStatus('current')
hwCBQoSTrapAction = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 6, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("remark", 1), ("drop", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSTrapAction.setStatus('current')
hwCBQoSTrapPolicyName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 6, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSTrapPolicyName.setStatus('current')
hwCBQoSTrapVlanId = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 6, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSTrapVlanId.setStatus('current')
hwCBQoSTrapEgressIfName = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 6, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSTrapEgressIfName.setStatus('current')
hwCBQoSTrapDiscardPackets = MibScalar((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 6, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSTrapDiscardPackets.setStatus('current')
hwCBQoSQueryObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 7))
hwCBQoSClassifierIndexQueryTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 7, 1), )
if mibBuilder.loadTexts: hwCBQoSClassifierIndexQueryTable.setStatus('current')
hwCBQoSClassifierIndexQueryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 7, 1, 1), ).setIndexNames((0, "HUAWEI-CBQOS-MIB", "hwCBQoSQueryPolicyName"), (0, "HUAWEI-CBQOS-MIB", "hwCBQoSQueryClassifierName"))
if mibBuilder.loadTexts: hwCBQoSClassifierIndexQueryEntry.setStatus('current')
hwCBQoSQueryPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 7, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSQueryPolicyName.setStatus('current')
hwCBQoSQueryClassifierName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 7, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwCBQoSQueryClassifierName.setStatus('current')
hwCBQoSQueryClassifierIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 1, 7, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwCBQoSQueryClassifierIndex.setStatus('current')
hwCBQoSNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 2))
hwCBQoSGtsDiscardThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 2, 1)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSFrameId"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSlotId"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPortId"), ("HUAWEI-CBQOS-MIB", "hwCBQoSClassifierName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSTrapIfName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSTrapPolicyName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSTrapVlanId"), ("HUAWEI-CBQOS-MIB", "hwCBQoSTrapEgressIfName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSTrapDiscardPackets"))
if mibBuilder.loadTexts: hwCBQoSGtsDiscardThresholdTrap.setStatus('current')
hwCBQoSCarOverSpeedThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 2, 2)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSFrameId"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSlotId"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPortId"), ("HUAWEI-CBQOS-MIB", "hwCBQoSClassifierName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSTrapIfName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSTrapPolicyName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSTrapVlanId"), ("HUAWEI-CBQOS-MIB", "hwCBQoSTrapType"), ("HUAWEI-CBQOS-MIB", "hwCBQoSTrapAction"), ("HUAWEI-CBQOS-MIB", "hwCBQoSTrapDiscardPackets"))
if mibBuilder.loadTexts: hwCBQoSCarOverSpeedThresholdTrap.setStatus('current')
hwCBQoSRuleNotSupportAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 2, 3)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSRuleDirection"), ("HUAWEI-CBQOS-MIB", "hwCBQoSRuleSlotID"), ("HUAWEI-CBQOS-MIB", "hwCBQoSRuleInfo"))
if mibBuilder.loadTexts: hwCBQoSRuleNotSupportAlarm.setStatus('current')
hwCBQoSActionNotSupportAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 2, 4)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSActionDirection"), ("HUAWEI-CBQOS-MIB", "hwCBQoSActionSlotID"), ("HUAWEI-CBQOS-MIB", "hwCBQoSActionInfo"))
if mibBuilder.loadTexts: hwCBQoSActionNotSupportAlarm.setStatus('current')
hwCBQoSConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3))
hwCBQoSCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 1))
hwCBQoSCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 1, 1)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSClassifierGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSGtsGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSRemarkGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSQueueGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSWredGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSNatGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFirewallGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSamplingGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrClassApplyPolicyGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCbqRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfClassMatchRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfGtsRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfRemarkRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfQueueRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfWredRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcCbqRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcClassMatchRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcCarRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcGtsRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcRemarkRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcQueueRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcWredRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcCbqRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcClassMatchRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcCarRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcGtsRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcRemarkRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcQueueRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcWredRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanClassMatchRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSLrGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSNestPolicyGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfLrRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcLrRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcLrRunInfoGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarStatisticsGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyStatisticsGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSRuleNotSupportAlarmGroup"), ("HUAWEI-CBQOS-MIB", "hwCBQoSActionNotSupportAlarmGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSCompliance = hwCBQoSCompliance.setStatus('current')
hwCBQoSGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2))
hwCBQoSClassifierGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 1)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSClassifierIndexNext"), ("HUAWEI-CBQOS-MIB", "hwCBQoSClassifierIndex"), ("HUAWEI-CBQOS-MIB", "hwCBQoSClassifierName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSClassifierRuleCount"), ("HUAWEI-CBQOS-MIB", "hwCBQoSClassifierOperator"), ("HUAWEI-CBQOS-MIB", "hwCBQoSClassifierLayer"), ("HUAWEI-CBQOS-MIB", "hwCBQoSClassifierRowStatus"), ("HUAWEI-CBQOS-MIB", "hwCBQoSMatchRuleIndex"), ("HUAWEI-CBQOS-MIB", "hwCBQoSMatchRuleIfNot"), ("HUAWEI-CBQOS-MIB", "hwCBQoSMatchRuleType"), ("HUAWEI-CBQOS-MIB", "hwCBQoSMatchRuleStringValue"), ("HUAWEI-CBQOS-MIB", "hwCBQoSMatchMacMask"), ("HUAWEI-CBQOS-MIB", "hwCBQoSMatchRuleIntValue1"), ("HUAWEI-CBQOS-MIB", "hwCBQoSMatchRuleIntValue2"), ("HUAWEI-CBQOS-MIB", "hwCBQoSMatchRuleRowStatus"), ("HUAWEI-CBQOS-MIB", "hwCBQoSMatchVlanEndId"), ("HUAWEI-CBQOS-MIB", "hwCBQoSMatchInnerSrcIp"), ("HUAWEI-CBQOS-MIB", "hwCBQoSMatchInnerSrcIpMask"), ("HUAWEI-CBQOS-MIB", "hwCBQoSMatchInnerDstIp"), ("HUAWEI-CBQOS-MIB", "hwCBQoSMatchInnerDstIpMask"), ("HUAWEI-CBQOS-MIB", "hwCBQoSMatchInnerSrcPort"), ("HUAWEI-CBQOS-MIB", "hwCBQoSMatchInnerDstPort"), ("HUAWEI-CBQOS-MIB", "hwCBQoSMatchInnerProtocol"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSClassifierGroup = hwCBQoSClassifierGroup.setStatus('current')
hwCBQoSBehaviorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 2)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndexNext"), ("HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorIndex"), ("HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSBehaviorRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSBehaviorGroup = hwCBQoSBehaviorGroup.setStatus('current')
hwCBQoSCarGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 3)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSCarCir"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarCbs"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarEbs"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarGreenAction"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarGreenRemarkValue"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarRedAction"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarRedRemarkValue"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarPir"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarPbs"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarYellowAction"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarYellowRemarkValue"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarRowStatus"), ("HUAWEI-CBQOS-MIB", "hwCBQosCarAggregation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSCarGroup = hwCBQoSCarGroup.setStatus('current')
hwCBQoSGtsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 4)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSGtsCir"), ("HUAWEI-CBQOS-MIB", "hwCBQoSGtsCbs"), ("HUAWEI-CBQOS-MIB", "hwCBQoSGtsPir"), ("HUAWEI-CBQOS-MIB", "hwCBQoSGtsEbs"), ("HUAWEI-CBQOS-MIB", "hwCBQoSGtsQueueLength"), ("HUAWEI-CBQOS-MIB", "hwCBQoSGtsRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSGtsGroup = hwCBQoSGtsGroup.setStatus('current')
hwCBQoSRemarkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 5)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSRemarkType"), ("HUAWEI-CBQOS-MIB", "hwCBQoSRemarkValue"), ("HUAWEI-CBQOS-MIB", "hwCBQoSRemarkRowStatus"), ("HUAWEI-CBQOS-MIB", "hwCBQoSRemarkStringValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSRemarkGroup = hwCBQoSRemarkGroup.setStatus('current')
hwCBQoSQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 6)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSQueueType"), ("HUAWEI-CBQOS-MIB", "hwCBQoSQueueDropType"), ("HUAWEI-CBQOS-MIB", "hwCBQoSQueueLength"), ("HUAWEI-CBQOS-MIB", "hwCBQoSQueueBandwidthUnit"), ("HUAWEI-CBQOS-MIB", "hwCBQoSQueueBandwidthValue"), ("HUAWEI-CBQOS-MIB", "hwCBQoSQueueCbs"), ("HUAWEI-CBQOS-MIB", "hwCBQoSQueueQueueNumber"), ("HUAWEI-CBQOS-MIB", "hwCBQoSQueueRowStatus"), ("HUAWEI-CBQOS-MIB", "hwCBQoSQueueCbsRatio"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSQueueGroup = hwCBQoSQueueGroup.setStatus('current')
hwCBQoSWredGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 7)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSWredType"), ("HUAWEI-CBQOS-MIB", "hwCBQoSWredWeightConst"), ("HUAWEI-CBQOS-MIB", "hwCBQoSWredClassValue"), ("HUAWEI-CBQOS-MIB", "hwCBQoSWredClassLowLimit"), ("HUAWEI-CBQOS-MIB", "hwCBQoSWredClassHighLimit"), ("HUAWEI-CBQOS-MIB", "hwCBQoSWredClassDiscardProb"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSWredGroup = hwCBQoSWredGroup.setStatus('current')
hwCBQoSNatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 9)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSNatServiceClass"), ("HUAWEI-CBQOS-MIB", "hwCBQoSNatRowStatus"), ("HUAWEI-CBQOS-MIB", "hwCBQoSNatNoPat"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSNatGroup = hwCBQoSNatGroup.setStatus('current')
hwCBQoSFirewallGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 10)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSFirewallAction"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFirewallRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSFirewallGroup = hwCBQoSFirewallGroup.setStatus('current')
hwCBQoSSamplingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 11)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSSamplingNum"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSamplingRowStatus"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfSamplingType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSSamplingGroup = hwCBQoSSamplingGroup.setStatus('current')
hwCBQoSEgressGtsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 12)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSEgressGtsCir"), ("HUAWEI-CBQOS-MIB", "hwCBQoSEgressGtsPir"), ("HUAWEI-CBQOS-MIB", "hwCBQoSEgressGtsRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSEgressGtsGroup = hwCBQoSEgressGtsGroup.setStatus('current')
hwCBQoSServiceClassGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 13)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSServiceClassQueueId"), ("HUAWEI-CBQOS-MIB", "hwCBQoSServiceClassColor"), ("HUAWEI-CBQOS-MIB", "hwCBQoSServiceClassRowStatus"), ("HUAWEI-CBQOS-MIB", "hwCBQoSServiceClassNoremarkflag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSServiceClassGroup = hwCBQoSServiceClassGroup.setStatus('current')
hwCBQoSPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 14)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyIndexNext"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyIndex"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassCount"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyRowStatus"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassIndex"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassClassifierIndex"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassClassifierName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassBehaviorIndex"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassBehaviorName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyConfigMode"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassPrecedence"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassRowStatus"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyShareFlag"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyStatisticsFlag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSPolicyGroup = hwCBQoSPolicyGroup.setStatus('current')
hwCBQoSIfApplyPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 15)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyIfIndex"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyDirection"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyRowStatus"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfApplyPolicyLinkLayer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSIfApplyPolicyGroup = hwCBQoSIfApplyPolicyGroup.setStatus('current')
hwCBQoSAtmPvcApplyPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 16)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyIfIndex"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVPI"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyVCI"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyDirection"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcApplyPolicyRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSAtmPvcApplyPolicyGroup = hwCBQoSAtmPvcApplyPolicyGroup.setStatus('current')
hwCBQoSIfVlanApplyPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 17)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyIfIndex"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyDirection"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyVlanid1"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyVlanid2"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyRowStatus"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanApplyPolicyLinkLayer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSIfVlanApplyPolicyGroup = hwCBQoSIfVlanApplyPolicyGroup.setStatus('current')
hwCBQoSFrClassApplyPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 18)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSFrClassApplyPolicyFrClassName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrClassApplyPolicyDirection"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrClassApplyPolicyName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrClassApplyPolicyRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSFrClassApplyPolicyGroup = hwCBQoSFrClassApplyPolicyGroup.setStatus('current')
hwCBQoSFrPvcApplyPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 19)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyIfIndex"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDlciNum"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyDirection"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcApplyPolicyName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSFrPvcApplyPolicyGroup = hwCBQoSFrPvcApplyPolicyGroup.setStatus('current')
hwCBQoSIfCbqRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 20)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSIfCbqQueueSize"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCbqDiscard"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCbqEfQueueSize"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCbqAfQueueSize"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCbqBeQueueSize"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCbqBeActiveQueueNum"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCbqBeMaxActiveQueueNum"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCbqBeTotalQueueNum"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCbqAfAllocatedQueueNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSIfCbqRunInfoGroup = hwCBQoSIfCbqRunInfoGroup.setStatus('current')
hwCBQoSIfClassMatchRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 21)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSIfClassMatchedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfClassMatchedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfClassAverageRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSIfClassMatchRunInfoGroup = hwCBQoSIfClassMatchRunInfoGroup.setStatus('current')
hwCBQoSIfCarRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 22)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarGreenPassedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarGreenPassedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarGreenRemarkedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarGreenRemarkedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarGreenDiscardedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarGreenDiscardedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarYellowPassedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarYellowPassedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarYellowRemarkedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarYellowRemarkedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarYellowDiscardedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarYellowDiscardedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarRedPassedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarRedPassedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarRedRemarkedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarRedRemarkedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarRedDiscardedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfCarRedDiscardedBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSIfCarRunInfoGroup = hwCBQoSIfCarRunInfoGroup.setStatus('current')
hwCBQoSIfGtsRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 23)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSIfGtsPassedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfGtsPassedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfGtsDiscardedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfGtsDiscardedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfGtsDelayedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfGtsDelayedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfGtsQueueSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSIfGtsRunInfoGroup = hwCBQoSIfGtsRunInfoGroup.setStatus('current')
hwCBQoSIfRemarkRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 24)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSIfRemarkedPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSIfRemarkRunInfoGroup = hwCBQoSIfRemarkRunInfoGroup.setStatus('current')
hwCBQoSIfQueueRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 25)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSIfQueueMatchedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfQueueMatchedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfQueueEnqueuedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfQueueEnqueuedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfQueueDiscardedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfQueueDiscardedBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSIfQueueRunInfoGroup = hwCBQoSIfQueueRunInfoGroup.setStatus('current')
hwCBQoSIfWredRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 26)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSIfWredRandomDiscardedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfWredTailDiscardedPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSIfWredRunInfoGroup = hwCBQoSIfWredRunInfoGroup.setStatus('current')
hwCBQoSAtmPvcCbqRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 27)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcCbqQueueSize"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcCbqDiscard"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcCbqEfQueueSize"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcCbqAfQueueSize"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcCbqBeQueueSize"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcCbqBeActiveQueueNum"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcCbqBeMaxActiveQueueNum"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcCbqBeTotalQueueNum"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcCbqAfAllocatedQueueNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSAtmPvcCbqRunInfoGroup = hwCBQoSAtmPvcCbqRunInfoGroup.setStatus('current')
hwCBQoSAtmPvcClassMatchRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 28)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcClassMatchPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcClassMatchBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcClassAverageRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSAtmPvcClassMatchRunInfoGroup = hwCBQoSAtmPvcClassMatchRunInfoGroup.setStatus('current')
hwCBQoSAtmPvcCarRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 29)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcCarConformPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcCarConformBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcCarExceedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcCarExceedBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSAtmPvcCarRunInfoGroup = hwCBQoSAtmPvcCarRunInfoGroup.setStatus('current')
hwCBQoSAtmPvcGtsRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 30)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcGtsPassedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcGtsPassedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcGtsDiscardedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcGtsDiscardedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcGtsDelayedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcGtsDelayedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcGtsQueueSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSAtmPvcGtsRunInfoGroup = hwCBQoSAtmPvcGtsRunInfoGroup.setStatus('current')
hwCBQoSAtmPvcRemarkRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 31)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcRemarkedPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSAtmPvcRemarkRunInfoGroup = hwCBQoSAtmPvcRemarkRunInfoGroup.setStatus('current')
hwCBQoSAtmPvcQueueRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 32)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcQueueMatchedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcQueueMatchedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcQueueEnqueuedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcQueueEnqueuedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcQueueDiscardedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcQueueDiscardedBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSAtmPvcQueueRunInfoGroup = hwCBQoSAtmPvcQueueRunInfoGroup.setStatus('current')
hwCBQoSAtmPvcWredRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 33)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcWredRandomDiscardedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcWredTailDiscardedPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSAtmPvcWredRunInfoGroup = hwCBQoSAtmPvcWredRunInfoGroup.setStatus('current')
hwCBQoSFrPvcCbqRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 34)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcCbqQueueSize"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcCbqDiscard"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcCbqEfQueueSize"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcCbqAfQueueSize"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcCbqBeQueueSize"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcCbqBeActiveQueueNum"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcCbqBeMaxActiveQueueNum"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcCbqBeTotalQueueNum"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcCbqAfAllocatedQueueNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSFrPvcCbqRunInfoGroup = hwCBQoSFrPvcCbqRunInfoGroup.setStatus('current')
hwCBQoSFrPvcClassMatchRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 35)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcClassMatchedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcClassMatchedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcClassAverageRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSFrPvcClassMatchRunInfoGroup = hwCBQoSFrPvcClassMatchRunInfoGroup.setStatus('current')
hwCBQoSFrPvcCarRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 36)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcCarConformPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcCarConformBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcCarExceedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcCarExceedBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSFrPvcCarRunInfoGroup = hwCBQoSFrPvcCarRunInfoGroup.setStatus('current')
hwCBQoSFrPvcGtsRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 37)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcGtsPassedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcGtsPassedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcGtsDiscardedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcGtsDiscardedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcGtsDelayedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcGtsDelayedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcGtsQueueSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSFrPvcGtsRunInfoGroup = hwCBQoSFrPvcGtsRunInfoGroup.setStatus('current')
hwCBQoSFrPvcRemarkRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 38)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcRemarkedPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSFrPvcRemarkRunInfoGroup = hwCBQoSFrPvcRemarkRunInfoGroup.setStatus('current')
hwCBQoSFrPvcQueueRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 39)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcQueueMatchedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcQueueMatchedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcQueueEnqueuedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcQueueEnqueuedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcQueueDiscardedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcQueueDiscardedBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSFrPvcQueueRunInfoGroup = hwCBQoSFrPvcQueueRunInfoGroup.setStatus('current')
hwCBQoSFrPvcWredRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 40)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcWredRandomDiscardedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcWredTailDiscardedPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSFrPvcWredRunInfoGroup = hwCBQoSFrPvcWredRunInfoGroup.setStatus('current')
hwCBQoSIfVlanClassMatchRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 41)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSIfVlanClassMatchedPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSIfVlanClassMatchRunInfoGroup = hwCBQoSIfVlanClassMatchRunInfoGroup.setStatus('current')
hwCBQoSLrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 42)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSLrUnit"), ("HUAWEI-CBQOS-MIB", "hwCBQoSLrCir"), ("HUAWEI-CBQOS-MIB", "hwCBQoSLrCbs"), ("HUAWEI-CBQOS-MIB", "hwCBQoSLrEbs"), ("HUAWEI-CBQOS-MIB", "hwCBQoSLrRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSLrGroup = hwCBQoSLrGroup.setStatus('current')
hwCBQoSNestPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 43)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSNestPolicyName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSNestPolicyRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSNestPolicyGroup = hwCBQoSNestPolicyGroup.setStatus('current')
hwCBQoSIfLrRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 44)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSIfLrPassedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfLrPassedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfLrDiscardedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfLrDiscardedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfLrDelayedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSIfLrDelayedBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSIfLrRunInfoGroup = hwCBQoSIfLrRunInfoGroup.setStatus('current')
hwCBQoSAtmPvcLrRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 45)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcLrPassedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcLrPassedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcLrDiscardedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcLrDiscardedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcLrDelayedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSAtmPvcLrDelayedBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSAtmPvcLrRunInfoGroup = hwCBQoSAtmPvcLrRunInfoGroup.setStatus('current')
hwCBQoSFrPvcLrRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 46)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcLrPassedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcLrPassedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcLrDiscardedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcLrDiscardedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcLrDelayedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSFrPvcLrDelayedBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSFrPvcLrRunInfoGroup = hwCBQoSFrPvcLrRunInfoGroup.setStatus('current')
hwCBQoSCarStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 47)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSCarConformedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarConformedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarConformedPacketRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarConformedByteRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarExceededPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarExceededBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarExceededPacketRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarExceededByteRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarOverflowPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarOverflowBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarOverflowPacketRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarOverflowByteRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarPassedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarPassedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarDroppedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarDroppedBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSCarStatisticsGroup = hwCBQoSCarStatisticsGroup.setStatus('current')
hwCBQoSPolicyStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 48)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyMatchedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyMatchedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyUnmatchedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyUnmatchedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyMatchedPassPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyMatchedPassBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyMatchedDropPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyMatchedDropBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyResetFlag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSPolicyStatisticsGroup = hwCBQoSPolicyStatisticsGroup.setStatus('current')
hwCBQoSRedirectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 49)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSRedirectType"), ("HUAWEI-CBQOS-MIB", "hwCBQoSRedirectIpAddress"), ("HUAWEI-CBQOS-MIB", "hwCBQoSRedirectIfIndex"), ("HUAWEI-CBQOS-MIB", "hwCBQoSRedirectVlanId"), ("HUAWEI-CBQOS-MIB", "hwCBQoSRedirectCtrlType"), ("HUAWEI-CBQOS-MIB", "hwCBQoSRedirectRowStatus"), ("HUAWEI-CBQOS-MIB", "hwCBQoSRedirectLSPDstIpAddress"), ("HUAWEI-CBQOS-MIB", "hwCBQoSRedirectLSPSecondary"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSRedirectGroup = hwCBQoSRedirectGroup.setStatus('current')
hwCBQoSGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 50)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSFrameId"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSlotId"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPortId"), ("HUAWEI-CBQOS-MIB", "hwCBQoSTrapIfName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSTrapType"), ("HUAWEI-CBQOS-MIB", "hwCBQoSTrapAction"), ("HUAWEI-CBQOS-MIB", "hwCBQoSTrapPolicyName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSTrapVlanId"), ("HUAWEI-CBQOS-MIB", "hwCBQoSTrapEgressIfName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSTrapDiscardPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSGeneralGroup = hwCBQoSGeneralGroup.setStatus('current')
hwCBQoSNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 51)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSGtsDiscardThresholdTrap"), ("HUAWEI-CBQOS-MIB", "hwCBQoSCarOverSpeedThresholdTrap"), ("HUAWEI-CBQOS-MIB", "hwCBQoSRuleNotSupportAlarm"), ("HUAWEI-CBQOS-MIB", "hwCBQoSActionNotSupportAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSNotificationsGroup = hwCBQoSNotificationsGroup.setStatus('current')
hwCBQoSPolicyShareModeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 52)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyShareModeFlag"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyShareModeRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSPolicyShareModeGroup = hwCBQoSPolicyShareModeGroup.setStatus('current')
hwCBQoSClassifierStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 53)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyClassifierIndex"), ("HUAWEI-CBQOS-MIB", "hwCBQoSClassifierMatchedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSClassifierMatchedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSClassifierMatchedPassPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSClassifierMatchedPassBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSClassifierMatchedDropPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSClassifierMatchedDropBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSClassifierStatisticsGroup = hwCBQoSClassifierStatisticsGroup.setStatus('current')
hwCBQoSPolicyStatisticsClassifierGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 54)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyStatClassifierMatchedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyStatClassifierMatchedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyStatClassifierUnmatchedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyStatClassifierUnmatchedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyStatClassifierMatchedPassPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyStatClassifierMatchedPassBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyStatClassifierMatchedDropPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSPolicyStatClassifierMatchedDropBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSPolicyStatisticsClassifierGroup = hwCBQoSPolicyStatisticsClassifierGroup.setStatus('current')
hwCBQoSVlanApplyPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 55)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSVlanApplyPolicyDirection"), ("HUAWEI-CBQOS-MIB", "hwCBQoSVlanApplyPolicyName"), ("HUAWEI-CBQOS-MIB", "hwCBQoSVlanApplyPolicyRowStatus"), ("HUAWEI-CBQOS-MIB", "hwCBQoSVlanApplyPolicyVlanId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSVlanApplyPolicyGroup = hwCBQoSVlanApplyPolicyGroup.setStatus('current')
hwCBQoSSVlanClassMatchGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 56)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSVlanClassMatchedPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSSVlanClassMatchGroup = hwCBQoSSVlanClassMatchGroup.setStatus('current')
hwCBQoSSVlanCarMatchGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 57)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSVlanCarPassedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSVlanCarDiscardedPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSSVlanCarMatchGroup = hwCBQoSSVlanCarMatchGroup.setStatus('current')
hwCBQoSRandomDiscardCfgInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 58)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSRandomPercent"), ("HUAWEI-CBQOS-MIB", "hwCBQoSRandomDiscardRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSRandomDiscardCfgInfoGroup = hwCBQoSRandomDiscardCfgInfoGroup.setStatus('current')
hwCBQoSDenyPacketLengthCfgInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 59)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSDenyPacketLengthOptype"), ("HUAWEI-CBQOS-MIB", "hwCBQoSDenyPacketLengthMax"), ("HUAWEI-CBQOS-MIB", "hwCBQoSDenyPacketLengthMin"), ("HUAWEI-CBQOS-MIB", "hwCBQoSDenyPacketLength"), ("HUAWEI-CBQOS-MIB", "hwCBQoSDenyPacketLengthRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSDenyPacketLengthCfgInfoGroup = hwCBQoSDenyPacketLengthCfgInfoGroup.setStatus('current')
hwCBQoSDAAStatisticsCfgInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 60)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSDAAStatisticsSummary"), ("HUAWEI-CBQOS-MIB", "hwCBQoSDAAStatisticsRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSDAAStatisticsCfgInfoGroup = hwCBQoSDAAStatisticsCfgInfoGroup.setStatus('current')
hwCBQoSDAATariffLevelCfgInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 61)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSDAATariffLevelValue"), ("HUAWEI-CBQOS-MIB", "hwCBQoSDAATariffLevelRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSDAATariffLevelCfgInfoGroup = hwCBQoSDAATariffLevelCfgInfoGroup.setStatus('current')
hwCBQoSRuleNotSupportAlarmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 62)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSRuleDirection"), ("HUAWEI-CBQOS-MIB", "hwCBQoSRuleSlotID"), ("HUAWEI-CBQOS-MIB", "hwCBQoSRuleInfo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSRuleNotSupportAlarmGroup = hwCBQoSRuleNotSupportAlarmGroup.setStatus('current')
hwCBQoSActionNotSupportAlarmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 63)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSActionDirection"), ("HUAWEI-CBQOS-MIB", "hwCBQoSActionSlotID"), ("HUAWEI-CBQOS-MIB", "hwCBQoSActionInfo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSActionNotSupportAlarmGroup = hwCBQoSActionNotSupportAlarmGroup.setStatus('current')
hwCBQoSPolicyStatSubPolicyClassifierRunInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 32, 1, 3, 2, 64)).setObjects(("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierMatchedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierMatchedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierPassPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierPassBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierDropPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierDropBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierQueueMatchedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierQueueMatchedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierQueueEnqueuedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierQueueEnqueuedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierQueueDiscardedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierQueueDiscardedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierCarGreenPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierCarGreenBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierCarYellowPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierCarYellowBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierCarRedPackets"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierCarRedBytes"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierMatchedPacketsRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierMatchedBytesRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierMatchedPassPacketsRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierMatchedPassBytesRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierMatchedDropPacketsRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierMatchedDropBytesRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierQueueMatchedPacketsRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierQueueMatchedBytesRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierQueueEnqueuedPacketsRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierQueueEnqueuedBytesRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierQueueDiscardedPacketsRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierQueueDiscardedBytesRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierCarGreenPassedPacketsRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierCarGreenPassedBytesRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierCarYellowPassedPacketsRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierCarYellowPassedBytesRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierCarRedPassedPacketsRate"), ("HUAWEI-CBQOS-MIB", "hwCBQoSSubPolicyStatClassifierCarRedPassedBytesRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwCBQoSPolicyStatSubPolicyClassifierRunInfoGroup = hwCBQoSPolicyStatSubPolicyClassifierRunInfoGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-CBQOS-MIB", hwCBQoSPolicyMatchedPassPacketsRate=hwCBQoSPolicyMatchedPassPacketsRate, hwCBQoSAtmPvcQueueMatchedBytes=hwCBQoSAtmPvcQueueMatchedBytes, hwCBQoSIfWredRunInfoGroup=hwCBQoSIfWredRunInfoGroup, hwCBQoSIfCarGreenRemarkedPacketsRate=hwCBQoSIfCarGreenRemarkedPacketsRate, hwCBQoSMatchInnerSrcIp=hwCBQoSMatchInnerSrcIp, hwCBQoSWredClassHighLimit=hwCBQoSWredClassHighLimit, hwCBQoSNatAddressGroup=hwCBQoSNatAddressGroup, hwCBQoSClassifierMatchedPassBytes=hwCBQoSClassifierMatchedPassBytes, hwCBQoSQueueDropType=hwCBQoSQueueDropType, hwCBQoSPolicyShareModeFlag=hwCBQoSPolicyShareModeFlag, hwCBQoSPolicyStatSubPolicyClassifierRunInfoTable=hwCBQoSPolicyStatSubPolicyClassifierRunInfoTable, hwCBQoSQueryClassifierIndex=hwCBQoSQueryClassifierIndex, hwCBQoSAtmPvcCarRunInfoGroup=hwCBQoSAtmPvcCarRunInfoGroup, hwCBQoSServiceClassNoremarkflag=hwCBQoSServiceClassNoremarkflag, hwCBQoSRedirectCtrlType=hwCBQoSRedirectCtrlType, hwCBQoSFrPvcCarRunInfoTable=hwCBQoSFrPvcCarRunInfoTable, hwCBQoSAtmPvcGtsRunInfoGroup=hwCBQoSAtmPvcGtsRunInfoGroup, hwCBQoSRedirectMULIpAddress4=hwCBQoSRedirectMULIpAddress4, hwCBQoSClassifierMatchedBytes=hwCBQoSClassifierMatchedBytes, hwCBQoSMatchInnerDstPort=hwCBQoSMatchInnerDstPort, hwCBQoSIfFilteredPackets=hwCBQoSIfFilteredPackets, hwCBQoSFrPvcCarExceedBytesRate=hwCBQoSFrPvcCarExceedBytesRate, hwCBQoSPolicyStatClassifierMatchedPassBytes=hwCBQoSPolicyStatClassifierMatchedPassBytes, hwCBQoSIfVlanClassMatchRunInfoTable=hwCBQoSIfVlanClassMatchRunInfoTable, hwCBQoSAtmPvcWredRunInfoGroup=hwCBQoSAtmPvcWredRunInfoGroup, hwCBQoSGtsQueueLength=hwCBQoSGtsQueueLength, hwCBQoSIfApplyPolicyLinkLayer=hwCBQoSIfApplyPolicyLinkLayer, hwCBQoSIfApplyPolicyDirection=hwCBQoSIfApplyPolicyDirection, hwCBQoSIfQueueMatchedBytesRate=hwCBQoSIfQueueMatchedBytesRate, hwCBQoSRedirectMULIpAddress2=hwCBQoSRedirectMULIpAddress2, hwCBQoSQueueCbs=hwCBQoSQueueCbs, hwCBQoSIfGtsPassedPackets=hwCBQoSIfGtsPassedPackets, hwCBQoSPolicyStatSubPolicyClassifierRunInfoGroup=hwCBQoSPolicyStatSubPolicyClassifierRunInfoGroup, hwCBQoSUrpfCfgInfoEntry=hwCBQoSUrpfCfgInfoEntry, hwCBQoSFirewallCfgInfoTable=hwCBQoSFirewallCfgInfoTable, hwCBQoSSubPolicyStatClassifierMatchedPacketsRate=hwCBQoSSubPolicyStatClassifierMatchedPacketsRate, hwCBQoSMatchRuleIndex=hwCBQoSMatchRuleIndex, hwCBQoSMultiPolicyUnmatchedPackets=hwCBQoSMultiPolicyUnmatchedPackets, hwCBQoSRemarkIpDfRowStatus=hwCBQoSRemarkIpDfRowStatus, hwCBQoSFrPvcQueueEnqueuedBytesRate=hwCBQoSFrPvcQueueEnqueuedBytesRate, hwCBQoSSubPolicyStatClassifierCarRedPackets=hwCBQoSSubPolicyStatClassifierCarRedPackets, hwCBQoSSlotId=hwCBQoSSlotId, hwCBQoSBehaviorName=hwCBQoSBehaviorName, hwCBQoSCarGreenRemarkValue=hwCBQoSCarGreenRemarkValue, hwCBQoSPolicyRowStatus=hwCBQoSPolicyRowStatus, hwCBQoSAtmPvcQueueMatchedPackets=hwCBQoSAtmPvcQueueMatchedPackets, hwCBQoSLrRowStatus=hwCBQoSLrRowStatus, hwCBQoSIfGtsRunInfoEntry=hwCBQoSIfGtsRunInfoEntry, hwCBQoSMatchInnerProtocol=hwCBQoSMatchInnerProtocol, hwCBQoSPolicyClassCfgInfoTable=hwCBQoSPolicyClassCfgInfoTable, hwCBQoSAtmPvcQueueMatchedBytesRate=hwCBQoSAtmPvcQueueMatchedBytesRate, hwCBQoSFrPvcCbqAfQueueSize=hwCBQoSFrPvcCbqAfQueueSize, hwCBQoSFrPvcClassMatchRunInfoEntry=hwCBQoSFrPvcClassMatchRunInfoEntry, hwCBQoSFrPvcQueueRunInfoEntry=hwCBQoSFrPvcQueueRunInfoEntry, hwCBQoSPolicyStatClassifierMatchedDropBytesRate=hwCBQoSPolicyStatClassifierMatchedDropBytesRate, hwCBQoSFrPvcWredTailDiscardedPackets=hwCBQoSFrPvcWredTailDiscardedPackets, hwCBQoSPolicyClassifierIndex=hwCBQoSPolicyClassifierIndex, hwCBQoSPolicyClassCount=hwCBQoSPolicyClassCount, hwCBQoSPolicyClassRowStatus=hwCBQoSPolicyClassRowStatus, hwCBQoSRedirectMULCtrlType=hwCBQoSRedirectMULCtrlType, hwCBQoSFrPvcWredRunInfoTable=hwCBQoSFrPvcWredRunInfoTable, hwCBQoSLoadBalanceRowStatus=hwCBQoSLoadBalanceRowStatus, hwCBQoSFrPvcLrPassedBytes=hwCBQoSFrPvcLrPassedBytes, hwCBQoSCompliances=hwCBQoSCompliances, hwCBQoSCarOverflowPackets=hwCBQoSCarOverflowPackets, hwCBQoSDenyPacketLengthMin=hwCBQoSDenyPacketLengthMin, hwCBQoSAtmPvcGtsRunInfoEntry=hwCBQoSAtmPvcGtsRunInfoEntry, hwCBQoSMultiPolicyStatClassifierMatchedPassBytes=hwCBQoSMultiPolicyStatClassifierMatchedPassBytes, hwCBQoSMatchRuleRowStatus=hwCBQoSMatchRuleRowStatus, hwCBQoSMatchRuleCfgInfoEntry=hwCBQoSMatchRuleCfgInfoEntry, hwCBQoSIfCarYellowRemarkedPackets=hwCBQoSIfCarYellowRemarkedPackets, hwCBQoSNatCfgInfoTable=hwCBQoSNatCfgInfoTable, hwCBQoSNestPolicyGroup=hwCBQoSNestPolicyGroup, hwCBQoSDAAStatisticsRowStatus=hwCBQoSDAAStatisticsRowStatus, hwCBQoSCarRowStatus=hwCBQoSCarRowStatus, hwCBQoSPolicyConfigMode=hwCBQoSPolicyConfigMode, hwCBQoSIfQueueEnqueuedBytesRate=hwCBQoSIfQueueEnqueuedBytesRate, hwCBQoSVlanApplyPolicyGroup=hwCBQoSVlanApplyPolicyGroup, hwCBQoSIfApplyMultiPolicyRowStatus=hwCBQoSIfApplyMultiPolicyRowStatus, hwCBQoSQueueCfgInfoTable=hwCBQoSQueueCfgInfoTable, hwCBQoSIfCbqEfQueueSize=hwCBQoSIfCbqEfQueueSize, hwCBQoSAtmPvcQueueRunInfoTable=hwCBQoSAtmPvcQueueRunInfoTable, hwCBQoSIfVlanClassMatchRunInfoEntry=hwCBQoSIfVlanClassMatchRunInfoEntry, hwCBQoSTrapPolicyName=hwCBQoSTrapPolicyName, hwCBQoSPolicyStatisticsClassifierTable=hwCBQoSPolicyStatisticsClassifierTable, hwCBQoSIfApplyPolicyGroup=hwCBQoSIfApplyPolicyGroup, hwCBQoSDropProfileType=hwCBQoSDropProfileType, hwCBQoSVlanCarRunInfoTable=hwCBQoSVlanCarRunInfoTable, hwCBQoSDAAStatisticsCfgInfoGroup=hwCBQoSDAAStatisticsCfgInfoGroup, hwCBQoSMatchMacMask=hwCBQoSMatchMacMask, hwCBQoSIfCarRedDiscardedBytesRate=hwCBQoSIfCarRedDiscardedBytesRate, hwCBQoSCarExceededBytes=hwCBQoSCarExceededBytes, hwCBQoSIfQueueMatchedPacketsRate=hwCBQoSIfQueueMatchedPacketsRate, hwCBQoSVlanApplyPolicyRowStatus=hwCBQoSVlanApplyPolicyRowStatus, hwCBQoSIfGtsPassedBytes=hwCBQoSIfGtsPassedBytes, hwCBQoSIfWredTailDiscardedPackets=hwCBQoSIfWredTailDiscardedPackets, hwCBQoSAtmPvcCarConformBytes=hwCBQoSAtmPvcCarConformBytes, hwCBQoSIfCarRunInfoGroup=hwCBQoSIfCarRunInfoGroup, hwCBQoSAtmPvcCarConformBytesRate=hwCBQoSAtmPvcCarConformBytesRate, hwCBQoSDropProfileIndex=hwCBQoSDropProfileIndex, hwCBQoSAtmPvcCarExceedBytes=hwCBQoSAtmPvcCarExceedBytes, hwCBQoSClassifierCfgInfoEntry=hwCBQoSClassifierCfgInfoEntry, hwCBQoSClassifierStatisticsGroup=hwCBQoSClassifierStatisticsGroup, hwCBQoSUrpfRowStatus=hwCBQoSUrpfRowStatus, hwCBQoSServiceClassGroup=hwCBQoSServiceClassGroup, hwCBQoSNestPolicyCfgInfoEntry=hwCBQoSNestPolicyCfgInfoEntry, hwCBQoSGtsCir=hwCBQoSGtsCir, hwCBQoSIfVlanStaticsObjects=hwCBQoSIfVlanStaticsObjects, hwCBQoSIfLrDiscardedBytes=hwCBQoSIfLrDiscardedBytes, hwCBQoSIfCbqBeTotalQueueNum=hwCBQoSIfCbqBeTotalQueueNum, hwCBQoSVlanClassDroppedPackets=hwCBQoSVlanClassDroppedPackets, hwCBQoSAtmPvcCbqRunInfoTable=hwCBQoSAtmPvcCbqRunInfoTable, hwCBQoSAtmPvcCarExceedBytesRate=hwCBQoSAtmPvcCarExceedBytesRate, hwCBQoSIfCarRunInfoTable=hwCBQoSIfCarRunInfoTable, hwCBQoSIfUrpfPassedPackets=hwCBQoSIfUrpfPassedPackets, hwCBQoSGtsGroup=hwCBQoSGtsGroup, hwCBQoSRemarkCfgInfoEntry=hwCBQoSRemarkCfgInfoEntry, hwCBQoSSubPolicyStatClassifierDropBytes=hwCBQoSSubPolicyStatClassifierDropBytes, hwCBQoSNestPolicyCfgInfoTable=hwCBQoSNestPolicyCfgInfoTable, hwCBQoSServiceClassRowStatus=hwCBQoSServiceClassRowStatus, hwCBQoSUrpfCtrlType=hwCBQoSUrpfCtrlType, hwCBQoSFrPvcGtsPassedBytes=hwCBQoSFrPvcGtsPassedBytes, hwCBQoSAtmPvcApplyPolicyVPI=hwCBQoSAtmPvcApplyPolicyVPI, hwCBQoSIfRemarkRunInfoGroup=hwCBQoSIfRemarkRunInfoGroup, hwCBQoSNatServiceClass=hwCBQoSNatServiceClass, hwCBQoSMirrorRowStatus=hwCBQoSMirrorRowStatus, hwCBQoSDenyPacketLengthOptype=hwCBQoSDenyPacketLengthOptype, hwCBQoSDropProfileClassValue=hwCBQoSDropProfileClassValue, hwCBQoSIfApplyMultiPolicyIfIndex=hwCBQoSIfApplyMultiPolicyIfIndex, hwCBQoSIfCbqDiscard=hwCBQoSIfCbqDiscard, hwCBQoSIfClassMatchRunInfoGroup=hwCBQoSIfClassMatchRunInfoGroup, hwCBQoSAtmPvcWredTailDiscardedPackets=hwCBQoSAtmPvcWredTailDiscardedPackets, hwCBQoSMatchInnerDstIpMask=hwCBQoSMatchInnerDstIpMask, hwCBQoSSubPolicyStatClassifierQueueDiscardedPacketsRate=hwCBQoSSubPolicyStatClassifierQueueDiscardedPacketsRate, hwCBQoSMatchVlanBeginId=hwCBQoSMatchVlanBeginId, WredType=WredType, hwCBQoSWredCfgRowStatus=hwCBQoSWredCfgRowStatus, hwCBQoSFrPvcQueueDiscardedBytes=hwCBQoSFrPvcQueueDiscardedBytes, hwCBQoSMatchInnerDstIp=hwCBQoSMatchInnerDstIp, hwCBQoSVsiApplyPolicyVsiIndex=hwCBQoSVsiApplyPolicyVsiIndex, hwCBQoSSubPolicyStatClassifierMatchedDropPacketsRate=hwCBQoSSubPolicyStatClassifierMatchedDropPacketsRate, hwCBQoSSuppressionCfgInfoTable=hwCBQoSSuppressionCfgInfoTable, hwCBQoSQueryClassifierName=hwCBQoSQueryClassifierName, hwCBQoSSubPolicyStatClassifierCarYellowBytes=hwCBQoSSubPolicyStatClassifierCarYellowBytes, hwCBQoSNatNoPat=hwCBQoSNatNoPat, hwCBQoSAtmPvcGtsDiscardedPackets=hwCBQoSAtmPvcGtsDiscardedPackets, hwCBQoSNatRowStatus=hwCBQoSNatRowStatus, hwCBQoSIfUrpfRunInfoEntry=hwCBQoSIfUrpfRunInfoEntry, hwCBQoSEgressGtsRowStatus=hwCBQoSEgressGtsRowStatus, hwCBQoSPolicyResetFlag=hwCBQoSPolicyResetFlag, hwCBQoSMultiPolicyStatClassifierMatchedDropBytes=hwCBQoSMultiPolicyStatClassifierMatchedDropBytes, hwCBQosCarAggregation=hwCBQosCarAggregation, hwCBQoSMultiPolicyUnmatchedBytes=hwCBQoSMultiPolicyUnmatchedBytes, hwCBQoSSubPolicyStatClassifierCarGreenPackets=hwCBQoSSubPolicyStatClassifierCarGreenPackets, hwCBQoSIfCarGreenPassedBytesRate=hwCBQoSIfCarGreenPassedBytesRate, hwCBQoSFrClassApplyPolicyFrClassName=hwCBQoSFrClassApplyPolicyFrClassName, hwCBQoSFrPvcCarConformPacketsRate=hwCBQoSFrPvcCarConformPacketsRate, hwCBQoSEgressGtsCir=hwCBQoSEgressGtsCir, hwCBQoSIfCarRunInfoEntry=hwCBQoSIfCarRunInfoEntry, hwCBQoSPolicyUnmatchedPackets=hwCBQoSPolicyUnmatchedPackets, hwCBQoSSubPolicyStatClassifierCarGreenPassedPacketsRate=hwCBQoSSubPolicyStatClassifierCarGreenPassedPacketsRate, hwCBQoSIfGtsDiscardedBytes=hwCBQoSIfGtsDiscardedBytes, hwCBQoSFrPvcQueueEnqueuedPacketsRate=hwCBQoSFrPvcQueueEnqueuedPacketsRate, hwCBQoSIfRedirectRunInfoTable=hwCBQoSIfRedirectRunInfoTable, hwCBQoSPolicyShareModeCfgInfoEntry=hwCBQoSPolicyShareModeCfgInfoEntry, hwCBQoSAtmPvcLrPassedBytes=hwCBQoSAtmPvcLrPassedBytes, hwCBQoSLrUnit=hwCBQoSLrUnit, hwCBQoSCarOverflowByteRate=hwCBQoSCarOverflowByteRate, hwCBQoSPolicyStatClassifierUnmatchedPackets=hwCBQoSPolicyStatClassifierUnmatchedPackets, hwCBQoSClassifierObjects=hwCBQoSClassifierObjects, hwCBQoSIfWredRunInfoEntry=hwCBQoSIfWredRunInfoEntry, hwCBQoSFrPvcQueueEnqueuedBytes=hwCBQoSFrPvcQueueEnqueuedBytes, hwCBQoSMultiPolicyStatClassifierMatchedPassPackets=hwCBQoSMultiPolicyStatClassifierMatchedPassPackets, hwCBQoSFrPvcLrRunInfoGroup=hwCBQoSFrPvcLrRunInfoGroup, hwCBQoSVlanApplyPolicyTable=hwCBQoSVlanApplyPolicyTable, hwCBQoSFrPvcWredRunInfoGroup=hwCBQoSFrPvcWredRunInfoGroup, hwCBQoSFirewallCfgInfoEntry=hwCBQoSFirewallCfgInfoEntry, hwCBQoSIfClassAverageRate=hwCBQoSIfClassAverageRate, hwCBQoSDenyPacketLengthMax=hwCBQoSDenyPacketLengthMax, hwCBQoSVlanClassMatchedPackets=hwCBQoSVlanClassMatchedPackets, hwCBQoSIfVlanApplyPolicyEntry=hwCBQoSIfVlanApplyPolicyEntry, hwCBQoSIfCbqAfQueueSize=hwCBQoSIfCbqAfQueueSize, hwCBQoSDropProfileDiscardProb=hwCBQoSDropProfileDiscardProb, hwCBQoSCarGreenAction=hwCBQoSCarGreenAction, hwCBQoSFrPvcCbqBeMaxActiveQueueNum=hwCBQoSFrPvcCbqBeMaxActiveQueueNum, hwCBQoSFrPvcClassAverageRate=hwCBQoSFrPvcClassAverageRate, hwCBQoSPolicyClassClassifierIndex=hwCBQoSPolicyClassClassifierIndex, hwCBQoSFrClassApplyPolicyGroup=hwCBQoSFrClassApplyPolicyGroup, hwCBQoSFrPvcRemarkedPackets=hwCBQoSFrPvcRemarkedPackets, hwCBQoSMultiPolicyStatClassifierMatchedDropPackets=hwCBQoSMultiPolicyStatClassifierMatchedDropPackets, hwCBQoSIfClassMatchedBytes=hwCBQoSIfClassMatchedBytes, hwCBQoSCountRowStatus=hwCBQoSCountRowStatus, hwCBQoSIfGtsRunInfoTable=hwCBQoSIfGtsRunInfoTable, hwCBQoSSubPolicyStatClassifierMatchedDropBytesRate=hwCBQoSSubPolicyStatClassifierMatchedDropBytesRate, hwCBQoSVlanApplyPolicyDirection=hwCBQoSVlanApplyPolicyDirection, hwCBQoSCarCfgInfoTable=hwCBQoSCarCfgInfoTable, hwCBQoSCarStatisticsEntry=hwCBQoSCarStatisticsEntry, hwCBQoSIfVlanApplyPolicyRowStatus=hwCBQoSIfVlanApplyPolicyRowStatus, hwCBQoSAtmPvcCarConformPacketsRate=hwCBQoSAtmPvcCarConformPacketsRate, hwCBQoSMultiPolicyStatClassifierUnmatchedPackets=hwCBQoSMultiPolicyStatClassifierUnmatchedPackets, hwCBQoSSubPolicyStatClassifierCarGreenBytes=hwCBQoSSubPolicyStatClassifierCarGreenBytes, hwCBQoSPolicyMatchedPassPackets=hwCBQoSPolicyMatchedPassPackets, hwCBQoSCarCfgInfoEntry=hwCBQoSCarCfgInfoEntry, hwCBQoSAtmPvcWredRunInfoEntry=hwCBQoSAtmPvcWredRunInfoEntry, hwCBQoSSubPolicyStatClassifierCarGreenPassedBytesRate=hwCBQoSSubPolicyStatClassifierCarGreenPassedBytesRate, hwCBQoSCarOverflowPacketRate=hwCBQoSCarOverflowPacketRate, hwCBQoSCarYellowRemarkValue=hwCBQoSCarYellowRemarkValue, hwCBQoSPolicyClassClassifierName=hwCBQoSPolicyClassClassifierName, hwCBQoSIfGtsRunInfoGroup=hwCBQoSIfGtsRunInfoGroup, hwCBQoSIfCarGreenDiscardedPacketsRate=hwCBQoSIfCarGreenDiscardedPacketsRate, hwCBQoSPolicyStatClassifierMatchedPacketsRate=hwCBQoSPolicyStatClassifierMatchedPacketsRate, hwCBQoSPolicyShareModeCfgInfoTable=hwCBQoSPolicyShareModeCfgInfoTable, hwCBQoSIfCbqRunInfoGroup=hwCBQoSIfCbqRunInfoGroup, hwCBQoSIfQueueDiscardedBytes=hwCBQoSIfQueueDiscardedBytes, hwCBQoSFrPvcCarExceedPackets=hwCBQoSFrPvcCarExceedPackets, hwCBQoSQueueBandwidthValue=hwCBQoSQueueBandwidthValue, hwCBQoSRedirectCfgInfoTable=hwCBQoSRedirectCfgInfoTable, hwCBQoSFrPvcQueueRunInfoGroup=hwCBQoSFrPvcQueueRunInfoGroup, hwCBQoSFrPvcClassMatchRunInfoGroup=hwCBQoSFrPvcClassMatchRunInfoGroup, hwCBQoSServiceClassQueueId=hwCBQoSServiceClassQueueId, hwCBQoSIfCarGreenPassedPacketsRate=hwCBQoSIfCarGreenPassedPacketsRate, hwCBQoSIfCarYellowPassedBytes=hwCBQoSIfCarYellowPassedBytes, hwCBQoSIfQueueDiscardedBytesRate=hwCBQoSIfQueueDiscardedBytesRate, hwCBQoSIfWredRunInfoTable=hwCBQoSIfWredRunInfoTable, hwCBQoSWredClassDiscardProb=hwCBQoSWredClassDiscardProb, hwCBQoSAtmPvcCarExceedPackets=hwCBQoSAtmPvcCarExceedPackets, hwCBQoSMirrorCfgInfoEntry=hwCBQoSMirrorCfgInfoEntry, hwCBQoSIfApplyPolicyName=hwCBQoSIfApplyPolicyName, hwCBQoSAtmPvcQueueEnqueuedPacketsRate=hwCBQoSAtmPvcQueueEnqueuedPacketsRate, hwCBQoSAtmPvcQueueMatchedPacketsRate=hwCBQoSAtmPvcQueueMatchedPacketsRate, hwCBQoSSamplingGroup=hwCBQoSSamplingGroup, hwCBQoSRuleNotSupportAlarmEntry=hwCBQoSRuleNotSupportAlarmEntry, hwCBQoSIfLrRunInfoEntry=hwCBQoSIfLrRunInfoEntry, hwCBQoSCompliance=hwCBQoSCompliance, hwCBQoSRuleInfo=hwCBQoSRuleInfo, hwCBQoSPolicyStatisticsClassifierEntry=hwCBQoSPolicyStatisticsClassifierEntry, hwCBQoSAtmPvcCbqBeQueueSize=hwCBQoSAtmPvcCbqBeQueueSize, hwCBQoSFrPvcWredRunInfoEntry=hwCBQoSFrPvcWredRunInfoEntry, hwCBQoSSubPolicyStatClassifierCarYellowPassedBytesRate=hwCBQoSSubPolicyStatClassifierCarYellowPassedBytesRate, hwCBQoSVsiClassMatchedPackets=hwCBQoSVsiClassMatchedPackets, hwCBQoSVsiName=hwCBQoSVsiName, hwCBQoSIfCbqRunInfoEntry=hwCBQoSIfCbqRunInfoEntry, hwCBQoSPolicyClassBehaviorName=hwCBQoSPolicyClassBehaviorName, hwCBQoSAtmPvcApplyPolicyIfIndex=hwCBQoSAtmPvcApplyPolicyIfIndex, hwCBQoSBehaviorCfgInfoTable=hwCBQoSBehaviorCfgInfoTable, hwCBQoSFrPvcClassMatchedBytes=hwCBQoSFrPvcClassMatchedBytes, hwCBQoSIfGtsDelayedPackets=hwCBQoSIfGtsDelayedPackets, hwCBQoSPolicyStatClassifierMatchedDropPacketsRate=hwCBQoSPolicyStatClassifierMatchedDropPacketsRate, hwCBQoSQueueRowStatus=hwCBQoSQueueRowStatus, hwCBQoSEgressGtsCfgInfoTable=hwCBQoSEgressGtsCfgInfoTable, hwCBQoSAtmPvcGtsDiscardedBytes=hwCBQoSAtmPvcGtsDiscardedBytes, hwCBQoSIfRemarkedBytes=hwCBQoSIfRemarkedBytes, hwCBQoSAtmPvcQueueEnqueuedBytesRate=hwCBQoSAtmPvcQueueEnqueuedBytesRate, hwCBQoSAtmPvcQueueDiscardedPacketsRate=hwCBQoSAtmPvcQueueDiscardedPacketsRate)
mibBuilder.exportSymbols("HUAWEI-CBQOS-MIB", hwCBQoSIfLrDelayedPackets=hwCBQoSIfLrDelayedPackets, hwCBQoSFrPvcCbqEfQueueSize=hwCBQoSFrPvcCbqEfQueueSize, hwCBQoSAtmPvcCbqRunInfoEntry=hwCBQoSAtmPvcCbqRunInfoEntry, hwCBQoSUrpfAllowDefault=hwCBQoSUrpfAllowDefault, hwCBQoSPolicyStatisticsGroup=hwCBQoSPolicyStatisticsGroup, hwCBQoSActionNotSupportAlarmGroup=hwCBQoSActionNotSupportAlarmGroup, hwCBQoSCarPir=hwCBQoSCarPir, hwCBQoSIfSampledBytes=hwCBQoSIfSampledBytes, hwCBQoSPolicyMatchedPassBytes=hwCBQoSPolicyMatchedPassBytes, hwCBQoSFrPvcCbqBeQueueSize=hwCBQoSFrPvcCbqBeQueueSize, hwCBQoSMatchInnerSrcIpMask=hwCBQoSMatchInnerSrcIpMask, hwCBQoSRedirectRowStatus=hwCBQoSRedirectRowStatus, hwCBQoSAtmPvcClassMatchRunInfoEntry=hwCBQoSAtmPvcClassMatchRunInfoEntry, hwCBQoSDAATariffLevelCfgInfoGroup=hwCBQoSDAATariffLevelCfgInfoGroup, hwCBQoSRedirectType=hwCBQoSRedirectType, hwCBQoSFrPvcCarExceedBytes=hwCBQoSFrPvcCarExceedBytes, hwCBQoSIfLrPassedBytes=hwCBQoSIfLrPassedBytes, hwCBQoSClassifierMatchedPassPackets=hwCBQoSClassifierMatchedPassPackets, hwCBQoSAtmPvcGtsPassedPackets=hwCBQoSAtmPvcGtsPassedPackets, hwCBQoSIfLrRunInfoTable=hwCBQoSIfLrRunInfoTable, hwCBQoSIfCbqBeActiveQueueNum=hwCBQoSIfCbqBeActiveQueueNum, hwCBQoSFrPvcGtsDiscardedBytes=hwCBQoSFrPvcGtsDiscardedBytes, hwCBQoSIfCarRedDiscardedPacketsRate=hwCBQoSIfCarRedDiscardedPacketsRate, hwCBQoSIfRedirectedBytes=hwCBQoSIfRedirectedBytes, RedirectType=RedirectType, hwCBQoSPolicyStatClassifierMatchedPackets=hwCBQoSPolicyStatClassifierMatchedPackets, hwCBQoSAtmPvcCbqAfQueueSize=hwCBQoSAtmPvcCbqAfQueueSize, hwCBQoSCarPassedBytes=hwCBQoSCarPassedBytes, hwCBQoSAtmPvcApplyPolicyEntry=hwCBQoSAtmPvcApplyPolicyEntry, hwCBQoSNestPolicyName=hwCBQoSNestPolicyName, hwCBQoSPolicyClassBehaviorIndex=hwCBQoSPolicyClassBehaviorIndex, hwCBQoSPolicyMatchedPassBytesRate=hwCBQoSPolicyMatchedPassBytesRate, hwCBQoSPolicyStatClassifierMatchedBytes=hwCBQoSPolicyStatClassifierMatchedBytes, hwCBQoSDAATariffLevelCfgInfoEntry=hwCBQoSDAATariffLevelCfgInfoEntry, hwCBQoSFrPvcCbqRunInfoEntry=hwCBQoSFrPvcCbqRunInfoEntry, hwCBQoSWredCfgInfoTable=hwCBQoSWredCfgInfoTable, hwCBQoSClassifierRowStatus=hwCBQoSClassifierRowStatus, hwCBQoSRedirectVsiName=hwCBQoSRedirectVsiName, hwCBQoSBehaviorIndex=hwCBQoSBehaviorIndex, hwCBQoSIfVlanApplyPolicyIfIndex=hwCBQoSIfVlanApplyPolicyIfIndex, hwCBQoSCarConformedPacketRate=hwCBQoSCarConformedPacketRate, hwCBQoSQueueBandwidthUnit=hwCBQoSQueueBandwidthUnit, hwCBQoSFrPvcCbqDiscard=hwCBQoSFrPvcCbqDiscard, hwCBQoSSamplingCfgInfoEntry=hwCBQoSSamplingCfgInfoEntry, hwCBQoSRemarkType=hwCBQoSRemarkType, hwCBQoSSubPolicyStatClassifierQueueEnqueuedPackets=hwCBQoSSubPolicyStatClassifierQueueEnqueuedPackets, hwCBQoSVlanApplyMultiPolicyRowStatus=hwCBQoSVlanApplyMultiPolicyRowStatus, hwCBQoSWredGroup=hwCBQoSWredGroup, hwCBQoSDenyPacketLengthRowStatus=hwCBQoSDenyPacketLengthRowStatus, hwCBQoSIfApplyMultiPolicyTable=hwCBQoSIfApplyMultiPolicyTable, hwCBQoSIfLrDiscardedPackets=hwCBQoSIfLrDiscardedPackets, hwCBQoSVlanApplyPolicyVlanId=hwCBQoSVlanApplyPolicyVlanId, hwCBQoSMatchRuleCfgInfoTable=hwCBQoSMatchRuleCfgInfoTable, hwCBQoSMirrorObserveIndex=hwCBQoSMirrorObserveIndex, hwCBQoSWredDropProfileIndex=hwCBQoSWredDropProfileIndex, hwCBQoSIfVlanApplyPolicyTable=hwCBQoSIfVlanApplyPolicyTable, hwCBQoSPolicyStatSubPolicyClassifierRunInfoEntry=hwCBQoSPolicyStatSubPolicyClassifierRunInfoEntry, hwCBQoSBehaviorGroup=hwCBQoSBehaviorGroup, hwCBQoSFrClassApplyPolicyName=hwCBQoSFrClassApplyPolicyName, hwCBQoSWredWeightConst=hwCBQoSWredWeightConst, hwCBQoSAtmPvcQueueDiscardedPackets=hwCBQoSAtmPvcQueueDiscardedPackets, hwCBQoSRedirectMULIfIndex4=hwCBQoSRedirectMULIfIndex4, UrpfCtrlType=UrpfCtrlType, hwCBQoSPolicyMatchedBytes=hwCBQoSPolicyMatchedBytes, hwCBQoSWredClassLowLimit=hwCBQoSWredClassLowLimit, hwCBQoSIfQueueRunInfoTable=hwCBQoSIfQueueRunInfoTable, hwCBQoSVsiApplyPolicyTable=hwCBQoSVsiApplyPolicyTable, hwCBQoSVsiApplyPolicyDirection=hwCBQoSVsiApplyPolicyDirection, hwCBQoSNatCfgInfoEntry=hwCBQoSNatCfgInfoEntry, hwCBQoSIfClassMatchedPackets=hwCBQoSIfClassMatchedPackets, hwCBQoSSubPolicyStatClassifierPassPackets=hwCBQoSSubPolicyStatClassifierPassPackets, hwCBQoSLrCfgInfoEntry=hwCBQoSLrCfgInfoEntry, hwCBQoSFrPvcCbqBeTotalQueueNum=hwCBQoSFrPvcCbqBeTotalQueueNum, hwCBQoSDAATariffLevelCfgInfoTable=hwCBQoSDAATariffLevelCfgInfoTable, hwCBQoSDAAStatisticsCfgInfoEntry=hwCBQoSDAAStatisticsCfgInfoEntry, hwCBQoSPolicyStatClassifierMatchedPassBytesRate=hwCBQoSPolicyStatClassifierMatchedPassBytesRate, hwCBQoSMultiPolicyMatchedPassPackets=hwCBQoSMultiPolicyMatchedPassPackets, RemarkType=RemarkType, hwCBQoSDropProfileClassCfgInfoTable=hwCBQoSDropProfileClassCfgInfoTable, hwCBQoSFrPvcCarConformBytes=hwCBQoSFrPvcCarConformBytes, hwCBQoSIfCarGreenRemarkedBytesRate=hwCBQoSIfCarGreenRemarkedBytesRate, hwCBQoSIfStaticsObjects=hwCBQoSIfStaticsObjects, hwCBQoSFrPvcLrDelayedPackets=hwCBQoSFrPvcLrDelayedPackets, hwCBQoSIfCbqBeMaxActiveQueueNum=hwCBQoSIfCbqBeMaxActiveQueueNum, hwCBQoSRedirectMULIfIndex2=hwCBQoSRedirectMULIfIndex2, hwCBQoSPolicyStatClassifierMatchedPassPacketsRate=hwCBQoSPolicyStatClassifierMatchedPassPacketsRate, hwCBQoSIfLrRunInfoGroup=hwCBQoSIfLrRunInfoGroup, LrCirUnit=LrCirUnit, hwCBQoSIfCbqQueueSize=hwCBQoSIfCbqQueueSize, hwCBQoSPolicyUnmatchedBytes=hwCBQoSPolicyUnmatchedBytes, hwCBQoSIfApplyMultiPolicyIndex=hwCBQoSIfApplyMultiPolicyIndex, hwCBQoSFrPvcLrDiscardedPackets=hwCBQoSFrPvcLrDiscardedPackets, hwCBQoSMultiPolicyStatClassifierName=hwCBQoSMultiPolicyStatClassifierName, hwCBQoSDropProfileCfgInfoEntry=hwCBQoSDropProfileCfgInfoEntry, hwCBQoSFrameId=hwCBQoSFrameId, hwCBQoSPolicyStatClassifierMatchedPassPackets=hwCBQoSPolicyStatClassifierMatchedPassPackets, hwCBQoSIfQueueEnqueuedPackets=hwCBQoSIfQueueEnqueuedPackets, hwCBQoSRandomPercent=hwCBQoSRandomPercent, hwCBQoSDAATariffLevelValue=hwCBQoSDAATariffLevelValue, hwCBQoSFrPvcLrRunInfoTable=hwCBQoSFrPvcLrRunInfoTable, hwCBQoSConformance=hwCBQoSConformance, hwCBQoSAtmPvcQueueDiscardedBytesRate=hwCBQoSAtmPvcQueueDiscardedBytesRate, hwCBQoSIfWredRandomDiscardedPackets=hwCBQoSIfWredRandomDiscardedPackets, hwCBQoSCarConformedByteRate=hwCBQoSCarConformedByteRate, hwCBQoSRedirectMULCfgInfoTable=hwCBQoSRedirectMULCfgInfoTable, hwCBQoSServiceClassColor=hwCBQoSServiceClassColor, hwCBQoSRemarkIpDfCfgInfoEntry=hwCBQoSRemarkIpDfCfgInfoEntry, hwCBQoSHighDropCfgInfoTable=hwCBQoSHighDropCfgInfoTable, hwCBQoSVlanApplyMultiPolicyDirection=hwCBQoSVlanApplyMultiPolicyDirection, hwCBQoSIfCarYellowPassedPackets=hwCBQoSIfCarYellowPassedPackets, hwCBQoSIfCarYellowDiscardedPackets=hwCBQoSIfCarYellowDiscardedPackets, hwCBQoSIfSampleRunInfoEntry=hwCBQoSIfSampleRunInfoEntry, hwCBQoSPolicyStatisticsObjects=hwCBQoSPolicyStatisticsObjects, hwCBQoSNotifications=hwCBQoSNotifications, hwCBQoSClassifierGroup=hwCBQoSClassifierGroup, hwCBQoSQueueGroup=hwCBQoSQueueGroup, hwCBQoSPolicyClassPrecedence=hwCBQoSPolicyClassPrecedence, hwCBQoSServiceClassCfgInfoTable=hwCBQoSServiceClassCfgInfoTable, DirectionType=DirectionType, hwCBQoSSubPolicyStatClassifierQueueMatchedPackets=hwCBQoSSubPolicyStatClassifierQueueMatchedPackets, hwCBQoSClassifierMatchedDropPackets=hwCBQoSClassifierMatchedDropPackets, hwCBQoSSubPolicyStatClassifierQueueDiscardedBytes=hwCBQoSSubPolicyStatClassifierQueueDiscardedBytes, hwCBQoSSVlanCarMatchGroup=hwCBQoSSVlanCarMatchGroup, hwCBQoSTrapType=hwCBQoSTrapType, hwCBQoSCarPbs=hwCBQoSCarPbs, hwCBQoSClassifierMatchedPackets=hwCBQoSClassifierMatchedPackets, hwCBQoSFrPvcApplyPolicyTable=hwCBQoSFrPvcApplyPolicyTable, hwCBQoSPolicyStatClassifierUnmatchedBytes=hwCBQoSPolicyStatClassifierUnmatchedBytes, MatchRuleType=MatchRuleType, hwCBQoSPolicyObjects=hwCBQoSPolicyObjects, hwCBQoSIfMirroredBytes=hwCBQoSIfMirroredBytes, hwCBQoSNestPolicyRowStatus=hwCBQoSNestPolicyRowStatus, hwCBQoSActionSlotID=hwCBQoSActionSlotID, hwCBQoSTrapVlanId=hwCBQoSTrapVlanId, hwCBQoSIfApplyPolicyRowStatus=hwCBQoSIfApplyPolicyRowStatus, hwCBQoSAtmPvcQueueEnqueuedPackets=hwCBQoSAtmPvcQueueEnqueuedPackets, hwCBQoSMatchRuleIntValue1=hwCBQoSMatchRuleIntValue1, hwCBQoSIfCarYellowDiscardedBytes=hwCBQoSIfCarYellowDiscardedBytes, hwCBQoSIfCarRedRemarkedPackets=hwCBQoSIfCarRedRemarkedPackets, hwCBQoSPolicyMatchedDropPacketsRate=hwCBQoSPolicyMatchedDropPacketsRate, hwCBQoSSuppressionRedRemarkValue=hwCBQoSSuppressionRedRemarkValue, hwCBQoSIfCarRedPassedBytesRate=hwCBQoSIfCarRedPassedBytesRate, hwCBQoSMultiPolicyStatisticsEntry=hwCBQoSMultiPolicyStatisticsEntry, hwCBQoSIfVlanApplyPolicyLinkLayer=hwCBQoSIfVlanApplyPolicyLinkLayer, hwCBQoSIfCarYellowRemarkedBytes=hwCBQoSIfCarYellowRemarkedBytes, hwCBQoSPolicyShareFlag=hwCBQoSPolicyShareFlag, hwCBQoSAtmPvcLrDelayedPackets=hwCBQoSAtmPvcLrDelayedPackets, hwCBQoSFrPvcCbqQueueSize=hwCBQoSFrPvcCbqQueueSize, hwCBQoSClassifierOperator=hwCBQoSClassifierOperator, hwCBQoSIfQueueMatchedPackets=hwCBQoSIfQueueMatchedPackets, hwCBQoSVlanCarPassedPackets=hwCBQoSVlanCarPassedPackets, hwCBQoSSuppressionType=hwCBQoSSuppressionType, hwCBQoSRemarkRowStatus=hwCBQoSRemarkRowStatus, hwCBQoSRuleNotSupportAlarmTable=hwCBQoSRuleNotSupportAlarmTable, hwCBQoSIfCarYellowDiscardedPacketsRate=hwCBQoSIfCarYellowDiscardedPacketsRate, hwCBQoSFrPvcGtsDelayedBytes=hwCBQoSFrPvcGtsDelayedBytes, hwCBQoSAtmPvcApplyPolicyName=hwCBQoSAtmPvcApplyPolicyName, hwCBQoSVlanClassPassedPackets=hwCBQoSVlanClassPassedPackets, hwCBQoSPolicyStatisticsEntry=hwCBQoSPolicyStatisticsEntry, hwCBQoSIfQueueEnqueuedPacketsRate=hwCBQoSIfQueueEnqueuedPacketsRate, hwCBQoSIfCarGreenRemarkedPackets=hwCBQoSIfCarGreenRemarkedPackets, hwCBQoSAtmPvcCbqBeActiveQueueNum=hwCBQoSAtmPvcCbqBeActiveQueueNum, hwCBQoSCountCfgInfoEntry=hwCBQoSCountCfgInfoEntry, PYSNMP_MODULE_ID=hwCBQoSMIB, hwCBQoSMatchVlanEndId=hwCBQoSMatchVlanEndId, hwCBQoSAtmPvcCbqEfQueueSize=hwCBQoSAtmPvcCbqEfQueueSize, hwCBQoSGtsDiscardThresholdTrap=hwCBQoSGtsDiscardThresholdTrap, hwCBQoSIfUrpfDroppedPackets=hwCBQoSIfUrpfDroppedPackets, hwCBQoSAtmPvcCbqQueueSize=hwCBQoSAtmPvcCbqQueueSize, hwCBQoSIfRedirectedPackets=hwCBQoSIfRedirectedPackets, hwCBQoSSubPolicyStatClassifierCarRedBytes=hwCBQoSSubPolicyStatClassifierCarRedBytes, hwCBQoSTrapAction=hwCBQoSTrapAction, hwCBQoSAtmPvcLrRunInfoGroup=hwCBQoSAtmPvcLrRunInfoGroup, hwCBQoSDropProfileName=hwCBQoSDropProfileName, hwCBQoSRuleNotSupportAlarm=hwCBQoSRuleNotSupportAlarm, hwCBQoSFrPvcGtsDelayedPackets=hwCBQoSFrPvcGtsDelayedPackets, hwCBQoSVlanApplyPolicyEntry=hwCBQoSVlanApplyPolicyEntry, hwCBQoSGeneralGroup=hwCBQoSGeneralGroup, hwCBQoSFrClassApplyPolicyEntry=hwCBQoSFrClassApplyPolicyEntry, hwCBQoSVlanClassMatchRunInfoEntry=hwCBQoSVlanClassMatchRunInfoEntry, hwCBQoSActionNotSupportAlarmTable=hwCBQoSActionNotSupportAlarmTable, hwCBQoSIfCarYellowRemarkedBytesRate=hwCBQoSIfCarYellowRemarkedBytesRate, hwCBQoSWredClassCfgInfoEntry=hwCBQoSWredClassCfgInfoEntry, hwCBQoSIfCarGreenPassedPackets=hwCBQoSIfCarGreenPassedPackets, hwCBQoSIfFirewallRunInfoTable=hwCBQoSIfFirewallRunInfoTable, hwCBQoSIfGtsDiscardedPackets=hwCBQoSIfGtsDiscardedPackets, hwCBQoSSVlanClassMatchGroup=hwCBQoSSVlanClassMatchGroup, hwCBQoSPolicyStatisticsFlag=hwCBQoSPolicyStatisticsFlag, hwCBQoSPolicyShareModeRowStatus=hwCBQoSPolicyShareModeRowStatus, hwCBQoSWredType=hwCBQoSWredType, hwCBQoSQueueQueueNumber=hwCBQoSQueueQueueNumber, hwCBQoSAtmPvcLrRunInfoEntry=hwCBQoSAtmPvcLrRunInfoEntry, hwCBQoSFrPvcRemarkRunInfoEntry=hwCBQoSFrPvcRemarkRunInfoEntry, hwCBQoSFrPvcApplyPolicyName=hwCBQoSFrPvcApplyPolicyName, hwCBQoSFrPvcWredRandomDiscardedPackets=hwCBQoSFrPvcWredRandomDiscardedPackets, hwCBQoSSubPolicyStatClassifierCarYellowPackets=hwCBQoSSubPolicyStatClassifierCarYellowPackets, hwCBQoSRemarkValue=hwCBQoSRemarkValue, hwCBQoSLoadBalanceCfgInfoTable=hwCBQoSLoadBalanceCfgInfoTable, hwCBQoSPolicyIndex=hwCBQoSPolicyIndex, hwCBQoSPolicyMatchedDropBytes=hwCBQoSPolicyMatchedDropBytes, hwCBQoSFrClassApplyPolicyDirection=hwCBQoSFrClassApplyPolicyDirection, hwCBQoSFrPvcStaticsObjects=hwCBQoSFrPvcStaticsObjects, hwCBQoSVsiClassMatchRunInfoEntry=hwCBQoSVsiClassMatchRunInfoEntry, hwCBQoSLrCfgInfoTable=hwCBQoSLrCfgInfoTable, hwCBQoSFrPvcQueueDiscardedPacketsRate=hwCBQoSFrPvcQueueDiscardedPacketsRate, hwCBQoSIfLrPassedPackets=hwCBQoSIfLrPassedPackets, hwCBQoSCarStatisticsTable=hwCBQoSCarStatisticsTable, hwCBQoSNatGroup=hwCBQoSNatGroup, hwCBQoSSamplingCfgInfoTable=hwCBQoSSamplingCfgInfoTable, hwCBQoSActionDirection=hwCBQoSActionDirection, hwCBQoSClassifierIndexQueryEntry=hwCBQoSClassifierIndexQueryEntry, hwCBQoSObjects=hwCBQoSObjects, hwCBQoSPolicyCfgInfoEntry=hwCBQoSPolicyCfgInfoEntry, hwCBQoSSuppressionRowStatus=hwCBQoSSuppressionRowStatus, hwCBQoSFrPvcRemarkRunInfoTable=hwCBQoSFrPvcRemarkRunInfoTable, hwCBQoSMultiPolicyResetFlag=hwCBQoSMultiPolicyResetFlag, hwCBQoSIfCarRedPassedPackets=hwCBQoSIfCarRedPassedPackets, hwCBQoSIfMirrorRunInfoTable=hwCBQoSIfMirrorRunInfoTable, hwCBQoSVlanCarDiscardedPackets=hwCBQoSVlanCarDiscardedPackets, CosType=CosType, hwCBQoSEgressGtsIfIndex=hwCBQoSEgressGtsIfIndex, hwCBQoSBehaviorIndexNext=hwCBQoSBehaviorIndexNext, hwCBQoSPolicyMatchedDropBytesRate=hwCBQoSPolicyMatchedDropBytesRate, hwCBQoSIfClassMatchRunInfoTable=hwCBQoSIfClassMatchRunInfoTable, hwCBQoSSubPolicyStatClassifierQueueDiscardedPackets=hwCBQoSSubPolicyStatClassifierQueueDiscardedPackets, hwCBQoSIfRemarkRunInfoTable=hwCBQoSIfRemarkRunInfoTable, hwCBQoSIfCbqRunInfoTable=hwCBQoSIfCbqRunInfoTable, hwCBQoSFrPvcCbqBeActiveQueueNum=hwCBQoSFrPvcCbqBeActiveQueueNum, hwCBQoSIfQueueDiscardedPackets=hwCBQoSIfQueueDiscardedPackets, hwCBQoSVsiStaticsObjects=hwCBQoSVsiStaticsObjects, hwCBQoSAtmPvcApplyPolicyRowStatus=hwCBQoSAtmPvcApplyPolicyRowStatus, hwCBQoSMatchInnerSrcPort=hwCBQoSMatchInnerSrcPort, hwCBQoSIfApplyPolicyIfIndex=hwCBQoSIfApplyPolicyIfIndex, hwCBQoSAtmPvcCbqDiscard=hwCBQoSAtmPvcCbqDiscard, hwCBQoSRandomDiscardCfgInfoEntry=hwCBQoSRandomDiscardCfgInfoEntry, hwCBQoSFrPvcGtsRunInfoTable=hwCBQoSFrPvcGtsRunInfoTable, hwCBQoSSubPolicyStatClassifierPassBytes=hwCBQoSSubPolicyStatClassifierPassBytes, hwCBQoSSubPolicyStatClassifierDropPackets=hwCBQoSSubPolicyStatClassifierDropPackets, hwCBQoSSuppressionCbs=hwCBQoSSuppressionCbs, hwCBQoSSubPolicyClassIndex=hwCBQoSSubPolicyClassIndex, hwCBQoSFrPvcCbqAfAllocatedQueueNum=hwCBQoSFrPvcCbqAfAllocatedQueueNum, hwCBQoSIfVlanApplyPolicyName=hwCBQoSIfVlanApplyPolicyName, hwCBQoSDropProfileClassCfgInfoEntry=hwCBQoSDropProfileClassCfgInfoEntry, hwCBQoSPolicyMatchedPackets=hwCBQoSPolicyMatchedPackets, hwCBQoSVsiClassMatchedBytes=hwCBQoSVsiClassMatchedBytes, hwCBQoSSubPolicyStatClassifierCarRedPassedBytesRate=hwCBQoSSubPolicyStatClassifierCarRedPassedBytesRate, hwCBQoSSamplingNum=hwCBQoSSamplingNum, hwCBQoSIfSampleRunInfoTable=hwCBQoSIfSampleRunInfoTable, hwCBQoSRemarkIpDfCfgInfoTable=hwCBQoSRemarkIpDfCfgInfoTable, hwCBQoSCarExceededPacketRate=hwCBQoSCarExceededPacketRate, hwCBQoSIfCarYellowPassedPacketsRate=hwCBQoSIfCarYellowPassedPacketsRate, hwCBQoSVlanApplyMultiPolicyName=hwCBQoSVlanApplyMultiPolicyName, hwCBQoSAtmPvcClassAverageRate=hwCBQoSAtmPvcClassAverageRate, hwCBQoSMultiPolicyStatisticsTable=hwCBQoSMultiPolicyStatisticsTable)
mibBuilder.exportSymbols("HUAWEI-CBQOS-MIB", hwCBQoSSubPolicyStatClassifierQueueDiscardedBytesRate=hwCBQoSSubPolicyStatClassifierQueueDiscardedBytesRate, hwCBQoSClassifierRuleCount=hwCBQoSClassifierRuleCount, hwCBQoSLrCbs=hwCBQoSLrCbs, hwCBQoSLrGroup=hwCBQoSLrGroup, hwCBQoSSubPolicyStatClassifierQueueMatchedPacketsRate=hwCBQoSSubPolicyStatClassifierQueueMatchedPacketsRate, hwCBQoSAtmPvcApplyPolicyDirection=hwCBQoSAtmPvcApplyPolicyDirection, hwCBQoSFrPvcCarConformPackets=hwCBQoSFrPvcCarConformPackets, hwCBQoSAtmPvcLrDiscardedPackets=hwCBQoSAtmPvcLrDiscardedPackets, hwCBQoSGtsCbs=hwCBQoSGtsCbs, hwCBQoSAtmPvcCarExceedPacketsRate=hwCBQoSAtmPvcCarExceedPacketsRate, hwCBQoSRemarkGroup=hwCBQoSRemarkGroup, hwCBQoSIfVlanClassMatchRunInfoGroup=hwCBQoSIfVlanClassMatchRunInfoGroup, hwCBQoSLoadBalanceType=hwCBQoSLoadBalanceType, hwCBQoSIfCarRedPassedPacketsRate=hwCBQoSIfCarRedPassedPacketsRate, hwCBQoSRandomDiscardRowStatus=hwCBQoSRandomDiscardRowStatus, hwCBQoSBehaviorCfgInfoEntry=hwCBQoSBehaviorCfgInfoEntry, hwCBQoSDAATariffLevelRowStatus=hwCBQoSDAATariffLevelRowStatus, hwCBQoSRandomDiscardCfgInfoGroup=hwCBQoSRandomDiscardCfgInfoGroup, hwCBQoSFrPvcApplyPolicyDirection=hwCBQoSFrPvcApplyPolicyDirection, hwCBQoSPolicyMatchedBytesRate=hwCBQoSPolicyMatchedBytesRate, hwCBQoSAtmPvcCbqBeTotalQueueNum=hwCBQoSAtmPvcCbqBeTotalQueueNum, hwCBQoSRedirectIpAddress=hwCBQoSRedirectIpAddress, hwCBQoSWredCfgInfoEntry=hwCBQoSWredCfgInfoEntry, hwCBQoSPolicyClassCfgInfoEntry=hwCBQoSPolicyClassCfgInfoEntry, hwCBQoSIfCarGreenDiscardedBytes=hwCBQoSIfCarGreenDiscardedBytes, hwCBQoSClassifierStatisticsTable=hwCBQoSClassifierStatisticsTable, hwCBQoSAtmPvcClassMatchBytes=hwCBQoSAtmPvcClassMatchBytes, hwCBQoSMultiPolicyMatchedDropPackets=hwCBQoSMultiPolicyMatchedDropPackets, hwCBQoSRedirectVsiEntry=hwCBQoSRedirectVsiEntry, hwCBQoSFrPvcGtsRunInfoGroup=hwCBQoSFrPvcGtsRunInfoGroup, hwCBQoSVlanApplyMultiPolicyIndex=hwCBQoSVlanApplyMultiPolicyIndex, hwCBQoSFrPvcLrRunInfoEntry=hwCBQoSFrPvcLrRunInfoEntry, hwCBQoSMultiPolicyIndex=hwCBQoSMultiPolicyIndex, hwCBQoSIfApplyMultiPolicyName=hwCBQoSIfApplyMultiPolicyName, hwCBQoSIfClassMatchRunInfoEntry=hwCBQoSIfClassMatchRunInfoEntry, hwCBQoSSuppressionRedAction=hwCBQoSSuppressionRedAction, hwCBQoSMultiPolicyMatchedPackets=hwCBQoSMultiPolicyMatchedPackets, hwCBQoSQueueLength=hwCBQoSQueueLength, hwCBQoSIfApplyMultiPolicyEntry=hwCBQoSIfApplyMultiPolicyEntry, hwCBQoSAtmPvcQueueRunInfoGroup=hwCBQoSAtmPvcQueueRunInfoGroup, hwCBQoSDenyPacketLength=hwCBQoSDenyPacketLength, hwCBQoSIfCarRedRemarkedBytesRate=hwCBQoSIfCarRedRemarkedBytesRate, hwCBQoSGtsCfgInfoEntry=hwCBQoSGtsCfgInfoEntry, hwCBQoSAtmPvcCbqAfAllocatedQueueNum=hwCBQoSAtmPvcCbqAfAllocatedQueueNum, hwCBQoSAtmPvcQueueEnqueuedBytes=hwCBQoSAtmPvcQueueEnqueuedBytes, hwCBQoSVsiClassMatchRunInfoTable=hwCBQoSVsiClassMatchRunInfoTable, hwCBQoSMatchRuleIntValue2=hwCBQoSMatchRuleIntValue2, hwCBQoSIfVlanApplyPolicyVlanid2=hwCBQoSIfVlanApplyPolicyVlanid2, hwCBQosIfClassDroppedPackets=hwCBQosIfClassDroppedPackets, hwCBQoSAtmPvcApplyPolicyVCI=hwCBQoSAtmPvcApplyPolicyVCI, hwCBQoSIfUrpfDroppedBytes=hwCBQoSIfUrpfDroppedBytes, hwCBQoSMultiPolicyStaPolicyIndex=hwCBQoSMultiPolicyStaPolicyIndex, hwCBQoSVlanApplyMultiPolicyTable=hwCBQoSVlanApplyMultiPolicyTable, hwCBQoSIfRemarkedPackets=hwCBQoSIfRemarkedPackets, hwCBQoSAtmPvcLrDelayedBytes=hwCBQoSAtmPvcLrDelayedBytes, hwCBQoSCarEbs=hwCBQoSCarEbs, hwCBQoSRedirectLSPSecondary=hwCBQoSRedirectLSPSecondary, hwCBQoSBehaviorRowStatus=hwCBQoSBehaviorRowStatus, hwCBQoSSubPolicyStatClassifierQueueMatchedBytes=hwCBQoSSubPolicyStatClassifierQueueMatchedBytes, hwCBQoSIfCarGreenPassedBytes=hwCBQoSIfCarGreenPassedBytes, hwCBQoSIfQueueEnqueuedBytes=hwCBQoSIfQueueEnqueuedBytes, hwCBQoSRemarkCfgInfoTable=hwCBQoSRemarkCfgInfoTable, hwCBQoSQueueCfgInfoEntry=hwCBQoSQueueCfgInfoEntry, hwCBQoSIfCarRedDiscardedPackets=hwCBQoSIfCarRedDiscardedPackets, hwCBQoSFrPvcQueueMatchedPacketsRate=hwCBQoSFrPvcQueueMatchedPacketsRate, hwCBQoSRedirectVsiRowStatus=hwCBQoSRedirectVsiRowStatus, hwCBQoSHighDropPrecedence=hwCBQoSHighDropPrecedence, hwCBQoSSubPolicyStatClassifierQueueEnqueuedBytesRate=hwCBQoSSubPolicyStatClassifierQueueEnqueuedBytesRate, hwCBQoSCarRedAction=hwCBQoSCarRedAction, hwCBQoSIfVlanClassMatchedBytes=hwCBQoSIfVlanClassMatchedBytes, hwCBQoSMultiPolicyMatchedPassBytes=hwCBQoSMultiPolicyMatchedPassBytes, hwCBQoSSubPolicyStatClassifierCarYellowPassedPacketsRate=hwCBQoSSubPolicyStatClassifierCarYellowPassedPacketsRate, hwCBQoSIfSamplingType=hwCBQoSIfSamplingType, hwCBQoSIfMirrorRunInfoEntry=hwCBQoSIfMirrorRunInfoEntry, hwCBQoSCarOverflowBytes=hwCBQoSCarOverflowBytes, hwCBQoSIfCarRedRemarkedPacketsRate=hwCBQoSIfCarRedRemarkedPacketsRate, hwQoS=hwQoS, hwCBQoSFrClassApplyPolicyTable=hwCBQoSFrClassApplyPolicyTable, hwCBQoSDAAStatisticsCfgInfoTable=hwCBQoSDAAStatisticsCfgInfoTable, hwCBQoSMatchRuleStringValue=hwCBQoSMatchRuleStringValue, hwCBQoSRuleDirection=hwCBQoSRuleDirection, hwCBQoSDAAStatisticsSummary=hwCBQoSDAAStatisticsSummary, hwCBQoSIfLrDelayedBytes=hwCBQoSIfLrDelayedBytes, hwCBQoSFrPvcCarRunInfoEntry=hwCBQoSFrPvcCarRunInfoEntry, hwCBQoSRedirectMULIpAddress3=hwCBQoSRedirectMULIpAddress3, hwCBQoSCarCir=hwCBQoSCarCir, hwCBQoSIfCarRedRemarkedBytes=hwCBQoSIfCarRedRemarkedBytes, hwCBQoSIfCarYellowRemarkedPacketsRate=hwCBQoSIfCarYellowRemarkedPacketsRate, hwCBQoSIfQueueMatchedBytes=hwCBQoSIfQueueMatchedBytes, hwCBQoSHighDropCfgInfoEntry=hwCBQoSHighDropCfgInfoEntry, hwCBQoSFrPvcLrDelayedBytes=hwCBQoSFrPvcLrDelayedBytes, hwCBQoSPolicyMatchedDropPackets=hwCBQoSPolicyMatchedDropPackets, hwCBQoSGroups=hwCBQoSGroups, hwCBQoSCarStatisticsGroup=hwCBQoSCarStatisticsGroup, hwCBQoSVlanApplyMultiPolicyEntry=hwCBQoSVlanApplyMultiPolicyEntry, hwCBQoSRandomDiscardCfgInfoTable=hwCBQoSRandomDiscardCfgInfoTable, hwCBQoSCarPassedPackets=hwCBQoSCarPassedPackets, hwCBQoSVlanCarRunInfoEntry=hwCBQoSVlanCarRunInfoEntry, hwCBQoSDenyPacketLengthCfgInfoTable=hwCBQoSDenyPacketLengthCfgInfoTable, hwCBQoSFrPvcCarConformBytesRate=hwCBQoSFrPvcCarConformBytesRate, hwCBQoSFrPvcQueueMatchedBytesRate=hwCBQoSFrPvcQueueMatchedBytesRate, hwCBQoSFrPvcQueueEnqueuedPackets=hwCBQoSFrPvcQueueEnqueuedPackets, hwCBQoSCarDroppedBytes=hwCBQoSCarDroppedBytes, hwCBQoSFrPvcGtsDiscardedPackets=hwCBQoSFrPvcGtsDiscardedPackets, hwCBQoSClassifierIndexQueryTable=hwCBQoSClassifierIndexQueryTable, hwCBQoSFrPvcClassMatchRunInfoTable=hwCBQoSFrPvcClassMatchRunInfoTable, hwCBQoSClassifierIndexNext=hwCBQoSClassifierIndexNext, hwCBQoSMultiPolicyStatisticsClassifierEntry=hwCBQoSMultiPolicyStatisticsClassifierEntry, hwCBQoSSubPolicyStatClassifierQueueEnqueuedBytes=hwCBQoSSubPolicyStatClassifierQueueEnqueuedBytes, hwCBQoSIfCarRedDiscardedBytes=hwCBQoSIfCarRedDiscardedBytes, hwCBQoSCarYellowAction=hwCBQoSCarYellowAction, hwCBQoSQueueType=hwCBQoSQueueType, hwCBQoSAtmPvcGtsQueueSize=hwCBQoSAtmPvcGtsQueueSize, hwCBQoSTrapIfName=hwCBQoSTrapIfName, hwCBQoSAtmPvcRemarkRunInfoEntry=hwCBQoSAtmPvcRemarkRunInfoEntry, hwCBQoSRemarkIpDf=hwCBQoSRemarkIpDf, hwCBQoSIfRemarkRunInfoEntry=hwCBQoSIfRemarkRunInfoEntry, hwCBQoSHighDropRowStatus=hwCBQoSHighDropRowStatus, hwCBQoSAtmPvcCarRunInfoEntry=hwCBQoSAtmPvcCarRunInfoEntry, hwCBQoSPolicyIndexNext=hwCBQoSPolicyIndexNext, hwCBQoSAtmPvcWredRunInfoTable=hwCBQoSAtmPvcWredRunInfoTable, hwCBQoSAtmPvcLrPassedPackets=hwCBQoSAtmPvcLrPassedPackets, hwCBQoSFrPvcGtsRunInfoEntry=hwCBQoSFrPvcGtsRunInfoEntry, hwCBQoSMultiPolicyStatClassifierMatchedPackets=hwCBQoSMultiPolicyStatClassifierMatchedPackets, hwCBQoSIfFirewallRunInfoEntry=hwCBQoSIfFirewallRunInfoEntry, hwCBQoSLrEbs=hwCBQoSLrEbs, hwCBQoSAtmPvcCbqRunInfoGroup=hwCBQoSAtmPvcCbqRunInfoGroup, hwCBQoSRedirectMULCfgInfoEntry=hwCBQoSRedirectMULCfgInfoEntry, hwCBQoSAtmPvcRemarkRunInfoTable=hwCBQoSAtmPvcRemarkRunInfoTable, hwCBQoSIfSampledPackets=hwCBQoSIfSampledPackets, hwCBQoSCarGroup=hwCBQoSCarGroup, hwCBQoSMultiPolicyStatClassifierIndex=hwCBQoSMultiPolicyStatClassifierIndex, hwCBQoSCountAction=hwCBQoSCountAction, hwCBQoSEgressGtsPir=hwCBQoSEgressGtsPir, hwCBQoSFrPvcGtsQueueSize=hwCBQoSFrPvcGtsQueueSize, hwCBQoSIfApplyPolicyEntry=hwCBQoSIfApplyPolicyEntry, hwCBQosIfClassPassedPackets=hwCBQosIfClassPassedPackets, hwCBQoSPolicyStatClassifierMatchedDropBytes=hwCBQoSPolicyStatClassifierMatchedDropBytes, hwCBQoSIfQueueRunInfoEntry=hwCBQoSIfQueueRunInfoEntry, hwCBQoSCarConformedPackets=hwCBQoSCarConformedPackets, hwCBQoSMultiPolicyStatisticsClassifierTable=hwCBQoSMultiPolicyStatisticsClassifierTable, hwCBQoSRedirectIfIndex=hwCBQoSRedirectIfIndex, hwCBQoSAtmPvcApplyPolicyGroup=hwCBQoSAtmPvcApplyPolicyGroup, hwCBQoSAtmPvcApplyPolicyTable=hwCBQoSAtmPvcApplyPolicyTable, hwCBQoSFirewallRowStatus=hwCBQoSFirewallRowStatus, hwCBQoSDropProfileRowStatus=hwCBQoSDropProfileRowStatus, hwCBQoSIfUrpfRunInfoTable=hwCBQoSIfUrpfRunInfoTable, hwCBQoSCarConformedBytes=hwCBQoSCarConformedBytes, hwCBQoSIfRedirectRunInfoEntry=hwCBQoSIfRedirectRunInfoEntry, hwCBQoSAtmPvcQueueRunInfoEntry=hwCBQoSAtmPvcQueueRunInfoEntry, hwCBQoSFrPvcApplyPolicyGroup=hwCBQoSFrPvcApplyPolicyGroup, hwCBQoSNotificationsGroup=hwCBQoSNotificationsGroup, hwCBQoSIfApplyMultiPolicyDirection=hwCBQoSIfApplyMultiPolicyDirection, hwCBQoSPolicyStatClassifierName=hwCBQoSPolicyStatClassifierName, hwCBQoSIfCarYellowPassedBytesRate=hwCBQoSIfCarYellowPassedBytesRate, hwCBQoSIfCarGreenDiscardedBytesRate=hwCBQoSIfCarGreenDiscardedBytesRate, hwCBQoSSamplingRowStatus=hwCBQoSSamplingRowStatus, hwCBQoSIfCbqAfAllocatedQueueNum=hwCBQoSIfCbqAfAllocatedQueueNum, hwCBQoSRedirectMULIfIndex1=hwCBQoSRedirectMULIfIndex1, hwCBQoSMIB=hwCBQoSMIB, hwCBQoSIfVlanClassMatchedPackets=hwCBQoSIfVlanClassMatchedPackets, hwCBQoSPolicyStatClassifierMatchedBytesRate=hwCBQoSPolicyStatClassifierMatchedBytesRate, hwCBQoSWredClassCfgInfoTable=hwCBQoSWredClassCfgInfoTable, hwCBQoSClassifierName=hwCBQoSClassifierName, hwCBQoSIfFilteredBytes=hwCBQoSIfFilteredBytes, hwCBQoSDenyPacketLengthCfgInfoEntry=hwCBQoSDenyPacketLengthCfgInfoEntry, hwCBQoSMatchRuleType=hwCBQoSMatchRuleType, hwCBQoSClassifierMatchedDropBytes=hwCBQoSClassifierMatchedDropBytes, hwCBQoSIfQueueDiscardedPacketsRate=hwCBQoSIfQueueDiscardedPacketsRate, hwCBQoSAtmPvcGtsDelayedBytes=hwCBQoSAtmPvcGtsDelayedBytes, hwCBQoSIfCarGreenDiscardedPackets=hwCBQoSIfCarGreenDiscardedPackets, hwCBQoSRedirectLSPDstIpAddress=hwCBQoSRedirectLSPDstIpAddress, hwCBQoSCarExceededByteRate=hwCBQoSCarExceededByteRate, hwCBQoSPolicyName=hwCBQoSPolicyName, hwCBQoSFrPvcLrPassedPackets=hwCBQoSFrPvcLrPassedPackets, QueueBandwidthUnit=QueueBandwidthUnit, hwCBQoSFrPvcQueueDiscardedBytesRate=hwCBQoSFrPvcQueueDiscardedBytesRate, hwCBQoSMultiPolicyMatchedBytes=hwCBQoSMultiPolicyMatchedBytes, hwCBQoSRedirectVlanId=hwCBQoSRedirectVlanId, hwCBQoSSubPolicyStatClassifierMatchedBytes=hwCBQoSSubPolicyStatClassifierMatchedBytes, hwCBQoSVsiApplyPolicyName=hwCBQoSVsiApplyPolicyName, hwCBQoSClassifierLayer=hwCBQoSClassifierLayer, hwCBQoSPolicyStatisticsTable=hwCBQoSPolicyStatisticsTable, hwCBQoSFrPvcQueueDiscardedPackets=hwCBQoSFrPvcQueueDiscardedPackets, hwCBQoSSuppressionGreenAction=hwCBQoSSuppressionGreenAction, hwCBQoSEgressGtsCfgInfoEntry=hwCBQoSEgressGtsCfgInfoEntry, hwCBQoSFrPvcQueueMatchedBytes=hwCBQoSFrPvcQueueMatchedBytes, hwCBQoSMultiPolicyMatchedDropBytes=hwCBQoSMultiPolicyMatchedDropBytes, hwCBQoSIfGtsDelayedBytes=hwCBQoSIfGtsDelayedBytes, hwCBQoSServiceClassCfgInfoEntry=hwCBQoSServiceClassCfgInfoEntry, hwCBQoSRuleSlotID=hwCBQoSRuleSlotID, hwCBQoSAtmPvcClassMatchRunInfoTable=hwCBQoSAtmPvcClassMatchRunInfoTable, hwCBQoSActionNotSupportAlarm=hwCBQoSActionNotSupportAlarm, hwCBQoSPolicyMatchedPacketsRate=hwCBQoSPolicyMatchedPacketsRate, hwCBQoSMirrorCfgInfoTable=hwCBQoSMirrorCfgInfoTable, hwCBQoSFrPvcCbqRunInfoGroup=hwCBQoSFrPvcCbqRunInfoGroup, hwCBQoSSuppressionGreenRemarkValue=hwCBQoSSuppressionGreenRemarkValue, hwCBQoSGtsRowStatus=hwCBQoSGtsRowStatus, hwCBQoSClassifierIndex=hwCBQoSClassifierIndex, hwCBQoSAtmPvcCbqBeMaxActiveQueueNum=hwCBQoSAtmPvcCbqBeMaxActiveQueueNum, hwCBQoSAtmPvcWredRandomDiscardedPackets=hwCBQoSAtmPvcWredRandomDiscardedPackets, RedirectCtrlType=RedirectCtrlType, hwCBQoSGeneral=hwCBQoSGeneral, hwCBQoSPolicyClassIndex=hwCBQoSPolicyClassIndex, hwCBQoSClassifierCfgInfoTable=hwCBQoSClassifierCfgInfoTable, hwCBQoSLrCir=hwCBQoSLrCir, hwCBQoSCarRedRemarkValue=hwCBQoSCarRedRemarkValue, hwCBQoSSubPolicyStatClassifierMatchedPassBytesRate=hwCBQoSSubPolicyStatClassifierMatchedPassBytesRate, hwCBQoSCarOverSpeedThresholdTrap=hwCBQoSCarOverSpeedThresholdTrap, hwCBQoSLoadBalanceCfgInfoEntry=hwCBQoSLoadBalanceCfgInfoEntry, hwCBQoSTrapDiscardPackets=hwCBQoSTrapDiscardPackets, hwCBQoSPolicyStatisticsClassifierGroup=hwCBQoSPolicyStatisticsClassifierGroup, hwCBQoSSubPolicyStatClassifierQueueMatchedBytesRate=hwCBQoSSubPolicyStatClassifierQueueMatchedBytesRate, hwCBQoSRedirectMULRowStatus=hwCBQoSRedirectMULRowStatus, hwCBQoSAtmPvcLrDiscardedBytes=hwCBQoSAtmPvcLrDiscardedBytes, hwCBQoSDropProfileHighLimit=hwCBQoSDropProfileHighLimit, hwCBQoSPortId=hwCBQoSPortId, hwCBQoSAtmPvcLrRunInfoTable=hwCBQoSAtmPvcLrRunInfoTable, hwCBQoSApplyPolicyObjects=hwCBQoSApplyPolicyObjects, hwCBQoSIfCarGreenRemarkedBytes=hwCBQoSIfCarGreenRemarkedBytes, hwCBQoSAtmPvcCarConformPackets=hwCBQoSAtmPvcCarConformPackets, hwCBQoSAtmPvcGtsRunInfoTable=hwCBQoSAtmPvcGtsRunInfoTable, hwCBQoSBehaviorObjects=hwCBQoSBehaviorObjects, hwCBQoSQueueCbsRatio=hwCBQoSQueueCbsRatio, hwCBQoSMultiPolicyStatClassifierUnmatchedBytes=hwCBQoSMultiPolicyStatClassifierUnmatchedBytes, hwCBQoSSubPolicyStatClassifierMatchedPassPacketsRate=hwCBQoSSubPolicyStatClassifierMatchedPassPacketsRate, hwCBQoSClassifierStatisticsEntry=hwCBQoSClassifierStatisticsEntry, hwCBQoSRuleNotSupportAlarmGroup=hwCBQoSRuleNotSupportAlarmGroup, hwCBQoSPolicyCfgInfoTable=hwCBQoSPolicyCfgInfoTable, hwCBQoSIfVlanApplyPolicyVlanid1=hwCBQoSIfVlanApplyPolicyVlanid1, hwCBQoSActionInfo=hwCBQoSActionInfo, hwCBQoSFrPvcQueueRunInfoTable=hwCBQoSFrPvcQueueRunInfoTable, hwCBQoSIfVlanApplyPolicyGroup=hwCBQoSIfVlanApplyPolicyGroup, hwCBQoSIfApplyPolicyTable=hwCBQoSIfApplyPolicyTable, hwCBQoSAtmPvcClassMatchPackets=hwCBQoSAtmPvcClassMatchPackets, hwCBQoSAtmPvcGtsDelayedPackets=hwCBQoSAtmPvcGtsDelayedPackets, hwCBQoSFirewallAction=hwCBQoSFirewallAction, hwCBQoSCountCfgInfoTable=hwCBQoSCountCfgInfoTable, hwCBQoSAtmPvcCarRunInfoTable=hwCBQoSAtmPvcCarRunInfoTable, hwCBQoSSuppressionCir=hwCBQoSSuppressionCir, hwCBQoSRedirectCfgInfoEntry=hwCBQoSRedirectCfgInfoEntry, hwCBQoSUrpfCfgInfoTable=hwCBQoSUrpfCfgInfoTable, hwCBQoSQueryObjects=hwCBQoSQueryObjects, hwCBQoSFrPvcQueueMatchedPackets=hwCBQoSFrPvcQueueMatchedPackets, hwCBQoSIfCarYellowDiscardedBytesRate=hwCBQoSIfCarYellowDiscardedBytesRate, hwCBQoSSubPolicyStatClassifierMatchedBytesRate=hwCBQoSSubPolicyStatClassifierMatchedBytesRate, hwCBQoSVlanApplyMultiPolicyVlanId=hwCBQoSVlanApplyMultiPolicyVlanId, hwCBQoSFrClassApplyPolicyRowStatus=hwCBQoSFrClassApplyPolicyRowStatus, hwCBQoSDenyPacketLengthCfgInfoGroup=hwCBQoSDenyPacketLengthCfgInfoGroup, hwCBQoSEgressGtsGroup=hwCBQoSEgressGtsGroup, hwCBQoSFrPvcApplyPolicyIfIndex=hwCBQoSFrPvcApplyPolicyIfIndex, hwCBQoSIfCarRedPassedBytes=hwCBQoSIfCarRedPassedBytes, SamplingType=SamplingType, hwCBQoSAtmPvcStaticsObjects=hwCBQoSAtmPvcStaticsObjects)
mibBuilder.exportSymbols("HUAWEI-CBQOS-MIB", hwCBQoSFrPvcLrDiscardedBytes=hwCBQoSFrPvcLrDiscardedBytes, hwCBQoSIfQueueRunInfoGroup=hwCBQoSIfQueueRunInfoGroup, hwCBQoSFrPvcApplyPolicyEntry=hwCBQoSFrPvcApplyPolicyEntry, hwCBQoSIfVlanApplyPolicyCeVidEnd=hwCBQoSIfVlanApplyPolicyCeVidEnd, hwCBQoSCarDroppedPackets=hwCBQoSCarDroppedPackets, hwCBQoSPolicyGroup=hwCBQoSPolicyGroup, hwCBQoSFrPvcRemarkRunInfoGroup=hwCBQoSFrPvcRemarkRunInfoGroup, hwCBQoSSubPolicyStatClassifierCarRedPassedPacketsRate=hwCBQoSSubPolicyStatClassifierCarRedPassedPacketsRate, hwCBQoSIfGtsQueueSize=hwCBQoSIfGtsQueueSize, CBQueueType=CBQueueType, hwCBQoSWredClassValue=hwCBQoSWredClassValue, hwCBQoSFirewallGroup=hwCBQoSFirewallGroup, hwCBQoSAtmPvcQueueDiscardedBytes=hwCBQoSAtmPvcQueueDiscardedBytes, hwCBQoSCarExceededPackets=hwCBQoSCarExceededPackets, hwCBQoSRedirectGroup=hwCBQoSRedirectGroup, hwCBQoSIfMirroredPackets=hwCBQoSIfMirroredPackets, hwCBQoSRemarkStringValue=hwCBQoSRemarkStringValue, hwCBQoSPolicyShareModeGroup=hwCBQoSPolicyShareModeGroup, hwCBQoSFrPvcGtsPassedPackets=hwCBQoSFrPvcGtsPassedPackets, hwCBQoSVsiApplyPolicyEntry=hwCBQoSVsiApplyPolicyEntry, hwCBQoSVlanClassMatchRunInfoTable=hwCBQoSVlanClassMatchRunInfoTable, hwCBQoSAtmPvcRemarkedPackets=hwCBQoSAtmPvcRemarkedPackets, hwCBQoSFrPvcCarExceedPacketsRate=hwCBQoSFrPvcCarExceedPacketsRate, hwCBQoSSubPolicyStatClassifierMatchedPackets=hwCBQoSSubPolicyStatClassifierMatchedPackets, hwCBQoSGtsEbs=hwCBQoSGtsEbs, hwCBQoSApplyPolicyStaticsObjects=hwCBQoSApplyPolicyStaticsObjects, hwCBQoSFrPvcCbqRunInfoTable=hwCBQoSFrPvcCbqRunInfoTable, hwCBQoSPolicyStatClassifierMatchedDropPackets=hwCBQoSPolicyStatClassifierMatchedDropPackets, hwCBQoSCarCbs=hwCBQoSCarCbs, hwCBQoSAtmPvcClassMatchRunInfoGroup=hwCBQoSAtmPvcClassMatchRunInfoGroup, CarAction=CarAction, hwCBQoSRedirectMULIpAddress1=hwCBQoSRedirectMULIpAddress1, hwCBQoSVsiApplyPolicyRowStatus=hwCBQoSVsiApplyPolicyRowStatus, hwCBQoSDropProfileLowLimit=hwCBQoSDropProfileLowLimit, hwCBQoSRedirectMULIfIndex3=hwCBQoSRedirectMULIfIndex3, hwCBQoSFrPvcClassMatchedPackets=hwCBQoSFrPvcClassMatchedPackets, hwCBQoSMatchRuleIfNot=hwCBQoSMatchRuleIfNot, hwCBQoSAtmPvcRemarkRunInfoGroup=hwCBQoSAtmPvcRemarkRunInfoGroup, hwCBQoSActionNotSupportAlarmEntry=hwCBQoSActionNotSupportAlarmEntry, hwCBQoSAtmPvcGtsPassedBytes=hwCBQoSAtmPvcGtsPassedBytes, hwCBQoSGtsPir=hwCBQoSGtsPir, hwCBQoSRedirectVsiTable=hwCBQoSRedirectVsiTable, hwCBQoSQueryPolicyName=hwCBQoSQueryPolicyName, hwCBQoSVlanApplyPolicyName=hwCBQoSVlanApplyPolicyName, hwCBQoSFrPvcCarRunInfoGroup=hwCBQoSFrPvcCarRunInfoGroup, hwCBQoSIfVlanApplyPolicyDirection=hwCBQoSIfVlanApplyPolicyDirection, hwCBQoSSuppressionCfgInfoEntry=hwCBQoSSuppressionCfgInfoEntry, hwCBQoSDropProfileCfgInfoTable=hwCBQoSDropProfileCfgInfoTable, hwCBQoSIfUrpfPassedBytes=hwCBQoSIfUrpfPassedBytes, hwCBQoSFrPvcApplyPolicyDlciNum=hwCBQoSFrPvcApplyPolicyDlciNum, hwCBQoSTrapEgressIfName=hwCBQoSTrapEgressIfName, hwCBQoSGtsCfgInfoTable=hwCBQoSGtsCfgInfoTable, hwCBQoSMultiPolicyStatClassifierMatchedBytes=hwCBQoSMultiPolicyStatClassifierMatchedBytes, hwCBQoSIfCbqBeQueueSize=hwCBQoSIfCbqBeQueueSize, hwCBQoSSubPolicyStatClassifierQueueEnqueuedPacketsRate=hwCBQoSSubPolicyStatClassifierQueueEnqueuedPacketsRate)
