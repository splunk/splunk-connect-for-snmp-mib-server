#
# PySNMP MIB module TPT-NGFW-POLICY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPT-NGFW-POLICY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:19:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Bits, Unsigned32, Gauge32, ModuleIdentity, MibIdentifier, IpAddress, Integer32, Counter64, iso, Counter32, TimeTicks, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Unsigned32", "Gauge32", "ModuleIdentity", "MibIdentifier", "IpAddress", "Integer32", "Counter64", "iso", "Counter32", "TimeTicks", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity")
TextualConvention, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "DisplayString")
tpt_ngfw_objs, tpt_ngfw_groups, tpt_ngfw_compls, tpt_ngfw_params, tpt_ngfw_eventsV2 = mibBuilder.importSymbols("TPT-NGFW-REG-MIB", "tpt-ngfw-objs", "tpt-ngfw-groups", "tpt-ngfw-compls", "tpt-ngfw-params", "tpt-ngfw-eventsV2")
tptNgfwSystemSerial, = mibBuilder.importSymbols("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemSerial")
tptNgfwPolicy = ModuleIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 9, 2, 4))
tptNgfwPolicy.setRevisions(('2016-05-25 18:54', '2013-03-13 12:00',))
if mibBuilder.loadTexts: tptNgfwPolicy.setLastUpdated('201605251854Z')
if mibBuilder.loadTexts: tptNgfwPolicy.setOrganization('Trend Micro, Inc.')
class EventSource(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("firewall", 1), ("ips", 2), ("reputation", 3), ("quarantine", 4))

class FirewallEventType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("sessionStart", 1), ("applicationDetect", 2), ("sessionEnd", 3), ("blockedByFirewall", 4))

class EventSeverity(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("info", 1), ("low", 2), ("minor", 3), ("major", 4), ("critical", 5))

class ActionType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("permit", 1), ("rateLimit", 2), ("trust", 3), ("block", 4), ("quarantine", 5))

class PacketTraceVersion(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("packetTraceV1", 1), ("packetTraceV2", 2), ("none", 3))

tptNgfwPolicyNotifyTime = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 20), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyTime.setStatus('current')
tptNgfwPolicyNotifyEventSource = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 21), EventSource()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyEventSource.setStatus('current')
tptNgfwPolicyNotifyEventType = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 22), FirewallEventType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyEventType.setStatus('current')
tptNgfwPolicyNotifyEventSeverity = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 23), EventSeverity()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyEventSeverity.setStatus('current')
tptNgfwPolicyNotifyCorrelationId = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 24), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyCorrelationId.setStatus('current')
tptNgfwPolicyNotifyActionType = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 25), ActionType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyActionType.setStatus('current')
tptNgfwPolicyNotifyAction = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 26), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyAction.setStatus('current')
tptNgfwPolicyNotifyActionSetName = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 27), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyActionSetName.setStatus('current')
tptNgfwPolicyNotifyRuleName = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 28), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyRuleName.setStatus('current')
tptNgfwPolicyNotifyInInterface = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 29), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyInInterface.setStatus('current')
tptNgfwPolicyNotifyOutInterface = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 30), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyOutInterface.setStatus('current')
tptNgfwPolicyNotifySrcIpAddrType = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 31), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifySrcIpAddrType.setStatus('current')
tptNgfwPolicyNotifySrcIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 32), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifySrcIpAddr.setStatus('current')
tptNgfwPolicyNotifySrcPort = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 33), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifySrcPort.setStatus('current')
tptNgfwPolicyNotifySrcTransIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 34), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifySrcTransIpAddr.setStatus('current')
tptNgfwPolicyNotifySrcTransPort = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 35), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifySrcTransPort.setStatus('current')
tptNgfwPolicyNotifyDestIpAddrType = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 36), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyDestIpAddrType.setStatus('current')
tptNgfwPolicyNotifyDestIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 37), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyDestIpAddr.setStatus('current')
tptNgfwPolicyNotifyDestPort = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 38), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyDestPort.setStatus('current')
tptNgfwPolicyNotifyDestTransIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 39), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyDestTransIpAddr.setStatus('current')
tptNgfwPolicyNotifyDestTransPort = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 40), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyDestTransPort.setStatus('current')
tptNgfwPolicyNotifyProtocol = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 41), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyProtocol.setStatus('current')
tptNgfwPolicyNotifyApplicationName = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 42), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyApplicationName.setStatus('current')
tptNgfwPolicyNotifyUserName = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 43), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyUserName.setStatus('current')
tptNgfwPolicyNotifyBytesIn = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 44), Counter64()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyBytesIn.setStatus('current')
tptNgfwPolicyNotifyBytesOut = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 45), Counter64()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyBytesOut.setStatus('current')
tptNgfwPolicyNotifyStartTimeSec = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 46), Counter64()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyStartTimeSec.setStatus('current')
tptNgfwPolicyNotifyStartTimeNano = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 47), Counter64()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyStartTimeNano.setStatus('current')
tptNgfwPolicyNotifyRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 48), Counter64()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyRateLimit.setStatus('current')
tptNgfwPolicyNotifyPktTraceVer = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 49), PacketTraceVersion()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyPktTraceVer.setStatus('current')
tptNgfwPolicyNotifyPktTraceId = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 50), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyPktTraceId.setStatus('current')
tptNgfwPolicyNotifyPktTraceBegin = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 51), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyPktTraceBegin.setStatus('current')
tptNgfwPolicyNotifyPktTraceEnd = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 52), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyPktTraceEnd.setStatus('current')
tptNgfwPolicyNotifyFilterName = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 53), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyFilterName.setStatus('current')
tptNgfwPolicyNotifyProfileName = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 54), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyProfileName.setStatus('current')
tptNgfwPolicyNotifyPolicyName = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 55), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyPolicyName.setStatus('current')
tptNgfwPolicyNotifyVlanId = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 56), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyVlanId.setStatus('current')
tptNgfwPolicyNotifyHitCount = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 57), Counter64()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyHitCount.setStatus('current')
tptNgfwPolicyNotifyMsgParams = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 58), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyMsgParams.setStatus('current')
tptNgfwPolicyNotifyPeriod = MibScalar((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 1, 59), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tptNgfwPolicyNotifyPeriod.setStatus('current')
tptNgfwPolicyNotify = NotificationType((1, 3, 6, 1, 4, 1, 10734, 3, 9, 3, 0, 10)).setObjects(("TPT-NGFW-SYSTEM-INFO-MIB", "tptNgfwSystemSerial"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyTime"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyEventSource"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyEventType"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyEventSeverity"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyCorrelationId"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyActionType"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyAction"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyRuleName"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyInInterface"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyOutInterface"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifySrcIpAddrType"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifySrcIpAddr"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifySrcPort"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifySrcTransIpAddr"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifySrcTransPort"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyDestIpAddrType"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyDestIpAddr"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyDestPort"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyDestTransIpAddr"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyDestTransPort"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyProtocol"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyApplicationName"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyUserName"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyBytesIn"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyBytesOut"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyStartTimeSec"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyStartTimeNano"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyRateLimit"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyPktTraceVer"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyPktTraceId"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyPktTraceBegin"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyPktTraceEnd"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyFilterName"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyProfileName"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyPolicyName"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyVlanId"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyHitCount"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyMsgParams"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyPeriod"))
if mibBuilder.loadTexts: tptNgfwPolicyNotify.setStatus('current')
tptNgfwPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 10734, 3, 9, 1, 1, 7)).setObjects(("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyTime"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyEventSource"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyEventType"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyEventSeverity"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyCorrelationId"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyActionType"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyActionSetName"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyAction"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyRuleName"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyInInterface"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyOutInterface"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifySrcIpAddrType"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifySrcIpAddr"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifySrcPort"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifySrcTransIpAddr"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifySrcTransPort"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyDestIpAddrType"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyDestIpAddr"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyDestPort"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyDestTransIpAddr"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyDestTransPort"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyProtocol"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyApplicationName"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyUserName"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyBytesIn"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyBytesOut"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyStartTimeSec"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyStartTimeNano"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyRateLimit"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyPktTraceVer"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyPktTraceId"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyPktTraceBegin"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyPktTraceEnd"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyFilterName"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyProfileName"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyPolicyName"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyVlanId"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyHitCount"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyMsgParams"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotifyPeriod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tptNgfwPolicyGroup = tptNgfwPolicyGroup.setStatus('current')
tptNgfwPolicyNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 10734, 3, 9, 1, 1, 8)).setObjects(("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tptNgfwPolicyNotificationGroup = tptNgfwPolicyNotificationGroup.setStatus('current')
tptNgfwPolicyCompl = ModuleCompliance((1, 3, 6, 1, 4, 1, 10734, 3, 9, 1, 2, 4)).setObjects(("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyGroup"), ("TPT-NGFW-POLICY-MIB", "tptNgfwPolicyNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tptNgfwPolicyCompl = tptNgfwPolicyCompl.setStatus('current')
mibBuilder.exportSymbols("TPT-NGFW-POLICY-MIB", tptNgfwPolicyNotifyPktTraceEnd=tptNgfwPolicyNotifyPktTraceEnd, tptNgfwPolicyNotifyDestTransIpAddr=tptNgfwPolicyNotifyDestTransIpAddr, tptNgfwPolicyNotify=tptNgfwPolicyNotify, tptNgfwPolicyNotificationGroup=tptNgfwPolicyNotificationGroup, tptNgfwPolicyNotifyPeriod=tptNgfwPolicyNotifyPeriod, tptNgfwPolicyNotifyInInterface=tptNgfwPolicyNotifyInInterface, tptNgfwPolicyNotifyDestTransPort=tptNgfwPolicyNotifyDestTransPort, tptNgfwPolicyNotifyPktTraceVer=tptNgfwPolicyNotifyPktTraceVer, tptNgfwPolicyNotifyEventSource=tptNgfwPolicyNotifyEventSource, tptNgfwPolicyNotifyPktTraceId=tptNgfwPolicyNotifyPktTraceId, tptNgfwPolicyNotifyStartTimeSec=tptNgfwPolicyNotifyStartTimeSec, tptNgfwPolicyGroup=tptNgfwPolicyGroup, tptNgfwPolicyNotifyDestIpAddr=tptNgfwPolicyNotifyDestIpAddr, tptNgfwPolicyNotifyEventType=tptNgfwPolicyNotifyEventType, tptNgfwPolicyNotifySrcIpAddr=tptNgfwPolicyNotifySrcIpAddr, tptNgfwPolicyNotifyOutInterface=tptNgfwPolicyNotifyOutInterface, tptNgfwPolicyNotifyRuleName=tptNgfwPolicyNotifyRuleName, tptNgfwPolicyNotifyStartTimeNano=tptNgfwPolicyNotifyStartTimeNano, tptNgfwPolicyNotifyFilterName=tptNgfwPolicyNotifyFilterName, tptNgfwPolicyNotifySrcTransPort=tptNgfwPolicyNotifySrcTransPort, tptNgfwPolicyNotifyProtocol=tptNgfwPolicyNotifyProtocol, tptNgfwPolicyNotifyPolicyName=tptNgfwPolicyNotifyPolicyName, tptNgfwPolicyNotifySrcIpAddrType=tptNgfwPolicyNotifySrcIpAddrType, tptNgfwPolicyNotifyDestPort=tptNgfwPolicyNotifyDestPort, tptNgfwPolicyNotifyEventSeverity=tptNgfwPolicyNotifyEventSeverity, EventSource=EventSource, tptNgfwPolicyNotifyCorrelationId=tptNgfwPolicyNotifyCorrelationId, tptNgfwPolicyNotifyMsgParams=tptNgfwPolicyNotifyMsgParams, tptNgfwPolicyNotifySrcTransIpAddr=tptNgfwPolicyNotifySrcTransIpAddr, tptNgfwPolicyNotifyUserName=tptNgfwPolicyNotifyUserName, tptNgfwPolicyNotifyVlanId=tptNgfwPolicyNotifyVlanId, tptNgfwPolicyNotifySrcPort=tptNgfwPolicyNotifySrcPort, tptNgfwPolicyNotifyAction=tptNgfwPolicyNotifyAction, tptNgfwPolicyNotifyRateLimit=tptNgfwPolicyNotifyRateLimit, tptNgfwPolicyNotifyActionType=tptNgfwPolicyNotifyActionType, tptNgfwPolicyNotifyTime=tptNgfwPolicyNotifyTime, tptNgfwPolicyNotifyActionSetName=tptNgfwPolicyNotifyActionSetName, PacketTraceVersion=PacketTraceVersion, tptNgfwPolicyNotifyBytesOut=tptNgfwPolicyNotifyBytesOut, ActionType=ActionType, PYSNMP_MODULE_ID=tptNgfwPolicy, tptNgfwPolicyCompl=tptNgfwPolicyCompl, tptNgfwPolicy=tptNgfwPolicy, tptNgfwPolicyNotifyDestIpAddrType=tptNgfwPolicyNotifyDestIpAddrType, tptNgfwPolicyNotifyProfileName=tptNgfwPolicyNotifyProfileName, EventSeverity=EventSeverity, tptNgfwPolicyNotifyPktTraceBegin=tptNgfwPolicyNotifyPktTraceBegin, tptNgfwPolicyNotifyBytesIn=tptNgfwPolicyNotifyBytesIn, tptNgfwPolicyNotifyApplicationName=tptNgfwPolicyNotifyApplicationName, tptNgfwPolicyNotifyHitCount=tptNgfwPolicyNotifyHitCount, FirewallEventType=FirewallEventType)
