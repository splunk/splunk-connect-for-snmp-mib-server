#
# PySNMP MIB module Nortel-Magellan-Passport-AtmIispMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-Magellan-Passport-AtmIispMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:16:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
atmIfIndex, atmIfVpt, atmIfVptIndex, atmIf = mibBuilder.importSymbols("Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex", "atmIfVpt", "atmIfVptIndex", "atmIf")
Integer32, StorageType, RowStatus, DisplayString, Unsigned32, Counter32, Gauge32 = mibBuilder.importSymbols("Nortel-Magellan-Passport-StandardTextualConventionsMIB", "Integer32", "StorageType", "RowStatus", "DisplayString", "Unsigned32", "Counter32", "Gauge32")
Hex, NonReplicated, AsciiStringIndex = mibBuilder.importSymbols("Nortel-Magellan-Passport-TextualConventionsMIB", "Hex", "NonReplicated", "AsciiStringIndex")
passportMIBs, = mibBuilder.importSymbols("Nortel-Magellan-Passport-UsefulDefinitionsMIB", "passportMIBs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ObjectIdentity, TimeTicks, IpAddress, Integer32, MibIdentifier, ModuleIdentity, iso, Unsigned32, Counter32, Gauge32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ObjectIdentity", "TimeTicks", "IpAddress", "Integer32", "MibIdentifier", "ModuleIdentity", "iso", "Unsigned32", "Counter32", "Gauge32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
atmIispMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 70))
atmIfIisp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7))
atmIfIispRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 1), )
if mibBuilder.loadTexts: atmIfIispRowStatusTable.setStatus('mandatory')
atmIfIispRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispIndex"))
if mibBuilder.loadTexts: atmIfIispRowStatusEntry.setStatus('mandatory')
atmIfIispRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispRowStatus.setStatus('mandatory')
atmIfIispComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispComponentName.setStatus('mandatory')
atmIfIispStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispStorageType.setStatus('mandatory')
atmIfIispIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfIispIndex.setStatus('mandatory')
atmIfIispProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 10), )
if mibBuilder.loadTexts: atmIfIispProvTable.setStatus('mandatory')
atmIfIispProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispIndex"))
if mibBuilder.loadTexts: atmIfIispProvEntry.setStatus('mandatory')
atmIfIispVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("iisp10Sig30", 2), ("iisp10Sig31", 3))).clone('iisp10Sig31')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispVersion.setStatus('mandatory')
atmIfIispSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("networkSide", 0), ("userSide", 1))).clone('networkSide')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispSide.setStatus('mandatory')
atmIfIispSoftPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispSoftPvcRetryPeriod.setStatus('obsolete')
atmIfIispSoftPvpAndPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispSoftPvpAndPvcRetryPeriod.setStatus('mandatory')
atmIfIispSoftPvpAndPvcHoldOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(50, 20000), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispSoftPvpAndPvcHoldOffTime.setStatus('mandatory')
atmIfIispAcctOptTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 11), )
if mibBuilder.loadTexts: atmIfIispAcctOptTable.setStatus('mandatory')
atmIfIispAcctOptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispIndex"))
if mibBuilder.loadTexts: atmIfIispAcctOptEntry.setStatus('mandatory')
atmIfIispAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 11, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispAccountCollection.setStatus('mandatory')
atmIfIispAccountConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("origTerm", 0), ("intermediate", 1))).clone('intermediate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispAccountConnectionType.setStatus('mandatory')
atmIfIispAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispAccountClass.setStatus('mandatory')
atmIfIispServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispServiceExchange.setStatus('mandatory')
atmIfIispSig = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3))
atmIfIispSigRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 1), )
if mibBuilder.loadTexts: atmIfIispSigRowStatusTable.setStatus('mandatory')
atmIfIispSigRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispSigIndex"))
if mibBuilder.loadTexts: atmIfIispSigRowStatusEntry.setStatus('mandatory')
atmIfIispSigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigRowStatus.setStatus('mandatory')
atmIfIispSigComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigComponentName.setStatus('mandatory')
atmIfIispSigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigStorageType.setStatus('mandatory')
atmIfIispSigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfIispSigIndex.setStatus('mandatory')
atmIfIispSigProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 10), )
if mibBuilder.loadTexts: atmIfIispSigProvTable.setStatus('mandatory')
atmIfIispSigProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispSigIndex"))
if mibBuilder.loadTexts: atmIfIispSigProvEntry.setStatus('mandatory')
atmIfIispSigVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispSigVci.setStatus('mandatory')
atmIfIispSigAddressConversion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("nativeE164", 1), ("nsap", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispSigAddressConversion.setStatus('mandatory')
atmIfIispSigStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 11), )
if mibBuilder.loadTexts: atmIfIispSigStateTable.setStatus('mandatory')
atmIfIispSigStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispSigIndex"))
if mibBuilder.loadTexts: atmIfIispSigStateEntry.setStatus('mandatory')
atmIfIispSigAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigAdminState.setStatus('mandatory')
atmIfIispSigOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigOperationalState.setStatus('mandatory')
atmIfIispSigUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigUsageState.setStatus('mandatory')
atmIfIispSigOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 12), )
if mibBuilder.loadTexts: atmIfIispSigOperTable.setStatus('mandatory')
atmIfIispSigOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispSigIndex"))
if mibBuilder.loadTexts: atmIfIispSigOperEntry.setStatus('mandatory')
atmIfIispSigLastTxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigLastTxCauseCode.setStatus('mandatory')
atmIfIispSigLastTxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 12, 1, 2), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigLastTxDiagCode.setStatus('mandatory')
atmIfIispSigLastRxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigLastRxCauseCode.setStatus('mandatory')
atmIfIispSigLastRxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 12, 1, 4), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigLastRxDiagCode.setStatus('mandatory')
atmIfIispSigStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 13), )
if mibBuilder.loadTexts: atmIfIispSigStatsTable.setStatus('mandatory')
atmIfIispSigStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispSigIndex"))
if mibBuilder.loadTexts: atmIfIispSigStatsEntry.setStatus('mandatory')
atmIfIispSigCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigCurrentConnections.setStatus('obsolete')
atmIfIispSigPeakConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 13, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigPeakConnections.setStatus('mandatory')
atmIfIispSigSuccessfulConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigSuccessfulConnections.setStatus('mandatory')
atmIfIispSigFailedConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigFailedConnections.setStatus('mandatory')
atmIfIispSigTxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigTxPdus.setStatus('mandatory')
atmIfIispSigRxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigRxPdus.setStatus('mandatory')
atmIfIispSigCurrentPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 13, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigCurrentPmpConnections.setStatus('mandatory')
atmIfIispSigPeakPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 13, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigPeakPmpConnections.setStatus('mandatory')
atmIfIispSigSuccessfulPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigSuccessfulPmpConnections.setStatus('mandatory')
atmIfIispSigFailedPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigFailedPmpConnections.setStatus('mandatory')
atmIfIispSigNewCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 13, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigNewCurrentConnections.setStatus('mandatory')
atmIfIispSigVcd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2))
atmIfIispSigVcdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2, 1), )
if mibBuilder.loadTexts: atmIfIispSigVcdRowStatusTable.setStatus('mandatory')
atmIfIispSigVcdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispSigIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispSigVcdIndex"))
if mibBuilder.loadTexts: atmIfIispSigVcdRowStatusEntry.setStatus('mandatory')
atmIfIispSigVcdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispSigVcdRowStatus.setStatus('mandatory')
atmIfIispSigVcdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigVcdComponentName.setStatus('mandatory')
atmIfIispSigVcdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispSigVcdStorageType.setStatus('mandatory')
atmIfIispSigVcdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfIispSigVcdIndex.setStatus('mandatory')
atmIfIispSigVcdProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2, 10), )
if mibBuilder.loadTexts: atmIfIispSigVcdProvTable.setStatus('mandatory')
atmIfIispSigVcdProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispSigIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispSigVcdIndex"))
if mibBuilder.loadTexts: atmIfIispSigVcdProvEntry.setStatus('mandatory')
atmIfIispSigVcdTrafficDescType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 6, 7, 8))).clone(namedValues=NamedValues(("n3", 3), ("n6", 6), ("n7", 7), ("n8", 8))).clone('n6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispSigVcdTrafficDescType.setStatus('mandatory')
atmIfIispSigVcdAtmServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unspecifiedBitRate", 0), ("constantBitRate", 1), ("rtVariableBitRate", 2), ("nrtVariableBitRate", 3))).clone('rtVariableBitRate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispSigVcdAtmServiceCategory.setStatus('mandatory')
atmIfIispSigVcdQosClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4))).clone('n2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispSigVcdQosClass.setStatus('mandatory')
atmIfIispSigVcdTrafficShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2, 10, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispSigVcdTrafficShaping.setStatus('mandatory')
atmIfIispSigVcdUnshapedTransmitQueueing = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2, 10, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("common", 1), ("sameAsCa", 3))).clone('sameAsCa')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispSigVcdUnshapedTransmitQueueing.setStatus('mandatory')
atmIfIispSigVcdUsageParameterControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2, 10, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispSigVcdUsageParameterControl.setStatus('mandatory')
atmIfIispSigVcdTdpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2, 387), )
if mibBuilder.loadTexts: atmIfIispSigVcdTdpTable.setStatus('mandatory')
atmIfIispSigVcdTdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2, 387, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispSigIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispSigVcdIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispSigVcdTdpIndex"))
if mibBuilder.loadTexts: atmIfIispSigVcdTdpEntry.setStatus('mandatory')
atmIfIispSigVcdTdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2, 387, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: atmIfIispSigVcdTdpIndex.setStatus('mandatory')
atmIfIispSigVcdTdpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 3, 2, 387, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispSigVcdTdpValue.setStatus('mandatory')
atmIfIispAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4))
atmIfIispAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 1), )
if mibBuilder.loadTexts: atmIfIispAddrRowStatusTable.setStatus('mandatory')
atmIfIispAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispAddrAddressTypeIndex"))
if mibBuilder.loadTexts: atmIfIispAddrRowStatusEntry.setStatus('mandatory')
atmIfIispAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispAddrRowStatus.setStatus('mandatory')
atmIfIispAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispAddrComponentName.setStatus('mandatory')
atmIfIispAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispAddrStorageType.setStatus('mandatory')
atmIfIispAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: atmIfIispAddrAddressIndex.setStatus('mandatory')
atmIfIispAddrAddressTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("primary", 0), ("alternate", 1), ("default", 3))))
if mibBuilder.loadTexts: atmIfIispAddrAddressTypeIndex.setStatus('mandatory')
atmIfIispAddrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 10), )
if mibBuilder.loadTexts: atmIfIispAddrOperTable.setStatus('mandatory')
atmIfIispAddrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispAddrAddressTypeIndex"))
if mibBuilder.loadTexts: atmIfIispAddrOperEntry.setStatus('mandatory')
atmIfIispAddrScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispAddrScope.setStatus('mandatory')
atmIfIispAddrReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispAddrReachability.setStatus('mandatory')
atmIfIispAddrTermSP = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 2))
atmIfIispAddrTermSPRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 2, 1), )
if mibBuilder.loadTexts: atmIfIispAddrTermSPRowStatusTable.setStatus('mandatory')
atmIfIispAddrTermSPRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispAddrAddressTypeIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispAddrTermSPIndex"))
if mibBuilder.loadTexts: atmIfIispAddrTermSPRowStatusEntry.setStatus('mandatory')
atmIfIispAddrTermSPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispAddrTermSPRowStatus.setStatus('mandatory')
atmIfIispAddrTermSPComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispAddrTermSPComponentName.setStatus('mandatory')
atmIfIispAddrTermSPStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispAddrTermSPStorageType.setStatus('mandatory')
atmIfIispAddrTermSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfIispAddrTermSPIndex.setStatus('mandatory')
atmIfIispAddrPnniInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 3))
atmIfIispAddrPnniInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 3, 1), )
if mibBuilder.loadTexts: atmIfIispAddrPnniInfoRowStatusTable.setStatus('mandatory')
atmIfIispAddrPnniInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispAddrAddressTypeIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispAddrPnniInfoIndex"))
if mibBuilder.loadTexts: atmIfIispAddrPnniInfoRowStatusEntry.setStatus('mandatory')
atmIfIispAddrPnniInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispAddrPnniInfoRowStatus.setStatus('mandatory')
atmIfIispAddrPnniInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispAddrPnniInfoComponentName.setStatus('mandatory')
atmIfIispAddrPnniInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfIispAddrPnniInfoStorageType.setStatus('mandatory')
atmIfIispAddrPnniInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfIispAddrPnniInfoIndex.setStatus('mandatory')
atmIfIispAddrPnniInfoProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 3, 10), )
if mibBuilder.loadTexts: atmIfIispAddrPnniInfoProvTable.setStatus('mandatory')
atmIfIispAddrPnniInfoProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispAddrAddressTypeIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfIispAddrPnniInfoIndex"))
if mibBuilder.loadTexts: atmIfIispAddrPnniInfoProvEntry.setStatus('mandatory')
atmIfIispAddrPnniInfoScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispAddrPnniInfoScope.setStatus('mandatory')
atmIfIispAddrPnniInfoReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 7, 4, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfIispAddrPnniInfoReachability.setStatus('mandatory')
atmIfVptIisp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6))
atmIfVptIispRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 1), )
if mibBuilder.loadTexts: atmIfVptIispRowStatusTable.setStatus('mandatory')
atmIfVptIispRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispIndex"))
if mibBuilder.loadTexts: atmIfVptIispRowStatusEntry.setStatus('mandatory')
atmIfVptIispRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispRowStatus.setStatus('mandatory')
atmIfVptIispComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispComponentName.setStatus('mandatory')
atmIfVptIispStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispStorageType.setStatus('mandatory')
atmIfVptIispIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfVptIispIndex.setStatus('mandatory')
atmIfVptIispProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 10), )
if mibBuilder.loadTexts: atmIfVptIispProvTable.setStatus('mandatory')
atmIfVptIispProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispIndex"))
if mibBuilder.loadTexts: atmIfVptIispProvEntry.setStatus('mandatory')
atmIfVptIispVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("iisp10Sig30", 2), ("iisp10Sig31", 3))).clone('iisp10Sig31')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispVersion.setStatus('mandatory')
atmIfVptIispSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("networkSide", 0), ("userSide", 1))).clone('networkSide')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispSide.setStatus('mandatory')
atmIfVptIispSoftPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispSoftPvcRetryPeriod.setStatus('obsolete')
atmIfVptIispSoftPvpAndPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispSoftPvpAndPvcRetryPeriod.setStatus('mandatory')
atmIfVptIispSoftPvpAndPvcHoldOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(50, 20000), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispSoftPvpAndPvcHoldOffTime.setStatus('mandatory')
atmIfVptIispAcctOptTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 11), )
if mibBuilder.loadTexts: atmIfVptIispAcctOptTable.setStatus('mandatory')
atmIfVptIispAcctOptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispIndex"))
if mibBuilder.loadTexts: atmIfVptIispAcctOptEntry.setStatus('mandatory')
atmIfVptIispAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 11, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispAccountCollection.setStatus('mandatory')
atmIfVptIispAccountConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("origTerm", 0), ("intermediate", 1))).clone('intermediate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispAccountConnectionType.setStatus('mandatory')
atmIfVptIispAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispAccountClass.setStatus('mandatory')
atmIfVptIispServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispServiceExchange.setStatus('mandatory')
atmIfVptIispVProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 12), )
if mibBuilder.loadTexts: atmIfVptIispVProvTable.setStatus('mandatory')
atmIfVptIispVProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispIndex"))
if mibBuilder.loadTexts: atmIfVptIispVProvEntry.setStatus('mandatory')
atmIfVptIispVpci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispVpci.setStatus('mandatory')
atmIfVptIispSig = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3))
atmIfVptIispSigRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 1), )
if mibBuilder.loadTexts: atmIfVptIispSigRowStatusTable.setStatus('mandatory')
atmIfVptIispSigRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispSigIndex"))
if mibBuilder.loadTexts: atmIfVptIispSigRowStatusEntry.setStatus('mandatory')
atmIfVptIispSigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigRowStatus.setStatus('mandatory')
atmIfVptIispSigComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigComponentName.setStatus('mandatory')
atmIfVptIispSigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigStorageType.setStatus('mandatory')
atmIfVptIispSigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfVptIispSigIndex.setStatus('mandatory')
atmIfVptIispSigProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 10), )
if mibBuilder.loadTexts: atmIfVptIispSigProvTable.setStatus('mandatory')
atmIfVptIispSigProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispSigIndex"))
if mibBuilder.loadTexts: atmIfVptIispSigProvEntry.setStatus('mandatory')
atmIfVptIispSigVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispSigVci.setStatus('mandatory')
atmIfVptIispSigAddressConversion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("nativeE164", 1), ("nsap", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispSigAddressConversion.setStatus('mandatory')
atmIfVptIispSigStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 11), )
if mibBuilder.loadTexts: atmIfVptIispSigStateTable.setStatus('mandatory')
atmIfVptIispSigStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 11, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispSigIndex"))
if mibBuilder.loadTexts: atmIfVptIispSigStateEntry.setStatus('mandatory')
atmIfVptIispSigAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigAdminState.setStatus('mandatory')
atmIfVptIispSigOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigOperationalState.setStatus('mandatory')
atmIfVptIispSigUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigUsageState.setStatus('mandatory')
atmIfVptIispSigOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 12), )
if mibBuilder.loadTexts: atmIfVptIispSigOperTable.setStatus('mandatory')
atmIfVptIispSigOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 12, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispSigIndex"))
if mibBuilder.loadTexts: atmIfVptIispSigOperEntry.setStatus('mandatory')
atmIfVptIispSigLastTxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigLastTxCauseCode.setStatus('mandatory')
atmIfVptIispSigLastTxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 12, 1, 2), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigLastTxDiagCode.setStatus('mandatory')
atmIfVptIispSigLastRxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigLastRxCauseCode.setStatus('mandatory')
atmIfVptIispSigLastRxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 12, 1, 4), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigLastRxDiagCode.setStatus('mandatory')
atmIfVptIispSigStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 13), )
if mibBuilder.loadTexts: atmIfVptIispSigStatsTable.setStatus('mandatory')
atmIfVptIispSigStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 13, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispSigIndex"))
if mibBuilder.loadTexts: atmIfVptIispSigStatsEntry.setStatus('mandatory')
atmIfVptIispSigCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigCurrentConnections.setStatus('obsolete')
atmIfVptIispSigPeakConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 13, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigPeakConnections.setStatus('mandatory')
atmIfVptIispSigSuccessfulConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigSuccessfulConnections.setStatus('mandatory')
atmIfVptIispSigFailedConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigFailedConnections.setStatus('mandatory')
atmIfVptIispSigTxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigTxPdus.setStatus('mandatory')
atmIfVptIispSigRxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigRxPdus.setStatus('mandatory')
atmIfVptIispSigCurrentPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 13, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigCurrentPmpConnections.setStatus('mandatory')
atmIfVptIispSigPeakPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 13, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigPeakPmpConnections.setStatus('mandatory')
atmIfVptIispSigSuccessfulPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigSuccessfulPmpConnections.setStatus('mandatory')
atmIfVptIispSigFailedPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigFailedPmpConnections.setStatus('mandatory')
atmIfVptIispSigNewCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 13, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigNewCurrentConnections.setStatus('mandatory')
atmIfVptIispSigVcd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2))
atmIfVptIispSigVcdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2, 1), )
if mibBuilder.loadTexts: atmIfVptIispSigVcdRowStatusTable.setStatus('mandatory')
atmIfVptIispSigVcdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispSigIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispSigVcdIndex"))
if mibBuilder.loadTexts: atmIfVptIispSigVcdRowStatusEntry.setStatus('mandatory')
atmIfVptIispSigVcdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispSigVcdRowStatus.setStatus('mandatory')
atmIfVptIispSigVcdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigVcdComponentName.setStatus('mandatory')
atmIfVptIispSigVcdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispSigVcdStorageType.setStatus('mandatory')
atmIfVptIispSigVcdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfVptIispSigVcdIndex.setStatus('mandatory')
atmIfVptIispSigVcdProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2, 10), )
if mibBuilder.loadTexts: atmIfVptIispSigVcdProvTable.setStatus('mandatory')
atmIfVptIispSigVcdProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispSigIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispSigVcdIndex"))
if mibBuilder.loadTexts: atmIfVptIispSigVcdProvEntry.setStatus('mandatory')
atmIfVptIispSigVcdTrafficDescType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 6, 7, 8))).clone(namedValues=NamedValues(("n3", 3), ("n6", 6), ("n7", 7), ("n8", 8))).clone('n6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispSigVcdTrafficDescType.setStatus('mandatory')
atmIfVptIispSigVcdAtmServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unspecifiedBitRate", 0), ("constantBitRate", 1), ("rtVariableBitRate", 2), ("nrtVariableBitRate", 3))).clone('rtVariableBitRate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispSigVcdAtmServiceCategory.setStatus('mandatory')
atmIfVptIispSigVcdQosClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4))).clone('n2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispSigVcdQosClass.setStatus('mandatory')
atmIfVptIispSigVcdTrafficShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2, 10, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispSigVcdTrafficShaping.setStatus('mandatory')
atmIfVptIispSigVcdUnshapedTransmitQueueing = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2, 10, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("common", 1), ("sameAsCa", 3))).clone('sameAsCa')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispSigVcdUnshapedTransmitQueueing.setStatus('mandatory')
atmIfVptIispSigVcdUsageParameterControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2, 10, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispSigVcdUsageParameterControl.setStatus('mandatory')
atmIfVptIispSigVcdTdpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2, 387), )
if mibBuilder.loadTexts: atmIfVptIispSigVcdTdpTable.setStatus('mandatory')
atmIfVptIispSigVcdTdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2, 387, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispSigIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispSigVcdIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispSigVcdTdpIndex"))
if mibBuilder.loadTexts: atmIfVptIispSigVcdTdpEntry.setStatus('mandatory')
atmIfVptIispSigVcdTdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2, 387, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: atmIfVptIispSigVcdTdpIndex.setStatus('mandatory')
atmIfVptIispSigVcdTdpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 3, 2, 387, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispSigVcdTdpValue.setStatus('mandatory')
atmIfVptIispAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4))
atmIfVptIispAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 1), )
if mibBuilder.loadTexts: atmIfVptIispAddrRowStatusTable.setStatus('mandatory')
atmIfVptIispAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispAddrAddressTypeIndex"))
if mibBuilder.loadTexts: atmIfVptIispAddrRowStatusEntry.setStatus('mandatory')
atmIfVptIispAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispAddrRowStatus.setStatus('mandatory')
atmIfVptIispAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispAddrComponentName.setStatus('mandatory')
atmIfVptIispAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispAddrStorageType.setStatus('mandatory')
atmIfVptIispAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: atmIfVptIispAddrAddressIndex.setStatus('mandatory')
atmIfVptIispAddrAddressTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("primary", 0), ("alternate", 1), ("default", 3))))
if mibBuilder.loadTexts: atmIfVptIispAddrAddressTypeIndex.setStatus('mandatory')
atmIfVptIispAddrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 10), )
if mibBuilder.loadTexts: atmIfVptIispAddrOperTable.setStatus('mandatory')
atmIfVptIispAddrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispAddrAddressTypeIndex"))
if mibBuilder.loadTexts: atmIfVptIispAddrOperEntry.setStatus('mandatory')
atmIfVptIispAddrScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispAddrScope.setStatus('mandatory')
atmIfVptIispAddrReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispAddrReachability.setStatus('mandatory')
atmIfVptIispAddrTermSP = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 2))
atmIfVptIispAddrTermSPRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 2, 1), )
if mibBuilder.loadTexts: atmIfVptIispAddrTermSPRowStatusTable.setStatus('mandatory')
atmIfVptIispAddrTermSPRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispAddrAddressTypeIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispAddrTermSPIndex"))
if mibBuilder.loadTexts: atmIfVptIispAddrTermSPRowStatusEntry.setStatus('mandatory')
atmIfVptIispAddrTermSPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispAddrTermSPRowStatus.setStatus('mandatory')
atmIfVptIispAddrTermSPComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispAddrTermSPComponentName.setStatus('mandatory')
atmIfVptIispAddrTermSPStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispAddrTermSPStorageType.setStatus('mandatory')
atmIfVptIispAddrTermSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfVptIispAddrTermSPIndex.setStatus('mandatory')
atmIfVptIispAddrPnniInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 3))
atmIfVptIispAddrPnniInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 3, 1), )
if mibBuilder.loadTexts: atmIfVptIispAddrPnniInfoRowStatusTable.setStatus('mandatory')
atmIfVptIispAddrPnniInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispAddrAddressTypeIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispAddrPnniInfoIndex"))
if mibBuilder.loadTexts: atmIfVptIispAddrPnniInfoRowStatusEntry.setStatus('mandatory')
atmIfVptIispAddrPnniInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispAddrPnniInfoRowStatus.setStatus('mandatory')
atmIfVptIispAddrPnniInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispAddrPnniInfoComponentName.setStatus('mandatory')
atmIfVptIispAddrPnniInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atmIfVptIispAddrPnniInfoStorageType.setStatus('mandatory')
atmIfVptIispAddrPnniInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: atmIfVptIispAddrPnniInfoIndex.setStatus('mandatory')
atmIfVptIispAddrPnniInfoProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 3, 10), )
if mibBuilder.loadTexts: atmIfVptIispAddrPnniInfoProvTable.setStatus('mandatory')
atmIfVptIispAddrPnniInfoProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfIndex"), (0, "Nortel-Magellan-Passport-AtmCoreMIB", "atmIfVptIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispAddrAddressIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispAddrAddressTypeIndex"), (0, "Nortel-Magellan-Passport-AtmIispMIB", "atmIfVptIispAddrPnniInfoIndex"))
if mibBuilder.loadTexts: atmIfVptIispAddrPnniInfoProvEntry.setStatus('mandatory')
atmIfVptIispAddrPnniInfoScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispAddrPnniInfoScope.setStatus('mandatory')
atmIfVptIispAddrPnniInfoReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 2, 4, 1, 114, 9, 6, 4, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: atmIfVptIispAddrPnniInfoReachability.setStatus('mandatory')
atmIispGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 70, 1))
atmIispGroupBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 70, 1, 5))
atmIispGroupBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 70, 1, 5, 1))
atmIispGroupBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 70, 1, 5, 1, 2))
atmIispCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 70, 3))
atmIispCapabilitiesBE = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 70, 3, 5))
atmIispCapabilitiesBE00 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 70, 3, 5, 1))
atmIispCapabilitiesBE00A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 2, 4, 2, 70, 3, 5, 1, 2))
mibBuilder.exportSymbols("Nortel-Magellan-Passport-AtmIispMIB", atmIispCapabilitiesBE00=atmIispCapabilitiesBE00, atmIfVptIispSigVcdRowStatusEntry=atmIfVptIispSigVcdRowStatusEntry, atmIfIispSigCurrentConnections=atmIfIispSigCurrentConnections, atmIfVptIispSigStatsEntry=atmIfVptIispSigStatsEntry, atmIfVptIispAccountConnectionType=atmIfVptIispAccountConnectionType, atmIfVptIispAddrScope=atmIfVptIispAddrScope, atmIfVptIispAddrPnniInfoRowStatus=atmIfVptIispAddrPnniInfoRowStatus, atmIfIispSigAdminState=atmIfIispSigAdminState, atmIfVptIispAddrOperTable=atmIfVptIispAddrOperTable, atmIfIispSigVcdTrafficDescType=atmIfIispSigVcdTrafficDescType, atmIfVptIispSigVcdUnshapedTransmitQueueing=atmIfVptIispSigVcdUnshapedTransmitQueueing, atmIfVptIispAddrRowStatus=atmIfVptIispAddrRowStatus, atmIfVptIispSigLastTxDiagCode=atmIfVptIispSigLastTxDiagCode, atmIfIispSigVcdTdpEntry=atmIfIispSigVcdTdpEntry, atmIfIispSigOperEntry=atmIfIispSigOperEntry, atmIfVptIispAddrComponentName=atmIfVptIispAddrComponentName, atmIfVptIispAddrRowStatusTable=atmIfVptIispAddrRowStatusTable, atmIfVptIispSigVcdProvEntry=atmIfVptIispSigVcdProvEntry, atmIfIispAccountConnectionType=atmIfIispAccountConnectionType, atmIfIispSigLastRxCauseCode=atmIfIispSigLastRxCauseCode, atmIfVptIispSigLastRxDiagCode=atmIfVptIispSigLastRxDiagCode, atmIfVptIispAddrReachability=atmIfVptIispAddrReachability, atmIfIispAddrReachability=atmIfIispAddrReachability, atmIfVptIispAddrTermSPRowStatusEntry=atmIfVptIispAddrTermSPRowStatusEntry, atmIfVptIispSigFailedPmpConnections=atmIfVptIispSigFailedPmpConnections, atmIfVptIispAddrTermSPIndex=atmIfVptIispAddrTermSPIndex, atmIfIispSigLastTxCauseCode=atmIfIispSigLastTxCauseCode, atmIfIispAddrRowStatusTable=atmIfIispAddrRowStatusTable, atmIfVptIispSoftPvcRetryPeriod=atmIfVptIispSoftPvcRetryPeriod, atmIfIispAddrRowStatusEntry=atmIfIispAddrRowStatusEntry, atmIfVptIispSigVcdQosClass=atmIfVptIispSigVcdQosClass, atmIfIispSigVcdUnshapedTransmitQueueing=atmIfIispSigVcdUnshapedTransmitQueueing, atmIfIispSigUsageState=atmIfIispSigUsageState, atmIispGroupBE00=atmIispGroupBE00, atmIfVptIispSigCurrentConnections=atmIfVptIispSigCurrentConnections, atmIfIispSigStateEntry=atmIfIispSigStateEntry, atmIfIispAddrTermSPComponentName=atmIfIispAddrTermSPComponentName, atmIfVptIispSigProvTable=atmIfVptIispSigProvTable, atmIfIispAddrPnniInfoIndex=atmIfIispAddrPnniInfoIndex, atmIfIispAddrOperEntry=atmIfIispAddrOperEntry, atmIfVptIispSigProvEntry=atmIfVptIispSigProvEntry, atmIfVptIispAddrTermSPRowStatus=atmIfVptIispAddrTermSPRowStatus, atmIfIispSigProvTable=atmIfIispSigProvTable, atmIfIispSigVcdIndex=atmIfIispSigVcdIndex, atmIfVptIispVersion=atmIfVptIispVersion, atmIfVptIispAcctOptTable=atmIfVptIispAcctOptTable, atmIfIispSigVcdRowStatus=atmIfIispSigVcdRowStatus, atmIfVptIispAddrPnniInfoRowStatusEntry=atmIfVptIispAddrPnniInfoRowStatusEntry, atmIfVptIispAddrPnniInfoIndex=atmIfVptIispAddrPnniInfoIndex, atmIfIispSigRowStatusEntry=atmIfIispSigRowStatusEntry, atmIfVptIispSoftPvpAndPvcHoldOffTime=atmIfVptIispSoftPvpAndPvcHoldOffTime, atmIfIispAddrStorageType=atmIfIispAddrStorageType, atmIfIispSigFailedPmpConnections=atmIfIispSigFailedPmpConnections, atmIfIispSigVcdRowStatusEntry=atmIfIispSigVcdRowStatusEntry, atmIfIispAddr=atmIfIispAddr, atmIfIispAddrTermSPStorageType=atmIfIispAddrTermSPStorageType, atmIfVptIispSide=atmIfVptIispSide, atmIispGroupBE=atmIispGroupBE, atmIfIispSigVcdTdpValue=atmIfIispSigVcdTdpValue, atmIfIispSigVcdStorageType=atmIfIispSigVcdStorageType, atmIfIispRowStatusEntry=atmIfIispRowStatusEntry, atmIfIispSigFailedConnections=atmIfIispSigFailedConnections, atmIfIispRowStatusTable=atmIfIispRowStatusTable, atmIfVptIispSigSuccessfulPmpConnections=atmIfVptIispSigSuccessfulPmpConnections, atmIfIispStorageType=atmIfIispStorageType, atmIfIispSoftPvpAndPvcRetryPeriod=atmIfIispSoftPvpAndPvcRetryPeriod, atmIfVptIispRowStatusEntry=atmIfVptIispRowStatusEntry, atmIfVptIispAddrTermSPComponentName=atmIfVptIispAddrTermSPComponentName, atmIfIispSide=atmIfIispSide, atmIfVptIispSigVcdTrafficDescType=atmIfVptIispSigVcdTrafficDescType, atmIfIispSigStatsEntry=atmIfIispSigStatsEntry, atmIfVptIispSigVcd=atmIfVptIispSigVcd, atmIfVptIispSigVcdComponentName=atmIfVptIispSigVcdComponentName, atmIfVptIispAddrPnniInfoStorageType=atmIfVptIispAddrPnniInfoStorageType, atmIfIispSigLastRxDiagCode=atmIfIispSigLastRxDiagCode, atmIfVptIispAddrPnniInfoComponentName=atmIfVptIispAddrPnniInfoComponentName, atmIfIispSigSuccessfulConnections=atmIfIispSigSuccessfulConnections, atmIfVptIispAccountClass=atmIfVptIispAccountClass, atmIfVptIispSigAdminState=atmIfVptIispSigAdminState, atmIfVptIispSigFailedConnections=atmIfVptIispSigFailedConnections, atmIfVptIispSigVcdStorageType=atmIfVptIispSigVcdStorageType, atmIfIispSigLastTxDiagCode=atmIfIispSigLastTxDiagCode, atmIfIispAddrTermSPRowStatus=atmIfIispAddrTermSPRowStatus, atmIfVptIispSigVcdTrafficShaping=atmIfVptIispSigVcdTrafficShaping, atmIfIispAddrPnniInfoStorageType=atmIfIispAddrPnniInfoStorageType, atmIfVptIispSigStateTable=atmIfVptIispSigStateTable, atmIfVptIispAddrPnniInfoProvEntry=atmIfVptIispAddrPnniInfoProvEntry, atmIfIispSigOperationalState=atmIfIispSigOperationalState, atmIfIispAddrPnniInfoComponentName=atmIfIispAddrPnniInfoComponentName, atmIfVptIispIndex=atmIfVptIispIndex, atmIfVptIispSigComponentName=atmIfVptIispSigComponentName, atmIfVptIispStorageType=atmIfVptIispStorageType, atmIfVptIispSoftPvpAndPvcRetryPeriod=atmIfVptIispSoftPvpAndPvcRetryPeriod, atmIfVptIispSigStateEntry=atmIfVptIispSigStateEntry, atmIfVptIispProvTable=atmIfVptIispProvTable, atmIfIisp=atmIfIisp, atmIfIispSigVcdProvEntry=atmIfIispSigVcdProvEntry, atmIfIispSigVcdProvTable=atmIfIispSigVcdProvTable, atmIfIispAddrPnniInfoRowStatusTable=atmIfIispAddrPnniInfoRowStatusTable, atmIispCapabilities=atmIispCapabilities, atmIfVptIispAddrPnniInfoRowStatusTable=atmIfVptIispAddrPnniInfoRowStatusTable, atmIfIispSigVcdTdpTable=atmIfIispSigVcdTdpTable, atmIfIispSigPeakConnections=atmIfIispSigPeakConnections, atmIfVptIispSig=atmIfVptIispSig, atmIfVptIispSigOperEntry=atmIfVptIispSigOperEntry, atmIfVptIispAddrRowStatusEntry=atmIfVptIispAddrRowStatusEntry, atmIfVptIispSigVcdIndex=atmIfVptIispSigVcdIndex, atmIfVptIispAddrStorageType=atmIfVptIispAddrStorageType, atmIfVptIispSigNewCurrentConnections=atmIfVptIispSigNewCurrentConnections, atmIfVptIispSigVcdAtmServiceCategory=atmIfVptIispSigVcdAtmServiceCategory, atmIfVptIispAddrPnniInfo=atmIfVptIispAddrPnniInfo, atmIfVptIispSigSuccessfulConnections=atmIfVptIispSigSuccessfulConnections, atmIispMIB=atmIispMIB, atmIfVptIispVProvEntry=atmIfVptIispVProvEntry, atmIfVptIispAddrPnniInfoScope=atmIfVptIispAddrPnniInfoScope, atmIfIispAddrTermSPRowStatusTable=atmIfIispAddrTermSPRowStatusTable, atmIfVptIispSigRowStatusEntry=atmIfVptIispSigRowStatusEntry, atmIfIispAddrPnniInfo=atmIfIispAddrPnniInfo, atmIfVptIispVProvTable=atmIfVptIispVProvTable, atmIfVptIispSigOperationalState=atmIfVptIispSigOperationalState, atmIfVptIispSigRowStatusTable=atmIfVptIispSigRowStatusTable, atmIfIispAcctOptEntry=atmIfIispAcctOptEntry, atmIfIispAddrRowStatus=atmIfIispAddrRowStatus, atmIfVptIispSigVcdUsageParameterControl=atmIfVptIispSigVcdUsageParameterControl, atmIfVptIispAddrTermSPRowStatusTable=atmIfVptIispAddrTermSPRowStatusTable, atmIfIispAddrComponentName=atmIfIispAddrComponentName, atmIfVptIispSigCurrentPmpConnections=atmIfVptIispSigCurrentPmpConnections, atmIfIispAddrOperTable=atmIfIispAddrOperTable, atmIfIispRowStatus=atmIfIispRowStatus, atmIfVptIispSigLastTxCauseCode=atmIfVptIispSigLastTxCauseCode, atmIfVptIispSigOperTable=atmIfVptIispSigOperTable, atmIfVptIispAddr=atmIfVptIispAddr, atmIfIispProvTable=atmIfIispProvTable, atmIfIispSoftPvcRetryPeriod=atmIfIispSoftPvcRetryPeriod, atmIfIispSigStateTable=atmIfIispSigStateTable, atmIfVptIispSigUsageState=atmIfVptIispSigUsageState, atmIfVptIispSigPeakConnections=atmIfVptIispSigPeakConnections, atmIfVptIispSigVcdRowStatusTable=atmIfVptIispSigVcdRowStatusTable, atmIispCapabilitiesBE00A=atmIispCapabilitiesBE00A, atmIfVptIispRowStatus=atmIfVptIispRowStatus, atmIfVptIispComponentName=atmIfVptIispComponentName, atmIfVptIispSigPeakPmpConnections=atmIfVptIispSigPeakPmpConnections, atmIfIispAddrTermSPIndex=atmIfIispAddrTermSPIndex, atmIfVptIispSigAddressConversion=atmIfVptIispSigAddressConversion, atmIispCapabilitiesBE=atmIispCapabilitiesBE, atmIfVptIispProvEntry=atmIfVptIispProvEntry, atmIfIispSigTxPdus=atmIfIispSigTxPdus, atmIfIispSigPeakPmpConnections=atmIfIispSigPeakPmpConnections, atmIfVptIispSigVcdTdpEntry=atmIfVptIispSigVcdTdpEntry, atmIfVptIispSigVci=atmIfVptIispSigVci, atmIfVptIispAddrTermSPStorageType=atmIfVptIispAddrTermSPStorageType, atmIfIispSigVcdQosClass=atmIfIispSigVcdQosClass, atmIfIispComponentName=atmIfIispComponentName, atmIfIispAddrPnniInfoRowStatusEntry=atmIfIispAddrPnniInfoRowStatusEntry, atmIfIispSigStorageType=atmIfIispSigStorageType, atmIfIispSigVcd=atmIfIispSigVcd, atmIfIispAddrAddressTypeIndex=atmIfIispAddrAddressTypeIndex, atmIfIispSigVcdTrafficShaping=atmIfIispSigVcdTrafficShaping, atmIfIispSigVcdAtmServiceCategory=atmIfIispSigVcdAtmServiceCategory, atmIispGroup=atmIispGroup, atmIfIispSigComponentName=atmIfIispSigComponentName, atmIfVptIispServiceExchange=atmIfVptIispServiceExchange, atmIfVptIispSigVcdTdpValue=atmIfVptIispSigVcdTdpValue, atmIfIispAddrTermSPRowStatusEntry=atmIfIispAddrTermSPRowStatusEntry, atmIfIispSigVci=atmIfIispSigVci, atmIfIispSigOperTable=atmIfIispSigOperTable, atmIfIispSigSuccessfulPmpConnections=atmIfIispSigSuccessfulPmpConnections, atmIfVptIispAccountCollection=atmIfVptIispAccountCollection, atmIfIispAccountCollection=atmIfIispAccountCollection, atmIfIispSigVcdRowStatusTable=atmIfIispSigVcdRowStatusTable, atmIfIispSigRowStatusTable=atmIfIispSigRowStatusTable, atmIfIispAddrTermSP=atmIfIispAddrTermSP, atmIfVptIispAcctOptEntry=atmIfVptIispAcctOptEntry, atmIfIispAccountClass=atmIfIispAccountClass, atmIfVptIispSigStorageType=atmIfVptIispSigStorageType, atmIfVptIispAddrAddressTypeIndex=atmIfVptIispAddrAddressTypeIndex, atmIfVptIispSigRowStatus=atmIfVptIispSigRowStatus, atmIfVptIispSigIndex=atmIfVptIispSigIndex, atmIfIispAddrPnniInfoProvTable=atmIfIispAddrPnniInfoProvTable, atmIfIispSoftPvpAndPvcHoldOffTime=atmIfIispSoftPvpAndPvcHoldOffTime, atmIfIispSigNewCurrentConnections=atmIfIispSigNewCurrentConnections, atmIfIispSigCurrentPmpConnections=atmIfIispSigCurrentPmpConnections, atmIfIispSigVcdUsageParameterControl=atmIfIispSigVcdUsageParameterControl, atmIfVptIispSigVcdProvTable=atmIfVptIispSigVcdProvTable, atmIfIispAddrScope=atmIfIispAddrScope, atmIfIispSigVcdTdpIndex=atmIfIispSigVcdTdpIndex, atmIfIispAddrPnniInfoScope=atmIfIispAddrPnniInfoScope, atmIfIispAddrPnniInfoReachability=atmIfIispAddrPnniInfoReachability, atmIfVptIisp=atmIfVptIisp, atmIispGroupBE00A=atmIispGroupBE00A, atmIfVptIispRowStatusTable=atmIfVptIispRowStatusTable, atmIfVptIispSigVcdRowStatus=atmIfVptIispSigVcdRowStatus, atmIfIispAddrAddressIndex=atmIfIispAddrAddressIndex, atmIfIispIndex=atmIfIispIndex, atmIfVptIispSigLastRxCauseCode=atmIfVptIispSigLastRxCauseCode, atmIfIispAddrPnniInfoProvEntry=atmIfIispAddrPnniInfoProvEntry, atmIfIispSigRowStatus=atmIfIispSigRowStatus, atmIfVptIispSigVcdTdpTable=atmIfVptIispSigVcdTdpTable, atmIfIispSigRxPdus=atmIfIispSigRxPdus, atmIfVptIispVpci=atmIfVptIispVpci, atmIfVptIispAddrOperEntry=atmIfVptIispAddrOperEntry, atmIfIispProvEntry=atmIfIispProvEntry, atmIfIispVersion=atmIfIispVersion, atmIfIispServiceExchange=atmIfIispServiceExchange, atmIfIispAddrPnniInfoRowStatus=atmIfIispAddrPnniInfoRowStatus, atmIfIispSigAddressConversion=atmIfIispSigAddressConversion, atmIfIispSig=atmIfIispSig, atmIfVptIispAddrAddressIndex=atmIfVptIispAddrAddressIndex, atmIfVptIispAddrTermSP=atmIfVptIispAddrTermSP, atmIfVptIispAddrPnniInfoProvTable=atmIfVptIispAddrPnniInfoProvTable, atmIfVptIispAddrPnniInfoReachability=atmIfVptIispAddrPnniInfoReachability, atmIfIispAcctOptTable=atmIfIispAcctOptTable, atmIfVptIispSigTxPdus=atmIfVptIispSigTxPdus, atmIfVptIispSigVcdTdpIndex=atmIfVptIispSigVcdTdpIndex, atmIfVptIispSigRxPdus=atmIfVptIispSigRxPdus, atmIfVptIispSigStatsTable=atmIfVptIispSigStatsTable, atmIfIispSigVcdComponentName=atmIfIispSigVcdComponentName, atmIfIispSigProvEntry=atmIfIispSigProvEntry, atmIfIispSigIndex=atmIfIispSigIndex, atmIfIispSigStatsTable=atmIfIispSigStatsTable)
