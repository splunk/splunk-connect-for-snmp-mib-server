#
# PySNMP MIB module Wellfleet-NAT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-NAT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:34:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Integer32, ModuleIdentity, Counter32, ObjectIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter64, Bits, IpAddress, Unsigned32, Gauge32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Integer32", "ModuleIdentity", "Counter32", "ObjectIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter64", "Bits", "IpAddress", "Unsigned32", "Gauge32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfNatGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfNatGroup")
wfNatBase = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1))
wfNatBaseDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatBaseDelete.setStatus('mandatory')
wfNatBaseDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatBaseDisable.setStatus('mandatory')
wfNatBaseState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("init", 2), ("down", 3), ("not-present", 4))).clone('not-present')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatBaseState.setStatus('mandatory')
wfNatBaseSoloistSlotMask = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 4), Gauge32().clone(4294705152)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatBaseSoloistSlotMask.setStatus('mandatory')
wfNatBaseSoloistSlot = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatBaseSoloistSlot.setStatus('mandatory')
wfNatBaseLogMask = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatBaseLogMask.setStatus('mandatory')
wfNatBaseMapTimeout = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatBaseMapTimeout.setStatus('mandatory')
wfNatBaseMapMaxTimeout = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(3600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatBaseMapMaxTimeout.setStatus('mandatory')
wfNatBaseMapDynMapsCount = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatBaseMapDynMapsCount.setStatus('mandatory')
wfNatBaseFtpSessionCount = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatBaseFtpSessionCount.setStatus('mandatory')
wfNatBaseNto1TrTotCount = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatBaseNto1TrTotCount.setStatus('mandatory')
wfNatBaseSynchronization = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatBaseSynchronization.setStatus('mandatory')
wfNatBaseSynRouterID = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatBaseSynRouterID.setStatus('mandatory')
wfNatBaseSynPort = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 14), Integer32().clone(670)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatBaseSynPort.setStatus('mandatory')
wfNatBaseSynKeepAlvInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 15), Integer32().clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatBaseSynKeepAlvInterval.setStatus('mandatory')
wfNatBaseSynKeepAlvTimer = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 16), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatBaseSynKeepAlvTimer.setStatus('mandatory')
wfNatBaseSynKeepAlvRetries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 17), Integer32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatBaseSynKeepAlvRetries.setStatus('mandatory')
wfNatBaseLocalToLocalEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatBaseLocalToLocalEnable.setStatus('mandatory')
wfNatBaseInstallUniPrivAddr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatBaseInstallUniPrivAddr.setStatus('mandatory')
wfNatAddrRangeTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 2), )
if mibBuilder.loadTexts: wfNatAddrRangeTable.setStatus('mandatory')
wfNatAddrRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 2, 1), ).setIndexNames((0, "Wellfleet-NAT-MIB", "wfNatAddrRangeAddress"), (0, "Wellfleet-NAT-MIB", "wfNatAddrRangePrefixLen"))
if mibBuilder.loadTexts: wfNatAddrRangeEntry.setStatus('mandatory')
wfNatAddrRangeDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatAddrRangeDelete.setStatus('mandatory')
wfNatAddrRangeDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatAddrRangeDisable.setStatus('mandatory')
wfNatAddrRangeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatAddrRangeAddress.setStatus('mandatory')
wfNatAddrRangePrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatAddrRangePrefixLen.setStatus('mandatory')
wfNatLocalAddrRangeTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 3), )
if mibBuilder.loadTexts: wfNatLocalAddrRangeTable.setStatus('mandatory')
wfNatLocalAddrRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 3, 1), ).setIndexNames((0, "Wellfleet-NAT-MIB", "wfNatLocalAddrRangeAddress"), (0, "Wellfleet-NAT-MIB", "wfNatLocalAddrRangePrefixLen"))
if mibBuilder.loadTexts: wfNatLocalAddrRangeEntry.setStatus('mandatory')
wfNatLocalAddrRangeDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatLocalAddrRangeDelete.setStatus('mandatory')
wfNatLocalAddrRangeDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatLocalAddrRangeDisable.setStatus('mandatory')
wfNatLocalAddrRangeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 3, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatLocalAddrRangeAddress.setStatus('mandatory')
wfNatLocalAddrRangePrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatLocalAddrRangePrefixLen.setStatus('mandatory')
wfNatLocalAddrRangeNto1Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 3, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatLocalAddrRangeNto1Addr.setStatus('mandatory')
wfNatStaticMapTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 4), )
if mibBuilder.loadTexts: wfNatStaticMapTable.setStatus('mandatory')
wfNatStaticMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 4, 1), ).setIndexNames((0, "Wellfleet-NAT-MIB", "wfNatStaticMapLocalAddress"), (0, "Wellfleet-NAT-MIB", "wfNatStaticMapGlobalAddress"), (0, "Wellfleet-NAT-MIB", "wfNatStaticMapProtocol"), (0, "Wellfleet-NAT-MIB", "wfNatStaticMapLocalPort"), (0, "Wellfleet-NAT-MIB", "wfNatStaticMapGlobalPort"))
if mibBuilder.loadTexts: wfNatStaticMapEntry.setStatus('mandatory')
wfNatStaticMapDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatStaticMapDelete.setStatus('mandatory')
wfNatStaticMapDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatStaticMapDisable.setStatus('mandatory')
wfNatStaticMapLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 4, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatStaticMapLocalAddress.setStatus('mandatory')
wfNatStaticMapGlobalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 4, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatStaticMapGlobalAddress.setStatus('mandatory')
wfNatStaticMapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 4, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatStaticMapProtocol.setStatus('mandatory')
wfNatStaticMapLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatStaticMapLocalPort.setStatus('mandatory')
wfNatStaticMapGlobalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 4, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatStaticMapGlobalPort.setStatus('mandatory')
wfNatMapTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 5), )
if mibBuilder.loadTexts: wfNatMapTable.setStatus('mandatory')
wfNatMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 5, 1), ).setIndexNames((0, "Wellfleet-NAT-MIB", "wfNatMapLocalAddress"), (0, "Wellfleet-NAT-MIB", "wfNatMapGlobalAddress"), (0, "Wellfleet-NAT-MIB", "wfNatMapProtocol"), (0, "Wellfleet-NAT-MIB", "wfNatMapLocalPort"), (0, "Wellfleet-NAT-MIB", "wfNatMapGlobalPort"))
if mibBuilder.loadTexts: wfNatMapEntry.setStatus('mandatory')
wfNatMapLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 5, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMapLocalAddress.setStatus('mandatory')
wfNatMapGlobalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMapGlobalAddress.setStatus('mandatory')
wfNatMapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMapProtocol.setStatus('mandatory')
wfNatMapLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMapLocalPort.setStatus('mandatory')
wfNatMapGlobalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMapGlobalPort.setStatus('mandatory')
wfNatMapTxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMapTxCount.setStatus('mandatory')
wfNatMapRxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMapRxCount.setStatus('mandatory')
wfNatMapTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMapTimeout.setStatus('mandatory')
wfNatMapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 5, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMapMode.setStatus('mandatory')
wfNatIfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 6), )
if mibBuilder.loadTexts: wfNatIfTable.setStatus('mandatory')
wfNatIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 6, 1), ).setIndexNames((0, "Wellfleet-NAT-MIB", "wfNatIfIpAddress"), (0, "Wellfleet-NAT-MIB", "wfNatIfCircuit"))
if mibBuilder.loadTexts: wfNatIfEntry.setStatus('mandatory')
wfNatIfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatIfDelete.setStatus('mandatory')
wfNatIfDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatIfDisable.setStatus('mandatory')
wfNatIfIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatIfIpAddress.setStatus('mandatory')
wfNatIfCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 6, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatIfCircuit.setStatus('mandatory')
wfNatIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("uniDirInbound", 1), ("uniDirOutbound", 2), ("biDirectional", 3))).clone('uniDirInbound')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatIfType.setStatus('mandatory')
wfNatIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatIfState.setStatus('mandatory')
wfNatIfTxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatIfTxCount.setStatus('mandatory')
wfNatIfRxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatIfRxCount.setStatus('mandatory')
wfNatIfPktDropCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatIfPktDropCount.setStatus('mandatory')
wfNatIfDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 6, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatIfDomain.setStatus('mandatory')
wfNatSynPeerTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 7), )
if mibBuilder.loadTexts: wfNatSynPeerTable.setStatus('mandatory')
wfNatSynPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 7, 1), ).setIndexNames((0, "Wellfleet-NAT-MIB", "wfNatSynPeerRouterID"))
if mibBuilder.loadTexts: wfNatSynPeerEntry.setStatus('mandatory')
wfNatSynPeerDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatSynPeerDelete.setStatus('mandatory')
wfNatSynPeerDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatSynPeerDisable.setStatus('mandatory')
wfNatSynPeerState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("not-present", 1), ("init", 2), ("established", 3), ("down", 4))).clone('not-present')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatSynPeerState.setStatus('mandatory')
wfNatSynPeerConnType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("passive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatSynPeerConnType.setStatus('mandatory')
wfNatSynPeerRouterID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 7, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatSynPeerRouterID.setStatus('mandatory')
wfNatSynPeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 7, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatSynPeerAddress.setStatus('mandatory')
wfNatSynPeerTransSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 7, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatSynPeerTransSent.setStatus('mandatory')
wfNatSynPeerTransRecd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatSynPeerTransRecd.setStatus('mandatory')
wfNatAddressRangeTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 8), )
if mibBuilder.loadTexts: wfNatAddressRangeTable.setStatus('mandatory')
wfNatAddressRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 8, 1), ).setIndexNames((0, "Wellfleet-NAT-MIB", "wfNatAddressRangeAddress"), (0, "Wellfleet-NAT-MIB", "wfNatAddressRangePrefixLen"), (0, "Wellfleet-NAT-MIB", "wfNatAddressRangeIndex"))
if mibBuilder.loadTexts: wfNatAddressRangeEntry.setStatus('mandatory')
wfNatAddressRangeDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatAddressRangeDelete.setStatus('mandatory')
wfNatAddressRangeDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatAddressRangeDisable.setStatus('mandatory')
wfNatAddressRangeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 8, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatAddressRangeAddress.setStatus('mandatory')
wfNatAddressRangePrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 8, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatAddressRangePrefixLen.setStatus('mandatory')
wfNatAddressRangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatAddressRangeIndex.setStatus('mandatory')
wfNatAddressRangeNto1Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 8, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatAddressRangeNto1Addr.setStatus('mandatory')
wfNatAddressRangeType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 8, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("sourceAddrFilter", 1), ("translationPool", 2), ("domainSrcAddrFilter", 3), ("domainTransPool", 4))).clone('sourceAddrFilter')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatAddressRangeType.setStatus('mandatory')
wfNatAddressRangeDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 8, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatAddressRangeDomain.setStatus('mandatory')
wfNatAddressRangeTransPool = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 8, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2))).clone('outbound')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatAddressRangeTransPool.setStatus('mandatory')
wfNatAddressRangeStaticNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 8, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatAddressRangeStaticNextHop.setStatus('mandatory')
wfNatAddressRangeUnnumCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 8, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatAddressRangeUnnumCct.setStatus('mandatory')
wfNatStaticMappingTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 9), )
if mibBuilder.loadTexts: wfNatStaticMappingTable.setStatus('mandatory')
wfNatStaticMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 9, 1), ).setIndexNames((0, "Wellfleet-NAT-MIB", "wfNatStaticMappingTransAddress"), (0, "Wellfleet-NAT-MIB", "wfNatStaticMappingProtocol"), (0, "Wellfleet-NAT-MIB", "wfNatStaticMappingTransPort"))
if mibBuilder.loadTexts: wfNatStaticMappingEntry.setStatus('mandatory')
wfNatStaticMappingDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatStaticMappingDelete.setStatus('mandatory')
wfNatStaticMappingDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatStaticMappingDisable.setStatus('mandatory')
wfNatStaticMappingOrigAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 9, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatStaticMappingOrigAddress.setStatus('mandatory')
wfNatStaticMappingTransAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 9, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatStaticMappingTransAddress.setStatus('mandatory')
wfNatStaticMappingProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 9, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatStaticMappingProtocol.setStatus('mandatory')
wfNatStaticMappingOrigPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 9, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatStaticMappingOrigPort.setStatus('mandatory')
wfNatStaticMappingTransPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 9, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatStaticMappingTransPort.setStatus('mandatory')
wfNatStaticMappingInDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 9, 1, 8), DisplayString().clone('private')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatStaticMappingInDomain.setStatus('mandatory')
wfNatStaticMappingOutDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 9, 1, 9), DisplayString().clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatStaticMappingOutDomain.setStatus('mandatory')
wfNatStaticMappingStaticNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 9, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatStaticMappingStaticNextHop.setStatus('mandatory')
wfNatStaticMappingUnnumCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 9, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatStaticMappingUnnumCct.setStatus('mandatory')
wfNatMappingTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 10), )
if mibBuilder.loadTexts: wfNatMappingTable.setStatus('mandatory')
wfNatMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 10, 1), ).setIndexNames((0, "Wellfleet-NAT-MIB", "wfNatMappingTransAddress"), (0, "Wellfleet-NAT-MIB", "wfNatMappingProtocol"), (0, "Wellfleet-NAT-MIB", "wfNatMappingTransPort"))
if mibBuilder.loadTexts: wfNatMappingEntry.setStatus('mandatory')
wfNatMappingOrigAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 10, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMappingOrigAddress.setStatus('mandatory')
wfNatMappingTransAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 10, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMappingTransAddress.setStatus('mandatory')
wfNatMappingProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 10, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMappingProtocol.setStatus('mandatory')
wfNatMappingOrigPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMappingOrigPort.setStatus('mandatory')
wfNatMappingTransPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 10, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMappingTransPort.setStatus('mandatory')
wfNatMappingTxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMappingTxCount.setStatus('mandatory')
wfNatMappingRxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMappingRxCount.setStatus('mandatory')
wfNatMappingTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMappingTimeout.setStatus('mandatory')
wfNatMappingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 10, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMappingMode.setStatus('mandatory')
wfNatMappingInDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 10, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMappingInDomain.setStatus('mandatory')
wfNatMappingOutDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 10, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatMappingOutDomain.setStatus('mandatory')
wfNatIntfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 11), )
if mibBuilder.loadTexts: wfNatIntfTable.setStatus('mandatory')
wfNatIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 11, 1), ).setIndexNames((0, "Wellfleet-NAT-MIB", "wfNatIntfIpAddress"), (0, "Wellfleet-NAT-MIB", "wfNatIntfCircuit"))
if mibBuilder.loadTexts: wfNatIntfEntry.setStatus('mandatory')
wfNatIntfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatIntfDelete.setStatus('mandatory')
wfNatIntfDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatIntfDisable.setStatus('mandatory')
wfNatIntfIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 11, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatIntfIpAddress.setStatus('mandatory')
wfNatIntfCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 11, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatIntfCircuit.setStatus('mandatory')
wfNatIntfDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 11, 1, 5), DisplayString().clone('private')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatIntfDomain.setStatus('mandatory')
wfNatIntfState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatIntfState.setStatus('mandatory')
wfNatIntfTxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatIntfTxCount.setStatus('mandatory')
wfNatIntfRxCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatIntfRxCount.setStatus('mandatory')
wfNatIntfPktDropCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatIntfPktDropCount.setStatus('mandatory')
wfNatSrcAddressFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 12), )
if mibBuilder.loadTexts: wfNatSrcAddressFilterTable.setStatus('mandatory')
wfNatSrcAddressFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 12, 1), ).setIndexNames((0, "Wellfleet-NAT-MIB", "wfNatSrcAddressFilterAddress"), (0, "Wellfleet-NAT-MIB", "wfNatSrcAddressFilterPrefixLen"), (0, "Wellfleet-NAT-MIB", "wfNatSrcAddressFilterIndex"))
if mibBuilder.loadTexts: wfNatSrcAddressFilterEntry.setStatus('mandatory')
wfNatSrcAddressFilterDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatSrcAddressFilterDelete.setStatus('mandatory')
wfNatSrcAddressFilterDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatSrcAddressFilterDisable.setStatus('mandatory')
wfNatSrcAddressFilterAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 12, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatSrcAddressFilterAddress.setStatus('mandatory')
wfNatSrcAddressFilterPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatSrcAddressFilterPrefixLen.setStatus('mandatory')
wfNatSrcAddressFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatSrcAddressFilterIndex.setStatus('mandatory')
wfNatSrcAddressFilterNto1Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 12, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatSrcAddressFilterNto1Addr.setStatus('mandatory')
wfNatSrcAddressFilterDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 12, 1, 7), DisplayString().clone('private')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatSrcAddressFilterDomain.setStatus('mandatory')
wfNatSrcAddressFilterTransPoolSelector = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2))).clone('outbound')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatSrcAddressFilterTransPoolSelector.setStatus('mandatory')
wfNatSrcAddressFilterStaticNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 12, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatSrcAddressFilterStaticNextHop.setStatus('mandatory')
wfNatSrcAddressFilterUnnumCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 12, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatSrcAddressFilterUnnumCct.setStatus('mandatory')
wfNatTranslationPoolTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 13), )
if mibBuilder.loadTexts: wfNatTranslationPoolTable.setStatus('mandatory')
wfNatTranslationPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 13, 1), ).setIndexNames((0, "Wellfleet-NAT-MIB", "wfNatTranslationPoolAddress"), (0, "Wellfleet-NAT-MIB", "wfNatTranslationPoolPrefixLen"), (0, "Wellfleet-NAT-MIB", "wfNatTranslationPoolIndex"))
if mibBuilder.loadTexts: wfNatTranslationPoolEntry.setStatus('mandatory')
wfNatTranslationPoolDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatTranslationPoolDelete.setStatus('mandatory')
wfNatTranslationPoolDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatTranslationPoolDisable.setStatus('mandatory')
wfNatTranslationPoolAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 13, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatTranslationPoolAddress.setStatus('mandatory')
wfNatTranslationPoolPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 13, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatTranslationPoolPrefixLen.setStatus('mandatory')
wfNatTranslationPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 13, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfNatTranslationPoolIndex.setStatus('mandatory')
wfNatTranslationPoolDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 2, 7, 13, 1, 6), DisplayString().clone('public')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfNatTranslationPoolDomain.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-NAT-MIB", wfNatMappingEntry=wfNatMappingEntry, wfNatBaseMapMaxTimeout=wfNatBaseMapMaxTimeout, wfNatIntfRxCount=wfNatIntfRxCount, wfNatSrcAddressFilterEntry=wfNatSrcAddressFilterEntry, wfNatMapProtocol=wfNatMapProtocol, wfNatBaseSynPort=wfNatBaseSynPort, wfNatLocalAddrRangePrefixLen=wfNatLocalAddrRangePrefixLen, wfNatSrcAddressFilterStaticNextHop=wfNatSrcAddressFilterStaticNextHop, wfNatTranslationPoolAddress=wfNatTranslationPoolAddress, wfNatAddrRangeDisable=wfNatAddrRangeDisable, wfNatAddressRangeType=wfNatAddressRangeType, wfNatAddressRangeTable=wfNatAddressRangeTable, wfNatSrcAddressFilterAddress=wfNatSrcAddressFilterAddress, wfNatAddressRangeEntry=wfNatAddressRangeEntry, wfNatMapTable=wfNatMapTable, wfNatBaseFtpSessionCount=wfNatBaseFtpSessionCount, wfNatAddressRangeStaticNextHop=wfNatAddressRangeStaticNextHop, wfNatBaseSynKeepAlvTimer=wfNatBaseSynKeepAlvTimer, wfNatBaseDisable=wfNatBaseDisable, wfNatBaseNto1TrTotCount=wfNatBaseNto1TrTotCount, wfNatIfTable=wfNatIfTable, wfNatIfType=wfNatIfType, wfNatIntfEntry=wfNatIntfEntry, wfNatMappingTransPort=wfNatMappingTransPort, wfNatSrcAddressFilterTransPoolSelector=wfNatSrcAddressFilterTransPoolSelector, wfNatStaticMappingOutDomain=wfNatStaticMappingOutDomain, wfNatSrcAddressFilterNto1Addr=wfNatSrcAddressFilterNto1Addr, wfNatSynPeerConnType=wfNatSynPeerConnType, wfNatMapGlobalAddress=wfNatMapGlobalAddress, wfNatStaticMappingTransAddress=wfNatStaticMappingTransAddress, wfNatTranslationPoolPrefixLen=wfNatTranslationPoolPrefixLen, wfNatMapLocalPort=wfNatMapLocalPort, wfNatAddrRangeEntry=wfNatAddrRangeEntry, wfNatIfDomain=wfNatIfDomain, wfNatIntfCircuit=wfNatIntfCircuit, wfNatTranslationPoolTable=wfNatTranslationPoolTable, wfNatStaticMapProtocol=wfNatStaticMapProtocol, wfNatSynPeerAddress=wfNatSynPeerAddress, wfNatSynPeerTransRecd=wfNatSynPeerTransRecd, wfNatAddressRangePrefixLen=wfNatAddressRangePrefixLen, wfNatSrcAddressFilterDomain=wfNatSrcAddressFilterDomain, wfNatMapGlobalPort=wfNatMapGlobalPort, wfNatAddressRangeDomain=wfNatAddressRangeDomain, wfNatAddressRangeTransPool=wfNatAddressRangeTransPool, wfNatBaseMapDynMapsCount=wfNatBaseMapDynMapsCount, wfNatMapTimeout=wfNatMapTimeout, wfNatIfPktDropCount=wfNatIfPktDropCount, wfNatBaseSynKeepAlvRetries=wfNatBaseSynKeepAlvRetries, wfNatMapMode=wfNatMapMode, wfNatSynPeerTransSent=wfNatSynPeerTransSent, wfNatStaticMappingOrigPort=wfNatStaticMappingOrigPort, wfNatStaticMappingTable=wfNatStaticMappingTable, wfNatStaticMapDelete=wfNatStaticMapDelete, wfNatMappingTimeout=wfNatMappingTimeout, wfNatBaseSoloistSlotMask=wfNatBaseSoloistSlotMask, wfNatAddrRangeTable=wfNatAddrRangeTable, wfNatIfTxCount=wfNatIfTxCount, wfNatIntfIpAddress=wfNatIntfIpAddress, wfNatMappingMode=wfNatMappingMode, wfNatMapTxCount=wfNatMapTxCount, wfNatSynPeerState=wfNatSynPeerState, wfNatBaseSynRouterID=wfNatBaseSynRouterID, wfNatBase=wfNatBase, wfNatStaticMappingInDomain=wfNatStaticMappingInDomain, wfNatIntfDisable=wfNatIntfDisable, wfNatTranslationPoolDomain=wfNatTranslationPoolDomain, wfNatMappingProtocol=wfNatMappingProtocol, wfNatStaticMapEntry=wfNatStaticMapEntry, wfNatSrcAddressFilterDelete=wfNatSrcAddressFilterDelete, wfNatBaseSynchronization=wfNatBaseSynchronization, wfNatLocalAddrRangeDisable=wfNatLocalAddrRangeDisable, wfNatAddressRangeNto1Addr=wfNatAddressRangeNto1Addr, wfNatMappingInDomain=wfNatMappingInDomain, wfNatIntfState=wfNatIntfState, wfNatBaseState=wfNatBaseState, wfNatLocalAddrRangeAddress=wfNatLocalAddrRangeAddress, wfNatStaticMapGlobalPort=wfNatStaticMapGlobalPort, wfNatBaseDelete=wfNatBaseDelete, wfNatSynPeerDelete=wfNatSynPeerDelete, wfNatSrcAddressFilterUnnumCct=wfNatSrcAddressFilterUnnumCct, wfNatSynPeerTable=wfNatSynPeerTable, wfNatStaticMapLocalPort=wfNatStaticMapLocalPort, wfNatMapRxCount=wfNatMapRxCount, wfNatSynPeerRouterID=wfNatSynPeerRouterID, wfNatIntfPktDropCount=wfNatIntfPktDropCount, wfNatAddrRangePrefixLen=wfNatAddrRangePrefixLen, wfNatStaticMapTable=wfNatStaticMapTable, wfNatLocalAddrRangeDelete=wfNatLocalAddrRangeDelete, wfNatBaseSynKeepAlvInterval=wfNatBaseSynKeepAlvInterval, wfNatMapLocalAddress=wfNatMapLocalAddress, wfNatMappingOutDomain=wfNatMappingOutDomain, wfNatSrcAddressFilterDisable=wfNatSrcAddressFilterDisable, wfNatAddressRangeIndex=wfNatAddressRangeIndex, wfNatAddressRangeDelete=wfNatAddressRangeDelete, wfNatBaseLocalToLocalEnable=wfNatBaseLocalToLocalEnable, wfNatStaticMappingEntry=wfNatStaticMappingEntry, wfNatMappingOrigPort=wfNatMappingOrigPort, wfNatBaseSoloistSlot=wfNatBaseSoloistSlot, wfNatLocalAddrRangeTable=wfNatLocalAddrRangeTable, wfNatAddrRangeAddress=wfNatAddrRangeAddress, wfNatStaticMappingDisable=wfNatStaticMappingDisable, wfNatAddressRangeAddress=wfNatAddressRangeAddress, wfNatAddrRangeDelete=wfNatAddrRangeDelete, wfNatStaticMappingStaticNextHop=wfNatStaticMappingStaticNextHop, wfNatTranslationPoolEntry=wfNatTranslationPoolEntry, wfNatIfCircuit=wfNatIfCircuit, wfNatMappingRxCount=wfNatMappingRxCount, wfNatTranslationPoolIndex=wfNatTranslationPoolIndex, wfNatIfState=wfNatIfState, wfNatIntfDomain=wfNatIntfDomain, wfNatMappingOrigAddress=wfNatMappingOrigAddress, wfNatMapEntry=wfNatMapEntry, wfNatTranslationPoolDelete=wfNatTranslationPoolDelete, wfNatStaticMapLocalAddress=wfNatStaticMapLocalAddress, wfNatAddressRangeDisable=wfNatAddressRangeDisable, wfNatIntfDelete=wfNatIntfDelete, wfNatStaticMapDisable=wfNatStaticMapDisable, wfNatSrcAddressFilterPrefixLen=wfNatSrcAddressFilterPrefixLen, wfNatBaseInstallUniPrivAddr=wfNatBaseInstallUniPrivAddr, wfNatStaticMappingDelete=wfNatStaticMappingDelete, wfNatBaseLogMask=wfNatBaseLogMask, wfNatIfIpAddress=wfNatIfIpAddress, wfNatLocalAddrRangeEntry=wfNatLocalAddrRangeEntry, wfNatStaticMappingUnnumCct=wfNatStaticMappingUnnumCct, wfNatMappingTable=wfNatMappingTable, wfNatSynPeerEntry=wfNatSynPeerEntry, wfNatBaseMapTimeout=wfNatBaseMapTimeout, wfNatStaticMappingTransPort=wfNatStaticMappingTransPort, wfNatStaticMappingProtocol=wfNatStaticMappingProtocol, wfNatIfRxCount=wfNatIfRxCount, wfNatAddressRangeUnnumCct=wfNatAddressRangeUnnumCct, wfNatIfDelete=wfNatIfDelete, wfNatMappingTransAddress=wfNatMappingTransAddress, wfNatStaticMapGlobalAddress=wfNatStaticMapGlobalAddress, wfNatSynPeerDisable=wfNatSynPeerDisable, wfNatMappingTxCount=wfNatMappingTxCount, wfNatIfDisable=wfNatIfDisable, wfNatStaticMappingOrigAddress=wfNatStaticMappingOrigAddress, wfNatSrcAddressFilterIndex=wfNatSrcAddressFilterIndex, wfNatLocalAddrRangeNto1Addr=wfNatLocalAddrRangeNto1Addr, wfNatIfEntry=wfNatIfEntry, wfNatIntfTxCount=wfNatIntfTxCount, wfNatTranslationPoolDisable=wfNatTranslationPoolDisable, wfNatIntfTable=wfNatIntfTable, wfNatSrcAddressFilterTable=wfNatSrcAddressFilterTable)
