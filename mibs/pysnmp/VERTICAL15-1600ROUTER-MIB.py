#
# PySNMP MIB module VERTICAL15-1600ROUTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VERTICAL15-1600ROUTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:27:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Integer32, iso, Gauge32, MibIdentifier, NotificationType, Counter64, TimeTicks, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, IpAddress, enterprises, NotificationType, ObjectIdentity, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "iso", "Gauge32", "MibIdentifier", "NotificationType", "Counter64", "TimeTicks", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "IpAddress", "enterprises", "NotificationType", "ObjectIdentity", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
vertical = MibIdentifier((1, 3, 6, 1, 4, 1, 2338))
v1600Router = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 15))
v1600InstalledSlot = MibScalar((1, 3, 6, 1, 4, 1, 2338, 15, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: v1600InstalledSlot.setStatus('mandatory')
v1600Ser0ChannelWidth = MibScalar((1, 3, 6, 1, 4, 1, 2338, 15, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: v1600Ser0ChannelWidth.setStatus('mandatory')
v1600Ser0T1InterfaceSlot = MibScalar((1, 3, 6, 1, 4, 1, 2338, 15, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: v1600Ser0T1InterfaceSlot.setStatus('mandatory')
v1600Ser0T1InterfacePort = MibScalar((1, 3, 6, 1, 4, 1, 2338, 15, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: v1600Ser0T1InterfacePort.setStatus('mandatory')
v1600Ser0T1InterfaceStartChan = MibScalar((1, 3, 6, 1, 4, 1, 2338, 15, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: v1600Ser0T1InterfaceStartChan.setStatus('mandatory')
v1600FlashCardReady = MibScalar((1, 3, 6, 1, 4, 1, 2338, 15, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ready", 0), ("notReady", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: v1600FlashCardReady.setStatus('mandatory')
v1600CardReadyLED = MibScalar((1, 3, 6, 1, 4, 1, 2338, 15, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: v1600CardReadyLED.setStatus('mandatory')
v1600CardErrorLED = MibScalar((1, 3, 6, 1, 4, 1, 2338, 15, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: v1600CardErrorLED.setStatus('mandatory')
v1600RouterOKLED = MibScalar((1, 3, 6, 1, 4, 1, 2338, 15, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: v1600RouterOKLED.setStatus('mandatory')
v1600ExtSerial1ConnOK = MibScalar((1, 3, 6, 1, 4, 1, 2338, 15, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: v1600ExtSerial1ConnOK.setStatus('mandatory')
v1600ExtSerial1DCD = MibScalar((1, 3, 6, 1, 4, 1, 2338, 15, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: v1600ExtSerial1DCD.setStatus('mandatory')
v1600SwitchSlotNum = MibScalar((1, 3, 6, 1, 4, 1, 2338, 15, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: v1600SwitchSlotNum.setStatus('mandatory')
v1600EthSwitchedPorts = MibScalar((1, 3, 6, 1, 4, 1, 2338, 15, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: v1600EthSwitchedPorts.setStatus('mandatory')
v1600SwitchStat = MibScalar((1, 3, 6, 1, 4, 1, 2338, 15, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: v1600SwitchStat.setStatus('mandatory')
v1600IntSerial0ConnOK = MibScalar((1, 3, 6, 1, 4, 1, 2338, 15, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: v1600IntSerial0ConnOK.setStatus('mandatory')
v1600IntSerial0DCD = MibScalar((1, 3, 6, 1, 4, 1, 2338, 15, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: v1600IntSerial0DCD.setStatus('mandatory')
v1600RouterEthLinkOK = MibScalar((1, 3, 6, 1, 4, 1, 2338, 15, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("on", 0), ("off", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: v1600RouterEthLinkOK.setStatus('mandatory')
v1600CardNotReady = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,68)).setObjects(("VERTICAL15-1600ROUTER-MIB", "v1600InstalledSlot"))
v1600FlashCardNotReady = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,69)).setObjects(("VERTICAL15-1600ROUTER-MIB", "v1600InstalledSlot"))
v1600FlashCardReadyTrap = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,76)).setObjects(("VERTICAL15-1600ROUTER-MIB", "v1600InstalledSlot"))
v1600RouterReady = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,77)).setObjects(("VERTICAL15-1600ROUTER-MIB", "v1600InstalledSlot"))
v1600RouterNotReady = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,78)).setObjects(("VERTICAL15-1600ROUTER-MIB", "v1600InstalledSlot"))
mibBuilder.exportSymbols("VERTICAL15-1600ROUTER-MIB", v1600RouterEthLinkOK=v1600RouterEthLinkOK, v1600Ser0T1InterfacePort=v1600Ser0T1InterfacePort, v1600InstalledSlot=v1600InstalledSlot, v1600Router=v1600Router, v1600RouterNotReady=v1600RouterNotReady, v1600Ser0T1InterfaceSlot=v1600Ser0T1InterfaceSlot, v1600SwitchStat=v1600SwitchStat, v1600EthSwitchedPorts=v1600EthSwitchedPorts, v1600CardReadyLED=v1600CardReadyLED, v1600RouterReady=v1600RouterReady, v1600IntSerial0ConnOK=v1600IntSerial0ConnOK, v1600ExtSerial1DCD=v1600ExtSerial1DCD, v1600RouterOKLED=v1600RouterOKLED, v1600CardNotReady=v1600CardNotReady, v1600CardErrorLED=v1600CardErrorLED, vertical=vertical, v1600FlashCardReady=v1600FlashCardReady, v1600SwitchSlotNum=v1600SwitchSlotNum, v1600ExtSerial1ConnOK=v1600ExtSerial1ConnOK, v1600Ser0ChannelWidth=v1600Ser0ChannelWidth, v1600Ser0T1InterfaceStartChan=v1600Ser0T1InterfaceStartChan, v1600FlashCardReadyTrap=v1600FlashCardReadyTrap, v1600FlashCardNotReady=v1600FlashCardNotReady, v1600IntSerial0DCD=v1600IntSerial0DCD)
