#
# PySNMP MIB module DOCS-MCAST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DOCS-MCAST-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:38:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
clabProjDocsis, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabProjDocsis")
DocsSAId, DocsBpkmDataEncryptAlg = mibBuilder.importSymbols("DOCS-IETF-BPI2-MIB", "DocsSAId", "DocsBpkmDataEncryptAlg")
ChSetId, Dsid = mibBuilder.importSymbols("DOCS-IF3-MIB", "ChSetId", "Dsid")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
InetAddress, InetAddressType, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType", "InetAddressPrefixLength")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter64, MibIdentifier, Unsigned32, Integer32, Counter32, TimeTicks, Gauge32, IpAddress, iso, ModuleIdentity, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "Unsigned32", "Integer32", "Counter32", "TimeTicks", "Gauge32", "IpAddress", "iso", "ModuleIdentity", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity")
RowStatus, MacAddress, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "MacAddress", "TextualConvention", "TruthValue", "DisplayString")
docsMcastMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18))
docsMcastMib.setRevisions(('2015-04-22 00:00', '2014-07-29 00:00', '2007-08-03 00:00', '2006-12-07 17:00',))
if mibBuilder.loadTexts: docsMcastMib.setLastUpdated('201504220000Z')
if mibBuilder.loadTexts: docsMcastMib.setOrganization('Cable Television Laboratories, Inc.')
docsMcastMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1))
docsMcastCmtsGrpCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1), )
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgTable.setStatus('current')
docsMcastCmtsGrpCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1), ).setIndexNames((0, "DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgId"))
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgEntry.setStatus('current')
docsMcastCmtsGrpCfgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgId.setStatus('current')
docsMcastCmtsGrpCfgRulePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgRulePriority.setStatus('current')
docsMcastCmtsGrpCfgPrefixAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgPrefixAddrType.setStatus('current')
docsMcastCmtsGrpCfgSrcPrefixAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgSrcPrefixAddr.setStatus('current')
docsMcastCmtsGrpCfgSrcPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 5), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgSrcPrefixLen.setStatus('current')
docsMcastCmtsGrpCfgGrpPrefixAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgGrpPrefixAddr.setStatus('current')
docsMcastCmtsGrpCfgGrpPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 7), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgGrpPrefixLen.setStatus('current')
docsMcastCmtsGrpCfgTosLow = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgTosLow.setStatus('current')
docsMcastCmtsGrpCfgTosHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgTosHigh.setStatus('current')
docsMcastCmtsGrpCfgTosMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgTosMask.setStatus('current')
docsMcastCmtsGrpCfgQosConfigId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgQosConfigId.setStatus('current')
docsMcastCmtsGrpCfgEncryptConfigId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgEncryptConfigId.setStatus('current')
docsMcastCmtsGrpCfgPhsConfigId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgPhsConfigId.setStatus('current')
docsMcastCmtsGrpCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgRowStatus.setStatus('current')
docsMcastCmtsGrpEncryptCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 2), )
if mibBuilder.loadTexts: docsMcastCmtsGrpEncryptCfgTable.setStatus('current')
docsMcastCmtsGrpEncryptCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 2, 1), ).setIndexNames((0, "DOCS-MCAST-MIB", "docsMcastCmtsGrpEncryptCfgId"))
if mibBuilder.loadTexts: docsMcastCmtsGrpEncryptCfgEntry.setStatus('current')
docsMcastCmtsGrpEncryptCfgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: docsMcastCmtsGrpEncryptCfgId.setStatus('current')
docsMcastCmtsGrpEncryptCfgCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cmts", 1), ("mgmt", 2))).clone('mgmt')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpEncryptCfgCtrl.setStatus('current')
docsMcastCmtsGrpEncryptCfgAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 2, 1, 3), DocsBpkmDataEncryptAlg().clone('des56CbcMode')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpEncryptCfgAlg.setStatus('current')
docsMcastCmtsGrpEncryptCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpEncryptCfgRowStatus.setStatus('current')
docsMcastCmtsGrpPhsCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 3), )
if mibBuilder.loadTexts: docsMcastCmtsGrpPhsCfgTable.setStatus('current')
docsMcastCmtsGrpPhsCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 3, 1), ).setIndexNames((0, "DOCS-MCAST-MIB", "docsMcastCmtsGrpPhsCfgId"))
if mibBuilder.loadTexts: docsMcastCmtsGrpPhsCfgEntry.setStatus('current')
docsMcastCmtsGrpPhsCfgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: docsMcastCmtsGrpPhsCfgId.setStatus('current')
docsMcastCmtsGrpPhsCfgPhsField = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpPhsCfgPhsField.setStatus('current')
docsMcastCmtsGrpPhsCfgPhsMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpPhsCfgPhsMask.setStatus('current')
docsMcastCmtsGrpPhsCfgPhsSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('Bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpPhsCfgPhsSize.setStatus('current')
docsMcastCmtsGrpPhsCfgPhsVerify = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 3, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpPhsCfgPhsVerify.setStatus('current')
docsMcastCmtsGrpPhsCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpPhsCfgRowStatus.setStatus('current')
docsMcastCmtsGrpQosCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 4), )
if mibBuilder.loadTexts: docsMcastCmtsGrpQosCfgTable.setStatus('current')
docsMcastCmtsGrpQosCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 4, 1), ).setIndexNames((0, "DOCS-MCAST-MIB", "docsMcastCmtsGrpQosCfgId"))
if mibBuilder.loadTexts: docsMcastCmtsGrpQosCfgEntry.setStatus('current')
docsMcastCmtsGrpQosCfgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: docsMcastCmtsGrpQosCfgId.setStatus('current')
docsMcastCmtsGrpQosCfgServiceClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 4, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 15)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpQosCfgServiceClassName.setStatus('current')
docsMcastCmtsGrpQosCfgQosCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("singleSsession", 1), ("aggregateSession", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpQosCfgQosCtrl.setStatus('current')
docsMcastCmtsGrpQosCfgAggSessLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpQosCfgAggSessLimit.setStatus('current')
docsMcastCmtsGrpQosCfgAppId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 4, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpQosCfgAppId.setStatus('current')
docsMcastCmtsGrpQosCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpQosCfgRowStatus.setStatus('current')
docsMcastCmtsReplSessTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5), )
if mibBuilder.loadTexts: docsMcastCmtsReplSessTable.setStatus('current')
docsMcastCmtsReplSessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5, 1), ).setIndexNames((0, "DOCS-MCAST-MIB", "docsMcastCmtsReplSessPrefixAddrType"), (0, "DOCS-MCAST-MIB", "docsMcastCmtsReplSessGrpPrefix"), (0, "DOCS-MCAST-MIB", "docsMcastCmtsReplSessSrcPrefix"), (0, "DOCS-MCAST-MIB", "docsMcastCmtsReplSessMdIfIndex"), (0, "DOCS-MCAST-MIB", "docsMcastCmtsReplSessDcsId"), (0, "DOCS-MCAST-MIB", "docsMcastCmtsReplSessServiceFlowId"))
if mibBuilder.loadTexts: docsMcastCmtsReplSessEntry.setStatus('current')
docsMcastCmtsReplSessPrefixAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5, 1, 1), InetAddressType())
if mibBuilder.loadTexts: docsMcastCmtsReplSessPrefixAddrType.setStatus('current')
docsMcastCmtsReplSessGrpPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5, 1, 2), InetAddress())
if mibBuilder.loadTexts: docsMcastCmtsReplSessGrpPrefix.setStatus('current')
docsMcastCmtsReplSessSrcPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5, 1, 3), InetAddress())
if mibBuilder.loadTexts: docsMcastCmtsReplSessSrcPrefix.setStatus('current')
docsMcastCmtsReplSessMdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5, 1, 4), InterfaceIndex())
if mibBuilder.loadTexts: docsMcastCmtsReplSessMdIfIndex.setStatus('current')
docsMcastCmtsReplSessDcsId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5, 1, 5), ChSetId())
if mibBuilder.loadTexts: docsMcastCmtsReplSessDcsId.setStatus('current')
docsMcastCmtsReplSessServiceFlowId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: docsMcastCmtsReplSessServiceFlowId.setStatus('current')
docsMcastCmtsReplSessDsid = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5, 1, 7), Dsid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastCmtsReplSessDsid.setStatus('current')
docsMcastCmtsReplSessSaid = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5, 1, 8), DocsSAId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastCmtsReplSessSaid.setStatus('current')
docsMcastDefGrpSvcClass = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 6))
docsMcastDefGrpSvcClassDef = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 6, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsMcastDefGrpSvcClassDef.setStatus('current')
docsMcastDsidPhsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 7), )
if mibBuilder.loadTexts: docsMcastDsidPhsTable.setStatus('current')
docsMcastDsidPhsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-MCAST-MIB", "docsMcastDsidPhsDsid"))
if mibBuilder.loadTexts: docsMcastDsidPhsEntry.setStatus('current')
docsMcastDsidPhsDsid = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 7, 1, 1), Dsid())
if mibBuilder.loadTexts: docsMcastDsidPhsDsid.setStatus('current')
docsMcastDsidPhsPhsField = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastDsidPhsPhsField.setStatus('current')
docsMcastDsidPhsPhsMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastDsidPhsPhsMask.setStatus('current')
docsMcastDsidPhsPhsSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 7, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastDsidPhsPhsSize.setStatus('current')
docsMcastDsidPhsPhsVerify = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 7, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastDsidPhsPhsVerify.setStatus('current')
docsMcastStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 8), )
if mibBuilder.loadTexts: docsMcastStatsTable.setStatus('current')
docsMcastStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-MCAST-MIB", "docsMcastStatsGrpAddrType"), (0, "DOCS-MCAST-MIB", "docsMcastStatsGrpAddr"), (0, "DOCS-MCAST-MIB", "docsMcastStatsGrpPrefixLen"), (0, "DOCS-MCAST-MIB", "docsMcastStatsSrcAddrType"), (0, "DOCS-MCAST-MIB", "docsMcastStatsSrcAddr"), (0, "DOCS-MCAST-MIB", "docsMcastStatsSrcPrefixLen"))
if mibBuilder.loadTexts: docsMcastStatsEntry.setStatus('current')
docsMcastStatsGrpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 8, 1, 1), InetAddressType())
if mibBuilder.loadTexts: docsMcastStatsGrpAddrType.setStatus('current')
docsMcastStatsGrpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 8, 1, 2), InetAddress())
if mibBuilder.loadTexts: docsMcastStatsGrpAddr.setStatus('current')
docsMcastStatsGrpPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 8, 1, 3), InetAddressPrefixLength())
if mibBuilder.loadTexts: docsMcastStatsGrpPrefixLen.setStatus('current')
docsMcastStatsSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 8, 1, 4), InetAddressType())
if mibBuilder.loadTexts: docsMcastStatsSrcAddrType.setStatus('current')
docsMcastStatsSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 8, 1, 5), InetAddress())
if mibBuilder.loadTexts: docsMcastStatsSrcAddr.setStatus('current')
docsMcastStatsSrcPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 8, 1, 6), InetAddressPrefixLength())
if mibBuilder.loadTexts: docsMcastStatsSrcPrefixLen.setStatus('current')
docsMcastStatsDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 8, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastStatsDroppedPkts.setStatus('current')
docsMcastStatsDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 8, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastStatsDroppedOctets.setStatus('current')
docsMcastCpeListTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 9), )
if mibBuilder.loadTexts: docsMcastCpeListTable.setStatus('current')
docsMcastCpeListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-MCAST-MIB", "docsMcastCpeListGrpAddrType"), (0, "DOCS-MCAST-MIB", "docsMcastCpeListGrpAddr"), (0, "DOCS-MCAST-MIB", "docsMcastCpeListGrpPrefixLen"), (0, "DOCS-MCAST-MIB", "docsMcastCpeListSrcAddrType"), (0, "DOCS-MCAST-MIB", "docsMcastCpeListSrcAddr"), (0, "DOCS-MCAST-MIB", "docsMcastCpeListSrcPrefixLen"), (0, "DOCS-MCAST-MIB", "docsMcastCpeListCmMacAddr"))
if mibBuilder.loadTexts: docsMcastCpeListEntry.setStatus('current')
docsMcastCpeListGrpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 9, 1, 1), InetAddressType())
if mibBuilder.loadTexts: docsMcastCpeListGrpAddrType.setStatus('current')
docsMcastCpeListGrpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 9, 1, 2), InetAddress())
if mibBuilder.loadTexts: docsMcastCpeListGrpAddr.setStatus('current')
docsMcastCpeListGrpPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 9, 1, 3), InetAddressPrefixLength())
if mibBuilder.loadTexts: docsMcastCpeListGrpPrefixLen.setStatus('current')
docsMcastCpeListSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 9, 1, 4), InetAddressType())
if mibBuilder.loadTexts: docsMcastCpeListSrcAddrType.setStatus('current')
docsMcastCpeListSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 9, 1, 5), InetAddress())
if mibBuilder.loadTexts: docsMcastCpeListSrcAddr.setStatus('current')
docsMcastCpeListSrcPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 9, 1, 6), InetAddressPrefixLength())
if mibBuilder.loadTexts: docsMcastCpeListSrcPrefixLen.setStatus('current')
docsMcastCpeListCmMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 9, 1, 7), MacAddress())
if mibBuilder.loadTexts: docsMcastCpeListCmMacAddr.setStatus('current')
docsMcastCpeListDsid = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 9, 1, 8), Dsid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastCpeListDsid.setStatus('current')
docsMcastCpeListCpeMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 9, 1, 9), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastCpeListCpeMacAddr.setStatus('current')
docsMcastCpeListCpeIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 9, 1, 10), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastCpeListCpeIpAddrType.setStatus('current')
docsMcastCpeListCpeIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 9, 1, 11), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastCpeListCpeIpAddr.setStatus('current')
docsMcastBandwidthTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 10), )
if mibBuilder.loadTexts: docsMcastBandwidthTable.setStatus('current')
docsMcastBandwidthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 10, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsMcastBandwidthEntry.setStatus('current')
docsMcastBandwidthAdmittedAggrBW = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 10, 1, 1), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastBandwidthAdmittedAggrBW.setStatus('current')
docsMcastBandwidthAdmittedAggrLowWater = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 10, 1, 2), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastBandwidthAdmittedAggrLowWater.setStatus('current')
docsMcastBandwidthAdmittedAggrHighWater = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 10, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastBandwidthAdmittedAggrHighWater.setStatus('current')
docsMcastMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 2))
docsMcastMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 2, 1))
docsMcastMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 2, 2))
docsMcastCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 2, 1, 1)).setObjects(("DOCS-MCAST-MIB", "docsMcastGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsMcastCompliance = docsMcastCompliance.setStatus('current')
docsMcastGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 2, 2, 1)).setObjects(("DOCS-MCAST-MIB", "docsMcastCmtsReplSessDsid"), ("DOCS-MCAST-MIB", "docsMcastCmtsReplSessSaid"), ("DOCS-MCAST-MIB", "docsMcastDefGrpSvcClassDef"), ("DOCS-MCAST-MIB", "docsMcastDsidPhsPhsField"), ("DOCS-MCAST-MIB", "docsMcastDsidPhsPhsMask"), ("DOCS-MCAST-MIB", "docsMcastDsidPhsPhsSize"), ("DOCS-MCAST-MIB", "docsMcastDsidPhsPhsVerify"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgRulePriority"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgPrefixAddrType"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgSrcPrefixAddr"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgSrcPrefixLen"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgGrpPrefixAddr"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgGrpPrefixLen"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgTosLow"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgTosHigh"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgTosMask"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgQosConfigId"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgEncryptConfigId"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgPhsConfigId"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgRowStatus"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpQosCfgServiceClassName"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpQosCfgQosCtrl"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpQosCfgAggSessLimit"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpQosCfgAppId"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpQosCfgRowStatus"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpEncryptCfgCtrl"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpEncryptCfgAlg"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpEncryptCfgRowStatus"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpPhsCfgPhsField"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpPhsCfgPhsMask"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpPhsCfgPhsSize"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpPhsCfgPhsVerify"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpPhsCfgRowStatus"), ("DOCS-MCAST-MIB", "docsMcastStatsDroppedPkts"), ("DOCS-MCAST-MIB", "docsMcastStatsDroppedOctets"), ("DOCS-MCAST-MIB", "docsMcastCpeListDsid"), ("DOCS-MCAST-MIB", "docsMcastCpeListCpeMacAddr"), ("DOCS-MCAST-MIB", "docsMcastCpeListCpeIpAddrType"), ("DOCS-MCAST-MIB", "docsMcastCpeListCpeIpAddr"), ("DOCS-MCAST-MIB", "docsMcastBandwidthAdmittedAggrBW"), ("DOCS-MCAST-MIB", "docsMcastBandwidthAdmittedAggrLowWater"), ("DOCS-MCAST-MIB", "docsMcastBandwidthAdmittedAggrHighWater"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsMcastGroup = docsMcastGroup.setStatus('current')
mibBuilder.exportSymbols("DOCS-MCAST-MIB", docsMcastCmtsGrpEncryptCfgCtrl=docsMcastCmtsGrpEncryptCfgCtrl, docsMcastCpeListDsid=docsMcastCpeListDsid, docsMcastCmtsReplSessDsid=docsMcastCmtsReplSessDsid, docsMcastDsidPhsDsid=docsMcastDsidPhsDsid, docsMcastDsidPhsPhsMask=docsMcastDsidPhsPhsMask, docsMcastCpeListCmMacAddr=docsMcastCpeListCmMacAddr, docsMcastCmtsGrpEncryptCfgTable=docsMcastCmtsGrpEncryptCfgTable, docsMcastStatsDroppedOctets=docsMcastStatsDroppedOctets, docsMcastCmtsReplSessServiceFlowId=docsMcastCmtsReplSessServiceFlowId, docsMcastCpeListSrcAddrType=docsMcastCpeListSrcAddrType, docsMcastCmtsGrpCfgRowStatus=docsMcastCmtsGrpCfgRowStatus, docsMcastCmtsGrpEncryptCfgAlg=docsMcastCmtsGrpEncryptCfgAlg, docsMcastGroup=docsMcastGroup, docsMcastCmtsReplSessMdIfIndex=docsMcastCmtsReplSessMdIfIndex, docsMcastCmtsGrpCfgTosHigh=docsMcastCmtsGrpCfgTosHigh, docsMcastCmtsGrpEncryptCfgId=docsMcastCmtsGrpEncryptCfgId, docsMcastCmtsGrpCfgQosConfigId=docsMcastCmtsGrpCfgQosConfigId, docsMcastCmtsGrpPhsCfgRowStatus=docsMcastCmtsGrpPhsCfgRowStatus, docsMcastMibObjects=docsMcastMibObjects, docsMcastStatsGrpAddr=docsMcastStatsGrpAddr, docsMcastCmtsGrpQosCfgAppId=docsMcastCmtsGrpQosCfgAppId, docsMcastCmtsGrpQosCfgEntry=docsMcastCmtsGrpQosCfgEntry, docsMcastCpeListGrpPrefixLen=docsMcastCpeListGrpPrefixLen, docsMcastDsidPhsTable=docsMcastDsidPhsTable, docsMcastCmtsReplSessDcsId=docsMcastCmtsReplSessDcsId, docsMcastCmtsGrpPhsCfgPhsSize=docsMcastCmtsGrpPhsCfgPhsSize, docsMcastCmtsGrpCfgGrpPrefixAddr=docsMcastCmtsGrpCfgGrpPrefixAddr, docsMcastCmtsGrpCfgSrcPrefixAddr=docsMcastCmtsGrpCfgSrcPrefixAddr, docsMcastMibGroups=docsMcastMibGroups, docsMcastCmtsReplSessPrefixAddrType=docsMcastCmtsReplSessPrefixAddrType, docsMcastStatsSrcAddrType=docsMcastStatsSrcAddrType, docsMcastCmtsGrpCfgGrpPrefixLen=docsMcastCmtsGrpCfgGrpPrefixLen, docsMcastCmtsGrpCfgPrefixAddrType=docsMcastCmtsGrpCfgPrefixAddrType, docsMcastDsidPhsPhsSize=docsMcastDsidPhsPhsSize, docsMcastCmtsGrpPhsCfgPhsField=docsMcastCmtsGrpPhsCfgPhsField, docsMcastStatsSrcAddr=docsMcastStatsSrcAddr, docsMcastCmtsGrpCfgTosMask=docsMcastCmtsGrpCfgTosMask, docsMcastDsidPhsEntry=docsMcastDsidPhsEntry, docsMcastCmtsReplSessSrcPrefix=docsMcastCmtsReplSessSrcPrefix, docsMcastCmtsGrpCfgRulePriority=docsMcastCmtsGrpCfgRulePriority, docsMcastCmtsGrpQosCfgTable=docsMcastCmtsGrpQosCfgTable, docsMcastCmtsGrpQosCfgServiceClassName=docsMcastCmtsGrpQosCfgServiceClassName, docsMcastMib=docsMcastMib, docsMcastCmtsGrpCfgId=docsMcastCmtsGrpCfgId, docsMcastCmtsGrpPhsCfgId=docsMcastCmtsGrpPhsCfgId, docsMcastCmtsGrpQosCfgId=docsMcastCmtsGrpQosCfgId, docsMcastCmtsReplSessSaid=docsMcastCmtsReplSessSaid, docsMcastCmtsGrpQosCfgRowStatus=docsMcastCmtsGrpQosCfgRowStatus, docsMcastCmtsReplSessEntry=docsMcastCmtsReplSessEntry, docsMcastCmtsGrpEncryptCfgRowStatus=docsMcastCmtsGrpEncryptCfgRowStatus, docsMcastCpeListGrpAddrType=docsMcastCpeListGrpAddrType, docsMcastStatsTable=docsMcastStatsTable, docsMcastDsidPhsPhsField=docsMcastDsidPhsPhsField, docsMcastCmtsGrpQosCfgQosCtrl=docsMcastCmtsGrpQosCfgQosCtrl, docsMcastStatsDroppedPkts=docsMcastStatsDroppedPkts, docsMcastBandwidthAdmittedAggrBW=docsMcastBandwidthAdmittedAggrBW, docsMcastCmtsGrpCfgSrcPrefixLen=docsMcastCmtsGrpCfgSrcPrefixLen, docsMcastCmtsGrpPhsCfgEntry=docsMcastCmtsGrpPhsCfgEntry, docsMcastMibConformance=docsMcastMibConformance, docsMcastCmtsGrpCfgPhsConfigId=docsMcastCmtsGrpCfgPhsConfigId, docsMcastBandwidthEntry=docsMcastBandwidthEntry, docsMcastCmtsReplSessTable=docsMcastCmtsReplSessTable, docsMcastCpeListSrcPrefixLen=docsMcastCpeListSrcPrefixLen, docsMcastCpeListCpeIpAddrType=docsMcastCpeListCpeIpAddrType, docsMcastStatsGrpAddrType=docsMcastStatsGrpAddrType, docsMcastCmtsReplSessGrpPrefix=docsMcastCmtsReplSessGrpPrefix, PYSNMP_MODULE_ID=docsMcastMib, docsMcastCmtsGrpEncryptCfgEntry=docsMcastCmtsGrpEncryptCfgEntry, docsMcastStatsEntry=docsMcastStatsEntry, docsMcastCpeListGrpAddr=docsMcastCpeListGrpAddr, docsMcastCmtsGrpQosCfgAggSessLimit=docsMcastCmtsGrpQosCfgAggSessLimit, docsMcastCpeListSrcAddr=docsMcastCpeListSrcAddr, docsMcastCmtsGrpCfgTable=docsMcastCmtsGrpCfgTable, docsMcastCpeListTable=docsMcastCpeListTable, docsMcastDefGrpSvcClassDef=docsMcastDefGrpSvcClassDef, docsMcastCmtsGrpPhsCfgPhsMask=docsMcastCmtsGrpPhsCfgPhsMask, docsMcastStatsGrpPrefixLen=docsMcastStatsGrpPrefixLen, docsMcastCmtsGrpCfgTosLow=docsMcastCmtsGrpCfgTosLow, docsMcastDsidPhsPhsVerify=docsMcastDsidPhsPhsVerify, docsMcastMibCompliances=docsMcastMibCompliances, docsMcastCompliance=docsMcastCompliance, docsMcastCmtsGrpPhsCfgTable=docsMcastCmtsGrpPhsCfgTable, docsMcastDefGrpSvcClass=docsMcastDefGrpSvcClass, docsMcastCpeListCpeMacAddr=docsMcastCpeListCpeMacAddr, docsMcastBandwidthTable=docsMcastBandwidthTable, docsMcastCmtsGrpPhsCfgPhsVerify=docsMcastCmtsGrpPhsCfgPhsVerify, docsMcastCpeListCpeIpAddr=docsMcastCpeListCpeIpAddr, docsMcastCmtsGrpCfgEntry=docsMcastCmtsGrpCfgEntry, docsMcastBandwidthAdmittedAggrLowWater=docsMcastBandwidthAdmittedAggrLowWater, docsMcastCpeListEntry=docsMcastCpeListEntry, docsMcastStatsSrcPrefixLen=docsMcastStatsSrcPrefixLen, docsMcastBandwidthAdmittedAggrHighWater=docsMcastBandwidthAdmittedAggrHighWater, docsMcastCmtsGrpCfgEncryptConfigId=docsMcastCmtsGrpCfgEncryptConfigId)
