#
# PySNMP MIB module MOBILEIPV6-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MOBILEIPV6-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:03:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ipv6InterfaceIfIndex, = mibBuilder.importSymbols("IP-MIB", "ipv6InterfaceIfIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
iso, Gauge32, MibIdentifier, ObjectIdentity, NotificationType, mib_2, Counter64, Bits, ModuleIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter32, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Gauge32", "MibIdentifier", "ObjectIdentity", "NotificationType", "mib-2", "Counter64", "Bits", "ModuleIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter32", "Integer32", "IpAddress")
TruthValue, TextualConvention, DisplayString, TimeStamp, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString", "TimeStamp", "DateAndTime")
mip6MIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 133))
mip6MIB.setRevisions(('2006-02-01 00:00',))
if mibBuilder.loadTexts: mip6MIB.setLastUpdated('200602010000Z')
if mibBuilder.loadTexts: mip6MIB.setOrganization('IETF mip6 Working Group')
mip6Notifications = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 0))
mip6Objects = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1))
mip6Conformance = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 2))
mip6Core = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1, 1))
mip6Mn = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1, 2))
mip6Cn = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1, 3))
mip6Ha = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1, 4))
mip6System = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1, 1, 1))
mip6Bindings = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1, 1, 2))
mip6Stats = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1, 1, 3))
mip6MnSystem = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1, 2, 1))
mip6MnConf = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1, 2, 2))
mip6MnRegistration = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1, 2, 3))
mip6CnSystem = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1, 3, 1))
mip6CnStats = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1, 3, 2))
mip6HaAdvertisement = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1, 4, 1))
mip6HaStats = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1, 4, 2))
class Mip6BURequestRejectionCode(TextualConvention, Integer32):
    reference = 'RFC 3775 : Section 6.1.8'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))
    namedValues = NamedValues(("reasonUnspecified", 1), ("admProhibited", 2), ("insufficientResource", 3), ("homeRegistrationNotSupported", 4), ("notHomeSubnet", 5), ("notHomeAgentForThisMobileNode", 6), ("duplicateAddressDetectionFailed", 7), ("sequenceNumberOutOfWindow", 8), ("expiredHomeNonceIndex", 9), ("expiredCareofNonceIndex", 10), ("expiredNonces", 11), ("registrationTypeChangeDisallowed", 12))

mip6Capabilities = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 1, 1, 1), Bits().clone(namedValues=NamedValues(("mobileNode", 0), ("homeAgent", 1), ("correspondentNode", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6Capabilities.setStatus('current')
mip6Status = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mip6Status.setStatus('current')
mip6BindingCacheTable = MibTable((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 1), )
if mibBuilder.loadTexts: mip6BindingCacheTable.setStatus('current')
mip6BindingCacheEntry = MibTableRow((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 1, 1), ).setIndexNames((0, "MOBILEIPV6-MIB", "mip6BindingHomeAddressType"), (0, "MOBILEIPV6-MIB", "mip6BindingHomeAddress"))
if mibBuilder.loadTexts: mip6BindingCacheEntry.setStatus('current')
mip6BindingHomeAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: mip6BindingHomeAddressType.setStatus('current')
mip6BindingHomeAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 1, 1, 2), InetAddress())
if mibBuilder.loadTexts: mip6BindingHomeAddress.setStatus('current')
mip6BindingCOAType = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 1, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6BindingCOAType.setStatus('current')
mip6BindingCOA = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 1, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6BindingCOA.setStatus('current')
mip6BindingTimeRegistered = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 1, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6BindingTimeRegistered.setStatus('current')
mip6BindingTimeGranted = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 1, 1, 6), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6BindingTimeGranted.setStatus('current')
mip6BindingTimeRemaining = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 1, 1, 7), Gauge32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6BindingTimeRemaining.setStatus('current')
mip6BindingHomeRegn = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6BindingHomeRegn.setStatus('current')
mip6BindingMaxSeq = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6BindingMaxSeq.setStatus('current')
mip6BindingUsageTS = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 1, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6BindingUsageTS.setStatus('current')
mip6BindingUsageCount = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6BindingUsageCount.setStatus('current')
mip6BindingAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mip6BindingAdminStatus.setStatus('current')
mip6BindingHistoryTable = MibTable((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 2), )
if mibBuilder.loadTexts: mip6BindingHistoryTable.setStatus('current')
mip6BindingHistoryEntry = MibTableRow((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 2, 1), ).setIndexNames((0, "MOBILEIPV6-MIB", "mip6BindingHstHomeAddressType"), (0, "MOBILEIPV6-MIB", "mip6BindingHstHomeAddress"), (0, "MOBILEIPV6-MIB", "mip6BindingHstIndex"))
if mibBuilder.loadTexts: mip6BindingHistoryEntry.setStatus('current')
mip6BindingHstHomeAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: mip6BindingHstHomeAddressType.setStatus('current')
mip6BindingHstHomeAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: mip6BindingHstHomeAddress.setStatus('current')
mip6BindingHstIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: mip6BindingHstIndex.setStatus('current')
mip6BindingHstCOAType = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 2, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6BindingHstCOAType.setStatus('current')
mip6BindingHstCOA = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 2, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6BindingHstCOA.setStatus('current')
mip6BindingHstTimeRegistered = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 2, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6BindingHstTimeRegistered.setStatus('current')
mip6BindingHstTimeExpired = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 2, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6BindingHstTimeExpired.setStatus('current')
mip6BindingHstHomeRegn = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6BindingHstHomeRegn.setStatus('current')
mip6BindingHstUsageTS = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 2, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6BindingHstUsageTS.setStatus('current')
mip6BindingHstUsageCount = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 2, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6BindingHstUsageCount.setStatus('current')
mip6TotalTraffic = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 1))
mip6InOctets = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6InOctets.setStatus('current')
mip6HCInOctets = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HCInOctets.setStatus('current')
mip6InPkts = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6InPkts.setStatus('current')
mip6HCInPkts = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HCInPkts.setStatus('current')
mip6OutOctets = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6OutOctets.setStatus('current')
mip6HCOutOctets = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HCOutOctets.setStatus('current')
mip6OutPkts = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6OutPkts.setStatus('current')
mip6HCOutPkts = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HCOutPkts.setStatus('current')
mip6CounterDiscontinuityTime = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CounterDiscontinuityTime.setStatus('current')
mip6NodeTrafficTable = MibTable((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 2), )
if mibBuilder.loadTexts: mip6NodeTrafficTable.setStatus('current')
mip6NodeTrafficEntry = MibTableRow((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 2, 1), ).setIndexNames((0, "MOBILEIPV6-MIB", "mip6BindingHomeAddressType"), (0, "MOBILEIPV6-MIB", "mip6BindingHomeAddress"))
if mibBuilder.loadTexts: mip6NodeTrafficEntry.setStatus('current')
mip6NodeInOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6NodeInOctets.setStatus('current')
mip6HCNodeInOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HCNodeInOctets.setStatus('current')
mip6NodeInPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6NodeInPkts.setStatus('current')
mip6HCNodeInPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HCNodeInPkts.setStatus('current')
mip6NodeOutOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6NodeOutOctets.setStatus('current')
mip6HCNodeOutOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HCNodeOutOctets.setStatus('current')
mip6NodeOutPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6NodeOutPkts.setStatus('current')
mip6HCNodeOutPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HCNodeOutPkts.setStatus('current')
mip6NodeCtrDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 1, 3, 2, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6NodeCtrDiscontinuityTime.setStatus('current')
mip6MnHomeAddressTable = MibTable((1, 3, 6, 1, 2, 1, 133, 1, 2, 1, 1), )
if mibBuilder.loadTexts: mip6MnHomeAddressTable.setStatus('current')
mip6MnHomeAddressEntry = MibTableRow((1, 3, 6, 1, 2, 1, 133, 1, 2, 1, 1, 1), ).setIndexNames((0, "MOBILEIPV6-MIB", "mip6MnHomeAddressType"), (0, "MOBILEIPV6-MIB", "mip6MnHomeAddress"))
if mibBuilder.loadTexts: mip6MnHomeAddressEntry.setStatus('current')
mip6MnHomeAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 2, 1, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: mip6MnHomeAddressType.setStatus('current')
mip6MnHomeAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 2, 1, 1, 1, 2), InetAddress())
if mibBuilder.loadTexts: mip6MnHomeAddress.setStatus('current')
mip6MnHomeAddressState = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("home", 2), ("registered", 3), ("pending", 4), ("isolated", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnHomeAddressState.setStatus('current')
mip6MnDiscoveryRequests = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 2, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnDiscoveryRequests.setStatus('current')
mip6MnDiscoveryReplies = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 2, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnDiscoveryReplies.setStatus('current')
mip6MnDiscoveryTimeouts = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 2, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnDiscoveryTimeouts.setStatus('current')
mip6MnPrefixSolicitationsSent = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 2, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnPrefixSolicitationsSent.setStatus('current')
mip6MnPrefixAdvsRecd = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 2, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnPrefixAdvsRecd.setStatus('current')
mip6MnPrefixAdvsIgnored = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 2, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnPrefixAdvsIgnored.setStatus('current')
mip6MnMovedToFN = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 2, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnMovedToFN.setStatus('current')
mip6MnMovedToHN = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 2, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnMovedToHN.setStatus('current')
mip6MnBLTable = MibTable((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 1), )
if mibBuilder.loadTexts: mip6MnBLTable.setStatus('current')
mip6MnBLEntry = MibTableRow((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 1, 1), ).setIndexNames((0, "MOBILEIPV6-MIB", "mip6MnHomeAddressType"), (0, "MOBILEIPV6-MIB", "mip6MnHomeAddress"), (0, "MOBILEIPV6-MIB", "mip6MnBLNodeAddressType"), (0, "MOBILEIPV6-MIB", "mip6MnBLNodeAddress"))
if mibBuilder.loadTexts: mip6MnBLEntry.setStatus('current')
mip6MnBLNodeAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: mip6MnBLNodeAddressType.setStatus('current')
mip6MnBLNodeAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 1, 1, 2), InetAddress())
if mibBuilder.loadTexts: mip6MnBLNodeAddress.setStatus('current')
mip6MnBLCOAType = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 1, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnBLCOAType.setStatus('current')
mip6MnBLCOA = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 1, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnBLCOA.setStatus('current')
mip6MnBLLifeTimeRequested = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 1, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnBLLifeTimeRequested.setStatus('current')
mip6MnBLLifeTimeGranted = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 1, 1, 6), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnBLLifeTimeGranted.setStatus('current')
mip6MnBLMaxSeq = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnBLMaxSeq.setStatus('current')
mip6MnBLTimeSent = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 1, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnBLTimeSent.setStatus('current')
mip6MnBLAccepted = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnBLAccepted.setStatus('current')
mip6MnBLAcceptedTime = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 1, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnBLAcceptedTime.setStatus('current')
mip6MnBLRetransmissions = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnBLRetransmissions.setStatus('current')
mip6MnBLDontSendBUFlag = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 1, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnBLDontSendBUFlag.setStatus('current')
mip6MnRegnCounters = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 2))
mip6MnMobilityMessagesSent = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnMobilityMessagesSent.setStatus('current')
mip6MnMobilityMessagesRecd = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnMobilityMessagesRecd.setStatus('current')
mip6MnBUsToHA = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnBUsToHA.setStatus('current')
mip6MnBUAcksFromHA = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnBUAcksFromHA.setStatus('current')
mip6MnBUsToCN = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnBUsToCN.setStatus('current')
mip6MnBUAcksFromCN = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnBUAcksFromCN.setStatus('current')
mip6MnBindingErrorsFromCN = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnBindingErrorsFromCN.setStatus('current')
mip6MnICMPErrorsRecd = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnICMPErrorsRecd.setStatus('current')
mip6MnBRRequestsRecd = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 2, 3, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6MnBRRequestsRecd.setStatus('current')
mip6CnGlobalStats = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1))
mip6CnHomeTestInitsRecd = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnHomeTestInitsRecd.setStatus('current')
mip6CnHomeTestsSent = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnHomeTestsSent.setStatus('current')
mip6CnCareOfTestInitsRecd = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnCareOfTestInitsRecd.setStatus('current')
mip6CnCareOfTestsSent = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnCareOfTestsSent.setStatus('current')
mip6CnBUsRecd = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnBUsRecd.setStatus('current')
mip6CnBUAcksSent = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnBUAcksSent.setStatus('current')
mip6CnBRsSent = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnBRsSent.setStatus('current')
mip6CnBindingErrors = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnBindingErrors.setStatus('current')
mip6CnBUsAccepted = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnBUsAccepted.setStatus('current')
mip6CnBUsRejected = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnBUsRejected.setStatus('current')
mip6CnReasonUnspecified = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnReasonUnspecified.setStatus('current')
mip6CnInsufficientResource = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnInsufficientResource.setStatus('current')
mip6CnHomeRegnNotSupported = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnHomeRegnNotSupported.setStatus('current')
mip6CnSeqNumberOutOfWindow = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnSeqNumberOutOfWindow.setStatus('current')
mip6CnExpiredHomeNonceIndex = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnExpiredHomeNonceIndex.setStatus('current')
mip6CnExpiredCareOfNonceIndex = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnExpiredCareOfNonceIndex.setStatus('current')
mip6CnExpiredNonce = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnExpiredNonce.setStatus('current')
mip6CnRegTypeChangeDisallowed = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnRegTypeChangeDisallowed.setStatus('current')
mip6CnCounterTable = MibTable((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 2), )
if mibBuilder.loadTexts: mip6CnCounterTable.setStatus('current')
mip6CnCounterEntry = MibTableRow((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 2, 1), ).setIndexNames((0, "MOBILEIPV6-MIB", "mip6BindingHomeAddressType"), (0, "MOBILEIPV6-MIB", "mip6BindingHomeAddress"))
if mibBuilder.loadTexts: mip6CnCounterEntry.setStatus('current')
mip6CnBURequestsAccepted = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnBURequestsAccepted.setStatus('current')
mip6CnBURequestsRejected = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnBURequestsRejected.setStatus('current')
mip6CnBCEntryCreationTime = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 2, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnBCEntryCreationTime.setStatus('current')
mip6CnBUAcceptedTime = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 2, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnBUAcceptedTime.setStatus('current')
mip6CnBURejectionTime = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 2, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnBURejectionTime.setStatus('current')
mip6CnBURejectionCode = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 2, 1, 6), Mip6BURequestRejectionCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnBURejectionCode.setStatus('current')
mip6CnCtrDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 3, 2, 2, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6CnCtrDiscontinuityTime.setStatus('current')
mip6HaAdvsRecd = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaAdvsRecd.setStatus('current')
mip6HaAdvsSent = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaAdvsSent.setStatus('current')
mip6HaConfTable = MibTable((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 3), )
if mibBuilder.loadTexts: mip6HaConfTable.setStatus('current')
mip6HaConfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 3, 1), ).setIndexNames((0, "IP-MIB", "ipv6InterfaceIfIndex"))
if mibBuilder.loadTexts: mip6HaConfEntry.setStatus('current')
mip6HaAdvPreference = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mip6HaAdvPreference.setStatus('current')
mip6HaAdvLifetime = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: mip6HaAdvLifetime.setStatus('current')
mip6HaPrefixAdv = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mip6HaPrefixAdv.setStatus('current')
mip6HaPrefixSolicitation = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mip6HaPrefixSolicitation.setStatus('current')
mip6HaMCastCtlMsgSupport = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mip6HaMCastCtlMsgSupport.setStatus('current')
mip6HaGlobalStats = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 1))
mip6HaHomeTestInitsRecd = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaHomeTestInitsRecd.setStatus('current')
mip6HaHomeTestsSent = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaHomeTestsSent.setStatus('current')
mip6HaBUsRecd = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaBUsRecd.setStatus('current')
mip6HaBUAcksSent = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaBUAcksSent.setStatus('current')
mip6HaBRAdviceSent = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaBRAdviceSent.setStatus('current')
mip6HaBUsAccepted = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaBUsAccepted.setStatus('current')
mip6HaPrefDiscoverReqd = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaPrefDiscoverReqd.setStatus('current')
mip6HaReasonUnspecified = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaReasonUnspecified.setStatus('current')
mip6HaAdmProhibited = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaAdmProhibited.setStatus('current')
mip6HaInsufficientResource = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaInsufficientResource.setStatus('current')
mip6HaHomeRegnNotSupported = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaHomeRegnNotSupported.setStatus('current')
mip6HaNotHomeSubnet = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaNotHomeSubnet.setStatus('current')
mip6HaNotHomeAgentForThisMN = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaNotHomeAgentForThisMN.setStatus('current')
mip6HaDupAddrDetectionFailed = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaDupAddrDetectionFailed.setStatus('current')
mip6HaSeqNumberOutOfWindow = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaSeqNumberOutOfWindow.setStatus('current')
mip6HaExpiredHomeNonceIndex = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaExpiredHomeNonceIndex.setStatus('current')
mip6HaRegTypeChangeDisallowed = MibScalar((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaRegTypeChangeDisallowed.setStatus('current')
mip6HaCounterTable = MibTable((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 2), )
if mibBuilder.loadTexts: mip6HaCounterTable.setStatus('current')
mip6HaCounterEntry = MibTableRow((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 2, 1), ).setIndexNames((0, "MOBILEIPV6-MIB", "mip6BindingHomeAddressType"), (0, "MOBILEIPV6-MIB", "mip6BindingHomeAddress"))
if mibBuilder.loadTexts: mip6HaCounterEntry.setStatus('current')
mip6HaBURequestsAccepted = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaBURequestsAccepted.setStatus('current')
mip6HaBURequestsDenied = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaBURequestsDenied.setStatus('current')
mip6HaBCEntryCreationTime = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 2, 1, 3), DateAndTime()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaBCEntryCreationTime.setStatus('current')
mip6HaBUAcceptedTime = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 2, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaBUAcceptedTime.setStatus('current')
mip6HaBURejectionTime = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 2, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaBURejectionTime.setStatus('current')
mip6HaRecentBURejectionCode = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 2, 1, 6), Mip6BURequestRejectionCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaRecentBURejectionCode.setStatus('current')
mip6HaCtrDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 2, 2, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaCtrDiscontinuityTime.setStatus('current')
mip6HaListTable = MibTable((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 4), )
if mibBuilder.loadTexts: mip6HaListTable.setStatus('current')
mip6HaListEntry = MibTableRow((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 4, 1), ).setIndexNames((0, "IP-MIB", "ipv6InterfaceIfIndex"), (0, "MOBILEIPV6-MIB", "mip6HaLinkLocalAddressType"), (0, "MOBILEIPV6-MIB", "mip6HaLinkLocalAddress"))
if mibBuilder.loadTexts: mip6HaListEntry.setStatus('current')
mip6HaLinkLocalAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 4, 1, 1), InetAddressType())
if mibBuilder.loadTexts: mip6HaLinkLocalAddressType.setStatus('current')
mip6HaLinkLocalAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 4, 1, 2), InetAddress())
if mibBuilder.loadTexts: mip6HaLinkLocalAddress.setStatus('current')
mip6HaPreference = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaPreference.setStatus('current')
mip6HaRecvLifeTime = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaRecvLifeTime.setStatus('current')
mip6HaRecvTimeStamp = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 4, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaRecvTimeStamp.setStatus('current')
mip6HaGlAddrTable = MibTable((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 5), )
if mibBuilder.loadTexts: mip6HaGlAddrTable.setStatus('current')
mip6HaGlAddrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 5, 1), ).setIndexNames((0, "IP-MIB", "ipv6InterfaceIfIndex"), (0, "MOBILEIPV6-MIB", "mip6HaLinkLocalAddressType"), (0, "MOBILEIPV6-MIB", "mip6HaLinkLocalAddress"), (0, "MOBILEIPV6-MIB", "mip6HaGaAddrSeqNo"))
if mibBuilder.loadTexts: mip6HaGlAddrEntry.setStatus('current')
mip6HaGaAddrSeqNo = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)))
if mibBuilder.loadTexts: mip6HaGaAddrSeqNo.setStatus('current')
mip6HaGaGlobalAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 5, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaGaGlobalAddressType.setStatus('current')
mip6HaGaGlobalAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 133, 1, 4, 1, 5, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mip6HaGaGlobalAddress.setStatus('current')
mip6MnRegistered = NotificationType((1, 3, 6, 1, 2, 1, 133, 0, 1)).setObjects(("MOBILEIPV6-MIB", "mip6BindingTimeRegistered"), ("MOBILEIPV6-MIB", "mip6BindingCOAType"), ("MOBILEIPV6-MIB", "mip6BindingCOA"))
if mibBuilder.loadTexts: mip6MnRegistered.setStatus('current')
mip6MnDeRegistered = NotificationType((1, 3, 6, 1, 2, 1, 133, 0, 2)).setObjects(("MOBILEIPV6-MIB", "mip6BindingTimeRegistered"), ("MOBILEIPV6-MIB", "mip6BindingCOAType"), ("MOBILEIPV6-MIB", "mip6BindingCOA"))
if mibBuilder.loadTexts: mip6MnDeRegistered.setStatus('current')
mip6MnCOAChanged = NotificationType((1, 3, 6, 1, 2, 1, 133, 0, 3)).setObjects(("MOBILEIPV6-MIB", "mip6BindingTimeRegistered"), ("MOBILEIPV6-MIB", "mip6BindingCOAType"), ("MOBILEIPV6-MIB", "mip6BindingCOA"))
if mibBuilder.loadTexts: mip6MnCOAChanged.setStatus('current')
mip6MnBindingExpiredAtHA = NotificationType((1, 3, 6, 1, 2, 1, 133, 0, 4)).setObjects(("MOBILEIPV6-MIB", "mip6BindingTimeRegistered"), ("MOBILEIPV6-MIB", "mip6BindingCOAType"), ("MOBILEIPV6-MIB", "mip6BindingCOA"))
if mibBuilder.loadTexts: mip6MnBindingExpiredAtHA.setStatus('current')
mip6MnBindingExpiredAtCN = NotificationType((1, 3, 6, 1, 2, 1, 133, 0, 5)).setObjects(("MOBILEIPV6-MIB", "mip6BindingTimeRegistered"), ("MOBILEIPV6-MIB", "mip6BindingCOAType"), ("MOBILEIPV6-MIB", "mip6BindingCOA"))
if mibBuilder.loadTexts: mip6MnBindingExpiredAtCN.setStatus('current')
mip6Groups = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 2, 1))
mip6Compliances = MibIdentifier((1, 3, 6, 1, 2, 1, 133, 2, 2))
mip6SystemGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 133, 2, 1, 1)).setObjects(("MOBILEIPV6-MIB", "mip6Capabilities"), ("MOBILEIPV6-MIB", "mip6Status"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6SystemGroup = mip6SystemGroup.setStatus('current')
mip6BindingCacheGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 133, 2, 1, 2)).setObjects(("MOBILEIPV6-MIB", "mip6BindingCOAType"), ("MOBILEIPV6-MIB", "mip6BindingCOA"), ("MOBILEIPV6-MIB", "mip6BindingTimeRegistered"), ("MOBILEIPV6-MIB", "mip6BindingTimeGranted"), ("MOBILEIPV6-MIB", "mip6BindingTimeRemaining"), ("MOBILEIPV6-MIB", "mip6BindingMaxSeq"), ("MOBILEIPV6-MIB", "mip6BindingHomeRegn"), ("MOBILEIPV6-MIB", "mip6BindingUsageTS"), ("MOBILEIPV6-MIB", "mip6BindingUsageCount"), ("MOBILEIPV6-MIB", "mip6BindingAdminStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6BindingCacheGroup = mip6BindingCacheGroup.setStatus('current')
mip6BindingHstGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 133, 2, 1, 3)).setObjects(("MOBILEIPV6-MIB", "mip6BindingHstCOAType"), ("MOBILEIPV6-MIB", "mip6BindingHstCOA"), ("MOBILEIPV6-MIB", "mip6BindingHstTimeRegistered"), ("MOBILEIPV6-MIB", "mip6BindingHstTimeExpired"), ("MOBILEIPV6-MIB", "mip6BindingHstHomeRegn"), ("MOBILEIPV6-MIB", "mip6BindingHstUsageTS"), ("MOBILEIPV6-MIB", "mip6BindingHstUsageCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6BindingHstGroup = mip6BindingHstGroup.setStatus('current')
mip6TotalTrafficGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 133, 2, 1, 4)).setObjects(("MOBILEIPV6-MIB", "mip6InOctets"), ("MOBILEIPV6-MIB", "mip6HCInOctets"), ("MOBILEIPV6-MIB", "mip6InPkts"), ("MOBILEIPV6-MIB", "mip6HCInPkts"), ("MOBILEIPV6-MIB", "mip6OutOctets"), ("MOBILEIPV6-MIB", "mip6HCOutOctets"), ("MOBILEIPV6-MIB", "mip6OutPkts"), ("MOBILEIPV6-MIB", "mip6HCOutPkts"), ("MOBILEIPV6-MIB", "mip6CounterDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6TotalTrafficGroup = mip6TotalTrafficGroup.setStatus('current')
mip6NodeTrafficGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 133, 2, 1, 5)).setObjects(("MOBILEIPV6-MIB", "mip6NodeInOctets"), ("MOBILEIPV6-MIB", "mip6HCNodeInOctets"), ("MOBILEIPV6-MIB", "mip6NodeInPkts"), ("MOBILEIPV6-MIB", "mip6HCNodeInPkts"), ("MOBILEIPV6-MIB", "mip6NodeOutOctets"), ("MOBILEIPV6-MIB", "mip6HCNodeOutOctets"), ("MOBILEIPV6-MIB", "mip6NodeOutPkts"), ("MOBILEIPV6-MIB", "mip6HCNodeOutPkts"), ("MOBILEIPV6-MIB", "mip6NodeCtrDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6NodeTrafficGroup = mip6NodeTrafficGroup.setStatus('current')
mip6MnSystemGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 133, 2, 1, 6)).setObjects(("MOBILEIPV6-MIB", "mip6MnHomeAddressState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6MnSystemGroup = mip6MnSystemGroup.setStatus('current')
mip6MnConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 133, 2, 1, 7)).setObjects(("MOBILEIPV6-MIB", "mip6MnDiscoveryRequests"), ("MOBILEIPV6-MIB", "mip6MnDiscoveryReplies"), ("MOBILEIPV6-MIB", "mip6MnDiscoveryTimeouts"), ("MOBILEIPV6-MIB", "mip6MnPrefixSolicitationsSent"), ("MOBILEIPV6-MIB", "mip6MnPrefixAdvsRecd"), ("MOBILEIPV6-MIB", "mip6MnPrefixAdvsIgnored"), ("MOBILEIPV6-MIB", "mip6MnMovedToFN"), ("MOBILEIPV6-MIB", "mip6MnMovedToHN"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6MnConfGroup = mip6MnConfGroup.setStatus('current')
mip6MnRegistrationGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 133, 2, 1, 8)).setObjects(("MOBILEIPV6-MIB", "mip6MnBLCOAType"), ("MOBILEIPV6-MIB", "mip6MnBLCOA"), ("MOBILEIPV6-MIB", "mip6MnBLLifeTimeRequested"), ("MOBILEIPV6-MIB", "mip6MnBLLifeTimeGranted"), ("MOBILEIPV6-MIB", "mip6MnBLMaxSeq"), ("MOBILEIPV6-MIB", "mip6MnBLTimeSent"), ("MOBILEIPV6-MIB", "mip6MnBLAccepted"), ("MOBILEIPV6-MIB", "mip6MnBLAcceptedTime"), ("MOBILEIPV6-MIB", "mip6MnBLRetransmissions"), ("MOBILEIPV6-MIB", "mip6MnBLDontSendBUFlag"), ("MOBILEIPV6-MIB", "mip6MnMobilityMessagesSent"), ("MOBILEIPV6-MIB", "mip6MnMobilityMessagesRecd"), ("MOBILEIPV6-MIB", "mip6MnBUsToHA"), ("MOBILEIPV6-MIB", "mip6MnBUAcksFromHA"), ("MOBILEIPV6-MIB", "mip6MnBUsToCN"), ("MOBILEIPV6-MIB", "mip6MnBUAcksFromCN"), ("MOBILEIPV6-MIB", "mip6MnBindingErrorsFromCN"), ("MOBILEIPV6-MIB", "mip6MnICMPErrorsRecd"), ("MOBILEIPV6-MIB", "mip6MnBRRequestsRecd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6MnRegistrationGroup = mip6MnRegistrationGroup.setStatus('current')
mip6CnStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 133, 2, 1, 9)).setObjects(("MOBILEIPV6-MIB", "mip6CnBURequestsAccepted"), ("MOBILEIPV6-MIB", "mip6CnBURequestsRejected"), ("MOBILEIPV6-MIB", "mip6CnBCEntryCreationTime"), ("MOBILEIPV6-MIB", "mip6CnBUAcceptedTime"), ("MOBILEIPV6-MIB", "mip6CnBURejectionTime"), ("MOBILEIPV6-MIB", "mip6CnBURejectionCode"), ("MOBILEIPV6-MIB", "mip6CnCtrDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6CnStatsGroup = mip6CnStatsGroup.setStatus('current')
mip6HaSystemGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 133, 2, 1, 10)).setObjects(("MOBILEIPV6-MIB", "mip6HaAdvsRecd"), ("MOBILEIPV6-MIB", "mip6HaAdvsSent"), ("MOBILEIPV6-MIB", "mip6HaAdvPreference"), ("MOBILEIPV6-MIB", "mip6HaAdvLifetime"), ("MOBILEIPV6-MIB", "mip6HaPrefixAdv"), ("MOBILEIPV6-MIB", "mip6HaPrefixSolicitation"), ("MOBILEIPV6-MIB", "mip6HaMCastCtlMsgSupport"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6HaSystemGroup = mip6HaSystemGroup.setStatus('current')
mip6HaListGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 133, 2, 1, 11)).setObjects(("MOBILEIPV6-MIB", "mip6HaPreference"), ("MOBILEIPV6-MIB", "mip6HaRecvLifeTime"), ("MOBILEIPV6-MIB", "mip6HaRecvTimeStamp"), ("MOBILEIPV6-MIB", "mip6HaGaGlobalAddressType"), ("MOBILEIPV6-MIB", "mip6HaGaGlobalAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6HaListGroup = mip6HaListGroup.setStatus('current')
mip6HaStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 133, 2, 1, 12)).setObjects(("MOBILEIPV6-MIB", "mip6HaBURequestsAccepted"), ("MOBILEIPV6-MIB", "mip6HaBURequestsDenied"), ("MOBILEIPV6-MIB", "mip6HaBCEntryCreationTime"), ("MOBILEIPV6-MIB", "mip6HaBUAcceptedTime"), ("MOBILEIPV6-MIB", "mip6HaBURejectionTime"), ("MOBILEIPV6-MIB", "mip6HaRecentBURejectionCode"), ("MOBILEIPV6-MIB", "mip6HaCtrDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6HaStatsGroup = mip6HaStatsGroup.setStatus('current')
mip6CnGlobalStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 133, 2, 1, 13)).setObjects(("MOBILEIPV6-MIB", "mip6CnHomeTestInitsRecd"), ("MOBILEIPV6-MIB", "mip6CnHomeTestsSent"), ("MOBILEIPV6-MIB", "mip6CnCareOfTestInitsRecd"), ("MOBILEIPV6-MIB", "mip6CnCareOfTestsSent"), ("MOBILEIPV6-MIB", "mip6CnBUsRecd"), ("MOBILEIPV6-MIB", "mip6CnBUAcksSent"), ("MOBILEIPV6-MIB", "mip6CnBRsSent"), ("MOBILEIPV6-MIB", "mip6CnBindingErrors"), ("MOBILEIPV6-MIB", "mip6CnBUsAccepted"), ("MOBILEIPV6-MIB", "mip6CnBUsRejected"), ("MOBILEIPV6-MIB", "mip6CnReasonUnspecified"), ("MOBILEIPV6-MIB", "mip6CnInsufficientResource"), ("MOBILEIPV6-MIB", "mip6CnHomeRegnNotSupported"), ("MOBILEIPV6-MIB", "mip6CnSeqNumberOutOfWindow"), ("MOBILEIPV6-MIB", "mip6CnExpiredHomeNonceIndex"), ("MOBILEIPV6-MIB", "mip6CnExpiredCareOfNonceIndex"), ("MOBILEIPV6-MIB", "mip6CnExpiredNonce"), ("MOBILEIPV6-MIB", "mip6CnRegTypeChangeDisallowed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6CnGlobalStatsGroup = mip6CnGlobalStatsGroup.setStatus('current')
mip6HaGlobalStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 133, 2, 1, 14)).setObjects(("MOBILEIPV6-MIB", "mip6HaHomeTestInitsRecd"), ("MOBILEIPV6-MIB", "mip6HaHomeTestsSent"), ("MOBILEIPV6-MIB", "mip6HaBUsRecd"), ("MOBILEIPV6-MIB", "mip6HaBUAcksSent"), ("MOBILEIPV6-MIB", "mip6HaBRAdviceSent"), ("MOBILEIPV6-MIB", "mip6HaBUsAccepted"), ("MOBILEIPV6-MIB", "mip6HaPrefDiscoverReqd"), ("MOBILEIPV6-MIB", "mip6HaReasonUnspecified"), ("MOBILEIPV6-MIB", "mip6HaAdmProhibited"), ("MOBILEIPV6-MIB", "mip6HaInsufficientResource"), ("MOBILEIPV6-MIB", "mip6HaHomeRegnNotSupported"), ("MOBILEIPV6-MIB", "mip6HaNotHomeSubnet"), ("MOBILEIPV6-MIB", "mip6HaNotHomeAgentForThisMN"), ("MOBILEIPV6-MIB", "mip6HaDupAddrDetectionFailed"), ("MOBILEIPV6-MIB", "mip6HaSeqNumberOutOfWindow"), ("MOBILEIPV6-MIB", "mip6HaExpiredHomeNonceIndex"), ("MOBILEIPV6-MIB", "mip6HaRegTypeChangeDisallowed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6HaGlobalStatsGroup = mip6HaGlobalStatsGroup.setStatus('current')
mip6BindingCacheCtlGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 133, 2, 1, 15)).setObjects(("MOBILEIPV6-MIB", "mip6BindingAdminStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6BindingCacheCtlGroup = mip6BindingCacheCtlGroup.setStatus('current')
mip6NotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 133, 2, 1, 16)).setObjects(("MOBILEIPV6-MIB", "mip6MnRegistered"), ("MOBILEIPV6-MIB", "mip6MnDeRegistered"), ("MOBILEIPV6-MIB", "mip6MnCOAChanged"), ("MOBILEIPV6-MIB", "mip6MnBindingExpiredAtHA"), ("MOBILEIPV6-MIB", "mip6MnBindingExpiredAtCN"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6NotificationGroup = mip6NotificationGroup.setStatus('current')
mip6CoreCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 133, 2, 2, 1)).setObjects(("MOBILEIPV6-MIB", "mip6SystemGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6CoreCompliance = mip6CoreCompliance.setStatus('current')
mip6Compliance2 = ModuleCompliance((1, 3, 6, 1, 2, 1, 133, 2, 2, 2)).setObjects(("MOBILEIPV6-MIB", "mip6SystemGroup"), ("MOBILEIPV6-MIB", "mip6BindingCacheGroup"), ("MOBILEIPV6-MIB", "mip6TotalTrafficGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6Compliance2 = mip6Compliance2.setStatus('current')
mip6Compliance3 = ModuleCompliance((1, 3, 6, 1, 2, 1, 133, 2, 2, 3)).setObjects(("MOBILEIPV6-MIB", "mip6SystemGroup"), ("MOBILEIPV6-MIB", "mip6BindingCacheGroup"), ("MOBILEIPV6-MIB", "mip6BindingHstGroup"), ("MOBILEIPV6-MIB", "mip6TotalTrafficGroup"), ("MOBILEIPV6-MIB", "mip6NodeTrafficGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6Compliance3 = mip6Compliance3.setStatus('current')
mip6CoreReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 133, 2, 2, 4)).setObjects(("MOBILEIPV6-MIB", "mip6SystemGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6CoreReadOnlyCompliance = mip6CoreReadOnlyCompliance.setStatus('current')
mip6ReadOnlyCompliance2 = ModuleCompliance((1, 3, 6, 1, 2, 1, 133, 2, 2, 5)).setObjects(("MOBILEIPV6-MIB", "mip6SystemGroup"), ("MOBILEIPV6-MIB", "mip6BindingCacheGroup"), ("MOBILEIPV6-MIB", "mip6TotalTrafficGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6ReadOnlyCompliance2 = mip6ReadOnlyCompliance2.setStatus('current')
mip6ReadOnlyCompliance3 = ModuleCompliance((1, 3, 6, 1, 2, 1, 133, 2, 2, 6)).setObjects(("MOBILEIPV6-MIB", "mip6SystemGroup"), ("MOBILEIPV6-MIB", "mip6BindingCacheGroup"), ("MOBILEIPV6-MIB", "mip6BindingHstGroup"), ("MOBILEIPV6-MIB", "mip6TotalTrafficGroup"), ("MOBILEIPV6-MIB", "mip6NodeTrafficGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6ReadOnlyCompliance3 = mip6ReadOnlyCompliance3.setStatus('current')
mip6MnCoreCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 133, 2, 2, 7)).setObjects(("MOBILEIPV6-MIB", "mip6MnSystemGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6MnCoreCompliance = mip6MnCoreCompliance.setStatus('current')
mip6MnCompliance2 = ModuleCompliance((1, 3, 6, 1, 2, 1, 133, 2, 2, 8)).setObjects(("MOBILEIPV6-MIB", "mip6MnSystemGroup"), ("MOBILEIPV6-MIB", "mip6MnConfGroup"), ("MOBILEIPV6-MIB", "mip6MnRegistrationGroup"), ("MOBILEIPV6-MIB", "mip6TotalTrafficGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6MnCompliance2 = mip6MnCompliance2.setStatus('current')
mip6CnCoreCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 133, 2, 2, 9)).setObjects(("MOBILEIPV6-MIB", "mip6CnGlobalStatsGroup"), ("MOBILEIPV6-MIB", "mip6TotalTrafficGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6CnCoreCompliance = mip6CnCoreCompliance.setStatus('current')
mip6CnCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 133, 2, 2, 10)).setObjects(("MOBILEIPV6-MIB", "mip6CnGlobalStatsGroup"), ("MOBILEIPV6-MIB", "mip6CnStatsGroup"), ("MOBILEIPV6-MIB", "mip6TotalTrafficGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6CnCompliance = mip6CnCompliance.setStatus('current')
mip6HaCoreCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 133, 2, 2, 11)).setObjects(("MOBILEIPV6-MIB", "mip6HaSystemGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6HaCoreCompliance = mip6HaCoreCompliance.setStatus('current')
mip6HaCompliance2 = ModuleCompliance((1, 3, 6, 1, 2, 1, 133, 2, 2, 12)).setObjects(("MOBILEIPV6-MIB", "mip6HaSystemGroup"), ("MOBILEIPV6-MIB", "mip6HaListGroup"), ("MOBILEIPV6-MIB", "mip6HaStatsGroup"), ("MOBILEIPV6-MIB", "mip6HaGlobalStatsGroup"), ("MOBILEIPV6-MIB", "mip6TotalTrafficGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6HaCompliance2 = mip6HaCompliance2.setStatus('current')
mip6HaCompliance3 = ModuleCompliance((1, 3, 6, 1, 2, 1, 133, 2, 2, 13)).setObjects(("MOBILEIPV6-MIB", "mip6HaSystemGroup"), ("MOBILEIPV6-MIB", "mip6HaListGroup"), ("MOBILEIPV6-MIB", "mip6HaStatsGroup"), ("MOBILEIPV6-MIB", "mip6HaGlobalStatsGroup"), ("MOBILEIPV6-MIB", "mip6BindingCacheCtlGroup"), ("MOBILEIPV6-MIB", "mip6TotalTrafficGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6HaCompliance3 = mip6HaCompliance3.setStatus('current')
mip6HaCoreReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 133, 2, 2, 14)).setObjects(("MOBILEIPV6-MIB", "mip6HaSystemGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6HaCoreReadOnlyCompliance = mip6HaCoreReadOnlyCompliance.setStatus('current')
mip6HaReadOnlyCompliance2 = ModuleCompliance((1, 3, 6, 1, 2, 1, 133, 2, 2, 15)).setObjects(("MOBILEIPV6-MIB", "mip6HaSystemGroup"), ("MOBILEIPV6-MIB", "mip6HaListGroup"), ("MOBILEIPV6-MIB", "mip6HaStatsGroup"), ("MOBILEIPV6-MIB", "mip6HaGlobalStatsGroup"), ("MOBILEIPV6-MIB", "mip6TotalTrafficGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6HaReadOnlyCompliance2 = mip6HaReadOnlyCompliance2.setStatus('current')
mip6HaReadOnlyCompliance3 = ModuleCompliance((1, 3, 6, 1, 2, 1, 133, 2, 2, 16)).setObjects(("MOBILEIPV6-MIB", "mip6HaSystemGroup"), ("MOBILEIPV6-MIB", "mip6HaListGroup"), ("MOBILEIPV6-MIB", "mip6HaStatsGroup"), ("MOBILEIPV6-MIB", "mip6HaGlobalStatsGroup"), ("MOBILEIPV6-MIB", "mip6BindingCacheCtlGroup"), ("MOBILEIPV6-MIB", "mip6TotalTrafficGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6HaReadOnlyCompliance3 = mip6HaReadOnlyCompliance3.setStatus('current')
mip6NotificationCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 133, 2, 2, 17)).setObjects(("MOBILEIPV6-MIB", "mip6NotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mip6NotificationCompliance = mip6NotificationCompliance.setStatus('current')
mibBuilder.exportSymbols("MOBILEIPV6-MIB", mip6HaNotHomeSubnet=mip6HaNotHomeSubnet, mip6BindingHstCOAType=mip6BindingHstCOAType, mip6CnCounterEntry=mip6CnCounterEntry, mip6CnBURejectionTime=mip6CnBURejectionTime, mip6HaGlobalStats=mip6HaGlobalStats, mip6HaStatsGroup=mip6HaStatsGroup, mip6BindingAdminStatus=mip6BindingAdminStatus, mip6BindingHstIndex=mip6BindingHstIndex, mip6MnBindingErrorsFromCN=mip6MnBindingErrorsFromCN, mip6CnSeqNumberOutOfWindow=mip6CnSeqNumberOutOfWindow, mip6HaLinkLocalAddress=mip6HaLinkLocalAddress, mip6BindingHstUsageCount=mip6BindingHstUsageCount, mip6CounterDiscontinuityTime=mip6CounterDiscontinuityTime, mip6CnBUsRejected=mip6CnBUsRejected, mip6HaListGroup=mip6HaListGroup, mip6BindingHstTimeRegistered=mip6BindingHstTimeRegistered, mip6HaLinkLocalAddressType=mip6HaLinkLocalAddressType, mip6HaSystemGroup=mip6HaSystemGroup, mip6CnBCEntryCreationTime=mip6CnBCEntryCreationTime, mip6HaGlobalStatsGroup=mip6HaGlobalStatsGroup, mip6MnBLAcceptedTime=mip6MnBLAcceptedTime, mip6CnHomeRegnNotSupported=mip6CnHomeRegnNotSupported, mip6CnCtrDiscontinuityTime=mip6CnCtrDiscontinuityTime, mip6HaPreference=mip6HaPreference, mip6HaDupAddrDetectionFailed=mip6HaDupAddrDetectionFailed, mip6BindingHstHomeAddressType=mip6BindingHstHomeAddressType, mip6BindingCacheTable=mip6BindingCacheTable, mip6CnBUAcksSent=mip6CnBUAcksSent, mip6BindingHomeRegn=mip6BindingHomeRegn, mip6NodeTrafficTable=mip6NodeTrafficTable, mip6HaPrefixAdv=mip6HaPrefixAdv, mip6CnCompliance=mip6CnCompliance, mip6HCInPkts=mip6HCInPkts, mip6HaAdvPreference=mip6HaAdvPreference, mip6InOctets=mip6InOctets, PYSNMP_MODULE_ID=mip6MIB, mip6HaBUAcceptedTime=mip6HaBUAcceptedTime, mip6HaRecvTimeStamp=mip6HaRecvTimeStamp, mip6MnBLNodeAddressType=mip6MnBLNodeAddressType, mip6Capabilities=mip6Capabilities, mip6OutPkts=mip6OutPkts, mip6MnICMPErrorsRecd=mip6MnICMPErrorsRecd, mip6CnGlobalStats=mip6CnGlobalStats, mip6CoreReadOnlyCompliance=mip6CoreReadOnlyCompliance, mip6Compliance3=mip6Compliance3, mip6HaListTable=mip6HaListTable, mip6MIB=mip6MIB, mip6Objects=mip6Objects, mip6MnConf=mip6MnConf, mip6MnBLLifeTimeGranted=mip6MnBLLifeTimeGranted, mip6Stats=mip6Stats, mip6HCNodeOutOctets=mip6HCNodeOutOctets, mip6HaHomeTestsSent=mip6HaHomeTestsSent, mip6HCNodeInOctets=mip6HCNodeInOctets, mip6MnBindingExpiredAtHA=mip6MnBindingExpiredAtHA, mip6MnRegistrationGroup=mip6MnRegistrationGroup, mip6MnBindingExpiredAtCN=mip6MnBindingExpiredAtCN, mip6HaReadOnlyCompliance3=mip6HaReadOnlyCompliance3, mip6MnHomeAddressEntry=mip6MnHomeAddressEntry, mip6BindingCacheGroup=mip6BindingCacheGroup, mip6Notifications=mip6Notifications, mip6CoreCompliance=mip6CoreCompliance, mip6ReadOnlyCompliance3=mip6ReadOnlyCompliance3, mip6MnHomeAddressTable=mip6MnHomeAddressTable, mip6HaCtrDiscontinuityTime=mip6HaCtrDiscontinuityTime, mip6MnBLMaxSeq=mip6MnBLMaxSeq, mip6HaNotHomeAgentForThisMN=mip6HaNotHomeAgentForThisMN, mip6CnBUsRecd=mip6CnBUsRecd, mip6OutOctets=mip6OutOctets, mip6NotificationGroup=mip6NotificationGroup, mip6NotificationCompliance=mip6NotificationCompliance, mip6MnDiscoveryRequests=mip6MnDiscoveryRequests, mip6BindingHistoryTable=mip6BindingHistoryTable, mip6MnPrefixSolicitationsSent=mip6MnPrefixSolicitationsSent, mip6CnCounterTable=mip6CnCounterTable, mip6CnBUsAccepted=mip6CnBUsAccepted, mip6HaMCastCtlMsgSupport=mip6HaMCastCtlMsgSupport, mip6BindingHstHomeAddress=mip6BindingHstHomeAddress, mip6Groups=mip6Groups, mip6BindingHstHomeRegn=mip6BindingHstHomeRegn, mip6TotalTraffic=mip6TotalTraffic, mip6CnGlobalStatsGroup=mip6CnGlobalStatsGroup, mip6HaReadOnlyCompliance2=mip6HaReadOnlyCompliance2, mip6NodeInPkts=mip6NodeInPkts, mip6MnBUsToHA=mip6MnBUsToHA, mip6HaGlAddrTable=mip6HaGlAddrTable, mip6BindingUsageCount=mip6BindingUsageCount, mip6HaCompliance2=mip6HaCompliance2, mip6HaAdmProhibited=mip6HaAdmProhibited, mip6MnBLNodeAddress=mip6MnBLNodeAddress, mip6HaBURejectionTime=mip6HaBURejectionTime, mip6CnStats=mip6CnStats, mip6MnMovedToHN=mip6MnMovedToHN, mip6CnCareOfTestsSent=mip6CnCareOfTestsSent, mip6HaAdvsSent=mip6HaAdvsSent, mip6BindingHstGroup=mip6BindingHstGroup, mip6HaBURequestsDenied=mip6HaBURequestsDenied, mip6BindingCacheEntry=mip6BindingCacheEntry, mip6InPkts=mip6InPkts, mip6HaBURequestsAccepted=mip6HaBURequestsAccepted, mip6Conformance=mip6Conformance, mip6HaGaGlobalAddressType=mip6HaGaGlobalAddressType, mip6ReadOnlyCompliance2=mip6ReadOnlyCompliance2, mip6HaConfEntry=mip6HaConfEntry, mip6CnExpiredHomeNonceIndex=mip6CnExpiredHomeNonceIndex, mip6BindingMaxSeq=mip6BindingMaxSeq, mip6HaCoreCompliance=mip6HaCoreCompliance, mip6BindingHomeAddress=mip6BindingHomeAddress, mip6BindingHistoryEntry=mip6BindingHistoryEntry, mip6CnHomeTestInitsRecd=mip6CnHomeTestInitsRecd, mip6CnRegTypeChangeDisallowed=mip6CnRegTypeChangeDisallowed, mip6HaCounterTable=mip6HaCounterTable, mip6HaCoreReadOnlyCompliance=mip6HaCoreReadOnlyCompliance, mip6HaInsufficientResource=mip6HaInsufficientResource, mip6MnBLTimeSent=mip6MnBLTimeSent, mip6BindingCOAType=mip6BindingCOAType, mip6MnSystemGroup=mip6MnSystemGroup, mip6HCNodeInPkts=mip6HCNodeInPkts, mip6System=mip6System, mip6MnHomeAddress=mip6MnHomeAddress, mip6MnDiscoveryReplies=mip6MnDiscoveryReplies, mip6HaGaAddrSeqNo=mip6HaGaAddrSeqNo, mip6NodeOutPkts=mip6NodeOutPkts, mip6HaBUsAccepted=mip6HaBUsAccepted, mip6NodeInOctets=mip6NodeInOctets, mip6MnBLLifeTimeRequested=mip6MnBLLifeTimeRequested, mip6MnBLEntry=mip6MnBLEntry, mip6CnReasonUnspecified=mip6CnReasonUnspecified, mip6HaConfTable=mip6HaConfTable, mip6MnDeRegistered=mip6MnDeRegistered, mip6HaBCEntryCreationTime=mip6HaBCEntryCreationTime, mip6HaReasonUnspecified=mip6HaReasonUnspecified, mip6HaAdvsRecd=mip6HaAdvsRecd, mip6Cn=mip6Cn, mip6MnSystem=mip6MnSystem, mip6MnBLCOA=mip6MnBLCOA, mip6BindingTimeGranted=mip6BindingTimeGranted, mip6MnBLCOAType=mip6MnBLCOAType, mip6MnCoreCompliance=mip6MnCoreCompliance, mip6NodeOutOctets=mip6NodeOutOctets, mip6MnBLRetransmissions=mip6MnBLRetransmissions, mip6Mn=mip6Mn, mip6CnCoreCompliance=mip6CnCoreCompliance, mip6HaExpiredHomeNonceIndex=mip6HaExpiredHomeNonceIndex, mip6NodeTrafficEntry=mip6NodeTrafficEntry, mip6HaHomeTestInitsRecd=mip6HaHomeTestInitsRecd, mip6MnBLDontSendBUFlag=mip6MnBLDontSendBUFlag, mip6BindingTimeRegistered=mip6BindingTimeRegistered, mip6CnSystem=mip6CnSystem, mip6HaBRAdviceSent=mip6HaBRAdviceSent, mip6HCInOctets=mip6HCInOctets, mip6MnRegnCounters=mip6MnRegnCounters, mip6MnRegistered=mip6MnRegistered, mip6BindingCOA=mip6BindingCOA, mip6HaAdvertisement=mip6HaAdvertisement, mip6MnCOAChanged=mip6MnCOAChanged, mip6HaPrefixSolicitation=mip6HaPrefixSolicitation, mip6Core=mip6Core, mip6Status=mip6Status, mip6BindingUsageTS=mip6BindingUsageTS, mip6CnExpiredNonce=mip6CnExpiredNonce, mip6BindingHomeAddressType=mip6BindingHomeAddressType, mip6NodeCtrDiscontinuityTime=mip6NodeCtrDiscontinuityTime, mip6HaRegTypeChangeDisallowed=mip6HaRegTypeChangeDisallowed, mip6NodeTrafficGroup=mip6NodeTrafficGroup, mip6CnBURequestsRejected=mip6CnBURequestsRejected, mip6HaAdvLifetime=mip6HaAdvLifetime, mip6HaListEntry=mip6HaListEntry, mip6HaBUAcksSent=mip6HaBUAcksSent, mip6BindingHstTimeExpired=mip6BindingHstTimeExpired, mip6CnBRsSent=mip6CnBRsSent, mip6MnBLAccepted=mip6MnBLAccepted, mip6MnCompliance2=mip6MnCompliance2, mip6HaBUsRecd=mip6HaBUsRecd, mip6HaPrefDiscoverReqd=mip6HaPrefDiscoverReqd, mip6HaCounterEntry=mip6HaCounterEntry, mip6HaRecentBURejectionCode=mip6HaRecentBURejectionCode, mip6CnCareOfTestInitsRecd=mip6CnCareOfTestInitsRecd, mip6CnExpiredCareOfNonceIndex=mip6CnExpiredCareOfNonceIndex, mip6SystemGroup=mip6SystemGroup, mip6CnBUAcceptedTime=mip6CnBUAcceptedTime, mip6HCOutOctets=mip6HCOutOctets, mip6Ha=mip6Ha, mip6CnBURejectionCode=mip6CnBURejectionCode, mip6MnBUAcksFromHA=mip6MnBUAcksFromHA, mip6CnInsufficientResource=mip6CnInsufficientResource, mip6Compliances=mip6Compliances, mip6HaCompliance3=mip6HaCompliance3, mip6HCOutPkts=mip6HCOutPkts, mip6HaStats=mip6HaStats, mip6CnHomeTestsSent=mip6CnHomeTestsSent, mip6MnPrefixAdvsIgnored=mip6MnPrefixAdvsIgnored, mip6HaSeqNumberOutOfWindow=mip6HaSeqNumberOutOfWindow, mip6BindingCacheCtlGroup=mip6BindingCacheCtlGroup, mip6MnBLTable=mip6MnBLTable, mip6CnBURequestsAccepted=mip6CnBURequestsAccepted, mip6MnHomeAddressState=mip6MnHomeAddressState, mip6MnBRRequestsRecd=mip6MnBRRequestsRecd, mip6HaRecvLifeTime=mip6HaRecvLifeTime, mip6MnPrefixAdvsRecd=mip6MnPrefixAdvsRecd, mip6BindingHstCOA=mip6BindingHstCOA, mip6MnConfGroup=mip6MnConfGroup, mip6MnMobilityMessagesSent=mip6MnMobilityMessagesSent, mip6BindingTimeRemaining=mip6BindingTimeRemaining, mip6Compliance2=mip6Compliance2, mip6MnDiscoveryTimeouts=mip6MnDiscoveryTimeouts, mip6HaGlAddrEntry=mip6HaGlAddrEntry, mip6HaHomeRegnNotSupported=mip6HaHomeRegnNotSupported, mip6HaGaGlobalAddress=mip6HaGaGlobalAddress, mip6MnRegistration=mip6MnRegistration, Mip6BURequestRejectionCode=Mip6BURequestRejectionCode, mip6MnHomeAddressType=mip6MnHomeAddressType, mip6Bindings=mip6Bindings, mip6BindingHstUsageTS=mip6BindingHstUsageTS, mip6CnStatsGroup=mip6CnStatsGroup, mip6CnBindingErrors=mip6CnBindingErrors, mip6MnMobilityMessagesRecd=mip6MnMobilityMessagesRecd, mip6MnMovedToFN=mip6MnMovedToFN, mip6MnBUAcksFromCN=mip6MnBUAcksFromCN, mip6MnBUsToCN=mip6MnBUsToCN, mip6TotalTrafficGroup=mip6TotalTrafficGroup, mip6HCNodeOutPkts=mip6HCNodeOutPkts)
