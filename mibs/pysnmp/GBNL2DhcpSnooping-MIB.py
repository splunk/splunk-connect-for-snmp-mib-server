#
# PySNMP MIB module GBNL2DhcpSnooping-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GBNL2DhcpSnooping-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:04:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
gbnL2, = mibBuilder.importSymbols("GREENTECH-MASTER-MIB", "gbnL2")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Integer32, IpAddress, Counter32, iso, NotificationType, Bits, Counter64, ObjectIdentity, ModuleIdentity, Unsigned32, MibIdentifier, Gauge32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "IpAddress", "Counter32", "iso", "NotificationType", "Bits", "Counter64", "ObjectIdentity", "ModuleIdentity", "Unsigned32", "MibIdentifier", "Gauge32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, RowStatus, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TruthValue")
gbnL3DhcpSnooping = ModuleIdentity((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 5))
gbnL3DhcpSnooping.setRevisions(('1901-05-03 00:00',))
if mibBuilder.loadTexts: gbnL3DhcpSnooping.setLastUpdated('0105030000Z')
if mibBuilder.loadTexts: gbnL3DhcpSnooping.setOrganization('Greentech')
dhcpsnoopingOnOff = MibScalar((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 5, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dhcpsnoopingOnOff.setStatus('current')
dhcpsnoopingPortTable = MibTable((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 5, 2), )
if mibBuilder.loadTexts: dhcpsnoopingPortTable.setStatus('current')
dhcpsnoopingPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 5, 2, 1), ).setIndexNames((0, "GBNL2DhcpSnooping-MIB", "portIndex"))
if mibBuilder.loadTexts: dhcpsnoopingPortEntry.setStatus('current')
portIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portIndex.setStatus('current')
portTrustMode = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trust", 1), ("untrust", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portTrustMode.setStatus('current')
portMaxNum = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 5, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portMaxNum.setStatus('current')
portIpSourceGuardMode = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portIpSourceGuardMode.setStatus('current')
dhcpsnoopingVlanTable = MibTable((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 5, 3), )
if mibBuilder.loadTexts: dhcpsnoopingVlanTable.setStatus('current')
dhcpsnoopingVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 5, 3, 1), ).setIndexNames((0, "GBNL2DhcpSnooping-MIB", "vlanIndex"))
if mibBuilder.loadTexts: dhcpsnoopingVlanEntry.setStatus('current')
vlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanIndex.setStatus('current')
vlanMaxNum = MibTableColumn((1, 3, 6, 1, 4, 1, 13464, 1, 2, 4, 5, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanMaxNum.setStatus('current')
mibBuilder.exportSymbols("GBNL2DhcpSnooping-MIB", PYSNMP_MODULE_ID=gbnL3DhcpSnooping, vlanMaxNum=vlanMaxNum, dhcpsnoopingOnOff=dhcpsnoopingOnOff, portIndex=portIndex, dhcpsnoopingVlanEntry=dhcpsnoopingVlanEntry, dhcpsnoopingPortTable=dhcpsnoopingPortTable, portTrustMode=portTrustMode, portMaxNum=portMaxNum, portIpSourceGuardMode=portIpSourceGuardMode, dhcpsnoopingVlanTable=dhcpsnoopingVlanTable, vlanIndex=vlanIndex, gbnL3DhcpSnooping=gbnL3DhcpSnooping, dhcpsnoopingPortEntry=dhcpsnoopingPortEntry)
