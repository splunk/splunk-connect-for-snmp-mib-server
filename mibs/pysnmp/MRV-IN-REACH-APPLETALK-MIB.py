#
# PySNMP MIB module MRV-IN-REACH-APPLETALK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/MRV-IN-REACH-APPLETALK-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:05:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
mrvInReachProductDivision, = mibBuilder.importSymbols("MRV-IN-REACH-PRODUCT-DIVISION-MIB", "mrvInReachProductDivision")
DdpAddress, = mibBuilder.importSymbols("RFC1243-MIB", "DdpAddress")
charPortIndex, = mibBuilder.importSymbols("RFC1316-MIB", "charPortIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, NotificationType, Unsigned32, Bits, iso, ModuleIdentity, ObjectIdentity, MibIdentifier, Integer32, Gauge32, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "NotificationType", "Unsigned32", "Bits", "iso", "ModuleIdentity", "ObjectIdentity", "MibIdentifier", "Integer32", "Gauge32", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
xApple = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 21))
xAppleSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 21, 1))
xApplePort = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 21, 2))
xApplePolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 21, 3))
xAppleNbp = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 21, 4))
xAppleTraffic = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 21, 5))
xAppleRemoteAccess = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 21, 6))
appleState = MibScalar((1, 3, 6, 1, 4, 1, 33, 21, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appleState.setStatus('mandatory')
appleStatus = MibScalar((1, 3, 6, 1, 4, 1, 33, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("disabled", 1), ("active", 2), ("noInterface", 3), ("badConfig", 4), ("noInterfaceActive", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appleStatus.setStatus('mandatory')
appleStatusIf = MibScalar((1, 3, 6, 1, 4, 1, 33, 21, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appleStatusIf.setStatus('mandatory')
applePortTable = MibTable((1, 3, 6, 1, 4, 1, 33, 21, 2, 1), )
if mibBuilder.loadTexts: applePortTable.setStatus('mandatory')
applePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1), ).setIndexNames((0, "MRV-IN-REACH-APPLETALK-MIB", "applePortIndex"))
if mibBuilder.loadTexts: applePortEntry.setStatus('mandatory')
applePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortIndex.setStatus('mandatory')
applePortProtocolPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 5))).clone(namedValues=NamedValues(("low", 1), ("medium", 3), ("high", 5))).clone('medium')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: applePortProtocolPriority.setStatus('mandatory')
applePortArpInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(33, 65535)).clone(33)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: applePortArpInterval.setStatus('mandatory')
applePortArpRetransmitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: applePortArpRetransmitCount.setStatus('mandatory')
applePortChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: applePortChecksum.setStatus('mandatory')
applePortPacketsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortPacketsIn.setStatus('mandatory')
applePortPacketsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortPacketsOut.setStatus('mandatory')
applePortForwardsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortForwardsIn.setStatus('mandatory')
applePortForwardsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortForwardsOut.setStatus('mandatory')
applePortNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 10), DdpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortNetAddress.setStatus('mandatory')
applePortNetStart = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortNetStart.setStatus('mandatory')
applePortNetEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortNetEnd.setStatus('mandatory')
applePortErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortErrors.setStatus('mandatory')
applePortLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("broadcast", 1), ("checksum", 2), ("hopCount", 3), ("noProtocol", 4), ("noRoute", 5), ("shortDDP", 6), ("tooLong", 7), ("tooShort", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortLastError.setStatus('mandatory')
applePortLastErrorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 15), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortLastErrorTime.setStatus('mandatory')
applePortLastErrorData = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(22, 22)).setFixedLength(22)).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortLastErrorData.setStatus('mandatory')
applePortBringBackTime = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: applePortBringBackTime.setStatus('mandatory')
applePortUseNeighborNotify = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: applePortUseNeighborNotify.setStatus('mandatory')
applePortRouterType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("full", 1), ("half", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: applePortRouterType.setStatus('mandatory')
applePortZoneTable = MibTable((1, 3, 6, 1, 4, 1, 33, 21, 2, 2), )
if mibBuilder.loadTexts: applePortZoneTable.setStatus('mandatory')
applePortZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 21, 2, 2, 1), ).setIndexNames((0, "MRV-IN-REACH-APPLETALK-MIB", "applePortZoneIndex"), (0, "MRV-IN-REACH-APPLETALK-MIB", "applePortZoneName"))
if mibBuilder.loadTexts: applePortZoneEntry.setStatus('mandatory')
applePortZoneIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortZoneIndex.setStatus('mandatory')
applePortZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortZoneName.setStatus('mandatory')
applePortZoneStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2))).clone('valid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: applePortZoneStatus.setStatus('mandatory')
applePortExportTable = MibTable((1, 3, 6, 1, 4, 1, 33, 21, 3, 1), )
if mibBuilder.loadTexts: applePortExportTable.setStatus('mandatory')
applePortExportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 21, 3, 1, 1), ).setIndexNames((0, "MRV-IN-REACH-APPLETALK-MIB", "applePortExportIndex"), (0, "MRV-IN-REACH-APPLETALK-MIB", "applePortExportZone"), (0, "MRV-IN-REACH-APPLETALK-MIB", "applePortExportName"), (0, "MRV-IN-REACH-APPLETALK-MIB", "applePortExportType"))
if mibBuilder.loadTexts: applePortExportEntry.setStatus('mandatory')
applePortExportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortExportIndex.setStatus('mandatory')
applePortExportZone = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 3, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortExportZone.setStatus('mandatory')
applePortExportName = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortExportName.setStatus('mandatory')
applePortExportType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 3, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortExportType.setStatus('mandatory')
applePortExportAction = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hide", 1), ("advertise", 2))).clone('advertise')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: applePortExportAction.setStatus('mandatory')
applePortExportStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2))).clone('valid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: applePortExportStatus.setStatus('mandatory')
applePortImportTable = MibTable((1, 3, 6, 1, 4, 1, 33, 21, 3, 2), )
if mibBuilder.loadTexts: applePortImportTable.setStatus('mandatory')
applePortImportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 21, 3, 2, 1), ).setIndexNames((0, "MRV-IN-REACH-APPLETALK-MIB", "applePortImportIndex"), (0, "MRV-IN-REACH-APPLETALK-MIB", "applePortImportZone"), (0, "MRV-IN-REACH-APPLETALK-MIB", "applePortImportName"), (0, "MRV-IN-REACH-APPLETALK-MIB", "applePortImportType"))
if mibBuilder.loadTexts: applePortImportEntry.setStatus('mandatory')
applePortImportIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortImportIndex.setStatus('mandatory')
applePortImportZone = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 3, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortImportZone.setStatus('mandatory')
applePortImportName = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 3, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortImportName.setStatus('mandatory')
applePortImportType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 3, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: applePortImportType.setStatus('mandatory')
applePortImportAction = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("discard", 1), ("accept", 2))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: applePortImportAction.setStatus('mandatory')
applePortImportStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2))).clone('valid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: applePortImportStatus.setStatus('mandatory')
appleNbpTable = MibTable((1, 3, 6, 1, 4, 1, 33, 21, 4, 1), )
if mibBuilder.loadTexts: appleNbpTable.setStatus('mandatory')
appleNbpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 21, 4, 1, 1), ).setIndexNames((0, "MRV-IN-REACH-APPLETALK-MIB", "appleNbpZone"), (0, "MRV-IN-REACH-APPLETALK-MIB", "appleNbpName"), (0, "MRV-IN-REACH-APPLETALK-MIB", "appleNbpType"))
if mibBuilder.loadTexts: appleNbpEntry.setStatus('mandatory')
appleNbpZone = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 4, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appleNbpZone.setStatus('mandatory')
appleNbpName = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 4, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appleNbpName.setStatus('mandatory')
appleNbpType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 4, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appleNbpType.setStatus('mandatory')
appleNbpNode = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 4, 1, 1, 4), DdpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appleNbpNode.setStatus('mandatory')
appleNbpSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 4, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appleNbpSocket.setStatus('mandatory')
appleTrafficSort = MibScalar((1, 3, 6, 1, 4, 1, 33, 21, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ready", 1), ("execute", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appleTrafficSort.setStatus('mandatory')
appleTrafficTable = MibTable((1, 3, 6, 1, 4, 1, 33, 21, 5, 2), )
if mibBuilder.loadTexts: appleTrafficTable.setStatus('mandatory')
appleTrafficEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 21, 5, 2, 1), ).setIndexNames((0, "MRV-IN-REACH-APPLETALK-MIB", "appleTrafficIndex"))
if mibBuilder.loadTexts: appleTrafficEntry.setStatus('mandatory')
appleTrafficIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 5, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appleTrafficIndex.setStatus('mandatory')
appleTrafficPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: appleTrafficPercent.setStatus('mandatory')
appleTrafficDst = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 5, 2, 1, 3), DdpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appleTrafficDst.setStatus('mandatory')
appleTrafficSrc = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 5, 2, 1, 4), DdpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appleTrafficSrc.setStatus('mandatory')
appleTrafficIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 5, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appleTrafficIntf.setStatus('mandatory')
appleTrafficMonitoring = MibScalar((1, 3, 6, 1, 4, 1, 33, 21, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: appleTrafficMonitoring.setStatus('mandatory')
arapPassword = MibScalar((1, 3, 6, 1, 4, 1, 33, 21, 6, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: arapPassword.setStatus('mandatory')
arapDefaultZoneName = MibScalar((1, 3, 6, 1, 4, 1, 33, 21, 6, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: arapDefaultZoneName.setStatus('mandatory')
arapPortTable = MibTable((1, 3, 6, 1, 4, 1, 33, 21, 6, 3), )
if mibBuilder.loadTexts: arapPortTable.setStatus('mandatory')
arapPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 21, 6, 3, 1), ).setIndexNames((0, "RFC1316-MIB", "charPortIndex"))
if mibBuilder.loadTexts: arapPortEntry.setStatus('mandatory')
arapPortEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 6, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: arapPortEnabled.setStatus('mandatory')
arapPortZoneAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 6, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("all", 1), ("local", 2), ("none", 3), ("namedzone", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: arapPortZoneAccess.setStatus('mandatory')
arapPortZoneName = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 6, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: arapPortZoneName.setStatus('mandatory')
arapPortMaxConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 6, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: arapPortMaxConnectTime.setStatus('mandatory')
arapPortGuestLoginsOk = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 6, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: arapPortGuestLoginsOk.setStatus('mandatory')
arapPortTimeConnected = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 6, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: arapPortTimeConnected.setStatus('mandatory')
arapPortTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 21, 6, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: arapPortTimeRemaining.setStatus('mandatory')
mibBuilder.exportSymbols("MRV-IN-REACH-APPLETALK-MIB", appleTrafficSort=appleTrafficSort, applePortExportTable=applePortExportTable, appleNbpName=appleNbpName, xApplePolicy=xApplePolicy, arapPortTimeRemaining=arapPortTimeRemaining, applePortForwardsOut=applePortForwardsOut, applePortImportEntry=applePortImportEntry, applePortImportAction=applePortImportAction, applePortArpRetransmitCount=applePortArpRetransmitCount, applePortForwardsIn=applePortForwardsIn, applePortTable=applePortTable, xAppleSystem=xAppleSystem, applePortNetAddress=applePortNetAddress, applePortZoneEntry=applePortZoneEntry, applePortZoneStatus=applePortZoneStatus, applePortExportName=applePortExportName, applePortImportTable=applePortImportTable, appleTrafficTable=appleTrafficTable, arapPassword=arapPassword, applePortArpInterval=applePortArpInterval, applePortNetEnd=applePortNetEnd, arapPortZoneName=arapPortZoneName, appleTrafficMonitoring=appleTrafficMonitoring, appleNbpEntry=appleNbpEntry, applePortExportStatus=applePortExportStatus, appleTrafficSrc=appleTrafficSrc, applePortImportZone=applePortImportZone, applePortImportType=applePortImportType, applePortNetStart=applePortNetStart, arapPortTable=arapPortTable, appleTrafficPercent=appleTrafficPercent, appleNbpTable=appleNbpTable, xApplePort=xApplePort, arapPortMaxConnectTime=arapPortMaxConnectTime, appleTrafficDst=appleTrafficDst, applePortExportEntry=applePortExportEntry, appleNbpNode=appleNbpNode, appleStatusIf=appleStatusIf, applePortImportStatus=applePortImportStatus, appleTrafficEntry=appleTrafficEntry, xApple=xApple, xAppleNbp=xAppleNbp, applePortZoneIndex=applePortZoneIndex, applePortPacketsOut=applePortPacketsOut, appleState=appleState, xAppleRemoteAccess=xAppleRemoteAccess, xAppleTraffic=xAppleTraffic, arapPortZoneAccess=arapPortZoneAccess, applePortExportType=applePortExportType, applePortChecksum=applePortChecksum, applePortErrors=applePortErrors, appleNbpSocket=appleNbpSocket, applePortLastError=applePortLastError, arapDefaultZoneName=arapDefaultZoneName, arapPortTimeConnected=arapPortTimeConnected, applePortZoneName=applePortZoneName, applePortImportIndex=applePortImportIndex, applePortExportZone=applePortExportZone, applePortImportName=applePortImportName, arapPortEntry=arapPortEntry, applePortEntry=applePortEntry, appleStatus=appleStatus, applePortProtocolPriority=applePortProtocolPriority, applePortPacketsIn=applePortPacketsIn, applePortExportIndex=applePortExportIndex, applePortLastErrorTime=applePortLastErrorTime, appleTrafficIntf=appleTrafficIntf, arapPortGuestLoginsOk=arapPortGuestLoginsOk, appleNbpType=appleNbpType, applePortExportAction=applePortExportAction, applePortUseNeighborNotify=applePortUseNeighborNotify, appleTrafficIndex=appleTrafficIndex, applePortRouterType=applePortRouterType, appleNbpZone=appleNbpZone, arapPortEnabled=arapPortEnabled, applePortIndex=applePortIndex, applePortLastErrorData=applePortLastErrorData, applePortBringBackTime=applePortBringBackTime, applePortZoneTable=applePortZoneTable)
