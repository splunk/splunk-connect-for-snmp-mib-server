#
# PySNMP MIB module CYAN-NODE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CYAN-NODE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:18:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
CyanTypeTc, cyanEntityModules = mibBuilder.importSymbols("CYAN-MIB", "CyanTypeTc", "cyanEntityModules")
CyanNationalizationTc, CyanOpStateTc, CyanTimezoneTc, CyanSecServiceStateTc, CyanEnDisabledTc, CyanAdminStateTc, CyanOpStateQualTc = mibBuilder.importSymbols("CYAN-TC-MIB", "CyanNationalizationTc", "CyanOpStateTc", "CyanTimezoneTc", "CyanSecServiceStateTc", "CyanEnDisabledTc", "CyanAdminStateTc", "CyanOpStateQualTc")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter64, MibIdentifier, Integer32, iso, ModuleIdentity, Unsigned32, IpAddress, Counter32, NotificationType, ObjectIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "Integer32", "iso", "ModuleIdentity", "Unsigned32", "IpAddress", "Counter32", "NotificationType", "ObjectIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cyanNodeModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10))
cyanNodeModule.setRevisions(('2014-12-07 05:45',))
if mibBuilder.loadTexts: cyanNodeModule.setLastUpdated('201412070545Z')
if mibBuilder.loadTexts: cyanNodeModule.setOrganization('Cyan, Inc.')
cyanNodeMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1))
cyanNodeAdminState = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 1), CyanAdminStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeAdminState.setStatus('current')
cyanNodeAssetTag = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 124))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeAssetTag.setStatus('current')
cyanNodeBaseMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeBaseMacAddress.setStatus('current')
cyanNodeBay = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeBay.setStatus('current')
cyanNodeCity = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeCity.setStatus('current')
cyanNodeCountry = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeCountry.setStatus('current')
cyanNodeCurrentTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 7), CyanTimezoneTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeCurrentTimeZone.setStatus('current')
cyanNodeDescription = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeDescription.setStatus('current')
cyanNodeDhcpOnConsolePort = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 9), CyanEnDisabledTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeDhcpOnConsolePort.setStatus('current')
cyanNodeIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeIdentifier.setStatus('current')
cyanNodeLatitude = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeLatitude.setStatus('current')
cyanNodeLongitude = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeLongitude.setStatus('current')
cyanNodeMacBlockSize = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeMacBlockSize.setStatus('current')
cyanNodeMfgCleiCode = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeMfgCleiCode.setStatus('current')
cyanNodeMfgEciCode = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeMfgEciCode.setStatus('current')
cyanNodeMfgModuleId = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeMfgModuleId.setStatus('current')
cyanNodeMfgPartNumber = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeMfgPartNumber.setStatus('current')
cyanNodeMfgRevision = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeMfgRevision.setStatus('current')
cyanNodeMfgSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeMfgSerialNumber.setStatus('current')
cyanNodeName = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeName.setStatus('current')
cyanNodeNationalization = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 21), CyanNationalizationTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeNationalization.setStatus('current')
cyanNodeNodeId = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 22), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeNodeId.setStatus('current')
cyanNodeOidClass = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeOidClass.setStatus('current')
cyanNodeOperState = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 24), CyanOpStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeOperState.setStatus('current')
cyanNodeOperStateQual = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 25), CyanOpStateQualTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeOperStateQual.setStatus('current')
cyanNodeOssLabel = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeOssLabel.setStatus('current')
cyanNodeOwner = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeOwner.setStatus('current')
cyanNodePartNumber = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodePartNumber.setStatus('current')
cyanNodePostalCode = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodePostalCode.setStatus('current')
cyanNodeRackUnits = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeRackUnits.setStatus('current')
cyanNodeRegion = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeRegion.setStatus('current')
cyanNodeRelayRack = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeRelayRack.setStatus('current')
cyanNodeSecServState = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 33), CyanSecServiceStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeSecServState.setStatus('current')
cyanNodeStreet = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeStreet.setStatus('current')
cyanNodeType = MibScalar((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 1, 35), CyanTypeTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanNodeType.setStatus('current')
cyanNodeObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 20)).setObjects(("CYAN-NODE-MIB", "cyanNodeAdminState"), ("CYAN-NODE-MIB", "cyanNodeAssetTag"), ("CYAN-NODE-MIB", "cyanNodeBaseMacAddress"), ("CYAN-NODE-MIB", "cyanNodeBay"), ("CYAN-NODE-MIB", "cyanNodeCity"), ("CYAN-NODE-MIB", "cyanNodeCountry"), ("CYAN-NODE-MIB", "cyanNodeCurrentTimeZone"), ("CYAN-NODE-MIB", "cyanNodeDescription"), ("CYAN-NODE-MIB", "cyanNodeDhcpOnConsolePort"), ("CYAN-NODE-MIB", "cyanNodeIdentifier"), ("CYAN-NODE-MIB", "cyanNodeLatitude"), ("CYAN-NODE-MIB", "cyanNodeLongitude"), ("CYAN-NODE-MIB", "cyanNodeMacBlockSize"), ("CYAN-NODE-MIB", "cyanNodeMfgCleiCode"), ("CYAN-NODE-MIB", "cyanNodeMfgEciCode"), ("CYAN-NODE-MIB", "cyanNodeMfgModuleId"), ("CYAN-NODE-MIB", "cyanNodeMfgPartNumber"), ("CYAN-NODE-MIB", "cyanNodeMfgRevision"), ("CYAN-NODE-MIB", "cyanNodeMfgSerialNumber"), ("CYAN-NODE-MIB", "cyanNodeName"), ("CYAN-NODE-MIB", "cyanNodeNationalization"), ("CYAN-NODE-MIB", "cyanNodeNodeId"), ("CYAN-NODE-MIB", "cyanNodeOidClass"), ("CYAN-NODE-MIB", "cyanNodeOperState"), ("CYAN-NODE-MIB", "cyanNodeOperStateQual"), ("CYAN-NODE-MIB", "cyanNodeOssLabel"), ("CYAN-NODE-MIB", "cyanNodeOwner"), ("CYAN-NODE-MIB", "cyanNodePartNumber"), ("CYAN-NODE-MIB", "cyanNodePostalCode"), ("CYAN-NODE-MIB", "cyanNodeRackUnits"), ("CYAN-NODE-MIB", "cyanNodeRegion"), ("CYAN-NODE-MIB", "cyanNodeRelayRack"), ("CYAN-NODE-MIB", "cyanNodeSecServState"), ("CYAN-NODE-MIB", "cyanNodeStreet"), ("CYAN-NODE-MIB", "cyanNodeType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanNodeObjectGroup = cyanNodeObjectGroup.setStatus('current')
cyanNodeCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 28533, 5, 30, 10, 30)).setObjects(("CYAN-NODE-MIB", "cyanNodeObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanNodeCompliance = cyanNodeCompliance.setStatus('current')
mibBuilder.exportSymbols("CYAN-NODE-MIB", cyanNodeOidClass=cyanNodeOidClass, cyanNodeOperState=cyanNodeOperState, cyanNodeSecServState=cyanNodeSecServState, cyanNodeLongitude=cyanNodeLongitude, cyanNodeObjectGroup=cyanNodeObjectGroup, cyanNodeOssLabel=cyanNodeOssLabel, cyanNodeNationalization=cyanNodeNationalization, PYSNMP_MODULE_ID=cyanNodeModule, cyanNodeCity=cyanNodeCity, cyanNodeCountry=cyanNodeCountry, cyanNodeType=cyanNodeType, cyanNodeMibObjects=cyanNodeMibObjects, cyanNodeMfgModuleId=cyanNodeMfgModuleId, cyanNodeOperStateQual=cyanNodeOperStateQual, cyanNodeCompliance=cyanNodeCompliance, cyanNodeDhcpOnConsolePort=cyanNodeDhcpOnConsolePort, cyanNodeDescription=cyanNodeDescription, cyanNodePostalCode=cyanNodePostalCode, cyanNodePartNumber=cyanNodePartNumber, cyanNodeLatitude=cyanNodeLatitude, cyanNodeBay=cyanNodeBay, cyanNodeMfgPartNumber=cyanNodeMfgPartNumber, cyanNodeModule=cyanNodeModule, cyanNodeMacBlockSize=cyanNodeMacBlockSize, cyanNodeName=cyanNodeName, cyanNodeRegion=cyanNodeRegion, cyanNodeNodeId=cyanNodeNodeId, cyanNodeMfgEciCode=cyanNodeMfgEciCode, cyanNodeAdminState=cyanNodeAdminState, cyanNodeOwner=cyanNodeOwner, cyanNodeCurrentTimeZone=cyanNodeCurrentTimeZone, cyanNodeRackUnits=cyanNodeRackUnits, cyanNodeBaseMacAddress=cyanNodeBaseMacAddress, cyanNodeIdentifier=cyanNodeIdentifier, cyanNodeAssetTag=cyanNodeAssetTag, cyanNodeRelayRack=cyanNodeRelayRack, cyanNodeMfgRevision=cyanNodeMfgRevision, cyanNodeMfgCleiCode=cyanNodeMfgCleiCode, cyanNodeStreet=cyanNodeStreet, cyanNodeMfgSerialNumber=cyanNodeMfgSerialNumber)
