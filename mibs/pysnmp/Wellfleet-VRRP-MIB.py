#
# PySNMP MIB module Wellfleet-VRRP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-VRRP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:35:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, ModuleIdentity, MibIdentifier, Counter64, Counter32, Bits, Integer32, NotificationType, Gauge32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, iso, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "ModuleIdentity", "MibIdentifier", "Counter64", "Counter32", "Bits", "Integer32", "NotificationType", "Gauge32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "iso", "ObjectIdentity")
TextualConvention, DisplayString, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "PhysAddress")
wfVrrpGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfVrrpGroup")
wfVrrpAdminTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 1), )
if mibBuilder.loadTexts: wfVrrpAdminTable.setStatus('mandatory')
wfVrrpAdminEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 1, 1), ).setIndexNames((0, "Wellfleet-VRRP-MIB", "wfVrrpAdminPrimaryIpAddr"), (0, "Wellfleet-VRRP-MIB", "wfVrrpAdminVrId"))
if mibBuilder.loadTexts: wfVrrpAdminEntry.setStatus('mandatory')
wfVrrpAdminDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVrrpAdminDelete.setStatus('mandatory')
wfVrrpAdminDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVrrpAdminDisable.setStatus('mandatory')
wfVrrpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("initialize", 1), ("backup", 2), ("master", 3), ("down", 4))).clone('initialize')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVrrpAdminState.setStatus('mandatory')
wfVrrpAdminPrimaryIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVrrpAdminPrimaryIpAddr.setStatus('mandatory')
wfVrrpAdminVrId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVrrpAdminVrId.setStatus('mandatory')
wfVrrpAdminIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 1, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVrrpAdminIpAddr.setStatus('mandatory')
wfVrrpAdminVirtualMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 1, 1, 7), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVrrpAdminVirtualMacAddr.setStatus('mandatory')
wfVrrpAdminPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVrrpAdminPriority.setStatus('mandatory')
wfVrrpAdminAdvertisementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVrrpAdminAdvertisementInterval.setStatus('mandatory')
wfVrrpAdminCriticalIpInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 1, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVrrpAdminCriticalIpInterface.setStatus('mandatory')
wfVrrpAdminIPXBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVrrpAdminIPXBackup.setStatus('mandatory')
wfVrrpAdminIGMPBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVrrpAdminIGMPBackup.setStatus('mandatory')
wfVrrpAdminTokenRingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 1, 1, 13), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVrrpAdminTokenRingAddress.setStatus('mandatory')
wfVrrpAdminPreemptMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVrrpAdminPreemptMode.setStatus('mandatory')
wfVrrpAdminMasterPingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfVrrpAdminMasterPingEnable.setStatus('mandatory')
wfVrrpRouterStatsTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 2), )
if mibBuilder.loadTexts: wfVrrpRouterStatsTable.setStatus('mandatory')
wfVrrpRouterStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 2, 1), ).setIndexNames((0, "Wellfleet-VRRP-MIB", "wfVrrpStatsPrimaryIpAddr"), (0, "Wellfleet-VRRP-MIB", "wfVrrpStatsVrId"))
if mibBuilder.loadTexts: wfVrrpRouterStatsEntry.setStatus('mandatory')
wfVrrpStatsPrimaryIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVrrpStatsPrimaryIpAddr.setStatus('mandatory')
wfVrrpStatsVrId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVrrpStatsVrId.setStatus('mandatory')
wfVrrpStatsMasterTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVrrpStatsMasterTransitions.setStatus('mandatory')
wfVrrpStatsInAdvertisements = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVrrpStatsInAdvertisements.setStatus('mandatory')
wfVrrpStatsChecksumErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVrrpStatsChecksumErrors.setStatus('mandatory')
wfVrrpStatsVersionErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVrrpStatsVersionErrors.setStatus('mandatory')
wfVrrpStatsVrIdErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVrrpStatsVrIdErrors.setStatus('mandatory')
wfVrrpStatsAdvertiseIntervalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVrrpStatsAdvertiseIntervalErrors.setStatus('mandatory')
wfVrrpStatsIpTtlErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVrrpStatsIpTtlErrors.setStatus('mandatory')
wfVrrpStatsInPriorityZeroAdvertisements = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVrrpStatsInPriorityZeroAdvertisements.setStatus('mandatory')
wfVrrpStatsOutPriorityZeroAdvertisements = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVrrpStatsOutPriorityZeroAdvertisements.setStatus('mandatory')
wfVrrpStatsInInvalidTypeAdvertisements = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVrrpStatsInInvalidTypeAdvertisements.setStatus('mandatory')
wfVrrpStatsUnknownTypeAdvertisements = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 3, 25, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfVrrpStatsUnknownTypeAdvertisements.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-VRRP-MIB", wfVrrpAdminTable=wfVrrpAdminTable, wfVrrpStatsVrIdErrors=wfVrrpStatsVrIdErrors, wfVrrpAdminPrimaryIpAddr=wfVrrpAdminPrimaryIpAddr, wfVrrpAdminState=wfVrrpAdminState, wfVrrpAdminIGMPBackup=wfVrrpAdminIGMPBackup, wfVrrpAdminPriority=wfVrrpAdminPriority, wfVrrpStatsUnknownTypeAdvertisements=wfVrrpStatsUnknownTypeAdvertisements, wfVrrpAdminEntry=wfVrrpAdminEntry, wfVrrpAdminTokenRingAddress=wfVrrpAdminTokenRingAddress, wfVrrpStatsIpTtlErrors=wfVrrpStatsIpTtlErrors, wfVrrpAdminPreemptMode=wfVrrpAdminPreemptMode, wfVrrpStatsMasterTransitions=wfVrrpStatsMasterTransitions, wfVrrpAdminCriticalIpInterface=wfVrrpAdminCriticalIpInterface, wfVrrpStatsAdvertiseIntervalErrors=wfVrrpStatsAdvertiseIntervalErrors, wfVrrpAdminMasterPingEnable=wfVrrpAdminMasterPingEnable, wfVrrpStatsInInvalidTypeAdvertisements=wfVrrpStatsInInvalidTypeAdvertisements, wfVrrpAdminVirtualMacAddr=wfVrrpAdminVirtualMacAddr, wfVrrpAdminDelete=wfVrrpAdminDelete, wfVrrpStatsVersionErrors=wfVrrpStatsVersionErrors, wfVrrpStatsPrimaryIpAddr=wfVrrpStatsPrimaryIpAddr, wfVrrpStatsInAdvertisements=wfVrrpStatsInAdvertisements, wfVrrpAdminAdvertisementInterval=wfVrrpAdminAdvertisementInterval, wfVrrpAdminIPXBackup=wfVrrpAdminIPXBackup, wfVrrpAdminDisable=wfVrrpAdminDisable, wfVrrpStatsOutPriorityZeroAdvertisements=wfVrrpStatsOutPriorityZeroAdvertisements, wfVrrpRouterStatsEntry=wfVrrpRouterStatsEntry, wfVrrpStatsChecksumErrors=wfVrrpStatsChecksumErrors, wfVrrpRouterStatsTable=wfVrrpRouterStatsTable, wfVrrpStatsVrId=wfVrrpStatsVrId, wfVrrpStatsInPriorityZeroAdvertisements=wfVrrpStatsInPriorityZeroAdvertisements, wfVrrpAdminIpAddr=wfVrrpAdminIpAddr, wfVrrpAdminVrId=wfVrrpAdminVrId)
