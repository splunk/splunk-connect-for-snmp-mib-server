#
# PySNMP MIB module HP-ICF-POE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-POE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:22:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
hpicfCommon, = mibBuilder.importSymbols("HP-ICF-OID", "hpicfCommon")
pethPsePortEntry, pethMainPseEntry = mibBuilder.importSymbols("POWER-ETHERNET-MIB", "pethPsePortEntry", "pethMainPseEntry")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, iso, Integer32, Bits, Counter32, NotificationType, ModuleIdentity, Gauge32, IpAddress, Unsigned32, Counter64, TimeTicks, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "iso", "Integer32", "Bits", "Counter32", "NotificationType", "ModuleIdentity", "Gauge32", "IpAddress", "Unsigned32", "Counter64", "TimeTicks", "MibIdentifier")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
hpicfPoe = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1))
hpicfPoe.setRevisions(('2017-01-30 00:00', '2016-09-12 00:00', '2016-05-02 00:00', '2016-02-12 00:00', '2015-07-14 00:00', '2013-06-16 00:00', '2012-04-27 00:00', '2012-03-02 00:00', '2010-05-26 10:36', '2009-11-18 00:00', '2007-02-01 00:00', '2005-06-06 00:00', '2004-07-07 00:00',))
if mibBuilder.loadTexts: hpicfPoe.setLastUpdated('201701300000Z')
if mibBuilder.loadTexts: hpicfPoe.setOrganization('HP Networking')
hpicfPOE = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9))
hpicfPoePethPsePortTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1), )
if mibBuilder.loadTexts: hpicfPoePethPsePortTable.setStatus('current')
hpicfPoePethPsePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1), )
pethPsePortEntry.registerAugmentions(("HP-ICF-POE-MIB", "hpicfPoePethPsePortEntry"))
hpicfPoePethPsePortEntry.setIndexNames(*pethPsePortEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfPoePethPsePortEntry.setStatus('current')
hpicfPoePethPsePortCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortCurrent.setStatus('current')
hpicfPoePethPsePortVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortVoltage.setStatus('current')
hpicfPoePethPsePortPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortPower.setStatus('current')
hpicfPoePethPsePortPowerAllocateBy = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("usage", 1), ("class", 2), ("value", 3))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPoePethPsePortPowerAllocateBy.setStatus('current')
hpicfPoePethPsePortPowerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 17)).clone(17)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPoePethPsePortPowerValue.setStatus('current')
hpicfPoePethPsePortLLDPDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPoePethPsePortLLDPDetect.setStatus('current')
hpicfPoePethPsePortPoePlusPowerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(17)).setUnits('Watts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPoePethPsePortPoePlusPowerValue.setStatus('current')
hpicfPoePethPsePortActualPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 8), Integer32()).setUnits('milli-watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortActualPower.setStatus('current')
hpicfPoePethPsePortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("deny", 1), ("off", 2), ("on", 3))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortOperStatus.setStatus('current')
hpicfPoePethPsePortPowerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("disableWithFiber", 6))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortPowerMode.setStatus('current')
hpicfPoePethPsePortAveragePower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 11), Integer32()).setUnits('watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortAveragePower.setStatus('current')
hpicfPoePethPsePortPeakPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 12), Integer32()).setUnits('watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortPeakPower.setStatus('current')
hpicfPoePethPsePortPreStdDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPoePethPsePortPreStdDetect.setStatus('current')
hpicfPoePethPsePortLowPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("low", 1), ("high", 2))).clone(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortLowPriority.setStatus('current')
hpicfPoePethPsePortResetState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noreset", 0), ("reset", 1))).clone('noreset')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPoePethPsePortResetState.setStatus('current')
hpicfPoePethPsePortPowerType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 1, 2))).clone(namedValues=NamedValues(("type0", -1), ("type1", 1), ("type2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortPowerType.setStatus('current')
hpicfPoeAllowPreStdDetect = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPoeAllowPreStdDetect.setStatus('deprecated')
hpicfPoePowerRedundancy = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("nPlus1", 2), ("full", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPoePowerRedundancy.setStatus('deprecated')
hpicfPoeExtPwrSupplyCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPoeExtPwrSupplyCount.setStatus('deprecated')
hpicfPseFeaturesTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6), )
if mibBuilder.loadTexts: hpicfPseFeaturesTable.setStatus('current')
hpicfPseFeaturesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hpicfPseFeaturesEntry.setStatus('current')
hpicfPseAllowPreStdDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPseAllowPreStdDetect.setStatus('deprecated')
hpicfPsePowerRedundancy = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("nPlus1", 2), ("full", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPsePowerRedundancy.setStatus('current')
hpicfPseExtPwrSupplyCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfPseExtPwrSupplyCount.setStatus('current')
hpicfPseAvailablePower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPseAvailablePower.setStatus('current')
hpicfPseUsedPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPseUsedPower.setStatus('current')
hpicfPseFailoverPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPseFailoverPower.setStatus('current')
hpicfPseRedundantPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPseRedundantPower.setStatus('current')
hpicfPseCurrentPowerDraw = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPseCurrentPowerDraw.setStatus('current')
hpicfPoePowerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 7), )
if mibBuilder.loadTexts: hpicfPoePowerSupplyTable.setStatus('current')
hpicfPoePowerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 7, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: hpicfPoePowerSupplyEntry.setStatus('current')
hpicfPoePowerSupplySourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePowerSupplySourceType.setStatus('current')
hpicfPoePowerSupplyType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("poe", 1), ("poePlus", 2), ("notPresent", 3), ("fault", 4), ("auxFault", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePowerSupplyType.setStatus('current')
hpicfPoePowerSupplyCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePowerSupplyCapacity.setStatus('current')
hpicfPoePowerSupplyAuxCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePowerSupplyAuxCapacity.setStatus('current')
hpicfPoePethPseOperStateTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 8), )
if mibBuilder.loadTexts: hpicfPoePethPseOperStateTable.setStatus('current')
hpicfPoePethPseOperStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 8, 1), )
pethMainPseEntry.registerAugmentions(("HP-ICF-POE-MIB", "hpicfPoePethPseOperStateEntry"))
hpicfPoePethPseOperStateEntry.setIndexNames(*pethMainPseEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfPoePethPseOperStateEntry.setStatus('current')
hpicfPoePethPseOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("poeOn", 1), ("poePlusOn", 2), ("off", 3), ("fault", 4))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPseOperState.setStatus('current')
hpicfPoePethPsePortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePortNum.setStatus('current')
hpicfPoePethMainPsePdPowerDraw = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethMainPsePdPowerDraw.setStatus('current')
hpicfPoeMaxGuaranteedPower = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 9), Integer32()).setUnits('watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoeMaxGuaranteedPower.setStatus('current')
hpicfPoeRemainingGuaranteedPower = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 10), Integer32()).setUnits('watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoeRemainingGuaranteedPower.setStatus('current')
hpicfPoePethPsePowerTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 11), )
if mibBuilder.loadTexts: hpicfPoePethPsePowerTable.setStatus('current')
hpicfPoePethPsePowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 11, 1), )
pethMainPseEntry.registerAugmentions(("HP-ICF-POE-MIB", "hpicfPoePethPsePowerEntry"))
hpicfPoePethPsePowerEntry.setIndexNames(*pethMainPseEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfPoePethPsePowerEntry.setStatus('current')
hpicfPoePethPsePeakPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 11, 1, 1), Integer32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPsePeakPower.setStatus('current')
hpicfPoePethPseAvgPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 11, 1, 2), Integer32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPseAvgPower.setStatus('current')
hpicfPoePethPseRemGrntPower = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 11, 1, 3), Integer32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfPoePethPseRemGrntPower.setStatus('current')
hpicfPoeConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2))
hpicfPoeCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1))
hpicfPoeGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2))
hpicfPoeCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1, 1)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeCompliance = hpicfPoeCompliance.setStatus('deprecated')
hpicfPoeCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1, 2)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPoeGlobalGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPoeGlobalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeCompliance1 = hpicfPoeCompliance1.setStatus('deprecated')
hpicfPoeCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1, 3)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseFeaturesGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseFeaturesGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPseOperStateTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeCompliance2 = hpicfPoeCompliance2.setStatus('deprecated')
hpicfPoeCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1, 4)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseParamsGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPreStdDetectGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseParamsGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPreStdDetectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeCompliance3 = hpicfPoeCompliance3.setStatus('deprecated')
hpicfPoeCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1, 5)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseFeaturesGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPseOperStateTableGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePowerTableGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerUsageGlobalGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseFeaturesGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPseOperStateTableGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePowerTableGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerUsageGlobalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeCompliance4 = hpicfPoeCompliance4.setStatus('deprecated')
hpicfPoeCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1, 6)).setObjects(("HP-ICF-POE-MIB", "hpicfPoeAuxPowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoeAuxPowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoeLowPowerPortGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeCompliance5 = hpicfPoeCompliance5.setStatus('current')
hpicfPoeCompliance6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1, 7)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortPowerGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPowerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeCompliance6 = hpicfPoeCompliance6.setStatus('current')
hpicfPoeCompliance7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1, 8)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseParamsGroup1"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPreStdDetectGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseParamsGroup1"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPreStdDetectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeCompliance7 = hpicfPoeCompliance7.setStatus('current')
hpicfPoeCompliance8 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 1, 9)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseFeaturesGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePowerTableGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerUsageGlobalGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPseOperStateTableGroup1"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortTableGroup"), ("HP-ICF-POE-MIB", "hpicfPseFeaturesGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePowerTableGroup"), ("HP-ICF-POE-MIB", "hpicfPoePowerUsageGlobalGroup"), ("HP-ICF-POE-MIB", "hpicfPoePethPseOperStateTableGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeCompliance8 = hpicfPoeCompliance8.setStatus('current')
hpicfPoePethPsePortTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 1)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortCurrent"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortVoltage"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPower"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPowerAllocateBy"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPowerValue"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortLLDPDetect"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPoePlusPowerValue"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortActualPower"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortOperStatus"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPowerMode"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortAveragePower"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortPeakPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoePethPsePortTableGroup = hpicfPoePethPsePortTableGroup.setStatus('current')
hpicfPoeGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 2)).setObjects(("HP-ICF-POE-MIB", "hpicfPoeAllowPreStdDetect"), ("HP-ICF-POE-MIB", "hpicfPoePowerRedundancy"), ("HP-ICF-POE-MIB", "hpicfPoeExtPwrSupplyCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeGlobalGroup = hpicfPoeGlobalGroup.setStatus('deprecated')
hpicfPseFeaturesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 3)).setObjects(("HP-ICF-POE-MIB", "hpicfPseAllowPreStdDetect"), ("HP-ICF-POE-MIB", "hpicfPsePowerRedundancy"), ("HP-ICF-POE-MIB", "hpicfPseExtPwrSupplyCount"), ("HP-ICF-POE-MIB", "hpicfPseAvailablePower"), ("HP-ICF-POE-MIB", "hpicfPseUsedPower"), ("HP-ICF-POE-MIB", "hpicfPseFailoverPower"), ("HP-ICF-POE-MIB", "hpicfPseRedundantPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPseFeaturesGroup = hpicfPseFeaturesGroup.setStatus('deprecated')
hpicfPoePowerSupplyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 4)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePowerSupplySourceType"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyType"), ("HP-ICF-POE-MIB", "hpicfPoePowerSupplyCapacity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoePowerSupplyGroup = hpicfPoePowerSupplyGroup.setStatus('current')
hpicfPoePethPseOperStateTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 5)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPseOperState"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoePethPseOperStateTableGroup = hpicfPoePethPseOperStateTableGroup.setStatus('deprecated')
hpicfPoePethPsePowerTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 6)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePeakPower"), ("HP-ICF-POE-MIB", "hpicfPoePethPseAvgPower"), ("HP-ICF-POE-MIB", "hpicfPoePethPseRemGrntPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoePethPsePowerTableGroup = hpicfPoePethPsePowerTableGroup.setStatus('current')
hpicfPoePowerUsageGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 7)).setObjects(("HP-ICF-POE-MIB", "hpicfPoeMaxGuaranteedPower"), ("HP-ICF-POE-MIB", "hpicfPoeRemainingGuaranteedPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoePowerUsageGlobalGroup = hpicfPoePowerUsageGlobalGroup.setStatus('current')
hpicfPseParamsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 8)).setObjects(("HP-ICF-POE-MIB", "hpicfPsePowerRedundancy"), ("HP-ICF-POE-MIB", "hpicfPseExtPwrSupplyCount"), ("HP-ICF-POE-MIB", "hpicfPseAvailablePower"), ("HP-ICF-POE-MIB", "hpicfPseUsedPower"), ("HP-ICF-POE-MIB", "hpicfPseFailoverPower"), ("HP-ICF-POE-MIB", "hpicfPseRedundantPower"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPseParamsGroup = hpicfPseParamsGroup.setStatus('deprecated')
hpicfPoePethPsePortPreStdDetectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 9)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortPreStdDetect"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoePethPsePortPreStdDetectGroup = hpicfPoePethPsePortPreStdDetectGroup.setStatus('current')
hpicfPoeAuxPowerSupplyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 10)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePowerSupplyAuxCapacity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeAuxPowerSupplyGroup = hpicfPoeAuxPowerSupplyGroup.setStatus('current')
hpicfPoeLowPowerPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 11)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortLowPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoeLowPowerPortGroup = hpicfPoeLowPowerPortGroup.setStatus('current')
hpicfPseParamsGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 12)).setObjects(("HP-ICF-POE-MIB", "hpicfPsePowerRedundancy"), ("HP-ICF-POE-MIB", "hpicfPseExtPwrSupplyCount"), ("HP-ICF-POE-MIB", "hpicfPseAvailablePower"), ("HP-ICF-POE-MIB", "hpicfPseUsedPower"), ("HP-ICF-POE-MIB", "hpicfPseFailoverPower"), ("HP-ICF-POE-MIB", "hpicfPseRedundantPower"), ("HP-ICF-POE-MIB", "hpicfPseCurrentPowerDraw"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPseParamsGroup1 = hpicfPseParamsGroup1.setStatus('current')
hpicfPoePethPsePortPowerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 13)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPsePortPowerType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoePethPsePortPowerGroup = hpicfPoePethPsePortPowerGroup.setStatus('current')
hpicfPoePethPseOperStateTableGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 9, 1, 2, 2, 14)).setObjects(("HP-ICF-POE-MIB", "hpicfPoePethPseOperState"), ("HP-ICF-POE-MIB", "hpicfPoePethPsePortNum"), ("HP-ICF-POE-MIB", "hpicfPoePethMainPsePdPowerDraw"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfPoePethPseOperStateTableGroup1 = hpicfPoePethPseOperStateTableGroup1.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-POE-MIB", hpicfPoeCompliance5=hpicfPoeCompliance5, hpicfPoePethPseOperState=hpicfPoePethPseOperState, hpicfPsePowerRedundancy=hpicfPsePowerRedundancy, hpicfPseFeaturesEntry=hpicfPseFeaturesEntry, hpicfPoePowerSupplyTable=hpicfPoePowerSupplyTable, hpicfPoePethPsePortPowerType=hpicfPoePethPsePortPowerType, hpicfPoeExtPwrSupplyCount=hpicfPoeExtPwrSupplyCount, hpicfPoe=hpicfPoe, hpicfPoePethPsePortPower=hpicfPoePethPsePortPower, hpicfPoeCompliance=hpicfPoeCompliance, hpicfPoeCompliance3=hpicfPoeCompliance3, hpicfPoePethPsePortEntry=hpicfPoePethPsePortEntry, hpicfPseAvailablePower=hpicfPseAvailablePower, hpicfPseParamsGroup=hpicfPseParamsGroup, hpicfPOE=hpicfPOE, hpicfPoePethMainPsePdPowerDraw=hpicfPoePethMainPsePdPowerDraw, hpicfPoePowerUsageGlobalGroup=hpicfPoePowerUsageGlobalGroup, hpicfPseFeaturesGroup=hpicfPseFeaturesGroup, hpicfPoeCompliances=hpicfPoeCompliances, hpicfPoeCompliance4=hpicfPoeCompliance4, hpicfPoeCompliance6=hpicfPoeCompliance6, hpicfPoePethPsePortPowerMode=hpicfPoePethPsePortPowerMode, hpicfPseCurrentPowerDraw=hpicfPseCurrentPowerDraw, hpicfPoePethPsePortPreStdDetect=hpicfPoePethPsePortPreStdDetect, hpicfPoePethPsePortTable=hpicfPoePethPsePortTable, hpicfPoePethPseOperStateTableGroup1=hpicfPoePethPseOperStateTableGroup1, hpicfPoePethPsePortPreStdDetectGroup=hpicfPoePethPsePortPreStdDetectGroup, hpicfPoePethPsePortPoePlusPowerValue=hpicfPoePethPsePortPoePlusPowerValue, hpicfPoePethPsePowerEntry=hpicfPoePethPsePowerEntry, hpicfPoePethPsePortPowerAllocateBy=hpicfPoePethPsePortPowerAllocateBy, hpicfPseFailoverPower=hpicfPseFailoverPower, hpicfPoePethPsePowerTableGroup=hpicfPoePethPsePowerTableGroup, hpicfPoePethPsePortPowerValue=hpicfPoePethPsePortPowerValue, hpicfPoePowerSupplyGroup=hpicfPoePowerSupplyGroup, hpicfPoePethPsePortPowerGroup=hpicfPoePethPsePortPowerGroup, hpicfPoeConformance=hpicfPoeConformance, hpicfPseFeaturesTable=hpicfPseFeaturesTable, hpicfPseParamsGroup1=hpicfPseParamsGroup1, hpicfPoePowerSupplySourceType=hpicfPoePowerSupplySourceType, hpicfPoeCompliance2=hpicfPoeCompliance2, hpicfPoeRemainingGuaranteedPower=hpicfPoeRemainingGuaranteedPower, hpicfPoePethPsePortLLDPDetect=hpicfPoePethPsePortLLDPDetect, hpicfPoeMaxGuaranteedPower=hpicfPoeMaxGuaranteedPower, hpicfPoePethPsePortResetState=hpicfPoePethPsePortResetState, hpicfPoePowerSupplyCapacity=hpicfPoePowerSupplyCapacity, hpicfPoePethPseRemGrntPower=hpicfPoePethPseRemGrntPower, hpicfPoePethPseOperStateEntry=hpicfPoePethPseOperStateEntry, hpicfPoeLowPowerPortGroup=hpicfPoeLowPowerPortGroup, hpicfPoePethPseOperStateTableGroup=hpicfPoePethPseOperStateTableGroup, hpicfPoeAllowPreStdDetect=hpicfPoeAllowPreStdDetect, hpicfPoePethPsePowerTable=hpicfPoePethPsePowerTable, hpicfPoeGlobalGroup=hpicfPoeGlobalGroup, hpicfPoePethPsePortActualPower=hpicfPoePethPsePortActualPower, hpicfPoePethPsePortTableGroup=hpicfPoePethPsePortTableGroup, hpicfPoePowerSupplyAuxCapacity=hpicfPoePowerSupplyAuxCapacity, hpicfPoePethPsePortVoltage=hpicfPoePethPsePortVoltage, hpicfPoeAuxPowerSupplyGroup=hpicfPoeAuxPowerSupplyGroup, hpicfPseUsedPower=hpicfPseUsedPower, hpicfPseRedundantPower=hpicfPseRedundantPower, hpicfPoePowerSupplyEntry=hpicfPoePowerSupplyEntry, hpicfPoeGroups=hpicfPoeGroups, hpicfPoePowerSupplyType=hpicfPoePowerSupplyType, hpicfPoePethPseOperStateTable=hpicfPoePethPseOperStateTable, hpicfPoePethPsePortCurrent=hpicfPoePethPsePortCurrent, hpicfPoeCompliance1=hpicfPoeCompliance1, hpicfPoePethPsePortNum=hpicfPoePethPsePortNum, hpicfPoePethPsePortAveragePower=hpicfPoePethPsePortAveragePower, hpicfPoeCompliance8=hpicfPoeCompliance8, hpicfPoePethPsePortLowPriority=hpicfPoePethPsePortLowPriority, hpicfPseAllowPreStdDetect=hpicfPseAllowPreStdDetect, hpicfPoePethPsePortPeakPower=hpicfPoePethPsePortPeakPower, hpicfPoePethPsePeakPower=hpicfPoePethPsePeakPower, hpicfPoeCompliance7=hpicfPoeCompliance7, hpicfPseExtPwrSupplyCount=hpicfPseExtPwrSupplyCount, hpicfPoePethPsePortOperStatus=hpicfPoePethPsePortOperStatus, PYSNMP_MODULE_ID=hpicfPoe, hpicfPoePethPseAvgPower=hpicfPoePethPseAvgPower, hpicfPoePowerRedundancy=hpicfPoePowerRedundancy)
