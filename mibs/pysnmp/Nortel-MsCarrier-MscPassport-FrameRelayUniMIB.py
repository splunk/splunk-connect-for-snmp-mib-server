#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-FrameRelayUniMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-FrameRelayUniMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:20:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
RowPointer, Gauge32, Integer32, RowStatus, InterfaceIndex, Unsigned32, DisplayString, StorageType, Counter32 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "RowPointer", "Gauge32", "Integer32", "RowStatus", "InterfaceIndex", "Unsigned32", "DisplayString", "StorageType", "Counter32")
NonReplicated, FixedPoint3, PassportCounter64, Unsigned64, Hex, DigitString, AsciiString, Link, HexString, EnterpriseDateAndTime = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "NonReplicated", "FixedPoint3", "PassportCounter64", "Unsigned64", "Hex", "DigitString", "AsciiString", "Link", "HexString", "EnterpriseDateAndTime")
mscPassportMIBs, mscComponents = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs", "mscComponents")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, Integer32, NotificationType, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, ObjectIdentity, TimeTicks, Bits, Counter64, Unsigned32, IpAddress, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Integer32", "NotificationType", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "ObjectIdentity", "TimeTicks", "Bits", "Counter64", "Unsigned32", "IpAddress", "MibIdentifier", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
frameRelayUniMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 24))
mscFrUni = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71))
mscFrUniRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 1), )
if mibBuilder.loadTexts: mscFrUniRowStatusTable.setStatus('mandatory')
mscFrUniRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"))
if mibBuilder.loadTexts: mscFrUniRowStatusEntry.setStatus('mandatory')
mscFrUniRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniRowStatus.setStatus('mandatory')
mscFrUniComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniComponentName.setStatus('mandatory')
mscFrUniStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniStorageType.setStatus('mandatory')
mscFrUniIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: mscFrUniIndex.setStatus('mandatory')
mscFrUniCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 10), )
if mibBuilder.loadTexts: mscFrUniCidDataTable.setStatus('mandatory')
mscFrUniCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"))
if mibBuilder.loadTexts: mscFrUniCidDataEntry.setStatus('mandatory')
mscFrUniCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniCustomerIdentifier.setStatus('mandatory')
mscFrUniStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 11), )
if mibBuilder.loadTexts: mscFrUniStateTable.setStatus('mandatory')
mscFrUniStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"))
if mibBuilder.loadTexts: mscFrUniStateEntry.setStatus('mandatory')
mscFrUniAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniAdminState.setStatus('mandatory')
mscFrUniOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniOperationalState.setStatus('mandatory')
mscFrUniUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniUsageState.setStatus('mandatory')
mscFrUniAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniAvailabilityStatus.setStatus('mandatory')
mscFrUniProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 11, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniProceduralStatus.setStatus('mandatory')
mscFrUniControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 11, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniControlStatus.setStatus('mandatory')
mscFrUniAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 11, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniAlarmStatus.setStatus('mandatory')
mscFrUniStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniStandbyStatus.setStatus('mandatory')
mscFrUniUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 11, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniUnknownStatus.setStatus('mandatory')
mscFrUniStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 12), )
if mibBuilder.loadTexts: mscFrUniStatsTable.setStatus('mandatory')
mscFrUniStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"))
if mibBuilder.loadTexts: mscFrUniStatsEntry.setStatus('mandatory')
mscFrUniLastUnknownDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLastUnknownDlci.setStatus('mandatory')
mscFrUniUnknownDlciFramesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniUnknownDlciFramesFromIf.setStatus('mandatory')
mscFrUniInvalidHeaderFramesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniInvalidHeaderFramesFromIf.setStatus('mandatory')
mscFrUniIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 13), )
if mibBuilder.loadTexts: mscFrUniIfEntryTable.setStatus('mandatory')
mscFrUniIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"))
if mibBuilder.loadTexts: mscFrUniIfEntryEntry.setStatus('mandatory')
mscFrUniIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniIfAdminStatus.setStatus('mandatory')
mscFrUniIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 13, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniIfIndex.setStatus('mandatory')
mscFrUniOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 14), )
if mibBuilder.loadTexts: mscFrUniOperStatusTable.setStatus('mandatory')
mscFrUniOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"))
if mibBuilder.loadTexts: mscFrUniOperStatusEntry.setStatus('mandatory')
mscFrUniSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSnmpOperStatus.setStatus('mandatory')
mscFrUniEmissionPriorityQsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 15), )
if mibBuilder.loadTexts: mscFrUniEmissionPriorityQsTable.setStatus('mandatory')
mscFrUniEmissionPriorityQsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"))
if mibBuilder.loadTexts: mscFrUniEmissionPriorityQsEntry.setStatus('mandatory')
mscFrUniNumberOfEmissionQs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(2, 2), ValueRangeConstraint(4, 4), )).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniNumberOfEmissionQs.setStatus('mandatory')
mscFrUniFrmToIfByQueueTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 341), )
if mibBuilder.loadTexts: mscFrUniFrmToIfByQueueTable.setStatus('mandatory')
mscFrUniFrmToIfByQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 341, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniFrmToIfByQueueIndex"))
if mibBuilder.loadTexts: mscFrUniFrmToIfByQueueEntry.setStatus('mandatory')
mscFrUniFrmToIfByQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 341, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscFrUniFrmToIfByQueueIndex.setStatus('mandatory')
mscFrUniFrmToIfByQueueValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 341, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFrmToIfByQueueValue.setStatus('mandatory')
mscFrUniOctetToIfByQueueTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 342), )
if mibBuilder.loadTexts: mscFrUniOctetToIfByQueueTable.setStatus('mandatory')
mscFrUniOctetToIfByQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 342, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniOctetToIfByQueueIndex"))
if mibBuilder.loadTexts: mscFrUniOctetToIfByQueueEntry.setStatus('mandatory')
mscFrUniOctetToIfByQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 342, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)))
if mibBuilder.loadTexts: mscFrUniOctetToIfByQueueIndex.setStatus('mandatory')
mscFrUniOctetToIfByQueueValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 342, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniOctetToIfByQueueValue.setStatus('mandatory')
mscFrUniDna = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2))
mscFrUniDnaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 1), )
if mibBuilder.loadTexts: mscFrUniDnaRowStatusTable.setStatus('mandatory')
mscFrUniDnaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaIndex"))
if mibBuilder.loadTexts: mscFrUniDnaRowStatusEntry.setStatus('mandatory')
mscFrUniDnaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDnaRowStatus.setStatus('mandatory')
mscFrUniDnaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDnaComponentName.setStatus('mandatory')
mscFrUniDnaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDnaStorageType.setStatus('mandatory')
mscFrUniDnaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrUniDnaIndex.setStatus('mandatory')
mscFrUniDnaAddressTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 10), )
if mibBuilder.loadTexts: mscFrUniDnaAddressTable.setStatus('mandatory')
mscFrUniDnaAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaIndex"))
if mibBuilder.loadTexts: mscFrUniDnaAddressEntry.setStatus('mandatory')
mscFrUniDnaNumberingPlanIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaNumberingPlanIndicator.setStatus('mandatory')
mscFrUniDnaDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 10, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaDataNetworkAddress.setStatus('mandatory')
mscFrUniDnaOutgoingOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 11), )
if mibBuilder.loadTexts: mscFrUniDnaOutgoingOptionsTable.setStatus('mandatory')
mscFrUniDnaOutgoingOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaIndex"))
if mibBuilder.loadTexts: mscFrUniDnaOutgoingOptionsEntry.setStatus('mandatory')
mscFrUniDnaOutDefaultPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("high", 1))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaOutDefaultPriority.setStatus('mandatory')
mscFrUniDnaOutDefaultPathSensitivity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 11, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1))).clone('throughput')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaOutDefaultPathSensitivity.setStatus('obsolete')
mscFrUniDnaOutPathSensitivityOverRide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 11, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaOutPathSensitivityOverRide.setStatus('obsolete')
mscFrUniDnaOutDefaultPathReliability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 11, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("high", 0), ("normal", 1))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaOutDefaultPathReliability.setStatus('mandatory')
mscFrUniDnaOutAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 11, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('disallowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaOutAccess.setStatus('mandatory')
mscFrUniDnaDefaultTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 11, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15))).clone('n0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaDefaultTransferPriority.setStatus('mandatory')
mscFrUniDnaTransferPriorityOverRide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 11, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaTransferPriorityOverRide.setStatus('mandatory')
mscFrUniDnaIncomingOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 12), )
if mibBuilder.loadTexts: mscFrUniDnaIncomingOptionsTable.setStatus('mandatory')
mscFrUniDnaIncomingOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaIndex"))
if mibBuilder.loadTexts: mscFrUniDnaIncomingOptionsEntry.setStatus('mandatory')
mscFrUniDnaIncAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('disallowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaIncAccess.setStatus('mandatory')
mscFrUniDnaCallOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 13), )
if mibBuilder.loadTexts: mscFrUniDnaCallOptionsTable.setStatus('mandatory')
mscFrUniDnaCallOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaIndex"))
if mibBuilder.loadTexts: mscFrUniDnaCallOptionsEntry.setStatus('mandatory')
mscFrUniDnaAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 13, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaAccountClass.setStatus('mandatory')
mscFrUniDnaAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 13, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1).clone(hexValue="80")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaAccountCollection.setStatus('mandatory')
mscFrUniDnaServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 13, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaServiceExchange.setStatus('mandatory')
mscFrUniDnaEgressAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 13, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaEgressAccounting.setStatus('mandatory')
mscFrUniDnaDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 13, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("dprsOnly", 0), ("dprsMcsOnly", 1), ("dprsMcsFirst", 2))).clone('dprsOnly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaDataPath.setStatus('mandatory')
mscFrUniDnaCug = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 2))
mscFrUniDnaCugRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 2, 1), )
if mibBuilder.loadTexts: mscFrUniDnaCugRowStatusTable.setStatus('mandatory')
mscFrUniDnaCugRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaCugIndex"))
if mibBuilder.loadTexts: mscFrUniDnaCugRowStatusEntry.setStatus('mandatory')
mscFrUniDnaCugRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaCugRowStatus.setStatus('mandatory')
mscFrUniDnaCugComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDnaCugComponentName.setStatus('mandatory')
mscFrUniDnaCugStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDnaCugStorageType.setStatus('mandatory')
mscFrUniDnaCugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: mscFrUniDnaCugIndex.setStatus('mandatory')
mscFrUniDnaCugCugOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 2, 10), )
if mibBuilder.loadTexts: mscFrUniDnaCugCugOptionsTable.setStatus('mandatory')
mscFrUniDnaCugCugOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaCugIndex"))
if mibBuilder.loadTexts: mscFrUniDnaCugCugOptionsEntry.setStatus('mandatory')
mscFrUniDnaCugType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("national", 0), ("international", 1))).clone('national')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaCugType.setStatus('mandatory')
mscFrUniDnaCugDnic = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 2, 10, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4).clone(hexValue="30303030")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaCugDnic.setStatus('mandatory')
mscFrUniDnaCugInterlockCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaCugInterlockCode.setStatus('mandatory')
mscFrUniDnaCugPreferential = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaCugPreferential.setStatus('mandatory')
mscFrUniDnaCugOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 2, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaCugOutCalls.setStatus('mandatory')
mscFrUniDnaCugIncCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disallowed", 0), ("allowed", 1))).clone('allowed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaCugIncCalls.setStatus('mandatory')
mscFrUniDnaHgM = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3))
mscFrUniDnaHgMRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 1), )
if mibBuilder.loadTexts: mscFrUniDnaHgMRowStatusTable.setStatus('mandatory')
mscFrUniDnaHgMRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaHgMIndex"))
if mibBuilder.loadTexts: mscFrUniDnaHgMRowStatusEntry.setStatus('mandatory')
mscFrUniDnaHgMRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaHgMRowStatus.setStatus('mandatory')
mscFrUniDnaHgMComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDnaHgMComponentName.setStatus('mandatory')
mscFrUniDnaHgMStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDnaHgMStorageType.setStatus('mandatory')
mscFrUniDnaHgMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrUniDnaHgMIndex.setStatus('mandatory')
mscFrUniDnaHgMIfTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 10), )
if mibBuilder.loadTexts: mscFrUniDnaHgMIfTable.setStatus('mandatory')
mscFrUniDnaHgMIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaHgMIndex"))
if mibBuilder.loadTexts: mscFrUniDnaHgMIfEntry.setStatus('mandatory')
mscFrUniDnaHgMAvailabilityUpdateThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2048, 16777216)).clone(8192)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaHgMAvailabilityUpdateThreshold.setStatus('mandatory')
mscFrUniDnaHgMOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 11), )
if mibBuilder.loadTexts: mscFrUniDnaHgMOpTable.setStatus('mandatory')
mscFrUniDnaHgMOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaHgMIndex"))
if mibBuilder.loadTexts: mscFrUniDnaHgMOpEntry.setStatus('mandatory')
mscFrUniDnaHgMMaximumAvailableAggregateCir = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDnaHgMMaximumAvailableAggregateCir.setStatus('mandatory')
mscFrUniDnaHgMAvailableAggregateCir = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDnaHgMAvailableAggregateCir.setStatus('mandatory')
mscFrUniDnaHgMAvailabilityDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-16777216, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDnaHgMAvailabilityDelta.setStatus('mandatory')
mscFrUniDnaHgMAvailableDlcis = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDnaHgMAvailableDlcis.setStatus('mandatory')
mscFrUniDnaHgMHgAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 2))
mscFrUniDnaHgMHgAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 2, 1), )
if mibBuilder.loadTexts: mscFrUniDnaHgMHgAddrRowStatusTable.setStatus('mandatory')
mscFrUniDnaHgMHgAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaHgMIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaHgMHgAddrIndex"))
if mibBuilder.loadTexts: mscFrUniDnaHgMHgAddrRowStatusEntry.setStatus('mandatory')
mscFrUniDnaHgMHgAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaHgMHgAddrRowStatus.setStatus('mandatory')
mscFrUniDnaHgMHgAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDnaHgMHgAddrComponentName.setStatus('mandatory')
mscFrUniDnaHgMHgAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDnaHgMHgAddrStorageType.setStatus('mandatory')
mscFrUniDnaHgMHgAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1)))
if mibBuilder.loadTexts: mscFrUniDnaHgMHgAddrIndex.setStatus('mandatory')
mscFrUniDnaHgMHgAddrAddrTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 2, 10), )
if mibBuilder.loadTexts: mscFrUniDnaHgMHgAddrAddrTable.setStatus('mandatory')
mscFrUniDnaHgMHgAddrAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaHgMIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDnaHgMHgAddrIndex"))
if mibBuilder.loadTexts: mscFrUniDnaHgMHgAddrAddrEntry.setStatus('mandatory')
mscFrUniDnaHgMHgAddrNumberingPlanIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaHgMHgAddrNumberingPlanIndicator.setStatus('mandatory')
mscFrUniDnaHgMHgAddrDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 2, 3, 2, 10, 1, 2), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDnaHgMHgAddrDataNetworkAddress.setStatus('mandatory')
mscFrUniFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3))
mscFrUniFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 1), )
if mibBuilder.loadTexts: mscFrUniFramerRowStatusTable.setStatus('mandatory')
mscFrUniFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniFramerIndex"))
if mibBuilder.loadTexts: mscFrUniFramerRowStatusEntry.setStatus('mandatory')
mscFrUniFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniFramerRowStatus.setStatus('mandatory')
mscFrUniFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerComponentName.setStatus('mandatory')
mscFrUniFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerStorageType.setStatus('mandatory')
mscFrUniFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrUniFramerIndex.setStatus('mandatory')
mscFrUniFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 10), )
if mibBuilder.loadTexts: mscFrUniFramerProvTable.setStatus('mandatory')
mscFrUniFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniFramerIndex"))
if mibBuilder.loadTexts: mscFrUniFramerProvEntry.setStatus('mandatory')
mscFrUniFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniFramerInterfaceName.setStatus('mandatory')
mscFrUniFramerLinkTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 11), )
if mibBuilder.loadTexts: mscFrUniFramerLinkTable.setStatus('mandatory')
mscFrUniFramerLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniFramerIndex"))
if mibBuilder.loadTexts: mscFrUniFramerLinkEntry.setStatus('mandatory')
mscFrUniFramerDataInversion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 16))).clone(namedValues=NamedValues(("off", 0), ("on", 16))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniFramerDataInversion.setStatus('mandatory')
mscFrUniFramerFrameCrcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("crc16", 0), ("crc32", 1), ("noCrc", 2))).clone('crc16')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniFramerFrameCrcType.setStatus('mandatory')
mscFrUniFramerFlagsBetweenFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniFramerFlagsBetweenFrames.setStatus('mandatory')
mscFrUniFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 12), )
if mibBuilder.loadTexts: mscFrUniFramerStateTable.setStatus('mandatory')
mscFrUniFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniFramerIndex"))
if mibBuilder.loadTexts: mscFrUniFramerStateEntry.setStatus('mandatory')
mscFrUniFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerAdminState.setStatus('mandatory')
mscFrUniFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerOperationalState.setStatus('mandatory')
mscFrUniFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerUsageState.setStatus('mandatory')
mscFrUniFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 13), )
if mibBuilder.loadTexts: mscFrUniFramerStatsTable.setStatus('mandatory')
mscFrUniFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniFramerIndex"))
if mibBuilder.loadTexts: mscFrUniFramerStatsEntry.setStatus('mandatory')
mscFrUniFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerFrmToIf.setStatus('obsolete')
mscFrUniFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerFrmFromIf.setStatus('obsolete')
mscFrUniFramerOctetFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerOctetFromIf.setStatus('obsolete')
mscFrUniFramerAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerAborts.setStatus('mandatory')
mscFrUniFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerCrcErrors.setStatus('mandatory')
mscFrUniFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerLrcErrors.setStatus('mandatory')
mscFrUniFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerNonOctetErrors.setStatus('mandatory')
mscFrUniFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerOverruns.setStatus('mandatory')
mscFrUniFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerUnderruns.setStatus('mandatory')
mscFrUniFramerLargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerLargeFrmErrors.setStatus('mandatory')
mscFrUniFramerFrmModeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerFrmModeErrors.setStatus('mandatory')
mscFrUniFramerFrmToIf64 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 13, 1, 14), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerFrmToIf64.setStatus('mandatory')
mscFrUniFramerFrmFromIf64 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 13, 1, 15), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerFrmFromIf64.setStatus('mandatory')
mscFrUniFramerOctetFromIf64 = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 13, 1, 16), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerOctetFromIf64.setStatus('mandatory')
mscFrUniFramerUtilTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 14), )
if mibBuilder.loadTexts: mscFrUniFramerUtilTable.setStatus('mandatory')
mscFrUniFramerUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniFramerIndex"))
if mibBuilder.loadTexts: mscFrUniFramerUtilEntry.setStatus('mandatory')
mscFrUniFramerNormPrioLinkUtilToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 14, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerNormPrioLinkUtilToIf.setStatus('mandatory')
mscFrUniFramerNormPrioLinkUtilFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 3, 14, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniFramerNormPrioLinkUtilFromIf.setStatus('mandatory')
mscFrUniLmi = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4))
mscFrUniLmiRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 1), )
if mibBuilder.loadTexts: mscFrUniLmiRowStatusTable.setStatus('mandatory')
mscFrUniLmiRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLmiIndex"))
if mibBuilder.loadTexts: mscFrUniLmiRowStatusEntry.setStatus('mandatory')
mscFrUniLmiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiRowStatus.setStatus('mandatory')
mscFrUniLmiComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiComponentName.setStatus('mandatory')
mscFrUniLmiStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiStorageType.setStatus('mandatory')
mscFrUniLmiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrUniLmiIndex.setStatus('mandatory')
mscFrUniLmiParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 10), )
if mibBuilder.loadTexts: mscFrUniLmiParmsTable.setStatus('mandatory')
mscFrUniLmiParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLmiIndex"))
if mibBuilder.loadTexts: mscFrUniLmiParmsEntry.setStatus('mandatory')
mscFrUniLmiProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("vendorForum", 1), ("ansi", 2), ("itu", 3), ("autoConfigure", 4))).clone('autoConfigure')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLmiProcedures.setStatus('mandatory')
mscFrUniLmiAsyncStatusReport = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLmiAsyncStatusReport.setStatus('mandatory')
mscFrUniLmiErrorEventThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLmiErrorEventThreshold.setStatus('mandatory')
mscFrUniLmiEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLmiEventCount.setStatus('mandatory')
mscFrUniLmiCheckPointTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), )).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLmiCheckPointTimer.setStatus('mandatory')
mscFrUniLmiMessageCountTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), )).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLmiMessageCountTimer.setStatus('mandatory')
mscFrUniLmiIgnoreActiveBit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLmiIgnoreActiveBit.setStatus('mandatory')
mscFrUniLmiSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("network", 0), ("user", 1), ("both", 2))).clone('network')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLmiSide.setStatus('mandatory')
mscFrUniLmiPvcConfigParmsInFsr = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLmiPvcConfigParmsInFsr.setStatus('mandatory')
mscFrUniLmiStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 11), )
if mibBuilder.loadTexts: mscFrUniLmiStateTable.setStatus('mandatory')
mscFrUniLmiStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLmiIndex"))
if mibBuilder.loadTexts: mscFrUniLmiStateEntry.setStatus('mandatory')
mscFrUniLmiAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiAdminState.setStatus('mandatory')
mscFrUniLmiOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiOperationalState.setStatus('mandatory')
mscFrUniLmiUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiUsageState.setStatus('mandatory')
mscFrUniLmiPsiTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 12), )
if mibBuilder.loadTexts: mscFrUniLmiPsiTable.setStatus('mandatory')
mscFrUniLmiPsiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLmiIndex"))
if mibBuilder.loadTexts: mscFrUniLmiPsiEntry.setStatus('mandatory')
mscFrUniLmiProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("errorCondition", 0), ("normalCondition", 1), ("configuring", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiProtocolStatus.setStatus('mandatory')
mscFrUniLmiOpProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("vendorForum", 1), ("ansi", 2), ("itu", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiOpProcedures.setStatus('mandatory')
mscFrUniLmiStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 13), )
if mibBuilder.loadTexts: mscFrUniLmiStatsTable.setStatus('mandatory')
mscFrUniLmiStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLmiIndex"))
if mibBuilder.loadTexts: mscFrUniLmiStatsEntry.setStatus('mandatory')
mscFrUniLmiKeepAliveStatusToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiKeepAliveStatusToIf.setStatus('mandatory')
mscFrUniLmiFullStatusToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiFullStatusToIf.setStatus('mandatory')
mscFrUniLmiKeepAliveStatusEnqFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiKeepAliveStatusEnqFromIf.setStatus('mandatory')
mscFrUniLmiFullStatusEnqFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiFullStatusEnqFromIf.setStatus('mandatory')
mscFrUniLmiNetworkSideEventHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 13, 1, 5), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiNetworkSideEventHistory.setStatus('mandatory')
mscFrUniLmiProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiProtocolErrors.setStatus('mandatory')
mscFrUniLmiUnexpectedIes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiUnexpectedIes.setStatus('mandatory')
mscFrUniLmiSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiSequenceErrors.setStatus('mandatory')
mscFrUniLmiUnexpectedReports = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiUnexpectedReports.setStatus('mandatory')
mscFrUniLmiPollingVerifTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiPollingVerifTimeouts.setStatus('mandatory')
mscFrUniLmiKeepAliveEnqToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiKeepAliveEnqToIf.setStatus('mandatory')
mscFrUniLmiFullStatusEnqToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 13, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiFullStatusEnqToIf.setStatus('mandatory')
mscFrUniLmiUserSideEventHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 13, 1, 13), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiUserSideEventHistory.setStatus('mandatory')
mscFrUniLmiStatusSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 13, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiStatusSequenceErrors.setStatus('mandatory')
mscFrUniLmiNoStatusReportCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 13, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLmiNoStatusReportCount.setStatus('mandatory')
mscFrUniLmiUspParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 14), )
if mibBuilder.loadTexts: mscFrUniLmiUspParmsTable.setStatus('mandatory')
mscFrUniLmiUspParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLmiIndex"))
if mibBuilder.loadTexts: mscFrUniLmiUspParmsEntry.setStatus('mandatory')
mscFrUniLmiFullStatusPollingCycles = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLmiFullStatusPollingCycles.setStatus('mandatory')
mscFrUniLmiLinkVerificationTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 4, 14, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5, 5), ValueRangeConstraint(10, 10), ValueRangeConstraint(15, 15), ValueRangeConstraint(20, 20), ValueRangeConstraint(25, 25), ValueRangeConstraint(30, 30), )).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLmiLinkVerificationTimer.setStatus('mandatory')
mscFrUniDlci = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5))
mscFrUniDlciRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 1), )
if mibBuilder.loadTexts: mscFrUniDlciRowStatusTable.setStatus('mandatory')
mscFrUniDlciRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"))
if mibBuilder.loadTexts: mscFrUniDlciRowStatusEntry.setStatus('mandatory')
mscFrUniDlciRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciRowStatus.setStatus('mandatory')
mscFrUniDlciComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciComponentName.setStatus('mandatory')
mscFrUniDlciStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciStorageType.setStatus('mandatory')
mscFrUniDlciIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)))
if mibBuilder.loadTexts: mscFrUniDlciIndex.setStatus('mandatory')
mscFrUniDlciStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 10), )
if mibBuilder.loadTexts: mscFrUniDlciStateTable.setStatus('mandatory')
mscFrUniDlciStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"))
if mibBuilder.loadTexts: mscFrUniDlciStateEntry.setStatus('mandatory')
mscFrUniDlciAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciAdminState.setStatus('mandatory')
mscFrUniDlciOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciOperationalState.setStatus('mandatory')
mscFrUniDlciUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciUsageState.setStatus('mandatory')
mscFrUniDlciAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciAvailabilityStatus.setStatus('mandatory')
mscFrUniDlciProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciProceduralStatus.setStatus('mandatory')
mscFrUniDlciControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciControlStatus.setStatus('mandatory')
mscFrUniDlciAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 10, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciAlarmStatus.setStatus('mandatory')
mscFrUniDlciStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciStandbyStatus.setStatus('mandatory')
mscFrUniDlciUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciUnknownStatus.setStatus('mandatory')
mscFrUniDlciAbitTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 12), )
if mibBuilder.loadTexts: mscFrUniDlciAbitTable.setStatus('mandatory')
mscFrUniDlciAbitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"))
if mibBuilder.loadTexts: mscFrUniDlciAbitEntry.setStatus('mandatory')
mscFrUniDlciABitStatusToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1), ("notApplicable", 2))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciABitStatusToIf.setStatus('mandatory')
mscFrUniDlciABitReasonToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 8, 9, 10))).clone(namedValues=NamedValues(("notApplicable", 0), ("remoteUserSignaled", 1), ("localLmiError", 2), ("remoteLmiError", 3), ("localLinkDown", 4), ("remoteLinkDown", 5), ("pvcSpvcDown", 6), ("userNotAuthorized", 8), ("resourceNotAvailable", 9), ("dlciCollisionAtNni", 10))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciABitReasonToIf.setStatus('mandatory')
mscFrUniDlciABitStatusFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inactive", 0), ("active", 1), ("notApplicable", 2))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciABitStatusFromIf.setStatus('mandatory')
mscFrUniDlciABitReasonFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 7))).clone(namedValues=NamedValues(("notApplicable", 0), ("remoteUserSignaled", 1), ("localLmiError", 2), ("localLinkDown", 4), ("missingFromLmiReport", 7))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciABitReasonFromIf.setStatus('mandatory')
mscFrUniDlciLoopbackState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciLoopbackState.setStatus('mandatory')
mscFrUniDlciCalldTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 13), )
if mibBuilder.loadTexts: mscFrUniDlciCalldTable.setStatus('mandatory')
mscFrUniDlciCalldEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"))
if mibBuilder.loadTexts: mscFrUniDlciCalldEntry.setStatus('mandatory')
mscFrUniDlciCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("pvc", 0), ("svc", 1), ("spvc", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciCallType.setStatus('mandatory')
mscFrUniDlciQstate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 6, 9, 10, 11, 12, 19, 20, 61, 62))).clone(namedValues=NamedValues(("null", 0), ("callInitiated", 1), ("callProceedingSent", 3), ("callPresent", 6), ("callProceedingReceived", 9), ("active", 10), ("disconnectRequest", 11), ("disconnectIndication", 12), ("releaseRequest", 19), ("notApplicable", 20), ("restartRequest", 61), ("restart", 62)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciQstate.setStatus('mandatory')
mscFrUniDlciCallref = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciCallref.setStatus('mandatory')
mscFrUniDlciSpOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 14), )
if mibBuilder.loadTexts: mscFrUniDlciSpOpTable.setStatus('mandatory')
mscFrUniDlciSpOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"))
if mibBuilder.loadTexts: mscFrUniDlciSpOpEntry.setStatus('mandatory')
mscFrUniDlciMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciMaximumFrameSize.setStatus('mandatory')
mscFrUniDlciRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciRateEnforcement.setStatus('obsolete')
mscFrUniDlciCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 14, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciCommittedInformationRate.setStatus('mandatory')
mscFrUniDlciCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 14, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciCommittedBurstSize.setStatus('mandatory')
mscFrUniDlciExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciExcessBurstSize.setStatus('mandatory')
mscFrUniDlciMeasurementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 14, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciMeasurementInterval.setStatus('mandatory')
mscFrUniDlciRateAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("eirOnly", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciRateAdaptation.setStatus('obsolete')
mscFrUniDlciAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 14, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciAccounting.setStatus('mandatory')
mscFrUniDlciEmissionPriorityToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 14, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciEmissionPriorityToIf.setStatus('mandatory')
mscFrUniDlciTransferPriToNwk = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 14, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciTransferPriToNwk.setStatus('mandatory')
mscFrUniDlciTransferPriFromNwk = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 14, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciTransferPriFromNwk.setStatus('mandatory')
mscFrUniDlciStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15), )
if mibBuilder.loadTexts: mscFrUniDlciStatsTable.setStatus('mandatory')
mscFrUniDlciStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"))
if mibBuilder.loadTexts: mscFrUniDlciStatsEntry.setStatus('mandatory')
mscFrUniDlciFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciFrmToIf.setStatus('mandatory')
mscFrUniDlciFecnFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciFecnFrmToIf.setStatus('mandatory')
mscFrUniDlciBecnFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciBecnFrmToIf.setStatus('mandatory')
mscFrUniDlciBciToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciBciToSubnet.setStatus('mandatory')
mscFrUniDlciDeFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDeFrmToIf.setStatus('mandatory')
mscFrUniDlciDiscCongestedToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDiscCongestedToIf.setStatus('mandatory')
mscFrUniDlciDiscDeCongestedToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDiscDeCongestedToIf.setStatus('mandatory')
mscFrUniDlciFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciFrmFromIf.setStatus('mandatory')
mscFrUniDlciFecnFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciFecnFrmFromIf.setStatus('mandatory')
mscFrUniDlciBecnFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciBecnFrmFromIf.setStatus('mandatory')
mscFrUniDlciFciFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciFciFromSubnet.setStatus('mandatory')
mscFrUniDlciBciFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciBciFromSubnet.setStatus('mandatory')
mscFrUniDlciDeFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDeFrmFromIf.setStatus('mandatory')
mscFrUniDlciExcessFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciExcessFrmFromIf.setStatus('mandatory')
mscFrUniDlciDiscExcessFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDiscExcessFromIf.setStatus('mandatory')
mscFrUniDlciDiscFrameAbit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDiscFrameAbit.setStatus('mandatory')
mscFrUniDlciDiscCongestedFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDiscCongestedFromIf.setStatus('mandatory')
mscFrUniDlciDiscDeCongestedFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDiscDeCongestedFromIf.setStatus('mandatory')
mscFrUniDlciErrorShortFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciErrorShortFrmFromIf.setStatus('mandatory')
mscFrUniDlciErrorLongFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciErrorLongFrmFromIf.setStatus('mandatory')
mscFrUniDlciBecnFrmSetByService = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciBecnFrmSetByService.setStatus('mandatory')
mscFrUniDlciBytesToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciBytesToIf.setStatus('mandatory')
mscFrUniDlciDeBytesToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDeBytesToIf.setStatus('mandatory')
mscFrUniDlciDiscCongestedToIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDiscCongestedToIfBytes.setStatus('mandatory')
mscFrUniDlciDiscDeCongestedToIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDiscDeCongestedToIfBytes.setStatus('mandatory')
mscFrUniDlciBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciBytesFromIf.setStatus('mandatory')
mscFrUniDlciDeBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDeBytesFromIf.setStatus('mandatory')
mscFrUniDlciExcessBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciExcessBytesFromIf.setStatus('mandatory')
mscFrUniDlciDiscExcessFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDiscExcessFromIfBytes.setStatus('mandatory')
mscFrUniDlciDiscByteAbit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDiscByteAbit.setStatus('mandatory')
mscFrUniDlciDiscCongestedFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDiscCongestedFromIfBytes.setStatus('mandatory')
mscFrUniDlciDiscDeCongestedFromIfBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDiscDeCongestedFromIfBytes.setStatus('mandatory')
mscFrUniDlciErrorShortBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciErrorShortBytesFromIf.setStatus('mandatory')
mscFrUniDlciErrorLongBytesFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 34), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciErrorLongBytesFromIf.setStatus('mandatory')
mscFrUniDlciRateAdaptReduct = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 35), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciRateAdaptReduct.setStatus('mandatory')
mscFrUniDlciRateAdaptReductPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 36), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciRateAdaptReductPeriod.setStatus('mandatory')
mscFrUniDlciTransferPriorityToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciTransferPriorityToNetwork.setStatus('obsolete')
mscFrUniDlciTransferPriorityFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciTransferPriorityFromNetwork.setStatus('obsolete')
mscFrUniDlciCirPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 39), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciCirPresent.setStatus('mandatory')
mscFrUniDlciEirPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 15, 1, 40), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciEirPresent.setStatus('mandatory')
mscFrUniDlciIntTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16), )
if mibBuilder.loadTexts: mscFrUniDlciIntTable.setStatus('mandatory')
mscFrUniDlciIntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"))
if mibBuilder.loadTexts: mscFrUniDlciIntEntry.setStatus('mandatory')
mscFrUniDlciStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 1), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciStartTime.setStatus('mandatory')
mscFrUniDlciTotalIngressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 2), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciTotalIngressBytes.setStatus('mandatory')
mscFrUniDlciTotalEgressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 3), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciTotalEgressBytes.setStatus('mandatory')
mscFrUniDlciEirIngressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 4), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciEirIngressBytes.setStatus('mandatory')
mscFrUniDlciEirEgressBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 5), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciEirEgressBytes.setStatus('mandatory')
mscFrUniDlciDiscardedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 6), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDiscardedBytes.setStatus('mandatory')
mscFrUniDlciTotalIngressSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciTotalIngressSegFrm.setStatus('mandatory')
mscFrUniDlciTotalEgressSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciTotalEgressSegFrm.setStatus('mandatory')
mscFrUniDlciEirIngressSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciEirIngressSegFrm.setStatus('mandatory')
mscFrUniDlciEirEgressSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciEirEgressSegFrm.setStatus('mandatory')
mscFrUniDlciDiscardedSegFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDiscardedSegFrm.setStatus('mandatory')
mscFrUniDlciCirPresentObs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciCirPresentObs.setStatus('obsolete')
mscFrUniDlciEirPresentObs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciEirPresentObs.setStatus('obsolete')
mscFrUniDlciRateEnforcementPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciRateEnforcementPresent.setStatus('obsolete')
mscFrUniDlciRateAdaptationPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciRateAdaptationPresent.setStatus('obsolete')
mscFrUniDlciLocalRateAdaptOccurred = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciLocalRateAdaptOccurred.setStatus('mandatory')
mscFrUniDlciCallReferenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 17), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciCallReferenceNumber.setStatus('obsolete')
mscFrUniDlciElapsedDifference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciElapsedDifference.setStatus('mandatory')
mscFrUniDlciCallRefNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 16, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciCallRefNumber.setStatus('mandatory')
mscFrUniDlciDc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2))
mscFrUniDlciDcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 1), )
if mibBuilder.loadTexts: mscFrUniDlciDcRowStatusTable.setStatus('mandatory')
mscFrUniDlciDcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciDcIndex"))
if mibBuilder.loadTexts: mscFrUniDlciDcRowStatusEntry.setStatus('mandatory')
mscFrUniDlciDcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDcRowStatus.setStatus('mandatory')
mscFrUniDlciDcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDcComponentName.setStatus('mandatory')
mscFrUniDlciDcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciDcStorageType.setStatus('mandatory')
mscFrUniDlciDcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrUniDlciDcIndex.setStatus('mandatory')
mscFrUniDlciDcOptionsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 10), )
if mibBuilder.loadTexts: mscFrUniDlciDcOptionsTable.setStatus('mandatory')
mscFrUniDlciDcOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciDcIndex"))
if mibBuilder.loadTexts: mscFrUniDlciDcOptionsEntry.setStatus('mandatory')
mscFrUniDlciDcRemoteNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1))).clone('x121')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciDcRemoteNpi.setStatus('mandatory')
mscFrUniDlciDcRemoteDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 10, 1, 4), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciDcRemoteDna.setStatus('mandatory')
mscFrUniDlciDcRemoteDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciDcRemoteDlci.setStatus('mandatory')
mscFrUniDlciDcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("permanentMaster", 1), ("permanentSlave", 2), ("permanentBackupSlave", 3), ("permanentSlaveWithBackup", 4), ("spvcMaster", 5), ("spvcSlave", 6), ("spvcBackupSlave", 7), ("spvcSlaveWithBackup", 8))).clone('permanentMaster')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciDcType.setStatus('mandatory')
mscFrUniDlciDcTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 255))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("useDnaDefTP", 255))).clone('useDnaDefTP')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciDcTransferPriority.setStatus('mandatory')
mscFrUniDlciDcDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("useDnaDefPriority", 3))).clone('useDnaDefPriority')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciDcDiscardPriority.setStatus('mandatory')
mscFrUniDlciDcDeDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("lowest", 0), ("determinedByDiscardPriority", 1))).clone('determinedByDiscardPriority')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciDcDeDiscardPriority.setStatus('mandatory')
mscFrUniDlciDcDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("dprsOnly", 0), ("dprsMcsOnly", 1), ("dprsMcsFirst", 2), ("useDnaValue", 3))).clone('useDnaValue')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciDcDataPath.setStatus('mandatory')
mscFrUniDlciDcCugIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciDcCugIndex.setStatus('mandatory')
mscFrUniDlciDcCugType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3, 9))).clone(namedValues=NamedValues(("doNotSignal", 0), ("cug", 3), ("cugOa", 9))).clone('doNotSignal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciDcCugType.setStatus('mandatory')
mscFrUniDlciDcMapIpCosToFrQos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 10, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciDcMapIpCosToFrQos.setStatus('mandatory')
mscFrUniDlciDcNfaTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 202), )
if mibBuilder.loadTexts: mscFrUniDlciDcNfaTable.setStatus('obsolete')
mscFrUniDlciDcNfaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 202, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciDcIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciDcNfaIndex"))
if mibBuilder.loadTexts: mscFrUniDlciDcNfaEntry.setStatus('obsolete')
mscFrUniDlciDcNfaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 202, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(48, 48), )))
if mibBuilder.loadTexts: mscFrUniDlciDcNfaIndex.setStatus('obsolete')
mscFrUniDlciDcNfaValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 202, 1, 2), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciDcNfaValue.setStatus('obsolete')
mscFrUniDlciDcNfaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 2, 202, 1, 3), RowStatus()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: mscFrUniDlciDcNfaRowStatus.setStatus('obsolete')
mscFrUniDlciVc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3))
mscFrUniDlciVcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 1), )
if mibBuilder.loadTexts: mscFrUniDlciVcRowStatusTable.setStatus('mandatory')
mscFrUniDlciVcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciVcIndex"))
if mibBuilder.loadTexts: mscFrUniDlciVcRowStatusEntry.setStatus('mandatory')
mscFrUniDlciVcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcRowStatus.setStatus('mandatory')
mscFrUniDlciVcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcComponentName.setStatus('mandatory')
mscFrUniDlciVcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcStorageType.setStatus('mandatory')
mscFrUniDlciVcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrUniDlciVcIndex.setStatus('mandatory')
mscFrUniDlciVcCadTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10), )
if mibBuilder.loadTexts: mscFrUniDlciVcCadTable.setStatus('mandatory')
mscFrUniDlciVcCadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciVcIndex"))
if mibBuilder.loadTexts: mscFrUniDlciVcCadEntry.setStatus('mandatory')
mscFrUniDlciVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("svc", 0), ("pvc", 1), ("spvc", 2), ("frf10spvc", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcType.setStatus('mandatory')
mscFrUniDlciVcState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("creating", 0), ("readyP1", 1), ("dteWaitingP2", 2), ("dceWaitingP3", 3), ("dataTransferP4", 4), ("unsupportedP5", 5), ("dteClearRequestP6", 6), ("dceClearIndicationP7", 7), ("termination", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcState.setStatus('mandatory')
mscFrUniDlciVcPreviousState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("creating", 0), ("readyP1", 1), ("dteWaitingP2", 2), ("dceWaitingP3", 3), ("dataTransferP4", 4), ("unsupportedP5", 5), ("dteClearRequestP6", 6), ("dceClearIndicationP7", 7), ("termination", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcPreviousState.setStatus('mandatory')
mscFrUniDlciVcDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcDiagnosticCode.setStatus('mandatory')
mscFrUniDlciVcPreviousDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcPreviousDiagnosticCode.setStatus('mandatory')
mscFrUniDlciVcCalledNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcCalledNpi.setStatus('mandatory')
mscFrUniDlciVcCalledDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 7), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcCalledDna.setStatus('mandatory')
mscFrUniDlciVcCalledLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcCalledLcn.setStatus('mandatory')
mscFrUniDlciVcCallingNpi = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("x121", 0), ("e164", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcCallingNpi.setStatus('mandatory')
mscFrUniDlciVcCallingDna = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 10), DigitString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcCallingDna.setStatus('mandatory')
mscFrUniDlciVcCallingLcn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcCallingLcn.setStatus('mandatory')
mscFrUniDlciVcAccountingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("yes", 0), ("no", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcAccountingEnabled.setStatus('mandatory')
mscFrUniDlciVcFastSelectCall = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcFastSelectCall.setStatus('mandatory')
mscFrUniDlciVcPathReliability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("high", 0), ("normal", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcPathReliability.setStatus('mandatory')
mscFrUniDlciVcAccountingEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("callingEnd", 0), ("calledEnd", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcAccountingEnd.setStatus('mandatory')
mscFrUniDlciVcPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("high", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcPriority.setStatus('mandatory')
mscFrUniDlciVcSegmentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcSegmentSize.setStatus('mandatory')
mscFrUniDlciVcMaxSubnetPktSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcMaxSubnetPktSize.setStatus('mandatory')
mscFrUniDlciVcRcosToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1), ("multimedia", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcRcosToNetwork.setStatus('mandatory')
mscFrUniDlciVcRcosFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1), ("multimedia", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcRcosFromNetwork.setStatus('mandatory')
mscFrUniDlciVcEmissionPriorityToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("interrupting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcEmissionPriorityToNetwork.setStatus('mandatory')
mscFrUniDlciVcEmissionPriorityFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("high", 1), ("interrupting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcEmissionPriorityFromNetwork.setStatus('mandatory')
mscFrUniDlciVcDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 10, 1, 32), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcDataPath.setStatus('mandatory')
mscFrUniDlciVcIntdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 11), )
if mibBuilder.loadTexts: mscFrUniDlciVcIntdTable.setStatus('mandatory')
mscFrUniDlciVcIntdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciVcIndex"))
if mibBuilder.loadTexts: mscFrUniDlciVcIntdEntry.setStatus('mandatory')
mscFrUniDlciVcCallReferenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 11, 1, 1), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcCallReferenceNumber.setStatus('obsolete')
mscFrUniDlciVcElapsedTimeTillNow = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcElapsedTimeTillNow.setStatus('mandatory')
mscFrUniDlciVcSegmentsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcSegmentsRx.setStatus('mandatory')
mscFrUniDlciVcSegmentsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcSegmentsSent.setStatus('mandatory')
mscFrUniDlciVcStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 11, 1, 5), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcStartTime.setStatus('mandatory')
mscFrUniDlciVcCallReferenceNumberDecimal = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 11, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcCallReferenceNumberDecimal.setStatus('mandatory')
mscFrUniDlciVcFrdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12), )
if mibBuilder.loadTexts: mscFrUniDlciVcFrdTable.setStatus('mandatory')
mscFrUniDlciVcFrdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciVcIndex"))
if mibBuilder.loadTexts: mscFrUniDlciVcFrdEntry.setStatus('mandatory')
mscFrUniDlciVcFrmCongestedToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcFrmCongestedToSubnet.setStatus('mandatory')
mscFrUniDlciVcCannotForwardToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcCannotForwardToSubnet.setStatus('mandatory')
mscFrUniDlciVcNotDataXferToSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcNotDataXferToSubnet.setStatus('mandatory')
mscFrUniDlciVcOutOfRangeFrmFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcOutOfRangeFrmFromSubnet.setStatus('mandatory')
mscFrUniDlciVcCombErrorsFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcCombErrorsFromSubnet.setStatus('mandatory')
mscFrUniDlciVcDuplicatesFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcDuplicatesFromSubnet.setStatus('mandatory')
mscFrUniDlciVcNotDataXferFromSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcNotDataXferFromSubnet.setStatus('mandatory')
mscFrUniDlciVcFrmLossTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcFrmLossTimeouts.setStatus('mandatory')
mscFrUniDlciVcOoSeqByteCntExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcOoSeqByteCntExceeded.setStatus('mandatory')
mscFrUniDlciVcPeakOoSeqPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcPeakOoSeqPktCount.setStatus('mandatory')
mscFrUniDlciVcPeakOoSeqFrmForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcPeakOoSeqFrmForwarded.setStatus('mandatory')
mscFrUniDlciVcSendSequenceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcSendSequenceNumber.setStatus('mandatory')
mscFrUniDlciVcPktRetryTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcPktRetryTimeouts.setStatus('mandatory')
mscFrUniDlciVcPeakRetryQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcPeakRetryQueueSize.setStatus('mandatory')
mscFrUniDlciVcSubnetRecoveries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcSubnetRecoveries.setStatus('mandatory')
mscFrUniDlciVcOoSeqPktCntExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcOoSeqPktCntExceeded.setStatus('mandatory')
mscFrUniDlciVcPeakOoSeqByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 12, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcPeakOoSeqByteCount.setStatus('mandatory')
mscFrUniDlciVcDmepTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 417), )
if mibBuilder.loadTexts: mscFrUniDlciVcDmepTable.setStatus('mandatory')
mscFrUniDlciVcDmepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 417, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciVcIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciVcDmepValue"))
if mibBuilder.loadTexts: mscFrUniDlciVcDmepEntry.setStatus('mandatory')
mscFrUniDlciVcDmepValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 3, 417, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciVcDmepValue.setStatus('mandatory')
mscFrUniDlciSp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4))
mscFrUniDlciSpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4, 1), )
if mibBuilder.loadTexts: mscFrUniDlciSpRowStatusTable.setStatus('mandatory')
mscFrUniDlciSpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciSpIndex"))
if mibBuilder.loadTexts: mscFrUniDlciSpRowStatusEntry.setStatus('mandatory')
mscFrUniDlciSpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciSpRowStatus.setStatus('mandatory')
mscFrUniDlciSpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciSpComponentName.setStatus('mandatory')
mscFrUniDlciSpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciSpStorageType.setStatus('mandatory')
mscFrUniDlciSpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrUniDlciSpIndex.setStatus('mandatory')
mscFrUniDlciSpParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4, 11), )
if mibBuilder.loadTexts: mscFrUniDlciSpParmsTable.setStatus('mandatory')
mscFrUniDlciSpParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciSpIndex"))
if mibBuilder.loadTexts: mscFrUniDlciSpParmsEntry.setStatus('mandatory')
mscFrUniDlciSpMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187)).clone(2100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciSpMaximumFrameSize.setStatus('mandatory')
mscFrUniDlciSpRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciSpRateEnforcement.setStatus('mandatory')
mscFrUniDlciSpCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4, 11, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciSpCommittedInformationRate.setStatus('mandatory')
mscFrUniDlciSpCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4, 11, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciSpCommittedBurstSize.setStatus('mandatory')
mscFrUniDlciSpExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4, 11, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 50000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciSpExcessBurstSize.setStatus('mandatory')
mscFrUniDlciSpMeasurementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 25500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciSpMeasurementInterval.setStatus('mandatory')
mscFrUniDlciSpRateAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("eirOnly", 2), ("cirProportionate", 3))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciSpRateAdaptation.setStatus('mandatory')
mscFrUniDlciSpAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciSpAccounting.setStatus('mandatory')
mscFrUniDlciSpRaSensitivity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4, 11, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciSpRaSensitivity.setStatus('mandatory')
mscFrUniDlciSpUpdateBCI = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 4, 11, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciSpUpdateBCI.setStatus('mandatory')
mscFrUniDlciLb = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5))
mscFrUniDlciLbRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 1), )
if mibBuilder.loadTexts: mscFrUniDlciLbRowStatusTable.setStatus('mandatory')
mscFrUniDlciLbRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciLbIndex"))
if mibBuilder.loadTexts: mscFrUniDlciLbRowStatusEntry.setStatus('mandatory')
mscFrUniDlciLbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciLbRowStatus.setStatus('mandatory')
mscFrUniDlciLbComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciLbComponentName.setStatus('mandatory')
mscFrUniDlciLbStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciLbStorageType.setStatus('mandatory')
mscFrUniDlciLbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrUniDlciLbIndex.setStatus('mandatory')
mscFrUniDlciLbStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 10), )
if mibBuilder.loadTexts: mscFrUniDlciLbStatsTable.setStatus('mandatory')
mscFrUniDlciLbStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciLbIndex"))
if mibBuilder.loadTexts: mscFrUniDlciLbStatsEntry.setStatus('mandatory')
mscFrUniDlciLbLocalTotalFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciLbLocalTotalFrm.setStatus('mandatory')
mscFrUniDlciLbLocalTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciLbLocalTotalBytes.setStatus('mandatory')
mscFrUniDlciLbLocalFecnFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciLbLocalFecnFrm.setStatus('mandatory')
mscFrUniDlciLbLocalBecnFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciLbLocalBecnFrm.setStatus('mandatory')
mscFrUniDlciLbLocalDeFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciLbLocalDeFrm.setStatus('mandatory')
mscFrUniDlciLbLocalDeBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciLbLocalDeBytes.setStatus('mandatory')
mscFrUniDlciLbRemoteTotalFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciLbRemoteTotalFrm.setStatus('mandatory')
mscFrUniDlciLbRemoteTotalBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciLbRemoteTotalBytes.setStatus('mandatory')
mscFrUniDlciLbRemoteFecnFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciLbRemoteFecnFrm.setStatus('mandatory')
mscFrUniDlciLbRemoteBecnFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciLbRemoteBecnFrm.setStatus('mandatory')
mscFrUniDlciLbRemoteDeFrm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciLbRemoteDeFrm.setStatus('mandatory')
mscFrUniDlciLbRemoteDeBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 5, 10, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciLbRemoteDeBytes.setStatus('mandatory')
mscFrUniDlciEgressSp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 6))
mscFrUniDlciEgressSpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 6, 1), )
if mibBuilder.loadTexts: mscFrUniDlciEgressSpRowStatusTable.setStatus('mandatory')
mscFrUniDlciEgressSpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciEgressSpIndex"))
if mibBuilder.loadTexts: mscFrUniDlciEgressSpRowStatusEntry.setStatus('mandatory')
mscFrUniDlciEgressSpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciEgressSpRowStatus.setStatus('mandatory')
mscFrUniDlciEgressSpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciEgressSpComponentName.setStatus('mandatory')
mscFrUniDlciEgressSpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniDlciEgressSpStorageType.setStatus('mandatory')
mscFrUniDlciEgressSpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrUniDlciEgressSpIndex.setStatus('mandatory')
mscFrUniDlciEgressSpProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 6, 10), )
if mibBuilder.loadTexts: mscFrUniDlciEgressSpProvTable.setStatus('mandatory')
mscFrUniDlciEgressSpProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniDlciEgressSpIndex"))
if mibBuilder.loadTexts: mscFrUniDlciEgressSpProvEntry.setStatus('mandatory')
mscFrUniDlciEgressSpCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 6, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 50000000), ValueRangeConstraint(50000001, 50000001), )).clone(50000001)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciEgressSpCommittedInformationRate.setStatus('mandatory')
mscFrUniDlciEgressSpCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 6, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 50000000), ValueRangeConstraint(50000001, 50000001), )).clone(50000001)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciEgressSpCommittedBurstSize.setStatus('mandatory')
mscFrUniDlciEgressSpExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 50000000), ValueRangeConstraint(50000001, 50000001), )).clone(50000001)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciEgressSpExcessBurstSize.setStatus('mandatory')
mscFrUniDlciEgressSpMeasurementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 5, 6, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 25500), ValueRangeConstraint(25501, 25501), )).clone(25501)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniDlciEgressSpMeasurementInterval.setStatus('mandatory')
mscFrUniSig = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6))
mscFrUniSigRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 1), )
if mibBuilder.loadTexts: mscFrUniSigRowStatusTable.setStatus('mandatory')
mscFrUniSigRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniSigIndex"))
if mibBuilder.loadTexts: mscFrUniSigRowStatusEntry.setStatus('mandatory')
mscFrUniSigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigRowStatus.setStatus('mandatory')
mscFrUniSigComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigComponentName.setStatus('mandatory')
mscFrUniSigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigStorageType.setStatus('mandatory')
mscFrUniSigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrUniSigIndex.setStatus('mandatory')
mscFrUniSigRangeTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 11), )
if mibBuilder.loadTexts: mscFrUniSigRangeTable.setStatus('mandatory')
mscFrUniSigRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniSigIndex"))
if mibBuilder.loadTexts: mscFrUniSigRangeEntry.setStatus('mandatory')
mscFrUniSigHighestPvcDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 1007), )).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigHighestPvcDlci.setStatus('obsolete')
mscFrUniSigHighestPermanentDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 1007), )).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigHighestPermanentDlci.setStatus('obsolete')
mscFrUniSigHighestFriPvcDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 1007), )).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigHighestFriPvcDlci.setStatus('mandatory')
mscFrUniSigServParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12), )
if mibBuilder.loadTexts: mscFrUniSigServParmsTable.setStatus('mandatory')
mscFrUniSigServParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniSigIndex"))
if mibBuilder.loadTexts: mscFrUniSigServParmsEntry.setStatus('mandatory')
mscFrUniSigMaximumAggregateSvcCir = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigMaximumAggregateSvcCir.setStatus('obsolete')
mscFrUniSigMaximumAggregateSvcEir = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigMaximumAggregateSvcEir.setStatus('obsolete')
mscFrUniSigMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187)).clone(4096)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigMaximumFrameSize.setStatus('mandatory')
mscFrUniSigDefaultMaximumFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8187)).clone(2100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigDefaultMaximumFrameSize.setStatus('mandatory')
mscFrUniSigDefaultCommittedInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigDefaultCommittedInformationRate.setStatus('mandatory')
mscFrUniSigDefaultCommittedBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000)).clone(64000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigDefaultCommittedBurstSize.setStatus('mandatory')
mscFrUniSigDefaultExcessBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigDefaultExcessBurstSize.setStatus('mandatory')
mscFrUniSigUnlimitedAggregateEir = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('yes')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigUnlimitedAggregateEir.setStatus('obsolete')
mscFrUniSigRateEnforcement = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigRateEnforcement.setStatus('mandatory')
mscFrUniSigRateAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("eirOnly", 2), ("cirProportionate", 3))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigRateAdaptation.setStatus('mandatory')
mscFrUniSigMaximumAggregateSvcCirNormalQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigMaximumAggregateSvcCirNormalQ.setStatus('obsolete')
mscFrUniSigMaximumAggregateSvcCirHighQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigMaximumAggregateSvcCirHighQ.setStatus('obsolete')
mscFrUniSigMaximumAggregateSvcCirInterruptQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigMaximumAggregateSvcCirInterruptQ.setStatus('obsolete')
mscFrUniSigMaximumAggregateSvcEirNormalQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigMaximumAggregateSvcEirNormalQ.setStatus('obsolete')
mscFrUniSigMaximumAggregateSvcEirHighQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigMaximumAggregateSvcEirHighQ.setStatus('obsolete')
mscFrUniSigMaximumAggregateSvcEirInterruptQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigMaximumAggregateSvcEirInterruptQ.setStatus('obsolete')
mscFrUniSigX213IeHandling = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notSupported", 0), ("proprietary", 1))).clone('notSupported')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigX213IeHandling.setStatus('mandatory')
mscFrUniSigRaSensitivity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigRaSensitivity.setStatus('mandatory')
mscFrUniSigUpdateBCI = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigUpdateBCI.setStatus('mandatory')
mscFrUniSigDefaultLocCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 12, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigDefaultLocCheck.setStatus('mandatory')
mscFrUniSigSysParmsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 13), )
if mibBuilder.loadTexts: mscFrUniSigSysParmsTable.setStatus('mandatory')
mscFrUniSigSysParmsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniSigIndex"))
if mibBuilder.loadTexts: mscFrUniSigSysParmsEntry.setStatus('mandatory')
mscFrUniSigCallSetupTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigCallSetupTimer.setStatus('mandatory')
mscFrUniSigDisconnectTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigDisconnectTimer.setStatus('mandatory')
mscFrUniSigReleaseTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 13, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigReleaseTimer.setStatus('mandatory')
mscFrUniSigCallProceedingTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 13, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigCallProceedingTimer.setStatus('mandatory')
mscFrUniSigNetworkType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("private", 1), ("public", 2))).clone('private')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigNetworkType.setStatus('mandatory')
mscFrUniSigRestartReqTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 13, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigRestartReqTimer.setStatus('mandatory')
mscFrUniSigRestartRcvTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 13, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(110)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigRestartRcvTimer.setStatus('mandatory')
mscFrUniSigStatusEnqTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 13, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigStatusEnqTimer.setStatus('mandatory')
mscFrUniSigLapfSysTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 14), )
if mibBuilder.loadTexts: mscFrUniSigLapfSysTable.setStatus('mandatory')
mscFrUniSigLapfSysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniSigIndex"))
if mibBuilder.loadTexts: mscFrUniSigLapfSysEntry.setStatus('mandatory')
mscFrUniSigWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 14, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigWindowSize.setStatus('mandatory')
mscFrUniSigRetransmitLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 14, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 20)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigRetransmitLimit.setStatus('mandatory')
mscFrUniSigAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 14, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 10000)).clone(1500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigAckTimer.setStatus('mandatory')
mscFrUniSigAckDelayTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigAckDelayTimer.setStatus('mandatory')
mscFrUniSigIdleProbeTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 14, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 65535000)).clone(30000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigIdleProbeTimer.setStatus('mandatory')
mscFrUniSigStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 15), )
if mibBuilder.loadTexts: mscFrUniSigStateTable.setStatus('mandatory')
mscFrUniSigStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniSigIndex"))
if mibBuilder.loadTexts: mscFrUniSigStateEntry.setStatus('mandatory')
mscFrUniSigAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigAdminState.setStatus('mandatory')
mscFrUniSigOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigOperationalState.setStatus('mandatory')
mscFrUniSigUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigUsageState.setStatus('mandatory')
mscFrUniSigStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16), )
if mibBuilder.loadTexts: mscFrUniSigStatsTable.setStatus('mandatory')
mscFrUniSigStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniSigIndex"))
if mibBuilder.loadTexts: mscFrUniSigStatsEntry.setStatus('mandatory')
mscFrUniSigCurrentNumberOfSvcCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 992))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigCurrentNumberOfSvcCalls.setStatus('mandatory')
mscFrUniSigInCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 992))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigInCalls.setStatus('mandatory')
mscFrUniSigInCallsRefused = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigInCallsRefused.setStatus('mandatory')
mscFrUniSigOutCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 992))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigOutCalls.setStatus('mandatory')
mscFrUniSigOutCallsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigOutCallsFailed.setStatus('mandatory')
mscFrUniSigProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigProtocolErrors.setStatus('mandatory')
mscFrUniSigQualityOfServiceNotAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigQualityOfServiceNotAvailable.setStatus('mandatory')
mscFrUniSigSetupTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigSetupTimeout.setStatus('mandatory')
mscFrUniSigLastCauseInStatusMsgReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigLastCauseInStatusMsgReceived.setStatus('mandatory')
mscFrUniSigLastStateInStatusMsgReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63))).clone(namedValues=NamedValues(("null", 0), ("callInitiated", 1), ("n2", 2), ("outgoingCallProceeding", 3), ("n4", 4), ("n5", 5), ("callPresent", 6), ("n7", 7), ("n8", 8), ("incomingCallProceeding", 9), ("active", 10), ("disconnectRequest", 11), ("disconnectIndication", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("n16", 16), ("n17", 17), ("n18", 18), ("releaseRequest", 19), ("notApplicable", 20), ("n21", 21), ("n22", 22), ("n23", 23), ("n24", 24), ("n25", 25), ("n26", 26), ("n27", 27), ("n28", 28), ("n29", 29), ("n30", 30), ("n31", 31), ("n32", 32), ("n33", 33), ("n34", 34), ("n35", 35), ("n36", 36), ("n37", 37), ("n38", 38), ("n39", 39), ("n40", 40), ("n41", 41), ("n42", 42), ("n43", 43), ("n44", 44), ("n45", 45), ("n46", 46), ("n47", 47), ("n48", 48), ("n49", 49), ("n50", 50), ("n51", 51), ("n52", 52), ("n53", 53), ("n54", 54), ("n55", 55), ("n56", 56), ("n57", 57), ("n58", 58), ("n59", 59), ("n60", 60), ("restartRequest", 61), ("restart", 62), ("n63", 63))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigLastStateInStatusMsgReceived.setStatus('mandatory')
mscFrUniSigLastDlciReceivedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 13), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 1007), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigLastDlciReceivedStatus.setStatus('mandatory')
mscFrUniSigLastStateReceivedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 6, 9, 10, 11, 12, 19, 20, 61, 62))).clone(namedValues=NamedValues(("null", 0), ("callInitiated", 1), ("outgoingCallProceeding", 3), ("callPresent", 6), ("incomingCallProceeding", 9), ("active", 10), ("disconnectRequest", 11), ("disconnectIndication", 12), ("releaseRequest", 19), ("notApplicable", 20), ("restartRequest", 61), ("restart", 62))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigLastStateReceivedStatus.setStatus('obsolete')
mscFrUniSigLastTimeMsgBlockCongested = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 15), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigLastTimeMsgBlockCongested.setStatus('obsolete')
mscFrUniSigLastDlciWithMsgBlockCongestion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 16), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(16, 1007), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigLastDlciWithMsgBlockCongestion.setStatus('obsolete')
mscFrUniSigCurrentAggregateSvcCirNormalQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigCurrentAggregateSvcCirNormalQ.setStatus('obsolete')
mscFrUniSigCurrentAggregateSvcCirHighQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigCurrentAggregateSvcCirHighQ.setStatus('obsolete')
mscFrUniSigCurrentAggregateSvcCirInterruptQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigCurrentAggregateSvcCirInterruptQ.setStatus('obsolete')
mscFrUniSigCurrentAggregateSvcEirNormalQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigCurrentAggregateSvcEirNormalQ.setStatus('obsolete')
mscFrUniSigCurrentAggregateSvcEirHighQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigCurrentAggregateSvcEirHighQ.setStatus('obsolete')
mscFrUniSigCurrentAggregateSvcEirInterruptQ = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 16, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigCurrentAggregateSvcEirInterruptQ.setStatus('obsolete')
mscFrUniSigLapfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 17), )
if mibBuilder.loadTexts: mscFrUniSigLapfStatusTable.setStatus('mandatory')
mscFrUniSigLapfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 17, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniSigIndex"))
if mibBuilder.loadTexts: mscFrUniSigLapfStatusEntry.setStatus('mandatory')
mscFrUniSigCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 7))).clone(namedValues=NamedValues(("disconnected", 1), ("linkSetup", 2), ("disconnectRequest", 4), ("informationTransfer", 5), ("waitingAck", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigCurrentState.setStatus('mandatory')
mscFrUniSigLastStateChangeReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 5, 6, 7, 8, 9, 10, 12, 13))).clone(namedValues=NamedValues(("notStarted", 1), ("abmeEntered", 3), ("abmeReset", 5), ("dmReceived", 6), ("dmSent", 7), ("discReceived", 8), ("discSent", 9), ("frmrReceived", 10), ("n200RetranTimeOut", 12), ("other", 13))).clone('notStarted')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigLastStateChangeReason.setStatus('mandatory')
mscFrUniSigFrmrReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 17, 1, 3), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigFrmrReceive.setStatus('mandatory')
mscFrUniSigCurrentQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 17, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigCurrentQueueSize.setStatus('mandatory')
mscFrUniSigLapfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 18), )
if mibBuilder.loadTexts: mscFrUniSigLapfStatsTable.setStatus('mandatory')
mscFrUniSigLapfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 18, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniSigIndex"))
if mibBuilder.loadTexts: mscFrUniSigLapfStatsEntry.setStatus('mandatory')
mscFrUniSigStateChange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 18, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigStateChange.setStatus('mandatory')
mscFrUniSigRemoteBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 18, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigRemoteBusy.setStatus('mandatory')
mscFrUniSigReceiveRejectFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 18, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigReceiveRejectFrame.setStatus('mandatory')
mscFrUniSigAckTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 18, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigAckTimeout.setStatus('mandatory')
mscFrUniSigIFramesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 18, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigIFramesTransmitted.setStatus('mandatory')
mscFrUniSigIFramesTxDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 18, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigIFramesTxDiscarded.setStatus('mandatory')
mscFrUniSigIFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 18, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigIFramesReceived.setStatus('mandatory')
mscFrUniSigIFramesRcvdDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 18, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigIFramesRcvdDiscarded.setStatus('mandatory')
mscFrUniSigSvcaccTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 19), )
if mibBuilder.loadTexts: mscFrUniSigSvcaccTable.setStatus('mandatory')
mscFrUniSigSvcaccEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 19, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniSigIndex"))
if mibBuilder.loadTexts: mscFrUniSigSvcaccEntry.setStatus('mandatory')
mscFrUniSigDefaultAccounting = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 19, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniSigDefaultAccounting.setStatus('mandatory')
mscFrUniSigCodesTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 20), )
if mibBuilder.loadTexts: mscFrUniSigCodesTable.setStatus('mandatory')
mscFrUniSigCodesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniSigIndex"))
if mibBuilder.loadTexts: mscFrUniSigCodesEntry.setStatus('mandatory')
mscFrUniSigLastClearRemoteDataNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 20, 1, 1), DigitString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigLastClearRemoteDataNetworkAddress.setStatus('mandatory')
mscFrUniSigLastClearCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 20, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigLastClearCause.setStatus('mandatory')
mscFrUniSigLastDiagnosticCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 20, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigLastDiagnosticCode.setStatus('mandatory')
mscFrUniSigBandwidthNotAvailableTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 711), )
if mibBuilder.loadTexts: mscFrUniSigBandwidthNotAvailableTable.setStatus('mandatory')
mscFrUniSigBandwidthNotAvailableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 711, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniSigIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniSigBandwidthNotAvailableIndex"))
if mibBuilder.loadTexts: mscFrUniSigBandwidthNotAvailableEntry.setStatus('mandatory')
mscFrUniSigBandwidthNotAvailableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 711, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrUniSigBandwidthNotAvailableIndex.setStatus('mandatory')
mscFrUniSigBandwidthNotAvailableValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 6, 711, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniSigBandwidthNotAvailableValue.setStatus('mandatory')
mscFrUniVFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8))
mscFrUniVFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 1), )
if mibBuilder.loadTexts: mscFrUniVFramerRowStatusTable.setStatus('mandatory')
mscFrUniVFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniVFramerIndex"))
if mibBuilder.loadTexts: mscFrUniVFramerRowStatusEntry.setStatus('mandatory')
mscFrUniVFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniVFramerRowStatus.setStatus('mandatory')
mscFrUniVFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniVFramerComponentName.setStatus('mandatory')
mscFrUniVFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniVFramerStorageType.setStatus('mandatory')
mscFrUniVFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrUniVFramerIndex.setStatus('mandatory')
mscFrUniVFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 10), )
if mibBuilder.loadTexts: mscFrUniVFramerProvTable.setStatus('mandatory')
mscFrUniVFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniVFramerIndex"))
if mibBuilder.loadTexts: mscFrUniVFramerProvEntry.setStatus('mandatory')
mscFrUniVFramerOtherVirtualFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniVFramerOtherVirtualFramer.setStatus('mandatory')
mscFrUniVFramerLogicalProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 10, 1, 2), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniVFramerLogicalProcessor.setStatus('mandatory')
mscFrUniVFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 11), )
if mibBuilder.loadTexts: mscFrUniVFramerStateTable.setStatus('mandatory')
mscFrUniVFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniVFramerIndex"))
if mibBuilder.loadTexts: mscFrUniVFramerStateEntry.setStatus('mandatory')
mscFrUniVFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniVFramerAdminState.setStatus('mandatory')
mscFrUniVFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniVFramerOperationalState.setStatus('mandatory')
mscFrUniVFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniVFramerUsageState.setStatus('mandatory')
mscFrUniVFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 12), )
if mibBuilder.loadTexts: mscFrUniVFramerStatsTable.setStatus('mandatory')
mscFrUniVFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniVFramerIndex"))
if mibBuilder.loadTexts: mscFrUniVFramerStatsEntry.setStatus('mandatory')
mscFrUniVFramerFrmToOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 12, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniVFramerFrmToOtherVFramer.setStatus('mandatory')
mscFrUniVFramerFrmFromOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 12, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniVFramerFrmFromOtherVFramer.setStatus('mandatory')
mscFrUniVFramerOctetFromOtherVFramer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 8, 12, 1, 5), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniVFramerOctetFromOtherVFramer.setStatus('mandatory')
mscFrUniLts = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9))
mscFrUniLtsRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 1), )
if mibBuilder.loadTexts: mscFrUniLtsRowStatusTable.setStatus('mandatory')
mscFrUniLtsRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLtsIndex"))
if mibBuilder.loadTexts: mscFrUniLtsRowStatusEntry.setStatus('mandatory')
mscFrUniLtsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsRowStatus.setStatus('mandatory')
mscFrUniLtsComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLtsComponentName.setStatus('mandatory')
mscFrUniLtsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLtsStorageType.setStatus('mandatory')
mscFrUniLtsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrUniLtsIndex.setStatus('mandatory')
mscFrUniLtsSetupTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 10), )
if mibBuilder.loadTexts: mscFrUniLtsSetupTable.setStatus('mandatory')
mscFrUniLtsSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLtsIndex"))
if mibBuilder.loadTexts: mscFrUniLtsSetupEntry.setStatus('mandatory')
mscFrUniLtsDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 10, 1, 200), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsDuration.setStatus('mandatory')
mscFrUniLtsAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 10, 1, 201), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("continousBurst", 0), ("intervalBurst", 1), ("delayBurst", 2), ("fixedBurst", 3))).clone('continousBurst')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsAlgorithm.setStatus('mandatory')
mscFrUniLtsBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 10, 1, 204), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 250)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsBurstSize.setStatus('mandatory')
mscFrUniLtsTimeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 10, 1, 205), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsTimeInterval.setStatus('mandatory')
mscFrUniLtsStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 11), )
if mibBuilder.loadTexts: mscFrUniLtsStateTable.setStatus('mandatory')
mscFrUniLtsStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLtsIndex"))
if mibBuilder.loadTexts: mscFrUniLtsStateEntry.setStatus('mandatory')
mscFrUniLtsGeneratorState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 11, 1, 200), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("stopped", 0), ("running", 1))).clone('stopped')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLtsGeneratorState.setStatus('mandatory')
mscFrUniLtsCycleIncomplete = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 11, 1, 201), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLtsCycleIncomplete.setStatus('mandatory')
mscFrUniLtsLastActiveInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 11, 1, 202), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLtsLastActiveInterval.setStatus('mandatory')
mscFrUniLtsLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 11, 1, 204), FixedPoint3().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLtsLoad.setStatus('mandatory')
mscFrUniLtsElapsedGenerationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 11, 1, 205), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLtsElapsedGenerationTime.setStatus('mandatory')
mscFrUniLtsResultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 12), )
if mibBuilder.loadTexts: mscFrUniLtsResultsTable.setStatus('mandatory')
mscFrUniLtsResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLtsIndex"))
if mibBuilder.loadTexts: mscFrUniLtsResultsEntry.setStatus('mandatory')
mscFrUniLtsFramesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 12, 1, 200), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLtsFramesTx.setStatus('mandatory')
mscFrUniLtsBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 12, 1, 204), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLtsBytesTx.setStatus('mandatory')
mscFrUniLtsBitRateTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 12, 1, 208), FixedPoint3().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLtsBitRateTx.setStatus('mandatory')
mscFrUniLtsFrameRateTx = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 12, 1, 209), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLtsFrameRateTx.setStatus('mandatory')
mscFrUniLtsPat = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2))
mscFrUniLtsPatRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 1), )
if mibBuilder.loadTexts: mscFrUniLtsPatRowStatusTable.setStatus('mandatory')
mscFrUniLtsPatRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLtsIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLtsPatIndex"))
if mibBuilder.loadTexts: mscFrUniLtsPatRowStatusEntry.setStatus('mandatory')
mscFrUniLtsPatRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatRowStatus.setStatus('mandatory')
mscFrUniLtsPatComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLtsPatComponentName.setStatus('mandatory')
mscFrUniLtsPatStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLtsPatStorageType.setStatus('mandatory')
mscFrUniLtsPatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 29)))
if mibBuilder.loadTexts: mscFrUniLtsPatIndex.setStatus('mandatory')
mscFrUniLtsPatDefaultsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 10), )
if mibBuilder.loadTexts: mscFrUniLtsPatDefaultsTable.setStatus('mandatory')
mscFrUniLtsPatDefaultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLtsIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLtsPatIndex"))
if mibBuilder.loadTexts: mscFrUniLtsPatDefaultsEntry.setStatus('mandatory')
mscFrUniLtsPatDefaultDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 10, 1, 200), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatDefaultDlci.setStatus('mandatory')
mscFrUniLtsPatDefaultNumFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 10, 1, 201), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatDefaultNumFrames.setStatus('mandatory')
mscFrUniLtsPatDefaultDataSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 10, 1, 202), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8200)).clone(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatDefaultDataSize.setStatus('mandatory')
mscFrUniLtsPatDefaultHeaderBits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 10, 1, 203), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatDefaultHeaderBits.setStatus('mandatory')
mscFrUniLtsPatDefaultHeaderLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 10, 1, 204), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 4), )).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatDefaultHeaderLength.setStatus('mandatory')
mscFrUniLtsPatDefaultEABits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 10, 1, 205), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatDefaultEABits.setStatus('mandatory')
mscFrUniLtsPatDefaultPayloadPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 10, 1, 206), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 12)).clone(hexValue="55")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatDefaultPayloadPattern.setStatus('mandatory')
mscFrUniLtsPatDefaultRfc1490Header = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 10, 1, 207), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("n16", 16), ("n17", 17), ("none", 18))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatDefaultRfc1490Header.setStatus('mandatory')
mscFrUniLtsPatDefaultUseBadLrc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 10, 1, 208), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatDefaultUseBadLrc.setStatus('mandatory')
mscFrUniLtsPatSetupTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 11), )
if mibBuilder.loadTexts: mscFrUniLtsPatSetupTable.setStatus('mandatory')
mscFrUniLtsPatSetupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLtsIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLtsPatIndex"))
if mibBuilder.loadTexts: mscFrUniLtsPatSetupEntry.setStatus('mandatory')
mscFrUniLtsPatDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 11, 1, 200), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 1007)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatDlci.setStatus('mandatory')
mscFrUniLtsPatNumFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 11, 1, 201), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatNumFrames.setStatus('mandatory')
mscFrUniLtsPatDataSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 11, 1, 202), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8200)).clone(512)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatDataSize.setStatus('mandatory')
mscFrUniLtsPatHeaderBits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 11, 1, 203), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatHeaderBits.setStatus('mandatory')
mscFrUniLtsPatHeaderLength = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 11, 1, 204), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2, 4), )).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatHeaderLength.setStatus('mandatory')
mscFrUniLtsPatEaBits = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 11, 1, 205), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatEaBits.setStatus('mandatory')
mscFrUniLtsPatPayloadPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 11, 1, 206), HexString().subtype(subtypeSpec=ValueSizeConstraint(1, 12)).clone(hexValue="55")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatPayloadPattern.setStatus('mandatory')
mscFrUniLtsPatRfc1490Header = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 11, 1, 207), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4), ("n5", 5), ("n6", 6), ("n7", 7), ("n8", 8), ("n9", 9), ("n10", 10), ("n11", 11), ("n12", 12), ("n13", 13), ("n14", 14), ("n15", 15), ("n16", 16), ("n17", 17), ("none", 18))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatRfc1490Header.setStatus('mandatory')
mscFrUniLtsPatUseBadLrc = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 11, 1, 208), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatUseBadLrc.setStatus('mandatory')
mscFrUniLtsPatOpDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 12), )
if mibBuilder.loadTexts: mscFrUniLtsPatOpDataTable.setStatus('mandatory')
mscFrUniLtsPatOpDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLtsIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLtsPatIndex"))
if mibBuilder.loadTexts: mscFrUniLtsPatOpDataEntry.setStatus('mandatory')
mscFrUniLtsPatFramePattern = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 12, 1, 200), HexString().subtype(subtypeSpec=ValueSizeConstraint(20, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLtsPatFramePattern.setStatus('mandatory')
mscFrUniLtsPatHdlcBitsInserted = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 12, 1, 201), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLtsPatHdlcBitsInserted.setStatus('mandatory')
mscFrUniLtsPatOpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 13), )
if mibBuilder.loadTexts: mscFrUniLtsPatOpStateTable.setStatus('mandatory')
mscFrUniLtsPatOpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLtsIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniLtsPatIndex"))
if mibBuilder.loadTexts: mscFrUniLtsPatOpStateEntry.setStatus('mandatory')
mscFrUniLtsPatLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 13, 1, 200), FixedPoint3().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniLtsPatLoad.setStatus('mandatory')
mscFrUniLtsPatStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 9, 2, 13, 1, 201), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniLtsPatStatus.setStatus('mandatory')
mscFrUniCa = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101))
mscFrUniCaRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 1), )
if mibBuilder.loadTexts: mscFrUniCaRowStatusTable.setStatus('mandatory')
mscFrUniCaRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"))
if mibBuilder.loadTexts: mscFrUniCaRowStatusEntry.setStatus('mandatory')
mscFrUniCaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniCaRowStatus.setStatus('mandatory')
mscFrUniCaComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniCaComponentName.setStatus('mandatory')
mscFrUniCaStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniCaStorageType.setStatus('mandatory')
mscFrUniCaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscFrUniCaIndex.setStatus('mandatory')
mscFrUniCaProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 10), )
if mibBuilder.loadTexts: mscFrUniCaProvTable.setStatus('mandatory')
mscFrUniCaProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"))
if mibBuilder.loadTexts: mscFrUniCaProvEntry.setStatus('mandatory')
mscFrUniCaOverrideLinkRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 429496729))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniCaOverrideLinkRate.setStatus('mandatory')
mscFrUniCaMaximumBandwidthPerCall = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000)).clone(520000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniCaMaximumBandwidthPerCall.setStatus('mandatory')
mscFrUniCaIngressCacTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 11), )
if mibBuilder.loadTexts: mscFrUniCaIngressCacTable.setStatus('mandatory')
mscFrUniCaIngressCacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"))
if mibBuilder.loadTexts: mscFrUniCaIngressCacEntry.setStatus('mandatory')
mscFrUniCaIngressApplyToCos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("cirOnly", 1), ("cirAndEir", 2))).clone('cirOnly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniCaIngressApplyToCos.setStatus('mandatory')
mscFrUniCaIngressMaximumEirOnlyCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 992)).clone(992)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniCaIngressMaximumEirOnlyCalls.setStatus('mandatory')
mscFrUniCaEgressCacTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 12), )
if mibBuilder.loadTexts: mscFrUniCaEgressCacTable.setStatus('mandatory')
mscFrUniCaEgressCacEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"))
if mibBuilder.loadTexts: mscFrUniCaEgressCacEntry.setStatus('mandatory')
mscFrUniCaEgressApplyToCos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("cirOnly", 1), ("cirAndEir", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniCaEgressApplyToCos.setStatus('mandatory')
mscFrUniCaEgressMaximumEirOnlyCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 992)).clone(992)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniCaEgressMaximumEirOnlyCalls.setStatus('mandatory')
mscFrUniCaOpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 13), )
if mibBuilder.loadTexts: mscFrUniCaOpTable.setStatus('mandatory')
mscFrUniCaOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"))
if mibBuilder.loadTexts: mscFrUniCaOpEntry.setStatus('mandatory')
mscFrUniCaLinkRate = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniCaLinkRate.setStatus('mandatory')
mscFrUniCaNumberRejectedEgressCirPermConn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 13, 1, 681), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 992))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniCaNumberRejectedEgressCirPermConn.setStatus('mandatory')
mscFrUniCaNumberRejectedEgressEirPermConn = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 13, 1, 682), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 992))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniCaNumberRejectedEgressEirPermConn.setStatus('mandatory')
mscFrUniCaIngCirBPTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 666), )
if mibBuilder.loadTexts: mscFrUniCaIngCirBPTable.setStatus('mandatory')
mscFrUniCaIngCirBPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 666, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIngCirBPIndex"))
if mibBuilder.loadTexts: mscFrUniCaIngCirBPEntry.setStatus('mandatory')
mscFrUniCaIngCirBPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 666, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrUniCaIngCirBPIndex.setStatus('mandatory')
mscFrUniCaIngCirBPValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 666, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniCaIngCirBPValue.setStatus('mandatory')
mscFrUniCaEgCirBpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 667), )
if mibBuilder.loadTexts: mscFrUniCaEgCirBpTable.setStatus('mandatory')
mscFrUniCaEgCirBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 667, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaEgCirBpIndex"))
if mibBuilder.loadTexts: mscFrUniCaEgCirBpEntry.setStatus('mandatory')
mscFrUniCaEgCirBpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 667, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrUniCaEgCirBpIndex.setStatus('mandatory')
mscFrUniCaEgCirBpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 667, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniCaEgCirBpValue.setStatus('mandatory')
mscFrUniCaIngCirPoolAdmitBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 668), )
if mibBuilder.loadTexts: mscFrUniCaIngCirPoolAdmitBwTable.setStatus('mandatory')
mscFrUniCaIngCirPoolAdmitBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 668, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIngCirPoolAdmitBwIndex"))
if mibBuilder.loadTexts: mscFrUniCaIngCirPoolAdmitBwEntry.setStatus('mandatory')
mscFrUniCaIngCirPoolAdmitBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 668, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrUniCaIngCirPoolAdmitBwIndex.setStatus('mandatory')
mscFrUniCaIngCirPoolAdmitBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 668, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniCaIngCirPoolAdmitBwValue.setStatus('mandatory')
mscFrUniCaIngCirPoolAvailBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 669), )
if mibBuilder.loadTexts: mscFrUniCaIngCirPoolAvailBwTable.setStatus('mandatory')
mscFrUniCaIngCirPoolAvailBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 669, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIngCirPoolAvailBwIndex"))
if mibBuilder.loadTexts: mscFrUniCaIngCirPoolAvailBwEntry.setStatus('mandatory')
mscFrUniCaIngCirPoolAvailBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 669, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrUniCaIngCirPoolAvailBwIndex.setStatus('mandatory')
mscFrUniCaIngCirPoolAvailBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 669, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniCaIngCirPoolAvailBwValue.setStatus('mandatory')
mscFrUniCaEgCirPoolAdmitBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 670), )
if mibBuilder.loadTexts: mscFrUniCaEgCirPoolAdmitBwTable.setStatus('mandatory')
mscFrUniCaEgCirPoolAdmitBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 670, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaEgCirPoolAdmitBwIndex"))
if mibBuilder.loadTexts: mscFrUniCaEgCirPoolAdmitBwEntry.setStatus('mandatory')
mscFrUniCaEgCirPoolAdmitBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 670, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrUniCaEgCirPoolAdmitBwIndex.setStatus('mandatory')
mscFrUniCaEgCirPoolAdmitBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 670, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniCaEgCirPoolAdmitBwValue.setStatus('mandatory')
mscFrUniCaEgCirPoolAvailBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 671), )
if mibBuilder.loadTexts: mscFrUniCaEgCirPoolAvailBwTable.setStatus('mandatory')
mscFrUniCaEgCirPoolAvailBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 671, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaEgCirPoolAvailBwIndex"))
if mibBuilder.loadTexts: mscFrUniCaEgCirPoolAvailBwEntry.setStatus('mandatory')
mscFrUniCaEgCirPoolAvailBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 671, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrUniCaEgCirPoolAvailBwIndex.setStatus('mandatory')
mscFrUniCaEgCirPoolAvailBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 671, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniCaEgCirPoolAvailBwValue.setStatus('mandatory')
mscFrUniCaIngEirBpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 673), )
if mibBuilder.loadTexts: mscFrUniCaIngEirBpTable.setStatus('mandatory')
mscFrUniCaIngEirBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 673, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIngEirBpIndex"))
if mibBuilder.loadTexts: mscFrUniCaIngEirBpEntry.setStatus('mandatory')
mscFrUniCaIngEirBpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 673, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrUniCaIngEirBpIndex.setStatus('mandatory')
mscFrUniCaIngEirBpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 673, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniCaIngEirBpValue.setStatus('mandatory')
mscFrUniCaEgEirBpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 674), )
if mibBuilder.loadTexts: mscFrUniCaEgEirBpTable.setStatus('mandatory')
mscFrUniCaEgEirBpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 674, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaEgEirBpIndex"))
if mibBuilder.loadTexts: mscFrUniCaEgEirBpEntry.setStatus('mandatory')
mscFrUniCaEgEirBpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 674, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrUniCaEgEirBpIndex.setStatus('mandatory')
mscFrUniCaEgEirBpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 674, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniCaEgEirBpValue.setStatus('mandatory')
mscFrUniCaIngEirPoolAdmitBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 675), )
if mibBuilder.loadTexts: mscFrUniCaIngEirPoolAdmitBwTable.setStatus('mandatory')
mscFrUniCaIngEirPoolAdmitBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 675, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIngEirPoolAdmitBwIndex"))
if mibBuilder.loadTexts: mscFrUniCaIngEirPoolAdmitBwEntry.setStatus('mandatory')
mscFrUniCaIngEirPoolAdmitBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 675, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrUniCaIngEirPoolAdmitBwIndex.setStatus('mandatory')
mscFrUniCaIngEirPoolAdmitBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 675, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniCaIngEirPoolAdmitBwValue.setStatus('mandatory')
mscFrUniCaIngEirPoolAvailBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 676), )
if mibBuilder.loadTexts: mscFrUniCaIngEirPoolAvailBwTable.setStatus('mandatory')
mscFrUniCaIngEirPoolAvailBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 676, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIngEirPoolAvailBwIndex"))
if mibBuilder.loadTexts: mscFrUniCaIngEirPoolAvailBwEntry.setStatus('mandatory')
mscFrUniCaIngEirPoolAvailBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 676, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrUniCaIngEirPoolAvailBwIndex.setStatus('mandatory')
mscFrUniCaIngEirPoolAvailBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 676, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniCaIngEirPoolAvailBwValue.setStatus('mandatory')
mscFrUniCaEgEirPoolAdmitBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 677), )
if mibBuilder.loadTexts: mscFrUniCaEgEirPoolAdmitBwTable.setStatus('mandatory')
mscFrUniCaEgEirPoolAdmitBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 677, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaEgEirPoolAdmitBwIndex"))
if mibBuilder.loadTexts: mscFrUniCaEgEirPoolAdmitBwEntry.setStatus('mandatory')
mscFrUniCaEgEirPoolAdmitBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 677, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrUniCaEgEirPoolAdmitBwIndex.setStatus('mandatory')
mscFrUniCaEgEirPoolAdmitBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 677, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 520000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniCaEgEirPoolAdmitBwValue.setStatus('mandatory')
mscFrUniCaEgEirPoolAvailBwTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 678), )
if mibBuilder.loadTexts: mscFrUniCaEgEirPoolAvailBwTable.setStatus('mandatory')
mscFrUniCaEgEirPoolAvailBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 678, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaEgEirPoolAvailBwIndex"))
if mibBuilder.loadTexts: mscFrUniCaEgEirPoolAvailBwEntry.setStatus('mandatory')
mscFrUniCaEgEirPoolAvailBwIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 678, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrUniCaEgEirPoolAvailBwIndex.setStatus('mandatory')
mscFrUniCaEgEirPoolAvailBwValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 678, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 52000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniCaEgEirPoolAvailBwValue.setStatus('mandatory')
mscFrUniCaTpm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 2))
mscFrUniCaTpmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 2, 1), )
if mibBuilder.loadTexts: mscFrUniCaTpmRowStatusTable.setStatus('mandatory')
mscFrUniCaTpmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaTpmIndex"))
if mibBuilder.loadTexts: mscFrUniCaTpmRowStatusEntry.setStatus('mandatory')
mscFrUniCaTpmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniCaTpmRowStatus.setStatus('mandatory')
mscFrUniCaTpmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniCaTpmComponentName.setStatus('mandatory')
mscFrUniCaTpmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscFrUniCaTpmStorageType.setStatus('mandatory')
mscFrUniCaTpmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscFrUniCaTpmIndex.setStatus('mandatory')
mscFrUniCaTpmProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 2, 10), )
if mibBuilder.loadTexts: mscFrUniCaTpmProvTable.setStatus('mandatory')
mscFrUniCaTpmProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaIndex"), (0, "Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", "mscFrUniCaTpmIndex"))
if mibBuilder.loadTexts: mscFrUniCaTpmProvEntry.setStatus('mandatory')
mscFrUniCaTpmAssignedIngressBandwidthPool = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 15), ValueRangeConstraint(16, 16), )).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniCaTpmAssignedIngressBandwidthPool.setStatus('mandatory')
mscFrUniCaTpmAssignedEgressBandwidthPool = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 71, 101, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 15), ValueRangeConstraint(16, 16), )).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscFrUniCaTpmAssignedEgressBandwidthPool.setStatus('mandatory')
frameRelayUniGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 24, 1))
frameRelayUniGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 24, 1, 1))
frameRelayUniGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 24, 1, 1, 3))
frameRelayUniGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 24, 1, 1, 3, 2))
frameRelayUniCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 24, 3))
frameRelayUniCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 24, 3, 1))
frameRelayUniCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 24, 3, 1, 3))
frameRelayUniCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 24, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", mscFrUniDlciVcRcosToNetwork=mscFrUniDlciVcRcosToNetwork, mscFrUniSigMaximumAggregateSvcCir=mscFrUniSigMaximumAggregateSvcCir, frameRelayUniCapabilitiesCA02A=frameRelayUniCapabilitiesCA02A, mscFrUniDlciSpRateAdaptation=mscFrUniDlciSpRateAdaptation, mscFrUniCaEgCirPoolAvailBwValue=mscFrUniCaEgCirPoolAvailBwValue, mscFrUniDlciBytesToIf=mscFrUniDlciBytesToIf, mscFrUniSigRangeEntry=mscFrUniSigRangeEntry, mscFrUniVFramerProvTable=mscFrUniVFramerProvTable, mscFrUniCaOpTable=mscFrUniCaOpTable, mscFrUniDlciBciFromSubnet=mscFrUniDlciBciFromSubnet, mscFrUniDlciEgressSpRowStatus=mscFrUniDlciEgressSpRowStatus, mscFrUniDnaDataNetworkAddress=mscFrUniDnaDataNetworkAddress, mscFrUniDnaHgMHgAddrIndex=mscFrUniDnaHgMHgAddrIndex, mscFrUniLtsLoad=mscFrUniLtsLoad, mscFrUniDlciDcNfaValue=mscFrUniDlciDcNfaValue, mscFrUniLmiStatsTable=mscFrUniLmiStatsTable, mscFrUniFramerOverruns=mscFrUniFramerOverruns, mscFrUniFramerFrmModeErrors=mscFrUniFramerFrmModeErrors, mscFrUniCaTpmRowStatus=mscFrUniCaTpmRowStatus, mscFrUniDlciVc=mscFrUniDlciVc, mscFrUniSigHighestFriPvcDlci=mscFrUniSigHighestFriPvcDlci, mscFrUniDlciVcCallReferenceNumberDecimal=mscFrUniDlciVcCallReferenceNumberDecimal, mscFrUniSigIFramesReceived=mscFrUniSigIFramesReceived, mscFrUniDlciTransferPriorityToNetwork=mscFrUniDlciTransferPriorityToNetwork, mscFrUniDlciSpRowStatusEntry=mscFrUniDlciSpRowStatusEntry, mscFrUniDnaCugRowStatusEntry=mscFrUniDnaCugRowStatusEntry, mscFrUniCaEgEirPoolAvailBwEntry=mscFrUniCaEgEirPoolAvailBwEntry, mscFrUniCaEgCirPoolAdmitBwValue=mscFrUniCaEgCirPoolAdmitBwValue, mscFrUniSigRowStatusEntry=mscFrUniSigRowStatusEntry, mscFrUniDlciFrmToIf=mscFrUniDlciFrmToIf, mscFrUniLmiStateTable=mscFrUniLmiStateTable, mscFrUniDnaOutPathSensitivityOverRide=mscFrUniDnaOutPathSensitivityOverRide, mscFrUniIfEntryEntry=mscFrUniIfEntryEntry, mscFrUniDnaHgMAvailableDlcis=mscFrUniDnaHgMAvailableDlcis, mscFrUniCaIngressApplyToCos=mscFrUniCaIngressApplyToCos, mscFrUniSigStatusEnqTimer=mscFrUniSigStatusEnqTimer, mscFrUniDlciDcType=mscFrUniDlciDcType, mscFrUniDlciVcRowStatusTable=mscFrUniDlciVcRowStatusTable, mscFrUniFramerDataInversion=mscFrUniFramerDataInversion, mscFrUniDlciBytesFromIf=mscFrUniDlciBytesFromIf, mscFrUniSigServParmsEntry=mscFrUniSigServParmsEntry, mscFrUniDnaRowStatusTable=mscFrUniDnaRowStatusTable, mscFrUniDlciDcOptionsTable=mscFrUniDlciDcOptionsTable, mscFrUniStandbyStatus=mscFrUniStandbyStatus, mscFrUniLmiFullStatusEnqToIf=mscFrUniLmiFullStatusEnqToIf, mscFrUniCaIngCirPoolAvailBwIndex=mscFrUniCaIngCirPoolAvailBwIndex, mscFrUniFramerOperationalState=mscFrUniFramerOperationalState, mscFrUniSigStorageType=mscFrUniSigStorageType, mscFrUniSigOperationalState=mscFrUniSigOperationalState, mscFrUniDlciLbRemoteDeFrm=mscFrUniDlciLbRemoteDeFrm, mscFrUniDlciDcRemoteDlci=mscFrUniDlciDcRemoteDlci, mscFrUniDnaHgMOpTable=mscFrUniDnaHgMOpTable, mscFrUniUsageState=mscFrUniUsageState, mscFrUniVFramerRowStatus=mscFrUniVFramerRowStatus, mscFrUniDlciDcNfaRowStatus=mscFrUniDlciDcNfaRowStatus, mscFrUniCaIngEirBpIndex=mscFrUniCaIngEirBpIndex, mscFrUniDlciAvailabilityStatus=mscFrUniDlciAvailabilityStatus, mscFrUniCaTpmProvEntry=mscFrUniCaTpmProvEntry, mscFrUniNumberOfEmissionQs=mscFrUniNumberOfEmissionQs, mscFrUniVFramerStatsEntry=mscFrUniVFramerStatsEntry, mscFrUniLtsPat=mscFrUniLtsPat, mscFrUniLtsLastActiveInterval=mscFrUniLtsLastActiveInterval, mscFrUniCaTpmAssignedIngressBandwidthPool=mscFrUniCaTpmAssignedIngressBandwidthPool, mscFrUniLmiStorageType=mscFrUniLmiStorageType, mscFrUniDlciStatsEntry=mscFrUniDlciStatsEntry, mscFrUniLtsTimeInterval=mscFrUniLtsTimeInterval, mscFrUniLmiAsyncStatusReport=mscFrUniLmiAsyncStatusReport, mscFrUniSigHighestPermanentDlci=mscFrUniSigHighestPermanentDlci, mscFrUniLmiUnexpectedReports=mscFrUniLmiUnexpectedReports, mscFrUniLmiParmsEntry=mscFrUniLmiParmsEntry, mscFrUniDlciExcessFrmFromIf=mscFrUniDlciExcessFrmFromIf, mscFrUniLtsPatPayloadPattern=mscFrUniLtsPatPayloadPattern, mscFrUniCaIngEirPoolAdmitBwTable=mscFrUniCaIngEirPoolAdmitBwTable, mscFrUniIndex=mscFrUniIndex, mscFrUniLtsPatDataSize=mscFrUniLtsPatDataSize, mscFrUniSigOutCalls=mscFrUniSigOutCalls, mscFrUniDlciVcCallingNpi=mscFrUniDlciVcCallingNpi, mscFrUniLmiUnexpectedIes=mscFrUniLmiUnexpectedIes, mscFrUniCaIngEirPoolAvailBwTable=mscFrUniCaIngEirPoolAvailBwTable, mscFrUniFramerStatsTable=mscFrUniFramerStatsTable, mscFrUniDlciLbStatsEntry=mscFrUniDlciLbStatsEntry, mscFrUniDnaHgMMaximumAvailableAggregateCir=mscFrUniDnaHgMMaximumAvailableAggregateCir, mscFrUniSigRestartReqTimer=mscFrUniSigRestartReqTimer, mscFrUniDnaHgMAvailabilityDelta=mscFrUniDnaHgMAvailabilityDelta, mscFrUniCaIngEirPoolAdmitBwValue=mscFrUniCaIngEirPoolAdmitBwValue, mscFrUniLmiFullStatusEnqFromIf=mscFrUniLmiFullStatusEnqFromIf, mscFrUniDnaCugType=mscFrUniDnaCugType, mscFrUniSigDefaultExcessBurstSize=mscFrUniSigDefaultExcessBurstSize, mscFrUniLtsStateEntry=mscFrUniLtsStateEntry, mscFrUniDlciDcTransferPriority=mscFrUniDlciDcTransferPriority, mscFrUniDnaAddressTable=mscFrUniDnaAddressTable, mscFrUniDlciABitReasonToIf=mscFrUniDlciABitReasonToIf, mscFrUniDlciDeBytesToIf=mscFrUniDlciDeBytesToIf, mscFrUniDnaHgMIfTable=mscFrUniDnaHgMIfTable, mscFrUniDlciUnknownStatus=mscFrUniDlciUnknownStatus, mscFrUniSigDefaultCommittedBurstSize=mscFrUniSigDefaultCommittedBurstSize, mscFrUniDlciDcStorageType=mscFrUniDlciDcStorageType, mscFrUniDlciRateAdaptation=mscFrUniDlciRateAdaptation, mscFrUniDnaOutDefaultPriority=mscFrUniDnaOutDefaultPriority, mscFrUniDnaHgMIfEntry=mscFrUniDnaHgMIfEntry, mscFrUniLmiErrorEventThreshold=mscFrUniLmiErrorEventThreshold, mscFrUniLtsComponentName=mscFrUniLtsComponentName, frameRelayUniGroupCA=frameRelayUniGroupCA, mscFrUniSigCurrentNumberOfSvcCalls=mscFrUniSigCurrentNumberOfSvcCalls, mscFrUniDlciBciToSubnet=mscFrUniDlciBciToSubnet, mscFrUniDlciDiscCongestedFromIfBytes=mscFrUniDlciDiscCongestedFromIfBytes, mscFrUniSigComponentName=mscFrUniSigComponentName, mscFrUniCa=mscFrUniCa, mscFrUniDlciDcRowStatusEntry=mscFrUniDlciDcRowStatusEntry, mscFrUniDlciVcAccountingEnd=mscFrUniDlciVcAccountingEnd, mscFrUniDnaHgMHgAddrDataNetworkAddress=mscFrUniDnaHgMHgAddrDataNetworkAddress, mscFrUniDlciEgressSpCommittedBurstSize=mscFrUniDlciEgressSpCommittedBurstSize, mscFrUniDlciSpStorageType=mscFrUniDlciSpStorageType, mscFrUniSigBandwidthNotAvailableValue=mscFrUniSigBandwidthNotAvailableValue, mscFrUniVFramerAdminState=mscFrUniVFramerAdminState, mscFrUniCaTpm=mscFrUniCaTpm, mscFrUniFramerInterfaceName=mscFrUniFramerInterfaceName, mscFrUniSigSetupTimeout=mscFrUniSigSetupTimeout, mscFrUniDlciVcFastSelectCall=mscFrUniDlciVcFastSelectCall, mscFrUniDlciVcCalledLcn=mscFrUniDlciVcCalledLcn, mscFrUniSigCurrentAggregateSvcCirNormalQ=mscFrUniSigCurrentAggregateSvcCirNormalQ, mscFrUniDnaHgMHgAddrNumberingPlanIndicator=mscFrUniDnaHgMHgAddrNumberingPlanIndicator, mscFrUniCaEgEirBpIndex=mscFrUniCaEgEirBpIndex, mscFrUniDlciEirEgressBytes=mscFrUniDlciEirEgressBytes, mscFrUniSigStateChange=mscFrUniSigStateChange, mscFrUniDnaOutgoingOptionsEntry=mscFrUniDnaOutgoingOptionsEntry, mscFrUniVFramerOctetFromOtherVFramer=mscFrUniVFramerOctetFromOtherVFramer, mscFrUniDlciTransferPriorityFromNetwork=mscFrUniDlciTransferPriorityFromNetwork, mscFrUniLtsPatDlci=mscFrUniLtsPatDlci, mscFrUniCaTpmRowStatusEntry=mscFrUniCaTpmRowStatusEntry, mscFrUniDlciLoopbackState=mscFrUniDlciLoopbackState, mscFrUniDlciVcCalledDna=mscFrUniDlciVcCalledDna, mscFrUniSigLapfSysEntry=mscFrUniSigLapfSysEntry, mscFrUniLmiProtocolStatus=mscFrUniLmiProtocolStatus, mscFrUniCaEgressMaximumEirOnlyCalls=mscFrUniCaEgressMaximumEirOnlyCalls, mscFrUniDlciSpOpEntry=mscFrUniDlciSpOpEntry, mscFrUniDnaDefaultTransferPriority=mscFrUniDnaDefaultTransferPriority, mscFrUniStatsTable=mscFrUniStatsTable, mscFrUniSigAckTimer=mscFrUniSigAckTimer, mscFrUniVFramer=mscFrUniVFramer, mscFrUniDlciEgressSpIndex=mscFrUniDlciEgressSpIndex, mscFrUniDlciVcAccountingEnabled=mscFrUniDlciVcAccountingEnabled, mscFrUniLtsDuration=mscFrUniLtsDuration, mscFrUniSigCurrentAggregateSvcCirInterruptQ=mscFrUniSigCurrentAggregateSvcCirInterruptQ, mscFrUniSigAckDelayTimer=mscFrUniSigAckDelayTimer, mscFrUniDlciAccounting=mscFrUniDlciAccounting, mscFrUniDlciStatsTable=mscFrUniDlciStatsTable, mscFrUniDlciQstate=mscFrUniDlciQstate, mscFrUniCaEgressApplyToCos=mscFrUniCaEgressApplyToCos, mscFrUniSigSysParmsTable=mscFrUniSigSysParmsTable, mscFrUniDlciDcCugType=mscFrUniDlciDcCugType, mscFrUniDlciRowStatus=mscFrUniDlciRowStatus, mscFrUniEmissionPriorityQsEntry=mscFrUniEmissionPriorityQsEntry, mscFrUniDlciDcDataPath=mscFrUniDlciDcDataPath, mscFrUniCaTpmAssignedEgressBandwidthPool=mscFrUniCaTpmAssignedEgressBandwidthPool, mscFrUniCaIngEirPoolAvailBwValue=mscFrUniCaIngEirPoolAvailBwValue, mscFrUniFramerFrmFromIf=mscFrUniFramerFrmFromIf, mscFrUniLtsCycleIncomplete=mscFrUniLtsCycleIncomplete, mscFrUniDlciVcDmepValue=mscFrUniDlciVcDmepValue, mscFrUniLtsSetupTable=mscFrUniLtsSetupTable, mscFrUniLtsPatDefaultPayloadPattern=mscFrUniLtsPatDefaultPayloadPattern, mscFrUniDlciVcPathReliability=mscFrUniDlciVcPathReliability, mscFrUniSigOutCallsFailed=mscFrUniSigOutCallsFailed, mscFrUniLtsElapsedGenerationTime=mscFrUniLtsElapsedGenerationTime, mscFrUniDlciSpIndex=mscFrUniDlciSpIndex, mscFrUniSigLastDlciWithMsgBlockCongestion=mscFrUniSigLastDlciWithMsgBlockCongestion, mscFrUniLtsRowStatusTable=mscFrUniLtsRowStatusTable, mscFrUniDlciVcFrmLossTimeouts=mscFrUniDlciVcFrmLossTimeouts, mscFrUniLmiKeepAliveStatusToIf=mscFrUniLmiKeepAliveStatusToIf, mscFrUniDlciLbRemoteDeBytes=mscFrUniDlciLbRemoteDeBytes, mscFrUniCaIngCirPoolAvailBwEntry=mscFrUniCaIngCirPoolAvailBwEntry, mscFrUniLtsPatDefaultDataSize=mscFrUniLtsPatDefaultDataSize, mscFrUniLastUnknownDlci=mscFrUniLastUnknownDlci, mscFrUniDlciSpMaximumFrameSize=mscFrUniDlciSpMaximumFrameSize, mscFrUniInvalidHeaderFramesFromIf=mscFrUniInvalidHeaderFramesFromIf, mscFrUniLtsPatSetupEntry=mscFrUniLtsPatSetupEntry, mscFrUniSigReceiveRejectFrame=mscFrUniSigReceiveRejectFrame, mscFrUniDlciVcOutOfRangeFrmFromSubnet=mscFrUniDlciVcOutOfRangeFrmFromSubnet, mscFrUniSigSvcaccTable=mscFrUniSigSvcaccTable, mscFrUniDlciDiscDeCongestedFromIf=mscFrUniDlciDiscDeCongestedFromIf, mscFrUniVFramerComponentName=mscFrUniVFramerComponentName, mscFrUniLtsPatRowStatusTable=mscFrUniLtsPatRowStatusTable, mscFrUniControlStatus=mscFrUniControlStatus, mscFrUniLmiRowStatus=mscFrUniLmiRowStatus, mscFrUniAdminState=mscFrUniAdminState, mscFrUniUnknownDlciFramesFromIf=mscFrUniUnknownDlciFramesFromIf, mscFrUniDnaComponentName=mscFrUniDnaComponentName, mscFrUniSigMaximumAggregateSvcCirInterruptQ=mscFrUniSigMaximumAggregateSvcCirInterruptQ, mscFrUniVFramerLogicalProcessor=mscFrUniVFramerLogicalProcessor, mscFrUniSigMaximumAggregateSvcCirHighQ=mscFrUniSigMaximumAggregateSvcCirHighQ, mscFrUniCaIngEirBpTable=mscFrUniCaIngEirBpTable, mscFrUniFrmToIfByQueueTable=mscFrUniFrmToIfByQueueTable, mscFrUniDlciVcRowStatusEntry=mscFrUniDlciVcRowStatusEntry, mscFrUniSigProtocolErrors=mscFrUniSigProtocolErrors, mscFrUniCaEgCirBpTable=mscFrUniCaEgCirBpTable, mscFrUniLmiFullStatusToIf=mscFrUniLmiFullStatusToIf, mscFrUniDlciVcFrdEntry=mscFrUniDlciVcFrdEntry, mscFrUniSigX213IeHandling=mscFrUniSigX213IeHandling, mscFrUniDlciCallref=mscFrUniDlciCallref, mscFrUniCaEgEirBpEntry=mscFrUniCaEgEirBpEntry, mscFrUniDna=mscFrUniDna, mscFrUniLtsPatDefaultsEntry=mscFrUniLtsPatDefaultsEntry, mscFrUniDlciStateTable=mscFrUniDlciStateTable, mscFrUniFramerLinkEntry=mscFrUniFramerLinkEntry, mscFrUniCaComponentName=mscFrUniCaComponentName, mscFrUniDlciVcSegmentSize=mscFrUniDlciVcSegmentSize, mscFrUniDnaIncAccess=mscFrUniDnaIncAccess, mscFrUniDnaHgMHgAddrComponentName=mscFrUniDnaHgMHgAddrComponentName, mscFrUniDlciVcPeakOoSeqByteCount=mscFrUniDlciVcPeakOoSeqByteCount, mscFrUniDnaHgMHgAddr=mscFrUniDnaHgMHgAddr, mscFrUniLtsPatDefaultUseBadLrc=mscFrUniLtsPatDefaultUseBadLrc, mscFrUniDlciLbLocalFecnFrm=mscFrUniDlciLbLocalFecnFrm, mscFrUniDlciVcDiagnosticCode=mscFrUniDlciVcDiagnosticCode, mscFrUniProceduralStatus=mscFrUniProceduralStatus, mscFrUniDlciSpMeasurementInterval=mscFrUniDlciSpMeasurementInterval, mscFrUniDlciLbRowStatusTable=mscFrUniDlciLbRowStatusTable, mscFrUniLtsPatHdlcBitsInserted=mscFrUniLtsPatHdlcBitsInserted, mscFrUniDnaCug=mscFrUniDnaCug, mscFrUniDlciDcRemoteNpi=mscFrUniDlciDcRemoteNpi, mscFrUniSigCurrentAggregateSvcEirHighQ=mscFrUniSigCurrentAggregateSvcEirHighQ, mscFrUniSigLastTimeMsgBlockCongested=mscFrUniSigLastTimeMsgBlockCongested, mscFrUniDlciIntEntry=mscFrUniDlciIntEntry, mscFrUniDlciVcSubnetRecoveries=mscFrUniDlciVcSubnetRecoveries, mscFrUniVFramerIndex=mscFrUniVFramerIndex, mscFrUniLmiAdminState=mscFrUniLmiAdminState, mscFrUniDlciDiscCongestedToIf=mscFrUniDlciDiscCongestedToIf, mscFrUniDlciVcPriority=mscFrUniDlciVcPriority, mscFrUniLtsPatSetupTable=mscFrUniLtsPatSetupTable, mscFrUniDlciVcRowStatus=mscFrUniDlciVcRowStatus, mscFrUniDlciLbLocalTotalFrm=mscFrUniDlciLbLocalTotalFrm, mscFrUniLmiParmsTable=mscFrUniLmiParmsTable, mscFrUniDlciLbLocalTotalBytes=mscFrUniDlciLbLocalTotalBytes, mscFrUniDlciCalldTable=mscFrUniDlciCalldTable, mscFrUniLmiPvcConfigParmsInFsr=mscFrUniLmiPvcConfigParmsInFsr, mscFrUniDnaAccountClass=mscFrUniDnaAccountClass, mscFrUniLtsResultsEntry=mscFrUniLtsResultsEntry, mscFrUniCaTpmComponentName=mscFrUniCaTpmComponentName, mscFrUniDlciLbRemoteFecnFrm=mscFrUniDlciLbRemoteFecnFrm, mscFrUniLmiRowStatusEntry=mscFrUniLmiRowStatusEntry, mscFrUniCaIngEirPoolAdmitBwIndex=mscFrUniCaIngEirPoolAdmitBwIndex, mscFrUniCaMaximumBandwidthPerCall=mscFrUniCaMaximumBandwidthPerCall, mscFrUniDnaCallOptionsEntry=mscFrUniDnaCallOptionsEntry, mscFrUniFramerLargeFrmErrors=mscFrUniFramerLargeFrmErrors, mscFrUniLtsBytesTx=mscFrUniLtsBytesTx, mscFrUniLtsPatDefaultDlci=mscFrUniLtsPatDefaultDlci, mscFrUniFramerStateEntry=mscFrUniFramerStateEntry, mscFrUniDlciSpCommittedBurstSize=mscFrUniDlciSpCommittedBurstSize, mscFrUniSigSysParmsEntry=mscFrUniSigSysParmsEntry, mscFrUniDnaHgMRowStatus=mscFrUniDnaHgMRowStatus, mscFrUniDlciVcCadEntry=mscFrUniDlciVcCadEntry, mscFrUniDlciEgressSpStorageType=mscFrUniDlciEgressSpStorageType, mscFrUniDlciErrorLongFrmFromIf=mscFrUniDlciErrorLongFrmFromIf, mscFrUniCaIngCirPoolAvailBwTable=mscFrUniCaIngCirPoolAvailBwTable, mscFrUniCaEgEirPoolAvailBwValue=mscFrUniCaEgEirPoolAvailBwValue)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", mscFrUniSigLapfSysTable=mscFrUniSigLapfSysTable, mscFrUniDlciLbRowStatusEntry=mscFrUniDlciLbRowStatusEntry, mscFrUniVFramerRowStatusEntry=mscFrUniVFramerRowStatusEntry, mscFrUniDlciVcCannotForwardToSubnet=mscFrUniDlciVcCannotForwardToSubnet, mscFrUniCaIngressCacTable=mscFrUniCaIngressCacTable, mscFrUniDlciEgressSpMeasurementInterval=mscFrUniDlciEgressSpMeasurementInterval, mscFrUniSigLastStateInStatusMsgReceived=mscFrUniSigLastStateInStatusMsgReceived, mscFrUniSigBandwidthNotAvailableEntry=mscFrUniSigBandwidthNotAvailableEntry, mscFrUniDnaIncomingOptionsTable=mscFrUniDnaIncomingOptionsTable, mscFrUniLtsPatComponentName=mscFrUniLtsPatComponentName, mscFrUniDlciVcStorageType=mscFrUniDlciVcStorageType, mscFrUniCaEgCirPoolAdmitBwTable=mscFrUniCaEgCirPoolAdmitBwTable, mscFrUniDlciCallRefNumber=mscFrUniDlciCallRefNumber, mscFrUniSigSvcaccEntry=mscFrUniSigSvcaccEntry, mscFrUniSigCurrentAggregateSvcEirInterruptQ=mscFrUniSigCurrentAggregateSvcEirInterruptQ, mscFrUniDlciRateEnforcementPresent=mscFrUniDlciRateEnforcementPresent, mscFrUniDlciDiscDeCongestedToIfBytes=mscFrUniDlciDiscDeCongestedToIfBytes, mscFrUniSigUsageState=mscFrUniSigUsageState, mscFrUniSigQualityOfServiceNotAvailable=mscFrUniSigQualityOfServiceNotAvailable, mscFrUniDnaHgMHgAddrAddrTable=mscFrUniDnaHgMHgAddrAddrTable, mscFrUniSigStateEntry=mscFrUniSigStateEntry, mscFrUniCaIngCirBPEntry=mscFrUniCaIngCirBPEntry, mscFrUniDlciRateAdaptReduct=mscFrUniDlciRateAdaptReduct, mscFrUniDnaCugRowStatus=mscFrUniDnaCugRowStatus, mscFrUniLtsPatRfc1490Header=mscFrUniLtsPatRfc1490Header, mscFrUniLtsStateTable=mscFrUniLtsStateTable, mscFrUniDnaHgMHgAddrRowStatus=mscFrUniDnaHgMHgAddrRowStatus, mscFrUniDnaOutDefaultPathSensitivity=mscFrUniDnaOutDefaultPathSensitivity, mscFrUniCaIngEirPoolAvailBwEntry=mscFrUniCaIngEirPoolAvailBwEntry, mscFrUniLtsPatDefaultRfc1490Header=mscFrUniLtsPatDefaultRfc1490Header, mscFrUniDlciDeFrmToIf=mscFrUniDlciDeFrmToIf, mscFrUniDlciVcPeakRetryQueueSize=mscFrUniDlciVcPeakRetryQueueSize, mscFrUniCaIngCirPoolAvailBwValue=mscFrUniCaIngCirPoolAvailBwValue, mscFrUniFramerAdminState=mscFrUniFramerAdminState, mscFrUniLtsPatHeaderBits=mscFrUniLtsPatHeaderBits, mscFrUniDlciLbStorageType=mscFrUniDlciLbStorageType, mscFrUniCaProvTable=mscFrUniCaProvTable, mscFrUniDlciExcessBytesFromIf=mscFrUniDlciExcessBytesFromIf, mscFrUniLtsSetupEntry=mscFrUniLtsSetupEntry, mscFrUniDlciRateAdaptationPresent=mscFrUniDlciRateAdaptationPresent, mscFrUniSigUpdateBCI=mscFrUniSigUpdateBCI, mscFrUniDlciEirIngressSegFrm=mscFrUniDlciEirIngressSegFrm, mscFrUniLtsPatOpStateEntry=mscFrUniLtsPatOpStateEntry, mscFrUniDlciAbitEntry=mscFrUniDlciAbitEntry, mscFrUniDlciDcRowStatusTable=mscFrUniDlciDcRowStatusTable, mscFrUniDnaHgMRowStatusEntry=mscFrUniDnaHgMRowStatusEntry, mscFrUniLmiKeepAliveStatusEnqFromIf=mscFrUniLmiKeepAliveStatusEnqFromIf, mscFrUniLmiSequenceErrors=mscFrUniLmiSequenceErrors, mscFrUniDlciTotalIngressBytes=mscFrUniDlciTotalIngressBytes, mscFrUniSigDefaultMaximumFrameSize=mscFrUniSigDefaultMaximumFrameSize, mscFrUniVFramerStatsTable=mscFrUniVFramerStatsTable, mscFrUniDlciDiscFrameAbit=mscFrUniDlciDiscFrameAbit, mscFrUniDlciVcType=mscFrUniDlciVcType, mscFrUniLmiUspParmsTable=mscFrUniLmiUspParmsTable, mscFrUniFramerStatsEntry=mscFrUniFramerStatsEntry, mscFrUniDlciVcIndex=mscFrUniDlciVcIndex, mscFrUniLtsStorageType=mscFrUniLtsStorageType, mscFrUniSigRowStatus=mscFrUniSigRowStatus, mscFrUniDnaHgM=mscFrUniDnaHgM, mscFrUniFramerUtilTable=mscFrUniFramerUtilTable, mscFrUniDlciVcMaxSubnetPktSize=mscFrUniDlciVcMaxSubnetPktSize, mscFrUniDlciCallReferenceNumber=mscFrUniDlciCallReferenceNumber, mscFrUniFramerLrcErrors=mscFrUniFramerLrcErrors, mscFrUniSigCurrentAggregateSvcEirNormalQ=mscFrUniSigCurrentAggregateSvcEirNormalQ, mscFrUniRowStatus=mscFrUniRowStatus, mscFrUniDlciABitStatusToIf=mscFrUniDlciABitStatusToIf, mscFrUniSigRaSensitivity=mscFrUniSigRaSensitivity, mscFrUniDlciIndex=mscFrUniDlciIndex, mscFrUniDlciDeFrmFromIf=mscFrUniDlciDeFrmFromIf, mscFrUniDlciVcDmepEntry=mscFrUniDlciVcDmepEntry, mscFrUniLtsPatNumFrames=mscFrUniLtsPatNumFrames, mscFrUniSigMaximumAggregateSvcEirInterruptQ=mscFrUniSigMaximumAggregateSvcEirInterruptQ, mscFrUniSigFrmrReceive=mscFrUniSigFrmrReceive, mscFrUniLmi=mscFrUniLmi, mscFrUniLmiPollingVerifTimeouts=mscFrUniLmiPollingVerifTimeouts, mscFrUniDlciSpParmsEntry=mscFrUniDlciSpParmsEntry, mscFrUniDlciDiscardedBytes=mscFrUniDlciDiscardedBytes, mscFrUniDnaTransferPriorityOverRide=mscFrUniDnaTransferPriorityOverRide, mscFrUniDlciCommittedBurstSize=mscFrUniDlciCommittedBurstSize, mscFrUniVFramerStorageType=mscFrUniVFramerStorageType, mscFrUniLmiUspParmsEntry=mscFrUniLmiUspParmsEntry, mscFrUniLmiStatsEntry=mscFrUniLmiStatsEntry, mscFrUniDlciComponentName=mscFrUniDlciComponentName, mscFrUniDnaHgMOpEntry=mscFrUniDnaHgMOpEntry, mscFrUniDlciVcCallingDna=mscFrUniDlciVcCallingDna, mscFrUniDlciSpUpdateBCI=mscFrUniDlciSpUpdateBCI, mscFrUniLmiOpProcedures=mscFrUniLmiOpProcedures, mscFrUniLtsPatRowStatus=mscFrUniLtsPatRowStatus, mscFrUniDlciErrorShortFrmFromIf=mscFrUniDlciErrorShortFrmFromIf, mscFrUniDlciVcSendSequenceNumber=mscFrUniDlciVcSendSequenceNumber, mscFrUniDlciEgressSpRowStatusEntry=mscFrUniDlciEgressSpRowStatusEntry, mscFrUniDlciLbLocalDeFrm=mscFrUniDlciLbLocalDeFrm, mscFrUniDnaCugCugOptionsEntry=mscFrUniDnaCugCugOptionsEntry, mscFrUniFramerStateTable=mscFrUniFramerStateTable, mscFrUniVFramerFrmToOtherVFramer=mscFrUniVFramerFrmToOtherVFramer, mscFrUniCaIngCirPoolAdmitBwIndex=mscFrUniCaIngCirPoolAdmitBwIndex, frameRelayUniGroup=frameRelayUniGroup, mscFrUniCidDataTable=mscFrUniCidDataTable, mscFrUniDlciVcPeakOoSeqPktCount=mscFrUniDlciVcPeakOoSeqPktCount, mscFrUniCaIngEirBpEntry=mscFrUniCaIngEirBpEntry, mscFrUniLmiRowStatusTable=mscFrUniLmiRowStatusTable, mscFrUniDlciDeBytesFromIf=mscFrUniDlciDeBytesFromIf, mscFrUniDlciVcNotDataXferFromSubnet=mscFrUniDlciVcNotDataXferFromSubnet, mscFrUniLmiSide=mscFrUniLmiSide, mscFrUniSigLastClearRemoteDataNetworkAddress=mscFrUniSigLastClearRemoteDataNetworkAddress, mscFrUniDlciDcComponentName=mscFrUniDlciDcComponentName, mscFrUniLmiNoStatusReportCount=mscFrUniLmiNoStatusReportCount, mscFrUniVFramerUsageState=mscFrUniVFramerUsageState, mscFrUniDlciVcCombErrorsFromSubnet=mscFrUniDlciVcCombErrorsFromSubnet, mscFrUniStateTable=mscFrUniStateTable, mscFrUniOctetToIfByQueueTable=mscFrUniOctetToIfByQueueTable, mscFrUniLtsBitRateTx=mscFrUniLtsBitRateTx, mscFrUniDnaCugComponentName=mscFrUniDnaCugComponentName, mscFrUniDnaServiceExchange=mscFrUniDnaServiceExchange, mscFrUniDlciEgressSpProvTable=mscFrUniDlciEgressSpProvTable, mscFrUniDlciStartTime=mscFrUniDlciStartTime, mscFrUniSigMaximumAggregateSvcEirNormalQ=mscFrUniSigMaximumAggregateSvcEirNormalQ, mscFrUniDnaHgMStorageType=mscFrUniDnaHgMStorageType, mscFrUniDlciAdminState=mscFrUniDlciAdminState, mscFrUniFramerComponentName=mscFrUniFramerComponentName, mscFrUniDlciVcIntdTable=mscFrUniDlciVcIntdTable, mscFrUniLmiFullStatusPollingCycles=mscFrUniLmiFullStatusPollingCycles, mscFrUniVFramerProvEntry=mscFrUniVFramerProvEntry, mscFrUniIfIndex=mscFrUniIfIndex, mscFrUniFramerFrmFromIf64=mscFrUniFramerFrmFromIf64, mscFrUniSigCallSetupTimer=mscFrUniSigCallSetupTimer, mscFrUniSigRetransmitLimit=mscFrUniSigRetransmitLimit, mscFrUniSigWindowSize=mscFrUniSigWindowSize, mscFrUniCaIngEirBpValue=mscFrUniCaIngEirBpValue, mscFrUniDnaCugIncCalls=mscFrUniDnaCugIncCalls, frameRelayUniMIB=frameRelayUniMIB, mscFrUniCustomerIdentifier=mscFrUniCustomerIdentifier, mscFrUniDnaHgMComponentName=mscFrUniDnaHgMComponentName, mscFrUniCidDataEntry=mscFrUniCidDataEntry, mscFrUniLtsPatIndex=mscFrUniLtsPatIndex, mscFrUniDnaOutgoingOptionsTable=mscFrUniDnaOutgoingOptionsTable, mscFrUniSigMaximumFrameSize=mscFrUniSigMaximumFrameSize, mscFrUniDlciLbComponentName=mscFrUniDlciLbComponentName, mscFrUniDlciDiscExcessFromIfBytes=mscFrUniDlciDiscExcessFromIfBytes, mscFrUniLtsPatDefaultEABits=mscFrUniLtsPatDefaultEABits, mscFrUniCaEgEirPoolAdmitBwTable=mscFrUniCaEgEirPoolAdmitBwTable, mscFrUniStatsEntry=mscFrUniStatsEntry, mscFrUniLtsResultsTable=mscFrUniLtsResultsTable, mscFrUniSigRestartRcvTimer=mscFrUniSigRestartRcvTimer, mscFrUniSigLapfStatusEntry=mscFrUniSigLapfStatusEntry, mscFrUniDlciDiscardedSegFrm=mscFrUniDlciDiscardedSegFrm, mscFrUniDlciVcElapsedTimeTillNow=mscFrUniDlciVcElapsedTimeTillNow, mscFrUniDnaRowStatus=mscFrUniDnaRowStatus, mscFrUniDlciABitReasonFromIf=mscFrUniDlciABitReasonFromIf, mscFrUniDlciEirEgressSegFrm=mscFrUniDlciEirEgressSegFrm, mscFrUniIfEntryTable=mscFrUniIfEntryTable, mscFrUniDnaCugOutCalls=mscFrUniDnaCugOutCalls, mscFrUniDlciFecnFrmFromIf=mscFrUniDlciFecnFrmFromIf, mscFrUniDlciRateAdaptReductPeriod=mscFrUniDlciRateAdaptReductPeriod, mscFrUniDlciEirIngressBytes=mscFrUniDlciEirIngressBytes, mscFrUniLtsPatDefaultNumFrames=mscFrUniLtsPatDefaultNumFrames, mscFrUniCaStorageType=mscFrUniCaStorageType, mscFrUniRowStatusEntry=mscFrUniRowStatusEntry, mscFrUniDlciFrmFromIf=mscFrUniDlciFrmFromIf, mscFrUniFramerNonOctetErrors=mscFrUniFramerNonOctetErrors, mscFrUniDnaHgMAvailabilityUpdateThreshold=mscFrUniDnaHgMAvailabilityUpdateThreshold, mscFrUniSigUnlimitedAggregateEir=mscFrUniSigUnlimitedAggregateEir, mscFrUniDlciRowStatusEntry=mscFrUniDlciRowStatusEntry, mscFrUniStorageType=mscFrUniStorageType, mscFrUniCaIngCirPoolAdmitBwValue=mscFrUniCaIngCirPoolAdmitBwValue, mscFrUniDlciVcComponentName=mscFrUniDlciVcComponentName, mscFrUniSigCodesTable=mscFrUniSigCodesTable, mscFrUniFramerAborts=mscFrUniFramerAborts, mscFrUniDlciFecnFrmToIf=mscFrUniDlciFecnFrmToIf, mscFrUniDlciSp=mscFrUniDlciSp, mscFrUniSigLapfStatusTable=mscFrUniSigLapfStatusTable, mscFrUniCaEgEirPoolAvailBwIndex=mscFrUniCaEgEirPoolAvailBwIndex, mscFrUniDlciDiscCongestedToIfBytes=mscFrUniDlciDiscCongestedToIfBytes, mscFrUniDlciSpOpTable=mscFrUniDlciSpOpTable, mscFrUniDnaCugIndex=mscFrUniDnaCugIndex, mscFrUniDlciVcFrdTable=mscFrUniDlciVcFrdTable, mscFrUniLtsRowStatus=mscFrUniLtsRowStatus, mscFrUniDlciOperationalState=mscFrUniDlciOperationalState, mscFrUniDnaHgMHgAddrRowStatusEntry=mscFrUniDnaHgMHgAddrRowStatusEntry, mscFrUniSigIndex=mscFrUniSigIndex, mscFrUniSigRateEnforcement=mscFrUniSigRateEnforcement, mscFrUniOperStatusEntry=mscFrUniOperStatusEntry, mscFrUniSigLastDiagnosticCode=mscFrUniSigLastDiagnosticCode, mscFrUniDlciSpExcessBurstSize=mscFrUniDlciSpExcessBurstSize, mscFrUniOctetToIfByQueueValue=mscFrUniOctetToIfByQueueValue, mscFrUniVFramerOperationalState=mscFrUniVFramerOperationalState, mscFrUniDnaCugRowStatusTable=mscFrUniDnaCugRowStatusTable, mscFrUniDnaCugPreferential=mscFrUniDnaCugPreferential, mscFrUniCaEgCirPoolAdmitBwIndex=mscFrUniCaEgCirPoolAdmitBwIndex, mscFrUniLtsPatOpDataTable=mscFrUniLtsPatOpDataTable, mscFrUniCaEgEirPoolAdmitBwValue=mscFrUniCaEgEirPoolAdmitBwValue, mscFrUniCaEgEirPoolAdmitBwEntry=mscFrUniCaEgEirPoolAdmitBwEntry, mscFrUniVFramerStateTable=mscFrUniVFramerStateTable, mscFrUniDlciEgressSpCommittedInformationRate=mscFrUniDlciEgressSpCommittedInformationRate, mscFrUniSigRateAdaptation=mscFrUniSigRateAdaptation, mscFrUniCaIngCirBPIndex=mscFrUniCaIngCirBPIndex, mscFrUniDlciStateEntry=mscFrUniDlciStateEntry, mscFrUniCaIngCirPoolAdmitBwTable=mscFrUniCaIngCirPoolAdmitBwTable, mscFrUniSigLastClearCause=mscFrUniSigLastClearCause, mscFrUniCaIngressCacEntry=mscFrUniCaIngressCacEntry, mscFrUniSigStatsEntry=mscFrUniSigStatsEntry, mscFrUniDnaNumberingPlanIndicator=mscFrUniDnaNumberingPlanIndicator, mscFrUniSigMaximumAggregateSvcCirNormalQ=mscFrUniSigMaximumAggregateSvcCirNormalQ, mscFrUniFramerNormPrioLinkUtilToIf=mscFrUniFramerNormPrioLinkUtilToIf, mscFrUniRowStatusTable=mscFrUniRowStatusTable, mscFrUniDlciElapsedDifference=mscFrUniDlciElapsedDifference, mscFrUniLtsPatDefaultsTable=mscFrUniLtsPatDefaultsTable, mscFrUniEmissionPriorityQsTable=mscFrUniEmissionPriorityQsTable, mscFrUniDnaHgMHgAddrRowStatusTable=mscFrUniDnaHgMHgAddrRowStatusTable, mscFrUniCaIngCirPoolAdmitBwEntry=mscFrUniCaIngCirPoolAdmitBwEntry, mscFrUniSigAckTimeout=mscFrUniSigAckTimeout, mscFrUniFramerProvTable=mscFrUniFramerProvTable, mscFrUniDlciCallType=mscFrUniDlciCallType, mscFrUniCaOpEntry=mscFrUniCaOpEntry, mscFrUniDnaDataPath=mscFrUniDnaDataPath, mscFrUniSigReleaseTimer=mscFrUniSigReleaseTimer, mscFrUniDlciFciFromSubnet=mscFrUniDlciFciFromSubnet, mscFrUniSigLastCauseInStatusMsgReceived=mscFrUniSigLastCauseInStatusMsgReceived, mscFrUniDlciTotalIngressSegFrm=mscFrUniDlciTotalIngressSegFrm, mscFrUniDlciSpParmsTable=mscFrUniDlciSpParmsTable, mscFrUniDlciSpRateEnforcement=mscFrUniDlciSpRateEnforcement, mscFrUniDlciIntTable=mscFrUniDlciIntTable, mscFrUniCaEgCirBpEntry=mscFrUniCaEgCirBpEntry, mscFrUniCaEgCirPoolAvailBwIndex=mscFrUniCaEgCirPoolAvailBwIndex, mscFrUniDlciVcOoSeqPktCntExceeded=mscFrUniDlciVcOoSeqPktCntExceeded, mscFrUniFrmToIfByQueueValue=mscFrUniFrmToIfByQueueValue, mscFrUniOctetToIfByQueueIndex=mscFrUniOctetToIfByQueueIndex, mscFrUniSigLastDlciReceivedStatus=mscFrUniSigLastDlciReceivedStatus, mscFrUniDlciTotalEgressBytes=mscFrUniDlciTotalEgressBytes, mscFrUniCaTpmRowStatusTable=mscFrUniCaTpmRowStatusTable, mscFrUniDlciBecnFrmSetByService=mscFrUniDlciBecnFrmSetByService, mscFrUniLmiIndex=mscFrUniLmiIndex, mscFrUniLtsPatOpDataEntry=mscFrUniLtsPatOpDataEntry, mscFrUniSigMaximumAggregateSvcEirHighQ=mscFrUniSigMaximumAggregateSvcEirHighQ, mscFrUniDlciAbitTable=mscFrUniDlciAbitTable, mscFrUniDlciVcRcosFromNetwork=mscFrUniDlciVcRcosFromNetwork, mscFrUniDlciVcSegmentsSent=mscFrUniDlciVcSegmentsSent, mscFrUniDnaEgressAccounting=mscFrUniDnaEgressAccounting, mscFrUniDlciDiscDeCongestedToIf=mscFrUniDlciDiscDeCongestedToIf, frameRelayUniCapabilitiesCA02=frameRelayUniCapabilitiesCA02, mscFrUniSigInCalls=mscFrUniSigInCalls, mscFrUniLtsPatLoad=mscFrUniLtsPatLoad, mscFrUniDlciEmissionPriorityToIf=mscFrUniDlciEmissionPriorityToIf, mscFrUniLmiCheckPointTimer=mscFrUniLmiCheckPointTimer, mscFrUniCaProvEntry=mscFrUniCaProvEntry, mscFrUniLmiMessageCountTimer=mscFrUniLmiMessageCountTimer, mscFrUniDnaStorageType=mscFrUniDnaStorageType, mscFrUniLmiPsiEntry=mscFrUniLmiPsiEntry, mscFrUniLtsPatDefaultHeaderLength=mscFrUniLtsPatDefaultHeaderLength, mscFrUniCaEgressCacTable=mscFrUniCaEgressCacTable, mscFrUniDlciSpAccounting=mscFrUniDlciSpAccounting, mscFrUniVFramerStateEntry=mscFrUniVFramerStateEntry, mscFrUniCaNumberRejectedEgressCirPermConn=mscFrUniCaNumberRejectedEgressCirPermConn, mscFrUniDlciTotalEgressSegFrm=mscFrUniDlciTotalEgressSegFrm)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-FrameRelayUniMIB", mscFrUniDlciDcRowStatus=mscFrUniDlciDcRowStatus, mscFrUniDlciLbRowStatus=mscFrUniDlciLbRowStatus, mscFrUniLtsPatFramePattern=mscFrUniLtsPatFramePattern, mscFrUniDlciControlStatus=mscFrUniDlciControlStatus, mscFrUniFramerRowStatusTable=mscFrUniFramerRowStatusTable, mscFrUniFramerIndex=mscFrUniFramerIndex, mscFrUniFrmToIfByQueueEntry=mscFrUniFrmToIfByQueueEntry, mscFrUniCaRowStatus=mscFrUniCaRowStatus, mscFrUniFramerFrmToIf64=mscFrUniFramerFrmToIf64, mscFrUniLmiUserSideEventHistory=mscFrUniLmiUserSideEventHistory, mscFrUniCaTpmProvTable=mscFrUniCaTpmProvTable, mscFrUniCaIngEirPoolAvailBwIndex=mscFrUniCaIngEirPoolAvailBwIndex, mscFrUniFramerOctetFromIf64=mscFrUniFramerOctetFromIf64, mscFrUniSigCurrentAggregateSvcCirHighQ=mscFrUniSigCurrentAggregateSvcCirHighQ, mscFrUniCaIngressMaximumEirOnlyCalls=mscFrUniCaIngressMaximumEirOnlyCalls, frameRelayUniGroupCA02=frameRelayUniGroupCA02, mscFrUniFramerUsageState=mscFrUniFramerUsageState, mscFrUniSigIFramesRcvdDiscarded=mscFrUniSigIFramesRcvdDiscarded, mscFrUniSigIFramesTxDiscarded=mscFrUniSigIFramesTxDiscarded, mscFrUniDnaRowStatusEntry=mscFrUniDnaRowStatusEntry, mscFrUniDnaCallOptionsTable=mscFrUniDnaCallOptionsTable, mscFrUniFramerNormPrioLinkUtilFromIf=mscFrUniFramerNormPrioLinkUtilFromIf, mscFrUniDlciVcCalledNpi=mscFrUniDlciVcCalledNpi, mscFrUniLmiStatusSequenceErrors=mscFrUniLmiStatusSequenceErrors, mscFrUniDlciTransferPriToNwk=mscFrUniDlciTransferPriToNwk, mscFrUniCaEgressCacEntry=mscFrUniCaEgressCacEntry, mscFrUniLtsIndex=mscFrUniLtsIndex, mscFrUniDlciVcPktRetryTimeouts=mscFrUniDlciVcPktRetryTimeouts, mscFrUniDnaHgMIndex=mscFrUniDnaHgMIndex, mscFrUniLtsPatOpStateTable=mscFrUniLtsPatOpStateTable, mscFrUniDlciVcEmissionPriorityToNetwork=mscFrUniDlciVcEmissionPriorityToNetwork, mscFrUniDnaAccountCollection=mscFrUniDnaAccountCollection, mscFrUniLtsFrameRateTx=mscFrUniLtsFrameRateTx, mscFrUniSigIFramesTransmitted=mscFrUniSigIFramesTransmitted, mscFrUniDlciCirPresent=mscFrUniDlciCirPresent, mscFrUniDlciDiscDeCongestedFromIfBytes=mscFrUniDlciDiscDeCongestedFromIfBytes, mscFrUniDlciABitStatusFromIf=mscFrUniDlciABitStatusFromIf, mscFrUniDlciVcOoSeqByteCntExceeded=mscFrUniDlciVcOoSeqByteCntExceeded, frameRelayUniGroupCA02A=frameRelayUniGroupCA02A, mscFrUniDlciMaximumFrameSize=mscFrUniDlciMaximumFrameSize, mscFrUniDlciVcCallReferenceNumber=mscFrUniDlciVcCallReferenceNumber, mscFrUniDlciEgressSpProvEntry=mscFrUniDlciEgressSpProvEntry, mscFrUniSigMaximumAggregateSvcEir=mscFrUniSigMaximumAggregateSvcEir, mscFrUniSigRemoteBusy=mscFrUniSigRemoteBusy, mscFrUniUnknownStatus=mscFrUniUnknownStatus, mscFrUniDlciSpRowStatus=mscFrUniDlciSpRowStatus, mscFrUniDlciEgressSpRowStatusTable=mscFrUniDlciEgressSpRowStatusTable, mscFrUniCaEgCirPoolAvailBwTable=mscFrUniCaEgCirPoolAvailBwTable, mscFrUniSigStatsTable=mscFrUniSigStatsTable, mscFrUniDlciDcIndex=mscFrUniDlciDcIndex, mscFrUniDlciVcPreviousState=mscFrUniDlciVcPreviousState, mscFrUniDnaAddressEntry=mscFrUniDnaAddressEntry, mscFrUniFramerOctetFromIf=mscFrUniFramerOctetFromIf, mscFrUniDlciUsageState=mscFrUniDlciUsageState, mscFrUniLmiStateEntry=mscFrUniLmiStateEntry, mscFrUniLmiProcedures=mscFrUniLmiProcedures, mscFrUniDlciSpRaSensitivity=mscFrUniDlciSpRaSensitivity, mscFrUniDlciCirPresentObs=mscFrUniDlciCirPresentObs, mscFrUniDlciDcMapIpCosToFrQos=mscFrUniDlciDcMapIpCosToFrQos, mscFrUniDlciSpRowStatusTable=mscFrUniDlciSpRowStatusTable, mscFrUniLtsGeneratorState=mscFrUniLtsGeneratorState, mscFrUniLtsPatStorageType=mscFrUniLtsPatStorageType, mscFrUniDlciDcNfaEntry=mscFrUniDlciDcNfaEntry, mscFrUniLtsPatStatus=mscFrUniLtsPatStatus, mscFrUniDlciEgressSpComponentName=mscFrUniDlciEgressSpComponentName, mscFrUniAvailabilityStatus=mscFrUniAvailabilityStatus, mscFrUniDlciProceduralStatus=mscFrUniDlciProceduralStatus, mscFrUniComponentName=mscFrUniComponentName, mscFrUniDlciDiscExcessFromIf=mscFrUniDlciDiscExcessFromIf, mscFrUniDlciEirPresentObs=mscFrUniDlciEirPresentObs, mscFrUniSigBandwidthNotAvailableIndex=mscFrUniSigBandwidthNotAvailableIndex, mscFrUniCaIndex=mscFrUniCaIndex, frameRelayUniCapabilities=frameRelayUniCapabilities, mscFrUniLts=mscFrUniLts, mscFrUniAlarmStatus=mscFrUniAlarmStatus, mscFrUniLmiComponentName=mscFrUniLmiComponentName, mscFrUniCaEgCirPoolAvailBwEntry=mscFrUniCaEgCirPoolAvailBwEntry, mscFrUniLtsBurstSize=mscFrUniLtsBurstSize, mscFrUniDnaIndex=mscFrUniDnaIndex, mscFrUniDnaCugStorageType=mscFrUniDnaCugStorageType, mscFrUniSigCurrentQueueSize=mscFrUniSigCurrentQueueSize, mscFrUniOperationalState=mscFrUniOperationalState, mscFrUniDlciVcState=mscFrUniDlciVcState, mscFrUniLmiLinkVerificationTimer=mscFrUniLmiLinkVerificationTimer, mscFrUniVFramerOtherVirtualFramer=mscFrUniVFramerOtherVirtualFramer, mscFrUniLmiUsageState=mscFrUniLmiUsageState, mscFrUniDlciVcEmissionPriorityFromNetwork=mscFrUniDlciVcEmissionPriorityFromNetwork, mscFrUniSigDisconnectTimer=mscFrUniSigDisconnectTimer, mscFrUniLmiProtocolErrors=mscFrUniLmiProtocolErrors, mscFrUniDnaIncomingOptionsEntry=mscFrUniDnaIncomingOptionsEntry, mscFrUniDlciBecnFrmToIf=mscFrUniDlciBecnFrmToIf, mscFrUniCaTpmIndex=mscFrUniCaTpmIndex, mscFrUniFramerCrcErrors=mscFrUniFramerCrcErrors, mscFrUniSigStateTable=mscFrUniSigStateTable, mscFrUniLtsPatUseBadLrc=mscFrUniLtsPatUseBadLrc, mscFrUniFramerUtilEntry=mscFrUniFramerUtilEntry, mscFrUniSigLastStateChangeReason=mscFrUniSigLastStateChangeReason, mscFrUniIfAdminStatus=mscFrUniIfAdminStatus, mscFrUniDlciDcOptionsEntry=mscFrUniDlciDcOptionsEntry, mscFrUniFramerUnderruns=mscFrUniFramerUnderruns, mscFrUniDlciDiscByteAbit=mscFrUniDlciDiscByteAbit, mscFrUniDnaHgMHgAddrStorageType=mscFrUniDnaHgMHgAddrStorageType, mscFrUniSigDefaultLocCheck=mscFrUniSigDefaultLocCheck, mscFrUniLtsPatDefaultHeaderBits=mscFrUniLtsPatDefaultHeaderBits, mscFrUniDlciDcNfaIndex=mscFrUniDlciDcNfaIndex, mscFrUniSigCodesEntry=mscFrUniSigCodesEntry, mscFrUniDlciLbRemoteBecnFrm=mscFrUniDlciLbRemoteBecnFrm, mscFrUniLmiKeepAliveEnqToIf=mscFrUniLmiKeepAliveEnqToIf, mscFrUniDlciCommittedInformationRate=mscFrUniDlciCommittedInformationRate, mscFrUniCaEgCirBpValue=mscFrUniCaEgCirBpValue, mscFrUniDlciTransferPriFromNwk=mscFrUniDlciTransferPriFromNwk, mscFrUniVFramerFrmFromOtherVFramer=mscFrUniVFramerFrmFromOtherVFramer, mscFrUniLtsFramesTx=mscFrUniLtsFramesTx, mscFrUniDlciAlarmStatus=mscFrUniDlciAlarmStatus, mscFrUniSigAdminState=mscFrUniSigAdminState, mscFrUniSigDefaultCommittedInformationRate=mscFrUniSigDefaultCommittedInformationRate, mscFrUniSigLapfStatsTable=mscFrUniSigLapfStatsTable, mscFrUniDlciVcDmepTable=mscFrUniDlciVcDmepTable, mscFrUniCaTpmStorageType=mscFrUniCaTpmStorageType, mscFrUniSigRowStatusTable=mscFrUniSigRowStatusTable, mscFrUniCaEgEirBpTable=mscFrUniCaEgEirBpTable, mscFrUniSigCurrentState=mscFrUniSigCurrentState, mscFrUniDlciCalldEntry=mscFrUniDlciCalldEntry, mscFrUniDlciErrorShortBytesFromIf=mscFrUniDlciErrorShortBytesFromIf, mscFrUniDlciLbIndex=mscFrUniDlciLbIndex, mscFrUniDlciRowStatusTable=mscFrUniDlciRowStatusTable, mscFrUniSnmpOperStatus=mscFrUniSnmpOperStatus, mscFrUniFramer=mscFrUniFramer, mscFrUniOperStatusTable=mscFrUniOperStatusTable, mscFrUniDlciDcDiscardPriority=mscFrUniDlciDcDiscardPriority, mscFrUniDlciDcCugIndex=mscFrUniDlciDcCugIndex, mscFrUniDlciMeasurementInterval=mscFrUniDlciMeasurementInterval, mscFrUniFramerStorageType=mscFrUniFramerStorageType, mscFrUniSigCallProceedingTimer=mscFrUniSigCallProceedingTimer, mscFrUniCaEgEirBpValue=mscFrUniCaEgEirBpValue, mscFrUniDnaOutDefaultPathReliability=mscFrUniDnaOutDefaultPathReliability, mscFrUniLtsRowStatusEntry=mscFrUniLtsRowStatusEntry, mscFrUniCaEgCirBpIndex=mscFrUniCaEgCirBpIndex, mscFrUniDlciVcCallingLcn=mscFrUniDlciVcCallingLcn, mscFrUniDlciVcCadTable=mscFrUniDlciVcCadTable, mscFrUniDlciSpComponentName=mscFrUniDlciSpComponentName, mscFrUniLtsAlgorithm=mscFrUniLtsAlgorithm, mscFrUniCaRowStatusEntry=mscFrUniCaRowStatusEntry, mscFrUniCaOverrideLinkRate=mscFrUniCaOverrideLinkRate, mscFrUniDlciVcIntdEntry=mscFrUniDlciVcIntdEntry, mscFrUniSigBandwidthNotAvailableTable=mscFrUniSigBandwidthNotAvailableTable, mscFrUniLtsPatHeaderLength=mscFrUniLtsPatHeaderLength, mscFrUniLmiNetworkSideEventHistory=mscFrUniLmiNetworkSideEventHistory, mscFrUniDlciLbRemoteTotalBytes=mscFrUniDlciLbRemoteTotalBytes, mscFrUniDlciEgressSpExcessBurstSize=mscFrUniDlciEgressSpExcessBurstSize, mscFrUniDlciVcDuplicatesFromSubnet=mscFrUniDlciVcDuplicatesFromSubnet, mscFrUniFramerFlagsBetweenFrames=mscFrUniFramerFlagsBetweenFrames, mscFrUniDlciLbLocalBecnFrm=mscFrUniDlciLbLocalBecnFrm, mscFrUniSigHighestPvcDlci=mscFrUniSigHighestPvcDlci, mscFrUniFramerRowStatusEntry=mscFrUniFramerRowStatusEntry, mscFrUniSigNetworkType=mscFrUniSigNetworkType, mscFrUniCaIngCirBPTable=mscFrUniCaIngCirBPTable, mscFrUniFramerFrmToIf=mscFrUniFramerFrmToIf, mscFrUniDlciVcFrmCongestedToSubnet=mscFrUniDlciVcFrmCongestedToSubnet, mscFrUniCaNumberRejectedEgressEirPermConn=mscFrUniCaNumberRejectedEgressEirPermConn, mscFrUniDlciDcRemoteDna=mscFrUniDlciDcRemoteDna, mscFrUniSig=mscFrUniSig, mscFrUniStateEntry=mscFrUniStateEntry, mscFrUniSigLapfStatsEntry=mscFrUniSigLapfStatsEntry, mscFrUniDlciDc=mscFrUniDlciDc, mscFrUniDlciDcNfaTable=mscFrUniDlciDcNfaTable, mscFrUniSigIdleProbeTimer=mscFrUniSigIdleProbeTimer, mscFrUniDnaHgMAvailableAggregateCir=mscFrUniDnaHgMAvailableAggregateCir, mscFrUniDlciErrorLongBytesFromIf=mscFrUniDlciErrorLongBytesFromIf, mscFrUniDlciVcSegmentsRx=mscFrUniDlciVcSegmentsRx, mscFrUniDnaOutAccess=mscFrUniDnaOutAccess, mscFrUniDlciLocalRateAdaptOccurred=mscFrUniDlciLocalRateAdaptOccurred, mscFrUniLmiOperationalState=mscFrUniLmiOperationalState, mscFrUniDnaCugCugOptionsTable=mscFrUniDnaCugCugOptionsTable, mscFrUniDlciBecnFrmFromIf=mscFrUniDlciBecnFrmFromIf, mscFrUniCaLinkRate=mscFrUniCaLinkRate, mscFrUniDnaCugDnic=mscFrUniDnaCugDnic, mscFrUni=mscFrUni, mscFrUniDlciStandbyStatus=mscFrUniDlciStandbyStatus, mscFrUniDlciRateEnforcement=mscFrUniDlciRateEnforcement, mscFrUniLmiIgnoreActiveBit=mscFrUniLmiIgnoreActiveBit, mscFrUniOctetToIfByQueueEntry=mscFrUniOctetToIfByQueueEntry, mscFrUniSigLastStateReceivedStatus=mscFrUniSigLastStateReceivedStatus, mscFrUniSigInCallsRefused=mscFrUniSigInCallsRefused, mscFrUniLtsPatEaBits=mscFrUniLtsPatEaBits, mscFrUniSigDefaultAccounting=mscFrUniSigDefaultAccounting, mscFrUniCaEgCirPoolAdmitBwEntry=mscFrUniCaEgCirPoolAdmitBwEntry, mscFrUniDlciExcessBurstSize=mscFrUniDlciExcessBurstSize, mscFrUniFramerLinkTable=mscFrUniFramerLinkTable, mscFrUniDlciLbRemoteTotalFrm=mscFrUniDlciLbRemoteTotalFrm, mscFrUniLtsPatRowStatusEntry=mscFrUniLtsPatRowStatusEntry, mscFrUniCaIngEirPoolAdmitBwEntry=mscFrUniCaIngEirPoolAdmitBwEntry, mscFrUniDlciEgressSp=mscFrUniDlciEgressSp, mscFrUniFrmToIfByQueueIndex=mscFrUniFrmToIfByQueueIndex, mscFrUniDlci=mscFrUniDlci, mscFrUniFramerRowStatus=mscFrUniFramerRowStatus, mscFrUniLmiPsiTable=mscFrUniLmiPsiTable, mscFrUniFramerProvEntry=mscFrUniFramerProvEntry, mscFrUniLmiEventCount=mscFrUniLmiEventCount, mscFrUniDlciDiscCongestedFromIf=mscFrUniDlciDiscCongestedFromIf, mscFrUniDlciSpCommittedInformationRate=mscFrUniDlciSpCommittedInformationRate, mscFrUniCaRowStatusTable=mscFrUniCaRowStatusTable, mscFrUniDlciVcStartTime=mscFrUniDlciVcStartTime, mscFrUniCaIngCirBPValue=mscFrUniCaIngCirBPValue, mscFrUniFramerFrameCrcType=mscFrUniFramerFrameCrcType, mscFrUniDlciLb=mscFrUniDlciLb, mscFrUniDlciVcDataPath=mscFrUniDlciVcDataPath, mscFrUniDnaHgMHgAddrAddrEntry=mscFrUniDnaHgMHgAddrAddrEntry, mscFrUniDlciStorageType=mscFrUniDlciStorageType, mscFrUniDnaCugInterlockCode=mscFrUniDnaCugInterlockCode, mscFrUniSigServParmsTable=mscFrUniSigServParmsTable, mscFrUniDlciLbLocalDeBytes=mscFrUniDlciLbLocalDeBytes, mscFrUniDlciVcPeakOoSeqFrmForwarded=mscFrUniDlciVcPeakOoSeqFrmForwarded, mscFrUniDlciLbStatsTable=mscFrUniDlciLbStatsTable, mscFrUniCaEgEirPoolAvailBwTable=mscFrUniCaEgEirPoolAvailBwTable, mscFrUniDlciVcPreviousDiagnosticCode=mscFrUniDlciVcPreviousDiagnosticCode, mscFrUniSigRangeTable=mscFrUniSigRangeTable, mscFrUniVFramerRowStatusTable=mscFrUniVFramerRowStatusTable, mscFrUniDlciEirPresent=mscFrUniDlciEirPresent, frameRelayUniCapabilitiesCA=frameRelayUniCapabilitiesCA, mscFrUniCaEgEirPoolAdmitBwIndex=mscFrUniCaEgEirPoolAdmitBwIndex, mscFrUniDnaHgMRowStatusTable=mscFrUniDnaHgMRowStatusTable, mscFrUniDlciVcNotDataXferToSubnet=mscFrUniDlciVcNotDataXferToSubnet, mscFrUniDlciDcDeDiscardPriority=mscFrUniDlciDcDeDiscardPriority)
