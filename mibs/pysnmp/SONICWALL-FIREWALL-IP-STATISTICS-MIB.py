#
# PySNMP MIB module SONICWALL-FIREWALL-IP-STATISTICS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONICWALL-FIREWALL-IP-STATISTICS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:01:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, TimeTicks, Unsigned32, NotificationType, Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Bits, IpAddress, iso, MibIdentifier, Counter32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "TimeTicks", "Unsigned32", "NotificationType", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Bits", "IpAddress", "iso", "MibIdentifier", "Counter32", "Gauge32")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
sonicwallFw, = mibBuilder.importSymbols("SONICWALL-SMI", "sonicwallFw")
sonicwallFwStatsModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 8741, 1, 3))
sonicwallFwStatsModule.setRevisions(('2015-01-08 00:00', '2014-02-28 00:00', '2014-02-18 00:00', '2005-11-09 00:00',))
if mibBuilder.loadTexts: sonicwallFwStatsModule.setLastUpdated('201501080000Z')
if mibBuilder.loadTexts: sonicwallFwStatsModule.setOrganization('DELL SonicWall')
class SyslogFacility(TextualConvention, Integer32):
    reference = 'The Syslog Protocol (RFC 3164): Section 4.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))
    namedValues = NamedValues(("kern", 0), ("user", 1), ("mail", 2), ("daemon", 3), ("auth", 4), ("syslog", 5), ("lpr", 6), ("news", 7), ("uucp", 8), ("cron", 9), ("authpriv", 10), ("ftp", 11), ("ntp", 12), ("audit", 13), ("alert", 14), ("cron2", 15), ("local0", 16), ("local1", 17), ("local2", 18), ("local3", 19), ("local4", 20), ("local5", 21), ("local6", 22), ("local7", 23))

sonicwallFwStats = MibIdentifier((1, 3, 6, 1, 4, 1, 8741, 1, 3, 1))
sonicMaxConnCacheEntries = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicMaxConnCacheEntries.setStatus('current')
sonicCurrentConnCacheEntries = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicCurrentConnCacheEntries.setStatus('current')
sonicCurrentCPUUtil = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicCurrentCPUUtil.setStatus('current')
sonicCurrentRAMUtil = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicCurrentRAMUtil.setStatus('current')
sonicNatTranslationCount = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicNatTranslationCount.setStatus('current')
sonicCurrentManagementCPUUtil = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicCurrentManagementCPUUtil.setStatus('current')
sonicCurrentFwdAndInspectCPUUtil = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicCurrentFwdAndInspectCPUUtil.setStatus('current')
sonicIfStatTable = MibTable((1, 3, 6, 1, 4, 1, 8741, 1, 3, 1, 8), )
if mibBuilder.loadTexts: sonicIfStatTable.setStatus('current')
sonicIfStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8741, 1, 3, 1, 8, 1), ).setIndexNames((0, "SONICWALL-FIREWALL-IP-STATISTICS-MIB", "sonicIfIndex"))
if mibBuilder.loadTexts: sonicIfStatEntry.setStatus('current')
sonicIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 1, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicIfIndex.setStatus('current')
sonicIfUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 1, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicIfUsage.setStatus('current')
sonicIfThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 1, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicIfThroughput.setStatus('current')
sonicwallFwVPNStats = MibIdentifier((1, 3, 6, 1, 4, 1, 8741, 1, 3, 2))
sonicwallFwVpnIPSecStats = MibIdentifier((1, 3, 6, 1, 4, 1, 8741, 1, 3, 2, 1))
sonicSAStatTable = MibTable((1, 3, 6, 1, 4, 1, 8741, 1, 3, 2, 1, 1), )
if mibBuilder.loadTexts: sonicSAStatTable.setStatus('current')
sonicSAStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8741, 1, 3, 2, 1, 1, 1), ).setIndexNames((0, "SONICWALL-FIREWALL-IP-STATISTICS-MIB", "sonicIpsecSaIndex"))
if mibBuilder.loadTexts: sonicSAStatEntry.setStatus('current')
sonicIpsecSaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 2, 1, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicIpsecSaIndex.setStatus('current')
sonicSAStatPeerGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 2, 1, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSAStatPeerGateway.setStatus('current')
sonicSAStatSrcAddrBegin = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 2, 1, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSAStatSrcAddrBegin.setStatus('current')
sonicSAStatSrcAddrEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 2, 1, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSAStatSrcAddrEnd.setStatus('current')
sonicSAStatDstAddrBegin = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 2, 1, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSAStatDstAddrBegin.setStatus('current')
sonicSAStatDstAddrEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 2, 1, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSAStatDstAddrEnd.setStatus('current')
sonicSAStatCreateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 2, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSAStatCreateTime.setStatus('current')
sonicSAStatEncryptPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 2, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSAStatEncryptPktCount.setStatus('current')
sonicSAStatEncryptByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 2, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSAStatEncryptByteCount.setStatus('current')
sonicSAStatDecryptPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 2, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSAStatDecryptPktCount.setStatus('current')
sonicSAStatDecryptByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 2, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSAStatDecryptByteCount.setStatus('current')
sonicSAStatInFragPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 2, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSAStatInFragPktCount.setStatus('current')
sonicSAStatOutFragPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 2, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSAStatOutFragPktCount.setStatus('current')
sonicSAStatUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 2, 1, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSAStatUserName.setStatus('current')
sonicwallFwHWStats = MibIdentifier((1, 3, 6, 1, 4, 1, 8741, 1, 3, 3))
sonicwallFwHWSensorStats = MibIdentifier((1, 3, 6, 1, 4, 1, 8741, 1, 3, 3, 3))
sonicwallSensorsTable = MibTable((1, 3, 6, 1, 4, 1, 8741, 1, 3, 3, 3, 1), )
if mibBuilder.loadTexts: sonicwallSensorsTable.setStatus('current')
sonicwallSensorsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8741, 1, 3, 3, 3, 1, 1), ).setIndexNames((0, "SONICWALL-FIREWALL-IP-STATISTICS-MIB", "sonicwallSensorsIndex"))
if mibBuilder.loadTexts: sonicwallSensorsEntry.setStatus('current')
sonicwallSensorsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 3, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicwallSensorsIndex.setStatus('current')
sonicwallSensorsId = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 3, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicwallSensorsId.setStatus('current')
sonicwallSensorsDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 3, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicwallSensorsDevice.setStatus('current')
sonicwallSensorsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 3, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicwallSensorsValue.setStatus('current')
sonicwallSensorsUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 3, 3, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicwallSensorsUnit.setStatus('current')
sonicwallFwSyslogStats = MibIdentifier((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4))
sonicwallFwSyslogSetting = MibIdentifier((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 1))
sonicwallFwSyslogServer = MibIdentifier((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 2))
sonicwallFwSyslogStatistic = MibIdentifier((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 3))
sonicSyslogFacility = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 1, 1), SyslogFacility()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSyslogFacility.setStatus('current')
sonicSyslogOverrideSetting = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSyslogOverrideSetting.setStatus('current')
sonicSyslogFormat = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("default", 0), ("webTrends", 1), ("enhSyslog", 2), ("arcSight", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSyslogFormat.setStatus('current')
sonicSyslogID = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSyslogID.setStatus('current')
sonicSyslogEventRateLimitEnable = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSyslogEventRateLimitEnable.setStatus('current')
sonicSyslogEventRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSyslogEventRateLimit.setStatus('current')
sonicSyslogDataRateLimitEnable = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSyslogDataRateLimitEnable.setStatus('current')
sonicSyslogDataRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSyslogDataRateLimit.setStatus('current')
sonicSyslogNDPPEnable = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSyslogNDPPEnable.setStatus('current')
sonicSyslogMaxServers = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSyslogMaxServers.setStatus('current')
sonicSyslogServerTable = MibTable((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 2, 2), )
if mibBuilder.loadTexts: sonicSyslogServerTable.setStatus('current')
sonicSyslogServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 2, 2, 1), ).setIndexNames((0, "SONICWALL-FIREWALL-IP-STATISTICS-MIB", "sonicSyslogServerIndex"))
if mibBuilder.loadTexts: sonicSyslogServerEntry.setStatus('current')
sonicSyslogServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSyslogServerIndex.setStatus('current')
sonicSyslogServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 2, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSyslogServerAddr.setStatus('current')
sonicSyslogServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSyslogServerPort.setStatus('current')
sonicSyslogMessage = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSyslogMessage.setStatus('current')
sonicSyslogStreamData = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 4, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicSyslogStreamData.setStatus('current')
sonicwallFwDpiSslStats = MibIdentifier((1, 3, 6, 1, 4, 1, 8741, 1, 3, 5))
sonicDpiSslConnCountCur = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 5, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicDpiSslConnCountCur.setStatus('current')
sonicDpiSslConnCountHighWater = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 5, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicDpiSslConnCountHighWater.setStatus('current')
sonicDpiSslConnCountMax = MibScalar((1, 3, 6, 1, 4, 1, 8741, 1, 3, 5, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonicDpiSslConnCountMax.setStatus('current')
mibBuilder.exportSymbols("SONICWALL-FIREWALL-IP-STATISTICS-MIB", sonicwallSensorsTable=sonicwallSensorsTable, sonicSyslogNDPPEnable=sonicSyslogNDPPEnable, sonicSAStatCreateTime=sonicSAStatCreateTime, sonicSyslogServerPort=sonicSyslogServerPort, sonicSyslogStreamData=sonicSyslogStreamData, sonicwallFwVpnIPSecStats=sonicwallFwVpnIPSecStats, sonicwallFwHWSensorStats=sonicwallFwHWSensorStats, sonicIfStatTable=sonicIfStatTable, sonicCurrentCPUUtil=sonicCurrentCPUUtil, sonicwallFwSyslogStatistic=sonicwallFwSyslogStatistic, sonicSyslogDataRateLimitEnable=sonicSyslogDataRateLimitEnable, sonicSAStatSrcAddrBegin=sonicSAStatSrcAddrBegin, sonicSyslogFacility=sonicSyslogFacility, sonicSyslogOverrideSetting=sonicSyslogOverrideSetting, sonicIfIndex=sonicIfIndex, sonicMaxConnCacheEntries=sonicMaxConnCacheEntries, sonicSAStatDstAddrBegin=sonicSAStatDstAddrBegin, sonicwallSensorsId=sonicwallSensorsId, sonicSyslogServerAddr=sonicSyslogServerAddr, sonicSAStatTable=sonicSAStatTable, sonicSyslogID=sonicSyslogID, sonicSAStatOutFragPktCount=sonicSAStatOutFragPktCount, sonicSyslogServerTable=sonicSyslogServerTable, sonicSAStatDecryptPktCount=sonicSAStatDecryptPktCount, sonicwallSensorsValue=sonicwallSensorsValue, sonicwallFwDpiSslStats=sonicwallFwDpiSslStats, sonicwallFwVPNStats=sonicwallFwVPNStats, sonicDpiSslConnCountMax=sonicDpiSslConnCountMax, sonicSAStatInFragPktCount=sonicSAStatInFragPktCount, sonicSAStatEncryptByteCount=sonicSAStatEncryptByteCount, sonicCurrentFwdAndInspectCPUUtil=sonicCurrentFwdAndInspectCPUUtil, SyslogFacility=SyslogFacility, sonicwallFwSyslogSetting=sonicwallFwSyslogSetting, sonicSyslogEventRateLimitEnable=sonicSyslogEventRateLimitEnable, sonicIfUsage=sonicIfUsage, sonicwallFwSyslogStats=sonicwallFwSyslogStats, sonicSyslogServerEntry=sonicSyslogServerEntry, sonicSAStatDecryptByteCount=sonicSAStatDecryptByteCount, sonicSyslogMessage=sonicSyslogMessage, sonicDpiSslConnCountCur=sonicDpiSslConnCountCur, sonicwallFwStats=sonicwallFwStats, sonicwallFwHWStats=sonicwallFwHWStats, sonicwallFwStatsModule=sonicwallFwStatsModule, sonicSAStatPeerGateway=sonicSAStatPeerGateway, sonicSAStatSrcAddrEnd=sonicSAStatSrcAddrEnd, sonicSyslogMaxServers=sonicSyslogMaxServers, sonicwallSensorsIndex=sonicwallSensorsIndex, sonicwallSensorsDevice=sonicwallSensorsDevice, sonicCurrentConnCacheEntries=sonicCurrentConnCacheEntries, sonicNatTranslationCount=sonicNatTranslationCount, sonicCurrentRAMUtil=sonicCurrentRAMUtil, sonicIfThroughput=sonicIfThroughput, sonicSAStatDstAddrEnd=sonicSAStatDstAddrEnd, sonicIpsecSaIndex=sonicIpsecSaIndex, sonicDpiSslConnCountHighWater=sonicDpiSslConnCountHighWater, PYSNMP_MODULE_ID=sonicwallFwStatsModule, sonicSAStatUserName=sonicSAStatUserName, sonicSyslogEventRateLimit=sonicSyslogEventRateLimit, sonicCurrentManagementCPUUtil=sonicCurrentManagementCPUUtil, sonicSAStatEntry=sonicSAStatEntry, sonicwallSensorsUnit=sonicwallSensorsUnit, sonicIfStatEntry=sonicIfStatEntry, sonicwallFwSyslogServer=sonicwallFwSyslogServer, sonicwallSensorsEntry=sonicwallSensorsEntry, sonicSAStatEncryptPktCount=sonicSAStatEncryptPktCount, sonicSyslogFormat=sonicSyslogFormat, sonicSyslogServerIndex=sonicSyslogServerIndex, sonicSyslogDataRateLimit=sonicSyslogDataRateLimit)
