#
# PySNMP MIB module POLYCOM-VIDEO-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/POLYCOM-VIDEO-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:32:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, Bits, TimeTicks, NotificationType, Counter64, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Gauge32, Integer32, ObjectIdentity, enterprises, iso, ModuleIdentity, Unsigned32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Bits", "TimeTicks", "NotificationType", "Counter64", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Gauge32", "Integer32", "ObjectIdentity", "enterprises", "iso", "ModuleIdentity", "Unsigned32", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
polycom = MibIdentifier((1, 3, 6, 1, 4, 1, 2684))
polycomVideo = MibIdentifier((1, 3, 6, 1, 4, 1, 2684, 1))
polycomAudio = MibIdentifier((1, 3, 6, 1, 4, 1, 2684, 2))
polycomData = MibIdentifier((1, 3, 6, 1, 4, 1, 2684, 3))
polycomViewStation = MibIdentifier((1, 3, 6, 1, 4, 1, 2684, 1, 1))
polycomVSAuthLocation = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSAuthLocation.setStatus('mandatory')
polycomVSPhoneNumber = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSPhoneNumber.setStatus('mandatory')
polycomVSReason = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSReason.setStatus('mandatory')
polycomVSPlead = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSPlead.setStatus('mandatory')
polycomVSMicData = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSMicData.setStatus('mandatory')
polycomVSAutoAnswerSetting = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSAutoAnswerSetting.setStatus('mandatory')
polycomVSTimeServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSTimeServerAddress.setStatus('mandatory')
polycomVSTimeServerSetting = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSTimeServerSetting.setStatus('mandatory')
polycomVSGDSAddress = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSGDSAddress.setStatus('mandatory')
polycomVSGatekeeperAddress = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSGatekeeperAddress.setStatus('mandatory')
polycomVSPreviousIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSPreviousIPAddress.setStatus('mandatory')
polycomVSCurrentIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSCurrentIPAddress.setStatus('mandatory')
polycomVSPreviousNicType = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSPreviousNicType.setStatus('mandatory')
polycomVSCurrentNicType = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSCurrentNicType.setStatus('mandatory')
polycomVSNicLineNumber = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSNicLineNumber.setStatus('mandatory')
polycomVSPreviousNicLineCount = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSPreviousNicLineCount.setStatus('mandatory')
polycomVSCurrentNicLineCount = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSCurrentNicLineCount.setStatus('mandatory')
polycomVSV35PortsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSV35PortsEnabled.setStatus('mandatory')
polycomVSAuthClientAddress = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSAuthClientAddress.setStatus('mandatory')
polycomVSUPnPStatus = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSUPnPStatus.setStatus('mandatory')
polycomVSPercentPacketLoss = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSPercentPacketLoss.setStatus('mandatory')
polycomVSJitter = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSJitter.setStatus('mandatory')
polycomVSLatency = MibScalar((1, 3, 6, 1, 4, 1, 2684, 1, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomVSLatency.setStatus('mandatory')
loginOK = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,1)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSAuthLocation"), ("POLYCOM-VIDEO-MIB", "polycomVSAuthClientAddress"))
loginFail = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,2)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSAuthLocation"), ("POLYCOM-VIDEO-MIB", "polycomVSAuthClientAddress"))
lowBattery = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,3))
callUp = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,4)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSPhoneNumber"))
callDown = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,5)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSPhoneNumber"))
callFail = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,6)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSReason"), ("POLYCOM-VIDEO-MIB", "polycomVSPhoneNumber"))
userAssist = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,7)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSPlead"))
visualConcertUp = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,8))
visualConcertOff = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,9))
micChange = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,10)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSMicData"))
autoAnswerChange = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,11)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSAutoAnswerSetting"))
timeServerUp = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,12)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSTimeServerAddress"))
timeServerDown = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,13)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSTimeServerAddress"))
timeServerOn = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,14)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSTimeServerSetting"))
timeServerOff = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,15))
gdsUp = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,16)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSGDSAddress"))
gdsDown = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,17)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSGDSAddress"))
gdsOff = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,18)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSGDSAddress"))
gatekeeperReg = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,19)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSGatekeeperAddress"))
gatekeeperDown = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,20)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSGatekeeperAddress"))
gatekeeperOff = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,21))
ipAddressChange = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,22)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSPreviousIPAddress"), ("POLYCOM-VIDEO-MIB", "polycomVSCurrentIPAddress"))
interfaceTypeChange = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,23)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSPreviousNicType"), ("POLYCOM-VIDEO-MIB", "polycomVSCurrentNicType"))
lineEnabled = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,24)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSNicLineNumber"))
lineDisabled = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,25)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSNicLineNumber"))
lineUp = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,26)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSNicLineNumber"))
lineDown = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,27)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSNicLineNumber"))
v35PortsEnabled = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,28)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSV35PortsEnabled"))
lineCountChange = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,29)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSPreviousNicLineCount"), ("POLYCOM-VIDEO-MIB", "polycomVSCurrentNicLineCount"))
mainCameraUp = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,30))
mainCameraDown = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,31))
upnpChange = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,32)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSUPnPStatus"))
percentPacketLossExcessive = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,33)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSPercentPacketLoss"))
jitterExcessive = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,34)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSJitter"))
latencyExcessive = NotificationType((1, 3, 6, 1, 4, 1, 2684, 1, 1) + (0,35)).setObjects(("POLYCOM-VIDEO-MIB", "polycomVSLatency"))
mibBuilder.exportSymbols("POLYCOM-VIDEO-MIB", polycomVSGDSAddress=polycomVSGDSAddress, timeServerUp=timeServerUp, timeServerDown=timeServerDown, loginFail=loginFail, polycomVSJitter=polycomVSJitter, polycomVSUPnPStatus=polycomVSUPnPStatus, jitterExcessive=jitterExcessive, polycomViewStation=polycomViewStation, polycomVSLatency=polycomVSLatency, visualConcertOff=visualConcertOff, polycomVSGatekeeperAddress=polycomVSGatekeeperAddress, polycomVSTimeServerAddress=polycomVSTimeServerAddress, mainCameraDown=mainCameraDown, callDown=callDown, polycomVSV35PortsEnabled=polycomVSV35PortsEnabled, latencyExcessive=latencyExcessive, callUp=callUp, polycomVSAuthClientAddress=polycomVSAuthClientAddress, lowBattery=lowBattery, polycom=polycom, gatekeeperReg=gatekeeperReg, timeServerOn=timeServerOn, polycomAudio=polycomAudio, polycomVSAutoAnswerSetting=polycomVSAutoAnswerSetting, visualConcertUp=visualConcertUp, timeServerOff=timeServerOff, gdsUp=gdsUp, upnpChange=upnpChange, autoAnswerChange=autoAnswerChange, micChange=micChange, ipAddressChange=ipAddressChange, polycomVSPreviousIPAddress=polycomVSPreviousIPAddress, gdsOff=gdsOff, polycomVSCurrentIPAddress=polycomVSCurrentIPAddress, mainCameraUp=mainCameraUp, v35PortsEnabled=v35PortsEnabled, polycomVSPreviousNicLineCount=polycomVSPreviousNicLineCount, polycomVSAuthLocation=polycomVSAuthLocation, polycomVSCurrentNicLineCount=polycomVSCurrentNicLineCount, gatekeeperDown=gatekeeperDown, gatekeeperOff=gatekeeperOff, gdsDown=gdsDown, polycomData=polycomData, polycomVSPercentPacketLoss=polycomVSPercentPacketLoss, polycomVSPlead=polycomVSPlead, polycomVSReason=polycomVSReason, loginOK=loginOK, lineCountChange=lineCountChange, polycomVideo=polycomVideo, lineUp=lineUp, polycomVSCurrentNicType=polycomVSCurrentNicType, userAssist=userAssist, polycomVSTimeServerSetting=polycomVSTimeServerSetting, polycomVSPhoneNumber=polycomVSPhoneNumber, percentPacketLossExcessive=percentPacketLossExcessive, interfaceTypeChange=interfaceTypeChange, polycomVSPreviousNicType=polycomVSPreviousNicType, lineEnabled=lineEnabled, polycomVSNicLineNumber=polycomVSNicLineNumber, polycomVSMicData=polycomVSMicData, lineDisabled=lineDisabled, callFail=callFail, lineDown=lineDown)
