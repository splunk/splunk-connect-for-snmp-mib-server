#
# PySNMP MIB module A3COM-HUAWEI-FLOWTEMPLATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-FLOWTEMPLATE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:50:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
h3cCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "h3cCommon")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, MibIdentifier, TimeTicks, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, NotificationType, iso, Unsigned32, ObjectIdentity, Counter64, IpAddress, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibIdentifier", "TimeTicks", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "NotificationType", "iso", "Unsigned32", "ObjectIdentity", "Counter64", "IpAddress", "Integer32", "Counter32")
MacAddress, RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "RowStatus", "TextualConvention", "DisplayString")
h3cFlowTemplate = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64))
if mibBuilder.loadTexts: h3cFlowTemplate.setLastUpdated('200511241320Z')
if mibBuilder.loadTexts: h3cFlowTemplate.setOrganization('Huawei 3Com Technologies Co., Ltd.')
h3cFlowTemplateMibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1))
h3cFTConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1))
h3cFTGroupNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cFTGroupNextIndex.setStatus('current')
h3cFTGroupTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 2), )
if mibBuilder.loadTexts: h3cFTGroupTable.setStatus('current')
h3cFTGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-FLOWTEMPLATE-MIB", "h3cFTGroupIndex"))
if mibBuilder.loadTexts: h3cFTGroupEntry.setStatus('current')
h3cFTGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cFTGroupIndex.setStatus('current')
h3cFTGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFTGroupName.setStatus('current')
h3cFTGroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("basic", 1), ("extend", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFTGroupType.setStatus('current')
h3cFTGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFTGroupRowStatus.setStatus('current')
h3cFTBasicGroupTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 3), )
if mibBuilder.loadTexts: h3cFTBasicGroupTable.setStatus('current')
h3cFTBasicGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-FLOWTEMPLATE-MIB", "h3cFTGroupIndex"))
if mibBuilder.loadTexts: h3cFTBasicGroupEntry.setStatus('current')
h3cFTBasicGroupAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 3, 1, 1), Bits().clone(namedValues=NamedValues(("sourceIpv4Address", 0), ("destIPv4Address", 1), ("sourceIPv6Address", 2), ("destIPv6Address", 3), ("sourceMacAddress", 4), ("destMacAddress", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFTBasicGroupAddressType.setStatus('current')
h3cFTBasicGroupPriorityType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 3, 1, 2), Bits().clone(namedValues=NamedValues(("vlanID", 0), ("cos", 1), ("topVlanID", 2), ("topCos", 3), ("fragment", 4), ("tcpFlag", 5), ("tos", 6), ("dscp", 7), ("ipprecedence", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFTBasicGroupPriorityType.setStatus('current')
h3cFTBasicGroupProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 3, 1, 3), Bits().clone(namedValues=NamedValues(("l2Potocol", 0), ("ipv4L3Protocol", 1), ("ipv6L3Protocol", 2), ("icmpProtocolType", 3), ("icmpProtocolCode", 4), ("icmpv6ProtocolType", 5), ("icmpv6ProtocolCode", 6), ("sourceL4Port", 7), ("destL4Port", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFTBasicGroupProtocolType.setStatus('current')
h3cFTBasicGroupSMacWildCard = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 3, 1, 4), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFTBasicGroupSMacWildCard.setStatus('current')
h3cFTBasicGroupDMacWildCard = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 3, 1, 5), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFTBasicGroupDMacWildCard.setStatus('current')
h3cFTBasicGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFTBasicGroupRowStatus.setStatus('current')
h3cFTExtendGroupTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 4), )
if mibBuilder.loadTexts: h3cFTExtendGroupTable.setStatus('current')
h3cFTExtendGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-FLOWTEMPLATE-MIB", "h3cFTGroupIndex"), (0, "A3COM-HUAWEI-FLOWTEMPLATE-MIB", "h3cFTExtendGroupOffsetType"))
if mibBuilder.loadTexts: h3cFTExtendGroupEntry.setStatus('current')
h3cFTExtendGroupOffsetType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("start", 1), ("mpls", 2), ("l2", 3), ("l4", 4), ("l5", 5), ("ipv4", 6), ("ipv6", 7))))
if mibBuilder.loadTexts: h3cFTExtendGroupOffsetType.setStatus('current')
h3cFTExtendGroupOffsetMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 4, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFTExtendGroupOffsetMaxValue.setStatus('current')
h3cFTExtendGroupLengthMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 4, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFTExtendGroupLengthMaxValue.setStatus('current')
h3cFTExtendGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 1, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFTExtendGroupRowStatus.setStatus('current')
h3cFTApplyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 2))
h3cFTIfApplyTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 2, 1), )
if mibBuilder.loadTexts: h3cFTIfApplyTable.setStatus('current')
h3cFTIfApplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "A3COM-HUAWEI-FLOWTEMPLATE-MIB", "h3cFTGroupIndex"))
if mibBuilder.loadTexts: h3cFTIfApplyEntry.setStatus('current')
h3cFTIfApplyGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 2, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cFTIfApplyGroupName.setStatus('current')
h3cFTIfApplyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 10, 2, 64, 1, 2, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cFTIfApplyRowStatus.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-FLOWTEMPLATE-MIB", h3cFTGroupNextIndex=h3cFTGroupNextIndex, h3cFTIfApplyRowStatus=h3cFTIfApplyRowStatus, h3cFTBasicGroupPriorityType=h3cFTBasicGroupPriorityType, h3cFTExtendGroupTable=h3cFTExtendGroupTable, h3cFTGroupTable=h3cFTGroupTable, h3cFTApplyGroup=h3cFTApplyGroup, h3cFlowTemplate=h3cFlowTemplate, h3cFlowTemplateMibObject=h3cFlowTemplateMibObject, h3cFTBasicGroupProtocolType=h3cFTBasicGroupProtocolType, h3cFTExtendGroupLengthMaxValue=h3cFTExtendGroupLengthMaxValue, h3cFTBasicGroupDMacWildCard=h3cFTBasicGroupDMacWildCard, h3cFTExtendGroupOffsetMaxValue=h3cFTExtendGroupOffsetMaxValue, h3cFTBasicGroupTable=h3cFTBasicGroupTable, h3cFTExtendGroupOffsetType=h3cFTExtendGroupOffsetType, h3cFTIfApplyGroupName=h3cFTIfApplyGroupName, h3cFTBasicGroupRowStatus=h3cFTBasicGroupRowStatus, h3cFTGroupEntry=h3cFTGroupEntry, h3cFTGroupType=h3cFTGroupType, h3cFTGroupRowStatus=h3cFTGroupRowStatus, h3cFTExtendGroupRowStatus=h3cFTExtendGroupRowStatus, h3cFTIfApplyTable=h3cFTIfApplyTable, h3cFTExtendGroupEntry=h3cFTExtendGroupEntry, h3cFTBasicGroupAddressType=h3cFTBasicGroupAddressType, h3cFTGroupName=h3cFTGroupName, h3cFTBasicGroupEntry=h3cFTBasicGroupEntry, PYSNMP_MODULE_ID=h3cFlowTemplate, h3cFTGroupIndex=h3cFTGroupIndex, h3cFTBasicGroupSMacWildCard=h3cFTBasicGroupSMacWildCard, h3cFTIfApplyEntry=h3cFTIfApplyEntry, h3cFTConfigGroup=h3cFTConfigGroup)
