#
# PySNMP MIB module HPNSASCSI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPNSASCSI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:30:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, Integer32, ModuleIdentity, iso, Bits, Unsigned32, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter64, MibIdentifier, enterprises, TimeTicks, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Integer32", "ModuleIdentity", "iso", "Bits", "Unsigned32", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter64", "MibIdentifier", "enterprises", "TimeTicks", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hp = MibIdentifier((1, 3, 6, 1, 4, 1, 11))
nm = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2))
hpnsa = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23))
hpnsaScsi = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 14))
hpnsaScsiMibRev = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 1))
hpnsaScsiAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 2))
hpnsaScsiHba = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 3))
hpnsaScsiDev = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 4))
hpnsaScsiMibRevMajor = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiMibRevMajor.setStatus('mandatory')
hpnsaScsiMibRevMinor = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiMibRevMinor.setStatus('mandatory')
hpnsaScsiAgentModuleTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 2, 1), )
if mibBuilder.loadTexts: hpnsaScsiAgentModuleTable.setStatus('mandatory')
hpnsaScsiAgentModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 2, 1, 1), ).setIndexNames((0, "HPNSASCSI-MIB", "hpnsaScsiAgentModuleIndex"))
if mibBuilder.loadTexts: hpnsaScsiAgentModuleEntry.setStatus('mandatory')
hpnsaScsiAgentModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiAgentModuleIndex.setStatus('mandatory')
hpnsaScsiAgentModuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiAgentModuleName.setStatus('mandatory')
hpnsaScsiAgentModuleVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiAgentModuleVersion.setStatus('mandatory')
hpnsaScsiAgentModuleDate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiAgentModuleDate.setStatus('mandatory')
hpnsaScsiHbaTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 3, 1), )
if mibBuilder.loadTexts: hpnsaScsiHbaTable.setStatus('mandatory')
hpnsaScsiHbaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 3, 1, 1), ).setIndexNames((0, "HPNSASCSI-MIB", "hpnsaScsiHbaIndex"))
if mibBuilder.loadTexts: hpnsaScsiHbaEntry.setStatus('mandatory')
hpnsaScsiHbaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiHbaIndex.setStatus('mandatory')
hpnsaScsiHbaTargetId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiHbaTargetId.setStatus('mandatory')
hpnsaScsiHbaManagerId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiHbaManagerId.setStatus('mandatory')
hpnsaScsiHbaHostAdapterId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiHbaHostAdapterId.setStatus('mandatory')
hpnsaScsiDevTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 4, 1), )
if mibBuilder.loadTexts: hpnsaScsiDevTable.setStatus('mandatory')
hpnsaScsiDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 4, 1, 1), ).setIndexNames((0, "HPNSASCSI-MIB", "hpnsaScsiDevHbaIndex"), (0, "HPNSASCSI-MIB", "hpnsaScsiDevTargIdIndex"), (0, "HPNSASCSI-MIB", "hpnsaScsiDevLunIndex"))
if mibBuilder.loadTexts: hpnsaScsiDevEntry.setStatus('mandatory')
hpnsaScsiDevHbaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiDevHbaIndex.setStatus('mandatory')
hpnsaScsiDevTargIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiDevTargIdIndex.setStatus('mandatory')
hpnsaScsiDevLunIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiDevLunIndex.setStatus('mandatory')
hpnsaScsiDevType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiDevType.setStatus('mandatory')
hpnsaScsiDevRmb = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiDevRmb.setStatus('mandatory')
hpnsaScsiDevAnsiVer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiDevAnsiVer.setStatus('mandatory')
hpnsaScsiDevEcmaVer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiDevEcmaVer.setStatus('mandatory')
hpnsaScsiDevIsoVer = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiDevIsoVer.setStatus('mandatory')
hpnsaScsiDevVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 4, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiDevVendorId.setStatus('mandatory')
hpnsaScsiDevProductId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 4, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiDevProductId.setStatus('mandatory')
hpnsaScsiDevProductRev = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 4, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiDevProductRev.setStatus('mandatory')
hpnsaScsiDevLogicalBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 4, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiDevLogicalBlocks.setStatus('mandatory')
hpnsaScsiDevBlockLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 4, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiDevBlockLength.setStatus('mandatory')
hpnsaScsiDevCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 23, 14, 4, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnsaScsiDevCapacity.setStatus('mandatory')
mibBuilder.exportSymbols("HPNSASCSI-MIB", hpnsaScsiDevEntry=hpnsaScsiDevEntry, hpnsaScsiDevTable=hpnsaScsiDevTable, hpnsaScsiMibRevMinor=hpnsaScsiMibRevMinor, hpnsaScsiHbaHostAdapterId=hpnsaScsiHbaHostAdapterId, hpnsaScsiDevVendorId=hpnsaScsiDevVendorId, hpnsaScsiDevLunIndex=hpnsaScsiDevLunIndex, hpnsaScsiHbaIndex=hpnsaScsiHbaIndex, hpnsaScsiAgentModuleVersion=hpnsaScsiAgentModuleVersion, hpnsa=hpnsa, nm=nm, hpnsaScsiDevRmb=hpnsaScsiDevRmb, hpnsaScsiDevProductRev=hpnsaScsiDevProductRev, hpnsaScsiHbaTargetId=hpnsaScsiHbaTargetId, hpnsaScsiMibRevMajor=hpnsaScsiMibRevMajor, hpnsaScsiAgent=hpnsaScsiAgent, hpnsaScsiAgentModuleName=hpnsaScsiAgentModuleName, hp=hp, hpnsaScsiDevType=hpnsaScsiDevType, hpnsaScsi=hpnsaScsi, hpnsaScsiDevProductId=hpnsaScsiDevProductId, hpnsaScsiAgentModuleEntry=hpnsaScsiAgentModuleEntry, hpnsaScsiDevIsoVer=hpnsaScsiDevIsoVer, hpnsaScsiHbaEntry=hpnsaScsiHbaEntry, hpnsaScsiHba=hpnsaScsiHba, hpnsaScsiMibRev=hpnsaScsiMibRev, hpnsaScsiDev=hpnsaScsiDev, hpnsaScsiDevHbaIndex=hpnsaScsiDevHbaIndex, hpnsaScsiHbaManagerId=hpnsaScsiHbaManagerId, hpnsaScsiAgentModuleTable=hpnsaScsiAgentModuleTable, hpnsaScsiDevTargIdIndex=hpnsaScsiDevTargIdIndex, hpnsaScsiAgentModuleIndex=hpnsaScsiAgentModuleIndex, hpnsaScsiDevAnsiVer=hpnsaScsiDevAnsiVer, hpnsaScsiAgentModuleDate=hpnsaScsiAgentModuleDate, hpnsaScsiDevCapacity=hpnsaScsiDevCapacity, hpnsaScsiDevBlockLength=hpnsaScsiDevBlockLength, hpnsaScsiDevEcmaVer=hpnsaScsiDevEcmaVer, hpnsaScsiHbaTable=hpnsaScsiHbaTable, hpnsaScsiDevLogicalBlocks=hpnsaScsiDevLogicalBlocks)
