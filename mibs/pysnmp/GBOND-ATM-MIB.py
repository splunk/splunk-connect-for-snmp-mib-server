#
# PySNMP MIB module GBOND-ATM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/GBOND-ATM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:05:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
gBondMIB, = mibBuilder.importSymbols("GBOND-MIB", "gBondMIB")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
TimeTicks, Gauge32, Counter64, ModuleIdentity, Unsigned32, ObjectIdentity, iso, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, NotificationType, Bits, Counter32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Gauge32", "Counter64", "ModuleIdentity", "Unsigned32", "ObjectIdentity", "iso", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "NotificationType", "Bits", "Counter32", "Integer32")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
gBondAtmMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 211, 1))
gBondAtmMIB.setRevisions(('2007-05-14 00:00',))
if mibBuilder.loadTexts: gBondAtmMIB.setLastUpdated('200705140000Z')
if mibBuilder.loadTexts: gBondAtmMIB.setOrganization('IETF ADSL MIB Working Group')
gBondAtmObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 1, 1))
gBondAtmConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 1, 2))
gBondAtmPort = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 1, 1, 1))
gBondAtmPortConfTable = MibTable((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 1), )
if mibBuilder.loadTexts: gBondAtmPortConfTable.setStatus('current')
gBondAtmPortConfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: gBondAtmPortConfEntry.setStatus('current')
gBondAtmUpMaxDataRate = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1000000), ValueRangeConstraint(9999999, 9999999), ))).setUnits('Kbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondAtmUpMaxDataRate.setStatus('current')
gBondAtmDownMaxDataRate = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1000000), ValueRangeConstraint(9999999, 9999999), ))).setUnits('Kbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondAtmDownMaxDataRate.setStatus('current')
gBondAtmUpDiffDelayTolerence = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8176))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondAtmUpDiffDelayTolerence.setStatus('current')
gBondAtmDownDiffDelayTolerence = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8176))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondAtmDownDiffDelayTolerence.setStatus('current')
gBondAtmPortStatusTable = MibTable((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 2), )
if mibBuilder.loadTexts: gBondAtmPortStatusTable.setStatus('current')
gBondAtmPortStatusEntry = MibTableRow((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: gBondAtmPortStatusEntry.setStatus('current')
gBondAtmShowTime = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 2, 1, 1), TimeTicks()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondAtmShowTime.setStatus('current')
gBondAtmUpRxCellLossCount = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondAtmUpRxCellLossCount.setStatus('current')
gBondAtmDownRxCellLossCount = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondAtmDownRxCellLossCount.setStatus('current')
gBondAtmGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 1, 2, 1))
gBondAtmCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 1, 2, 2))
gBondAtmBasicGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 211, 1, 2, 1, 1)).setObjects(("GBOND-ATM-MIB", "gBondAtmUpMaxDataRate"), ("GBOND-ATM-MIB", "gBondAtmDownMaxDataRate"), ("GBOND-ATM-MIB", "gBondAtmUpDiffDelayTolerence"), ("GBOND-ATM-MIB", "gBondAtmDownDiffDelayTolerence"), ("GBOND-ATM-MIB", "gBondAtmShowTime"), ("GBOND-ATM-MIB", "gBondAtmUpRxCellLossCount"), ("GBOND-ATM-MIB", "gBondAtmDownRxCellLossCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gBondAtmBasicGroup = gBondAtmBasicGroup.setStatus('current')
gBondAtmCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 211, 1, 2, 2, 1)).setObjects(("GBOND-ATM-MIB", "gBondAtmBasicGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gBondAtmCompliance = gBondAtmCompliance.setStatus('current')
mibBuilder.exportSymbols("GBOND-ATM-MIB", gBondAtmBasicGroup=gBondAtmBasicGroup, gBondAtmPortConfEntry=gBondAtmPortConfEntry, gBondAtmDownRxCellLossCount=gBondAtmDownRxCellLossCount, gBondAtmDownMaxDataRate=gBondAtmDownMaxDataRate, gBondAtmObjects=gBondAtmObjects, gBondAtmDownDiffDelayTolerence=gBondAtmDownDiffDelayTolerence, gBondAtmPortStatusTable=gBondAtmPortStatusTable, gBondAtmCompliance=gBondAtmCompliance, gBondAtmGroups=gBondAtmGroups, gBondAtmUpDiffDelayTolerence=gBondAtmUpDiffDelayTolerence, gBondAtmUpRxCellLossCount=gBondAtmUpRxCellLossCount, gBondAtmCompliances=gBondAtmCompliances, gBondAtmUpMaxDataRate=gBondAtmUpMaxDataRate, gBondAtmPortConfTable=gBondAtmPortConfTable, PYSNMP_MODULE_ID=gBondAtmMIB, gBondAtmPortStatusEntry=gBondAtmPortStatusEntry, gBondAtmConformance=gBondAtmConformance, gBondAtmMIB=gBondAtmMIB, gBondAtmShowTime=gBondAtmShowTime, gBondAtmPort=gBondAtmPort)
