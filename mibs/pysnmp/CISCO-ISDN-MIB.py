#
# PySNMP MIB module CISCO-ISDN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-ISDN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:45:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
isdnSignalingIfIndex, isdnSignalingIndex, isdnLapdOperStatus = mibBuilder.importSymbols("ISDN-MIB", "isdnSignalingIfIndex", "isdnSignalingIndex", "isdnLapdOperStatus")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Gauge32, Unsigned32, IpAddress, ModuleIdentity, Integer32, iso, Counter32, NotificationType, Counter64, Bits, MibIdentifier, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Gauge32", "Unsigned32", "IpAddress", "ModuleIdentity", "Integer32", "iso", "Counter32", "NotificationType", "Counter64", "Bits", "MibIdentifier", "ObjectIdentity")
DisplayString, RowStatus, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TimeStamp")
ciscoIsdnMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 26))
ciscoIsdnMib.setRevisions(('2001-02-09 00:00', '2000-03-27 00:00', '2000-02-23 00:00', '1999-05-07 00:00', '1996-02-21 00:00', '1995-08-15 00:00', '1995-01-30 00:00',))
if mibBuilder.loadTexts: ciscoIsdnMib.setLastUpdated('200102090000Z')
if mibBuilder.loadTexts: ciscoIsdnMib.setOrganization('Cisco Systems, Inc.')
ciscoIsdnMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 26, 1))
isdnNeighbor = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1))
demandNbrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1), )
if mibBuilder.loadTexts: demandNbrTable.setStatus('current')
demandNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-ISDN-MIB", "demandNbrPhysIf"), (0, "CISCO-ISDN-MIB", "demandNbrId"))
if mibBuilder.loadTexts: demandNbrEntry.setStatus('current')
demandNbrPhysIf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: demandNbrPhysIf.setStatus('current')
demandNbrId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: demandNbrId.setStatus('current')
demandNbrLogIf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: demandNbrLogIf.setStatus('current')
demandNbrName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: demandNbrName.setStatus('current')
demandNbrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1, 1, 5), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: demandNbrAddress.setStatus('current')
demandNbrPermission = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("iCanCallHim", 1), ("heCanCallMe", 2), ("weCanCallEachOther", 3))).clone('weCanCallEachOther')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: demandNbrPermission.setStatus('current')
demandNbrMaxDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(2147483647)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: demandNbrMaxDuration.setStatus('current')
demandNbrLastDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: demandNbrLastDuration.setStatus('current')
demandNbrClearReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: demandNbrClearReason.setStatus('current')
demandNbrClearCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: demandNbrClearCode.setStatus('current')
demandNbrSuccessCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: demandNbrSuccessCalls.setStatus('current')
demandNbrFailCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: demandNbrFailCalls.setStatus('current')
demandNbrAcceptCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: demandNbrAcceptCalls.setStatus('current')
demandNbrRefuseCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: demandNbrRefuseCalls.setStatus('current')
demandNbrLastAttemptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1, 1, 15), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: demandNbrLastAttemptTime.setStatus('current')
demandNbrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: demandNbrStatus.setStatus('current')
demandNbrCallOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 26, 1, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("originate", 1), ("answer", 2), ("callback", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: demandNbrCallOrigin.setStatus('current')
ciscoIsdnMibTrapPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 26, 2))
ciscoIsdnMibTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 26, 2, 0))
demandNbrCallInformation = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 26, 2, 0, 1)).setObjects(("CISCO-ISDN-MIB", "demandNbrLogIf"), ("CISCO-ISDN-MIB", "demandNbrName"), ("CISCO-ISDN-MIB", "demandNbrAddress"), ("CISCO-ISDN-MIB", "demandNbrLastDuration"), ("CISCO-ISDN-MIB", "demandNbrClearReason"), ("CISCO-ISDN-MIB", "demandNbrClearCode"))
if mibBuilder.loadTexts: demandNbrCallInformation.setStatus('obsolete')
demandNbrCallDetails = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 26, 2, 0, 2)).setObjects(("CISCO-ISDN-MIB", "demandNbrLogIf"), ("CISCO-ISDN-MIB", "demandNbrName"), ("CISCO-ISDN-MIB", "demandNbrAddress"), ("CISCO-ISDN-MIB", "demandNbrLastDuration"), ("CISCO-ISDN-MIB", "demandNbrClearReason"), ("CISCO-ISDN-MIB", "demandNbrClearCode"), ("CISCO-ISDN-MIB", "demandNbrCallOrigin"))
if mibBuilder.loadTexts: demandNbrCallDetails.setStatus('current')
demandNbrLayer2Change = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 26, 2, 0, 3)).setObjects(("IF-MIB", "ifIndex"), ("ISDN-MIB", "isdnLapdOperStatus"))
if mibBuilder.loadTexts: demandNbrLayer2Change.setStatus('current')
demandNbrCNANotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 26, 2, 0, 4)).setObjects(("ISDN-MIB", "isdnSignalingIfIndex"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: demandNbrCNANotification.setStatus('current')
ciscoIsdnMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 26, 3))
ciscoIsdnMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 26, 3, 1))
ciscoIsdnMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 26, 3, 2))
ciscoIsdnMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 26, 3, 1, 1)).setObjects(("CISCO-ISDN-MIB", "ciscoIsdnMibGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIsdnMibCompliance = ciscoIsdnMibCompliance.setStatus('current')
ciscoIsdnMibComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 26, 3, 1, 2)).setObjects(("CISCO-ISDN-MIB", "ciscoIsdnMibGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIsdnMibComplianceRev1 = ciscoIsdnMibComplianceRev1.setStatus('current')
ciscoIsdnMibGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 26, 3, 2, 1)).setObjects(("CISCO-ISDN-MIB", "demandNbrLogIf"), ("CISCO-ISDN-MIB", "demandNbrName"), ("CISCO-ISDN-MIB", "demandNbrAddress"), ("CISCO-ISDN-MIB", "demandNbrPermission"), ("CISCO-ISDN-MIB", "demandNbrMaxDuration"), ("CISCO-ISDN-MIB", "demandNbrLastDuration"), ("CISCO-ISDN-MIB", "demandNbrClearReason"), ("CISCO-ISDN-MIB", "demandNbrClearCode"), ("CISCO-ISDN-MIB", "demandNbrSuccessCalls"), ("CISCO-ISDN-MIB", "demandNbrFailCalls"), ("CISCO-ISDN-MIB", "demandNbrAcceptCalls"), ("CISCO-ISDN-MIB", "demandNbrRefuseCalls"), ("CISCO-ISDN-MIB", "demandNbrLastAttemptTime"), ("CISCO-ISDN-MIB", "demandNbrStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIsdnMibGroup = ciscoIsdnMibGroup.setStatus('current')
ciscoIsdnMibGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 26, 3, 2, 2)).setObjects(("CISCO-ISDN-MIB", "demandNbrLogIf"), ("CISCO-ISDN-MIB", "demandNbrName"), ("CISCO-ISDN-MIB", "demandNbrAddress"), ("CISCO-ISDN-MIB", "demandNbrPermission"), ("CISCO-ISDN-MIB", "demandNbrMaxDuration"), ("CISCO-ISDN-MIB", "demandNbrLastDuration"), ("CISCO-ISDN-MIB", "demandNbrClearReason"), ("CISCO-ISDN-MIB", "demandNbrClearCode"), ("CISCO-ISDN-MIB", "demandNbrSuccessCalls"), ("CISCO-ISDN-MIB", "demandNbrFailCalls"), ("CISCO-ISDN-MIB", "demandNbrAcceptCalls"), ("CISCO-ISDN-MIB", "demandNbrRefuseCalls"), ("CISCO-ISDN-MIB", "demandNbrLastAttemptTime"), ("CISCO-ISDN-MIB", "demandNbrStatus"), ("CISCO-ISDN-MIB", "demandNbrCallOrigin"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoIsdnMibGroupRev1 = ciscoIsdnMibGroupRev1.setStatus('current')
mibBuilder.exportSymbols("CISCO-ISDN-MIB", demandNbrId=demandNbrId, demandNbrLogIf=demandNbrLogIf, demandNbrCallOrigin=demandNbrCallOrigin, PYSNMP_MODULE_ID=ciscoIsdnMib, ciscoIsdnMibConformance=ciscoIsdnMibConformance, ciscoIsdnMibGroups=ciscoIsdnMibGroups, ciscoIsdnMibTrapPrefix=ciscoIsdnMibTrapPrefix, demandNbrLastDuration=demandNbrLastDuration, demandNbrCNANotification=demandNbrCNANotification, demandNbrAddress=demandNbrAddress, demandNbrPhysIf=demandNbrPhysIf, demandNbrSuccessCalls=demandNbrSuccessCalls, isdnNeighbor=isdnNeighbor, demandNbrName=demandNbrName, demandNbrClearCode=demandNbrClearCode, demandNbrStatus=demandNbrStatus, demandNbrLayer2Change=demandNbrLayer2Change, ciscoIsdnMibCompliance=ciscoIsdnMibCompliance, demandNbrCallInformation=demandNbrCallInformation, ciscoIsdnMibGroupRev1=ciscoIsdnMibGroupRev1, ciscoIsdnMibCompliances=ciscoIsdnMibCompliances, ciscoIsdnMibTraps=ciscoIsdnMibTraps, demandNbrCallDetails=demandNbrCallDetails, ciscoIsdnMibComplianceRev1=ciscoIsdnMibComplianceRev1, demandNbrPermission=demandNbrPermission, demandNbrTable=demandNbrTable, ciscoIsdnMibObjects=ciscoIsdnMibObjects, ciscoIsdnMib=ciscoIsdnMib, demandNbrAcceptCalls=demandNbrAcceptCalls, demandNbrFailCalls=demandNbrFailCalls, demandNbrRefuseCalls=demandNbrRefuseCalls, demandNbrEntry=demandNbrEntry, demandNbrClearReason=demandNbrClearReason, ciscoIsdnMibGroup=ciscoIsdnMibGroup, demandNbrMaxDuration=demandNbrMaxDuration, demandNbrLastAttemptTime=demandNbrLastAttemptTime)
