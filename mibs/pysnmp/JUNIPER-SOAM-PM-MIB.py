#
# PySNMP MIB module JUNIPER-SOAM-PM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-SOAM-PM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:50:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
dot1agCfmMepEntry, Dot1agCfmMepIdOrZero, dot1agCfmMepIdentifier, dot1agCfmMdIndex, Dot1afCfmIndexIntegerNextFree, dot1agCfmMaIndex = mibBuilder.importSymbols("IEEE8021-CFM-MIB", "dot1agCfmMepEntry", "Dot1agCfmMepIdOrZero", "dot1agCfmMepIdentifier", "dot1agCfmMdIndex", "Dot1afCfmIndexIntegerNextFree", "dot1agCfmMaIndex")
ieee802dot1mibs, IEEE8021VlanIndex = mibBuilder.importSymbols("IEEE8021-TC-MIB", "ieee802dot1mibs", "IEEE8021VlanIndex")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
jnxMibs, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxMibs")
LldpPortIdSubtype, LldpPortId, LldpChassisId, LldpChassisIdSubtype = mibBuilder.importSymbols("LLDP-MIB", "LldpPortIdSubtype", "LldpPortId", "LldpChassisId", "LldpChassisIdSubtype")
VlanIdOrNone, VlanId = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIdOrNone", "VlanId")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter32, Counter64, Gauge32, iso, ModuleIdentity, Integer32, Unsigned32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, TimeTicks, IpAddress, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Counter64", "Gauge32", "iso", "ModuleIdentity", "Integer32", "Unsigned32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "TimeTicks", "IpAddress", "ObjectIdentity")
TimeStamp, TAddress, TextualConvention, TruthValue, MacAddress, DisplayString, RowStatus, TDomain, DateAndTime, TimeInterval = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TAddress", "TextualConvention", "TruthValue", "MacAddress", "DisplayString", "RowStatus", "TDomain", "DateAndTime", "TimeInterval")
jnxSoamPmMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 78))
jnxSoamPmMib.setRevisions(('2012-01-13 12:00',))
if mibBuilder.loadTexts: jnxSoamPmMib.setLastUpdated('201201131200Z')
if mibBuilder.loadTexts: jnxSoamPmMib.setOrganization('Juniper Networks, Inc.')
jnxSoamPmNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 78, 0))
jnxSoamPmMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1))
jnxSoamPmMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 78, 2))
jnxSoamPmMep = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 1))
jnxSoamPmLmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2))
jnxSoamPmDmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3))
jnxSoamPmNotificationCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 4))
jnxSoamPmNotificationObj = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 5))
class IEEE8021PriorityValue(TextualConvention, Unsigned32):
    reference = '12.13.3.3'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class JnxSoamTcTestPatternType(TextualConvention, Integer32):
    reference = '[MEF7.1], Appendix III.2 Enumeration, [Y.1731] 7.7'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("null", 1), ("nullCrc32", 2), ("prbs", 3), ("prbsCrc32", 4))

class JnxSoamTcDataPatternType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("zeroPattern", 1), ("onesPattern", 2))

class JnxSoamTcOperationTimeType(TextualConvention, Integer32):
    reference = '[SOAM-PM] R2, [SOAM-FM] 8.7'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("none", 1), ("immediate", 2), ("relative", 3), ("fixed", 4))

jnxSoamPmMepTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 1, 1), )
if mibBuilder.loadTexts: jnxSoamPmMepTable.setStatus('current')
jnxSoamPmMepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 1, 1, 1), )
dot1agCfmMepEntry.registerAugmentions(("JUNIPER-SOAM-PM-MIB", "jnxSoamPmMepEntry"))
jnxSoamPmMepEntry.setIndexNames(*dot1agCfmMepEntry.getIndexNames())
if mibBuilder.loadTexts: jnxSoamPmMepEntry.setStatus('current')
jnxSoamPmMepOperNextIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 1, 1, 1, 1), Dot1afCfmIndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamPmMepOperNextIndex.setStatus('current')
jnxSoamPmMepLmSingleEndedResponder = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 1, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamPmMepLmSingleEndedResponder.setStatus('current')
jnxSoamPmMepSlmSingleEndedResponder = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 1, 1, 1, 3), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamPmMepSlmSingleEndedResponder.setStatus('current')
jnxSoamPmMepDmSingleEndedResponder = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 1, 1, 1, 4), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamPmMepDmSingleEndedResponder.setStatus('current')
jnxSoamLmCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1), )
if mibBuilder.loadTexts: jnxSoamLmCfgTable.setStatus('current')
jnxSoamLmCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1), ).setIndexNames((0, "IEEE8021-CFM-MIB", "dot1agCfmMdIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMaIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMepIdentifier"), (0, "JUNIPER-SOAM-PM-MIB", "jnxSoamLmCfgIndex"))
if mibBuilder.loadTexts: jnxSoamLmCfgEntry.setStatus('current')
jnxSoamLmCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgIndex.setStatus('current')
jnxSoamLmCfgType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("lmLmm", 1), ("lmSlm", 2), ("lmCcm", 3))).clone('lmSlm')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgType.setStatus('current')
jnxSoamLmCfgVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgVersion.setStatus('current')
jnxSoamLmCfgEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 4), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgEnabled.setStatus('current')
jnxSoamLmCfgMeasurementEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 5), Bits().clone(namedValues=NamedValues(("bForwardTransmitedFrames", 0), ("bForwardReceivedFrames", 1), ("bForwardMinFlr", 2), ("bForwardMaxFlr", 3), ("bForwardAvgFlr", 4), ("bBackwardTransmitedFrames", 5), ("bBackwardReceivedFrames", 6), ("bBackwardMinFlr", 7), ("bBackwardMaxFlr", 8), ("bBackwardAvgFlr", 9), ("bSoamPdusSent", 10), ("bSoamPdusReceived", 11), ("bMeasuredStatsForwardMeasuredFlr", 26), ("bMeasuredStatsBackwardMeasuredFlr", 27)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgMeasurementEnable.setStatus('current')
jnxSoamLmCfgMessagePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 6), Integer32().clone(1000)).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgMessagePeriod.setStatus('current')
jnxSoamLmCfgPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 7), IEEE8021PriorityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgPriority.setStatus('current')
jnxSoamLmCfgFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 9600)).clone(64)).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgFrameSize.setStatus('current')
jnxSoamLmCfgDataPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 9), JnxSoamTcDataPatternType().clone('zeroPattern')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgDataPattern.setStatus('current')
jnxSoamLmCfgTestTlvIncluded = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 10), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgTestTlvIncluded.setStatus('current')
jnxSoamLmCfgTestTlvPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 11), JnxSoamTcTestPatternType().clone('null')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgTestTlvPattern.setStatus('current')
jnxSoamLmCfgNumIntervalsStored = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgNumIntervalsStored.setStatus('current')
jnxSoamLmCfgDestMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 13), Dot1agCfmMepIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgDestMepId.setStatus('current')
jnxSoamLmCfgDestIsMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 14), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgDestIsMepId.setStatus('current')
jnxSoamLmCfgStartTimeType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 15), JnxSoamTcOperationTimeType().clone('immediate')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgStartTimeType.setStatus('current')
jnxSoamLmCfgFixedStartDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 16), DateAndTime().clone(hexValue="0000010100000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgFixedStartDateAndTime.setStatus('current')
jnxSoamLmCfgRelativeStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 17), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgRelativeStartTime.setStatus('current')
jnxSoamLmCfgRepetitionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31536000))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgRepetitionTime.setStatus('current')
jnxSoamLmCfgAlignMeasurementIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 19), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgAlignMeasurementIntervals.setStatus('current')
jnxSoamLmCfgAlignMeasurementOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 525600))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgAlignMeasurementOffset.setStatus('current')
jnxSoamLmCfgSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 42)).clone('proactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgSessionType.setStatus('current')
jnxSoamLmCfgSessionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 22), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 44))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgSessionStatus.setStatus('current')
jnxSoamLmCfgHistoryClear = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 23), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgHistoryClear.setStatus('current')
jnxSoamLmCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 1, 1, 24), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCfgRowStatus.setStatus('current')
jnxSoamLmMeasuredStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 2), )
if mibBuilder.loadTexts: jnxSoamLmMeasuredStatsTable.setStatus('current')
jnxSoamLmMeasuredStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 2, 1), ).setIndexNames((0, "IEEE8021-CFM-MIB", "dot1agCfmMdIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMaIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMepIdentifier"), (0, "JUNIPER-SOAM-PM-MIB", "jnxSoamLmCfgIndex"))
if mibBuilder.loadTexts: jnxSoamLmMeasuredStatsEntry.setStatus('current')
jnxSoamLmMeasuredStatsForwardFlr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('milli-percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmMeasuredStatsForwardFlr.setStatus('current')
jnxSoamLmMeasuredStatsBackwardFlr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('milli-percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmMeasuredStatsBackwardFlr.setStatus('current')
jnxSoamLmCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 3), )
if mibBuilder.loadTexts: jnxSoamLmCurrentStatsTable.setStatus('current')
jnxSoamLmCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 3, 1), ).setIndexNames((0, "IEEE8021-CFM-MIB", "dot1agCfmMdIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMaIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMepIdentifier"), (0, "JUNIPER-SOAM-PM-MIB", "jnxSoamLmCfgIndex"))
if mibBuilder.loadTexts: jnxSoamLmCurrentStatsEntry.setStatus('current')
jnxSoamLmCurrentStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCurrentStatsIndex.setStatus('current')
jnxSoamLmCurrentStatsStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 3, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCurrentStatsStartTime.setStatus('current')
jnxSoamLmCurrentStatsElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 3, 1, 3), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCurrentStatsElapsedTime.setStatus('current')
jnxSoamLmCurrentStatsSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 3, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCurrentStatsSuspect.setStatus('current')
jnxSoamLmCurrentStatsForwardTransmittedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCurrentStatsForwardTransmittedFrames.setStatus('current')
jnxSoamLmCurrentStatsForwardReceivedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCurrentStatsForwardReceivedFrames.setStatus('current')
jnxSoamLmCurrentStatsForwardMinFlr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('milli-percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCurrentStatsForwardMinFlr.setStatus('current')
jnxSoamLmCurrentStatsForwardMaxFlr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 3, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('milli-percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCurrentStatsForwardMaxFlr.setStatus('current')
jnxSoamLmCurrentStatsForwardAvgFlr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 3, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('milli-percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCurrentStatsForwardAvgFlr.setStatus('current')
jnxSoamLmCurrentStatsBackwardTransmittedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 3, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCurrentStatsBackwardTransmittedFrames.setStatus('current')
jnxSoamLmCurrentStatsBackwardReceivedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 3, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCurrentStatsBackwardReceivedFrames.setStatus('current')
jnxSoamLmCurrentStatsBackwardMinFlr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 3, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('milli-percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCurrentStatsBackwardMinFlr.setStatus('current')
jnxSoamLmCurrentStatsBackwardMaxFlr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 3, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('milli-percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCurrentStatsBackwardMaxFlr.setStatus('current')
jnxSoamLmCurrentStatsBackwardAvgFlr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 3, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('milli-percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCurrentStatsBackwardAvgFlr.setStatus('current')
jnxSoamLmCurrentStatsSoamPdusSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 3, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCurrentStatsSoamPdusSent.setStatus('current')
jnxSoamLmCurrentStatsSoamPdusReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 3, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmCurrentStatsSoamPdusReceived.setStatus('current')
jnxSoamLmHistoryStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 4), )
if mibBuilder.loadTexts: jnxSoamLmHistoryStatsTable.setStatus('current')
jnxSoamLmHistoryStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 4, 1), ).setIndexNames((0, "IEEE8021-CFM-MIB", "dot1agCfmMdIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMaIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMepIdentifier"), (0, "JUNIPER-SOAM-PM-MIB", "jnxSoamLmCfgIndex"), (0, "JUNIPER-SOAM-PM-MIB", "jnxSoamLmHistoryStatsIndex"))
if mibBuilder.loadTexts: jnxSoamLmHistoryStatsEntry.setStatus('current')
jnxSoamLmHistoryStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmHistoryStatsIndex.setStatus('current')
jnxSoamLmHistoryStatsEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 4, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmHistoryStatsEndTime.setStatus('current')
jnxSoamLmHistoryStatsElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 4, 1, 3), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmHistoryStatsElapsedTime.setStatus('current')
jnxSoamLmHistoryStatsSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 4, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmHistoryStatsSuspect.setStatus('current')
jnxSoamLmHistoryStatsForwardTransmittedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmHistoryStatsForwardTransmittedFrames.setStatus('current')
jnxSoamLmHistoryStatsForwardReceivedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmHistoryStatsForwardReceivedFrames.setStatus('current')
jnxSoamLmHistoryStatsForwardMinFlr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 4, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('milli-percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmHistoryStatsForwardMinFlr.setStatus('current')
jnxSoamLmHistoryStatsForwardMaxFlr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 4, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('milli-percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmHistoryStatsForwardMaxFlr.setStatus('current')
jnxSoamLmHistoryStatsForwardAvgFlr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 4, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('milli-percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmHistoryStatsForwardAvgFlr.setStatus('current')
jnxSoamLmHistoryStatsBackwardTransmittedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 4, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmHistoryStatsBackwardTransmittedFrames.setStatus('current')
jnxSoamLmHistoryStatsBackwardReceivedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 4, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmHistoryStatsBackwardReceivedFrames.setStatus('current')
jnxSoamLmHistoryStatsBackwardMinFlr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 4, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('milli-percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmHistoryStatsBackwardMinFlr.setStatus('current')
jnxSoamLmHistoryStatsBackwardMaxFlr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 4, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('milli-percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmHistoryStatsBackwardMaxFlr.setStatus('current')
jnxSoamLmHistoryStatsBackwardAvgFlr = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 4, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('milli-percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmHistoryStatsBackwardAvgFlr.setStatus('current')
jnxSoamLmHistoryStatsSoamPdusSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 4, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmHistoryStatsSoamPdusSent.setStatus('current')
jnxSoamLmHistoryStatsSoamPdusReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 4, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmHistoryStatsSoamPdusReceived.setStatus('current')
jnxSoamDmCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1), )
if mibBuilder.loadTexts: jnxSoamDmCfgTable.setStatus('current')
jnxSoamDmCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1), ).setIndexNames((0, "IEEE8021-CFM-MIB", "dot1agCfmMdIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMaIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMepIdentifier"), (0, "JUNIPER-SOAM-PM-MIB", "jnxSoamDmCfgIndex"))
if mibBuilder.loadTexts: jnxSoamDmCfgEntry.setStatus('current')
jnxSoamDmCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgIndex.setStatus('current')
jnxSoamDmCfgType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dmDmm", 1), ("dm1DmTx", 2), ("dm1DmRx", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgType.setStatus('current')
jnxSoamDmCfgVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgVersion.setStatus('current')
jnxSoamDmCfgEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 4), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgEnabled.setStatus('current')
jnxSoamDmCfgMeasurementEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 5), Bits().clone(namedValues=NamedValues(("bSoamPdusSent", 0), ("bSoamPdusReceived", 1), ("bFrameDelayTwoWayBins", 2), ("bFrameDelayTwoWayMin", 3), ("bFrameDelayTwoWayMax", 4), ("bFrameDelayTwoWayAvg", 5), ("bFrameDelayForwardBins", 6), ("bFrameDelayForwardMin", 7), ("bFrameDelayForwardMax", 8), ("bFrameDelayForwardAvg", 9), ("bFrameDelayBackwardBins", 10), ("bFrameDelayBackwardMin", 11), ("bFrameDelayBackwardMax", 12), ("bFrameDelayBackwardAvg", 13), ("bIfdvForwardBins", 14), ("bIfdvForwardMin", 15), ("bIfdvForwardMax", 16), ("bIfdvForwardAvg", 17), ("bIfdvBackwardBins", 18), ("bIfdvBackwardMin", 19), ("bIfdvBackwardMax", 20), ("bIfdvBackwardAvg", 21), ("bIfdvTwoWayBins", 22), ("bIfdvTwoWayMin", 23), ("bIfdvTwoWayMax", 24), ("bIfdvTwoWayAvg", 25), ("bFrameDelayRangeForwardBins", 26), ("bFrameDelayRangeForwardMax", 27), ("bFrameDelayRangeForwardAvg", 28), ("bFrameDelayRangeBackwardBins", 29), ("bFrameDelayRangeBackwardMax", 30), ("bFrameDelayRangeBackwardAvg", 31), ("bFrameDelayRangeTwoWayBins", 32), ("bFrameDelayRangeTwoWayMax", 33), ("bFrameDelayRangeTwoWayAvg", 34), ("bMeasuredStatsFrameDelayTwoWay", 35), ("bMeasuredStatsFrameDelayForward", 36), ("bMeasuredStatsFrameDelayBackward", 37), ("bMeasuredStatsIfdvTwoWay", 38), ("bMeasuredStatsIfdvForward", 39), ("bMeasuredStatsIfdvBackward", 40)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgMeasurementEnable.setStatus('current')
jnxSoamDmCfgMessagePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 6), Integer32().clone(100)).setUnits('ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgMessagePeriod.setStatus('current')
jnxSoamDmCfgPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 7), IEEE8021PriorityValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgPriority.setStatus('current')
jnxSoamDmCfgFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 8), Unsigned32().clone(64)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgFrameSize.setStatus('current')
jnxSoamDmCfgDataPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 9), JnxSoamTcDataPatternType().clone('zeroPattern')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgDataPattern.setStatus('current')
jnxSoamDmCfgTestTlvIncluded = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 10), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgTestTlvIncluded.setStatus('current')
jnxSoamDmCfgTestTlvPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 11), JnxSoamTcTestPatternType().clone('null')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgTestTlvPattern.setStatus('current')
jnxSoamDmCfgNumIntervalsStored = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgNumIntervalsStored.setStatus('current')
jnxSoamDmCfgDestMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 13), Dot1agCfmMepIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgDestMepId.setStatus('current')
jnxSoamDmCfgDestIsMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 14), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgDestIsMepId.setStatus('current')
jnxSoamDmCfgStartTimeType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 15), JnxSoamTcOperationTimeType().clone('immediate')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgStartTimeType.setStatus('current')
jnxSoamDmCfgRepetitionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31536000))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgRepetitionTime.setStatus('current')
jnxSoamDmCfgAlignMeasurementIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 17), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgAlignMeasurementIntervals.setStatus('current')
jnxSoamDmCfgInterFrameDelayVariationSelectionOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgInterFrameDelayVariationSelectionOffset.setStatus('current')
jnxSoamDmCfgSessionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 42)).clone('proactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgSessionType.setStatus('current')
jnxSoamDmCfgSessionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 42))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgSessionStatus.setStatus('current')
jnxSoamDmCfgHistoryClear = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 21), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgHistoryClear.setStatus('current')
jnxSoamDmCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 1, 1, 22), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCfgRowStatus.setStatus('current')
jnxSoamDmMeasuredStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 2), )
if mibBuilder.loadTexts: jnxSoamDmMeasuredStatsTable.setStatus('current')
jnxSoamDmMeasuredStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 2, 1), ).setIndexNames((0, "IEEE8021-CFM-MIB", "dot1agCfmMdIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMaIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMepIdentifier"), (0, "JUNIPER-SOAM-PM-MIB", "jnxSoamDmCfgIndex"))
if mibBuilder.loadTexts: jnxSoamDmMeasuredStatsEntry.setStatus('current')
jnxSoamDmMeasuredStatsFrameDelayTwoWay = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 2, 1, 1), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmMeasuredStatsFrameDelayTwoWay.setStatus('current')
jnxSoamDmMeasuredStatsFrameDelayForward = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 2, 1, 2), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmMeasuredStatsFrameDelayForward.setStatus('current')
jnxSoamDmMeasuredStatsFrameDelayBackward = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 2, 1, 3), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmMeasuredStatsFrameDelayBackward.setStatus('current')
jnxSoamDmMeasuredStatsIfdvTwoWay = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 2, 1, 4), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmMeasuredStatsIfdvTwoWay.setStatus('current')
jnxSoamDmMeasuredStatsIfdvForward = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 2, 1, 5), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmMeasuredStatsIfdvForward.setStatus('current')
jnxSoamDmMeasuredStatsIfdvBackward = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 2, 1, 6), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmMeasuredStatsIfdvBackward.setStatus('current')
jnxSoamDmCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3), )
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsTable.setStatus('current')
jnxSoamDmCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1), ).setIndexNames((0, "IEEE8021-CFM-MIB", "dot1agCfmMdIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMaIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMepIdentifier"), (0, "JUNIPER-SOAM-PM-MIB", "jnxSoamDmCfgIndex"))
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsEntry.setStatus('current')
jnxSoamDmCurrentStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsIndex.setStatus('current')
jnxSoamDmCurrentStatsStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsStartTime.setStatus('current')
jnxSoamDmCurrentStatsElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 3), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsElapsedTime.setStatus('current')
jnxSoamDmCurrentStatsSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsSuspect.setStatus('current')
jnxSoamDmCurrentStatsFrameDelayTwoWayMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 5), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsFrameDelayTwoWayMin.setStatus('current')
jnxSoamDmCurrentStatsFrameDelayTwoWayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 6), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsFrameDelayTwoWayMax.setStatus('current')
jnxSoamDmCurrentStatsFrameDelayTwoWayAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 7), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsFrameDelayTwoWayAvg.setStatus('current')
jnxSoamDmCurrentStatsFrameDelayForwardMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 8), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsFrameDelayForwardMin.setStatus('current')
jnxSoamDmCurrentStatsFrameDelayForwardMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 9), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsFrameDelayForwardMax.setStatus('current')
jnxSoamDmCurrentStatsFrameDelayForwardAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 10), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsFrameDelayForwardAvg.setStatus('current')
jnxSoamDmCurrentStatsFrameDelayBackwardMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 11), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsFrameDelayBackwardMin.setStatus('current')
jnxSoamDmCurrentStatsFrameDelayBackwardMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 12), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsFrameDelayBackwardMax.setStatus('current')
jnxSoamDmCurrentStatsFrameDelayBackwardAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 13), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsFrameDelayBackwardAvg.setStatus('current')
jnxSoamDmCurrentStatsIfdvForwardMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 14), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsIfdvForwardMin.setStatus('current')
jnxSoamDmCurrentStatsIfdvForwardMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 15), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsIfdvForwardMax.setStatus('current')
jnxSoamDmCurrentStatsIfdvForwardAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 16), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsIfdvForwardAvg.setStatus('current')
jnxSoamDmCurrentStatsIfdvBackwardMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 17), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsIfdvBackwardMin.setStatus('current')
jnxSoamDmCurrentStatsIfdvBackwardMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 18), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsIfdvBackwardMax.setStatus('current')
jnxSoamDmCurrentStatsIfdvBackwardAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 19), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsIfdvBackwardAvg.setStatus('current')
jnxSoamDmCurrentStatsIfdvTwoWayMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 20), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsIfdvTwoWayMin.setStatus('current')
jnxSoamDmCurrentStatsIfdvTwoWayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 21), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsIfdvTwoWayMax.setStatus('current')
jnxSoamDmCurrentStatsIfdvTwoWayAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 22), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsIfdvTwoWayAvg.setStatus('current')
jnxSoamDmCurrentStatsSoamPdusSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsSoamPdusSent.setStatus('current')
jnxSoamDmCurrentStatsSoamPdusReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 3, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmCurrentStatsSoamPdusReceived.setStatus('current')
jnxSoamDmHistoryStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4), )
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsTable.setStatus('current')
jnxSoamDmHistoryStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1), ).setIndexNames((0, "IEEE8021-CFM-MIB", "dot1agCfmMdIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMaIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMepIdentifier"), (0, "JUNIPER-SOAM-PM-MIB", "jnxSoamDmCfgIndex"), (0, "JUNIPER-SOAM-PM-MIB", "jnxSoamDmHistoryStatsIndex"))
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsEntry.setStatus('current')
jnxSoamDmHistoryStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsIndex.setStatus('current')
jnxSoamDmHistoryStatsEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsEndTime.setStatus('current')
jnxSoamDmHistoryStatsElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 3), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsElapsedTime.setStatus('current')
jnxSoamDmHistoryStatsSuspect = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsSuspect.setStatus('current')
jnxSoamDmHistoryStatsFrameDelayTwoWayMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 5), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsFrameDelayTwoWayMin.setStatus('current')
jnxSoamDmHistoryStatsFrameDelayTwoWayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 6), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsFrameDelayTwoWayMax.setStatus('current')
jnxSoamDmHistoryStatsFrameDelayTwoWayAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 7), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsFrameDelayTwoWayAvg.setStatus('current')
jnxSoamDmHistoryStatsFrameDelayForwardMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 8), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsFrameDelayForwardMin.setStatus('current')
jnxSoamDmHistoryStatsFrameDelayForwardMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 9), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsFrameDelayForwardMax.setStatus('current')
jnxSoamDmHistoryStatsFrameDelayForwardAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 10), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsFrameDelayForwardAvg.setStatus('current')
jnxSoamDmHistoryStatsFrameDelayBackwardMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 11), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsFrameDelayBackwardMin.setStatus('current')
jnxSoamDmHistoryStatsFrameDelayBackwardMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 12), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsFrameDelayBackwardMax.setStatus('current')
jnxSoamDmHistoryStatsFrameDelayBackwardAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 13), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsFrameDelayBackwardAvg.setStatus('current')
jnxSoamDmHistoryStatsIfdvForwardMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 14), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsIfdvForwardMin.setStatus('current')
jnxSoamDmHistoryStatsIfdvForwardMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 15), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsIfdvForwardMax.setStatus('current')
jnxSoamDmHistoryStatsIfdvForwardAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 16), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsIfdvForwardAvg.setStatus('current')
jnxSoamDmHistoryStatsIfdvBackwardMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 17), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsIfdvBackwardMin.setStatus('current')
jnxSoamDmHistoryStatsIfdvBackwardMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 18), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsIfdvBackwardMax.setStatus('current')
jnxSoamDmHistoryStatsIfdvBackwardAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 19), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsIfdvBackwardAvg.setStatus('current')
jnxSoamDmHistoryStatsIfdvTwoWayMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 20), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsIfdvTwoWayMin.setStatus('current')
jnxSoamDmHistoryStatsIfdvTwoWayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 21), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsIfdvTwoWayMax.setStatus('current')
jnxSoamDmHistoryStatsIfdvTwoWayAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 22), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsIfdvTwoWayAvg.setStatus('current')
jnxSoamDmHistoryStatsSoamPdusSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsSoamPdusSent.setStatus('current')
jnxSoamDmHistoryStatsSoamPdusReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 4, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmHistoryStatsSoamPdusReceived.setStatus('current')
jnxSoamLmThresholdCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 5), )
if mibBuilder.loadTexts: jnxSoamLmThresholdCfgTable.setStatus('current')
jnxSoamLmThresholdCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 5, 1), ).setIndexNames((0, "IEEE8021-CFM-MIB", "dot1agCfmMdIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMaIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMepIdentifier"), (0, "JUNIPER-SOAM-PM-MIB", "jnxSoamLmCfgIndex"), (0, "JUNIPER-SOAM-PM-MIB", "jnxSoamLmThresholdCfgIndex"))
if mibBuilder.loadTexts: jnxSoamLmThresholdCfgEntry.setStatus('current')
jnxSoamLmThresholdCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmThresholdCfgIndex.setStatus('current')
jnxSoamLmThresholdCfgEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 5, 1, 2), Bits().clone(namedValues=NamedValues(("bJnxSoamLmMeasuredFlrForwardThreshold", 0), ("bJnxSoamLmMaxFlrForwardThreshold", 1), ("bJnxSoamLmAvgFlrForwardThreshold", 2), ("bJnxSoamLmMeasuredFlrBackwardThreshold", 3), ("bJnxSoamLmMaxFlrBackwardThreshold", 4), ("bJnxSoamLmAvgFlrBackwardThreshold", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmThresholdCfgEnable.setStatus('current')
jnxSoamLmThresholdCfgAvgFlrForwardThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 5, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000)).clone(100000)).setUnits('milli-percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmThresholdCfgAvgFlrForwardThreshold.setStatus('current')
jnxSoamLmThresholdCfgAvgFlrBackwardThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 5, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000)).clone(100000)).setUnits('milli-percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmThresholdCfgAvgFlrBackwardThreshold.setStatus('current')
jnxSoamLmThresholdCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 2, 5, 1, 5), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamLmThresholdCfgRowStatus.setStatus('current')
jnxSoamDmThresholdCfgTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 5), )
if mibBuilder.loadTexts: jnxSoamDmThresholdCfgTable.setStatus('current')
jnxSoamDmThresholdCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 5, 1), ).setIndexNames((0, "IEEE8021-CFM-MIB", "dot1agCfmMdIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMaIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMepIdentifier"), (0, "JUNIPER-SOAM-PM-MIB", "jnxSoamDmCfgIndex"), (0, "JUNIPER-SOAM-PM-MIB", "jnxSoamDmThresholdCfgIndex"))
if mibBuilder.loadTexts: jnxSoamDmThresholdCfgEntry.setStatus('current')
jnxSoamDmThresholdCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmThresholdCfgIndex.setStatus('current')
jnxSoamDmThresholdCfgEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 5, 1, 2), Bits().clone(namedValues=NamedValues(("bJnxSoamDmMeasuredFrameDelayTwoWayThreshold", 0), ("bJnxSoamDmMaxFrameDelayTwoWayThreshold", 1), ("bJnxSoamDmAvgFrameDelayTwoWayThreshold", 2), ("bJnxSoamDmMeasuredIfdvTwoWayThreshold", 3), ("bJnxSoamDmMaxIfdvTwoWayThreshold", 4), ("bJnxSoamDmAvgIfdvTwoWayThreshold", 5), ("bJnxSoamDmMaxFrameDelayRangeTwoWayThreshold", 6), ("bJnxSoamDmAvgFrameDelayRangeTwoWayThreshold", 7), ("bJnxSoamDmMeasuredFrameDelayForwardThreshold", 8), ("bJnxSoamDmMaxFrameDelayForwardThreshold", 9), ("bJnxSoamDmAvgFrameDelayForwardThreshold", 10), ("bJnxSoamDmMeasuredIfdvForwardThreshold", 11), ("bJnxSoamDmMaxIfdvForwardThreshold", 12), ("bJnxSoamDmAvgIfdvForwardThreshold", 13), ("bJnxSoamDmMaxFrameDelayRangeForwardThreshold", 14), ("bJnxSoamDmAvgFrameDelayRangeForwardThreshold", 15), ("bJnxSoamDmMeasuredFrameDelayBackwardThreshold", 16), ("bJnxSoamDmMaxFrameDelayBackwardThreshold", 17), ("bJnxSoamDmAvgFrameDelayBackwardThreshold", 18), ("bJnxSoamDmMeasuredIfdvBackwardThreshold", 19), ("bJnxSoamDmMaxIfdvBackwardThreshold", 20), ("bJnxSoamDmAvgIfdvBackwardThreshold", 21), ("bJnxSoamDmMaxFrameDelayRangeBackwardThreshold", 22), ("bJnxSoamDmAvgFrameDelayRangeBackwardThreshold", 23)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmThresholdCfgEnable.setStatus('current')
jnxSoamDmThresholdCfgAvgFrameDelayTwoWayThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 5, 1, 3), Unsigned32().clone(4294967295)).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmThresholdCfgAvgFrameDelayTwoWayThreshold.setStatus('current')
jnxSoamDmThresholdCfgAvgIfdvTwoWayThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 5, 1, 4), Unsigned32().clone(4294967295)).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmThresholdCfgAvgIfdvTwoWayThreshold.setStatus('current')
jnxSoamDmThresholdCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 3, 5, 1, 5), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxSoamDmThresholdCfgRowStatus.setStatus('current')
jnxSoamPmNotificationObjDateAndTime = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 5, 1), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxSoamPmNotificationObjDateAndTime.setStatus('current')
jnxSoamPmNotificationObjThresholdId = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 5, 2), ObjectIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxSoamPmNotificationObjThresholdId.setStatus('current')
jnxSoamPmNotificationObjThresholdConfig = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 5, 3), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxSoamPmNotificationObjThresholdConfig.setStatus('current')
jnxSoamPmNotificationObjThresholdValue = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 5, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxSoamPmNotificationObjThresholdValue.setStatus('current')
jnxSoamPmNotificationObjSuspect = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 5, 5), TruthValue()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxSoamPmNotificationObjSuspect.setStatus('current')
jnxSoamPmNotificationObjCrossingType = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 5, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("aboveAlarm", 1), ("setAlarm", 2), ("clearAlarm", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxSoamPmNotificationObjCrossingType.setStatus('current')
jnxSoamPmNotificationObjDestinationMep = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 5, 7), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxSoamPmNotificationObjDestinationMep.setStatus('current')
jnxSoamPmNotificationObjPriority = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 78, 1, 5, 8), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxSoamPmNotificationObjPriority.setStatus('current')
jnxSoamLmSessionStartStopAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 78, 0, 1)).setObjects(("JUNIPER-SOAM-PM-MIB", "jnxSoamLmCfgSessionStatus"), ("JUNIPER-SOAM-PM-MIB", "jnxSoamPmNotificationObjDateAndTime"), ("JUNIPER-SOAM-PM-MIB", "jnxSoamPmNotificationObjDestinationMep"))
if mibBuilder.loadTexts: jnxSoamLmSessionStartStopAlarm.setStatus('current')
jnxSoamDmSessionStartStopAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 78, 0, 2)).setObjects(("JUNIPER-SOAM-PM-MIB", "jnxSoamDmCfgSessionStatus"), ("JUNIPER-SOAM-PM-MIB", "jnxSoamPmNotificationObjDateAndTime"), ("JUNIPER-SOAM-PM-MIB", "jnxSoamPmNotificationObjDestinationMep"))
if mibBuilder.loadTexts: jnxSoamDmSessionStartStopAlarm.setStatus('current')
jnxSoamPmThresholdCrossingAlarm = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 78, 0, 3)).setObjects(("JUNIPER-SOAM-PM-MIB", "jnxSoamPmNotificationObjCrossingType"), ("JUNIPER-SOAM-PM-MIB", "jnxSoamPmNotificationObjThresholdId"), ("JUNIPER-SOAM-PM-MIB", "jnxSoamPmNotificationObjThresholdConfig"), ("JUNIPER-SOAM-PM-MIB", "jnxSoamPmNotificationObjThresholdValue"), ("JUNIPER-SOAM-PM-MIB", "jnxSoamPmNotificationObjSuspect"), ("JUNIPER-SOAM-PM-MIB", "jnxSoamPmNotificationObjDateAndTime"), ("JUNIPER-SOAM-PM-MIB", "jnxSoamPmNotificationObjDestinationMep"))
if mibBuilder.loadTexts: jnxSoamPmThresholdCrossingAlarm.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-SOAM-PM-MIB", jnxSoamDmCfgTestTlvPattern=jnxSoamDmCfgTestTlvPattern, jnxSoamLmHistoryStatsElapsedTime=jnxSoamLmHistoryStatsElapsedTime, jnxSoamDmMeasuredStatsFrameDelayTwoWay=jnxSoamDmMeasuredStatsFrameDelayTwoWay, jnxSoamDmHistoryStatsEndTime=jnxSoamDmHistoryStatsEndTime, jnxSoamLmCfgAlignMeasurementIntervals=jnxSoamLmCfgAlignMeasurementIntervals, jnxSoamDmHistoryStatsFrameDelayBackwardMin=jnxSoamDmHistoryStatsFrameDelayBackwardMin, jnxSoamDmCurrentStatsSuspect=jnxSoamDmCurrentStatsSuspect, jnxSoamPmMib=jnxSoamPmMib, jnxSoamLmCurrentStatsForwardMinFlr=jnxSoamLmCurrentStatsForwardMinFlr, jnxSoamLmCurrentStatsBackwardTransmittedFrames=jnxSoamLmCurrentStatsBackwardTransmittedFrames, jnxSoamLmHistoryStatsForwardMaxFlr=jnxSoamLmHistoryStatsForwardMaxFlr, jnxSoamDmHistoryStatsFrameDelayBackwardAvg=jnxSoamDmHistoryStatsFrameDelayBackwardAvg, jnxSoamDmCfgHistoryClear=jnxSoamDmCfgHistoryClear, jnxSoamDmCfgTestTlvIncluded=jnxSoamDmCfgTestTlvIncluded, jnxSoamDmHistoryStatsIfdvTwoWayMax=jnxSoamDmHistoryStatsIfdvTwoWayMax, jnxSoamDmCfgInterFrameDelayVariationSelectionOffset=jnxSoamDmCfgInterFrameDelayVariationSelectionOffset, jnxSoamDmCurrentStatsSoamPdusSent=jnxSoamDmCurrentStatsSoamPdusSent, jnxSoamDmHistoryStatsFrameDelayTwoWayAvg=jnxSoamDmHistoryStatsFrameDelayTwoWayAvg, jnxSoamLmThresholdCfgTable=jnxSoamLmThresholdCfgTable, jnxSoamDmMeasuredStatsTable=jnxSoamDmMeasuredStatsTable, jnxSoamDmThresholdCfgEntry=jnxSoamDmThresholdCfgEntry, jnxSoamLmCfgStartTimeType=jnxSoamLmCfgStartTimeType, jnxSoamDmCurrentStatsFrameDelayForwardAvg=jnxSoamDmCurrentStatsFrameDelayForwardAvg, jnxSoamPmDmObjects=jnxSoamPmDmObjects, JnxSoamTcDataPatternType=JnxSoamTcDataPatternType, jnxSoamLmCfgVersion=jnxSoamLmCfgVersion, jnxSoamLmMeasuredStatsEntry=jnxSoamLmMeasuredStatsEntry, jnxSoamLmCfgEntry=jnxSoamLmCfgEntry, jnxSoamPmNotificationObjCrossingType=jnxSoamPmNotificationObjCrossingType, jnxSoamDmMeasuredStatsFrameDelayBackward=jnxSoamDmMeasuredStatsFrameDelayBackward, jnxSoamDmCfgSessionStatus=jnxSoamDmCfgSessionStatus, jnxSoamDmMeasuredStatsFrameDelayForward=jnxSoamDmMeasuredStatsFrameDelayForward, jnxSoamDmCurrentStatsIfdvTwoWayAvg=jnxSoamDmCurrentStatsIfdvTwoWayAvg, jnxSoamLmCfgDestIsMepId=jnxSoamLmCfgDestIsMepId, jnxSoamLmCurrentStatsTable=jnxSoamLmCurrentStatsTable, jnxSoamLmThresholdCfgAvgFlrBackwardThreshold=jnxSoamLmThresholdCfgAvgFlrBackwardThreshold, jnxSoamDmCurrentStatsFrameDelayBackwardAvg=jnxSoamDmCurrentStatsFrameDelayBackwardAvg, jnxSoamDmCfgVersion=jnxSoamDmCfgVersion, jnxSoamDmCfgTable=jnxSoamDmCfgTable, jnxSoamLmHistoryStatsBackwardMinFlr=jnxSoamLmHistoryStatsBackwardMinFlr, jnxSoamDmCurrentStatsIfdvBackwardMax=jnxSoamDmCurrentStatsIfdvBackwardMax, jnxSoamDmHistoryStatsSuspect=jnxSoamDmHistoryStatsSuspect, jnxSoamDmCurrentStatsIfdvForwardMax=jnxSoamDmCurrentStatsIfdvForwardMax, jnxSoamLmThresholdCfgIndex=jnxSoamLmThresholdCfgIndex, jnxSoamLmThresholdCfgAvgFlrForwardThreshold=jnxSoamLmThresholdCfgAvgFlrForwardThreshold, jnxSoamDmCurrentStatsFrameDelayBackwardMin=jnxSoamDmCurrentStatsFrameDelayBackwardMin, jnxSoamLmHistoryStatsEndTime=jnxSoamLmHistoryStatsEndTime, jnxSoamDmCfgAlignMeasurementIntervals=jnxSoamDmCfgAlignMeasurementIntervals, jnxSoamPmNotificationObjSuspect=jnxSoamPmNotificationObjSuspect, jnxSoamDmCurrentStatsIfdvBackwardAvg=jnxSoamDmCurrentStatsIfdvBackwardAvg, jnxSoamLmThresholdCfgEntry=jnxSoamLmThresholdCfgEntry, jnxSoamLmCurrentStatsElapsedTime=jnxSoamLmCurrentStatsElapsedTime, jnxSoamDmCurrentStatsIfdvForwardAvg=jnxSoamDmCurrentStatsIfdvForwardAvg, jnxSoamLmHistoryStatsSoamPdusReceived=jnxSoamLmHistoryStatsSoamPdusReceived, jnxSoamDmHistoryStatsElapsedTime=jnxSoamDmHistoryStatsElapsedTime, jnxSoamLmCurrentStatsStartTime=jnxSoamLmCurrentStatsStartTime, jnxSoamLmCfgRepetitionTime=jnxSoamLmCfgRepetitionTime, jnxSoamDmCurrentStatsFrameDelayTwoWayAvg=jnxSoamDmCurrentStatsFrameDelayTwoWayAvg, jnxSoamLmCfgFixedStartDateAndTime=jnxSoamLmCfgFixedStartDateAndTime, jnxSoamPmMepOperNextIndex=jnxSoamPmMepOperNextIndex, jnxSoamDmCurrentStatsIfdvForwardMin=jnxSoamDmCurrentStatsIfdvForwardMin, jnxSoamDmHistoryStatsFrameDelayBackwardMax=jnxSoamDmHistoryStatsFrameDelayBackwardMax, jnxSoamLmCurrentStatsIndex=jnxSoamLmCurrentStatsIndex, jnxSoamLmHistoryStatsBackwardReceivedFrames=jnxSoamLmHistoryStatsBackwardReceivedFrames, jnxSoamLmCurrentStatsForwardReceivedFrames=jnxSoamLmCurrentStatsForwardReceivedFrames, jnxSoamLmCfgFrameSize=jnxSoamLmCfgFrameSize, jnxSoamPmNotificationObjPriority=jnxSoamPmNotificationObjPriority, jnxSoamPmNotificationObjThresholdConfig=jnxSoamPmNotificationObjThresholdConfig, jnxSoamLmHistoryStatsTable=jnxSoamLmHistoryStatsTable, jnxSoamDmCfgMessagePeriod=jnxSoamDmCfgMessagePeriod, jnxSoamLmCurrentStatsSuspect=jnxSoamLmCurrentStatsSuspect, jnxSoamLmCfgTestTlvIncluded=jnxSoamLmCfgTestTlvIncluded, JnxSoamTcOperationTimeType=JnxSoamTcOperationTimeType, jnxSoamDmMeasuredStatsEntry=jnxSoamDmMeasuredStatsEntry, jnxSoamLmHistoryStatsEntry=jnxSoamLmHistoryStatsEntry, jnxSoamDmCurrentStatsIndex=jnxSoamDmCurrentStatsIndex, jnxSoamLmMeasuredStatsTable=jnxSoamLmMeasuredStatsTable, jnxSoamDmHistoryStatsIfdvForwardAvg=jnxSoamDmHistoryStatsIfdvForwardAvg, jnxSoamLmHistoryStatsIndex=jnxSoamLmHistoryStatsIndex, jnxSoamLmHistoryStatsForwardTransmittedFrames=jnxSoamLmHistoryStatsForwardTransmittedFrames, jnxSoamLmHistoryStatsBackwardAvgFlr=jnxSoamLmHistoryStatsBackwardAvgFlr, jnxSoamPmNotificationObjThresholdId=jnxSoamPmNotificationObjThresholdId, jnxSoamDmCurrentStatsElapsedTime=jnxSoamDmCurrentStatsElapsedTime, jnxSoamDmHistoryStatsFrameDelayForwardMax=jnxSoamDmHistoryStatsFrameDelayForwardMax, jnxSoamDmCurrentStatsFrameDelayTwoWayMax=jnxSoamDmCurrentStatsFrameDelayTwoWayMax, jnxSoamDmCfgNumIntervalsStored=jnxSoamDmCfgNumIntervalsStored, jnxSoamPmMibObjects=jnxSoamPmMibObjects, jnxSoamDmHistoryStatsIfdvBackwardMax=jnxSoamDmHistoryStatsIfdvBackwardMax, jnxSoamLmCfgSessionStatus=jnxSoamLmCfgSessionStatus, jnxSoamLmCurrentStatsEntry=jnxSoamLmCurrentStatsEntry, jnxSoamDmThresholdCfgTable=jnxSoamDmThresholdCfgTable, jnxSoamDmHistoryStatsFrameDelayTwoWayMin=jnxSoamDmHistoryStatsFrameDelayTwoWayMin, jnxSoamPmLmObjects=jnxSoamPmLmObjects, jnxSoamLmCfgType=jnxSoamLmCfgType, jnxSoamDmCurrentStatsSoamPdusReceived=jnxSoamDmCurrentStatsSoamPdusReceived, jnxSoamDmCurrentStatsFrameDelayTwoWayMin=jnxSoamDmCurrentStatsFrameDelayTwoWayMin, jnxSoamPmNotificationObj=jnxSoamPmNotificationObj, jnxSoamLmSessionStartStopAlarm=jnxSoamLmSessionStartStopAlarm, jnxSoamLmCurrentStatsBackwardReceivedFrames=jnxSoamLmCurrentStatsBackwardReceivedFrames, IEEE8021PriorityValue=IEEE8021PriorityValue, jnxSoamLmCfgRowStatus=jnxSoamLmCfgRowStatus, jnxSoamDmHistoryStatsFrameDelayForwardAvg=jnxSoamDmHistoryStatsFrameDelayForwardAvg, jnxSoamDmHistoryStatsIfdvBackwardAvg=jnxSoamDmHistoryStatsIfdvBackwardAvg, jnxSoamPmMepTable=jnxSoamPmMepTable, jnxSoamDmCfgRepetitionTime=jnxSoamDmCfgRepetitionTime, jnxSoamDmCfgDataPattern=jnxSoamDmCfgDataPattern, jnxSoamDmCurrentStatsFrameDelayBackwardMax=jnxSoamDmCurrentStatsFrameDelayBackwardMax, jnxSoamLmCfgMeasurementEnable=jnxSoamLmCfgMeasurementEnable, jnxSoamDmHistoryStatsIfdvTwoWayMin=jnxSoamDmHistoryStatsIfdvTwoWayMin, jnxSoamLmCfgEnabled=jnxSoamLmCfgEnabled, jnxSoamDmMeasuredStatsIfdvBackward=jnxSoamDmMeasuredStatsIfdvBackward, jnxSoamPmNotificationObjDateAndTime=jnxSoamPmNotificationObjDateAndTime, jnxSoamLmCfgDataPattern=jnxSoamLmCfgDataPattern, jnxSoamDmHistoryStatsSoamPdusReceived=jnxSoamDmHistoryStatsSoamPdusReceived, jnxSoamLmHistoryStatsForwardMinFlr=jnxSoamLmHistoryStatsForwardMinFlr, jnxSoamDmSessionStartStopAlarm=jnxSoamDmSessionStartStopAlarm, jnxSoamLmHistoryStatsBackwardTransmittedFrames=jnxSoamLmHistoryStatsBackwardTransmittedFrames, jnxSoamDmCfgSessionType=jnxSoamDmCfgSessionType, jnxSoamLmCfgTable=jnxSoamLmCfgTable, jnxSoamDmCfgDestMepId=jnxSoamDmCfgDestMepId, jnxSoamLmThresholdCfgEnable=jnxSoamLmThresholdCfgEnable, jnxSoamLmMeasuredStatsForwardFlr=jnxSoamLmMeasuredStatsForwardFlr, jnxSoamLmCfgTestTlvPattern=jnxSoamLmCfgTestTlvPattern, jnxSoamDmCfgEntry=jnxSoamDmCfgEntry, jnxSoamDmCfgMeasurementEnable=jnxSoamDmCfgMeasurementEnable, jnxSoamDmCurrentStatsIfdvBackwardMin=jnxSoamDmCurrentStatsIfdvBackwardMin, jnxSoamLmCfgAlignMeasurementOffset=jnxSoamLmCfgAlignMeasurementOffset, jnxSoamLmCfgMessagePeriod=jnxSoamLmCfgMessagePeriod, jnxSoamDmHistoryStatsFrameDelayForwardMin=jnxSoamDmHistoryStatsFrameDelayForwardMin, jnxSoamLmCurrentStatsSoamPdusSent=jnxSoamLmCurrentStatsSoamPdusSent, jnxSoamDmThresholdCfgAvgFrameDelayTwoWayThreshold=jnxSoamDmThresholdCfgAvgFrameDelayTwoWayThreshold, jnxSoamDmCfgEnabled=jnxSoamDmCfgEnabled, jnxSoamDmHistoryStatsSoamPdusSent=jnxSoamDmHistoryStatsSoamPdusSent, jnxSoamDmCurrentStatsFrameDelayForwardMax=jnxSoamDmCurrentStatsFrameDelayForwardMax, jnxSoamLmCfgIndex=jnxSoamLmCfgIndex, jnxSoamDmCurrentStatsIfdvTwoWayMax=jnxSoamDmCurrentStatsIfdvTwoWayMax, jnxSoamDmHistoryStatsEntry=jnxSoamDmHistoryStatsEntry, jnxSoamDmMeasuredStatsIfdvForward=jnxSoamDmMeasuredStatsIfdvForward, jnxSoamLmCurrentStatsBackwardMinFlr=jnxSoamLmCurrentStatsBackwardMinFlr, jnxSoamPmMepLmSingleEndedResponder=jnxSoamPmMepLmSingleEndedResponder, jnxSoamDmThresholdCfgRowStatus=jnxSoamDmThresholdCfgRowStatus, jnxSoamPmMibConformance=jnxSoamPmMibConformance, jnxSoamDmHistoryStatsIfdvTwoWayAvg=jnxSoamDmHistoryStatsIfdvTwoWayAvg, jnxSoamLmCfgSessionType=jnxSoamLmCfgSessionType, jnxSoamLmCfgPriority=jnxSoamLmCfgPriority, JnxSoamTcTestPatternType=JnxSoamTcTestPatternType, jnxSoamPmNotificationObjThresholdValue=jnxSoamPmNotificationObjThresholdValue, jnxSoamDmHistoryStatsIfdvBackwardMin=jnxSoamDmHistoryStatsIfdvBackwardMin, jnxSoamDmThresholdCfgAvgIfdvTwoWayThreshold=jnxSoamDmThresholdCfgAvgIfdvTwoWayThreshold, PYSNMP_MODULE_ID=jnxSoamPmMib, jnxSoamLmCurrentStatsForwardMaxFlr=jnxSoamLmCurrentStatsForwardMaxFlr, jnxSoamPmMepDmSingleEndedResponder=jnxSoamPmMepDmSingleEndedResponder, jnxSoamLmCfgHistoryClear=jnxSoamLmCfgHistoryClear, jnxSoamDmCurrentStatsStartTime=jnxSoamDmCurrentStatsStartTime, jnxSoamLmCurrentStatsBackwardMaxFlr=jnxSoamLmCurrentStatsBackwardMaxFlr, jnxSoamDmCfgPriority=jnxSoamDmCfgPriority, jnxSoamDmHistoryStatsTable=jnxSoamDmHistoryStatsTable, jnxSoamDmMeasuredStatsIfdvTwoWay=jnxSoamDmMeasuredStatsIfdvTwoWay, jnxSoamDmHistoryStatsIfdvForwardMin=jnxSoamDmHistoryStatsIfdvForwardMin, jnxSoamLmCfgNumIntervalsStored=jnxSoamLmCfgNumIntervalsStored, jnxSoamPmNotificationObjDestinationMep=jnxSoamPmNotificationObjDestinationMep, jnxSoamLmCurrentStatsForwardTransmittedFrames=jnxSoamLmCurrentStatsForwardTransmittedFrames, jnxSoamLmHistoryStatsForwardAvgFlr=jnxSoamLmHistoryStatsForwardAvgFlr, jnxSoamLmHistoryStatsForwardReceivedFrames=jnxSoamLmHistoryStatsForwardReceivedFrames, jnxSoamPmMepSlmSingleEndedResponder=jnxSoamPmMepSlmSingleEndedResponder, jnxSoamLmCfgDestMepId=jnxSoamLmCfgDestMepId, jnxSoamDmCfgRowStatus=jnxSoamDmCfgRowStatus, jnxSoamDmHistoryStatsIfdvForwardMax=jnxSoamDmHistoryStatsIfdvForwardMax, jnxSoamPmNotifications=jnxSoamPmNotifications, jnxSoamDmCfgIndex=jnxSoamDmCfgIndex, jnxSoamPmNotificationCfg=jnxSoamPmNotificationCfg, jnxSoamDmCfgStartTimeType=jnxSoamDmCfgStartTimeType, jnxSoamDmCurrentStatsEntry=jnxSoamDmCurrentStatsEntry, jnxSoamLmThresholdCfgRowStatus=jnxSoamLmThresholdCfgRowStatus, jnxSoamPmMep=jnxSoamPmMep, jnxSoamLmCurrentStatsBackwardAvgFlr=jnxSoamLmCurrentStatsBackwardAvgFlr, jnxSoamLmCfgRelativeStartTime=jnxSoamLmCfgRelativeStartTime, jnxSoamLmHistoryStatsBackwardMaxFlr=jnxSoamLmHistoryStatsBackwardMaxFlr, jnxSoamLmHistoryStatsSuspect=jnxSoamLmHistoryStatsSuspect, jnxSoamPmMepEntry=jnxSoamPmMepEntry, jnxSoamDmCurrentStatsIfdvTwoWayMin=jnxSoamDmCurrentStatsIfdvTwoWayMin, jnxSoamDmCfgDestIsMepId=jnxSoamDmCfgDestIsMepId, jnxSoamLmCurrentStatsSoamPdusReceived=jnxSoamLmCurrentStatsSoamPdusReceived, jnxSoamDmHistoryStatsFrameDelayTwoWayMax=jnxSoamDmHistoryStatsFrameDelayTwoWayMax, jnxSoamDmThresholdCfgIndex=jnxSoamDmThresholdCfgIndex, jnxSoamDmCfgType=jnxSoamDmCfgType, jnxSoamLmHistoryStatsSoamPdusSent=jnxSoamLmHistoryStatsSoamPdusSent, jnxSoamDmThresholdCfgEnable=jnxSoamDmThresholdCfgEnable, jnxSoamLmCurrentStatsForwardAvgFlr=jnxSoamLmCurrentStatsForwardAvgFlr, jnxSoamDmCurrentStatsTable=jnxSoamDmCurrentStatsTable, jnxSoamDmCurrentStatsFrameDelayForwardMin=jnxSoamDmCurrentStatsFrameDelayForwardMin, jnxSoamDmCfgFrameSize=jnxSoamDmCfgFrameSize, jnxSoamLmMeasuredStatsBackwardFlr=jnxSoamLmMeasuredStatsBackwardFlr, jnxSoamDmHistoryStatsIndex=jnxSoamDmHistoryStatsIndex, jnxSoamPmThresholdCrossingAlarm=jnxSoamPmThresholdCrossingAlarm)
