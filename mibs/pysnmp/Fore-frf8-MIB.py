#
# PySNMP MIB module Fore-frf8-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Fore-frf8-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:04:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
frameInternetworking, AtmAddress, atmSwitch = mibBuilder.importSymbols("Fore-Common-MIB", "frameInternetworking", "AtmAddress", "atmSwitch")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, IpAddress, TimeTicks, Integer32, NotificationType, iso, Counter64, MibIdentifier, Unsigned32, ObjectIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "IpAddress", "TimeTicks", "Integer32", "NotificationType", "iso", "Counter64", "MibIdentifier", "Unsigned32", "ObjectIdentity", "Counter32")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
foreFrf8Module = ModuleIdentity((1, 3, 6, 1, 4, 1, 326, 1, 16, 2))
if mibBuilder.loadTexts: foreFrf8Module.setLastUpdated('9705011044-0400')
if mibBuilder.loadTexts: foreFrf8Module.setOrganization('FORE')
frf8ConnTable = MibTable((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1), )
if mibBuilder.loadTexts: frf8ConnTable.setStatus('current')
frf8ConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1), ).setIndexNames((0, "Fore-frf8-MIB", "frf8ConnFrServiceIfIndex"), (0, "Fore-frf8-MIB", "frf8ConnDlci"))
if mibBuilder.loadTexts: frf8ConnEntry.setStatus('current')
frf8ConnFrServiceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ConnFrServiceIfIndex.setStatus('current')
frf8ConnDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ConnDlci.setStatus('current')
frf8ConnFabServiceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ConnFabServiceIfIndex.setStatus('current')
frf8ConnFabVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ConnFabVpi.setStatus('current')
frf8ConnFabVci = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ConnFabVci.setStatus('current')
frf8ConnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frf8ConnRowStatus.setStatus('current')
frf8ConnProfileFrf8Index = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frf8ConnProfileFrf8Index.setStatus('current')
frf8ConnProfileEpdPpdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 8), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frf8ConnProfileEpdPpdIndex.setStatus('current')
frf8ConnAtmAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("null", 1), ("e164", 2), ("nsap", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frf8ConnAtmAddrType.setStatus('current')
frf8ConnAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 10), AtmAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frf8ConnAtmAddress.setStatus('current')
frf8ConnAtmSubAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("null", 1), ("e164", 2), ("nsap", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frf8ConnAtmSubAddrType.setStatus('current')
frf8ConnAtmSubAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 12), AtmAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frf8ConnAtmSubAddress.setStatus('current')
frf8ConnFrAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("null", 1), ("e164", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frf8ConnFrAddrType.setStatus('current')
frf8ConnFrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 14), AtmAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frf8ConnFrAddress.setStatus('current')
frf8ConnAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('down')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: frf8ConnAdminStatus.setStatus('current')
frf8ConnOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ConnOperStatus.setStatus('current')
frf8ConnCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 17), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ConnCreationTime.setStatus('current')
frf8ConnTimeChange = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 18), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ConnTimeChange.setStatus('current')
frf8ConnPVCAlarmReason = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("nodefect", 1), ("frAlarmed", 2), ("frClear", 3), ("aisAlarmed", 4), ("aisClear", 5), ("rdiAlarmed", 6), ("rdiClear", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ConnPVCAlarmReason.setStatus('current')
frf8ConnAtmToFrPDUDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ConnAtmToFrPDUDiscards.setStatus('current')
frf8ConnFrToAtmPDUDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ConnFrToAtmPDUDiscards.setStatus('current')
frf8ConnAtmToFrUnkProts = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ConnAtmToFrUnkProts.setStatus('current')
frf8ConnFrToAtmUnkProts = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ConnFrToAtmUnkProts.setStatus('current')
frf8ConnAtmToFrArpNakDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ConnAtmToFrArpNakDiscards.setStatus('current')
frf8ProtTable = MibTable((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 2), )
if mibBuilder.loadTexts: frf8ProtTable.setStatus('current')
frf8ProtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 2, 1), ).setIndexNames((0, "Fore-frf8-MIB", "frf8ProtServiceIfIndex"), (0, "Fore-frf8-MIB", "frf8ProtDlci"), (0, "Fore-frf8-MIB", "frf8ProtProtocol"))
if mibBuilder.loadTexts: frf8ProtEntry.setStatus('current')
frf8ProtServiceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ProtServiceIfIndex.setStatus('current')
frf8ProtDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ProtDlci.setStatus('current')
frf8ProtProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("prot8023withfcs", 1), ("prot8023", 2), ("prot8025withfcs", 3), ("prot8025", 4), ("ip", 5), ("arp", 6), ("ipx", 7), ("sna", 8), ("fddi", 9), ("fddiwithfcs", 10), ("x25x75", 11), ("prot8026", 12), ("routediso", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ProtProtocol.setStatus('current')
frf8ProtAtmToFrPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ProtAtmToFrPdus.setStatus('current')
frf8ProtAtmToFrOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ProtAtmToFrOctets.setStatus('current')
frf8ProtFrToAtmPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ProtFrToAtmPdus.setStatus('current')
frf8ProtFrToAtmOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8ProtFrToAtmOctets.setStatus('current')
frf8OamF5Table = MibTable((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 3), )
if mibBuilder.loadTexts: frf8OamF5Table.setStatus('current')
frf8OamF5Entry = MibTableRow((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 3, 1), ).setIndexNames((0, "Fore-frf8-MIB", "frf8OamF5ServiceIfIndex"), (0, "Fore-frf8-MIB", "frf8OamF5VcDlci"))
if mibBuilder.loadTexts: frf8OamF5Entry.setStatus('current')
frf8OamF5ServiceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 3, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8OamF5ServiceIfIndex.setStatus('current')
frf8OamF5VcDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8OamF5VcDlci.setStatus('current')
frf8OamF5AISRxCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8OamF5AISRxCounter.setStatus('current')
frf8OamF5AISTxCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8OamF5AISTxCounter.setStatus('current')
frf8OamF5RDIRxCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8OamF5RDIRxCounter.setStatus('current')
frf8OamF5RDITxCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 326, 1, 16, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: frf8OamF5RDITxCounter.setStatus('current')
frf8PVCStatus = NotificationType((1, 3, 6, 1, 4, 1, 326, 2, 2, 0, 2000)).setObjects(("Fore-frf8-MIB", "frf8ConnFrServiceIfIndex"), ("Fore-frf8-MIB", "frf8ConnDlci"), ("Fore-frf8-MIB", "frf8ConnOperStatus"), ("Fore-frf8-MIB", "frf8ConnPVCAlarmReason"))
if mibBuilder.loadTexts: frf8PVCStatus.setStatus('current')
mibBuilder.exportSymbols("Fore-frf8-MIB", frf8OamF5Entry=frf8OamF5Entry, frf8OamF5RDITxCounter=frf8OamF5RDITxCounter, frf8ConnProfileEpdPpdIndex=frf8ConnProfileEpdPpdIndex, frf8ConnFrToAtmUnkProts=frf8ConnFrToAtmUnkProts, frf8ProtAtmToFrPdus=frf8ProtAtmToFrPdus, frf8ConnFrServiceIfIndex=frf8ConnFrServiceIfIndex, frf8ConnCreationTime=frf8ConnCreationTime, frf8ProtServiceIfIndex=frf8ProtServiceIfIndex, frf8OamF5AISTxCounter=frf8OamF5AISTxCounter, frf8ConnAtmSubAddress=frf8ConnAtmSubAddress, frf8ConnTable=frf8ConnTable, frf8ConnEntry=frf8ConnEntry, frf8ProtTable=frf8ProtTable, frf8ConnFrAddrType=frf8ConnFrAddrType, frf8ConnAtmAddrType=frf8ConnAtmAddrType, frf8ConnAtmSubAddrType=frf8ConnAtmSubAddrType, frf8ConnFabVpi=frf8ConnFabVpi, frf8ConnAtmToFrPDUDiscards=frf8ConnAtmToFrPDUDiscards, frf8OamF5VcDlci=frf8OamF5VcDlci, frf8ConnAtmToFrArpNakDiscards=frf8ConnAtmToFrArpNakDiscards, frf8ConnAtmAddress=frf8ConnAtmAddress, frf8ConnRowStatus=frf8ConnRowStatus, frf8ConnOperStatus=frf8ConnOperStatus, frf8ProtProtocol=frf8ProtProtocol, frf8PVCStatus=frf8PVCStatus, frf8OamF5ServiceIfIndex=frf8OamF5ServiceIfIndex, frf8ProtEntry=frf8ProtEntry, frf8OamF5RDIRxCounter=frf8OamF5RDIRxCounter, frf8ProtFrToAtmOctets=frf8ProtFrToAtmOctets, frf8ConnFrAddress=frf8ConnFrAddress, frf8ProtFrToAtmPdus=frf8ProtFrToAtmPdus, frf8OamF5Table=frf8OamF5Table, frf8ProtAtmToFrOctets=frf8ProtAtmToFrOctets, frf8ConnFabServiceIfIndex=frf8ConnFabServiceIfIndex, frf8ProtDlci=frf8ProtDlci, frf8ConnDlci=frf8ConnDlci, foreFrf8Module=foreFrf8Module, frf8ConnFabVci=frf8ConnFabVci, frf8ConnAtmToFrUnkProts=frf8ConnAtmToFrUnkProts, frf8ConnProfileFrf8Index=frf8ConnProfileFrf8Index, PYSNMP_MODULE_ID=foreFrf8Module, frf8ConnAdminStatus=frf8ConnAdminStatus, frf8ConnFrToAtmPDUDiscards=frf8ConnFrToAtmPDUDiscards, frf8ConnPVCAlarmReason=frf8ConnPVCAlarmReason, frf8ConnTimeChange=frf8ConnTimeChange, frf8OamF5AISRxCounter=frf8OamF5AISRxCounter)
