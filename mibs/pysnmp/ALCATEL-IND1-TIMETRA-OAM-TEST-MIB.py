#
# PySNMP MIB module ALCATEL-IND1-TIMETRA-OAM-TEST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-TIMETRA-OAM-TEST-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:04:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
tmnxSRNotifyPrefix, timetraSRMIBModules, tmnxSRConfs, tmnxSRObjs = mibBuilder.importSymbols("ALCATEL-IND1-TIMETRA-GLOBAL-MIB", "tmnxSRNotifyPrefix", "timetraSRMIBModules", "tmnxSRConfs", "tmnxSRObjs")
TProfile, = mibBuilder.importSymbols("ALCATEL-IND1-TIMETRA-QOS-MIB", "TProfile")
SdpBindVcType, SdpId = mibBuilder.importSymbols("ALCATEL-IND1-TIMETRA-SERV-MIB", "SdpBindVcType", "SdpId")
SdpBindId, TmnxVcIdOrNone, TmnxStrSapId, TmnxVcType, TmnxVcId, TmnxVRtrID, TNamedItemOrEmpty, TmnxPortID, TItemDescription, TmnxTunnelType, TmnxVPNRouteDistinguisher, TmnxTunnelID, TFCName, TmnxAdminState, IpAddressPrefixLength, TmnxBgpRouteTarget, TPolicyStatementNameOrEmpty, TmnxEncapVal, TmnxServId = mibBuilder.importSymbols("ALCATEL-IND1-TIMETRA-TC-MIB", "SdpBindId", "TmnxVcIdOrNone", "TmnxStrSapId", "TmnxVcType", "TmnxVcId", "TmnxVRtrID", "TNamedItemOrEmpty", "TmnxPortID", "TItemDescription", "TmnxTunnelType", "TmnxVPNRouteDistinguisher", "TmnxTunnelID", "TFCName", "TmnxAdminState", "IpAddressPrefixLength", "TmnxBgpRouteTarget", "TPolicyStatementNameOrEmpty", "TmnxEncapVal", "TmnxServId")
vRtrID, = mibBuilder.importSymbols("ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
AtmVpIdentifier, AtmVcIdentifier = mibBuilder.importSymbols("ATM-TC-MIB", "AtmVpIdentifier", "AtmVcIdentifier")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
InetAddressType, InetAddressPrefixLength, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddressPrefixLength", "InetAddress")
MplsLabel, = mibBuilder.importSymbols("MPLS-LDP-MIB", "MplsLabel")
RouterID, = mibBuilder.importSymbols("OSPF-MIB", "RouterID")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
IpAddress, Counter64, ObjectIdentity, TimeTicks, iso, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Bits, MibIdentifier, ModuleIdentity, NotificationType, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter64", "ObjectIdentity", "TimeTicks", "iso", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Bits", "MibIdentifier", "ModuleIdentity", "NotificationType", "Integer32", "Counter32")
TruthValue, DateAndTime, StorageType, TextualConvention, TimeStamp, MacAddress, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DateAndTime", "StorageType", "TextualConvention", "TimeStamp", "MacAddress", "RowStatus", "DisplayString")
timetraOamTestMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 1, 3, 11))
timetraOamTestMIBModule.setRevisions(('1908-01-01 00:00', '1907-01-01 00:00', '1906-03-09 00:00', '1905-08-31 00:00', '1905-01-24 00:00', '1904-01-15 00:00', '1903-08-15 00:00', '1903-01-20 00:00', '1901-11-15 00:00',))
if mibBuilder.loadTexts: timetraOamTestMIBModule.setLastUpdated('0801010000Z')
if mibBuilder.loadTexts: timetraOamTestMIBModule.setOrganization('Alcatel')
tmnxOamTestObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11))
tmnxOamPingObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1))
tmnxOamPingNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 1))
tmnxOamTraceRouteObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2))
tmnxOamTraceRouteNotifyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 1))
tmnxOamSaaObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3))
tmnxOamSaaNotifyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 1))
tmnxOamTestNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11))
tmnxOamPingNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 1))
tmnxOamPingNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 1, 0))
tmnxOamTraceRouteNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 2))
tmnxOamTraceRouteNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 2, 0))
tmnxOamSaaNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 3))
tmnxOamSaaNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 3, 0))
tmnxOamTestConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11))
tmnxOamPingConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1))
tmnxOamTraceRouteConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2))
tmnxOamSaaConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 3))
class TmnxOamTestMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("notConfigured", 0), ("ping", 1), ("traceroute", 2))

class TmnxOamPingRtnCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
    namedValues = NamedValues(("notApplicable", 0), ("fecEgress", 1), ("fecNoMap", 2), ("notDownstream", 3), ("downstream", 4), ("downstreamNotLabel", 5), ("downstreamNotMac", 6), ("downstreamNotMacFlood", 7), ("malformedEchoRequest", 8), ("tlvNotUnderstood", 9), ("downstreamNotInMfib", 10), ("downstreamMismatched", 11), ("upstreamIfIdUnkn", 12), ("noMplsFwd", 13), ("noLabelAtStackDepth", 14), ("protoIntfMismatched", 15), ("terminatedByOneLabel", 16))

class TmnxOamAddressType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("unknown", 0), ("ipv4Address", 1), ("ipv6Address", 2), ("macAddress", 3), ("sapId", 4), ("sdpId", 5), ("localCpu", 6), ("ipv4Unnumbered", 7), ("ipv6Unnumbered", 8))

class TmnxOamResponseStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87))
    namedValues = NamedValues(("responseReceived", 1), ("unknown", 2), ("internalError", 3), ("maxConcurrentLimitReached", 4), ("requestTimedOut", 5), ("unknownOrigSdpId", 6), ("downOrigSdpId", 7), ("requestTerminated", 8), ("invalidOriginatorId", 9), ("invalidResponderId", 10), ("unknownRespSdpId", 11), ("downRespSdpId", 12), ("invalidServiceId", 13), ("invalidSdp", 14), ("downServiceSdp", 15), ("noServiceEgressLabel", 16), ("invalidHostAddress", 17), ("invalidMacAddress", 18), ("invalidLspName", 19), ("macIsLocal", 20), ("farEndUnreachable", 21), ("downOriginatorId", 22), ("downResponderId", 23), ("changedResponderId", 24), ("downOrigSvcId", 25), ("downRespSvcId", 26), ("noServiceIngressLabel", 27), ("mismatchCustId", 28), ("mismatchSvcType", 29), ("mismatchSvcMtu", 30), ("mismatchSvcLabel", 31), ("noSdpBoundToSvc", 32), ("downOrigSdpBinding", 33), ("invalidLspPathName", 34), ("noLspEndpointAddr", 35), ("invalidLspId", 36), ("downLspPath", 37), ("invalidLspProtocol", 38), ("invalidLspLabel", 39), ("routeIsLocal", 40), ("noRouteToDest", 41), ("localExtranetRoute", 42), ("srcIpInBgpVpnRoute", 43), ("srcIpInvalid", 44), ("bgpDaemonBusy", 45), ("mcastNotEnabled", 46), ("mTraceNoSGFlow", 47), ("mTraceSysIpNotCfg", 48), ("noFwdEntryInMfib", 49), ("dnsNameNotFound", 50), ("noSocket", 51), ("socketOptVprnIdFail", 52), ("socketOptIfInexFail", 53), ("socketOptNextHopFail", 54), ("socketOptMtuDiscFail", 55), ("socketOptSndbufFail", 56), ("socketOptHdrincFail", 57), ("socketOptTosFail", 58), ("socketOptTtlFail", 59), ("bindSocketFail", 60), ("noRouteByIntf", 61), ("noIntf", 62), ("noLocalIp", 63), ("sendtoFail", 64), ("rcvdWrongType", 65), ("noDirectInterface", 66), ("nexthopUnreachable", 67), ("socketOptHwTimeStampFail", 68), ("noSpokeSdpInVll", 69), ("farEndVccvNotSupported", 70), ("noVcEgressLabel", 71), ("socketOptIpSessionFail", 72), ("rcvdWrongSize", 73), ("dnsLookupFail", 74), ("noIpv6SrcAddrOnIntf", 75), ("multipathNotSupported", 76), ("nhIntfNameNotFound", 77), ("msPwInvalidReplyMode", 78), ("ancpNoAncpString", 79), ("ancpNoSubscriber", 80), ("ancpNoAncpStringForSubscriber", 81), ("ancpNoAccessNodeforAncpString", 82), ("ancpNoAncpCapabilityNegotiated", 83), ("ancpOtherTestInProgress", 84), ("ancpMaxNbrAncpTestsInProgress", 85), ("spokeSdpOperDown", 86), ("noMsPwVccvInReplyDir", 87))

class TmnxOamSignalProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("unknown", 0), ("static", 1), ("bgp", 2), ("ldp", 3), ("rsvpTe", 4), ("crLdp", 5))

class TmnxOamTestResponsePlane(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("controlPlane", 1), ("dataPlane", 2), ("none", 3))

class TmnxOamSaaThreshold(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("noThreshold", 0), ("inJitter", 1), ("outJitter", 2), ("rtJitter", 3), ("inLoss", 4), ("outLoss", 5), ("rtLoss", 6), ("inLatency", 7), ("outLatency", 8), ("rtLatency", 9))

class TmnxOamVcType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(5, 11))
    namedValues = NamedValues(("meshSdp", 5), ("spokeSdp", 11))

class TmnxOamLTtraceDisStatusBits(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("timeout", 0), ("maxPath", 1), ("maxHop", 2), ("unexploredPath", 3), ("noResource", 4))

tmnxOamPingMaxConcurrentTests = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 2), Unsigned32()).setUnits('tests').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxOamPingMaxConcurrentTests.setStatus('current')
tmnxOamPingCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3), )
if mibBuilder.loadTexts: tmnxOamPingCtlTable.setStatus('current')
tmnxOamPingCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamPingCtlEntry.setStatus('current')
tmnxOamPingCtlOwnerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: tmnxOamPingCtlOwnerIndex.setStatus('current')
tmnxOamPingCtlTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: tmnxOamPingCtlTestIndex.setStatus('current')
tmnxOamPingCtlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlRowStatus.setStatus('current')
tmnxOamPingCtlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 4), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlStorageType.setStatus('current')
tmnxOamPingCtlDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 5), SnmpAdminString().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlDescr.setStatus('current')
tmnxOamPingCtlTestMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))).clone(namedValues=NamedValues(("sdpPing", 1), ("mtuPing", 2), ("svcPing", 3), ("macQuery", 4), ("macPing", 5), ("macPopulate", 6), ("macPurge", 7), ("lspPing", 8), ("vprnPing", 9), ("atmPing", 10), ("mfibPing", 11), ("cpePing", 12), ("mrInfo", 13), ("vccvPing", 14), ("icmpPing", 15), ("dnsPing", 16), ("ancpLoopback", 17))).clone('sdpPing')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlTestMode.setStatus('current')
tmnxOamPingCtlAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlAdminStatus.setStatus('current')
tmnxOamPingCtlOrigSdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 8), SdpId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlOrigSdpId.setStatus('current')
tmnxOamPingCtlRespSdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 9), SdpId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlRespSdpId.setStatus('current')
tmnxOamPingCtlFcName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 10), TFCName().clone('be')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlFcName.setStatus('current')
tmnxOamPingCtlProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 11), TProfile().clone('out')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlProfile.setStatus('current')
tmnxOamPingCtlMtuStartSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 12), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(40, 9197), ))).setUnits('Octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlMtuStartSize.setStatus('current')
tmnxOamPingCtlMtuEndSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 13), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(41, 9198), ))).setUnits('Octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlMtuEndSize.setStatus('current')
tmnxOamPingCtlMtuStepSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 512)).clone(32)).setUnits('Octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlMtuStepSize.setStatus('current')
tmnxOamPingCtlTargetIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 16), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlTargetIpAddress.setStatus('obsolete')
tmnxOamPingCtlServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 17), TmnxServId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlServiceId.setStatus('current')
tmnxOamPingCtlLocalSdp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 18), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlLocalSdp.setStatus('current')
tmnxOamPingCtlRemoteSdp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 19), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlRemoteSdp.setStatus('current')
tmnxOamPingCtlSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16384)).clone(72)).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlSize.setStatus('current')
tmnxOamPingCtlTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlTimeOut.setStatus('current')
tmnxOamPingCtlProbeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000)).clone(1)).setUnits('probes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlProbeCount.setStatus('current')
tmnxOamPingCtlInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlInterval.setStatus('current')
tmnxOamPingCtlMaxRows = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 24), Unsigned32().clone(300)).setUnits('rows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlMaxRows.setStatus('current')
tmnxOamPingCtlTrapGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 25), Bits().clone(namedValues=NamedValues(("probeFailure", 0), ("testFailure", 1), ("testCompletion", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlTrapGeneration.setStatus('current')
tmnxOamPingCtlTrapProbeFailureFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlTrapProbeFailureFilter.setStatus('current')
tmnxOamPingCtlTrapTestFailureFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlTrapTestFailureFilter.setStatus('current')
tmnxOamPingCtlSAA = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 28), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlSAA.setStatus('current')
tmnxOamPingCtlRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingCtlRuns.setStatus('current')
tmnxOamPingCtlFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingCtlFailures.setStatus('current')
tmnxOamPingCtlLastRunResult = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("undetermined", 0), ("success", 1), ("failed", 2), ("aborted", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingCtlLastRunResult.setStatus('current')
tmnxOamPingCtlLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 32), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingCtlLastChanged.setStatus('current')
tmnxOamPingCtlVRtrID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 33), TmnxVRtrID().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlVRtrID.setStatus('current')
tmnxOamPingCtlTgtAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 34), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlTgtAddrType.setStatus('current')
tmnxOamPingCtlTgtAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 35), InetAddress().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlTgtAddress.setStatus('current')
tmnxOamPingCtlSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 36), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlSrcAddrType.setStatus('current')
tmnxOamPingCtlSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 37), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlSrcAddress.setStatus('current')
tmnxOamPingCtlDnsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 38), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlDnsName.setStatus('current')
tmnxOamPingCtlDNSRecord = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 3, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4Arecord", 1), ("ipv6AAAArecord", 2))).clone('ipv4Arecord')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamPingCtlDNSRecord.setStatus('current')
tmnxOamPingResultsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4), )
if mibBuilder.loadTexts: tmnxOamPingResultsTable.setStatus('current')
tmnxOamPingResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsTestRunIndex"))
if mibBuilder.loadTexts: tmnxOamPingResultsEntry.setStatus('current')
tmnxOamPingResultsOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsOperStatus.setStatus('current')
tmnxOamPingResultsMinRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 4), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsMinRtt.setStatus('current')
tmnxOamPingResultsMaxRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 5), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsMaxRtt.setStatus('current')
tmnxOamPingResultsAverageRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 6), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsAverageRtt.setStatus('current')
tmnxOamPingResultsRttSumOfSquares = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 7), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsRttSumOfSquares.setStatus('current')
tmnxOamPingResultsMtuResponseSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 8), Unsigned32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsMtuResponseSize.setStatus('current')
tmnxOamPingResultsSvcPing = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("undetermined", 0), ("failed", 1), ("success", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsSvcPing.setStatus('current')
tmnxOamPingResultsProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 10), Unsigned32()).setUnits('responses').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsProbeResponses.setStatus('current')
tmnxOamPingResultsSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 11), Unsigned32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsSentProbes.setStatus('current')
tmnxOamPingResultsLastGoodProbe = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsLastGoodProbe.setStatus('current')
tmnxOamPingResultsLastRespHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(100, 100)).setFixedLength(100)).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsLastRespHeader.setStatus('current')
tmnxOamPingResultsMinTt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 14), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsMinTt.setStatus('current')
tmnxOamPingResultsMaxTt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 15), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsMaxTt.setStatus('current')
tmnxOamPingResultsAverageTt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 16), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsAverageTt.setStatus('current')
tmnxOamPingResultsTtSumOfSquares = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 17), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsTtSumOfSquares.setStatus('current')
tmnxOamPingResultsMinInTt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 18), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsMinInTt.setStatus('current')
tmnxOamPingResultsMaxInTt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 19), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsMaxInTt.setStatus('current')
tmnxOamPingResultsAverageInTt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 20), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsAverageInTt.setStatus('current')
tmnxOamPingResultsInTtSumOfSqrs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 21), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsInTtSumOfSqrs.setStatus('current')
tmnxOamPingResultsOutJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 22), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsOutJitter.setStatus('current')
tmnxOamPingResultsInJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 23), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsInJitter.setStatus('current')
tmnxOamPingResultsRtJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 24), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsRtJitter.setStatus('current')
tmnxOamPingResultsProbeTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsProbeTimeouts.setStatus('current')
tmnxOamPingResultsProbeFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingResultsProbeFailures.setStatus('current')
tmnxOamPingResultsTestRunIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 4, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: tmnxOamPingResultsTestRunIndex.setStatus('current')
tmnxOamPingHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5), )
if mibBuilder.loadTexts: tmnxOamPingHistoryTable.setStatus('current')
tmnxOamPingHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsTestRunIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryIndex"))
if mibBuilder.loadTexts: tmnxOamPingHistoryEntry.setStatus('current')
tmnxOamPingHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: tmnxOamPingHistoryIndex.setStatus('current')
tmnxOamPingHistoryResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 2), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistoryResponse.setStatus('current')
tmnxOamPingHistoryOneWayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 3), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistoryOneWayTime.setStatus('current')
tmnxOamPingHistorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 4), Unsigned32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistorySize.setStatus('current')
tmnxOamPingHistoryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 5), TmnxOamResponseStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistoryStatus.setStatus('current')
tmnxOamPingHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistoryTime.setStatus('current')
tmnxOamPingHistoryReturnCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 7), TmnxOamPingRtnCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistoryReturnCode.setStatus('current')
tmnxOamPingHistorySrcIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistorySrcIpAddress.setStatus('obsolete')
tmnxOamPingHistAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 9), TmnxOamAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistAddressType.setStatus('current')
tmnxOamPingHistSapId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 10), TmnxStrSapId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistSapId.setStatus('current')
tmnxOamPingHistoryVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistoryVersion.setStatus('current')
tmnxOamPingHistoryCpeMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 13), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistoryCpeMacAddr.setStatus('current')
tmnxOamPingHistoryRespSvcId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 14), TmnxServId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistoryRespSvcId.setStatus('current')
tmnxOamPingHistorySequence = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistorySequence.setStatus('current')
tmnxOamPingHistoryIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 16), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistoryIfIndex.setStatus('current')
tmnxOamPingHistoryDataLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistoryDataLen.setStatus('current')
tmnxOamPingHistoryRespPlane = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 18), TmnxOamTestResponsePlane()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistoryRespPlane.setStatus('current')
tmnxOamPingHistoryReqHdr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 19), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 150), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistoryReqHdr.setStatus('current')
tmnxOamPingHistoryRespHdr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 20), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 150), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistoryRespHdr.setStatus('current')
tmnxOamPingHistoryDnsAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 21), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistoryDnsAddrType.setStatus('current')
tmnxOamPingHistoryDnsAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 22), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistoryDnsAddress.setStatus('current')
tmnxOamPingHistorySrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 23), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistorySrcAddrType.setStatus('current')
tmnxOamPingHistorySrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 24), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistorySrcAddress.setStatus('current')
tmnxOamPingHistoryInOneWayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 5, 1, 25), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamPingHistoryInOneWayTime.setStatus('current')
tmnxOamMacPingCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 6), )
if mibBuilder.loadTexts: tmnxOamMacPingCtlTable.setStatus('current')
tmnxOamMacPingCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 6, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamMacPingCtlEntry.setStatus('current')
tmnxOamMacPingCtlTargetMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 6, 1, 1), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMacPingCtlTargetMacAddr.setStatus('current')
tmnxOamMacPingCtlSourceMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 6, 1, 2), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMacPingCtlSourceMacAddr.setStatus('current')
tmnxOamMacPingCtlSendControl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 6, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMacPingCtlSendControl.setStatus('current')
tmnxOamMacPingCtlReplyControl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 6, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMacPingCtlReplyControl.setStatus('current')
tmnxOamMacPingCtlTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 6, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(5)).setUnits('time-to-live value').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMacPingCtlTtl.setStatus('current')
tmnxOamMacPingCtlRegister = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 6, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMacPingCtlRegister.setStatus('current')
tmnxOamMacPingCtlFlood = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 6, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMacPingCtlFlood.setStatus('current')
tmnxOamMacPingCtlForce = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 6, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMacPingCtlForce.setStatus('current')
tmnxOamMacPingCtlAge = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 6, 1, 9), Unsigned32().clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMacPingCtlAge.setStatus('current')
tmnxOamMacPingCtlSapPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 6, 1, 10), TmnxPortID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMacPingCtlSapPortId.setStatus('current')
tmnxOamMacPingCtlSapEncapValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 6, 1, 11), TmnxEncapVal()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMacPingCtlSapEncapValue.setStatus('current')
tmnxOamMacPingCtlFibEntryName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 6, 1, 12), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMacPingCtlFibEntryName.setStatus('current')
tmnxOamMacPingHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7), )
if mibBuilder.loadTexts: tmnxOamMacPingHistoryTable.setStatus('current')
tmnxOamMacPingHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsTestRunIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingHistoryIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingReplyIndex"))
if mibBuilder.loadTexts: tmnxOamMacPingHistoryEntry.setStatus('current')
tmnxOamMacPingHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: tmnxOamMacPingHistoryIndex.setStatus('current')
tmnxOamMacPingReplyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: tmnxOamMacPingReplyIndex.setStatus('current')
tmnxOamMacPingHistoryResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1, 3), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingHistoryResponse.setStatus('current')
tmnxOamMacPingHistoryOneWayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1, 4), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingHistoryOneWayTime.setStatus('current')
tmnxOamMacPingHistoryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1, 5), TmnxOamResponseStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingHistoryStatus.setStatus('current')
tmnxOamMacPingHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingHistoryTime.setStatus('current')
tmnxOamMacPingHistoryReturnCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1, 7), TmnxOamPingRtnCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingHistoryReturnCode.setStatus('current')
tmnxOamMacPingHistorySrcIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingHistorySrcIpAddress.setStatus('obsolete')
tmnxOamMacPingHistoryAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1, 9), TmnxOamAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingHistoryAddressType.setStatus('current')
tmnxOamMacPingHistorySapId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1, 10), TmnxStrSapId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingHistorySapId.setStatus('current')
tmnxOamMacPingHistorySdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1, 12), SdpId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingHistorySdpId.setStatus('current')
tmnxOamMacPingHistoryAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingHistoryAdminStatus.setStatus('current')
tmnxOamMacPingHistoryOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingHistoryOperStatus.setStatus('current')
tmnxOamMacPingHistoryResponsePlane = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1, 15), TmnxOamTestResponsePlane()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingHistoryResponsePlane.setStatus('current')
tmnxOamMacPingHistorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1, 16), Unsigned32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingHistorySize.setStatus('current')
tmnxOamMacPingHistoryInOneWayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1, 17), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingHistoryInOneWayTime.setStatus('current')
tmnxOamMacPingHistorySrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1, 18), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingHistorySrcAddrType.setStatus('current')
tmnxOamMacPingHistorySrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 7, 1, 19), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingHistorySrcAddress.setStatus('current')
tmnxOamMacPingL2MapTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 8), )
if mibBuilder.loadTexts: tmnxOamMacPingL2MapTable.setStatus('current')
tmnxOamMacPingL2MapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 8, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsTestRunIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingHistoryIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingReplyIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingL2MapIndex"))
if mibBuilder.loadTexts: tmnxOamMacPingL2MapEntry.setStatus('current')
tmnxOamMacPingL2MapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: tmnxOamMacPingL2MapIndex.setStatus('current')
tmnxOamMacPingL2MapRouterID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingL2MapRouterID.setStatus('current')
tmnxOamMacPingL2MapLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 8, 1, 3), MplsLabel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingL2MapLabel.setStatus('current')
tmnxOamMacPingL2MapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 8, 1, 4), TmnxOamSignalProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingL2MapProtocol.setStatus('current')
tmnxOamMacPingL2MapVCType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 8, 1, 5), TmnxOamVcType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingL2MapVCType.setStatus('current')
tmnxOamMacPingL2MapVCID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 8, 1, 6), TmnxVcId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingL2MapVCID.setStatus('current')
tmnxOamMacPingL2MapDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 8, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("upstream", 1), ("downstream", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacPingL2MapDirection.setStatus('current')
tmnxOamLspPingCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 9), )
if mibBuilder.loadTexts: tmnxOamLspPingCtlTable.setStatus('current')
tmnxOamLspPingCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 9, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamLspPingCtlEntry.setStatus('current')
tmnxOamLspPingCtlVRtrID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 9, 1, 1), TmnxVRtrID().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspPingCtlVRtrID.setStatus('current')
tmnxOamLspPingCtlLspName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 9, 1, 2), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspPingCtlLspName.setStatus('current')
tmnxOamLspPingCtlReturnLsp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 9, 1, 3), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspPingCtlReturnLsp.setStatus('current')
tmnxOamLspPingCtlTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 9, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(255)).setUnits('time-to-live value').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspPingCtlTtl.setStatus('current')
tmnxOamLspPingCtlPathName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 9, 1, 5), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspPingCtlPathName.setStatus('current')
tmnxOamLspPingCtlLdpIpPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 9, 1, 6), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspPingCtlLdpIpPrefix.setStatus('obsolete')
tmnxOamLspPingCtlLdpIpPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 9, 1, 7), IpAddressPrefixLength().clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspPingCtlLdpIpPrefixLen.setStatus('obsolete')
tmnxOamLspPingCtlLdpPrefixType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 9, 1, 8), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspPingCtlLdpPrefixType.setStatus('current')
tmnxOamLspPingCtlLdpPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 9, 1, 9), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspPingCtlLdpPrefix.setStatus('current')
tmnxOamLspPingCtlLdpPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 9, 1, 10), InetAddressPrefixLength().clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspPingCtlLdpPrefixLen.setStatus('current')
tmnxOamLspPingCtlPathDestType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 9, 1, 11), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspPingCtlPathDestType.setStatus('current')
tmnxOamLspPingCtlPathDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 9, 1, 12), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspPingCtlPathDest.setStatus('current')
tmnxOamLspPingCtlNhIntfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 9, 1, 13), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspPingCtlNhIntfName.setStatus('current')
tmnxOamLspPingCtlNhAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 9, 1, 14), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspPingCtlNhAddressType.setStatus('current')
tmnxOamLspPingCtlNhAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 9, 1, 15), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspPingCtlNhAddress.setStatus('current')
tmnxOamVprnPingCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 10), )
if mibBuilder.loadTexts: tmnxOamVprnPingCtlTable.setStatus('current')
tmnxOamVprnPingCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 10, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamVprnPingCtlEntry.setStatus('current')
tmnxOamVprnPingCtlSourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 10, 1, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamVprnPingCtlSourceIpAddr.setStatus('obsolete')
tmnxOamVprnPingCtlReplyControl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 10, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamVprnPingCtlReplyControl.setStatus('current')
tmnxOamVprnPingCtlTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(5)).setUnits('time-to-live value').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamVprnPingCtlTtl.setStatus('current')
tmnxOamVprnPingCtlSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 10, 1, 4), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamVprnPingCtlSrcAddrType.setStatus('current')
tmnxOamVprnPingCtlSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 10, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamVprnPingCtlSrcAddress.setStatus('current')
tmnxOamAtmPingCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 11), )
if mibBuilder.loadTexts: tmnxOamAtmPingCtlTable.setStatus('current')
tmnxOamAtmPingCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 11, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamAtmPingCtlEntry.setStatus('current')
tmnxOamAtmPingCtlPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 11, 1, 1), TmnxPortID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamAtmPingCtlPortId.setStatus('current')
tmnxOamAtmPingCtlVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 11, 1, 2), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamAtmPingCtlVpi.setStatus('current')
tmnxOamAtmPingCtlVci = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 11, 1, 3), AtmVcIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamAtmPingCtlVci.setStatus('current')
tmnxOamAtmPingCtlLpbkLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 11, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16).clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamAtmPingCtlLpbkLocation.setStatus('current')
tmnxOamAtmPingCtlSegment = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("endToEnd", 1), ("segment", 2))).clone('endToEnd')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamAtmPingCtlSegment.setStatus('current')
tmnxOamMfibPingCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 12), )
if mibBuilder.loadTexts: tmnxOamMfibPingCtlTable.setStatus('current')
tmnxOamMfibPingCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 12, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamMfibPingCtlEntry.setStatus('current')
tmnxOamMfibPingCtlSourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 12, 1, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxOamMfibPingCtlSourceIpAddr.setStatus('obsolete')
tmnxOamMfibPingCtlDestIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 12, 1, 2), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxOamMfibPingCtlDestIpAddr.setStatus('obsolete')
tmnxOamMfibPingCtlReplyControl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 12, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxOamMfibPingCtlReplyControl.setStatus('current')
tmnxOamMfibPingCtlTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(255)).setUnits('time-to-live value').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxOamMfibPingCtlTtl.setStatus('current')
tmnxOamMfibPingCtlSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 12, 1, 5), InetAddressType().clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxOamMfibPingCtlSrcAddrType.setStatus('current')
tmnxOamMfibPingCtlSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 12, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxOamMfibPingCtlSrcAddress.setStatus('current')
tmnxOamMfibPingCtlDestAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 12, 1, 7), InetAddressType().clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxOamMfibPingCtlDestAddrType.setStatus('current')
tmnxOamMfibPingCtlDestAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 12, 1, 8), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxOamMfibPingCtlDestAddress.setStatus('current')
tmnxOamMfibPingCtlDestMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 12, 1, 9), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxOamMfibPingCtlDestMacAddr.setStatus('current')
tmnxOamCpePingCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 13), )
if mibBuilder.loadTexts: tmnxOamCpePingCtlTable.setStatus('current')
tmnxOamCpePingCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 13, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamCpePingCtlEntry.setStatus('current')
tmnxOamCpePingCtlSourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 13, 1, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxOamCpePingCtlSourceIpAddr.setStatus('obsolete')
tmnxOamCpePingCtlSendControl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 13, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxOamCpePingCtlSendControl.setStatus('current')
tmnxOamCpePingCtlReplyControl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 13, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxOamCpePingCtlReplyControl.setStatus('current')
tmnxOamCpePingCtlTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 13, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(255)).setUnits('time-to-live value').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxOamCpePingCtlTtl.setStatus('current')
tmnxOamCpePingCtlSrceMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 13, 1, 5), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxOamCpePingCtlSrceMacAddr.setStatus('current')
tmnxOamCpePingCtlSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 13, 1, 6), InetAddressType().clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxOamCpePingCtlSrcAddrType.setStatus('current')
tmnxOamCpePingCtlSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 13, 1, 7), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxOamCpePingCtlSrcAddress.setStatus('current')
tmnxOamMRInfoRespTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 14), )
if mibBuilder.loadTexts: tmnxOamMRInfoRespTable.setStatus('current')
tmnxOamMRInfoRespEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 14, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsTestRunIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryIndex"))
if mibBuilder.loadTexts: tmnxOamMRInfoRespEntry.setStatus('current')
tmnxOamMRInfoRespCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 14, 1, 1), Bits().clone(namedValues=NamedValues(("leaf", 0), ("prune", 1), ("genid", 2), ("mtrace", 3), ("snmp", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMRInfoRespCapabilities.setStatus('current')
tmnxOamMRInfoRespMinorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 14, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMRInfoRespMinorVersion.setStatus('current')
tmnxOamMRInfoRespMajorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 14, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMRInfoRespMajorVersion.setStatus('current')
tmnxOamMRInfoRespNumInterfaces = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 14, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMRInfoRespNumInterfaces.setStatus('current')
tmnxOamMRInfoRespIfTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 15), )
if mibBuilder.loadTexts: tmnxOamMRInfoRespIfTable.setStatus('current')
tmnxOamMRInfoRespIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 15, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsTestRunIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoRespIfIndex"))
if mibBuilder.loadTexts: tmnxOamMRInfoRespIfEntry.setStatus('current')
tmnxOamMRInfoRespIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 15, 1, 1), Unsigned32())
if mibBuilder.loadTexts: tmnxOamMRInfoRespIfIndex.setStatus('current')
tmnxOamMRInfoRespIfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 15, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMRInfoRespIfAddress.setStatus('obsolete')
tmnxOamMRInfoRespIfMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 15, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMRInfoRespIfMetric.setStatus('current')
tmnxOamMRInfoRespIfThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 15, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMRInfoRespIfThreshold.setStatus('current')
tmnxOamMRInfoRespIfFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 15, 1, 5), Bits().clone(namedValues=NamedValues(("tunnel", 0), ("srcrt", 1), ("reserved1", 2), ("reserved2", 3), ("down", 4), ("disabled", 5), ("querier", 6), ("leaf", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMRInfoRespIfFlags.setStatus('current')
tmnxOamMRInfoRespIfNbrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 15, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMRInfoRespIfNbrCount.setStatus('current')
tmnxOamMRInfoRespIfAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 15, 1, 7), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMRInfoRespIfAddrType.setStatus('current')
tmnxOamMRInfoRespIfAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 15, 1, 8), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMRInfoRespIfAddr.setStatus('current')
tmnxOamMRInfoRespIfNbrTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 16), )
if mibBuilder.loadTexts: tmnxOamMRInfoRespIfNbrTable.setStatus('current')
tmnxOamMRInfoRespIfNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 16, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsTestRunIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoRespIfIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoRespIfNbrIndex"))
if mibBuilder.loadTexts: tmnxOamMRInfoRespIfNbrEntry.setStatus('current')
tmnxOamMRInfoRespIfNbrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 16, 1, 1), Unsigned32())
if mibBuilder.loadTexts: tmnxOamMRInfoRespIfNbrIndex.setStatus('current')
tmnxOamMRInfoRespIfNbrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 16, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMRInfoRespIfNbrAddress.setStatus('obsolete')
tmnxOamMRInfoRespIfNbrAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 16, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMRInfoRespIfNbrAddrType.setStatus('current')
tmnxOamMRInfoRespIfNbrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 16, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMRInfoRespIfNbrAddr.setStatus('current')
tmnxOamVccvPingCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 17), )
if mibBuilder.loadTexts: tmnxOamVccvPingCtlTable.setStatus('current')
tmnxOamVccvPingCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 17, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamVccvPingCtlEntry.setStatus('current')
tmnxOamVccvPingCtlSdpIdVcId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 17, 1, 1), SdpBindId().clone(hexValue="0000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamVccvPingCtlSdpIdVcId.setStatus('current')
tmnxOamVccvPingCtlReplyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4))).clone(namedValues=NamedValues(("ip", 2), ("controlChannel", 4))).clone('controlChannel')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamVccvPingCtlReplyMode.setStatus('current')
tmnxOamVccvPingCtlPwId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 17, 1, 3), TmnxVcIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamVccvPingCtlPwId.setStatus('current')
tmnxOamVccvPingCtlTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 17, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setUnits('time-to-live value').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamVccvPingCtlTtl.setStatus('current')
tmnxOamIcmpPingCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 18), )
if mibBuilder.loadTexts: tmnxOamIcmpPingCtlTable.setStatus('current')
tmnxOamIcmpPingCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 18, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamIcmpPingCtlEntry.setStatus('current')
tmnxOamIcmpPingCtlRapid = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 18, 1, 1), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamIcmpPingCtlRapid.setStatus('current')
tmnxOamIcmpPingCtlTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 18, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)).clone(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamIcmpPingCtlTtl.setStatus('current')
tmnxOamIcmpPingCtlDSField = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 18, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamIcmpPingCtlDSField.setStatus('current')
tmnxOamIcmpPingCtlPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 18, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 65535), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamIcmpPingCtlPattern.setStatus('current')
tmnxOamIcmpPingCtlNhAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 18, 1, 5), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamIcmpPingCtlNhAddrType.setStatus('current')
tmnxOamIcmpPingCtlNhAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 18, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamIcmpPingCtlNhAddress.setStatus('current')
tmnxOamIcmpPingCtlEgrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 18, 1, 7), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamIcmpPingCtlEgrIfIndex.setStatus('current')
tmnxOamIcmpPingCtlBypassRouting = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 18, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamIcmpPingCtlBypassRouting.setStatus('current')
tmnxOamIcmpPingCtlDoNotFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 18, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamIcmpPingCtlDoNotFragment.setStatus('current')
tmnxOamAncpTestCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 19), )
if mibBuilder.loadTexts: tmnxOamAncpTestCtlTable.setStatus('current')
tmnxOamAncpTestCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 19, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamAncpTestCtlEntry.setStatus('current')
tmnxOamAncpTestTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 19, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("subscriberId", 1), ("ancpString", 2))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamAncpTestTarget.setStatus('current')
tmnxOamAncpTestTargetId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 19, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamAncpTestTargetId.setStatus('current')
tmnxOamAncpTestcount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 19, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamAncpTestcount.setStatus('current')
tmnxOamAncpTestTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 19, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamAncpTestTimeout.setStatus('current')
tmnxOamAncpTestHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 20), )
if mibBuilder.loadTexts: tmnxOamAncpTestHistoryTable.setStatus('current')
tmnxOamAncpTestHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 20, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsTestRunIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAncpHistoryIndex"))
if mibBuilder.loadTexts: tmnxOamAncpTestHistoryEntry.setStatus('current')
tmnxOamAncpHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 20, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: tmnxOamAncpHistoryIndex.setStatus('current')
tmnxOamAncpHistoryAncpString = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 20, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamAncpHistoryAncpString.setStatus('current')
tmnxOamAncpHistoryAccNodeCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 20, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamAncpHistoryAccNodeCode.setStatus('current')
tmnxOamAncpHistoryAccNodeResult = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 20, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamAncpHistoryAccNodeResult.setStatus('current')
tmnxOamAncpHistoryAccNodeRspStr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 1, 20, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamAncpHistoryAccNodeRspStr.setStatus('current')
tmnxOamPingProbeFailed = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 1, 0, 1)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTargetIpAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsOperStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMinRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMaxRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsAverageRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsRttSumOfSquares"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMtuResponseSize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsSvcPing"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsProbeResponses"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsSentProbes"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsLastGoodProbe"))
if mibBuilder.loadTexts: tmnxOamPingProbeFailed.setStatus('obsolete')
tmnxOamPingTestFailed = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 1, 0, 2)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTargetIpAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsOperStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMinRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMaxRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsAverageRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsRttSumOfSquares"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMtuResponseSize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsSvcPing"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsProbeResponses"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsSentProbes"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsLastGoodProbe"))
if mibBuilder.loadTexts: tmnxOamPingTestFailed.setStatus('obsolete')
tmnxOamPingTestCompleted = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 1, 0, 3)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTargetIpAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsOperStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMinRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMaxRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsAverageRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsRttSumOfSquares"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMtuResponseSize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsSvcPing"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsProbeResponses"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsSentProbes"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsLastGoodProbe"))
if mibBuilder.loadTexts: tmnxOamPingTestCompleted.setStatus('obsolete')
tmnxOamPingProbeFailedV2 = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 1, 0, 4)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTgtAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTgtAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsOperStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMinRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMaxRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsAverageRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsRttSumOfSquares"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMtuResponseSize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsSvcPing"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsProbeResponses"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsSentProbes"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsLastGoodProbe"))
if mibBuilder.loadTexts: tmnxOamPingProbeFailedV2.setStatus('current')
tmnxOamPingTestFailedV2 = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 1, 0, 5)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTgtAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTgtAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsOperStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMinRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMaxRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsAverageRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsRttSumOfSquares"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMtuResponseSize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsSvcPing"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsProbeResponses"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsSentProbes"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsLastGoodProbe"))
if mibBuilder.loadTexts: tmnxOamPingTestFailedV2.setStatus('current')
tmnxOamPingTestCompletedV2 = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 1, 0, 6)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTgtAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTgtAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsOperStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMinRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMaxRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsAverageRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsRttSumOfSquares"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMtuResponseSize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsSvcPing"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsProbeResponses"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsSentProbes"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsLastGoodProbe"))
if mibBuilder.loadTexts: tmnxOamPingTestCompletedV2.setStatus('current')
tmnxAncpLoopbackTestCompleted = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 1, 0, 7)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAncpHistoryAncpString"))
if mibBuilder.loadTexts: tmnxAncpLoopbackTestCompleted.setStatus('current')
tmnxOamTrMaxConcurrentRequests = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 2), Unsigned32()).setUnits('requests').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxOamTrMaxConcurrentRequests.setStatus('current')
tmnxOamTrCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3), )
if mibBuilder.loadTexts: tmnxOamTrCtlTable.setStatus('current')
tmnxOamTrCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamTrCtlEntry.setStatus('current')
tmnxOamTrCtlOwnerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: tmnxOamTrCtlOwnerIndex.setStatus('current')
tmnxOamTrCtlTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: tmnxOamTrCtlTestIndex.setStatus('current')
tmnxOamTrCtlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlRowStatus.setStatus('current')
tmnxOamTrCtlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 4), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlStorageType.setStatus('current')
tmnxOamTrCtlDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 5), SnmpAdminString().clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlDescr.setStatus('current')
tmnxOamTrCtlTestMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("macTraceRoute", 1), ("lspTraceRoute", 2), ("vprnTraceRoute", 3), ("mcastTraceRoute", 4), ("icmpTraceRoute", 5), ("ldpTreeTrace", 6), ("vccvTraceRoute", 7))).clone('macTraceRoute')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlTestMode.setStatus('current')
tmnxOamTrCtlAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlAdminStatus.setStatus('current')
tmnxOamTrCtlFcName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 8), TFCName().clone('be')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlFcName.setStatus('current')
tmnxOamTrCtlProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 9), TProfile().clone('out')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlProfile.setStatus('current')
tmnxOamTrCtlTargetIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 10), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlTargetIpAddress.setStatus('obsolete')
tmnxOamTrCtlServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 11), TmnxServId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlServiceId.setStatus('current')
tmnxOamTrCtlDataSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 9198)).clone(1)).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlDataSize.setStatus('current')
tmnxOamTrCtlTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(3)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlTimeOut.setStatus('current')
tmnxOamTrCtlProbesPerHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(1)).setUnits('probes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlProbesPerHop.setStatus('current')
tmnxOamTrCtlMaxTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(4)).setUnits('time-to-live value').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlMaxTtl.setStatus('current')
tmnxOamTrCtlInitialTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlInitialTtl.setStatus('current')
tmnxOamTrCtlDSField = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlDSField.setStatus('current')
tmnxOamTrCtlMaxFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(5)).setUnits('timeouts').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlMaxFailures.setStatus('current')
tmnxOamTrCtlInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 19), Unsigned32().clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlInterval.setStatus('current')
tmnxOamTrCtlMaxRows = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 20), Unsigned32().clone(300)).setUnits('rows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlMaxRows.setStatus('current')
tmnxOamTrCtlTrapGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 21), Bits().clone(namedValues=NamedValues(("pathChange", 0), ("testFailure", 1), ("testCompletion", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlTrapGeneration.setStatus('current')
tmnxOamTrCtlCreateHopsEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 22), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlCreateHopsEntries.setStatus('current')
tmnxOamTrCtlSAA = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 23), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlSAA.setStatus('current')
tmnxOamTrCtlRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrCtlRuns.setStatus('current')
tmnxOamTrCtlFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrCtlFailures.setStatus('current')
tmnxOamTrCtlLastRunResult = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("undetermined", 0), ("success", 1), ("failed", 2), ("aborted", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrCtlLastRunResult.setStatus('current')
tmnxOamTrCtlLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 27), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrCtlLastChanged.setStatus('current')
tmnxOamTrCtlVRtrID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 28), TmnxVRtrID().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlVRtrID.setStatus('current')
tmnxOamTrCtlTgtAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 29), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlTgtAddrType.setStatus('current')
tmnxOamTrCtlTgtAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 30), InetAddress().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlTgtAddress.setStatus('current')
tmnxOamTrCtlSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 31), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlSrcAddrType.setStatus('current')
tmnxOamTrCtlSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 32), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlSrcAddress.setStatus('current')
tmnxOamTrCtlWaitMilliSec = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 3, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 60000)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamTrCtlWaitMilliSec.setStatus('current')
tmnxOamTrResultsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 4), )
if mibBuilder.loadTexts: tmnxOamTrResultsTable.setStatus('current')
tmnxOamTrResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsTestRunIndex"))
if mibBuilder.loadTexts: tmnxOamTrResultsEntry.setStatus('current')
tmnxOamTrResultsOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrResultsOperStatus.setStatus('current')
tmnxOamTrResultsCurHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 4, 1, 2), Gauge32()).setUnits('hops').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrResultsCurHopCount.setStatus('current')
tmnxOamTrResultsCurProbeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 4, 1, 3), Gauge32()).setUnits('probes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrResultsCurProbeCount.setStatus('current')
tmnxOamTrResultsIpTgtAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 4, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrResultsIpTgtAddr.setStatus('obsolete')
tmnxOamTrResultsTestAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 4, 1, 5), Unsigned32()).setUnits('tests').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrResultsTestAttempts.setStatus('obsolete')
tmnxOamTrResultsTestSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 4, 1, 6), Unsigned32()).setUnits('tests').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrResultsTestSuccesses.setStatus('obsolete')
tmnxOamTrResultsLastGoodPath = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 4, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrResultsLastGoodPath.setStatus('current')
tmnxOamTrResultsTestRunIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 4, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: tmnxOamTrResultsTestRunIndex.setStatus('current')
tmnxOamTrResultsTgtAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 4, 1, 9), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrResultsTgtAddrType.setStatus('current')
tmnxOamTrResultsTgtAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 4, 1, 10), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrResultsTgtAddress.setStatus('current')
tmnxOamTrProbeHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5), )
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryTable.setStatus('current')
tmnxOamTrProbeHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsTestRunIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryHopIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryProbeIndex"))
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryEntry.setStatus('current')
tmnxOamTrProbeHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryIndex.setStatus('current')
tmnxOamTrProbeHistoryHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryHopIndex.setStatus('current')
tmnxOamTrProbeHistoryProbeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryProbeIndex.setStatus('current')
tmnxOamTrProbeHistoryIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryIpAddr.setStatus('obsolete')
tmnxOamTrProbeHistoryResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 5), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryResponse.setStatus('current')
tmnxOamTrProbeHistoryOneWayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 6), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryOneWayTime.setStatus('current')
tmnxOamTrProbeHistoryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 7), TmnxOamResponseStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryStatus.setStatus('current')
tmnxOamTrProbeHistoryLastRC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryLastRC.setStatus('current')
tmnxOamTrProbeHistoryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryTime.setStatus('current')
tmnxOamTrProbeHistoryResponsePlane = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 10), TmnxOamTestResponsePlane()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryResponsePlane.setStatus('current')
tmnxOamTrProbeHistoryAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 11), TmnxOamAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryAddressType.setStatus('current')
tmnxOamTrProbeHistorySapId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 12), TmnxStrSapId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrProbeHistorySapId.setStatus('current')
tmnxOamTrProbeHistoryVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryVersion.setStatus('current')
tmnxOamTrProbeHistoryRouterID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 15), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryRouterID.setStatus('current')
tmnxOamTrProbeHistoryIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 16), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryIfIndex.setStatus('current')
tmnxOamTrProbeHistoryDataLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 17), Unsigned32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryDataLen.setStatus('current')
tmnxOamTrProbeHistorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 18), Unsigned32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrProbeHistorySize.setStatus('current')
tmnxOamTrProbeHistoryInOneWayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 19), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryInOneWayTime.setStatus('current')
tmnxOamTrProbeHistoryAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 20), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryAddrType.setStatus('current')
tmnxOamTrProbeHistoryAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 5, 1, 21), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrProbeHistoryAddress.setStatus('current')
tmnxOamTrHopsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6), )
if mibBuilder.loadTexts: tmnxOamTrHopsTable.setStatus('current')
tmnxOamTrHopsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsTestRunIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsHopIndex"))
if mibBuilder.loadTexts: tmnxOamTrHopsEntry.setStatus('current')
tmnxOamTrHopsHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: tmnxOamTrHopsHopIndex.setStatus('current')
tmnxOamTrHopsIpTgtAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsIpTgtAddress.setStatus('obsolete')
tmnxOamTrHopsMinRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsMinRtt.setStatus('current')
tmnxOamTrHopsMaxRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsMaxRtt.setStatus('current')
tmnxOamTrHopsAverageRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsAverageRtt.setStatus('current')
tmnxOamTrHopsRttSumOfSquares = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsRttSumOfSquares.setStatus('current')
tmnxOamTrHopsMinTt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsMinTt.setStatus('current')
tmnxOamTrHopsMaxTt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsMaxTt.setStatus('current')
tmnxOamTrHopsAverageTt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsAverageTt.setStatus('current')
tmnxOamTrHopsTtSumOfSquares = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsTtSumOfSquares.setStatus('current')
tmnxOamTrHopsSentProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsSentProbes.setStatus('current')
tmnxOamTrHopsProbeResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsProbeResponses.setStatus('current')
tmnxOamTrHopsLastGoodProbe = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 13), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsLastGoodProbe.setStatus('current')
tmnxOamTrHopsMinInTt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 18), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsMinInTt.setStatus('current')
tmnxOamTrHopsMaxInTt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 19), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsMaxInTt.setStatus('current')
tmnxOamTrHopsAverageInTt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 20), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsAverageInTt.setStatus('current')
tmnxOamTrHopsInTtSumOfSqrs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 21), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsInTtSumOfSqrs.setStatus('current')
tmnxOamTrHopsOutJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 22), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsOutJitter.setStatus('current')
tmnxOamTrHopsInJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 23), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsInJitter.setStatus('current')
tmnxOamTrHopsRtJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 24), Integer32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsRtJitter.setStatus('current')
tmnxOamTrHopsProbeTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 25), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsProbeTimeouts.setStatus('current')
tmnxOamTrHopsProbeFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 26), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsProbeFailures.setStatus('current')
tmnxOamTrHopsTgtAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 27), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsTgtAddrType.setStatus('current')
tmnxOamTrHopsTgtAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 6, 1, 28), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamTrHopsTgtAddress.setStatus('current')
tmnxOamMacTrCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 7), )
if mibBuilder.loadTexts: tmnxOamMacTrCtlTable.setStatus('current')
tmnxOamMacTrCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 7, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamMacTrCtlEntry.setStatus('current')
tmnxOamMacTrCtlTargetMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 7, 1, 1), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMacTrCtlTargetMacAddr.setStatus('current')
tmnxOamMacTrCtlSourceMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 7, 1, 2), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMacTrCtlSourceMacAddr.setStatus('current')
tmnxOamMacTrCtlSendControl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 7, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMacTrCtlSendControl.setStatus('current')
tmnxOamMacTrCtlReplyControl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 7, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMacTrCtlReplyControl.setStatus('current')
tmnxOamMacTrL2MapTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 8), )
if mibBuilder.loadTexts: tmnxOamMacTrL2MapTable.setStatus('current')
tmnxOamMacTrL2MapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 8, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsTestRunIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryHopIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryProbeIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrL2MapIndex"))
if mibBuilder.loadTexts: tmnxOamMacTrL2MapEntry.setStatus('current')
tmnxOamMacTrL2MapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: tmnxOamMacTrL2MapIndex.setStatus('current')
tmnxOamMacTrL2MapRouterID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 8, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacTrL2MapRouterID.setStatus('current')
tmnxOamMacTrL2MapLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 8, 1, 3), MplsLabel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacTrL2MapLabel.setStatus('current')
tmnxOamMacTrL2MapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 8, 1, 4), TmnxOamSignalProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacTrL2MapProtocol.setStatus('current')
tmnxOamMacTrL2MapVCType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 8, 1, 5), TmnxOamVcType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacTrL2MapVCType.setStatus('current')
tmnxOamMacTrL2MapVCID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 8, 1, 6), TmnxVcId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacTrL2MapVCID.setStatus('current')
tmnxOamMacTrL2MapDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 8, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("upstream", 1), ("downstream", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacTrL2MapDirection.setStatus('current')
tmnxOamMacTrL2MapSdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 8, 1, 8), SdpId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacTrL2MapSdpId.setStatus('current')
tmnxOamMacTrL2MapSapName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 8, 1, 9), TNamedItemOrEmpty()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMacTrL2MapSapName.setStatus('current')
tmnxOamLspTrCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 9), )
if mibBuilder.loadTexts: tmnxOamLspTrCtlTable.setStatus('current')
tmnxOamLspTrCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 9, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamLspTrCtlEntry.setStatus('current')
tmnxOamLspTrCtlVRtrID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 9, 1, 1), TmnxVRtrID().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspTrCtlVRtrID.setStatus('current')
tmnxOamLspTrCtlLspName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 9, 1, 2), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspTrCtlLspName.setStatus('current')
tmnxOamLspTrCtlPathName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 9, 1, 3), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspTrCtlPathName.setStatus('current')
tmnxOamLspTrCtlLdpIpPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 9, 1, 4), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspTrCtlLdpIpPrefix.setStatus('obsolete')
tmnxOamLspTrCtlLdpIpPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 9, 1, 5), IpAddressPrefixLength().clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspTrCtlLdpIpPrefixLen.setStatus('obsolete')
tmnxOamLspTrCtlLdpPrefixType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 9, 1, 6), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspTrCtlLdpPrefixType.setStatus('current')
tmnxOamLspTrCtlLdpPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 9, 1, 7), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspTrCtlLdpPrefix.setStatus('current')
tmnxOamLspTrCtlLdpPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 9, 1, 8), InetAddressPrefixLength().clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspTrCtlLdpPrefixLen.setStatus('current')
tmnxOamLspTrCtlPathDestType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 9, 1, 9), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspTrCtlPathDestType.setStatus('current')
tmnxOamLspTrCtlPathDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 9, 1, 10), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspTrCtlPathDest.setStatus('current')
tmnxOamLspTrCtlNhIntfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 9, 1, 11), TNamedItemOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspTrCtlNhIntfName.setStatus('current')
tmnxOamLspTrCtlNhAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 9, 1, 12), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspTrCtlNhAddressType.setStatus('current')
tmnxOamLspTrCtlNhAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 9, 1, 13), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLspTrCtlNhAddress.setStatus('current')
tmnxOamLspTrMapTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 10), )
if mibBuilder.loadTexts: tmnxOamLspTrMapTable.setStatus('current')
tmnxOamLspTrMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 10, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsTestRunIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryHopIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryProbeIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrMapIndex"))
if mibBuilder.loadTexts: tmnxOamLspTrMapEntry.setStatus('current')
tmnxOamLspTrMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: tmnxOamLspTrMapIndex.setStatus('current')
tmnxOamLspTrMapDSIPv4Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 10, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLspTrMapDSIPv4Addr.setStatus('current')
tmnxOamLspTrMapAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 10, 1, 3), TmnxOamAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLspTrMapAddrType.setStatus('current')
tmnxOamLspTrMapDSIfAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 10, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLspTrMapDSIfAddr.setStatus('current')
tmnxOamLspTrMapMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLspTrMapMTU.setStatus('current')
tmnxOamLspTrMapDSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLspTrMapDSIndex.setStatus('obsolete')
tmnxOamLspTrDSLabelTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 15), )
if mibBuilder.loadTexts: tmnxOamLspTrDSLabelTable.setStatus('current')
tmnxOamLspTrDSLabelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 15, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsTestRunIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryHopIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryProbeIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrMapIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrDSLabelIndex"))
if mibBuilder.loadTexts: tmnxOamLspTrDSLabelEntry.setStatus('current')
tmnxOamLspTrDSLabelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: tmnxOamLspTrDSLabelIndex.setStatus('current')
tmnxOamLspTrDSLabelLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 15, 1, 2), MplsLabel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLspTrDSLabelLabel.setStatus('current')
tmnxOamLspTrDSLabelProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 15, 1, 3), TmnxOamSignalProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLspTrDSLabelProtocol.setStatus('current')
tmnxOamVprnTrCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 11), )
if mibBuilder.loadTexts: tmnxOamVprnTrCtlTable.setStatus('current')
tmnxOamVprnTrCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 11, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamVprnTrCtlEntry.setStatus('current')
tmnxOamVprnTrCtlSourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 11, 1, 1), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamVprnTrCtlSourceIpAddr.setStatus('obsolete')
tmnxOamVprnTrCtlReplyControl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 11, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamVprnTrCtlReplyControl.setStatus('current')
tmnxOamVprnTrCtlSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 11, 1, 3), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamVprnTrCtlSrcAddrType.setStatus('current')
tmnxOamVprnTrCtlSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 11, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamVprnTrCtlSrcAddress.setStatus('current')
tmnxOamVprnTrL3MapTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 12), )
if mibBuilder.loadTexts: tmnxOamVprnTrL3MapTable.setStatus('current')
tmnxOamVprnTrL3MapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 12, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsTestRunIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryHopIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryProbeIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapReporter"))
if mibBuilder.loadTexts: tmnxOamVprnTrL3MapEntry.setStatus('current')
tmnxOamVprnTrL3MapReporter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("requestor", 1), ("responder", 2))))
if mibBuilder.loadTexts: tmnxOamVprnTrL3MapReporter.setStatus('current')
tmnxOamVprnTrL3MapRouterID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 12, 1, 2), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrL3MapRouterID.setStatus('current')
tmnxOamVprnTrL3MapRteDestAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 12, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrL3MapRteDestAddr.setStatus('obsolete')
tmnxOamVprnTrL3MapRteDestMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 12, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrL3MapRteDestMask.setStatus('obsolete')
tmnxOamVprnTrL3MapRteVprnLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 12, 1, 5), MplsLabel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrL3MapRteVprnLabel.setStatus('current')
tmnxOamVprnTrL3MapRteMetrics = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 12, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrL3MapRteMetrics.setStatus('current')
tmnxOamVprnTrL3MapRteLastUp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 12, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrL3MapRteLastUp.setStatus('current')
tmnxOamVprnTrL3MapRteOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("invalid", 0), ("local", 1), ("static", 2), ("rip", 3), ("ospf", 4), ("isis", 5), ("bgp", 6), ("bgpVpn", 7), ("ldp", 8), ("aggregate", 9), ("any", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrL3MapRteOwner.setStatus('current')
tmnxOamVprnTrL3MapRtePref = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 12, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrL3MapRtePref.setStatus('current')
tmnxOamVprnTrL3MapRteDist = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 12, 1, 10), TmnxVPNRouteDistinguisher()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrL3MapRteDist.setStatus('current')
tmnxOamVprnTrL3MapNumNextHops = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 12, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrL3MapNumNextHops.setStatus('current')
tmnxOamVprnTrL3MapNumRteTargets = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 12, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrL3MapNumRteTargets.setStatus('current')
tmnxOamVprnTrL3MapDestAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 12, 1, 13), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrL3MapDestAddrType.setStatus('current')
tmnxOamVprnTrL3MapDestAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 12, 1, 14), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrL3MapDestAddress.setStatus('current')
tmnxOamVprnTrL3MapDestMaskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 12, 1, 15), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrL3MapDestMaskLen.setStatus('current')
tmnxOamVprnTrNextHopTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 13), )
if mibBuilder.loadTexts: tmnxOamVprnTrNextHopTable.setStatus('current')
tmnxOamVprnTrNextHopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 13, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsTestRunIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryHopIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryProbeIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapReporter"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrNextHopIndex"))
if mibBuilder.loadTexts: tmnxOamVprnTrNextHopEntry.setStatus('current')
tmnxOamVprnTrNextHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: tmnxOamVprnTrNextHopIndex.setStatus('current')
tmnxOamVprnTrNextHopRtrID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 13, 1, 2), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrNextHopRtrID.setStatus('obsolete')
tmnxOamVprnTrNextHopType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrNextHopType.setStatus('current')
tmnxOamVprnTrNextHopTunnelID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 13, 1, 4), TmnxTunnelID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrNextHopTunnelID.setStatus('current')
tmnxOamVprnTrNextHopTunnelType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 13, 1, 5), TmnxTunnelType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrNextHopTunnelType.setStatus('current')
tmnxOamVprnTrNextHopIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 13, 1, 6), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrNextHopIfIndex.setStatus('current')
tmnxOamVprnTrNextHopAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 13, 1, 7), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrNextHopAddrType.setStatus('current')
tmnxOamVprnTrNextHopAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 13, 1, 8), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrNextHopAddress.setStatus('current')
tmnxOamVprnTrRTTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 14), )
if mibBuilder.loadTexts: tmnxOamVprnTrRTTable.setStatus('current')
tmnxOamVprnTrRTEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 14, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsTestRunIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryHopIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryProbeIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapReporter"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrRTIndex"))
if mibBuilder.loadTexts: tmnxOamVprnTrRTEntry.setStatus('current')
tmnxOamVprnTrRTIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: tmnxOamVprnTrRTIndex.setStatus('current')
tmnxOamVprnTrRouteTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 14, 1, 2), TmnxBgpRouteTarget()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVprnTrRouteTarget.setStatus('current')
tmnxOamMcastTrCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 16), )
if mibBuilder.loadTexts: tmnxOamMcastTrCtlTable.setStatus('current')
tmnxOamMcastTrCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 16, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamMcastTrCtlEntry.setStatus('current')
tmnxOamMcastTrCtlVRtrID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 16, 1, 1), TmnxVRtrID().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMcastTrCtlVRtrID.setStatus('current')
tmnxOamMcastTrCtlSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 16, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMcastTrCtlSrcIpAddr.setStatus('obsolete')
tmnxOamMcastTrCtlDestIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 16, 1, 3), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMcastTrCtlDestIpAddr.setStatus('obsolete')
tmnxOamMcastTrCtlRespIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 16, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMcastTrCtlRespIpAddr.setStatus('obsolete')
tmnxOamMcastTrCtlGrpIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 16, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMcastTrCtlGrpIpAddr.setStatus('obsolete')
tmnxOamMcastTrCtlHops = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 16, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMcastTrCtlHops.setStatus('current')
tmnxOamMcastTrQueryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 16, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrQueryId.setStatus('current')
tmnxOamMcastTrCtlSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 16, 1, 8), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMcastTrCtlSrcAddrType.setStatus('current')
tmnxOamMcastTrCtlSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 16, 1, 9), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMcastTrCtlSrcAddress.setStatus('current')
tmnxOamMcastTrCtlDestAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 16, 1, 10), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMcastTrCtlDestAddrType.setStatus('current')
tmnxOamMcastTrCtlDestAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 16, 1, 11), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMcastTrCtlDestAddress.setStatus('current')
tmnxOamMcastTrCtlRespAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 16, 1, 12), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMcastTrCtlRespAddrType.setStatus('current')
tmnxOamMcastTrCtlRespAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 16, 1, 13), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMcastTrCtlRespAddress.setStatus('current')
tmnxOamMcastTrCtlGrpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 16, 1, 14), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMcastTrCtlGrpAddrType.setStatus('current')
tmnxOamMcastTrCtlGrpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 16, 1, 15), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamMcastTrCtlGrpAddress.setStatus('current')
tmnxOamMcastTrRespTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17), )
if mibBuilder.loadTexts: tmnxOamMcastTrRespTable.setStatus('current')
tmnxOamMcastTrRespEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsTestRunIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryHopIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryProbeIndex"))
if mibBuilder.loadTexts: tmnxOamMcastTrRespEntry.setStatus('current')
tmnxOamMcastTrRespQueryArrivalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespQueryArrivalTime.setStatus('current')
tmnxOamMcastTrRespInIfAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespInIfAddr.setStatus('obsolete')
tmnxOamMcastTrRespOutIfAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespOutIfAddr.setStatus('obsolete')
tmnxOamMcastTrRespPrevHopRtrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespPrevHopRtrAddr.setStatus('obsolete')
tmnxOamMcastTrRespInPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespInPktCount.setStatus('current')
tmnxOamMcastTrRespOutPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespOutPktCount.setStatus('current')
tmnxOamMcastTrRespSGPktCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespSGPktCount.setStatus('current')
tmnxOamMcastTrRespRtgProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("unknown", 0), ("dvmrp", 1), ("mospf", 2), ("pim", 3), ("cbt", 4), ("pimSpecial", 5), ("pimStatic", 6), ("dvmrpStatic", 7), ("bgp4Plus", 8), ("cbtSpecial", 9), ("cbtStatic", 10), ("pimAssert", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespRtgProtocol.setStatus('current')
tmnxOamMcastTrRespFwdTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespFwdTtl.setStatus('current')
tmnxOamMcastTrRespMBZBit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespMBZBit.setStatus('current')
tmnxOamMcastTrRespSrcBit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespSrcBit.setStatus('current')
tmnxOamMcastTrRespSrcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespSrcMask.setStatus('current')
tmnxOamMcastTrRespFwdCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 128, 129, 130, 131, 132))).clone(namedValues=NamedValues(("noError", 0), ("wrongIf", 1), ("pruneSent", 2), ("pruneRecvd", 3), ("scoped", 4), ("noRoute", 5), ("wrongLastHop", 6), ("notForwarding", 7), ("reachedRP", 8), ("rpfIf", 9), ("noMulticast", 10), ("infoHidden", 11), ("fatalError", 128), ("noSpace", 129), ("oldRouter", 130), ("adminProhib", 131), ("unknown", 132)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespFwdCode.setStatus('current')
tmnxOamMcastTrRespInIfAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 14), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespInIfAddrType.setStatus('current')
tmnxOamMcastTrRespInIfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 15), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespInIfAddress.setStatus('current')
tmnxOamMcastTrRespOutIfAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 16), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespOutIfAddrType.setStatus('current')
tmnxOamMcastTrRespOutIfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 17), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespOutIfAddress.setStatus('current')
tmnxOamMcastTrRespPhRtrAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 18), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespPhRtrAddrType.setStatus('current')
tmnxOamMcastTrRespPhRtrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 17, 1, 19), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamMcastTrRespPhRtrAddress.setStatus('current')
tmnxOamTrPathChange = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 2, 0, 1)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestMode"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlLastRunResult"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsOperStatus"))
if mibBuilder.loadTexts: tmnxOamTrPathChange.setStatus('current')
tmnxOamTrTestFailed = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 2, 0, 2)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestMode"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlLastRunResult"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsOperStatus"))
if mibBuilder.loadTexts: tmnxOamTrTestFailed.setStatus('current')
tmnxOamTrTestCompleted = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 2, 0, 3)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestMode"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlLastRunResult"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsOperStatus"))
if mibBuilder.loadTexts: tmnxOamTrTestCompleted.setStatus('current')
tmnxOamSaaCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 2), )
if mibBuilder.loadTexts: tmnxOamSaaCtlTable.setStatus('current')
tmnxOamSaaCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamSaaCtlEntry.setStatus('current')
tmnxOamSaaCtlOwnerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: tmnxOamSaaCtlOwnerIndex.setStatus('current')
tmnxOamSaaCtlTestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: tmnxOamSaaCtlTestIndex.setStatus('current')
tmnxOamSaaCtlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamSaaCtlRowStatus.setStatus('current')
tmnxOamSaaCtlStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 2, 1, 4), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamSaaCtlStorageType.setStatus('current')
tmnxOamSaaCtlLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 2, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamSaaCtlLastChanged.setStatus('current')
tmnxOamSaaCtlAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 2, 1, 6), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamSaaCtlAdminStatus.setStatus('current')
tmnxOamSaaCtlDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 2, 1, 7), TItemDescription().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamSaaCtlDescr.setStatus('current')
tmnxOamSaaCtlTestMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 2, 1, 8), TmnxOamTestMode().clone('notConfigured')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamSaaCtlTestMode.setStatus('current')
tmnxOamSaaCtlRuns = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamSaaCtlRuns.setStatus('current')
tmnxOamSaaCtlFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamSaaCtlFailures.setStatus('current')
tmnxOamSaaCtlLastRunResult = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("undetermined", 0), ("success", 1), ("failed", 2), ("aborted", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamSaaCtlLastRunResult.setStatus('current')
tmnxOamSaaThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 3), )
if mibBuilder.loadTexts: tmnxOamSaaThresholdTable.setStatus('current')
tmnxOamSaaThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaTType"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaTDirection"))
if mibBuilder.loadTexts: tmnxOamSaaThresholdEntry.setStatus('current')
tmnxOamSaaTType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 3, 1, 1), TmnxOamSaaThreshold())
if mibBuilder.loadTexts: tmnxOamSaaTType.setStatus('current')
tmnxOamSaaTDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rising", 1), ("falling", 2))))
if mibBuilder.loadTexts: tmnxOamSaaTDirection.setStatus('current')
tmnxOamSaaTRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamSaaTRowStatus.setStatus('current')
tmnxOamSaaTLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 3, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamSaaTLastChanged.setStatus('current')
tmnxOamSaaTThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamSaaTThreshold.setStatus('current')
tmnxOamSaaTValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamSaaTValue.setStatus('current')
tmnxOamSaaTLastSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 3, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamSaaTLastSent.setStatus('current')
tmnxOamSaaTTestMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 3, 1, 8), TmnxOamTestMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamSaaTTestMode.setStatus('current')
tmnxOamSaaTTestRunIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 3, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamSaaTTestRunIndex.setStatus('current')
tmnxOamSaaThreshold = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 3, 0, 1)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaTThreshold"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaTValue"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaCtlTestMode"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaCtlLastRunResult"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaTTestRunIndex"))
if mibBuilder.loadTexts: tmnxOamSaaThreshold.setStatus('current')
tmnxOamLTtraceCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 18), )
if mibBuilder.loadTexts: tmnxOamLTtraceCtlTable.setStatus('current')
tmnxOamLTtraceCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 18, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamLTtraceCtlEntry.setStatus('current')
tmnxOamLTtraceCtlLdpPrefixType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 18, 1, 2), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceCtlLdpPrefixType.setStatus('current')
tmnxOamLTtraceCtlLdpPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 18, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceCtlLdpPrefix.setStatus('current')
tmnxOamLTtraceCtlLdpPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 18, 1, 4), InetAddressPrefixLength().clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceCtlLdpPrefixLen.setStatus('current')
tmnxOamLTtraceCtlMaxPath = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 18, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(128)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceCtlMaxPath.setStatus('current')
tmnxOamLTtraceMaxConRequests = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 19), Unsigned32()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceMaxConRequests.setStatus('current')
tmnxOamLTtraceResultsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 20), )
if mibBuilder.loadTexts: tmnxOamLTtraceResultsTable.setStatus('current')
tmnxOamLTtraceResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 20, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamLTtraceResultsEntry.setStatus('current')
tmnxOamLTtraceResultsDisPaths = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 20, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceResultsDisPaths.setStatus('current')
tmnxOamLTtraceResultsFailedHops = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 20, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceResultsFailedHops.setStatus('current')
tmnxOamLTtraceResultsDisState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 20, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("initial", 0), ("inProgress", 1), ("done", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceResultsDisState.setStatus('current')
tmnxOamLTtraceResultsDisStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 20, 1, 5), TmnxOamLTtraceDisStatusBits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceResultsDisStatus.setStatus('current')
tmnxOamLTtraceHopInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 21), )
if mibBuilder.loadTexts: tmnxOamLTtraceHopInfoTable.setStatus('current')
tmnxOamLTtraceHopInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 21, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceHopIndex"))
if mibBuilder.loadTexts: tmnxOamLTtraceHopInfoEntry.setStatus('current')
tmnxOamLTtraceHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 21, 1, 1), Unsigned32())
if mibBuilder.loadTexts: tmnxOamLTtraceHopIndex.setStatus('current')
tmnxOamLTtraceUpStreamHopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 21, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceUpStreamHopIndex.setStatus('current')
tmnxOamLTtraceHopAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 21, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceHopAddrType.setStatus('current')
tmnxOamLTtraceHopAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 21, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceHopAddr.setStatus('current')
tmnxOamLTtraceHopDstAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 21, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceHopDstAddrType.setStatus('current')
tmnxOamLTtraceHopDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 21, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceHopDstAddr.setStatus('current')
tmnxOamLTtraceHopEgrNhAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 21, 1, 7), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceHopEgrNhAddrType.setStatus('current')
tmnxOamLTtraceHopEgrNhAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 21, 1, 8), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceHopEgrNhAddr.setStatus('current')
tmnxOamLTtraceHopDisTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 21, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceHopDisTtl.setStatus('current')
tmnxOamLTtraceHopLastRc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 21, 1, 10), TmnxOamPingRtnCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceHopLastRc.setStatus('current')
tmnxOamLTtraceHopDiscoveryState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 21, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("inProgress", 0), ("doneOk", 1), ("doneTimeout", 2), ("doneLoopDetected", 3), ("doneExpiredTtl", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceHopDiscoveryState.setStatus('current')
tmnxOamLTtraceHopDiscoveryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 21, 1, 12), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceHopDiscoveryTime.setStatus('current')
tmnxOamLTtraceAutoConfigTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22), )
if mibBuilder.loadTexts: tmnxOamLTtraceAutoConfigTable.setStatus('current')
tmnxOamLTtraceAutoConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"))
if mibBuilder.loadTexts: tmnxOamLTtraceAutoConfigEntry.setStatus('current')
tmnxOamLTtraceAutoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoRowStatus.setStatus('current')
tmnxOamLTtraceAutoLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoLastChanged.setStatus('current')
tmnxOamLTtraceAutoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 3), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoStorageType.setStatus('current')
tmnxOamLTtraceAutoAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 4), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoAdminState.setStatus('current')
tmnxOamLTtraceAutoFcName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 5), TFCName().clone('be')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoFcName.setStatus('current')
tmnxOamLTtraceAutoProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 6), TProfile().clone('out')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoProfile.setStatus('current')
tmnxOamLTtraceAutoDiscIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 1440)).clone(60)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoDiscIntvl.setStatus('current')
tmnxOamLTtraceAutoMaxPath = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)).clone(128)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoMaxPath.setStatus('current')
tmnxOamLTtraceAutoTrMaxTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(30)).setUnits('time-to-live value').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoTrMaxTtl.setStatus('current')
tmnxOamLTtraceAutoTrTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoTrTimeOut.setStatus('current')
tmnxOamLTtraceAutoTrMaxFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setUnits('timeouts').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoTrMaxFailures.setStatus('current')
tmnxOamLTtraceAutoPolicy1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 12), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoPolicy1.setStatus('current')
tmnxOamLTtraceAutoPolicy2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 13), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoPolicy2.setStatus('current')
tmnxOamLTtraceAutoPolicy3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 14), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoPolicy3.setStatus('current')
tmnxOamLTtraceAutoPolicy4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 15), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoPolicy4.setStatus('current')
tmnxOamLTtraceAutoPolicy5 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 16), TPolicyStatementNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoPolicy5.setStatus('current')
tmnxOamLTtraceAutoProbeIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(1)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoProbeIntvl.setStatus('current')
tmnxOamLTtraceAutoPrTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)).clone(1)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoPrTimeOut.setStatus('current')
tmnxOamLTtraceAutoPrMaxFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 22, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setUnits('timeouts').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoPrMaxFailures.setStatus('current')
tmnxOamLTtraceAutoStatusTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 23), )
if mibBuilder.loadTexts: tmnxOamLTtraceAutoStatusTable.setStatus('current')
tmnxOamLTtraceAutoStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 23, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"))
if mibBuilder.loadTexts: tmnxOamLTtraceAutoStatusEntry.setStatus('current')
tmnxOamLTtraceAutoDiscoveryState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 23, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("initial", 0), ("inProgress", 1), ("done", 2), ("halt", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoDiscoveryState.setStatus('current')
tmnxOamLTtraceAutoTotalFecs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 23, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoTotalFecs.setStatus('current')
tmnxOamLTtraceAutoDisFecs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 23, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoDisFecs.setStatus('current')
tmnxOamLTtraceAutoLastDisStart = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 23, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoLastDisStart.setStatus('current')
tmnxOamLTtraceAutoLastDisEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 23, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoLastDisEnd.setStatus('current')
tmnxOamLTtraceAutoLastDisDur = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 23, 1, 6), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceAutoLastDisDur.setStatus('current')
tmnxOamLTtraceFecInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 24), )
if mibBuilder.loadTexts: tmnxOamLTtraceFecInfoTable.setStatus('current')
tmnxOamLTtraceFecInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 24, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceFecPrefixType"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceFecPrefix"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceFecPrefLen"))
if mibBuilder.loadTexts: tmnxOamLTtraceFecInfoEntry.setStatus('current')
tmnxOamLTtraceFecPrefixType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 24, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tmnxOamLTtraceFecPrefixType.setStatus('current')
tmnxOamLTtraceFecPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 24, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxOamLTtraceFecPrefix.setStatus('current')
tmnxOamLTtraceFecPrefLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 24, 1, 3), InetAddressPrefixLength())
if mibBuilder.loadTexts: tmnxOamLTtraceFecPrefLen.setStatus('current')
tmnxOamLTtraceFecDiscoveryState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 24, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("initial", 0), ("inProgress", 1), ("done", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceFecDiscoveryState.setStatus('current')
tmnxOamLTtraceFecDisStatusBits = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 24, 1, 5), TmnxOamLTtraceDisStatusBits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceFecDisStatusBits.setStatus('current')
tmnxOamLTtraceFecDisPaths = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 24, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceFecDisPaths.setStatus('current')
tmnxOamLTtraceFecFailedHops = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 24, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceFecFailedHops.setStatus('current')
tmnxOamLTtraceFecLastDisEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 24, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceFecLastDisEnd.setStatus('current')
tmnxOamLTtraceFecFailedProbes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 24, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceFecFailedProbes.setStatus('current')
tmnxOamLTtraceFecProbeState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 24, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("oK", 0), ("partiallyFailed", 1), ("failed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtraceFecProbeState.setStatus('current')
tmnxOamLTtracePathInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 25), )
if mibBuilder.loadTexts: tmnxOamLTtracePathInfoTable.setStatus('current')
tmnxOamLTtracePathInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 25, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-VRTR-MIB", "vRtrID"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceFecPrefixType"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceFecPrefix"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceFecPrefLen"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtracePathDstAddrType"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtracePathDstAddr"))
if mibBuilder.loadTexts: tmnxOamLTtracePathInfoEntry.setStatus('current')
tmnxOamLTtracePathDstAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 25, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tmnxOamLTtracePathDstAddrType.setStatus('current')
tmnxOamLTtracePathDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 25, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxOamLTtracePathDstAddr.setStatus('current')
tmnxOamLTtracePathRemAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 25, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtracePathRemAddrType.setStatus('current')
tmnxOamLTtracePathRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 25, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtracePathRemoteAddr.setStatus('current')
tmnxOamLTtracePathEgrNhAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 25, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtracePathEgrNhAddrType.setStatus('current')
tmnxOamLTtracePathEgrNhAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 25, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtracePathEgrNhAddr.setStatus('current')
tmnxOamLTtracePathDisTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 25, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtracePathDisTtl.setStatus('current')
tmnxOamLTtracePathLastDisTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 25, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtracePathLastDisTime.setStatus('current')
tmnxOamLTtracePathLastRc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 25, 1, 9), TmnxOamPingRtnCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtracePathLastRc.setStatus('current')
tmnxOamLTtracePathProbeState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 25, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("oK", 0), ("failed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtracePathProbeState.setStatus('current')
tmnxOamLTtracePathProbeTmOutCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 25, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamLTtracePathProbeTmOutCnt.setStatus('current')
tmnxOamLdpTtraceAutoDiscState = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 2, 0, 4)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoDiscoveryState"))
if mibBuilder.loadTexts: tmnxOamLdpTtraceAutoDiscState.setStatus('current')
tmnxOamLdpTtraceFecProbeState = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 2, 0, 5)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceFecProbeState"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceFecDisPaths"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceFecFailedProbes"))
if mibBuilder.loadTexts: tmnxOamLdpTtraceFecProbeState.setStatus('current')
tmnxOamLdpTtraceFecDisStatus = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 11, 2, 0, 6)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceFecDisStatusBits"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceFecDisPaths"))
if mibBuilder.loadTexts: tmnxOamLdpTtraceFecDisStatus.setStatus('current')
tmnxOamVccvTrCtlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 26), )
if mibBuilder.loadTexts: tmnxOamVccvTrCtlTable.setStatus('current')
tmnxOamVccvTrCtlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 26, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"))
if mibBuilder.loadTexts: tmnxOamVccvTrCtlEntry.setStatus('current')
tmnxOamVccvTrCtlSdpIdVcId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 26, 1, 1), SdpBindId().clone(hexValue="0000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamVccvTrCtlSdpIdVcId.setStatus('current')
tmnxOamVccvTrCtlReplyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 26, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4))).clone(namedValues=NamedValues(("ip", 2), ("controlChannel", 4))).clone('controlChannel')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxOamVccvTrCtlReplyMode.setStatus('current')
tmnxOamVccvTrNextPwSegmentTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 27), )
if mibBuilder.loadTexts: tmnxOamVccvTrNextPwSegmentTable.setStatus('current')
tmnxOamVccvTrNextPwSegmentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 27, 1), ).setIndexNames((0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlOwnerIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsTestRunIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryHopIndex"), (0, "ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryProbeIndex"))
if mibBuilder.loadTexts: tmnxOamVccvTrNextPwSegmentEntry.setStatus('current')
tmnxOamVccvTrNextPwID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 27, 1, 1), TmnxVcIdOrNone()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVccvTrNextPwID.setStatus('current')
tmnxOamVccvTrNextPwType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 27, 1, 2), SdpBindVcType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVccvTrNextPwType.setStatus('current')
tmnxOamVccvTrNextSenderAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 27, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVccvTrNextSenderAddrType.setStatus('current')
tmnxOamVccvTrNextSenderAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 27, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVccvTrNextSenderAddr.setStatus('current')
tmnxOamVccvTrNextRemoteAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 27, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVccvTrNextRemoteAddrType.setStatus('current')
tmnxOamVccvTrNextRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 11, 2, 27, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxOamVccvTrNextRemoteAddr.setStatus('current')
tmnxOamPingCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 1))
tmnxOamPingGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2))
tmnxOamTrCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 1))
tmnxOamTrGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 2))
tmnxOamSaaCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 3, 1))
tmnxOamSaaGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 3, 2))
tmnxOamPing7450V4v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 1, 4)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingGeneralV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamCpePingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvPingGroup"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamIcmpPingGroup"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingNotificationV4v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamPing7450V4v0Compliance = tmnxOamPing7450V4v0Compliance.setStatus('obsolete')
tmnxOamPing7750V4v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 1, 5)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingGeneralV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnPingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamCpePingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAtmPingR2r1Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvPingGroup"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamIcmpPingGroup"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingNotificationV4v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamPing7750V4v0Compliance = tmnxOamPing7750V4v0Compliance.setStatus('obsolete')
tmnxOamPing7450V5v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 1, 6)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingGeneralV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamCpePingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvPingV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamIcmpPingGroup"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAncpTestV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingNotificationV5v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamPing7450V5v0Compliance = tmnxOamPing7450V5v0Compliance.setStatus('obsolete')
tmnxOamPing7750V5v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 1, 7)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingGeneralV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnPingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamCpePingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAtmPingR2r1Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvPingV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamIcmpPingGroup"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAncpTestV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingNotificationV5v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamPing7750V5v0Compliance = tmnxOamPing7750V5v0Compliance.setStatus('obsolete')
tmnxOamPing7450V6v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 1, 8)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingGeneralV6v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingV6v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamCpePingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvPingV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamIcmpPingGroup"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAncpTestV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingNotificationV5v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamPing7450V6v0Compliance = tmnxOamPing7450V6v0Compliance.setStatus('current')
tmnxOamPing7750V6v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 1, 9)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingGeneralV6v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnPingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingV6v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamCpePingV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAtmPingR2r1Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvPingV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamIcmpPingGroup"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAncpTestV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingNotificationV5v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamPing7750V6v0Compliance = tmnxOamPing7750V6v0Compliance.setStatus('current')
tmnxOamTr7450V4v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 1, 3)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrGeneralV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrV3v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrNotificationV4v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamTr7450V4v0Compliance = tmnxOamTr7450V4v0Compliance.setStatus('obsolete')
tmnxOamTr7750V4v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 1, 4)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrGeneralV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrV3v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrNotificationV4v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamTr7750V4v0Compliance = tmnxOamTr7750V4v0Compliance.setStatus('obsolete')
tmnxOamTr7450V5v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 1, 5)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrGeneralV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrV3v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrNotificationV5v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamTr7450V5v0Compliance = tmnxOamTr7450V5v0Compliance.setStatus('obsolete')
tmnxOamTr7750V5v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 1, 6)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrGeneralV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrV3v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrNotificationV5v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamTr7750V5v0Compliance = tmnxOamTr7750V5v0Compliance.setStatus('obsolete')
tmnxOamTr7450V6v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 1, 7)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrGeneralV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrV3v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvTrV6v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrNotificationV5v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamTr7450V6v0Compliance = tmnxOamTr7450V6v0Compliance.setStatus('current')
tmnxOamTr77x0V6v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 1, 8)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrGeneralV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrV3v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrV5v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrV6v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrV4v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvTrV6v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrNotificationV5v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamTr77x0V6v0Compliance = tmnxOamTr77x0V6v0Compliance.setStatus('current')
tmnxOamSaaV3v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 3, 1, 1)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaGeneralV3v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaThresholdV3v0Group"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaNotificationV3v0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamSaaV3v0Compliance = tmnxOamSaaV3v0Compliance.setStatus('current')
tmnxOamMacPingL2MapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 3)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingL2MapRouterID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingL2MapLabel"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingL2MapProtocol"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingL2MapVCType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingL2MapVCID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingL2MapDirection"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamMacPingL2MapGroup = tmnxOamMacPingL2MapGroup.setStatus('current')
tmnxOamAtmPingR2r1Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 8)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAtmPingCtlPortId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAtmPingCtlVpi"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAtmPingCtlVci"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAtmPingCtlLpbkLocation"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAtmPingCtlSegment"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamAtmPingR2r1Group = tmnxOamAtmPingR2r1Group.setStatus('current')
tmnxOamMacPingV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 14)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingCtlTargetMacAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingCtlSourceMacAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingCtlSendControl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingCtlReplyControl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingCtlTtl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingCtlRegister"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingCtlFlood"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingCtlForce"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingCtlAge"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingCtlSapPortId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingCtlSapEncapValue"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingCtlFibEntryName"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingHistoryResponse"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingHistoryOneWayTime"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingHistoryStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingHistoryTime"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingHistoryReturnCode"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingHistoryAddressType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingHistorySapId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingHistorySdpId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingHistoryAdminStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingHistoryOperStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingHistoryResponsePlane"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingHistorySize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingHistoryInOneWayTime"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingHistorySrcAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingHistorySrcAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamMacPingV4v0Group = tmnxOamMacPingV4v0Group.setStatus('current')
tmnxOamVccvPingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 15)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvPingCtlSdpIdVcId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvPingCtlReplyMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamVccvPingGroup = tmnxOamVccvPingGroup.setStatus('obsolete')
tmnxOamPingGeneralV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 16)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingMaxConcurrentTests"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlRowStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlStorageType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlDescr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestMode"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlAdminStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOrigSdpId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlRespSdpId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlFcName"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlProfile"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlMtuStartSize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlMtuEndSize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlMtuStepSize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlServiceId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlLocalSdp"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlRemoteSdp"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlSize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTimeOut"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlProbeCount"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlInterval"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlMaxRows"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTrapGeneration"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTrapProbeFailureFilter"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTrapTestFailureFilter"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlSAA"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlRuns"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlFailures"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlLastRunResult"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlLastChanged"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlVRtrID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTgtAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTgtAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlSrcAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlSrcAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlDnsName"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsOperStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMinRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMaxRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsAverageRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsRttSumOfSquares"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMtuResponseSize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsSvcPing"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsProbeResponses"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsSentProbes"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsLastGoodProbe"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsLastRespHeader"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMinTt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMaxTt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsAverageTt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsTtSumOfSquares"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMinInTt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMaxInTt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsAverageInTt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsInTtSumOfSqrs"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsOutJitter"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsInJitter"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsRtJitter"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsProbeTimeouts"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsProbeFailures"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryResponse"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryOneWayTime"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistorySize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryTime"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryReturnCode"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistAddressType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryVersion"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistSapId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryCpeMacAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryRespSvcId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistorySequence"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryIfIndex"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryDataLen"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryRespPlane"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryReqHdr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryRespHdr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryDnsAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryDnsAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistorySrcAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistorySrcAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryInOneWayTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamPingGeneralV4v0Group = tmnxOamPingGeneralV4v0Group.setStatus('obsolete')
tmnxOamLspPingV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 17)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlVRtrID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlLspName"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlReturnLsp"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlTtl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlPathName"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlLdpPrefixType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlLdpPrefix"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlLdpPrefixLen"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamLspPingV4v0Group = tmnxOamLspPingV4v0Group.setStatus('obsolete')
tmnxOamVprnPingV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 19)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnPingCtlReplyControl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnPingCtlTtl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnPingCtlSrcAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnPingCtlSrcAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamVprnPingV4v0Group = tmnxOamVprnPingV4v0Group.setStatus('current')
tmnxOamMfibPingV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 20)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingCtlReplyControl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingCtlTtl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingCtlSrcAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingCtlSrcAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingCtlDestAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingCtlDestAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryRespSvcId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamMfibPingV4v0Group = tmnxOamMfibPingV4v0Group.setStatus('obsolete')
tmnxOamCpePingV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 21)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamCpePingCtlSendControl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamCpePingCtlReplyControl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamCpePingCtlTtl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamCpePingCtlSrceMacAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamCpePingCtlSrcAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamCpePingCtlSrcAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryCpeMacAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamCpePingV4v0Group = tmnxOamCpePingV4v0Group.setStatus('current')
tmnxOamMRInfoV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 22)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoRespCapabilities"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoRespMinorVersion"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoRespMajorVersion"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoRespNumInterfaces"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoRespIfMetric"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoRespIfThreshold"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoRespIfFlags"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoRespIfNbrCount"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoRespIfAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoRespIfAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoRespIfNbrAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoRespIfNbrAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamMRInfoV4v0Group = tmnxOamMRInfoV4v0Group.setStatus('current')
tmnxOamIcmpPingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 23)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamIcmpPingCtlRapid"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamIcmpPingCtlTtl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamIcmpPingCtlDSField"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamIcmpPingCtlPattern"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamIcmpPingCtlNhAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamIcmpPingCtlNhAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamIcmpPingCtlEgrIfIndex"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamIcmpPingCtlBypassRouting"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamIcmpPingCtlDoNotFragment"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamIcmpPingGroup = tmnxOamIcmpPingGroup.setStatus('current')
tmnxOamPingObsoleteV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 24)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTargetIpAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistorySrcIpAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacPingHistorySrcIpAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlLdpIpPrefix"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlLdpIpPrefixLen"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnPingCtlSourceIpAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingCtlSourceIpAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingCtlDestIpAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamCpePingCtlSourceIpAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoRespIfAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMRInfoRespIfNbrAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamPingObsoleteV4v0Group = tmnxOamPingObsoleteV4v0Group.setStatus('current')
tmnxOamPingNotificationV4v0Group = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 25)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingProbeFailedV2"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingTestFailedV2"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingTestCompletedV2"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamPingNotificationV4v0Group = tmnxOamPingNotificationV4v0Group.setStatus('obsolete')
tmnxOamPingNotificationObsoleteV4v0Group = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 26)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingProbeFailed"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingTestFailed"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingTestCompleted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamPingNotificationObsoleteV4v0Group = tmnxOamPingNotificationObsoleteV4v0Group.setStatus('current')
tmnxOamLspPingV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 27)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlVRtrID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlLspName"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlReturnLsp"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlTtl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlPathName"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlLdpPrefixType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlLdpPrefix"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlLdpPrefixLen"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlPathDestType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlPathDest"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlNhIntfName"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlNhAddressType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspPingCtlNhAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamLspPingV5v0Group = tmnxOamLspPingV5v0Group.setStatus('current')
tmnxOamVccvPingV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 28)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvPingCtlSdpIdVcId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvPingCtlReplyMode"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvPingCtlPwId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvPingCtlTtl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamVccvPingV5v0Group = tmnxOamVccvPingV5v0Group.setStatus('current')
tmnxOamAncpTestV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 29)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAncpTestTarget"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAncpTestTargetId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAncpTestcount"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAncpTestTimeout"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAncpHistoryAncpString"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAncpHistoryAccNodeResult"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAncpHistoryAccNodeCode"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamAncpHistoryAccNodeRspStr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvPingCtlTtl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamAncpTestV5v0Group = tmnxOamAncpTestV5v0Group.setStatus('current')
tmnxOamPingNotificationV5v0Group = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 30)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingProbeFailedV2"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingTestFailedV2"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingTestCompletedV2"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxAncpLoopbackTestCompleted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamPingNotificationV5v0Group = tmnxOamPingNotificationV5v0Group.setStatus('current')
tmnxOamMfibPingV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 31)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingCtlReplyControl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingCtlTtl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingCtlSrcAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingCtlSrcAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingCtlDestAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingCtlDestAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryRespSvcId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMfibPingCtlDestMacAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamMfibPingV6v0Group = tmnxOamMfibPingV6v0Group.setStatus('current')
tmnxOamPingGeneralV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 1, 2, 32)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingMaxConcurrentTests"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlRowStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlStorageType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlDescr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTestMode"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlAdminStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlOrigSdpId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlRespSdpId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlFcName"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlProfile"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlMtuStartSize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlMtuEndSize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlMtuStepSize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlServiceId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlLocalSdp"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlRemoteSdp"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlSize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTimeOut"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlProbeCount"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlInterval"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlMaxRows"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTrapGeneration"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTrapProbeFailureFilter"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTrapTestFailureFilter"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlSAA"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlRuns"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlFailures"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlLastRunResult"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlLastChanged"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlVRtrID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTgtAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlTgtAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlSrcAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlSrcAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlDnsName"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsOperStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMinRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMaxRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsAverageRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsRttSumOfSquares"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMtuResponseSize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsSvcPing"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsProbeResponses"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsSentProbes"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsLastGoodProbe"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsLastRespHeader"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMinTt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMaxTt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsAverageTt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsTtSumOfSquares"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMinInTt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsMaxInTt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsAverageInTt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsInTtSumOfSqrs"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsOutJitter"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsInJitter"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsRtJitter"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsProbeTimeouts"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingResultsProbeFailures"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryResponse"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryOneWayTime"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistorySize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryTime"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryReturnCode"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistAddressType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryVersion"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistSapId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryCpeMacAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryRespSvcId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistorySequence"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryIfIndex"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryDataLen"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryRespPlane"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryReqHdr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryRespHdr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryDnsAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryDnsAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistorySrcAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistorySrcAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingHistoryInOneWayTime"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamPingCtlDNSRecord"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamPingGeneralV6v0Group = tmnxOamPingGeneralV6v0Group.setStatus('current')
tmnxOamMacTrV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 2, 10)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrCtlTargetMacAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrCtlSourceMacAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrCtlSendControl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrCtlReplyControl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrL2MapRouterID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrL2MapLabel"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrL2MapProtocol"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrL2MapVCType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrL2MapVCID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrL2MapDirection"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrL2MapSdpId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMacTrL2MapSapName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamMacTrV3v0Group = tmnxOamMacTrV3v0Group.setStatus('current')
tmnxOamTrObsoleteV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 2, 11)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsTestAttempts"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsTestSuccesses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamTrObsoleteV3v0Group = tmnxOamTrObsoleteV3v0Group.setStatus('current')
tmnxOamTrGeneralV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 2, 12)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrMaxConcurrentRequests"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlRowStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlStorageType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlDescr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestMode"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlAdminStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlFcName"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlProfile"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlServiceId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlDataSize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTimeOut"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlProbesPerHop"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlMaxTtl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlInitialTtl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlDSField"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlMaxFailures"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlInterval"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlMaxRows"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTrapGeneration"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlCreateHopsEntries"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlSAA"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlRuns"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlFailures"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlLastRunResult"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlLastChanged"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlVRtrID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTgtAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTgtAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlSrcAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlSrcAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlWaitMilliSec"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsOperStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsCurHopCount"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsCurProbeCount"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsLastGoodPath"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsTgtAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsTgtAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryResponse"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryOneWayTime"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryLastRC"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryTime"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryResponsePlane"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryAddressType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistorySapId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryVersion"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryRouterID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryIfIndex"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryDataLen"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistorySize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryInOneWayTime"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamTrGeneralV4v0Group = tmnxOamTrGeneralV4v0Group.setStatus('obsolete')
tmnxOamTrHopsV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 2, 13)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsMinRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsMaxRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsAverageRtt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsRttSumOfSquares"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsMinTt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsMaxTt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsAverageTt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsTtSumOfSquares"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsSentProbes"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsProbeResponses"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsLastGoodProbe"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsMinInTt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsMaxInTt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsAverageInTt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsInTtSumOfSqrs"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsOutJitter"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsInJitter"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsRtJitter"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsProbeTimeouts"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsProbeFailures"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsTgtAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsTgtAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamTrHopsV4v0Group = tmnxOamTrHopsV4v0Group.setStatus('current')
tmnxOamLspTrV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 2, 14)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlVRtrID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlLspName"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlPathName"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlLdpPrefixType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlLdpPrefix"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlLdpPrefixLen"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrMapAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrMapDSIPv4Addr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrMapDSIfAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrMapMTU"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrMapDSIndex"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrDSLabelLabel"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrDSLabelProtocol"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamLspTrV4v0Group = tmnxOamLspTrV4v0Group.setStatus('obsolete')
tmnxOamVprnTrV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 2, 15)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrCtlReplyControl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrCtlSrcAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrCtlSrcAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapRouterID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapRteVprnLabel"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapRteMetrics"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapRteLastUp"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapRteOwner"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapRtePref"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapRteDist"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapNumNextHops"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapNumRteTargets"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapDestAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapDestAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapDestMaskLen"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrNextHopRtrID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrNextHopType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrNextHopTunnelID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrNextHopTunnelType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrNextHopIfIndex"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrRouteTarget"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamVprnTrV4v0Group = tmnxOamVprnTrV4v0Group.setStatus('obsolete')
tmnxOamMcastTrV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 2, 16)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrCtlVRtrID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrCtlHops"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrQueryId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrCtlSrcAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrCtlSrcAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrCtlDestAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrCtlDestAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrCtlRespAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrCtlRespAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrCtlGrpAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrCtlGrpAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespQueryArrivalTime"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespInPktCount"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespOutPktCount"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespSGPktCount"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespRtgProtocol"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespFwdTtl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespMBZBit"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespSrcBit"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespSrcMask"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespFwdCode"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespInIfAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespInIfAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespOutIfAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespOutIfAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespPhRtrAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespPhRtrAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamMcastTrV4v0Group = tmnxOamMcastTrV4v0Group.setStatus('current')
tmnxOamTrObsoleteV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 2, 17)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTargetIpAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsIpTgtAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryIpAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrHopsIpTgtAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlLdpIpPrefix"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlLdpIpPrefixLen"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrCtlSourceIpAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapRteDestAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapRteDestMask"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrCtlSrcIpAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrCtlDestIpAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrCtlRespIpAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrCtlGrpIpAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespPrevHopRtrAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespInIfAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamMcastTrRespOutIfAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamTrObsoleteV4v0Group = tmnxOamTrObsoleteV4v0Group.setStatus('current')
tmnxOamTrNotificationV4v0Group = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 2, 18)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrPathChange"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrTestFailed"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrTestCompleted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamTrNotificationV4v0Group = tmnxOamTrNotificationV4v0Group.setStatus('obsolete')
tmnxOamLspTrV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 2, 19)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlVRtrID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlLspName"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlPathName"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlLdpPrefixType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlLdpPrefix"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlLdpPrefixLen"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlPathDestType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlPathDest"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlNhIntfName"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlNhAddressType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrCtlNhAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrMapAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrMapDSIPv4Addr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrMapDSIfAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrMapMTU"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrDSLabelLabel"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrDSLabelProtocol"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamLspTrV5v0Group = tmnxOamLspTrV5v0Group.setStatus('current')
tmnxOamTrObsoleteV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 2, 20)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLspTrMapDSIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamTrObsoleteV5v0Group = tmnxOamTrObsoleteV5v0Group.setStatus('current')
tmnxOamTrGeneralV5v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 2, 21)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrMaxConcurrentRequests"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlRowStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlStorageType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlDescr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTestMode"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlAdminStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlFcName"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlProfile"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlServiceId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlDataSize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTimeOut"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlProbesPerHop"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlMaxTtl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlInitialTtl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlDSField"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlMaxFailures"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlInterval"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlMaxRows"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTrapGeneration"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlCreateHopsEntries"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlSAA"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlRuns"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlFailures"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlLastRunResult"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlLastChanged"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlVRtrID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTgtAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlTgtAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlSrcAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlSrcAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrCtlWaitMilliSec"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsOperStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsCurHopCount"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsCurProbeCount"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsLastGoodPath"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsTgtAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrResultsTgtAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryResponse"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryOneWayTime"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryLastRC"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryTime"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryResponsePlane"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryAddressType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistorySapId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryVersion"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryRouterID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryIfIndex"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryDataLen"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistorySize"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryInOneWayTime"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrProbeHistoryAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceFecDiscoveryState"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceFecDisStatusBits"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceFecDisPaths"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceFecFailedHops"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceFecLastDisEnd"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceFecFailedProbes"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceFecProbeState"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtracePathRemAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtracePathRemoteAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtracePathEgrNhAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtracePathEgrNhAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtracePathDisTtl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtracePathLastDisTime"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtracePathLastRc"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceCtlLdpPrefixType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceCtlLdpPrefix"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceCtlLdpPrefixLen"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceCtlMaxPath"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceResultsDisPaths"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceResultsFailedHops"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceResultsDisState"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceResultsDisStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceUpStreamHopIndex"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceHopAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceHopAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceHopDstAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceHopDstAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceHopEgrNhAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceHopEgrNhAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceHopDisTtl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceHopLastRc"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceHopDiscoveryState"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceHopDiscoveryTime"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoRowStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoLastChanged"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoStorageType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoAdminState"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoFcName"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoProfile"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoDiscIntvl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoMaxPath"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoTrMaxTtl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoTrTimeOut"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoTrMaxFailures"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoPolicy1"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoPolicy2"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoPolicy3"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoPolicy4"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoPolicy5"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoProbeIntvl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoPrTimeOut"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoPrMaxFailures"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoDiscoveryState"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoTotalFecs"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoDisFecs"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoLastDisStart"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoLastDisEnd"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceAutoLastDisDur"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtracePathProbeState"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtracePathProbeTmOutCnt"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLTtraceMaxConRequests"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamTrGeneralV5v0Group = tmnxOamTrGeneralV5v0Group.setStatus('current')
tmnxOamTrNotificationV5v0Group = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 2, 22)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrPathChange"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrTestFailed"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamTrTestCompleted"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLdpTtraceAutoDiscState"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLdpTtraceFecProbeState"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamLdpTtraceFecDisStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamTrNotificationV5v0Group = tmnxOamTrNotificationV5v0Group.setStatus('current')
tmnxOamVccvTrV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 2, 23)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvTrCtlSdpIdVcId"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvTrCtlReplyMode"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvTrNextPwID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvTrNextPwType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvTrNextSenderAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvTrNextSenderAddr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvTrNextRemoteAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVccvTrNextRemoteAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamVccvTrV6v0Group = tmnxOamVccvTrV6v0Group.setStatus('current')
tmnxOamVprnTrObsoleteV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 2, 24)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrNextHopRtrID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamVprnTrObsoleteV6v0Group = tmnxOamVprnTrObsoleteV6v0Group.setStatus('current')
tmnxOamVprnTrV6v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 2, 2, 25)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrCtlReplyControl"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrCtlSrcAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrCtlSrcAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapRouterID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapRteVprnLabel"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapRteMetrics"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapRteLastUp"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapRteOwner"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapRtePref"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapRteDist"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapNumNextHops"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapNumRteTargets"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapDestAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapDestAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrL3MapDestMaskLen"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrNextHopType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrNextHopTunnelID"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrNextHopTunnelType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrNextHopIfIndex"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrNextHopAddrType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrNextHopAddress"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamVprnTrRouteTarget"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamVprnTrV6v0Group = tmnxOamVprnTrV6v0Group.setStatus('current')
tmnxOamSaaGeneralV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 3, 2, 1)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaCtlRowStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaCtlStorageType"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaCtlLastChanged"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaCtlAdminStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaCtlTestMode"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaCtlDescr"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaCtlRuns"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaCtlFailures"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaCtlLastRunResult"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamSaaGeneralV3v0Group = tmnxOamSaaGeneralV3v0Group.setStatus('current')
tmnxOamSaaThresholdV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 3, 2, 2)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaTRowStatus"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaTLastChanged"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaTThreshold"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaTValue"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaTLastSent"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaTTestMode"), ("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaTTestRunIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamSaaThresholdV3v0Group = tmnxOamSaaThresholdV3v0Group.setStatus('current')
tmnxOamSaaNotificationV3v0Group = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 11, 3, 2, 3)).setObjects(("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", "tmnxOamSaaThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxOamSaaNotificationV3v0Group = tmnxOamSaaNotificationV3v0Group.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", tmnxOamTrTestCompleted=tmnxOamTrTestCompleted, tmnxOamPingCtlTrapProbeFailureFilter=tmnxOamPingCtlTrapProbeFailureFilter, tmnxOamMRInfoV4v0Group=tmnxOamMRInfoV4v0Group, tmnxOamVccvTrCtlEntry=tmnxOamVccvTrCtlEntry, tmnxOamLspPingCtlLspName=tmnxOamLspPingCtlLspName, tmnxOamSaaObjs=tmnxOamSaaObjs, tmnxOamMfibPingV6v0Group=tmnxOamMfibPingV6v0Group, tmnxOamMacPingReplyIndex=tmnxOamMacPingReplyIndex, tmnxOamPingCtlTimeOut=tmnxOamPingCtlTimeOut, tmnxOamTrCtlDataSize=tmnxOamTrCtlDataSize, tmnxOamTrProbeHistoryRouterID=tmnxOamTrProbeHistoryRouterID, tmnxOamPingCtlTestMode=tmnxOamPingCtlTestMode, tmnxOamPingCompliances=tmnxOamPingCompliances, tmnxOamPingHistoryReqHdr=tmnxOamPingHistoryReqHdr, tmnxOamVprnTrNextHopAddress=tmnxOamVprnTrNextHopAddress, tmnxOamMRInfoRespEntry=tmnxOamMRInfoRespEntry, tmnxOamAtmPingCtlVpi=tmnxOamAtmPingCtlVpi, tmnxOamPingCtlDNSRecord=tmnxOamPingCtlDNSRecord, tmnxOamVccvPingCtlSdpIdVcId=tmnxOamVccvPingCtlSdpIdVcId, tmnxOamLspPingV4v0Group=tmnxOamLspPingV4v0Group, tmnxOamPingHistoryOneWayTime=tmnxOamPingHistoryOneWayTime, tmnxOamPingNotifications=tmnxOamPingNotifications, tmnxOamPingResultsTable=tmnxOamPingResultsTable, tmnxOamCpePingCtlSrcAddress=tmnxOamCpePingCtlSrcAddress, tmnxOamMacPingHistoryOperStatus=tmnxOamMacPingHistoryOperStatus, tmnxOamMcastTrRespPhRtrAddrType=tmnxOamMcastTrRespPhRtrAddrType, tmnxOamVprnTrL3MapDestMaskLen=tmnxOamVprnTrL3MapDestMaskLen, tmnxOamTraceRouteObjs=tmnxOamTraceRouteObjs, tmnxOamPingCtlTgtAddress=tmnxOamPingCtlTgtAddress, tmnxOamMacPingCtlReplyControl=tmnxOamMacPingCtlReplyControl, tmnxOamLspTrDSLabelIndex=tmnxOamLspTrDSLabelIndex, tmnxOamVccvTrCtlTable=tmnxOamVccvTrCtlTable, tmnxOamMacPingCtlFibEntryName=tmnxOamMacPingCtlFibEntryName, tmnxOamPingCtlTestIndex=tmnxOamPingCtlTestIndex, tmnxOamTrCtlTable=tmnxOamTrCtlTable, tmnxOamLspPingCtlNhAddress=tmnxOamLspPingCtlNhAddress, tmnxOamPingCtlSize=tmnxOamPingCtlSize, tmnxOamTrCtlProfile=tmnxOamTrCtlProfile, tmnxOamLTtraceAutoStatusTable=tmnxOamLTtraceAutoStatusTable, tmnxOamPingResultsOperStatus=tmnxOamPingResultsOperStatus, tmnxOamMcastTrCtlDestIpAddr=tmnxOamMcastTrCtlDestIpAddr, tmnxOamTrHopsMaxRtt=tmnxOamTrHopsMaxRtt, tmnxOamTrCtlSrcAddress=tmnxOamTrCtlSrcAddress, tmnxOamMacPingCtlAge=tmnxOamMacPingCtlAge, tmnxOamVccvTrNextRemoteAddrType=tmnxOamVccvTrNextRemoteAddrType, tmnxOamTrResultsTgtAddrType=tmnxOamTrResultsTgtAddrType, tmnxOamTrProbeHistoryProbeIndex=tmnxOamTrProbeHistoryProbeIndex, tmnxOamTrProbeHistorySize=tmnxOamTrProbeHistorySize, tmnxOamVccvPingCtlTable=tmnxOamVccvPingCtlTable, tmnxOamMcastTrRespSrcMask=tmnxOamMcastTrRespSrcMask, tmnxOamPingResultsSentProbes=tmnxOamPingResultsSentProbes, tmnxOamMRInfoRespIfNbrTable=tmnxOamMRInfoRespIfNbrTable, tmnxOamPingResultsProbeTimeouts=tmnxOamPingResultsProbeTimeouts, tmnxOamTrPathChange=tmnxOamTrPathChange, tmnxOamTrResultsEntry=tmnxOamTrResultsEntry, tmnxOamMacPingL2MapTable=tmnxOamMacPingL2MapTable, tmnxOamMacPingL2MapRouterID=tmnxOamMacPingL2MapRouterID, tmnxOamLspTrMapDSIndex=tmnxOamLspTrMapDSIndex, tmnxOamTrHopsTgtAddress=tmnxOamTrHopsTgtAddress, tmnxOamPingCtlOwnerIndex=tmnxOamPingCtlOwnerIndex, tmnxOamTrHopsLastGoodProbe=tmnxOamTrHopsLastGoodProbe, tmnxOamTrHopsTgtAddrType=tmnxOamTrHopsTgtAddrType, tmnxOamMacTrL2MapDirection=tmnxOamMacTrL2MapDirection, tmnxOamTrProbeHistoryAddressType=tmnxOamTrProbeHistoryAddressType, tmnxOamSaaTDirection=tmnxOamSaaTDirection, tmnxOamLTtraceFecPrefixType=tmnxOamLTtraceFecPrefixType, tmnxOamSaaGroups=tmnxOamSaaGroups, tmnxOamAtmPingCtlTable=tmnxOamAtmPingCtlTable, tmnxOamVprnTrNextHopRtrID=tmnxOamVprnTrNextHopRtrID, tmnxOamPingResultsAverageRtt=tmnxOamPingResultsAverageRtt, tmnxOamMRInfoRespIfThreshold=tmnxOamMRInfoRespIfThreshold, tmnxOamMcastTrRespOutPktCount=tmnxOamMcastTrRespOutPktCount, tmnxOamLspTrV4v0Group=tmnxOamLspTrV4v0Group, tmnxOamTrHopsMinInTt=tmnxOamTrHopsMinInTt, tmnxOamTrCtlTgtAddrType=tmnxOamTrCtlTgtAddrType, tmnxOamPingCtlProbeCount=tmnxOamPingCtlProbeCount, tmnxOamVprnPingCtlTtl=tmnxOamVprnPingCtlTtl, tmnxOamPingHistorySrcIpAddress=tmnxOamPingHistorySrcIpAddress, tmnxOamTrCtlInterval=tmnxOamTrCtlInterval, tmnxOamTrProbeHistoryVersion=tmnxOamTrProbeHistoryVersion, tmnxOamCpePingV4v0Group=tmnxOamCpePingV4v0Group, tmnxOamTrHopsAverageRtt=tmnxOamTrHopsAverageRtt, tmnxOamSaaCtlTestIndex=tmnxOamSaaCtlTestIndex, tmnxOamMfibPingV4v0Group=tmnxOamMfibPingV4v0Group, tmnxOamTrCtlDSField=tmnxOamTrCtlDSField, tmnxOamLTtraceAutoRowStatus=tmnxOamLTtraceAutoRowStatus, tmnxOamPingHistorySize=tmnxOamPingHistorySize, tmnxOamTrCtlRuns=tmnxOamTrCtlRuns, tmnxOamVprnTrCtlEntry=tmnxOamVprnTrCtlEntry, tmnxOamVprnTrCtlReplyControl=tmnxOamVprnTrCtlReplyControl, tmnxOamLTtraceResultsEntry=tmnxOamLTtraceResultsEntry, tmnxOamVccvTrNextPwID=tmnxOamVccvTrNextPwID, tmnxOamLspPingCtlNhAddressType=tmnxOamLspPingCtlNhAddressType, tmnxOamSaaNotifications=tmnxOamSaaNotifications, tmnxAncpLoopbackTestCompleted=tmnxAncpLoopbackTestCompleted, tmnxOamMfibPingCtlEntry=tmnxOamMfibPingCtlEntry, tmnxOamPingResultsSvcPing=tmnxOamPingResultsSvcPing, tmnxOamPingResultsRtJitter=tmnxOamPingResultsRtJitter, tmnxOamTrHopsAverageInTt=tmnxOamTrHopsAverageInTt, tmnxOamTr7750V4v0Compliance=tmnxOamTr7750V4v0Compliance, tmnxOamLTtraceResultsTable=tmnxOamLTtraceResultsTable, tmnxOamMcastTrCtlSrcIpAddr=tmnxOamMcastTrCtlSrcIpAddr, tmnxOamVprnTrL3MapEntry=tmnxOamVprnTrL3MapEntry, tmnxOamPingCtlFcName=tmnxOamPingCtlFcName, tmnxOamSaaThreshold=tmnxOamSaaThreshold, tmnxOamLspPingCtlTtl=tmnxOamLspPingCtlTtl, tmnxOamVprnTrL3MapRouterID=tmnxOamVprnTrL3MapRouterID, tmnxOamTrHopsProbeTimeouts=tmnxOamTrHopsProbeTimeouts, tmnxOamLTtraceHopDstAddr=tmnxOamLTtraceHopDstAddr, tmnxOamLTtraceAutoPrMaxFailures=tmnxOamLTtraceAutoPrMaxFailures, PYSNMP_MODULE_ID=timetraOamTestMIBModule, tmnxOamMacPingHistorySrcIpAddress=tmnxOamMacPingHistorySrcIpAddress, tmnxOamPingCtlSrcAddrType=tmnxOamPingCtlSrcAddrType, tmnxOamAncpHistoryAncpString=tmnxOamAncpHistoryAncpString, tmnxOamTrCtlCreateHopsEntries=tmnxOamTrCtlCreateHopsEntries, tmnxOamMacTrL2MapIndex=tmnxOamMacTrL2MapIndex, tmnxOamLTtraceFecFailedHops=tmnxOamLTtraceFecFailedHops, tmnxOamIcmpPingGroup=tmnxOamIcmpPingGroup, tmnxOamIcmpPingCtlPattern=tmnxOamIcmpPingCtlPattern, tmnxOamPingHistoryStatus=tmnxOamPingHistoryStatus, tmnxOamLTtraceMaxConRequests=tmnxOamLTtraceMaxConRequests, tmnxOamVccvTrNextPwType=tmnxOamVccvTrNextPwType, tmnxOamAtmPingCtlVci=tmnxOamAtmPingCtlVci, tmnxOamLTtracePathInfoTable=tmnxOamLTtracePathInfoTable, tmnxOamTrProbeHistoryEntry=tmnxOamTrProbeHistoryEntry, tmnxOamCpePingCtlReplyControl=tmnxOamCpePingCtlReplyControl, tmnxOamMacTrL2MapSdpId=tmnxOamMacTrL2MapSdpId, tmnxOamVccvTrV6v0Group=tmnxOamVccvTrV6v0Group, timetraOamTestMIBModule=timetraOamTestMIBModule, tmnxOamMcastTrCtlRespAddress=tmnxOamMcastTrCtlRespAddress, tmnxOamLTtraceAutoTrMaxFailures=tmnxOamLTtraceAutoTrMaxFailures, tmnxOamMacTrCtlSourceMacAddr=tmnxOamMacTrCtlSourceMacAddr, tmnxOamTrResultsTgtAddress=tmnxOamTrResultsTgtAddress, tmnxOamLspPingCtlPathDest=tmnxOamLspPingCtlPathDest, tmnxOamMacPingHistorySrcAddrType=tmnxOamMacPingHistorySrcAddrType, tmnxOamPingResultsOutJitter=tmnxOamPingResultsOutJitter, tmnxOamPingHistorySrcAddress=tmnxOamPingHistorySrcAddress, tmnxOamSaaConformance=tmnxOamSaaConformance, tmnxOamMRInfoRespIfNbrAddress=tmnxOamMRInfoRespIfNbrAddress, tmnxOamMacTrCtlTable=tmnxOamMacTrCtlTable, tmnxOamPingHistoryDataLen=tmnxOamPingHistoryDataLen, tmnxOamTrHopsAverageTt=tmnxOamTrHopsAverageTt, tmnxOamVprnTrObsoleteV6v0Group=tmnxOamVprnTrObsoleteV6v0Group, tmnxOamSaaThresholdEntry=tmnxOamSaaThresholdEntry, tmnxOamTrCtlTgtAddress=tmnxOamTrCtlTgtAddress, tmnxOamAtmPingCtlLpbkLocation=tmnxOamAtmPingCtlLpbkLocation, tmnxOamPingResultsMaxRtt=tmnxOamPingResultsMaxRtt, tmnxOamVccvPingCtlEntry=tmnxOamVccvPingCtlEntry, tmnxOamTrHopsV4v0Group=tmnxOamTrHopsV4v0Group, tmnxOamLspTrCtlPathDestType=tmnxOamLspTrCtlPathDestType, tmnxOamLTtraceFecPrefLen=tmnxOamLTtraceFecPrefLen, tmnxOamPingNotificationObsoleteV4v0Group=tmnxOamPingNotificationObsoleteV4v0Group, tmnxOamPingHistoryResponse=tmnxOamPingHistoryResponse, tmnxOamMfibPingCtlTable=tmnxOamMfibPingCtlTable, tmnxOamLTtraceAutoAdminState=tmnxOamLTtraceAutoAdminState, tmnxOamTrProbeHistoryOneWayTime=tmnxOamTrProbeHistoryOneWayTime, tmnxOamVprnTrRTEntry=tmnxOamVprnTrRTEntry, tmnxOamMcastTrV4v0Group=tmnxOamMcastTrV4v0Group, tmnxOamVprnTrL3MapReporter=tmnxOamVprnTrL3MapReporter, tmnxOamLTtraceResultsDisPaths=tmnxOamLTtraceResultsDisPaths, tmnxOamLspTrCtlLdpPrefixType=tmnxOamLspTrCtlLdpPrefixType, tmnxOamTrProbeHistoryInOneWayTime=tmnxOamTrProbeHistoryInOneWayTime, tmnxOamPingResultsMinInTt=tmnxOamPingResultsMinInTt, tmnxOamMcastTrCtlGrpAddrType=tmnxOamMcastTrCtlGrpAddrType, tmnxOamTr7750V5v0Compliance=tmnxOamTr7750V5v0Compliance, tmnxOamTrHopsInJitter=tmnxOamTrHopsInJitter, tmnxOamTrGroups=tmnxOamTrGroups, tmnxOamVprnPingCtlEntry=tmnxOamVprnPingCtlEntry, tmnxOamLTtraceCtlTable=tmnxOamLTtraceCtlTable, tmnxOamMacPingHistorySdpId=tmnxOamMacPingHistorySdpId, tmnxOamPingCtlLastChanged=tmnxOamPingCtlLastChanged, tmnxOamLTtraceHopAddr=tmnxOamLTtraceHopAddr, tmnxOamAtmPingCtlEntry=tmnxOamAtmPingCtlEntry, tmnxOamLspPingCtlEntry=tmnxOamLspPingCtlEntry, tmnxOamTrCtlLastChanged=tmnxOamTrCtlLastChanged, tmnxOamMfibPingCtlSourceIpAddr=tmnxOamMfibPingCtlSourceIpAddr, tmnxOamPingCtlSrcAddress=tmnxOamPingCtlSrcAddress, tmnxOamSaaTTestMode=tmnxOamSaaTTestMode, tmnxOamTrCtlVRtrID=tmnxOamTrCtlVRtrID, tmnxOamPingNotificationV4v0Group=tmnxOamPingNotificationV4v0Group, tmnxOamLTtraceAutoConfigTable=tmnxOamLTtraceAutoConfigTable, tmnxOamAncpTestV5v0Group=tmnxOamAncpTestV5v0Group, tmnxOamPingTestFailedV2=tmnxOamPingTestFailedV2, tmnxOamPingResultsRttSumOfSquares=tmnxOamPingResultsRttSumOfSquares, tmnxOamVprnTrL3MapRteDestAddr=tmnxOamVprnTrL3MapRteDestAddr, tmnxOamMRInfoRespIfTable=tmnxOamMRInfoRespIfTable, tmnxOamLspTrDSLabelLabel=tmnxOamLspTrDSLabelLabel, tmnxOamMacPingL2MapVCID=tmnxOamMacPingL2MapVCID, tmnxOamLTtraceAutoConfigEntry=tmnxOamLTtraceAutoConfigEntry, tmnxOamVprnTrCtlTable=tmnxOamVprnTrCtlTable, tmnxOamTraceRouteNotifyObjects=tmnxOamTraceRouteNotifyObjects, tmnxOamMcastTrRespQueryArrivalTime=tmnxOamMcastTrRespQueryArrivalTime, tmnxOamSaaCtlRowStatus=tmnxOamSaaCtlRowStatus, tmnxOamLTtraceAutoDisFecs=tmnxOamLTtraceAutoDisFecs, tmnxOamLdpTtraceFecDisStatus=tmnxOamLdpTtraceFecDisStatus, tmnxOamVccvTrNextRemoteAddr=tmnxOamVccvTrNextRemoteAddr, tmnxOamTr7450V6v0Compliance=tmnxOamTr7450V6v0Compliance, tmnxOamTrHopsInTtSumOfSqrs=tmnxOamTrHopsInTtSumOfSqrs, tmnxOamTrHopsOutJitter=tmnxOamTrHopsOutJitter, tmnxOamTrCtlFailures=tmnxOamTrCtlFailures, tmnxOamPingProbeFailed=tmnxOamPingProbeFailed, tmnxOamPingCtlMaxRows=tmnxOamPingCtlMaxRows, tmnxOamMfibPingCtlDestAddrType=tmnxOamMfibPingCtlDestAddrType, TmnxOamSaaThreshold=TmnxOamSaaThreshold, tmnxOamTraceRouteConformance=tmnxOamTraceRouteConformance, tmnxOamLTtraceHopEgrNhAddrType=tmnxOamLTtraceHopEgrNhAddrType, tmnxOamLTtraceAutoDiscIntvl=tmnxOamLTtraceAutoDiscIntvl, tmnxOamVprnTrRTIndex=tmnxOamVprnTrRTIndex, tmnxOamVprnTrL3MapNumRteTargets=tmnxOamVprnTrL3MapNumRteTargets, tmnxOamPingHistAddressType=tmnxOamPingHistAddressType, tmnxOamMfibPingCtlTtl=tmnxOamMfibPingCtlTtl, tmnxOamLdpTtraceFecProbeState=tmnxOamLdpTtraceFecProbeState, tmnxOamMcastTrCtlVRtrID=tmnxOamMcastTrCtlVRtrID, tmnxOamLspTrMapAddrType=tmnxOamLspTrMapAddrType, tmnxOamPingTestCompletedV2=tmnxOamPingTestCompletedV2, tmnxOamPingCtlTrapGeneration=tmnxOamPingCtlTrapGeneration, tmnxOamLspTrCtlPathName=tmnxOamLspTrCtlPathName, tmnxOamLTtracePathDstAddrType=tmnxOamLTtracePathDstAddrType, tmnxOamTrCtlProbesPerHop=tmnxOamTrCtlProbesPerHop, tmnxOamPingObjs=tmnxOamPingObjs, tmnxOamLspTrCtlEntry=tmnxOamLspTrCtlEntry, tmnxOamSaaTRowStatus=tmnxOamSaaTRowStatus, tmnxOamTrProbeHistoryResponse=tmnxOamTrProbeHistoryResponse, tmnxOamCpePingCtlSrcAddrType=tmnxOamCpePingCtlSrcAddrType, tmnxOamPing7450V6v0Compliance=tmnxOamPing7450V6v0Compliance, tmnxOamVccvPingCtlReplyMode=tmnxOamVccvPingCtlReplyMode, tmnxOamPingHistoryReturnCode=tmnxOamPingHistoryReturnCode, tmnxOamMRInfoRespIfNbrAddrType=tmnxOamMRInfoRespIfNbrAddrType, tmnxOamPingResultsTtSumOfSquares=tmnxOamPingResultsTtSumOfSquares, tmnxOamMRInfoRespIfAddress=tmnxOamMRInfoRespIfAddress, tmnxOamMacPingL2MapIndex=tmnxOamMacPingL2MapIndex, tmnxOamLspTrMapIndex=tmnxOamLspTrMapIndex, tmnxOamAncpHistoryAccNodeCode=tmnxOamAncpHistoryAccNodeCode, tmnxOamTrProbeHistoryTime=tmnxOamTrProbeHistoryTime, tmnxOamMRInfoRespIfMetric=tmnxOamMRInfoRespIfMetric, tmnxOamLspTrCtlNhAddressType=tmnxOamLspTrCtlNhAddressType, tmnxOamTrGeneralV4v0Group=tmnxOamTrGeneralV4v0Group, tmnxOamMcastTrCtlSrcAddrType=tmnxOamMcastTrCtlSrcAddrType, tmnxOamLspTrCtlLdpIpPrefixLen=tmnxOamLspTrCtlLdpIpPrefixLen, tmnxOamMacPingCtlTargetMacAddr=tmnxOamMacPingCtlTargetMacAddr, tmnxOamVprnTrNextHopTunnelType=tmnxOamVprnTrNextHopTunnelType, tmnxOamVprnPingV4v0Group=tmnxOamVprnPingV4v0Group, tmnxOamVprnTrCtlSrcAddress=tmnxOamVprnTrCtlSrcAddress, tmnxOamTrProbeHistoryAddrType=tmnxOamTrProbeHistoryAddrType, tmnxOamLTtraceAutoPolicy3=tmnxOamLTtraceAutoPolicy3, tmnxOamVprnPingCtlTable=tmnxOamVprnPingCtlTable, tmnxOamLspTrCtlLspName=tmnxOamLspTrCtlLspName, tmnxOamLTtraceAutoLastDisStart=tmnxOamLTtraceAutoLastDisStart, tmnxOamVprnTrL3MapRteOwner=tmnxOamVprnTrL3MapRteOwner, tmnxOamPingResultsLastGoodProbe=tmnxOamPingResultsLastGoodProbe, tmnxOamMacPingHistoryOneWayTime=tmnxOamMacPingHistoryOneWayTime, tmnxOamMfibPingCtlReplyControl=tmnxOamMfibPingCtlReplyControl, tmnxOamMcastTrCtlEntry=tmnxOamMcastTrCtlEntry, tmnxOamSaaCtlOwnerIndex=tmnxOamSaaCtlOwnerIndex)
mibBuilder.exportSymbols("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", tmnxOamTrCtlMaxTtl=tmnxOamTrCtlMaxTtl, tmnxOamLTtraceFecDisPaths=tmnxOamLTtraceFecDisPaths, tmnxOamPing7450V5v0Compliance=tmnxOamPing7450V5v0Compliance, tmnxOamSaaNotifyPrefix=tmnxOamSaaNotifyPrefix, tmnxOamMRInfoRespIfNbrIndex=tmnxOamMRInfoRespIfNbrIndex, tmnxOamTrHopsRttSumOfSquares=tmnxOamTrHopsRttSumOfSquares, tmnxOamSaaCtlTable=tmnxOamSaaCtlTable, tmnxOamLspPingCtlLdpPrefix=tmnxOamLspPingCtlLdpPrefix, tmnxOamAtmPingCtlPortId=tmnxOamAtmPingCtlPortId, tmnxOamTrNotificationV5v0Group=tmnxOamTrNotificationV5v0Group, tmnxOamTrHopsEntry=tmnxOamTrHopsEntry, tmnxOamTrHopsProbeFailures=tmnxOamTrHopsProbeFailures, tmnxOamLTtraceFecInfoTable=tmnxOamLTtraceFecInfoTable, tmnxOamIcmpPingCtlDSField=tmnxOamIcmpPingCtlDSField, tmnxOamMRInfoRespIfAddr=tmnxOamMRInfoRespIfAddr, tmnxOamLspTrCtlNhAddress=tmnxOamLspTrCtlNhAddress, tmnxOamLspPingCtlPathName=tmnxOamLspPingCtlPathName, tmnxOamTrCtlTestMode=tmnxOamTrCtlTestMode, tmnxOamLTtraceAutoPolicy5=tmnxOamLTtraceAutoPolicy5, tmnxOamLTtraceUpStreamHopIndex=tmnxOamLTtraceUpStreamHopIndex, tmnxOamLTtracePathLastDisTime=tmnxOamLTtracePathLastDisTime, tmnxOamLspTrCtlLdpIpPrefix=tmnxOamLspTrCtlLdpIpPrefix, TmnxOamTestMode=TmnxOamTestMode, tmnxOamMRInfoRespIfNbrEntry=tmnxOamMRInfoRespIfNbrEntry, tmnxOamTestObjs=tmnxOamTestObjs, tmnxOamSaaTLastSent=tmnxOamSaaTLastSent, tmnxOamPingResultsEntry=tmnxOamPingResultsEntry, tmnxOamVprnTrL3MapTable=tmnxOamVprnTrL3MapTable, tmnxOamMacPingHistorySize=tmnxOamMacPingHistorySize, tmnxOamTrProbeHistoryLastRC=tmnxOamTrProbeHistoryLastRC, tmnxOamLTtraceFecDisStatusBits=tmnxOamLTtraceFecDisStatusBits, tmnxOamTrCtlSAA=tmnxOamTrCtlSAA, tmnxOamVprnTrNextHopIndex=tmnxOamVprnTrNextHopIndex, tmnxOamPingCtlSAA=tmnxOamPingCtlSAA, tmnxOamPingConformance=tmnxOamPingConformance, tmnxOamPingResultsMaxTt=tmnxOamPingResultsMaxTt, tmnxOamPingCtlServiceId=tmnxOamPingCtlServiceId, tmnxOamMcastTrCtlRespIpAddr=tmnxOamMcastTrCtlRespIpAddr, tmnxOamMcastTrRespInPktCount=tmnxOamMcastTrRespInPktCount, tmnxOamPingCtlTrapTestFailureFilter=tmnxOamPingCtlTrapTestFailureFilter, tmnxOamTrCtlRowStatus=tmnxOamTrCtlRowStatus, tmnxOamCpePingCtlEntry=tmnxOamCpePingCtlEntry, tmnxOamPingHistoryTable=tmnxOamPingHistoryTable, tmnxOamMfibPingCtlSrcAddress=tmnxOamMfibPingCtlSrcAddress, tmnxOamMacPingCtlSapPortId=tmnxOamMacPingCtlSapPortId, tmnxOamTrHopsHopIndex=tmnxOamTrHopsHopIndex, tmnxOamSaaTValue=tmnxOamSaaTValue, tmnxOamLspTrDSLabelEntry=tmnxOamLspTrDSLabelEntry, tmnxOamPingHistoryEntry=tmnxOamPingHistoryEntry, tmnxOamTrCtlMaxRows=tmnxOamTrCtlMaxRows, tmnxOamTrCtlMaxFailures=tmnxOamTrCtlMaxFailures, tmnxOamMcastTrRespInIfAddr=tmnxOamMcastTrRespInIfAddr, tmnxOamMacPingL2MapDirection=tmnxOamMacPingL2MapDirection, tmnxOamLTtracePathEgrNhAddr=tmnxOamLTtracePathEgrNhAddr, tmnxOamTrCtlLastRunResult=tmnxOamTrCtlLastRunResult, tmnxOamLspTrMapDSIPv4Addr=tmnxOamLspTrMapDSIPv4Addr, tmnxOamSaaCtlAdminStatus=tmnxOamSaaCtlAdminStatus, tmnxOamLTtraceAutoPolicy1=tmnxOamLTtraceAutoPolicy1, tmnxOamPingCtlMtuStartSize=tmnxOamPingCtlMtuStartSize, tmnxOamPingCtlTargetIpAddress=tmnxOamPingCtlTargetIpAddress, tmnxOamLspTrMapMTU=tmnxOamLspTrMapMTU, tmnxOamTrCtlWaitMilliSec=tmnxOamTrCtlWaitMilliSec, tmnxOamMacPingCtlSendControl=tmnxOamMacPingCtlSendControl, tmnxOamMacTrL2MapTable=tmnxOamMacTrL2MapTable, tmnxOamLTtraceAutoLastDisDur=tmnxOamLTtraceAutoLastDisDur, tmnxOamPingHistoryRespHdr=tmnxOamPingHistoryRespHdr, tmnxOamTestConformance=tmnxOamTestConformance, tmnxOamTrCtlInitialTtl=tmnxOamTrCtlInitialTtl, tmnxOamAtmPingCtlSegment=tmnxOamAtmPingCtlSegment, tmnxOamLTtracePathInfoEntry=tmnxOamLTtracePathInfoEntry, tmnxOamMcastTrRespSrcBit=tmnxOamMcastTrRespSrcBit, tmnxOamTrCtlServiceId=tmnxOamTrCtlServiceId, tmnxOamLTtraceHopAddrType=tmnxOamLTtraceHopAddrType, tmnxOamPingTestFailed=tmnxOamPingTestFailed, tmnxOamTrProbeHistoryIpAddr=tmnxOamTrProbeHistoryIpAddr, tmnxOamPingCtlMtuStepSize=tmnxOamPingCtlMtuStepSize, tmnxOamTrResultsTestAttempts=tmnxOamTrResultsTestAttempts, tmnxOamVccvPingV5v0Group=tmnxOamVccvPingV5v0Group, tmnxOamMacPingHistoryTable=tmnxOamMacPingHistoryTable, tmnxOamMacTrL2MapVCID=tmnxOamMacTrL2MapVCID, tmnxOamMcastTrRespFwdCode=tmnxOamMcastTrRespFwdCode, tmnxOamTrResultsTestRunIndex=tmnxOamTrResultsTestRunIndex, tmnxOamPingCtlEntry=tmnxOamPingCtlEntry, tmnxOamPingHistoryInOneWayTime=tmnxOamPingHistoryInOneWayTime, tmnxOamMRInfoRespIfFlags=tmnxOamMRInfoRespIfFlags, tmnxOamPingProbeFailedV2=tmnxOamPingProbeFailedV2, tmnxOamAncpTestTargetId=tmnxOamAncpTestTargetId, tmnxOamMacTrCtlEntry=tmnxOamMacTrCtlEntry, tmnxOamTrObsoleteV4v0Group=tmnxOamTrObsoleteV4v0Group, tmnxOamMacPingCtlSapEncapValue=tmnxOamMacPingCtlSapEncapValue, tmnxOamVprnPingCtlSourceIpAddr=tmnxOamVprnPingCtlSourceIpAddr, tmnxOamSaaCtlEntry=tmnxOamSaaCtlEntry, tmnxOamMacPingHistoryInOneWayTime=tmnxOamMacPingHistoryInOneWayTime, tmnxOamPingResultsMinRtt=tmnxOamPingResultsMinRtt, tmnxOamLspPingCtlVRtrID=tmnxOamLspPingCtlVRtrID, tmnxOamVprnTrL3MapDestAddress=tmnxOamVprnTrL3MapDestAddress, tmnxOamLTtracePathProbeState=tmnxOamLTtracePathProbeState, tmnxOamLspTrCtlLdpPrefix=tmnxOamLspTrCtlLdpPrefix, tmnxOamPingHistoryTime=tmnxOamPingHistoryTime, tmnxOamTrCtlOwnerIndex=tmnxOamTrCtlOwnerIndex, tmnxOamPingResultsAverageInTt=tmnxOamPingResultsAverageInTt, tmnxOamIcmpPingCtlEntry=tmnxOamIcmpPingCtlEntry, tmnxOamSaaCtlStorageType=tmnxOamSaaCtlStorageType, tmnxOamMacPingHistoryTime=tmnxOamMacPingHistoryTime, tmnxOamLTtracePathRemAddrType=tmnxOamLTtracePathRemAddrType, tmnxOamLspPingCtlNhIntfName=tmnxOamLspPingCtlNhIntfName, tmnxOamMcastTrRespSGPktCount=tmnxOamMcastTrRespSGPktCount, tmnxOamMfibPingCtlDestIpAddr=tmnxOamMfibPingCtlDestIpAddr, tmnxOamTrProbeHistoryAddress=tmnxOamTrProbeHistoryAddress, tmnxOamVccvTrCtlSdpIdVcId=tmnxOamVccvTrCtlSdpIdVcId, tmnxOamCpePingCtlSourceIpAddr=tmnxOamCpePingCtlSourceIpAddr, tmnxOamMcastTrRespOutIfAddrType=tmnxOamMcastTrRespOutIfAddrType, tmnxOamLspTrDSLabelProtocol=tmnxOamLspTrDSLabelProtocol, tmnxOamSaaThresholdV3v0Group=tmnxOamSaaThresholdV3v0Group, tmnxOamMacTrL2MapEntry=tmnxOamMacTrL2MapEntry, tmnxOamLTtraceResultsDisState=tmnxOamLTtraceResultsDisState, tmnxOamAncpTestHistoryEntry=tmnxOamAncpTestHistoryEntry, tmnxOamMacPingHistoryReturnCode=tmnxOamMacPingHistoryReturnCode, tmnxOamLTtraceAutoTrTimeOut=tmnxOamLTtraceAutoTrTimeOut, tmnxOamTrCompliances=tmnxOamTrCompliances, tmnxOamTr7450V5v0Compliance=tmnxOamTr7450V5v0Compliance, tmnxOamTrResultsLastGoodPath=tmnxOamTrResultsLastGoodPath, tmnxOamMRInfoRespIfNbrCount=tmnxOamMRInfoRespIfNbrCount, tmnxOamLTtraceAutoStorageType=tmnxOamLTtraceAutoStorageType, tmnxOamPingHistoryIfIndex=tmnxOamPingHistoryIfIndex, tmnxOamPingHistoryRespSvcId=tmnxOamPingHistoryRespSvcId, tmnxOamVprnTrNextHopTable=tmnxOamVprnTrNextHopTable, tmnxOamMacPingCtlForce=tmnxOamMacPingCtlForce, tmnxOamPingResultsAverageTt=tmnxOamPingResultsAverageTt, tmnxOamTrCtlFcName=tmnxOamTrCtlFcName, tmnxOamTrHopsIpTgtAddress=tmnxOamTrHopsIpTgtAddress, tmnxOamMcastTrCtlHops=tmnxOamMcastTrCtlHops, tmnxOamLTtraceHopEgrNhAddr=tmnxOamLTtraceHopEgrNhAddr, tmnxOamLTtracePathDisTtl=tmnxOamLTtracePathDisTtl, tmnxOamSaaTLastChanged=tmnxOamSaaTLastChanged, tmnxOamMacPingL2MapEntry=tmnxOamMacPingL2MapEntry, tmnxOamPingCtlFailures=tmnxOamPingCtlFailures, tmnxOamMacPingHistorySrcAddress=tmnxOamMacPingHistorySrcAddress, tmnxOamPing7750V6v0Compliance=tmnxOamPing7750V6v0Compliance, tmnxOamPingResultsTestRunIndex=tmnxOamPingResultsTestRunIndex, tmnxOamPingCtlVRtrID=tmnxOamPingCtlVRtrID, tmnxOamSaaGeneralV3v0Group=tmnxOamSaaGeneralV3v0Group, tmnxOamSaaCtlRuns=tmnxOamSaaCtlRuns, tmnxOamPingCtlDnsName=tmnxOamPingCtlDnsName, tmnxOamIcmpPingCtlNhAddress=tmnxOamIcmpPingCtlNhAddress, tmnxOamSaaCompliances=tmnxOamSaaCompliances, tmnxOamPingHistorySequence=tmnxOamPingHistorySequence, tmnxOamMacPingL2MapVCType=tmnxOamMacPingL2MapVCType, tmnxOamMacPingCtlRegister=tmnxOamMacPingCtlRegister, tmnxOamLTtraceHopDisTtl=tmnxOamLTtraceHopDisTtl, tmnxOamPingResultsInTtSumOfSqrs=tmnxOamPingResultsInTtSumOfSqrs, tmnxOamMacPingHistoryAddressType=tmnxOamMacPingHistoryAddressType, tmnxOamTrProbeHistoryIfIndex=tmnxOamTrProbeHistoryIfIndex, tmnxOamLTtraceAutoProbeIntvl=tmnxOamLTtraceAutoProbeIntvl, tmnxOamTrResultsTable=tmnxOamTrResultsTable, tmnxOamVprnTrCtlSrcAddrType=tmnxOamVprnTrCtlSrcAddrType, tmnxOamTrResultsCurProbeCount=tmnxOamTrResultsCurProbeCount, tmnxOamTrResultsCurHopCount=tmnxOamTrResultsCurHopCount, tmnxOamLTtraceAutoLastDisEnd=tmnxOamLTtraceAutoLastDisEnd, tmnxOamMacPingHistoryIndex=tmnxOamMacPingHistoryIndex, tmnxOamLTtraceCtlLdpPrefixType=tmnxOamLTtraceCtlLdpPrefixType, tmnxOamLTtraceAutoMaxPath=tmnxOamLTtraceAutoMaxPath, tmnxOamVprnTrNextHopAddrType=tmnxOamVprnTrNextHopAddrType, tmnxOamLspTrCtlNhIntfName=tmnxOamLspTrCtlNhIntfName, tmnxOamLTtraceHopDiscoveryTime=tmnxOamLTtraceHopDiscoveryTime, tmnxOamTrCtlTrapGeneration=tmnxOamTrCtlTrapGeneration, tmnxOamMcastTrRespMBZBit=tmnxOamMcastTrRespMBZBit, tmnxOamCpePingCtlTable=tmnxOamCpePingCtlTable, tmnxOamIcmpPingCtlRapid=tmnxOamIcmpPingCtlRapid, tmnxOamLTtraceHopInfoTable=tmnxOamLTtraceHopInfoTable, tmnxOamPingHistoryCpeMacAddr=tmnxOamPingHistoryCpeMacAddr, tmnxOamPingCtlTgtAddrType=tmnxOamPingCtlTgtAddrType, tmnxOamTrTestFailed=tmnxOamTrTestFailed, tmnxOamPingHistoryVersion=tmnxOamPingHistoryVersion, tmnxOamTrProbeHistorySapId=tmnxOamTrProbeHistorySapId, tmnxOamMcastTrCtlSrcAddress=tmnxOamMcastTrCtlSrcAddress, tmnxOamSaaCtlDescr=tmnxOamSaaCtlDescr, tmnxOamSaaTThreshold=tmnxOamSaaTThreshold, tmnxOamMcastTrCtlRespAddrType=tmnxOamMcastTrCtlRespAddrType, tmnxOamPingCtlRowStatus=tmnxOamPingCtlRowStatus, TmnxOamVcType=TmnxOamVcType, tmnxOamVprnTrL3MapDestAddrType=tmnxOamVprnTrL3MapDestAddrType, tmnxOamTraceRouteNotifyPrefix=tmnxOamTraceRouteNotifyPrefix, tmnxOamMRInfoRespMajorVersion=tmnxOamMRInfoRespMajorVersion, tmnxOamMacPingHistoryEntry=tmnxOamMacPingHistoryEntry, tmnxOamLTtraceCtlLdpPrefix=tmnxOamLTtraceCtlLdpPrefix, tmnxOamLspPingCtlLdpIpPrefixLen=tmnxOamLspPingCtlLdpIpPrefixLen, tmnxOamIcmpPingCtlBypassRouting=tmnxOamIcmpPingCtlBypassRouting, tmnxOamTrHopsTtSumOfSquares=tmnxOamTrHopsTtSumOfSquares, tmnxOamLspPingCtlReturnLsp=tmnxOamLspPingCtlReturnLsp, tmnxOamPingCtlDescr=tmnxOamPingCtlDescr, tmnxOamMacTrL2MapLabel=tmnxOamMacTrL2MapLabel, tmnxOamMacPingHistoryAdminStatus=tmnxOamMacPingHistoryAdminStatus, tmnxOamVprnPingCtlSrcAddrType=tmnxOamVprnPingCtlSrcAddrType, tmnxOamVprnTrL3MapRteMetrics=tmnxOamVprnTrL3MapRteMetrics, TmnxOamAddressType=TmnxOamAddressType, tmnxOamTestNotifications=tmnxOamTestNotifications, tmnxOamVprnTrRTTable=tmnxOamVprnTrRTTable, tmnxOamTrCtlTargetIpAddress=tmnxOamTrCtlTargetIpAddress, tmnxOamAncpTestTimeout=tmnxOamAncpTestTimeout, tmnxOamAncpHistoryAccNodeRspStr=tmnxOamAncpHistoryAccNodeRspStr, tmnxOamLTtraceFecInfoEntry=tmnxOamLTtraceFecInfoEntry, tmnxOamIcmpPingCtlDoNotFragment=tmnxOamIcmpPingCtlDoNotFragment, tmnxOamTrCtlTimeOut=tmnxOamTrCtlTimeOut, tmnxOamPing7750V4v0Compliance=tmnxOamPing7750V4v0Compliance, tmnxOamPingResultsMinTt=tmnxOamPingResultsMinTt, tmnxOamTr7450V4v0Compliance=tmnxOamTr7450V4v0Compliance, tmnxOamTrResultsTestSuccesses=tmnxOamTrResultsTestSuccesses, tmnxOamVccvTrNextSenderAddr=tmnxOamVccvTrNextSenderAddr, tmnxOamLTtracePathLastRc=tmnxOamLTtracePathLastRc, tmnxOamLspPingV5v0Group=tmnxOamLspPingV5v0Group, tmnxOamPingCtlAdminStatus=tmnxOamPingCtlAdminStatus, tmnxOamPingCtlRuns=tmnxOamPingCtlRuns, tmnxOamLspTrMapDSIfAddr=tmnxOamLspTrMapDSIfAddr, tmnxOamLTtraceHopDiscoveryState=tmnxOamLTtraceHopDiscoveryState, tmnxOamLspTrCtlPathDest=tmnxOamLspTrCtlPathDest, tmnxOamMacPingHistoryStatus=tmnxOamMacPingHistoryStatus, tmnxOamLTtraceAutoProfile=tmnxOamLTtraceAutoProfile, TmnxOamSignalProtocol=TmnxOamSignalProtocol, tmnxOamPingHistorySrcAddrType=tmnxOamPingHistorySrcAddrType, tmnxOamMcastTrCtlTable=tmnxOamMcastTrCtlTable, tmnxOamLTtraceAutoPolicy4=tmnxOamLTtraceAutoPolicy4, tmnxOamAncpTestCtlEntry=tmnxOamAncpTestCtlEntry, tmnxOamVprnTrL3MapRteDestMask=tmnxOamVprnTrL3MapRteDestMask, tmnxOamVccvPingCtlTtl=tmnxOamVccvPingCtlTtl, tmnxOamMacPingCtlTable=tmnxOamMacPingCtlTable, tmnxOamVprnTrNextHopTunnelID=tmnxOamVprnTrNextHopTunnelID, tmnxOamPingNotificationObjects=tmnxOamPingNotificationObjects, tmnxOamMacPingV4v0Group=tmnxOamMacPingV4v0Group, tmnxOamTrHopsMaxInTt=tmnxOamTrHopsMaxInTt, tmnxOamIcmpPingCtlNhAddrType=tmnxOamIcmpPingCtlNhAddrType, tmnxOamMacPingHistoryResponsePlane=tmnxOamMacPingHistoryResponsePlane, tmnxOamMcastTrCtlGrpIpAddr=tmnxOamMcastTrCtlGrpIpAddr, tmnxOamMcastTrRespOutIfAddr=tmnxOamMcastTrRespOutIfAddr, tmnxOamMacPingCtlTtl=tmnxOamMacPingCtlTtl, tmnxOamLTtraceFecFailedProbes=tmnxOamLTtraceFecFailedProbes, tmnxOamVprnTrL3MapNumNextHops=tmnxOamVprnTrL3MapNumNextHops, tmnxOamMacTrL2MapSapName=tmnxOamMacTrL2MapSapName, tmnxOamPingResultsMtuResponseSize=tmnxOamPingResultsMtuResponseSize, tmnxOamTrProbeHistoryIndex=tmnxOamTrProbeHistoryIndex, tmnxOamPingCtlLocalSdp=tmnxOamPingCtlLocalSdp, tmnxOamMacPingCtlSourceMacAddr=tmnxOamMacPingCtlSourceMacAddr, tmnxOamTrMaxConcurrentRequests=tmnxOamTrMaxConcurrentRequests, tmnxOamVprnTrV6v0Group=tmnxOamVprnTrV6v0Group, tmnxOamIcmpPingCtlTtl=tmnxOamIcmpPingCtlTtl, tmnxOamIcmpPingCtlEgrIfIndex=tmnxOamIcmpPingCtlEgrIfIndex, tmnxOamMRInfoRespIfIndex=tmnxOamMRInfoRespIfIndex, tmnxOamLTtracePathRemoteAddr=tmnxOamLTtracePathRemoteAddr, tmnxOamVccvTrNextSenderAddrType=tmnxOamVccvTrNextSenderAddrType, tmnxOamPingResultsMaxInTt=tmnxOamPingResultsMaxInTt, tmnxOamLspTrDSLabelTable=tmnxOamLspTrDSLabelTable, tmnxOamPingResultsProbeFailures=tmnxOamPingResultsProbeFailures, tmnxOamLspTrCtlVRtrID=tmnxOamLspTrCtlVRtrID, tmnxOamPingCtlRespSdpId=tmnxOamPingCtlRespSdpId)
mibBuilder.exportSymbols("ALCATEL-IND1-TIMETRA-OAM-TEST-MIB", tmnxOamTrProbeHistoryDataLen=tmnxOamTrProbeHistoryDataLen, tmnxOamLTtraceFecPrefix=tmnxOamLTtraceFecPrefix, tmnxOamSaaV3v0Compliance=tmnxOamSaaV3v0Compliance, tmnxOamLspTrV5v0Group=tmnxOamLspTrV5v0Group, tmnxOamMacTrCtlTargetMacAddr=tmnxOamMacTrCtlTargetMacAddr, tmnxOamPingTestCompleted=tmnxOamPingTestCompleted, tmnxOamTrCtlStorageType=tmnxOamTrCtlStorageType, tmnxOamVccvTrNextPwSegmentEntry=tmnxOamVccvTrNextPwSegmentEntry, tmnxOamSaaCtlLastRunResult=tmnxOamSaaCtlLastRunResult, tmnxOamPingCtlRemoteSdp=tmnxOamPingCtlRemoteSdp, tmnxOamLTtraceHopInfoEntry=tmnxOamLTtraceHopInfoEntry, tmnxOamMacPingCtlFlood=tmnxOamMacPingCtlFlood, tmnxOamTrHopsTable=tmnxOamTrHopsTable, tmnxOamMfibPingCtlDestMacAddr=tmnxOamMfibPingCtlDestMacAddr, tmnxOamMcastTrRespEntry=tmnxOamMcastTrRespEntry, tmnxOamMacPingL2MapLabel=tmnxOamMacPingL2MapLabel, tmnxOamTrCtlAdminStatus=tmnxOamTrCtlAdminStatus, tmnxOamPingHistoryDnsAddress=tmnxOamPingHistoryDnsAddress, tmnxOamVprnTrL3MapRteLastUp=tmnxOamVprnTrL3MapRteLastUp, tmnxOamMcastTrRespPhRtrAddress=tmnxOamMcastTrRespPhRtrAddress, tmnxOamLTtraceCtlEntry=tmnxOamLTtraceCtlEntry, tmnxOamLspPingCtlLdpPrefixLen=tmnxOamLspPingCtlLdpPrefixLen, tmnxOamPingHistoryRespPlane=tmnxOamPingHistoryRespPlane, tmnxOamMacTrCtlSendControl=tmnxOamMacTrCtlSendControl, tmnxOamPingGroups=tmnxOamPingGroups, tmnxOamLTtraceHopLastRc=tmnxOamLTtraceHopLastRc, tmnxOamMcastTrQueryId=tmnxOamMcastTrQueryId, tmnxOamPingHistSapId=tmnxOamPingHistSapId, tmnxOamPingResultsProbeResponses=tmnxOamPingResultsProbeResponses, tmnxOamPing7750V5v0Compliance=tmnxOamPing7750V5v0Compliance, tmnxOamMacPingL2MapGroup=tmnxOamMacPingL2MapGroup, tmnxOamAncpTestHistoryTable=tmnxOamAncpTestHistoryTable, tmnxOamLTtraceAutoStatusEntry=tmnxOamLTtraceAutoStatusEntry, tmnxOamTrProbeHistoryResponsePlane=tmnxOamTrProbeHistoryResponsePlane, tmnxOamTrProbeHistoryHopIndex=tmnxOamTrProbeHistoryHopIndex, tmnxOamMcastTrCtlDestAddrType=tmnxOamMcastTrCtlDestAddrType, tmnxOamPingResultsLastRespHeader=tmnxOamPingResultsLastRespHeader, tmnxOamTrNotificationV4v0Group=tmnxOamTrNotificationV4v0Group, tmnxOamIcmpPingCtlTable=tmnxOamIcmpPingCtlTable, tmnxOamLTtraceAutoPolicy2=tmnxOamLTtraceAutoPolicy2, tmnxOamLTtracePathEgrNhAddrType=tmnxOamLTtracePathEgrNhAddrType, tmnxOamCpePingCtlSendControl=tmnxOamCpePingCtlSendControl, tmnxOamTrCtlSrcAddrType=tmnxOamTrCtlSrcAddrType, tmnxOamPingMaxConcurrentTests=tmnxOamPingMaxConcurrentTests, tmnxOamTrProbeHistoryTable=tmnxOamTrProbeHistoryTable, tmnxOamSaaTType=tmnxOamSaaTType, tmnxOamMacTrL2MapRouterID=tmnxOamMacTrL2MapRouterID, tmnxOamLTtraceAutoFcName=tmnxOamLTtraceAutoFcName, tmnxOamVccvPingCtlPwId=tmnxOamVccvPingCtlPwId, tmnxOamTrHopsRtJitter=tmnxOamTrHopsRtJitter, tmnxOamVprnTrRouteTarget=tmnxOamVprnTrRouteTarget, tmnxOamLTtracePathDstAddr=tmnxOamLTtracePathDstAddr, tmnxOamPing7450V4v0Compliance=tmnxOamPing7450V4v0Compliance, tmnxOamPingCtlLastRunResult=tmnxOamPingCtlLastRunResult, tmnxOamPingHistoryDnsAddrType=tmnxOamPingHistoryDnsAddrType, tmnxOamVccvTrCtlReplyMode=tmnxOamVccvTrCtlReplyMode, tmnxOamLTtraceAutoLastChanged=tmnxOamLTtraceAutoLastChanged, tmnxOamMcastTrCtlDestAddress=tmnxOamMcastTrCtlDestAddress, tmnxOamLspPingCtlTable=tmnxOamLspPingCtlTable, tmnxOamMRInfoRespMinorVersion=tmnxOamMRInfoRespMinorVersion, tmnxOamMcastTrRespTable=tmnxOamMcastTrRespTable, tmnxOamVprnTrL3MapRtePref=tmnxOamVprnTrL3MapRtePref, tmnxOamVprnTrCtlSourceIpAddr=tmnxOamVprnTrCtlSourceIpAddr, tmnxOamCpePingCtlTtl=tmnxOamCpePingCtlTtl, tmnxOamTrCtlEntry=tmnxOamTrCtlEntry, tmnxOamMacTrL2MapProtocol=tmnxOamMacTrL2MapProtocol, tmnxOamPingCtlInterval=tmnxOamPingCtlInterval, tmnxOamTrResultsOperStatus=tmnxOamTrResultsOperStatus, tmnxOamVprnTrNextHopEntry=tmnxOamVprnTrNextHopEntry, tmnxOamTrHopsProbeResponses=tmnxOamTrHopsProbeResponses, tmnxOamPingNotifyPrefix=tmnxOamPingNotifyPrefix, tmnxOamLTtraceCtlMaxPath=tmnxOamLTtraceCtlMaxPath, tmnxOamVprnPingCtlSrcAddress=tmnxOamVprnPingCtlSrcAddress, tmnxOamMcastTrRespOutIfAddress=tmnxOamMcastTrRespOutIfAddress, tmnxOamLspTrCtlLdpPrefixLen=tmnxOamLspTrCtlLdpPrefixLen, tmnxOamMRInfoRespIfAddrType=tmnxOamMRInfoRespIfAddrType, tmnxOamPingCtlStorageType=tmnxOamPingCtlStorageType, tmnxOamPingGeneralV6v0Group=tmnxOamPingGeneralV6v0Group, tmnxOamTraceRouteNotifications=tmnxOamTraceRouteNotifications, tmnxOamVprnTrL3MapRteDist=tmnxOamVprnTrL3MapRteDist, TmnxOamResponseStatus=TmnxOamResponseStatus, TmnxOamPingRtnCode=TmnxOamPingRtnCode, tmnxOamLspPingCtlPathDestType=tmnxOamLspPingCtlPathDestType, tmnxOamPingCtlOrigSdpId=tmnxOamPingCtlOrigSdpId, tmnxOamPingCtlProfile=tmnxOamPingCtlProfile, tmnxOamTrProbeHistoryStatus=tmnxOamTrProbeHistoryStatus, tmnxOamMcastTrRespPrevHopRtrAddr=tmnxOamMcastTrRespPrevHopRtrAddr, tmnxOamVprnTrL3MapRteVprnLabel=tmnxOamVprnTrL3MapRteVprnLabel, tmnxOamLdpTtraceAutoDiscState=tmnxOamLdpTtraceAutoDiscState, tmnxOamLspTrMapEntry=tmnxOamLspTrMapEntry, tmnxOamPingHistoryIndex=tmnxOamPingHistoryIndex, tmnxOamLTtraceFecLastDisEnd=tmnxOamLTtraceFecLastDisEnd, tmnxOamLTtraceFecProbeState=tmnxOamLTtraceFecProbeState, tmnxOamTr77x0V6v0Compliance=tmnxOamTr77x0V6v0Compliance, tmnxOamAtmPingR2r1Group=tmnxOamAtmPingR2r1Group, tmnxOamPingCtlMtuEndSize=tmnxOamPingCtlMtuEndSize, tmnxOamAncpHistoryAccNodeResult=tmnxOamAncpHistoryAccNodeResult, tmnxOamVccvPingGroup=tmnxOamVccvPingGroup, tmnxOamLTtraceResultsDisStatus=tmnxOamLTtraceResultsDisStatus, tmnxOamTrGeneralV5v0Group=tmnxOamTrGeneralV5v0Group, tmnxOamMcastTrCtlGrpAddress=tmnxOamMcastTrCtlGrpAddress, tmnxOamMRInfoRespCapabilities=tmnxOamMRInfoRespCapabilities, tmnxOamMcastTrRespRtgProtocol=tmnxOamMcastTrRespRtgProtocol, tmnxOamTrResultsIpTgtAddr=tmnxOamTrResultsIpTgtAddr, tmnxOamPingCtlTable=tmnxOamPingCtlTable, tmnxOamMacTrV3v0Group=tmnxOamMacTrV3v0Group, tmnxOamMacPingL2MapProtocol=tmnxOamMacPingL2MapProtocol, tmnxOamMfibPingCtlDestAddress=tmnxOamMfibPingCtlDestAddress, tmnxOamTrObsoleteV3v0Group=tmnxOamTrObsoleteV3v0Group, tmnxOamMacPingCtlEntry=tmnxOamMacPingCtlEntry, tmnxOamVccvTrNextPwSegmentTable=tmnxOamVccvTrNextPwSegmentTable, tmnxOamSaaThresholdTable=tmnxOamSaaThresholdTable, tmnxOamMacTrL2MapVCType=tmnxOamMacTrL2MapVCType, tmnxOamVprnPingCtlReplyControl=tmnxOamVprnPingCtlReplyControl, tmnxOamPingGeneralV4v0Group=tmnxOamPingGeneralV4v0Group, tmnxOamTrHopsMinTt=tmnxOamTrHopsMinTt, tmnxOamLTtracePathProbeTmOutCnt=tmnxOamLTtracePathProbeTmOutCnt, tmnxOamMcastTrRespInIfAddrType=tmnxOamMcastTrRespInIfAddrType, TmnxOamTestResponsePlane=TmnxOamTestResponsePlane, tmnxOamCpePingCtlSrceMacAddr=tmnxOamCpePingCtlSrceMacAddr, tmnxOamSaaTTestRunIndex=tmnxOamSaaTTestRunIndex, tmnxOamPingObsoleteV4v0Group=tmnxOamPingObsoleteV4v0Group, tmnxOamPingNotificationV5v0Group=tmnxOamPingNotificationV5v0Group, tmnxOamTrHopsSentProbes=tmnxOamTrHopsSentProbes, tmnxOamVprnTrNextHopIfIndex=tmnxOamVprnTrNextHopIfIndex, tmnxOamVprnTrV4v0Group=tmnxOamVprnTrV4v0Group, tmnxOamMacPingHistorySapId=tmnxOamMacPingHistorySapId, tmnxOamMacTrCtlReplyControl=tmnxOamMacTrCtlReplyControl, tmnxOamTrObsoleteV5v0Group=tmnxOamTrObsoleteV5v0Group, tmnxOamVprnTrNextHopType=tmnxOamVprnTrNextHopType, tmnxOamMRInfoRespIfNbrAddr=tmnxOamMRInfoRespIfNbrAddr, tmnxOamLTtraceAutoTotalFecs=tmnxOamLTtraceAutoTotalFecs, tmnxOamLTtraceAutoTrMaxTtl=tmnxOamLTtraceAutoTrMaxTtl, tmnxOamMacPingHistoryResponse=tmnxOamMacPingHistoryResponse, tmnxOamLspPingCtlLdpIpPrefix=tmnxOamLspPingCtlLdpIpPrefix, TmnxOamLTtraceDisStatusBits=TmnxOamLTtraceDisStatusBits, tmnxOamAncpTestCtlTable=tmnxOamAncpTestCtlTable, tmnxOamLTtraceHopDstAddrType=tmnxOamLTtraceHopDstAddrType, tmnxOamTrCtlDescr=tmnxOamTrCtlDescr, tmnxOamSaaCtlLastChanged=tmnxOamSaaCtlLastChanged, tmnxOamSaaNotificationV3v0Group=tmnxOamSaaNotificationV3v0Group, tmnxOamLspPingCtlLdpPrefixType=tmnxOamLspPingCtlLdpPrefixType, tmnxOamLTtraceAutoDiscoveryState=tmnxOamLTtraceAutoDiscoveryState, tmnxOamLTtraceResultsFailedHops=tmnxOamLTtraceResultsFailedHops, tmnxOamLTtraceCtlLdpPrefixLen=tmnxOamLTtraceCtlLdpPrefixLen, tmnxOamLTtraceAutoPrTimeOut=tmnxOamLTtraceAutoPrTimeOut, tmnxOamLspTrCtlTable=tmnxOamLspTrCtlTable, tmnxOamMRInfoRespNumInterfaces=tmnxOamMRInfoRespNumInterfaces, tmnxOamAncpTestcount=tmnxOamAncpTestcount, tmnxOamLTtraceHopIndex=tmnxOamLTtraceHopIndex, tmnxOamLspTrMapTable=tmnxOamLspTrMapTable, tmnxOamMRInfoRespIfEntry=tmnxOamMRInfoRespIfEntry, tmnxOamMcastTrRespFwdTtl=tmnxOamMcastTrRespFwdTtl, tmnxOamPingResultsInJitter=tmnxOamPingResultsInJitter, tmnxOamTrHopsMaxTt=tmnxOamTrHopsMaxTt, tmnxOamMfibPingCtlSrcAddrType=tmnxOamMfibPingCtlSrcAddrType, tmnxOamTrHopsMinRtt=tmnxOamTrHopsMinRtt, tmnxOamSaaCtlFailures=tmnxOamSaaCtlFailures, tmnxOamLTtraceFecDiscoveryState=tmnxOamLTtraceFecDiscoveryState, tmnxOamMRInfoRespTable=tmnxOamMRInfoRespTable, tmnxOamAncpTestTarget=tmnxOamAncpTestTarget, tmnxOamSaaCtlTestMode=tmnxOamSaaCtlTestMode, tmnxOamSaaNotifyObjects=tmnxOamSaaNotifyObjects, tmnxOamMcastTrRespInIfAddress=tmnxOamMcastTrRespInIfAddress, tmnxOamTrCtlTestIndex=tmnxOamTrCtlTestIndex, tmnxOamAncpHistoryIndex=tmnxOamAncpHistoryIndex)
