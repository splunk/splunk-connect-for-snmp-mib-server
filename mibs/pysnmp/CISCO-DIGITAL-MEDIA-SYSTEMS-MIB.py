#
# PySNMP MIB module CISCO-DIGITAL-MEDIA-SYSTEMS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DIGITAL-MEDIA-SYSTEMS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:37:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Bits, Counter64, Unsigned32, ObjectIdentity, Integer32, TimeTicks, NotificationType, Counter32, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, iso, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "Unsigned32", "ObjectIdentity", "Integer32", "TimeTicks", "NotificationType", "Counter32", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "iso", "ModuleIdentity")
MacAddress, TruthValue, RowStatus, DateAndTime, TextualConvention, TimeStamp, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TruthValue", "RowStatus", "DateAndTime", "TextualConvention", "TimeStamp", "DisplayString")
ciscoDigitalMediaSystemsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 655))
ciscoDigitalMediaSystemsMIB.setRevisions(('2011-09-07 00:00', '2011-07-29 00:00', '2009-10-12 00:00', '2008-05-15 00:00',))
if mibBuilder.loadTexts: ciscoDigitalMediaSystemsMIB.setLastUpdated('201109070000Z')
if mibBuilder.loadTexts: ciscoDigitalMediaSystemsMIB.setOrganization('Cisco Systems')
class CDmsUserAuthenMethod(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("none", 1), ("other", 2), ("radius", 3), ("tacacsPlus", 4), ("kerberos", 5), ("local", 6), ("ldap", 7), ("ntlm", 8), ("sdi", 9))

class CDmsServerType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("other", 1), ("dnsServer", 2), ("ldapServer", 3), ("snmpServer", 4), ("smtpServer", 5), ("syslogServer", 6), ("aaaServer", 7), ("ntpServer", 8))

class CDmsElementType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("other", 1), ("encoder", 2), ("videoPortal", 3), ("mediaPlayer", 4), ("transCoder", 5), ("storageServer", 6), ("streamingServer", 7), ("dmm", 8))

class CDmsFunctionalStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("other", 1), ("initialize", 2), ("active", 3), ("shutdown", 4), ("standby", 5))

class CDmsEmailAddress(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 128)

class CDmsLicensedFeature(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("other", 1), ("base", 2), ("deskTopVideo", 3), ("liveWebcastEnabler", 4), ("digitalSignage", 5), ("enterpriseTv", 6), ("snmpManagement", 7), ("digitalMediaPlayer", 8), ("digitalMediaPlayerAuthorPack", 9), ("digitalMedialPlayerProofOfPlayPack", 10), ("clustering", 11))

ciscoDmsMonitorMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 0))
ciscoDmsMonitorMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1))
ciscoDmsMonitorMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 2))
cdmsSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 1))
cdmsFeatures = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 2))
cdmsInventory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 3))
cdmsServers = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 4))
cdmsDamServices = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 5))
cdmsSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 6))
cdmsUserGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 7))
cdmsEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 8))
cdmsNotifControl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 13))
cdmsHa = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10))
cdmsMajorVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsMajorVersion.setStatus('current')
cdmsMinorVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsMinorVersion.setStatus('current')
cdmsPatchVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsPatchVersion.setStatus('current')
cdmsAdministrator = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 1, 4), CDmsEmailAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdmsAdministrator.setStatus('current')
cdmsFeatureSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 2, 1))
cdmsLicensableFeatures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsLicensableFeatures.setStatus('current')
cdmsLicensedFeatures = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsLicensedFeatures.setStatus('current')
cdmsLastLicenseUpdate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 2, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsLastLicenseUpdate.setStatus('current')
cdmsLicensedFeatureTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 2, 2), )
if mibBuilder.loadTexts: cdmsLicensedFeatureTable.setStatus('current')
cdmsLicensedFeatureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsLicensedFeature"), (0, "CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsLicensedFeatureIndex"))
if mibBuilder.loadTexts: cdmsLicensedFeatureEntry.setStatus('current')
cdmsLicensedFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 2, 2, 1, 1), CDmsLicensedFeature())
if mibBuilder.loadTexts: cdmsLicensedFeature.setStatus('current')
cdmsLicensedFeatureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: cdmsLicensedFeatureIndex.setStatus('current')
cdmsLicensedFeatureLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 2, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsLicensedFeatureLimit.setStatus('deprecated')
cdmsLicensedFeatureDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 2, 2, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsLicensedFeatureDescription.setStatus('current')
cdmsLicensedFeatureInstallDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 2, 2, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsLicensedFeatureInstallDate.setStatus('current')
cdmsLicensedFeatureLimitRev1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-3, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsLicensedFeatureLimitRev1.setStatus('current')
cdmsInventoryGlobalCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 3, 1))
cdmsNumMediaIngestionDevices = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 3, 1, 1), Gauge32()).setUnits('Encoders').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsNumMediaIngestionDevices.setStatus('current')
cdmsNumMediaPlayerDevices = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 3, 1, 2), Gauge32()).setUnits('Media Players').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsNumMediaPlayerDevices.setStatus('current')
cdmsNumVideoPortalDevices = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 3, 1, 3), Gauge32()).setUnits('Video Portals').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsNumVideoPortalDevices.setStatus('current')
cdmsInventoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 3, 2), )
if mibBuilder.loadTexts: cdmsInventoryTable.setStatus('current')
cdmsInventoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsInventoryElementType"), (0, "CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsInventoryElementId"))
if mibBuilder.loadTexts: cdmsInventoryEntry.setStatus('current')
cdmsInventoryElementType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 3, 2, 1, 1), CDmsElementType())
if mibBuilder.loadTexts: cdmsInventoryElementType.setStatus('current')
cdmsInventoryElementId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 3, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 100)))
if mibBuilder.loadTexts: cdmsInventoryElementId.setStatus('current')
cdmsInventoryElementMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 3, 2, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsInventoryElementMacAddress.setStatus('current')
cdmsInventoryElementAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 3, 2, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsInventoryElementAddrType.setStatus('current')
cdmsInventoryElementAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 3, 2, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsInventoryElementAddress.setStatus('current')
cdmsInventoryElementMetadata = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 3, 2, 1, 6), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdmsInventoryElementMetadata.setStatus('current')
cdmsInventoryElementState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 3, 2, 1, 7), CDmsFunctionalStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdmsInventoryElementState.setStatus('current')
cdmsServerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 4, 1), )
if mibBuilder.loadTexts: cdmsServerTable.setStatus('current')
cdmsServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsServerType"), (0, "CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsServerAddrType"), (0, "CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsServerAddress"))
if mibBuilder.loadTexts: cdmsServerEntry.setStatus('current')
cdmsServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 4, 1, 1, 1), CDmsServerType())
if mibBuilder.loadTexts: cdmsServerType.setStatus('current')
cdmsServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 4, 1, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cdmsServerAddrType.setStatus('current')
cdmsServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 4, 1, 1, 3), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cdmsServerAddress.setStatus('current')
cdmsServerState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 4, 1, 1, 4), CDmsFunctionalStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsServerState.setStatus('current')
cdmsServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 4, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdmsServerStatus.setStatus('current')
cdmsDamGlobalCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 5, 1))
cdmsNumContentElements = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 5, 1, 1), Gauge32()).setUnits('content elements').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsNumContentElements.setStatus('current')
cdmsSecurityGlobalCounters = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 6, 1))
cdmsNumAuthenRequests = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 6, 1, 1), Counter64()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsNumAuthenRequests.setStatus('current')
cdmsNumAuthenRequestsApproved = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 5, 1, 2), Counter64()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsNumAuthenRequestsApproved.setStatus('current')
cdmsNumAuthenRequestsDeclined = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 5, 1, 3), Counter64()).setUnits('requests').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsNumAuthenRequestsDeclined.setStatus('current')
cdmsSecurityConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 6, 2))
cdmsAuthenticationMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 6, 2, 1), CDmsUserAuthenMethod()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdmsAuthenticationMode.setStatus('current')
cdmsHaClusterInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 1))
cdmsHaClusterComposition = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2))
cdmsHaClusterStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3))
cdmsHaClusterEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 1, 1), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaClusterEnabled.setStatus('current')
cdmsHaClusterName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdmsHaClusterName.setStatus('current')
cdmsHaDmmCluster = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 1))
cdmsHaVpCluster = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 2))
cdmsHaClusterNumTotalDmms = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 10))).setUnits('Nodes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaClusterNumTotalDmms.setStatus('current')
cdmsHaClusterNumActiveDmms = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setUnits('Nodes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaClusterNumActiveDmms.setStatus('current')
cdmsHaClusterDmmVipType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaClusterDmmVipType.setStatus('current')
cdmsHaClusterDmmVip = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaClusterDmmVip.setStatus('current')
cdmsHaDmmClusterMemberTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 1, 5), )
if mibBuilder.loadTexts: cdmsHaDmmClusterMemberTable.setStatus('current')
cdmsHaDmmClusterMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 1, 5, 1), ).setIndexNames((0, "CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaDmmClusterMemberAddrType"), (0, "CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaDmmClusterMemberAddress"))
if mibBuilder.loadTexts: cdmsHaDmmClusterMemberEntry.setStatus('current')
cdmsHaDmmClusterMemberAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 1, 5, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cdmsHaDmmClusterMemberAddrType.setStatus('current')
cdmsHaDmmClusterMemberAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 1, 5, 1, 2), InetAddress())
if mibBuilder.loadTexts: cdmsHaDmmClusterMemberAddress.setStatus('current')
cdmsHaDmmClusterMemberIsPrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 1, 5, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaDmmClusterMemberIsPrimary.setStatus('current')
cdmsHaDmmClusterMemberOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 1, 5, 1, 4), CDmsFunctionalStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaDmmClusterMemberOperState.setStatus('current')
cdmsHaVpClusterNumClusters = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaVpClusterNumClusters.setStatus('current')
cdmsHaVpClusterMemberTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 2, 2), )
if mibBuilder.loadTexts: cdmsHaVpClusterMemberTable.setStatus('current')
cdmsHaVpClusterMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 2, 2, 1), ).setIndexNames((0, "CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaVpClusterMemberClusterName"), (0, "CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaVpClusterMemberVipType"), (0, "CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaVpClusterMemberVip"), (0, "CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaVpClusterMemberAddrType"), (0, "CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaVpClusterMemberAddress"))
if mibBuilder.loadTexts: cdmsHaVpClusterMemberEntry.setStatus('current')
cdmsHaVpClusterMemberClusterName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 2, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)))
if mibBuilder.loadTexts: cdmsHaVpClusterMemberClusterName.setStatus('current')
cdmsHaVpClusterMemberVipType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 2, 2, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cdmsHaVpClusterMemberVipType.setStatus('current')
cdmsHaVpClusterMemberVip = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 2, 2, 1, 3), InetAddress())
if mibBuilder.loadTexts: cdmsHaVpClusterMemberVip.setStatus('current')
cdmsHaVpClusterMemberAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 2, 2, 1, 4), InetAddressType())
if mibBuilder.loadTexts: cdmsHaVpClusterMemberAddrType.setStatus('current')
cdmsHaVpClusterMemberAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 2, 2, 1, 5), InetAddress())
if mibBuilder.loadTexts: cdmsHaVpClusterMemberAddress.setStatus('current')
cdmsHaVpClusterMemberIsPrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 2, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaVpClusterMemberIsPrimary.setStatus('current')
cdmsHaVpClusterMemberOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 2, 2, 2, 1, 7), CDmsFunctionalStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaVpClusterMemberOperState.setStatus('current')
cdmsHaClusterLastDmmStatusChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaClusterLastDmmStatusChangeTime.setStatus('current')
cdmsHaClusterLastDmmStatusChangeAddrType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaClusterLastDmmStatusChangeAddrType.setStatus('current')
cdmsHaClusterLastDmmStatusChangeAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaClusterLastDmmStatusChangeAddress.setStatus('current')
cdmsHaClusterLastVpStatusChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaClusterLastVpStatusChangeTime.setStatus('current')
cdmsHaClusterLastVpStatusChangeCluster = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaClusterLastVpStatusChangeCluster.setStatus('current')
cdmsHaClusterLastStatusChangeVpAddrType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaClusterLastStatusChangeVpAddrType.setStatus('current')
cdmsHaClusterLastVpStatusChangeVpAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaClusterLastVpStatusChangeVpAddress.setStatus('current')
cdmsHaClusterStatusHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3, 8))
cdmsHaClusterHistoryMaxRecords = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdmsHaClusterHistoryMaxRecords.setStatus('current')
cdmsHaClusterHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3, 8, 2), )
if mibBuilder.loadTexts: cdmsHaClusterHistoryTable.setStatus('current')
cdmsHaClusterHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3, 8, 2, 1), ).setIndexNames((0, "CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterHistId"))
if mibBuilder.loadTexts: cdmsHaClusterHistoryEntry.setStatus('current')
cdmsHaClusterHistId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cdmsHaClusterHistId.setStatus('current')
cdmsHaClusterHistTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3, 8, 2, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaClusterHistTimestamp.setStatus('current')
cdmsHaClusterHistClusterName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3, 8, 2, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaClusterHistClusterName.setStatus('current')
cdmsHaClusterHistNodeType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3, 8, 2, 1, 4), CDmsElementType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaClusterHistNodeType.setStatus('current')
cdmsHaClusterHistNodeNewStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3, 8, 2, 1, 5), CDmsFunctionalStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaClusterHistNodeNewStatus.setStatus('current')
cdmsHaClusterHistNodeAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3, 8, 2, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaClusterHistNodeAddrType.setStatus('current')
cdmsHaClusterHistNodeAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 10, 3, 8, 2, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsHaClusterHistNodeAddr.setStatus('current')
cdmsNumUsers = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 7, 1), Gauge32()).setUnits('Users').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsNumUsers.setStatus('current')
cdmsNumActiveDmmUsers = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 7, 2), Gauge32()).setUnits('Users').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsNumActiveDmmUsers.setStatus('current')
cdmsNumActiveVpUsers = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 7, 3), Gauge32()).setUnits('Users').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsNumActiveVpUsers.setStatus('current')
cdmsLastUserLastChange = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 7, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsLastUserLastChange.setStatus('current')
cdmsEventConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 8, 1))
cdmsEventStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 8, 2))
cdmsNumEvents = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 8, 2, 1), Counter64()).setUnits('Events').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsNumEvents.setStatus('current')
cdmsNumEventRate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 8, 2, 2), Gauge32()).setUnits('Events per minute').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsNumEventRate.setStatus('current')
cdmsNumAlarms = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 8, 2, 3), Counter64()).setUnits('Alarms').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsNumAlarms.setStatus('current')
cdmsNumAlarmRate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 8, 2, 4), Gauge32()).setUnits('Alarms per minute').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsNumAlarmRate.setStatus('current')
cdmsNumNotifications = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 8, 2, 5), Counter64()).setUnits('Notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsNumNotifications.setStatus('current')
cdmsNumNotificationRate = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 8, 2, 6), Gauge32()).setUnits('Notifications per minute').setMaxAccess("readonly")
if mibBuilder.loadTexts: cdmsNumNotificationRate.setStatus('current')
cdmsMediaPlayerRegisteredEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 13, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdmsMediaPlayerRegisteredEnable.setStatus('current')
cdmsMediaPlayerUpEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 13, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdmsMediaPlayerUpEnable.setStatus('current')
cdmsMediaPlayerDownEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 13, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdmsMediaPlayerDownEnable.setStatus('current')
cdmsMediaPlayerAddrTakenEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 13, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdmsMediaPlayerAddrTakenEnable.setStatus('current')
cdmsHaClusterNodeUpEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 13, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdmsHaClusterNodeUpEnable.setStatus('current')
cdmsHaClusterNodeDownEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 13, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdmsHaClusterNodeDownEnable.setStatus('current')
cdmsHaClusterConfigChangeEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 655, 1, 13, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdmsHaClusterConfigChangeEnable.setStatus('current')
ciscoDmsMediaPlayerRegistered = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 655, 0, 1)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumMediaPlayerDevices"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsInventoryElementMacAddress"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsInventoryElementAddrType"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsInventoryElementAddress"))
if mibBuilder.loadTexts: ciscoDmsMediaPlayerRegistered.setStatus('current')
ciscoDmsMediaPlayerUp = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 655, 0, 2)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumMediaPlayerDevices"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsInventoryElementMacAddress"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsInventoryElementAddrType"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsInventoryElementAddress"))
if mibBuilder.loadTexts: ciscoDmsMediaPlayerUp.setStatus('current')
ciscoDmsMediaPlayerDown = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 655, 0, 3)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumMediaPlayerDevices"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsInventoryElementAddrType"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsInventoryElementAddress"))
if mibBuilder.loadTexts: ciscoDmsMediaPlayerDown.setStatus('current')
ciscoDmsMediaPlayerAddrTaken = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 655, 0, 4)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsInventoryElementAddrType"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsInventoryElementAddress"))
if mibBuilder.loadTexts: ciscoDmsMediaPlayerAddrTaken.setStatus('current')
ciscoDmsHaClusterNodeUp = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 655, 0, 5)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterHistClusterName"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterHistNodeType"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterHistNodeAddrType"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterHistNodeAddr"))
if mibBuilder.loadTexts: ciscoDmsHaClusterNodeUp.setStatus('current')
ciscoDmsHaClusterNodeDown = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 655, 0, 6)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterHistClusterName"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterHistNodeType"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterHistNodeAddrType"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterHistNodeAddr"))
if mibBuilder.loadTexts: ciscoDmsHaClusterNodeDown.setStatus('current')
cdmsDmsHaClusterConfigChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 655, 0, 7)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterHistClusterName"))
if mibBuilder.loadTexts: cdmsDmsHaClusterConfigChange.setStatus('current')
ciscoDmsMonitorMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 1))
ciscoDmsMonitorMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 2))
ciscoDmsMonitorMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 1, 1)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsSystemGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsFeatureGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsInventoryGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsFeatureAdvancedGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsServerGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDamGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsSecurityGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsUserGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsEventGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsHaGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsHaAdvancedGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsNotificationCntlGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsNotificationsGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsAdvancedNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDmsMonitorMIBCompliance = ciscoDmsMonitorMIBCompliance.setStatus('deprecated')
ciscoDmsMonitorMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 1, 2)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsSystemGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsFeatureGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsInventoryGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsFeatureAdvancedGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsServerGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDamGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsSecurityGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsUserGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsEventGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsNotificationCntlGroupRev1"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsNotificationsGroupRev1"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsAdvancedNotificationsGroup"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsHaGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDmsMonitorMIBComplianceRev1 = ciscoDmsMonitorMIBComplianceRev1.setStatus('current')
ciscoDmsSystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 2, 1)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsMajorVersion"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsMinorVersion"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsPatchVersion"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsAdministrator"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDmsSystemGroup = ciscoDmsSystemGroup.setStatus('current')
ciscoDmsFeatureGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 2, 2)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsLicensableFeatures"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsLicensedFeatures"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsLastLicenseUpdate"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsLicensedFeatureLimit"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsLicensedFeatureDescription"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDmsFeatureGroup = ciscoDmsFeatureGroup.setStatus('current')
ciscoDmsFeatureAdvancedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 2, 3)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsLicensedFeatureInstallDate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDmsFeatureAdvancedGroup = ciscoDmsFeatureAdvancedGroup.setStatus('current')
ciscoDmsInventoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 2, 4)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumMediaIngestionDevices"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumMediaPlayerDevices"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumVideoPortalDevices"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsInventoryElementMacAddress"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsInventoryElementAddrType"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsInventoryElementAddress"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsInventoryElementMetadata"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsInventoryElementState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDmsInventoryGroup = ciscoDmsInventoryGroup.setStatus('current')
ciscoDmsServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 2, 5)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsServerState"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsServerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDmsServerGroup = ciscoDmsServerGroup.setStatus('current')
ciscoDamGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 2, 6)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumContentElements"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDamGroup = ciscoDamGroup.setStatus('current')
ciscoDmsSecurityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 2, 7)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumAuthenRequests"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumAuthenRequestsApproved"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumAuthenRequestsDeclined"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsAuthenticationMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDmsSecurityGroup = ciscoDmsSecurityGroup.setStatus('current')
ciscoDmsUserGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 2, 8)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumUsers"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumActiveDmmUsers"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumActiveVpUsers"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsLastUserLastChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDmsUserGroup = ciscoDmsUserGroup.setStatus('current')
ciscoDmsEventGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 2, 9)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumEvents"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumEventRate"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumAlarms"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumAlarmRate"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumNotifications"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsNumNotificationRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDmsEventGroup = ciscoDmsEventGroup.setStatus('current')
ciscoDmsNotificationCntlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 2, 10)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsMediaPlayerRegisteredEnable"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsMediaPlayerUpEnable"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsMediaPlayerDownEnable"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsMediaPlayerAddrTakenEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDmsNotificationCntlGroup = ciscoDmsNotificationCntlGroup.setStatus('deprecated')
ciscoDmsNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 2, 11)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsMediaPlayerRegistered"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsMediaPlayerUp"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsMediaPlayerDown"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsMediaPlayerAddrTaken"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDmsNotificationsGroup = ciscoDmsNotificationsGroup.setStatus('deprecated')
ciscoDmsAdvancedNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 2, 12)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsDmsHaClusterConfigChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDmsAdvancedNotificationsGroup = ciscoDmsAdvancedNotificationsGroup.setStatus('current')
ciscoDmsHaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 2, 13)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterNodeUpEnable"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterNodeDownEnable"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterConfigChangeEnable"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterEnabled"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterName"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterNumTotalDmms"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterNumActiveDmms"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterDmmVipType"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterDmmVip"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaDmmClusterMemberIsPrimary"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaDmmClusterMemberOperState"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaVpClusterNumClusters"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaVpClusterMemberIsPrimary"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaVpClusterMemberOperState"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterLastDmmStatusChangeTime"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterLastDmmStatusChangeAddrType"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterLastDmmStatusChangeAddress"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterLastVpStatusChangeTime"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterLastVpStatusChangeCluster"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterLastStatusChangeVpAddrType"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterLastVpStatusChangeVpAddress"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterHistoryMaxRecords"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDmsHaGroup = ciscoDmsHaGroup.setStatus('current')
ciscoDmsHaAdvancedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 2, 14)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterHistTimestamp"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterHistClusterName"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterHistNodeType"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterHistNodeNewStatus"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterHistNodeAddrType"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterHistNodeAddr"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterHistoryMaxRecords"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDmsHaAdvancedGroup = ciscoDmsHaAdvancedGroup.setStatus('current')
ciscoDmsNotificationCntlGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 2, 15)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsMediaPlayerRegisteredEnable"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsMediaPlayerUpEnable"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsMediaPlayerDownEnable"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsMediaPlayerAddrTakenEnable"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterNodeUpEnable"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterNodeDownEnable"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "cdmsHaClusterConfigChangeEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDmsNotificationCntlGroupRev1 = ciscoDmsNotificationCntlGroupRev1.setStatus('current')
ciscoDmsNotificationsGroupRev1 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 655, 2, 2, 16)).setObjects(("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsMediaPlayerRegistered"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsMediaPlayerUp"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsMediaPlayerDown"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsMediaPlayerAddrTaken"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsHaClusterNodeUp"), ("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", "ciscoDmsHaClusterNodeDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDmsNotificationsGroupRev1 = ciscoDmsNotificationsGroupRev1.setStatus('current')
mibBuilder.exportSymbols("CISCO-DIGITAL-MEDIA-SYSTEMS-MIB", cdmsInventoryElementMetadata=cdmsInventoryElementMetadata, cdmsHaClusterNumActiveDmms=cdmsHaClusterNumActiveDmms, ciscoDmsHaClusterNodeDown=ciscoDmsHaClusterNodeDown, ciscoDmsHaClusterNodeUp=ciscoDmsHaClusterNodeUp, cdmsHaDmmClusterMemberIsPrimary=cdmsHaDmmClusterMemberIsPrimary, ciscoDmsNotificationsGroup=ciscoDmsNotificationsGroup, ciscoDmsNotificationCntlGroupRev1=ciscoDmsNotificationCntlGroupRev1, ciscoDmsMonitorMIBObjects=ciscoDmsMonitorMIBObjects, cdmsHaClusterLastVpStatusChangeVpAddress=cdmsHaClusterLastVpStatusChangeVpAddress, cdmsInventoryTable=cdmsInventoryTable, ciscoDmsMediaPlayerUp=ciscoDmsMediaPlayerUp, cdmsInventoryElementState=cdmsInventoryElementState, cdmsHaClusterHistClusterName=cdmsHaClusterHistClusterName, ciscoDmsNotificationCntlGroup=ciscoDmsNotificationCntlGroup, ciscoDmsMonitorMIBConform=ciscoDmsMonitorMIBConform, cdmsNumVideoPortalDevices=cdmsNumVideoPortalDevices, cdmsNumActiveDmmUsers=cdmsNumActiveDmmUsers, cdmsDamGlobalCounters=cdmsDamGlobalCounters, cdmsHaClusterInfo=cdmsHaClusterInfo, cdmsHaClusterDmmVipType=cdmsHaClusterDmmVipType, cdmsAdministrator=cdmsAdministrator, cdmsServerEntry=cdmsServerEntry, cdmsHaClusterHistId=cdmsHaClusterHistId, ciscoDmsServerGroup=ciscoDmsServerGroup, cdmsHaClusterDmmVip=cdmsHaClusterDmmVip, ciscoDmsSystemGroup=ciscoDmsSystemGroup, ciscoDamGroup=ciscoDamGroup, cdmsNumAlarms=cdmsNumAlarms, cdmsLicensedFeatureLimit=cdmsLicensedFeatureLimit, cdmsInventoryGlobalCounters=cdmsInventoryGlobalCounters, cdmsDamServices=cdmsDamServices, cdmsHaClusterHistNodeType=cdmsHaClusterHistNodeType, cdmsHaVpClusterMemberAddress=cdmsHaVpClusterMemberAddress, cdmsFeatures=cdmsFeatures, cdmsHaDmmClusterMemberAddrType=cdmsHaDmmClusterMemberAddrType, cdmsNumUsers=cdmsNumUsers, cdmsInventory=cdmsInventory, cdmsNumAuthenRequestsDeclined=cdmsNumAuthenRequestsDeclined, cdmsUserGroup=cdmsUserGroup, cdmsHaClusterHistNodeAddrType=cdmsHaClusterHistNodeAddrType, cdmsHaVpClusterMemberIsPrimary=cdmsHaVpClusterMemberIsPrimary, cdmsLicensedFeatureIndex=cdmsLicensedFeatureIndex, cdmsHaDmmClusterMemberOperState=cdmsHaDmmClusterMemberOperState, cdmsNumMediaPlayerDevices=cdmsNumMediaPlayerDevices, cdmsSystem=cdmsSystem, ciscoDmsMediaPlayerAddrTaken=ciscoDmsMediaPlayerAddrTaken, cdmsHaVpClusterMemberAddrType=cdmsHaVpClusterMemberAddrType, ciscoDmsMediaPlayerRegistered=ciscoDmsMediaPlayerRegistered, CDmsElementType=CDmsElementType, cdmsHaClusterNodeDownEnable=cdmsHaClusterNodeDownEnable, cdmsHaClusterLastStatusChangeVpAddrType=cdmsHaClusterLastStatusChangeVpAddrType, cdmsNumEventRate=cdmsNumEventRate, cdmsServerAddrType=cdmsServerAddrType, cdmsHaClusterLastDmmStatusChangeTime=cdmsHaClusterLastDmmStatusChangeTime, cdmsLicensedFeatureLimitRev1=cdmsLicensedFeatureLimitRev1, CDmsLicensedFeature=CDmsLicensedFeature, cdmsNumContentElements=cdmsNumContentElements, cdmsNumMediaIngestionDevices=cdmsNumMediaIngestionDevices, cdmsLastLicenseUpdate=cdmsLastLicenseUpdate, cdmsHaClusterLastVpStatusChangeCluster=cdmsHaClusterLastVpStatusChangeCluster, cdmsHaClusterHistoryEntry=cdmsHaClusterHistoryEntry, cdmsMediaPlayerAddrTakenEnable=cdmsMediaPlayerAddrTakenEnable, cdmsHaClusterHistTimestamp=cdmsHaClusterHistTimestamp, cdmsLicensedFeatureDescription=cdmsLicensedFeatureDescription, cdmsNumAuthenRequestsApproved=cdmsNumAuthenRequestsApproved, cdmsServerType=cdmsServerType, CDmsEmailAddress=CDmsEmailAddress, cdmsServerTable=cdmsServerTable, ciscoDmsMonitorMIBComplianceRev1=ciscoDmsMonitorMIBComplianceRev1, cdmsServerState=cdmsServerState, cdmsPatchVersion=cdmsPatchVersion, cdmsHaVpClusterMemberEntry=cdmsHaVpClusterMemberEntry, cdmsLicensedFeature=cdmsLicensedFeature, cdmsHaClusterHistoryMaxRecords=cdmsHaClusterHistoryMaxRecords, ciscoDmsMonitorMIBGroups=ciscoDmsMonitorMIBGroups, ciscoDmsInventoryGroup=ciscoDmsInventoryGroup, ciscoDmsAdvancedNotificationsGroup=ciscoDmsAdvancedNotificationsGroup, cdmsLastUserLastChange=cdmsLastUserLastChange, cdmsMajorVersion=cdmsMajorVersion, cdmsNumActiveVpUsers=cdmsNumActiveVpUsers, cdmsEventStatistics=cdmsEventStatistics, ciscoDmsHaAdvancedGroup=ciscoDmsHaAdvancedGroup, cdmsLicensedFeatureInstallDate=cdmsLicensedFeatureInstallDate, cdmsHa=cdmsHa, PYSNMP_MODULE_ID=ciscoDigitalMediaSystemsMIB, cdmsSecurity=cdmsSecurity, cdmsHaClusterStatus=cdmsHaClusterStatus, cdmsNumAuthenRequests=cdmsNumAuthenRequests, cdmsInventoryElementId=cdmsInventoryElementId, cdmsHaClusterName=cdmsHaClusterName, cdmsSecurityGlobalCounters=cdmsSecurityGlobalCounters, cdmsHaClusterNumTotalDmms=cdmsHaClusterNumTotalDmms, cdmsHaClusterHistNodeAddr=cdmsHaClusterHistNodeAddr, ciscoDigitalMediaSystemsMIB=ciscoDigitalMediaSystemsMIB, cdmsHaClusterLastDmmStatusChangeAddrType=cdmsHaClusterLastDmmStatusChangeAddrType, cdmsEventConfiguration=cdmsEventConfiguration, cdmsHaClusterLastVpStatusChangeTime=cdmsHaClusterLastVpStatusChangeTime, CDmsUserAuthenMethod=CDmsUserAuthenMethod, cdmsHaVpClusterMemberTable=cdmsHaVpClusterMemberTable, cdmsHaClusterLastDmmStatusChangeAddress=cdmsHaClusterLastDmmStatusChangeAddress, cdmsLicensedFeatureEntry=cdmsLicensedFeatureEntry, cdmsHaClusterHistoryTable=cdmsHaClusterHistoryTable, cdmsServerStatus=cdmsServerStatus, cdmsHaDmmClusterMemberAddress=cdmsHaDmmClusterMemberAddress, cdmsMediaPlayerUpEnable=cdmsMediaPlayerUpEnable, cdmsEvents=cdmsEvents, cdmsServerAddress=cdmsServerAddress, cdmsNotifControl=cdmsNotifControl, cdmsHaVpClusterMemberVip=cdmsHaVpClusterMemberVip, cdmsHaDmmClusterMemberEntry=cdmsHaDmmClusterMemberEntry, ciscoDmsFeatureGroup=ciscoDmsFeatureGroup, cdmsInventoryEntry=cdmsInventoryEntry, ciscoDmsMonitorMIBCompliance=ciscoDmsMonitorMIBCompliance, cdmsNumNotifications=cdmsNumNotifications, cdmsLicensedFeatures=cdmsLicensedFeatures, cdmsInventoryElementType=cdmsInventoryElementType, cdmsHaClusterComposition=cdmsHaClusterComposition, cdmsHaVpClusterMemberOperState=cdmsHaVpClusterMemberOperState, ciscoDmsNotificationsGroupRev1=ciscoDmsNotificationsGroupRev1, cdmsLicensableFeatures=cdmsLicensableFeatures, cdmsMediaPlayerDownEnable=cdmsMediaPlayerDownEnable, cdmsHaClusterHistNodeNewStatus=cdmsHaClusterHistNodeNewStatus, cdmsInventoryElementAddrType=cdmsInventoryElementAddrType, cdmsHaClusterStatusHistory=cdmsHaClusterStatusHistory, CDmsFunctionalStatus=CDmsFunctionalStatus, cdmsMinorVersion=cdmsMinorVersion, ciscoDmsHaGroup=ciscoDmsHaGroup, cdmsHaDmmClusterMemberTable=cdmsHaDmmClusterMemberTable, cdmsFeatureSummary=cdmsFeatureSummary, ciscoDmsSecurityGroup=ciscoDmsSecurityGroup, cdmsNumNotificationRate=cdmsNumNotificationRate, cdmsAuthenticationMode=cdmsAuthenticationMode, ciscoDmsMonitorMIBCompliances=ciscoDmsMonitorMIBCompliances, ciscoDmsMonitorMIBNotifs=ciscoDmsMonitorMIBNotifs, ciscoDmsFeatureAdvancedGroup=ciscoDmsFeatureAdvancedGroup, cdmsInventoryElementMacAddress=cdmsInventoryElementMacAddress, cdmsHaDmmCluster=cdmsHaDmmCluster, cdmsHaClusterEnabled=cdmsHaClusterEnabled, cdmsMediaPlayerRegisteredEnable=cdmsMediaPlayerRegisteredEnable, cdmsNumAlarmRate=cdmsNumAlarmRate, cdmsLicensedFeatureTable=cdmsLicensedFeatureTable, CDmsServerType=CDmsServerType, cdmsHaVpClusterMemberVipType=cdmsHaVpClusterMemberVipType, cdmsHaVpClusterMemberClusterName=cdmsHaVpClusterMemberClusterName, cdmsDmsHaClusterConfigChange=cdmsDmsHaClusterConfigChange, cdmsHaVpCluster=cdmsHaVpCluster, ciscoDmsMediaPlayerDown=ciscoDmsMediaPlayerDown, cdmsHaVpClusterNumClusters=cdmsHaVpClusterNumClusters, cdmsHaClusterNodeUpEnable=cdmsHaClusterNodeUpEnable, cdmsHaClusterConfigChangeEnable=cdmsHaClusterConfigChangeEnable, ciscoDmsUserGroup=ciscoDmsUserGroup, cdmsInventoryElementAddress=cdmsInventoryElementAddress, ciscoDmsEventGroup=ciscoDmsEventGroup, cdmsNumEvents=cdmsNumEvents, cdmsSecurityConfiguration=cdmsSecurityConfiguration, cdmsServers=cdmsServers)
