#
# PySNMP MIB module ALTIGA-HARDWARE-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALTIGA-HARDWARE-STATS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:05:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
alHardwareMibModule, = mibBuilder.importSymbols("ALTIGA-GLOBAL-REG", "alHardwareMibModule")
alStatsHardware, alHardwareGroup = mibBuilder.importSymbols("ALTIGA-MIB", "alStatsHardware", "alHardwareGroup")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
iso, ModuleIdentity, ObjectIdentity, Gauge32, Counter64, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, IpAddress, Integer32, MibIdentifier, Counter32, TimeTicks, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ModuleIdentity", "ObjectIdentity", "Gauge32", "Counter64", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "IpAddress", "Integer32", "MibIdentifier", "Counter32", "TimeTicks", "Unsigned32")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
altigaHardwareStatsMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3076, 1, 1, 27, 2))
altigaHardwareStatsMibModule.setRevisions(('2003-03-27 13:00', '2002-09-05 13:00', '2002-07-10 00:00',))
if mibBuilder.loadTexts: altigaHardwareStatsMibModule.setLastUpdated('200303271300Z')
if mibBuilder.loadTexts: altigaHardwareStatsMibModule.setOrganization('Cisco Systems, Inc.')
class ConcentratorCard(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("none", 1), ("sep", 2), ("dualT1Wan", 3), ("sepE", 4))

class ConcentratorType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("cxx", 1), ("c5", 2), ("c1", 3))

alStatsHardwareGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1))
alHardwareCpuVoltage = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 1), Gauge32()).setUnits('centivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareCpuVoltage.setStatus('current')
alHardwareCpuVoltageAlarm = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareCpuVoltageAlarm.setStatus('current')
alHardwareCpuVoltageCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareCpuVoltageCount.setStatus('current')
alHardwareCpuVoltageTime = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareCpuVoltageTime.setStatus('current')
alHardwarePs1Voltage3v = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 5), Gauge32()).setUnits('centivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwarePs1Voltage3v.setStatus('current')
alHardwarePs1Voltage3vAlarm = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwarePs1Voltage3vAlarm.setStatus('current')
alHardwarePs1Voltage3vCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwarePs1Voltage3vCount.setStatus('current')
alHardwarePs1Voltage3vTime = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwarePs1Voltage3vTime.setStatus('current')
alHardwarePs1Voltage5v = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 9), Gauge32()).setUnits('centivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwarePs1Voltage5v.setStatus('current')
alHardwarePs1Voltage5vAlarm = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwarePs1Voltage5vAlarm.setStatus('current')
alHardwarePs1Voltage5vCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwarePs1Voltage5vCount.setStatus('current')
alHardwarePs1Voltage5vTime = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwarePs1Voltage5vTime.setStatus('current')
alHardwarePs2Voltage3v = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 13), Gauge32()).setUnits('centivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwarePs2Voltage3v.setStatus('current')
alHardwarePs2Voltage3vAlarm = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwarePs2Voltage3vAlarm.setStatus('current')
alHardwarePs2Voltage3vCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwarePs2Voltage3vCount.setStatus('current')
alHardwarePs2Voltage3vTime = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 16), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwarePs2Voltage3vTime.setStatus('current')
alHardwarePs2Voltage5v = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 17), Gauge32()).setUnits('centivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwarePs2Voltage5v.setStatus('current')
alHardwarePs2Voltage5vAlarm = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwarePs2Voltage5vAlarm.setStatus('current')
alHardwarePs2Voltage5vCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwarePs2Voltage5vCount.setStatus('current')
alHardwarePs2Voltage5vTime = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 20), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwarePs2Voltage5vTime.setStatus('current')
alHardwareBoardVoltage3v = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 21), Gauge32()).setUnits('centivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareBoardVoltage3v.setStatus('current')
alHardwareBoardVoltage3vAlarm = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareBoardVoltage3vAlarm.setStatus('current')
alHardwareBoardVoltage3vCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareBoardVoltage3vCount.setStatus('current')
alHardwareBoardVoltage3vTime = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 24), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareBoardVoltage3vTime.setStatus('current')
alHardwareBoardVoltage5v = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 25), Gauge32()).setUnits('centivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareBoardVoltage5v.setStatus('current')
alHardwareBoardVoltage5vAlarm = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 26), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareBoardVoltage5vAlarm.setStatus('current')
alHardwareBoardVoltage5vCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareBoardVoltage5vCount.setStatus('current')
alHardwareBoardVoltage5vTime = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 28), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareBoardVoltage5vTime.setStatus('current')
alHardwareCpuTemp = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, 120))).setUnits('degrees Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareCpuTemp.setStatus('current')
alHardwareCpuTempAlarm = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 30), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareCpuTempAlarm.setStatus('current')
alHardwareCpuTempCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareCpuTempCount.setStatus('current')
alHardwareCpuTempTime = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 32), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareCpuTempTime.setStatus('current')
alHardwareCageTemp = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, 120))).setUnits('degrees Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareCageTemp.setStatus('current')
alHardwareCageTempAlarm = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 34), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareCageTempAlarm.setStatus('current')
alHardwareCageTempCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareCageTempCount.setStatus('current')
alHardwareCageTempTime = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 36), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareCageTempTime.setStatus('current')
alHardwareFan1Rpm = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 37), Gauge32()).setUnits('RPM').setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareFan1Rpm.setStatus('current')
alHardwareFan1RpmAlarm = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 38), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareFan1RpmAlarm.setStatus('current')
alHardwareFan1RpmCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareFan1RpmCount.setStatus('current')
alHardwareFan1RpmTime = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 40), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareFan1RpmTime.setStatus('current')
alHardwareFan2Rpm = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 41), Gauge32()).setUnits('RPM').setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareFan2Rpm.setStatus('current')
alHardwareFan2RpmAlarm = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 42), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareFan2RpmAlarm.setStatus('current')
alHardwareFan2RpmCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareFan2RpmCount.setStatus('current')
alHardwareFan2RpmTime = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 44), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareFan2RpmTime.setStatus('current')
alHardwareFan3Rpm = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 45), Gauge32()).setUnits('RPM').setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareFan3Rpm.setStatus('current')
alHardwareFan3RpmAlarm = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 46), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareFan3RpmAlarm.setStatus('current')
alHardwareFan3RpmCount = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareFan3RpmCount.setStatus('current')
alHardwareFan3RpmTime = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 48), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareFan3RpmTime.setStatus('current')
alHardwarePs1Type = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("ac", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwarePs1Type.setStatus('current')
alHardwarePs2Type = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("ac", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwarePs2Type.setStatus('current')
alHardwareSlot1Card = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 51), ConcentratorCard()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareSlot1Card.setStatus('current')
alHardwareSlot2Card = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 52), ConcentratorCard()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareSlot2Card.setStatus('current')
alHardwareSlot3Card = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 53), ConcentratorCard()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareSlot3Card.setStatus('current')
alHardwareSlot4Card = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 54), ConcentratorCard()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareSlot4Card.setStatus('current')
alHardwareSlot1Operational = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 55), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareSlot1Operational.setStatus('current')
alHardwareSlot2Operational = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 56), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareSlot2Operational.setStatus('current')
alHardwareSlot3Operational = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 57), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareSlot3Operational.setStatus('current')
alHardwareSlot4Operational = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 58), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareSlot4Operational.setStatus('current')
alHardwareRamSize = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 59), Unsigned32()).setUnits('MB').setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareRamSize.setStatus('current')
alHardwareChassis = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 60), ConcentratorType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareChassis.setStatus('current')
alHardwareCpuVoltageNominal = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 61), Gauge32()).setUnits('centivolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareCpuVoltageNominal.setStatus('current')
alHardwareClientEthPrivSwitch = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 62), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareClientEthPrivSwitch.setStatus('current')
alHardwareSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 3076, 2, 1, 2, 22, 1, 63), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHardwareSerialNumber.setStatus('current')
altigaHardwareStatsMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 1, 1, 27, 2, 1))
altigaHardwareStatsMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 3076, 1, 1, 27, 2, 1, 1))
altigaHardwareStatsMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 3076, 1, 1, 27, 2, 1, 1, 1)).setObjects(("ALTIGA-HARDWARE-STATS-MIB", "altigaHardwareStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaHardwareStatsMibCompliance = altigaHardwareStatsMibCompliance.setStatus('current')
altigaHardwareStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3076, 2, 1, 1, 1, 22, 2)).setObjects(("ALTIGA-HARDWARE-STATS-MIB", "alHardwareCpuVoltage"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareCpuVoltageAlarm"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareCpuVoltageCount"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareCpuVoltageTime"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwarePs1Voltage3v"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwarePs1Voltage3vAlarm"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwarePs1Voltage3vCount"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwarePs1Voltage3vTime"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwarePs1Voltage5v"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwarePs1Voltage5vAlarm"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwarePs1Voltage5vCount"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwarePs1Voltage5vTime"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwarePs2Voltage3v"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwarePs2Voltage3vAlarm"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwarePs2Voltage3vCount"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwarePs2Voltage3vTime"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwarePs2Voltage5v"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwarePs2Voltage5vAlarm"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwarePs2Voltage5vCount"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwarePs2Voltage5vTime"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareBoardVoltage3v"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareBoardVoltage3vAlarm"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareBoardVoltage3vCount"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareBoardVoltage3vTime"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareBoardVoltage5v"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareBoardVoltage5vAlarm"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareBoardVoltage5vCount"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareBoardVoltage5vTime"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareCpuTemp"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareCpuTempAlarm"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareCpuTempCount"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareCpuTempTime"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareCageTemp"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareCageTempAlarm"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareCageTempCount"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareCageTempTime"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareFan1Rpm"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareFan1RpmAlarm"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareFan1RpmCount"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareFan1RpmTime"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareFan2Rpm"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareFan2RpmAlarm"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareFan2RpmCount"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareFan2RpmTime"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareFan3Rpm"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareFan3RpmAlarm"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareFan3RpmCount"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareFan3RpmTime"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwarePs1Type"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwarePs2Type"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareSlot1Card"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareSlot2Card"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareSlot3Card"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareSlot4Card"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareSlot1Operational"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareSlot2Operational"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareSlot3Operational"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareSlot4Operational"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareRamSize"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareChassis"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareCpuVoltageNominal"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareClientEthPrivSwitch"), ("ALTIGA-HARDWARE-STATS-MIB", "alHardwareSerialNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    altigaHardwareStatsGroup = altigaHardwareStatsGroup.setStatus('current')
mibBuilder.exportSymbols("ALTIGA-HARDWARE-STATS-MIB", alHardwareSerialNumber=alHardwareSerialNumber, alHardwarePs1Voltage5vCount=alHardwarePs1Voltage5vCount, alHardwareBoardVoltage5vTime=alHardwareBoardVoltage5vTime, alHardwarePs1Voltage3v=alHardwarePs1Voltage3v, alHardwareCpuTempAlarm=alHardwareCpuTempAlarm, alHardwareCageTempCount=alHardwareCageTempCount, alHardwareFan1RpmCount=alHardwareFan1RpmCount, alHardwareCageTempTime=alHardwareCageTempTime, alHardwareSlot2Card=alHardwareSlot2Card, alHardwareSlot4Card=alHardwareSlot4Card, alHardwareCageTemp=alHardwareCageTemp, alHardwareFan1RpmTime=alHardwareFan1RpmTime, PYSNMP_MODULE_ID=altigaHardwareStatsMibModule, alHardwareCpuVoltage=alHardwareCpuVoltage, alStatsHardwareGlobal=alStatsHardwareGlobal, alHardwarePs1Voltage3vTime=alHardwarePs1Voltage3vTime, alHardwarePs2Voltage3vCount=alHardwarePs2Voltage3vCount, alHardwarePs2Voltage3vTime=alHardwarePs2Voltage3vTime, alHardwareBoardVoltage5v=alHardwareBoardVoltage5v, alHardwareFan3RpmCount=alHardwareFan3RpmCount, alHardwareCpuVoltageNominal=alHardwareCpuVoltageNominal, alHardwarePs2Voltage5vCount=alHardwarePs2Voltage5vCount, alHardwareClientEthPrivSwitch=alHardwareClientEthPrivSwitch, alHardwareCpuTempTime=alHardwareCpuTempTime, alHardwareBoardVoltage3vAlarm=alHardwareBoardVoltage3vAlarm, alHardwareFan3Rpm=alHardwareFan3Rpm, alHardwareBoardVoltage3v=alHardwareBoardVoltage3v, alHardwareFan1RpmAlarm=alHardwareFan1RpmAlarm, alHardwareFan3RpmTime=alHardwareFan3RpmTime, alHardwarePs1Type=alHardwarePs1Type, alHardwareCageTempAlarm=alHardwareCageTempAlarm, alHardwarePs2Type=alHardwarePs2Type, alHardwareSlot2Operational=alHardwareSlot2Operational, alHardwareRamSize=alHardwareRamSize, alHardwareFan2RpmTime=alHardwareFan2RpmTime, alHardwarePs1Voltage5v=alHardwarePs1Voltage5v, alHardwareCpuTemp=alHardwareCpuTemp, alHardwareBoardVoltage5vAlarm=alHardwareBoardVoltage5vAlarm, alHardwareFan3RpmAlarm=alHardwareFan3RpmAlarm, alHardwarePs1Voltage3vAlarm=alHardwarePs1Voltage3vAlarm, alHardwareFan2Rpm=alHardwareFan2Rpm, ConcentratorCard=ConcentratorCard, alHardwareBoardVoltage3vCount=alHardwareBoardVoltage3vCount, alHardwareBoardVoltage3vTime=alHardwareBoardVoltage3vTime, alHardwareChassis=alHardwareChassis, altigaHardwareStatsMibConformance=altigaHardwareStatsMibConformance, alHardwarePs1Voltage3vCount=alHardwarePs1Voltage3vCount, alHardwarePs1Voltage5vAlarm=alHardwarePs1Voltage5vAlarm, alHardwarePs2Voltage5vAlarm=alHardwarePs2Voltage5vAlarm, ConcentratorType=ConcentratorType, alHardwareFan1Rpm=alHardwareFan1Rpm, alHardwareFan2RpmAlarm=alHardwareFan2RpmAlarm, altigaHardwareStatsMibModule=altigaHardwareStatsMibModule, altigaHardwareStatsMibCompliance=altigaHardwareStatsMibCompliance, alHardwareBoardVoltage5vCount=alHardwareBoardVoltage5vCount, alHardwareCpuVoltageCount=alHardwareCpuVoltageCount, alHardwareSlot4Operational=alHardwareSlot4Operational, alHardwareCpuVoltageAlarm=alHardwareCpuVoltageAlarm, alHardwareFan2RpmCount=alHardwareFan2RpmCount, alHardwareSlot1Operational=alHardwareSlot1Operational, alHardwarePs1Voltage5vTime=alHardwarePs1Voltage5vTime, alHardwareSlot1Card=alHardwareSlot1Card, altigaHardwareStatsGroup=altigaHardwareStatsGroup, alHardwarePs2Voltage3vAlarm=alHardwarePs2Voltage3vAlarm, altigaHardwareStatsMibCompliances=altigaHardwareStatsMibCompliances, alHardwareCpuTempCount=alHardwareCpuTempCount, alHardwarePs2Voltage3v=alHardwarePs2Voltage3v, alHardwareSlot3Operational=alHardwareSlot3Operational, alHardwarePs2Voltage5v=alHardwarePs2Voltage5v, alHardwareCpuVoltageTime=alHardwareCpuVoltageTime, alHardwareSlot3Card=alHardwareSlot3Card, alHardwarePs2Voltage5vTime=alHardwarePs2Voltage5vTime)
