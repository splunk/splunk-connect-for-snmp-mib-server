#
# PySNMP MIB module BW-BroadworksApplicationServer (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BW-BroadworksApplicationServer
# Produced by pysmi-0.3.4 at Mon Apr 29 17:24:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Counter32, Unsigned32, iso, Bits, TimeTicks, IpAddress, NotificationType, Gauge32, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, enterprises, Integer32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Unsigned32", "iso", "Bits", "TimeTicks", "IpAddress", "NotificationType", "Gauge32", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "enterprises", "Integer32", "ObjectIdentity")
DisplayString, DateAndTime, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "TextualConvention")
broadsoft = ModuleIdentity((1, 3, 6, 1, 4, 1, 6431))
broadsoft.setRevisions(('2005-08-16 10:00', '2004-12-20 00:00', '2004-06-22 00:00', '2003-09-20 00:00', '2002-06-12 00:00', '2002-01-24 00:00', '2001-07-12 11:59', '2001-07-26 10:48', '2001-07-12 12:00',))
if mibBuilder.loadTexts: broadsoft.setLastUpdated('200508161000Z')
if mibBuilder.loadTexts: broadsoft.setOrganization('Broadsoft, Inc')
broadworks = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1))
executionServer = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2))
provisioningServer = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6))
mgcpModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1))
mcpModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 3))
imsModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 4))
databaseModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5))
callpModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7))
smtpModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 8))
sipModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9))
services = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11))
mssModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 12))
nrsModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13))
pmtModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 15))
systemModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16))
management = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 17))
redundancyModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 18))
capModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19))
smdiModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 20))
mediaModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 21))
wspModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 22))
realtimeAccountingModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 23))
externalCallLogsModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 24))
commonCommModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 25))
tcpModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 26))
concurrentModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 27))
soapModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 28))
smppModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 29))
dnsModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 30))
bwAsMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000))
mgcpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1))
mcpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 3, 1))
imsStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 4, 1))
callpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1))
smtpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 8, 1))
sipStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1))
congestionManagement = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2))
capStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1))
smdiStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 20, 1))
mediaStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 21, 1))
wspStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 22, 1))
realtimeAccountingStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 23, 1))
externalCallLogsStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 24, 1))
commonCommStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 25, 1))
tcpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 26, 1))
concurrentStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 27, 1))
soapStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 28, 1))
smppStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 29, 1))
dnsStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 30, 1))
accountCodes = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1))
anonymousCallRejection = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 2))
authentication = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 3))
autoAttendant = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 4))
callCapacity = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 5))
callForwardingAlways = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6))
callForwardingBusy = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7))
callForwardingNoAnswer = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8))
callNotify = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 9))
callPark = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10))
callPickup = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 11))
callReturn = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 12))
commPilotCallManager = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13))
doNotDisturb = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 14))
flashCallTransfer = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 15))
flashCallWaiting = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 16))
flashConsultation = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 17))
flashThreeWayCall = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 18))
huntGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 19))
incomingCallingPlan = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20))
ipPhone = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 21))
lastNumberRedial = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 22))
outgoingCallingPlan = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23))
priorityAlert = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 24))
selectiveCallAcceptance = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 25))
selectiveCallForward = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 26))
selectiveCallRejection = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 27))
simRingPersonal = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 28))
voiceMessaging = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29))
seriesCompletion = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 30))
intercept = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31))
instantConferencing = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32))
callingLineIDDeliveryBlock = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 33))
sessionAudit = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34))
windowsMessaging = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 35))
callWaiting = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 36))
alternateNumbers = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 37))
cot = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 38))
sd8 = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 39))
musicOnHold = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 40))
callingNameRetrieval = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 41))
thirdPartyMWIControl = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 42))
callCenter = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 43))
callForwardGroupNoAnswer = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44))
sd100 = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 45))
thirdPartyVMail = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 46))
directedCallPickup = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 47))
flashCallHold = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 48))
emergencyZones = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 49))
dpubi = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50))
acb = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 51))
sequentialRing = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52))
ringTimeout = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 53))
videoAddOn = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54))
mct = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 55))
pushToTalk = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 56))
hoteling = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 57))
preferredCarrier = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58))
familySimRing = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 59))
diversionInhibitor = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 60))
instantGroupCall = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 61))
automaticHoldRetrieve = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 62))
trunkGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63))
customRingback = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64))
physicalLocation = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 65))
faxMessaging = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66))
externalemergencyrouting = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 67))
twoStageDialing = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 68))
callForwardingNotReachable = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69))
mwiDeliveryToMobile = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 70))
sharedCallAppearance = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 71))
externalCustomRingback = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 72))
inCallServiceActivation = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 73))
expensiveCallNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 74))
locationControl = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 75))
callRetrieve = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 76))
broadworksAnywhere = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 77))
mssStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 12, 1))
nrsStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1))
databaseStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1))
pmtStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 15, 1))
redundancyStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 18, 1))
psDatabaseModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1))
psOssModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 2))
psNSSyncModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 3))
psOAMModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 4))
ldapModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 5))
cpeDevicesModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 6))
psExternalCallLogsModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 7))
psOciModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8))
psSystemModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9))
psCommonCommModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 10))
psTcpModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 11))
psConcurrentModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 12))
psActivatableFeatureModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 13))
psShInterfaceModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 14))
psServices = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15))
psReservedModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 999))
psVoiceMessaging = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 1))
polycomPhoneServices = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 2))
psDatabaseStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1))
psOssStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 2, 1))
psNSSyncStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 3, 1))
psOAMStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 4, 1))
cpeDevicesStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 6, 1))
psExternalCallLogsStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 7, 1))
psOciStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1))
psInternalStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1))
psCommonCommStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 10, 1))
psTcpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 11, 1))
psConcurrentStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 12, 1))
psActivatableFeatureStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 13, 1))
psShInterfaceStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 14, 1))
bwDnsQueryTimeMax = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 30, 1, 1), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDnsQueryTimeMax.setStatus('current')
bwDnsQueryTimeMaxTimestampMSB = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 30, 1, 2), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDnsQueryTimeMaxTimestampMSB.setStatus('current')
bwDnsQueryTimeMaxTimestampLSB = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 30, 1, 3), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDnsQueryTimeMaxTimestampLSB.setStatus('current')
bwDnsQueryTimeAvg = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 30, 1, 4), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDnsQueryTimeAvg.setStatus('current')
bwDnsStatsQueriesTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 30, 1, 5), )
if mibBuilder.loadTexts: bwDnsStatsQueriesTable.setStatus('current')
bwDnsStatsQueriesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 30, 1, 5, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwDnsStatsQueryIndex"))
if mibBuilder.loadTexts: bwDnsStatsQueriesEntry.setStatus('current')
bwDnsStatsQueryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 30, 1, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDnsStatsQueryIndex.setStatus('current')
bwDnsStatsQueryType = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 30, 1, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDnsStatsQueryType.setStatus('current')
bwDnsStatsQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 30, 1, 5, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDnsStatsQueries.setStatus('current')
bwDnsStatsQueryTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 30, 1, 5, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDnsStatsQueryTimeouts.setStatus('current')
bwMGCPStatsMGCPCommandOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsMGCPCommandOuts.setStatus('current')
bwMGCPStatsMGCPCommandIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsMGCPCommandIns.setStatus('current')
bwMGCPStatsMGCPResponseOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsMGCPResponseOuts.setStatus('current')
bwMGCPStatsMGCPResponseIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsMGCPResponseIns.setStatus('current')
bwMGCPStatsAuditConnectionOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsAuditConnectionOuts.setStatus('current')
bwMGCPStatsAuditEndpointOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsAuditEndpointOuts.setStatus('current')
bwMGCPStatsCreateConnectionOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsCreateConnectionOuts.setStatus('current')
bwMGCPStatsDeleteAgentConnectionOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsDeleteAgentConnectionOuts.setStatus('current')
bwMGCPStatsDeleteConnectionOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsDeleteConnectionOuts.setStatus('current')
bwMGCPStatsDeleteGatewayConnectionIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsDeleteGatewayConnectionIns.setStatus('current')
bwMGCPStatsEndpointConfigurationOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsEndpointConfigurationOuts.setStatus('current')
bwMGCPStatsExtraCommandOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsExtraCommandOuts.setStatus('current')
bwMGCPStatsModifyConnectionOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsModifyConnectionOuts.setStatus('current')
bwMGCPStatsNotificationRequestOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 14), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsNotificationRequestOuts.setStatus('current')
bwMGCPStatsNotifyIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 15), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsNotifyIns.setStatus('current')
bwMGCPStatsRestartInProgressIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsRestartInProgressIns.setStatus('current')
bwMGCPStatsMGCPCommandResponseTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 17), )
if mibBuilder.loadTexts: bwMGCPStatsMGCPCommandResponseTable.setStatus('current')
bwMGCPStatsMGCPCommandResponseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 17, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwMGCPStatsMGCPCommandResponseCodeValue"))
if mibBuilder.loadTexts: bwMGCPStatsMGCPCommandResponseEntry.setStatus('current')
bwMGCPStatsMGCPCommandResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwMGCPStatsMGCPCommandResponseCodeValue.setStatus('current')
bwMGCPStatsMGCPCommandResponseOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 17, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsMGCPCommandResponseOuts.setStatus('current')
bwMGCPStatsMGCPCommandResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 17, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsMGCPCommandResponseIns.setStatus('current')
bwMGCPStatsAuditConnectionResponseTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 18), )
if mibBuilder.loadTexts: bwMGCPStatsAuditConnectionResponseTable.setStatus('current')
bwMGCPStatsAuditConnectionResponseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 18, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwMGCPStatsAuditConnectionResponseCodeValue"))
if mibBuilder.loadTexts: bwMGCPStatsAuditConnectionResponseEntry.setStatus('current')
bwMGCPStatsAuditConnectionResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 18, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwMGCPStatsAuditConnectionResponseCodeValue.setStatus('current')
bwMGCPStatsAuditConnectionResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 18, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsAuditConnectionResponseIns.setStatus('current')
bwMGCPStatsAuditEndpointResponseTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 19), )
if mibBuilder.loadTexts: bwMGCPStatsAuditEndpointResponseTable.setStatus('current')
bwMGCPStatsAuditEndpointResponseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 19, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwMGCPStatsAuditEndpointResponseCodeValue"))
if mibBuilder.loadTexts: bwMGCPStatsAuditEndpointResponseEntry.setStatus('current')
bwMGCPStatsAuditEndpointResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwMGCPStatsAuditEndpointResponseCodeValue.setStatus('current')
bwMGCPStatsAuditEndpointResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 19, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsAuditEndpointResponseIns.setStatus('current')
bwMGCPStatsCreateConnectionResponseTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 20), )
if mibBuilder.loadTexts: bwMGCPStatsCreateConnectionResponseTable.setStatus('current')
bwMGCPStatsCreateConnectionResponseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 20, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwMGCPStatsCreateConnectionResponseCodeValue"))
if mibBuilder.loadTexts: bwMGCPStatsCreateConnectionResponseEntry.setStatus('current')
bwMGCPStatsCreateConnectionResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwMGCPStatsCreateConnectionResponseCodeValue.setStatus('current')
bwMGCPStatsCreateConnectionResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 20, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsCreateConnectionResponseIns.setStatus('current')
bwMGCPStatsDeleteConnectionResponseTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 21), )
if mibBuilder.loadTexts: bwMGCPStatsDeleteConnectionResponseTable.setStatus('current')
bwMGCPStatsDeleteConnectionResponseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 21, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwMGCPStatsDeleteConnectionResponseCodeValue"))
if mibBuilder.loadTexts: bwMGCPStatsDeleteConnectionResponseEntry.setStatus('current')
bwMGCPStatsDeleteConnectionResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwMGCPStatsDeleteConnectionResponseCodeValue.setStatus('current')
bwMGCPStatsDeleteAgentConnectionResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 21, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsDeleteAgentConnectionResponseIns.setStatus('current')
bwMGCPStatsDeleteConnectionResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 21, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsDeleteConnectionResponseIns.setStatus('current')
bwMGCPStatsDeleteGatewayConnectionResponseOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 21, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsDeleteGatewayConnectionResponseOuts.setStatus('current')
bwMGCPStatsEndpointConfigurationResponseTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 22), )
if mibBuilder.loadTexts: bwMGCPStatsEndpointConfigurationResponseTable.setStatus('current')
bwMGCPStatsEndpointConfigurationResponseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 22, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwMGCPStatsEndpointConfigurationResponseCodeValue"))
if mibBuilder.loadTexts: bwMGCPStatsEndpointConfigurationResponseEntry.setStatus('current')
bwMGCPStatsEndpointConfigurationResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwMGCPStatsEndpointConfigurationResponseCodeValue.setStatus('current')
bwMGCPStatsEndpointConfigurationResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 22, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsEndpointConfigurationResponseIns.setStatus('current')
bwMGCPStatsExtraCommandResponseTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 23), )
if mibBuilder.loadTexts: bwMGCPStatsExtraCommandResponseTable.setStatus('current')
bwMGCPStatsExtraCommandResponseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 23, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwMGCPStatsExtraCommandResponseCodeValue"))
if mibBuilder.loadTexts: bwMGCPStatsExtraCommandResponseEntry.setStatus('current')
bwMGCPStatsExtraCommandResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwMGCPStatsExtraCommandResponseCodeValue.setStatus('current')
bwMGCPStatsExtraCommandResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 23, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsExtraCommandResponseIns.setStatus('current')
bwMGCPStatsModifyConnectionResponseTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 24), )
if mibBuilder.loadTexts: bwMGCPStatsModifyConnectionResponseTable.setStatus('current')
bwMGCPStatsModifyConnectionResponseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 24, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwMGCPStatsModifyConnectionResponseCodeValue"))
if mibBuilder.loadTexts: bwMGCPStatsModifyConnectionResponseEntry.setStatus('current')
bwMGCPStatsModifyConnectionResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 24, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwMGCPStatsModifyConnectionResponseCodeValue.setStatus('current')
bwMGCPStatsModifyConnectionResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 24, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsModifyConnectionResponseIns.setStatus('current')
bwMGCPStatsNotificationRequestResponseTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 25), )
if mibBuilder.loadTexts: bwMGCPStatsNotificationRequestResponseTable.setStatus('current')
bwMGCPStatsNotificationRequestResponseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 25, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwMGCPStatsNotificationRequestResponseCodeValue"))
if mibBuilder.loadTexts: bwMGCPStatsNotificationRequestResponseEntry.setStatus('current')
bwMGCPStatsNotificationRequestResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwMGCPStatsNotificationRequestResponseCodeValue.setStatus('current')
bwMGCPStatsNotificationRequestResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 25, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsNotificationRequestResponseIns.setStatus('current')
bwMGCPStatsNotifyResponseTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 26), )
if mibBuilder.loadTexts: bwMGCPStatsNotifyResponseTable.setStatus('current')
bwMGCPStatsNotifyResponseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 26, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwMGCPStatsNotifyResponseCodeValue"))
if mibBuilder.loadTexts: bwMGCPStatsNotifyResponseEntry.setStatus('current')
bwMGCPStatsNotifyResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwMGCPStatsNotifyResponseCodeValue.setStatus('current')
bwMGCPStatsNotifyResponseOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 26, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsNotifyResponseOuts.setStatus('current')
bwMGCPStatsRestartInProgressResponseTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 27), )
if mibBuilder.loadTexts: bwMGCPStatsRestartInProgressResponseTable.setStatus('current')
bwMGCPStatsRestartInProgressResponseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 27, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwMGCPStatsRestartInProgressResponseCodeValue"))
if mibBuilder.loadTexts: bwMGCPStatsRestartInProgressResponseEntry.setStatus('current')
bwMGCPStatsRestartInProgressResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 27, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwMGCPStatsRestartInProgressResponseCodeValue.setStatus('current')
bwMGCPStatsRestartInProgressResponseOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 27, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsRestartInProgressResponseOuts.setStatus('current')
bwMGCPStatsDialToneDelay = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 28), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsDialToneDelay.setStatus('current')
bwMGCPStatsMinDialToneDelay = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 29), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsMinDialToneDelay.setStatus('current')
bwMGCPStatsMaxDialToneDelay = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 30), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsMaxDialToneDelay.setStatus('current')
bwMGCPStatsSetupSignalDelay = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 31), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsSetupSignalDelay.setStatus('current')
bwMGCPStatsMinSetupSignalDelay = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 32), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsMinSetupSignalDelay.setStatus('current')
bwMGCPStatsMaxSetupSignalDelay = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 33), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsMaxSetupSignalDelay.setStatus('current')
bwMGCPStatsAnswerSignalDelay = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 34), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsAnswerSignalDelay.setStatus('current')
bwMGCPStatsMinAnswerSignalDelay = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 35), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsMinAnswerSignalDelay.setStatus('current')
bwMGCPStatsMaxAnswerSignalDelay = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 36), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMGCPStatsMaxAnswerSignalDelay.setStatus('current')
bwMGCPStatsMessageRetryPercentage = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwMGCPStatsMessageRetryPercentage.setStatus('current')
bwMCPCommandsTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 3, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMCPCommandsTransmitted.setStatus('obsolete')
bwMCPCommandsRetransmitted = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 3, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMCPCommandsRetransmitted.setStatus('obsolete')
bwMCPNotificationsReceived = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMCPNotificationsReceived.setStatus('obsolete')
bwMCPResourceAllocAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMCPResourceAllocAttempts.setStatus('obsolete')
bwMCPResourceAllocFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 3, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMCPResourceAllocFailures.setStatus('obsolete')
bwIMSSuccessfulConnectionAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 4, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwIMSSuccessfulConnectionAttempts.setStatus('current')
bwIMSUnsuccessfulConnectionAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 4, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwIMSUnsuccessfulConnectionAttempts.setStatus('current')
bwIMSSuccessfulDownLoadAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwIMSSuccessfulDownLoadAttempts.setStatus('current')
bwIMSUnsuccessfulDownLoadAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwIMSUnsuccessfulDownLoadAttempts.setStatus('current')
bwIMSMaxSessions = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwIMSMaxSessions.setStatus('current')
bwIMSAvgSessions = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwIMSAvgSessions.setStatus('current')
bwIMSMaxThreads = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwIMSMaxThreads.setStatus('current')
bwIMSAvgThreads = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 4, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwIMSAvgThreads.setStatus('current')
bwIMSMaxServiceTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 4, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwIMSMaxServiceTime.setStatus('current')
bwIMSAvgServiceTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 4, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwIMSAvgServiceTime.setStatus('current')
bwIMSNumKeepAlive = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 4, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwIMSNumKeepAlive.setStatus('current')
bwIMSNumDroppedRequests = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 4, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwIMSNumDroppedRequests.setStatus('current')
bwCAPStatsRegisterRequests = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsRegisterRequests.setStatus('current')
bwCAPStatsUnRegistersIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsUnRegistersIn.setStatus('current')
bwCAPStatsUnRegistersOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsUnRegistersOut.setStatus('current')
bwCAPStatsSessionUpdatesOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsSessionUpdatesOut.setStatus('current')
bwCAPStatsProfileUpdatesOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsProfileUpdatesOut.setStatus('current')
bwCAPStatsCallUpdatesOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsCallUpdatesOut.setStatus('current')
bwCAPStatsCallActionsIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsCallActionsIn.setStatus('current')
bwCAPStatsAcknowledgementsIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsAcknowledgementsIn.setStatus('current')
bwCAPStatsAcknowledgementsOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsAcknowledgementsOut.setStatus('obsolete')
bwCAPStatsAclViolations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsAclViolations.setStatus('current')
bwCAPStatsUnsuccessfulRegisterResponses = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsUnsuccessfulRegisterResponses.setStatus('current')
bwCAPStatsRegisterResponsesTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 12), )
if mibBuilder.loadTexts: bwCAPStatsRegisterResponsesTable.setStatus('current')
bwCAPStatsCallControlInfosOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsCallControlInfosOut.setStatus('current')
bwCAPStatsRegisterAuthentications = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 14), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsRegisterAuthentications.setStatus('current')
bwCAPStatsResponseAuthentications = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 15), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsResponseAuthentications.setStatus('current')
bwCAPStatsInfoRequests = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 16), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsInfoRequests.setStatus('current')
bwCAPStatsInfoResponses = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 17), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsInfoResponses.setStatus('current')
bwCAPStatsExternalNotifies = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 18), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsExternalNotifies.setStatus('current')
bwCAPMonitoringUsersRequests = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 19), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPMonitoringUsersRequests.setStatus('current')
bwCAPMonitoringUsersResponses = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 20), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPMonitoringUsersResponses.setStatus('current')
bwCAPStatsQueueUpdatesOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 21), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsQueueUpdatesOut.setStatus('current')
bwCAPStatsQueueActionsIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 22), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsQueueActionsIn.setStatus('current')
bwCAPStatsDatagramsIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 23), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsDatagramsIn.setStatus('current')
bwCAPStatsDatagramsOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 24), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsDatagramsOut.setStatus('current')
bwCAPStatsTotalMsgs = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 25), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsTotalMsgs.setStatus('current')
bwCAPStatsRegisterResponsesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 12, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCAPStatsRegisterResponsesType"))
if mibBuilder.loadTexts: bwCAPStatsRegisterResponsesEntry.setStatus('current')
bwCAPStatsRegisterResponsesType = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 12, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCAPStatsRegisterResponsesType.setStatus('current')
bwCAPStatsRegisterResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 19, 1, 12, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCAPStatsRegisterResponses.setStatus('current')
bwSmdiNbOfActiveConnection = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 20, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSmdiNbOfActiveConnection.setStatus('current')
bwSmdiNbOfOpenedConnection = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 20, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSmdiNbOfOpenedConnection.setStatus('current')
bwSmdiIncomingMWIActivationRequests = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 20, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSmdiIncomingMWIActivationRequests.setStatus('current')
bwSmdiIncomingMWIDesactivationRequests = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 20, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSmdiIncomingMWIDesactivationRequests.setStatus('current')
bwSmdiInvalidRequestsReceived = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 20, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSmdiInvalidRequestsReceived.setStatus('current')
bwSmdiBlockResponsesSent = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 20, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSmdiBlockResponsesSent.setStatus('current')
bwSmdiInvalidResponsesSent = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 20, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSmdiInvalidResponsesSent.setStatus('current')
bwSmdiOutgoingMWIActivationRequests = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 20, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSmdiOutgoingMWIActivationRequests.setStatus('current')
bwSmdiOutgoingMWIDeactivationRequests = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 20, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSmdiOutgoingMWIDeactivationRequests.setStatus('current')
bwSmdiBlockResponsesReceived = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 20, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSmdiBlockResponsesReceived.setStatus('current')
bwSmdiInvalidResponsesReceived = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 20, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSmdiInvalidResponsesReceived.setStatus('current')
bwSMDIMessageDeskMessageSent = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 20, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSMDIMessageDeskMessageSent.setStatus('current')
bwMediaCommandsTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 21, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMediaCommandsTransmitted.setStatus('current')
bwMediaNotificationsReceived = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 21, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMediaNotificationsReceived.setStatus('current')
bwMediaResourceAllocAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 21, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMediaResourceAllocAttempts.setStatus('current')
bwMediaResourceAllocFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 21, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMediaResourceAllocFailures.setStatus('current')
bwWSPStatsServiceRequestsIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 22, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwWSPStatsServiceRequestsIn.setStatus('current')
bwWSPStatsServiceActionsOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 22, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwWSPStatsServiceActionsOut.setStatus('current')
bwWSPStatsServiceUpdatesIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 22, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwWSPStatsServiceUpdatesIn.setStatus('current')
bwWSPStatsServiceAcknowledgementsOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 22, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwWSPStatsServiceAcknowledgementsOut.setStatus('current')
bwRealtimeAccountingRequestsTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 23, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwRealtimeAccountingRequestsTransmitted.setStatus('current')
bwRealtimeAccountingRequestsRetransmitted = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 23, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwRealtimeAccountingRequestsRetransmitted.setStatus('current')
bwRealtimeAccountingRequestsDropped = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 23, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwRealtimeAccountingRequestsDropped.setStatus('current')
bwExternalCallLogsTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 24, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwExternalCallLogsTransmitted.setStatus('current')
bwExternalCallLogsRetransmitted = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 24, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwExternalCallLogsRetransmitted.setStatus('current')
bwExternalCallLogsDropped = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 24, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwExternalCallLogsDropped.setStatus('current')
bwExternalCallLogsQueued = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 24, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwExternalCallLogsQueued.setStatus('current')
bwExternalCallLogsTransmittedFromQueue = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 24, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwExternalCallLogsTransmittedFromQueue.setStatus('current')
bwExternalCallLogsRetransmittedFromQueue = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 24, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwExternalCallLogsRetransmittedFromQueue.setStatus('current')
bwCommonCommXSStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 25, 1, 1), )
if mibBuilder.loadTexts: bwCommonCommXSStatsTable.setStatus('current')
bwCommonCommXSStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 25, 1, 1, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCommonCommXSStatsIndex"))
if mibBuilder.loadTexts: bwCommonCommXSStatsEntry.setStatus('current')
bwCommonCommXSStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 25, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCommonCommXSStatsIndex.setStatus('current')
bwCommonCommXSHost = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 25, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCommonCommXSHost.setStatus('current')
bwCommonCommXSInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 25, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCommonCommXSInterface.setStatus('current')
bwCommonCommXSProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 25, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCommonCommXSProtocol.setStatus('current')
bwCommonCommXSAcceptedOutboundConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 25, 1, 1, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommonCommXSAcceptedOutboundConnections.setStatus('current')
bwCommonCommXSAcceptedInboundConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 25, 1, 1, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommonCommXSAcceptedInboundConnections.setStatus('current')
bwCommonCommXSRejectedOutboundConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 25, 1, 1, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommonCommXSRejectedOutboundConnections.setStatus('current')
bwCommonCommXSRejectedInboundConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 25, 1, 1, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommonCommXSRejectedInboundConnections.setStatus('current')
bwCommonCommXSOutputMessagesProcessed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 25, 1, 1, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommonCommXSOutputMessagesProcessed.setStatus('current')
bwCommonCommXSInputMessagesProcessed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 25, 1, 1, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommonCommXSInputMessagesProcessed.setStatus('current')
bwCommonCommXSOutputCommunicationErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 25, 1, 1, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommonCommXSOutputCommunicationErrors.setStatus('current')
bwCommonCommXSInputCommunicationErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 25, 1, 1, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommonCommXSInputCommunicationErrors.setStatus('current')
bwXSMonitoringExecutorTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 27, 1, 1), )
if mibBuilder.loadTexts: bwXSMonitoringExecutorTable.setStatus('current')
bwXSMonitoringExecutorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 27, 1, 1, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwXSMonitoringExecutorIndex"))
if mibBuilder.loadTexts: bwXSMonitoringExecutorEntry.setStatus('current')
bwXSMonitoringExecutorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 27, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXSMonitoringExecutorIndex.setStatus('current')
bwXSMonitoringExecutorName = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 27, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXSMonitoringExecutorName.setStatus('current')
bwXSMonitoringExecutorCurrentPoolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 27, 1, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXSMonitoringExecutorCurrentPoolSize.setStatus('current')
bwXSMonitoringExecutorMaxPoolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 27, 1, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXSMonitoringExecutorMaxPoolSize.setStatus('current')
bwXSMonitoringExecutorAvgActiveThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 27, 1, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXSMonitoringExecutorAvgActiveThreads.setStatus('current')
bwXSMonitoringExecutorTaskQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 27, 1, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXSMonitoringExecutorTaskQueueSize.setStatus('current')
bwXSMonitoringExecutorNbTasksRun = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 27, 1, 1, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXSMonitoringExecutorNbTasksRun.setStatus('current')
bwXSMonitoringExecutorNbWarnings = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 27, 1, 1, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXSMonitoringExecutorNbWarnings.setStatus('current')
bwXSMonitoringExecutorNbErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 27, 1, 1, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXSMonitoringExecutorNbErrors.setStatus('current')
bwXSMonitoringExecutorLongestTaskMs = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 27, 1, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXSMonitoringExecutorLongestTaskMs.setStatus('current')
bwXSMonitoringExecutorLongestTaskName = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 27, 1, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXSMonitoringExecutorLongestTaskName.setStatus('current')
bwXSTcpServersStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 26, 1, 1), )
if mibBuilder.loadTexts: bwXSTcpServersStatsTable.setStatus('current')
bwXSTcpServersStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 26, 1, 1, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwXSTcpServersStatsIndex"))
if mibBuilder.loadTexts: bwXSTcpServersStatsEntry.setStatus('current')
bwXSTcpServersStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 26, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXSTcpServersStatsIndex.setStatus('current')
bwXSTcpServersName = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 26, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXSTcpServersName.setStatus('current')
bwXSTcpServersNbConnectionsAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 26, 1, 1, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXSTcpServersNbConnectionsAccepted.setStatus('current')
bwXSTcpServersNbConnectionsRefused = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 26, 1, 1, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXSTcpServersNbConnectionsRefused.setStatus('current')
bwXSTcpServersNbConnectionsInitiated = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 26, 1, 1, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXSTcpServersNbConnectionsInitiated.setStatus('current')
bwXSTcpServersNbConnectionsClosed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 26, 1, 1, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXSTcpServersNbConnectionsClosed.setStatus('current')
bwXSTcpServersNbBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 26, 1, 1, 1, 7), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXSTcpServersNbBytesSent.setStatus('current')
bwXSTcpServersNbBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 26, 1, 1, 1, 8), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXSTcpServersNbBytesReceived.setStatus('current')
bwXSTcpServersOutgoingQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 26, 1, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXSTcpServersOutgoingQueueSize.setStatus('current')
bwXSTcpServersIncomingQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 26, 1, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXSTcpServersIncomingQueueSize.setStatus('current')
bwXSTcpServersNbBytesSentSecure = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 26, 1, 1, 1, 11), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXSTcpServersNbBytesSentSecure.setStatus('current')
bwXSTcpServersNbBytesReceivedSecure = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 26, 1, 1, 1, 12), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXSTcpServersNbBytesReceivedSecure.setStatus('current')
bwSOAPMaxSessions = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 28, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSOAPMaxSessions.setStatus('current')
bwSOAPAvgSessions = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 28, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSOAPAvgSessions.setStatus('current')
bwSOAPMaxThreads = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 28, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSOAPMaxThreads.setStatus('current')
bwSOAPAvgThreads = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 28, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSOAPAvgThreads.setStatus('current')
bwSOAPMaxServiceTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 28, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSOAPMaxServiceTime.setStatus('current')
bwSOAPAvgServiceTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 28, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSOAPAvgServiceTime.setStatus('current')
bwSOAPNumDroppedRequests = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 28, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSOAPNumDroppedRequests.setStatus('current')
bwSmppSubmitSMRequestsSent = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 29, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSmppSubmitSMRequestsSent.setStatus('current')
bwSmppInvalidSubmitSMResponsesReceived = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 29, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSmppInvalidSubmitSMResponsesReceived.setStatus('current')
bwSmppSubmitSMResponseTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 29, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSmppSubmitSMResponseTimeout.setStatus('current')
bwCPEDeviceStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 6, 6, 1, 1), )
if mibBuilder.loadTexts: bwCPEDeviceStatsTable.setStatus('current')
bwCPEDeviceStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 6, 6, 1, 1, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCPEDeviceStatsIndex"))
if mibBuilder.loadTexts: bwCPEDeviceStatsEntry.setStatus('current')
bwCPEDeviceStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 6, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCPEDeviceStatsIndex.setStatus('current')
bwCPEDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 6, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCPEDeviceName.setStatus('current')
bwCPEDeviceReset = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 6, 1, 1, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCPEDeviceReset.setStatus('current')
bwCPEDeviceFileRebuilt = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 6, 1, 1, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCPEDeviceFileRebuilt.setStatus('current')
bwCPEDeviceFileGet = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 6, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCPEDeviceFileGet.setStatus('current')
bwCPEDeviceFileDelete = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 6, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCPEDeviceFileDelete.setStatus('current')
bwCPEDeviceFilePut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 6, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCPEDeviceFilePut.setStatus('current')
bwCallpNetworkOriginationAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpNetworkOriginationAttempts.setStatus('current')
bwCallpNetworkTerminationAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpNetworkTerminationAttempts.setStatus('current')
bwCallpNetworkTerminationsAnswered = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpNetworkTerminationsAnswered.setStatus('current')
bwCallpUserOriginationAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpUserOriginationAttempts.setStatus('current')
bwCallpUserTerminationAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpUserTerminationAttempts.setStatus('current')
bwCallpUserTerminationsAnswered = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpUserTerminationsAnswered.setStatus('current')
bwCallpEmergencyCallAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpEmergencyCallAttempts.setStatus('current')
bwCallpEmergencyCallAlarms = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpEmergencyCallAlarms.setStatus('current')
bwCallpSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 9), )
if mibBuilder.loadTexts: bwCallpSPTable.setStatus('current')
bwCallpActiveCalls = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallpActiveCalls.setStatus('current')
bwCallpGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 11), )
if mibBuilder.loadTexts: bwCallpGroupTable.setStatus('current')
bwCallpCallsPerSecond = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallpCallsPerSecond.setStatus('current')
bwCallpMaximumNumberofSimCallsExceeded = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpMaximumNumberofSimCallsExceeded.setStatus('current')
bwCallpMaximumCallTimeforAnsweredCallsExceeded = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 14), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpMaximumCallTimeforAnsweredCallsExceeded.setStatus('current')
bwCallpMaximumCallTimeforUnansweredCallsExceeded = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 15), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpMaximumCallTimeforUnansweredCallsExceeded.setStatus('current')
bwCallpActiveCallsAsPercentOfLicense = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallpActiveCallsAsPercentOfLicense.setStatus('current')
bwCallpMaximumNumberofSimVideoCallsExceeded = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 17), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpMaximumNumberofSimVideoCallsExceeded.setStatus('current')
bwCallpMediaTypeNotSupported = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 18), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpMediaTypeNotSupported.setStatus('current')
bwCallpRemoteOfficeEmergencyCallsBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 19), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpRemoteOfficeEmergencyCallsBlocked.setStatus('current')
bwCallpSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 9, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallpSPIndex"))
if mibBuilder.loadTexts: bwCallpSPEntry.setStatus('current')
bwCallpSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 9, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallpSPIndex.setStatus('current')
bwCallpSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 9, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallpSPID.setStatus('current')
bwCallpSPUserOriginationAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 9, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpSPUserOriginationAttempts.setStatus('current')
bwCallpSPUserTerminationAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 9, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpSPUserTerminationAttempts.setStatus('current')
bwCallpSPUserTerminationsAnswered = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 9, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpSPUserTerminationsAnswered.setStatus('current')
bwCallpSPEmergencyCallAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 9, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpSPEmergencyCallAttempts.setStatus('current')
bwCallpSPMaximumNumberofSimCallsExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 9, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpSPMaximumNumberofSimCallsExceeded.setStatus('current')
bwCallpSPMaximumCallTimeforAnsweredCallsExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 9, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpSPMaximumCallTimeforAnsweredCallsExceeded.setStatus('current')
bwCallpSPMaximumCallTimeforUnansweredCallsExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 9, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpSPMaximumCallTimeforUnansweredCallsExceeded.setStatus('current')
bwCallpSPMaximumNumberofSimVideoCallsExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 9, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpSPMaximumNumberofSimVideoCallsExceeded.setStatus('current')
bwCallpSPMediaTypeNotSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 9, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpSPMediaTypeNotSupported.setStatus('current')
bwCallpGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 11, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallpGroupIndex"))
if mibBuilder.loadTexts: bwCallpGroupEntry.setStatus('current')
bwCallpGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 11, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallpGroupIndex.setStatus('current')
bwCallpGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallpGroupID.setStatus('current')
bwCallpGroupUserOriginationAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 11, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpGroupUserOriginationAttempts.setStatus('current')
bwCallpGroupUserTerminationAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 11, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpGroupUserTerminationAttempts.setStatus('current')
bwCallpGroupUserTerminationsAnswered = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 11, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpGroupUserTerminationsAnswered.setStatus('current')
bwCallpGroupEmergencyCallAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 11, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpGroupEmergencyCallAttempts.setStatus('current')
bwCallpGroupMaximumNumberofSimCallsExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 11, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpGroupMaximumNumberofSimCallsExceeded.setStatus('current')
bwCallpGroupMaximumCallTimeforAnsweredCallsExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 11, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpGroupMaximumCallTimeforAnsweredCallsExceeded.setStatus('current')
bwCallpGroupMaximumCallTimeforUnansweredCallsExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 11, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpGroupMaximumCallTimeforUnansweredCallsExceeded.setStatus('current')
bwCallpGroupMaximumNumberofSimVideoCallsExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 11, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpGroupMaximumNumberofSimVideoCallsExceeded.setStatus('current')
bwCallpGroupMediaTypeNotSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 7, 1, 11, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallpGroupMediaTypeNotSupported.setStatus('current')
bwSMTPTotalPrimaryEmailSendAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 8, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSMTPTotalPrimaryEmailSendAttempts.setStatus('current')
bwSMTPTotalSecondaryEmailSendAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 8, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSMTPTotalSecondaryEmailSendAttempts.setStatus('current')
bwSMTPPrimaryUnSuccessfulEmailSendAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 8, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSMTPPrimaryUnSuccessfulEmailSendAttempts.setStatus('current')
bwSMTPSecondaryUnSuccessfulEmailSendAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 8, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSMTPSecondaryUnSuccessfulEmailSendAttempts.setStatus('current')
bwSipSummaryTotalTransactions = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipSummaryTotalTransactions.setStatus('current')
bwSipStatsInviteIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsInviteIns.setStatus('current')
bwSipStatsInviteOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsInviteOuts.setStatus('current')
bwSipStatsAckIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsAckIns.setStatus('current')
bwSipStatsAckOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsAckOuts.setStatus('current')
bwSipStatsByeIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsByeIns.setStatus('current')
bwSipStatsByeOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsByeOuts.setStatus('current')
bwSipStatsCancelIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsCancelIns.setStatus('current')
bwSipStatsCancelOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsCancelOuts.setStatus('current')
bwSipStatsOptionsIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsOptionsIns.setStatus('current')
bwSipStatsOptionsOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsOptionsOuts.setStatus('current')
bwSipStatsRegisterIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsRegisterIns.setStatus('current')
bwSipStatsRegisterOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsRegisterOuts.setStatus('current')
bwSipStatsInfoIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 14), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsInfoIns.setStatus('current')
bwSipStatsInfoOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 15), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsInfoOuts.setStatus('current')
bwSipStatsNotifyIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 16), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsNotifyIns.setStatus('current')
bwSipStatsNotifyOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 17), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsNotifyOuts.setStatus('current')
bwSipStatsPrackIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 18), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsPrackIns.setStatus('current')
bwSipStatsPrackOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 19), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsPrackOuts.setStatus('current')
bwSipStatsOtherIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 20), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsOtherIns.setStatus('current')
bwSipStatsOtherOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 21), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsOtherOuts.setStatus('current')
bwSipStatsInviteResponsesTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 22), )
if mibBuilder.loadTexts: bwSipStatsInviteResponsesTable.setStatus('current')
bwSipStatsInviteResponsesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 22, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSipStatsInviteResponseCodeValue"))
if mibBuilder.loadTexts: bwSipStatsInviteResponsesEntry.setStatus('current')
bwSipStatsInviteResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwSipStatsInviteResponseCodeValue.setStatus('current')
bwSipStatsInviteResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 22, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsInviteResponseIns.setStatus('current')
bwSipStatsInviteResponseOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 22, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsInviteResponseOuts.setStatus('current')
bwSipStatsByeResponsesTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 23), )
if mibBuilder.loadTexts: bwSipStatsByeResponsesTable.setStatus('current')
bwSipStatsByeResponsesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 23, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSipStatsByeResponseCodeValue"))
if mibBuilder.loadTexts: bwSipStatsByeResponsesEntry.setStatus('current')
bwSipStatsByeResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwSipStatsByeResponseCodeValue.setStatus('current')
bwSipStatsByeResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 23, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsByeResponseIns.setStatus('current')
bwSipStatsByeResponseOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 23, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsByeResponseOuts.setStatus('current')
bwSipStatsCancelResponsesTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 24), )
if mibBuilder.loadTexts: bwSipStatsCancelResponsesTable.setStatus('current')
bwSipStatsCancelResponsesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 24, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSipStatsCancelResponseCodeValue"))
if mibBuilder.loadTexts: bwSipStatsCancelResponsesEntry.setStatus('current')
bwSipStatsCancelResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 24, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwSipStatsCancelResponseCodeValue.setStatus('current')
bwSipStatsCancelResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 24, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsCancelResponseIns.setStatus('current')
bwSipStatsCancelResponseOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 24, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsCancelResponseOuts.setStatus('current')
bwSipStatsOptionsResponsesTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 25), )
if mibBuilder.loadTexts: bwSipStatsOptionsResponsesTable.setStatus('current')
bwSipStatsOptionsResponsesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 25, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSipStatsOptionsResponseCodeValue"))
if mibBuilder.loadTexts: bwSipStatsOptionsResponsesEntry.setStatus('current')
bwSipStatsOptionsResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwSipStatsOptionsResponseCodeValue.setStatus('current')
bwSipStatsOptionsResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 25, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsOptionsResponseIns.setStatus('current')
bwSipStatsOptionsResponseOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 25, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsOptionsResponseOuts.setStatus('current')
bwSipStatsRegisterResponsesTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 26), )
if mibBuilder.loadTexts: bwSipStatsRegisterResponsesTable.setStatus('current')
bwSipStatsRegisterResponsesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 26, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSipStatsRegisterResponseCodeValue"))
if mibBuilder.loadTexts: bwSipStatsRegisterResponsesEntry.setStatus('current')
bwSipStatsRegisterResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwSipStatsRegisterResponseCodeValue.setStatus('current')
bwSipStatsRegisterResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 26, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsRegisterResponseIns.setStatus('current')
bwSipStatsRegisterResponseOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 26, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsRegisterResponseOuts.setStatus('current')
bwSipStatsPrackResponsesTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 27), )
if mibBuilder.loadTexts: bwSipStatsPrackResponsesTable.setStatus('current')
bwSipStatsPrackResponsesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 27, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSipStatsPrackResponseCodeValue"))
if mibBuilder.loadTexts: bwSipStatsPrackResponsesEntry.setStatus('current')
bwSipStatsPrackResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 27, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwSipStatsPrackResponseCodeValue.setStatus('current')
bwSipStatsPrackResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 27, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsPrackResponseIns.setStatus('current')
bwSipStatsPrackResponseOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 27, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsPrackResponseOuts.setStatus('current')
bwSipStatsInfoResponsesTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 28), )
if mibBuilder.loadTexts: bwSipStatsInfoResponsesTable.setStatus('current')
bwSipStatsInfoResponsesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 28, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSipStatsInfoResponseCodeValue"))
if mibBuilder.loadTexts: bwSipStatsInfoResponsesEntry.setStatus('current')
bwSipStatsInfoResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 28, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwSipStatsInfoResponseCodeValue.setStatus('current')
bwSipStatsInfoResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 28, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsInfoResponseIns.setStatus('current')
bwSipStatsInfoResponseOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 28, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsInfoResponseOuts.setStatus('current')
bwSipStatsNotifyResponsesTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 29), )
if mibBuilder.loadTexts: bwSipStatsNotifyResponsesTable.setStatus('current')
bwSipStatsNotifyResponsesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 29, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSipStatsNotifyResponseCodeValue"))
if mibBuilder.loadTexts: bwSipStatsNotifyResponsesEntry.setStatus('current')
bwSipStatsNotifyResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 29, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwSipStatsNotifyResponseCodeValue.setStatus('current')
bwSipStatsNotifyResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 29, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsNotifyResponseIns.setStatus('current')
bwSipStatsNotifyResponseOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 29, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsNotifyResponseOuts.setStatus('current')
bwSipStatsOtherResponsesTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 30), )
if mibBuilder.loadTexts: bwSipStatsOtherResponsesTable.setStatus('current')
bwSipStatsOtherResponsesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 30, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSipStatsOtherResponseCodeValue"))
if mibBuilder.loadTexts: bwSipStatsOtherResponsesEntry.setStatus('current')
bwSipStatsOtherResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 30, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwSipStatsOtherResponseCodeValue.setStatus('current')
bwSipStatsOtherResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 30, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsOtherResponseIns.setStatus('current')
bwSipStatsOtherResponseOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 30, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsOtherResponseOuts.setStatus('current')
bwSipStatsRetryInvites = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 31), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsRetryInvites.setStatus('current')
bwSipStatsRetryByes = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 32), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsRetryByes.setStatus('current')
bwSipStatsRetryCancels = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 33), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsRetryCancels.setStatus('current')
bwSipStatsRetryResponses = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 34), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsRetryResponses.setStatus('current')
bwSipStatsSubscribeIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 35), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsSubscribeIns.setStatus('current')
bwSipStatsSubscribeOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 36), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsSubscribeOuts.setStatus('current')
bwSipStatsMessageIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 37), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsMessageIns.setStatus('current')
bwSipStatsMessageOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 38), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsMessageOuts.setStatus('current')
bwSipStatsSubscribeResponsesTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 39), )
if mibBuilder.loadTexts: bwSipStatsSubscribeResponsesTable.setStatus('current')
bwSipStatsSubscribeResponsesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 39, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSipStatsSubscribeResponseCodeValue"))
if mibBuilder.loadTexts: bwSipStatsSubscribeResponsesEntry.setStatus('current')
bwSipStatsSubscribeResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 39, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwSipStatsSubscribeResponseCodeValue.setStatus('current')
bwSipStatsSubscribeResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 39, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsSubscribeResponseIns.setStatus('current')
bwSipStatsSubscribeResponseOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 39, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsSubscribeResponseOuts.setStatus('current')
bwSipStatsMessageResponsesTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 40), )
if mibBuilder.loadTexts: bwSipStatsMessageResponsesTable.setStatus('current')
bwSipStatsMessageResponsesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 40, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSipStatsMessageResponseCodeValue"))
if mibBuilder.loadTexts: bwSipStatsMessageResponsesEntry.setStatus('current')
bwSipStatsMessageResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 40, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwSipStatsMessageResponseCodeValue.setStatus('current')
bwSipStatsMessageResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 40, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsMessageResponseIns.setStatus('current')
bwSipStatsMessageResponseOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 40, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsMessageResponseOuts.setStatus('current')
bwSipStatsUpdateIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 41), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsUpdateIns.setStatus('current')
bwSipStatsUpdateOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 42), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsUpdateOuts.setStatus('current')
bwSipStatsUpdateResponseTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 43), )
if mibBuilder.loadTexts: bwSipStatsUpdateResponseTable.setStatus('current')
bwSipStatsUpdateResponseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 43, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSipStatsUpdateResponseCodeValue"))
if mibBuilder.loadTexts: bwSipStatsUpdateResponseEntry.setStatus('current')
bwSipStatsUpdateResponseCodeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 43, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 999)))
if mibBuilder.loadTexts: bwSipStatsUpdateResponseCodeValue.setStatus('current')
bwSipStatsUpdateResponseIns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 43, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsUpdateResponseIns.setStatus('current')
bwSipStatsUpdateResponseOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 43, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsUpdateResponseOuts.setStatus('current')
bwSipStatsSetupSignalDelay = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 44), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsSetupSignalDelay.setStatus('current')
bwSipStatsMinSetupSignalDelay = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 45), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsMinSetupSignalDelay.setStatus('current')
bwSipStatsMaxSetupSignalDelay = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 46), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsMaxSetupSignalDelay.setStatus('current')
bwSipStatsAnswerSignalDelay = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 47), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsAnswerSignalDelay.setStatus('current')
bwSipStatsMinAnswerSignalDelay = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 49), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsMinAnswerSignalDelay.setStatus('current')
bwSipStatsMaxAnswerSignalDelay = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 50), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsMaxAnswerSignalDelay.setStatus('current')
bwSipStatsRegistrationsPerMinute = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 51), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSipStatsRegistrationsPerMinute.setStatus('current')
bwSipStatsMsgRetryPercentageToOther = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSipStatsMsgRetryPercentageToOther.setStatus('current')
bwSipStatsMsgRetryToNeTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 53), )
if mibBuilder.loadTexts: bwSipStatsMsgRetryToNeTable.setStatus('current')
bwSipStatsMsgRetryToNeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 53, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSipStatsMsgRetryToNeID"))
if mibBuilder.loadTexts: bwSipStatsMsgRetryToNeEntry.setStatus('current')
bwSipStatsMsgRetryToNeID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 53, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSipStatsMsgRetryToNeID.setStatus('current')
bwSipStatsMsgRetryToNeAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 53, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSipStatsMsgRetryToNeAddr.setStatus('current')
bwSipStatsMsgRetryToNePercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 53, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSipStatsMsgRetryToNePercentage.setStatus('current')
bwSipStatsActiveTcpConnections = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSipStatsActiveTcpConnections.setStatus('current')
bwSipStatsTcpIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 55), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsTcpIns.setStatus('current')
bwSipStatsTcpOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 56), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsTcpOuts.setStatus('current')
bwSipStatsTcpFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 57), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsTcpFailures.setStatus('current')
bwSipStatsUdpIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 58), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsUdpIns.setStatus('current')
bwSipStatsUdpOuts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 59), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSipStatsUdpOuts.setStatus('current')
bwSIPReclaimedStaleTcpConnections = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 60), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSIPReclaimedStaleTcpConnections.setStatus('current')
bwSIPTcpTotalConnections = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 1, 61), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSIPTcpTotalConnections.setStatus('obsolete')
bwCongestionManagementNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1), )
if mibBuilder.loadTexts: bwCongestionManagementNeighborTable.setStatus('current')
bwCongestionManagementNeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCongestionManagementNeighborIndex"))
if mibBuilder.loadTexts: bwCongestionManagementNeighborEntry.setStatus('current')
bwCongestionManagementNeighborIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCongestionManagementNeighborIndex.setStatus('current')
bwCongestionManagementNeighborIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCongestionManagementNeighborIpAddress.setStatus('current')
bwCongestionManagementNeighborInviteIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCongestionManagementNeighborInviteIn.setStatus('current')
bwCongestionManagementNeighborInviteOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCongestionManagementNeighborInviteOut.setStatus('current')
bwCongestionManagementNeighborRegisterIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCongestionManagementNeighborRegisterIn.setStatus('current')
bwCongestionManagementNeighborOptionsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCongestionManagementNeighborOptionsIn.setStatus('current')
bwCongestionManagementNeighborOptionsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCongestionManagementNeighborOptionsOut.setStatus('current')
bwCongestionManagementNeighborSubscribeNotifyIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCongestionManagementNeighborSubscribeNotifyIn.setStatus('current')
bwCongestionManagementNeighborSubscribeNotifyOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCongestionManagementNeighborSubscribeNotifyOut.setStatus('current')
bwCongestionManagementNeighbor5xxIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCongestionManagementNeighbor5xxIn.setStatus('current')
bwCongestionManagementNeighborCallpMessageInRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCongestionManagementNeighborCallpMessageInRate.setStatus('current')
bwCongestionManagementNeighborCallpMessageOutRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCongestionManagementNeighborCallpMessageOutRate.setStatus('current')
bwCongestionManagementNeighborCallpRequestInRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCongestionManagementNeighborCallpRequestInRate.setStatus('current')
bwCongestionManagementNeighborNonCallpMessageInRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCongestionManagementNeighborNonCallpMessageInRate.setStatus('current')
bwCongestionManagementNeighborNonCallpMessageOutRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCongestionManagementNeighborNonCallpMessageOutRate.setStatus('current')
bwCongestionManagementNeighborNonCallpRequestInRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCongestionManagementNeighborNonCallpRequestInRate.setStatus('current')
bwCongestionManagementNeighborState = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCongestionManagementNeighborState.setStatus('current')
bwCongestionManagementNeighborCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 9, 2, 1, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCongestionManagementNeighborCapability.setStatus('current')
bwAuthCodeNumAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAuthCodeNumAttempts.setStatus('current')
bwAuthCodeNumValidations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAuthCodeNumValidations.setStatus('current')
bwAccountCodeNumAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAccountCodeNumAttempts.setStatus('current')
bwAccountCodesSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 4), )
if mibBuilder.loadTexts: bwAccountCodesSPTable.setStatus('current')
bwAccountCodesGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 5), )
if mibBuilder.loadTexts: bwAccountCodesGroupTable.setStatus('current')
bwAccountCodeNumPerCallAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAccountCodeNumPerCallAttempts.setStatus('current')
bwAccountCodesSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwAccountCodesSPIndex"))
if mibBuilder.loadTexts: bwAccountCodesSPEntry.setStatus('current')
bwAccountCodesSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAccountCodesSPIndex.setStatus('current')
bwAccountCodesSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAccountCodesSPID.setStatus('current')
bwAuthCodeSPNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAuthCodeSPNumAttempts.setStatus('current')
bwAuthCodeSPNumValidations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAuthCodeSPNumValidations.setStatus('current')
bwAccountCodeSPNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 4, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAccountCodeSPNumAttempts.setStatus('current')
bwAccountCodeSPNumPerCallAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 4, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAccountCodeSPNumPerCallAttempts.setStatus('current')
bwAccountCodesGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 5, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwAccountCodesGroupIndex"))
if mibBuilder.loadTexts: bwAccountCodesGroupEntry.setStatus('current')
bwAccountCodesGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAccountCodesGroupIndex.setStatus('current')
bwAccountCodesGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAccountCodesGroupID.setStatus('current')
bwAuthCodeGroupNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 5, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAuthCodeGroupNumAttempts.setStatus('current')
bwAuthCodeGroupNumValidations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 5, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAuthCodeGroupNumValidations.setStatus('current')
bwAccountCodeGroupNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 5, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAccountCodeGroupNumAttempts.setStatus('current')
bwAccountCodeGroupNumPerCallAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 1, 5, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAccountCodeGroupNumPerCallAttempts.setStatus('current')
bwAnonymousCallsNumRejected = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 2, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAnonymousCallsNumRejected.setStatus('current')
bwAnonymousCallRejectionSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 2, 2), )
if mibBuilder.loadTexts: bwAnonymousCallRejectionSPTable.setStatus('current')
bwAnonymousCallRejectionGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 2, 3), )
if mibBuilder.loadTexts: bwAnonymousCallRejectionGroupTable.setStatus('current')
bwAnonymousCallRejectionSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 2, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwAnonymousCallRejectionSPIndex"))
if mibBuilder.loadTexts: bwAnonymousCallRejectionSPEntry.setStatus('current')
bwAnonymousCallRejectionSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 2, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAnonymousCallRejectionSPIndex.setStatus('current')
bwAnonymousCallRejectionSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAnonymousCallRejectionSPID.setStatus('current')
bwAnonymousCallsSPNumRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 2, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAnonymousCallsSPNumRejected.setStatus('current')
bwAnonymousCallRejectionGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 2, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwAnonymousCallRejectionGroupIndex"))
if mibBuilder.loadTexts: bwAnonymousCallRejectionGroupEntry.setStatus('current')
bwAnonymousCallRejectionGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 2, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAnonymousCallRejectionGroupIndex.setStatus('current')
bwAnonymousCallRejectionGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 2, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAnonymousCallRejectionGroupID.setStatus('current')
bwAnonymousCallsGroupNumRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 2, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAnonymousCallsGroupNumRejected.setStatus('current')
bwAuthenticationNumChallenges = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 3, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAuthenticationNumChallenges.setStatus('current')
bwAuthenticationNumValidResponses = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 3, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAuthenticationNumValidResponses.setStatus('current')
bwAuthenticationSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 3, 3), )
if mibBuilder.loadTexts: bwAuthenticationSPTable.setStatus('current')
bwAuthenticationGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 3, 4), )
if mibBuilder.loadTexts: bwAuthenticationGroupTable.setStatus('current')
bwAuthenticationSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 3, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwAuthenticationSPIndex"))
if mibBuilder.loadTexts: bwAuthenticationSPEntry.setStatus('current')
bwAuthenticationSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 3, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAuthenticationSPIndex.setStatus('current')
bwAuthenticationSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 3, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAuthenticationSPID.setStatus('current')
bwAuthenticationSPNumChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 3, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAuthenticationSPNumChallenges.setStatus('current')
bwAuthenticationSPNumValidResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 3, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAuthenticationSPNumValidResponses.setStatus('current')
bwAuthenticationGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 3, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwAuthenticationGroupIndex"))
if mibBuilder.loadTexts: bwAuthenticationGroupEntry.setStatus('current')
bwAuthenticationGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 3, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAuthenticationGroupIndex.setStatus('current')
bwAuthenticationGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 3, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAuthenticationGroupID.setStatus('current')
bwAuthenticationGroupNumChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 3, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAuthenticationGroupNumChallenges.setStatus('current')
bwAuthenticationGroupNumValidResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 3, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAuthenticationGroupNumValidResponses.setStatus('current')
bwAutoAttendantNumAnswers = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 4, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAutoAttendantNumAnswers.setStatus('current')
bwAutoAttendantNumTransfers = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 4, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAutoAttendantNumTransfers.setStatus('current')
bwAutoAttendantSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 4, 3), )
if mibBuilder.loadTexts: bwAutoAttendantSPTable.setStatus('current')
bwAutoAttendantGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 4, 4), )
if mibBuilder.loadTexts: bwAutoAttendantGroupTable.setStatus('current')
bwAutoAttendantSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 4, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwAutoAttendantSPIndex"))
if mibBuilder.loadTexts: bwAutoAttendantSPEntry.setStatus('current')
bwAutoAttendantSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 4, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAutoAttendantSPIndex.setStatus('current')
bwAutoAttendantSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 4, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAutoAttendantSPID.setStatus('current')
bwAutoAttendantSPNumAnswers = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 4, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAutoAttendantSPNumAnswers.setStatus('current')
bwAutoAttendantSPNumTransfers = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 4, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAutoAttendantSPNumTransfers.setStatus('current')
bwAutoAttendantGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 4, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwAutoAttendantGroupIndex"))
if mibBuilder.loadTexts: bwAutoAttendantGroupEntry.setStatus('current')
bwAutoAttendantGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 4, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAutoAttendantGroupIndex.setStatus('current')
bwAutoAttendantGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 4, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAutoAttendantGroupID.setStatus('current')
bwAutoAttendantGroupNumAnswers = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 4, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAutoAttendantGroupNumAnswers.setStatus('current')
bwAutoAttendantGroupNumTransfers = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 4, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAutoAttendantGroupNumTransfers.setStatus('current')
bwCallCapacityNumCallsAttempted = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 5, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallCapacityNumCallsAttempted.setStatus('current')
bwCallCapacityNumCallsBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 5, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallCapacityNumCallsBlocked.setStatus('current')
bwCallCapacitySPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 5, 3), )
if mibBuilder.loadTexts: bwCallCapacitySPTable.setStatus('current')
bwCallCapacityGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 5, 4), )
if mibBuilder.loadTexts: bwCallCapacityGroupTable.setStatus('current')
bwCallCapacitySPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 5, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallCapacitySPIndex"))
if mibBuilder.loadTexts: bwCallCapacitySPEntry.setStatus('current')
bwCallCapacitySPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 5, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallCapacitySPIndex.setStatus('current')
bwCallCapacitySPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 5, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallCapacitySPID.setStatus('current')
bwCallCapacitySPNumCallsAttempted = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 5, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallCapacitySPNumCallsAttempted.setStatus('current')
bwCallCapacitySPNumCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 5, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallCapacitySPNumCallsBlocked.setStatus('current')
bwCallCapacityGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 5, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallCapacityGroupIndex"))
if mibBuilder.loadTexts: bwCallCapacityGroupEntry.setStatus('current')
bwCallCapacityGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 5, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallCapacityGroupIndex.setStatus('current')
bwCallCapacityGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 5, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallCapacityGroupID.setStatus('current')
bwCallCapacityGroupNumCallsAttempted = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 5, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallCapacityGroupNumCallsAttempted.setStatus('current')
bwCallCapacityGroupNumCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 5, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallCapacityGroupNumCallsBlocked.setStatus('current')
bwCFANumForwarded = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFANumForwarded.setStatus('current')
bwCFANumPhoneActivations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFANumPhoneActivations.setStatus('current')
bwCFANumPhoneDeactivations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFANumPhoneDeactivations.setStatus('current')
bwCallForwardingAlwaysSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 4), )
if mibBuilder.loadTexts: bwCallForwardingAlwaysSPTable.setStatus('current')
bwCFADestinationChanged = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFADestinationChanged.setStatus('current')
bwCallForwardingAlwaysGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 6), )
if mibBuilder.loadTexts: bwCallForwardingAlwaysGroupTable.setStatus('current')
bwCallForwardingAlwaysSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallForwardingAlwaysSPIndex"))
if mibBuilder.loadTexts: bwCallForwardingAlwaysSPEntry.setStatus('current')
bwCallForwardingAlwaysSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallForwardingAlwaysSPIndex.setStatus('current')
bwCallForwardingAlwaysSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallForwardingAlwaysSPID.setStatus('current')
bwCFASPNumForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFASPNumForwarded.setStatus('current')
bwCFASPNumPhoneActivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFASPNumPhoneActivations.setStatus('current')
bwCFASPNumPhoneDeactivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 4, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFASPNumPhoneDeactivations.setStatus('current')
bwCFASPDestinationChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 4, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFASPDestinationChanged.setStatus('current')
bwCallForwardingAlwaysGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 6, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallForwardingAlwaysGroupIndex"))
if mibBuilder.loadTexts: bwCallForwardingAlwaysGroupEntry.setStatus('current')
bwCallForwardingAlwaysGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallForwardingAlwaysGroupIndex.setStatus('current')
bwCallForwardingAlwaysGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallForwardingAlwaysGroupID.setStatus('current')
bwCFAGroupNumForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 6, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFAGroupNumForwarded.setStatus('current')
bwCFAGroupNumPhoneActivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 6, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFAGroupNumPhoneActivations.setStatus('current')
bwCFAGroupNumPhoneDeactivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 6, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFAGroupNumPhoneDeactivations.setStatus('current')
bwCFAGroupDestinationChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 6, 6, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFAGroupDestinationChanged.setStatus('current')
bwCFBNumForwarded = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFBNumForwarded.setStatus('current')
bwCallForwardingBusySPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 2), )
if mibBuilder.loadTexts: bwCallForwardingBusySPTable.setStatus('current')
bwCFBNumPhoneActivations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFBNumPhoneActivations.setStatus('current')
bwCFBNumPhoneDeactivations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFBNumPhoneDeactivations.setStatus('current')
bwCFBDestinationChanged = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFBDestinationChanged.setStatus('current')
bwCallForwardingBusyGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 6), )
if mibBuilder.loadTexts: bwCallForwardingBusyGroupTable.setStatus('current')
bwCallForwardingBusySPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallForwardingBusySPIndex"))
if mibBuilder.loadTexts: bwCallForwardingBusySPEntry.setStatus('current')
bwCallForwardingBusySPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallForwardingBusySPIndex.setStatus('current')
bwCallForwardingBusySPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallForwardingBusySPID.setStatus('current')
bwCFBSPNumForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFBSPNumForwarded.setStatus('current')
bwCFBSPNumPhoneActivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 2, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFBSPNumPhoneActivations.setStatus('current')
bwCFBSPNumPhoneDeactivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 2, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFBSPNumPhoneDeactivations.setStatus('current')
bwCFBSPDestinationChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 2, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFBSPDestinationChanged.setStatus('current')
bwCallForwardingBusyGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 6, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallForwardingBusyGroupIndex"))
if mibBuilder.loadTexts: bwCallForwardingBusyGroupEntry.setStatus('current')
bwCallForwardingBusyGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallForwardingBusyGroupIndex.setStatus('current')
bwCallForwardingBusyGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallForwardingBusyGroupID.setStatus('current')
bwCFBGroupNumForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 6, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFBGroupNumForwarded.setStatus('current')
bwCFBGroupNumPhoneActivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 6, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFBGroupNumPhoneActivations.setStatus('current')
bwCFBGroupNumPhoneDeactivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 6, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFBGroupNumPhoneDeactivations.setStatus('current')
bwCFBGroupDestinationChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 7, 6, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFBGroupDestinationChanged.setStatus('current')
bwCFNANumForwarded = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNANumForwarded.setStatus('current')
bwCallForwardingNoAnswerSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 2), )
if mibBuilder.loadTexts: bwCallForwardingNoAnswerSPTable.setStatus('current')
bwCFNADestinationChanged = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNADestinationChanged.setStatus('current')
bwCFNANumPhoneActivations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNANumPhoneActivations.setStatus('current')
bwCFNANumPhoneDeactivations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNANumPhoneDeactivations.setStatus('current')
bwCallForwardingNoAnswerGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 6), )
if mibBuilder.loadTexts: bwCallForwardingNoAnswerGroupTable.setStatus('current')
bwCallForwardingNoAnswerSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallForwardingNoAnswerSPIndex"))
if mibBuilder.loadTexts: bwCallForwardingNoAnswerSPEntry.setStatus('current')
bwCallForwardingNoAnswerSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallForwardingNoAnswerSPIndex.setStatus('current')
bwCallForwardingNoAnswerSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallForwardingNoAnswerSPID.setStatus('current')
bwCFNASPNumForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNASPNumForwarded.setStatus('current')
bwCFNASPDestinationChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 2, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNASPDestinationChanged.setStatus('current')
bwCFNASPNumPhoneActivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 2, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNASPNumPhoneActivations.setStatus('current')
bwCFNASPNumPhoneDeactivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 2, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNASPNumPhoneDeactivations.setStatus('current')
bwCallForwardingNoAnswerGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 6, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallForwardingNoAnswerGroupIndex"))
if mibBuilder.loadTexts: bwCallForwardingNoAnswerGroupEntry.setStatus('current')
bwCallForwardingNoAnswerGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallForwardingNoAnswerGroupIndex.setStatus('current')
bwCallForwardingNoAnswerGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallForwardingNoAnswerGroupID.setStatus('current')
bwCFNAGroupNumForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 6, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNAGroupNumForwarded.setStatus('current')
bwCFNAGroupDestinationChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 6, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNAGroupDestinationChanged.setStatus('current')
bwCFNAGroupNumPhoneActivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 6, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNAGroupNumPhoneActivations.setStatus('current')
bwCFNAGroupNumPhoneDeactivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 8, 6, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNAGroupNumPhoneDeactivations.setStatus('current')
bwCallNotifyNumNotifications = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 9, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallNotifyNumNotifications.setStatus('current')
bwCallNotifySPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 9, 2), )
if mibBuilder.loadTexts: bwCallNotifySPTable.setStatus('current')
bwCallNotifyGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 9, 3), )
if mibBuilder.loadTexts: bwCallNotifyGroupTable.setStatus('current')
bwCallNotifySPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 9, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallNotifySPIndex"))
if mibBuilder.loadTexts: bwCallNotifySPEntry.setStatus('current')
bwCallNotifySPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 9, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallNotifySPIndex.setStatus('current')
bwCallNotifySPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 9, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallNotifySPID.setStatus('current')
bwCallNotifySPNumNotifications = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 9, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallNotifySPNumNotifications.setStatus('current')
bwCallNotifyGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 9, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallNotifyGroupIndex"))
if mibBuilder.loadTexts: bwCallNotifyGroupEntry.setStatus('current')
bwCallNotifyGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 9, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallNotifyGroupIndex.setStatus('current')
bwCallNotifyGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 9, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallNotifyGroupID.setStatus('current')
bwCallNotifyGroupNumNotifications = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 9, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallNotifyGroupNumNotifications.setStatus('current')
bwCallParkNumAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallParkNumAttempts.setStatus('current')
bwCallParkNumFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallParkNumFailures.setStatus('current')
bwCallParkNumRetrieveAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallParkNumRetrieveAttempts.setStatus('current')
bwCallParkNumRetrieveFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallParkNumRetrieveFailures.setStatus('current')
bwCallParkSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 5), )
if mibBuilder.loadTexts: bwCallParkSPTable.setStatus('current')
bwCallParkGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 6), )
if mibBuilder.loadTexts: bwCallParkGroupTable.setStatus('current')
bwCallParkSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 5, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallParkSPIndex"))
if mibBuilder.loadTexts: bwCallParkSPEntry.setStatus('current')
bwCallParkSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallParkSPIndex.setStatus('current')
bwCallParkSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallParkSPID.setStatus('current')
bwCallParkSPNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 5, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallParkSPNumAttempts.setStatus('current')
bwCallParkSPNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 5, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallParkSPNumFailures.setStatus('current')
bwCallParkSPNumRetrieveAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 5, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallParkSPNumRetrieveAttempts.setStatus('current')
bwCallParkSPNumRetrieveFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 5, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallParkSPNumRetrieveFailures.setStatus('current')
bwCallParkGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 6, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallParkGroupIndex"))
if mibBuilder.loadTexts: bwCallParkGroupEntry.setStatus('current')
bwCallParkGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallParkGroupIndex.setStatus('current')
bwCallParkGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallParkGroupID.setStatus('current')
bwCallParkGroupNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 6, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallParkGroupNumAttempts.setStatus('current')
bwCallParkGroupNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 6, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallParkGroupNumFailures.setStatus('current')
bwCallParkGroupNumRetrieveAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 6, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallParkGroupNumRetrieveAttempts.setStatus('current')
bwCallParkGroupNumRetrieveFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 10, 6, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallParkGroupNumRetrieveFailures.setStatus('current')
bwCallPickupNumAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 11, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallPickupNumAttempts.setStatus('current')
bwCallPickupNumFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 11, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallPickupNumFailures.setStatus('current')
bwCallPickupSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 11, 3), )
if mibBuilder.loadTexts: bwCallPickupSPTable.setStatus('current')
bwCallPickupGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 11, 4), )
if mibBuilder.loadTexts: bwCallPickupGroupTable.setStatus('current')
bwCallPickupSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 11, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallPickupSPIndex"))
if mibBuilder.loadTexts: bwCallPickupSPEntry.setStatus('current')
bwCallPickupSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 11, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallPickupSPIndex.setStatus('current')
bwCallPickupSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 11, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallPickupSPID.setStatus('current')
bwCallPickupSPNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 11, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallPickupSPNumAttempts.setStatus('current')
bwCallPickupSPNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 11, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallPickupSPNumFailures.setStatus('current')
bwCallPickupGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 11, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallPickupGroupIndex"))
if mibBuilder.loadTexts: bwCallPickupGroupEntry.setStatus('current')
bwCallPickupGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 11, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallPickupGroupIndex.setStatus('current')
bwCallPickupGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 11, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallPickupGroupID.setStatus('current')
bwCallPickupGroupNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 11, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallPickupGroupNumAttempts.setStatus('current')
bwCallPickupGroupNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 11, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallPickupGroupNumFailures.setStatus('current')
bwCallReturnNumReturns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 12, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallReturnNumReturns.setStatus('current')
bwCallReturnSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 12, 2), )
if mibBuilder.loadTexts: bwCallReturnSPTable.setStatus('current')
bwCallReturnGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 12, 3), )
if mibBuilder.loadTexts: bwCallReturnGroupTable.setStatus('current')
bwCallReturnSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 12, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallReturnSPIndex"))
if mibBuilder.loadTexts: bwCallReturnSPEntry.setStatus('current')
bwCallReturnSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 12, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallReturnSPIndex.setStatus('current')
bwCallReturnSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 12, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallReturnSPID.setStatus('current')
bwCallReturnSPNumReturns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 12, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallReturnSPNumReturns.setStatus('current')
bwCallReturnGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 12, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallReturnGroupIndex"))
if mibBuilder.loadTexts: bwCallReturnGroupEntry.setStatus('current')
bwCallReturnGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 12, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallReturnGroupIndex.setStatus('current')
bwCallReturnGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 12, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallReturnGroupID.setStatus('current')
bwCallReturnGroupNumReturns = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 12, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallReturnGroupNumReturns.setStatus('current')
bwCommPilotCallMgrNumDial = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrNumDial.setStatus('current')
bwCommPilotCallMgrNumAnswer = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrNumAnswer.setStatus('current')
bwCommPilotCallMgrNumRelease = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrNumRelease.setStatus('current')
bwCommPilotCallMgrNumHold = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrNumHold.setStatus('current')
bwCommPilotCallMgrNumTransfer = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrNumTransfer.setStatus('current')
bwCommPilotCallMgrNumConference = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrNumConference.setStatus('current')
bwCommPilotCallMgrNumTransferVM = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrNumTransferVM.setStatus('current')
bwCommPilotCallManagerSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8), )
if mibBuilder.loadTexts: bwCommPilotCallManagerSPTable.setStatus('current')
bwCommPilotCallMgrNumConferenceAnswer = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrNumConferenceAnswer.setStatus('current')
bwCommPilotCallMgrNumConferenceHold = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrNumConferenceHold.setStatus('current')
bwCommPilotCallMgrNumConferenceRelease = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrNumConferenceRelease.setStatus('current')
bwCommPilotCallManagerGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12), )
if mibBuilder.loadTexts: bwCommPilotCallManagerGroupTable.setStatus('current')
bwCommPilotCallMgrNumTransferCC = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrNumTransferCC.setStatus('current')
bwCommPilotCallMgrNumConferenceAdd = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 14), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrNumConferenceAdd.setStatus('current')
bwCommPilotCallMgrNumCallPark = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 15), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrNumCallPark.setStatus('current')
bwCommPilotCallMgrNumGroupCallPark = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 16), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrNumGroupCallPark.setStatus('current')
bwCommPilotCallMgrNumCallParkRetrieve = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 17), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrNumCallParkRetrieve.setStatus('current')
bwCommPilotCallManagerSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCommPilotCallManagerSPIndex"))
if mibBuilder.loadTexts: bwCommPilotCallManagerSPEntry.setStatus('current')
bwCommPilotCallManagerSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCommPilotCallManagerSPIndex.setStatus('current')
bwCommPilotCallManagerSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCommPilotCallManagerSPID.setStatus('current')
bwCommPilotCallMgrSPNumDial = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrSPNumDial.setStatus('current')
bwCommPilotCallMgrSPNumAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrSPNumAnswer.setStatus('current')
bwCommPilotCallMgrSPNumRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrSPNumRelease.setStatus('current')
bwCommPilotCallMgrSPNumHold = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrSPNumHold.setStatus('current')
bwCommPilotCallMgrSPNumTransfer = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrSPNumTransfer.setStatus('current')
bwCommPilotCallMgrSPNumConference = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrSPNumConference.setStatus('current')
bwCommPilotCallMgrSPNumTransferVM = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrSPNumTransferVM.setStatus('current')
bwCommPilotCallMgrSPNumConferenceAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrSPNumConferenceAnswer.setStatus('current')
bwCommPilotCallMgrSPNumConferenceHold = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrSPNumConferenceHold.setStatus('current')
bwCommPilotCallMgrSPNumConferenceRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrSPNumConferenceRelease.setStatus('current')
bwCommPilotCallMgrSPNumTransferCC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8, 1, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrSPNumTransferCC.setStatus('current')
bwCommPilotCallMgrSPNumConferenceAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8, 1, 14), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrSPNumConferenceAdd.setStatus('current')
bwCommPilotCallMgrSPNumCallPark = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8, 1, 15), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrSPNumCallPark.setStatus('current')
bwCommPilotCallMgrSPNumGroupCallPark = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8, 1, 16), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrSPNumGroupCallPark.setStatus('current')
bwCommPilotCallMgrSPNumCallParkRetrieve = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 8, 1, 17), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrSPNumCallParkRetrieve.setStatus('current')
bwCommPilotCallManagerGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCommPilotCallManagerGroupIndex"))
if mibBuilder.loadTexts: bwCommPilotCallManagerGroupEntry.setStatus('current')
bwCommPilotCallManagerGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCommPilotCallManagerGroupIndex.setStatus('current')
bwCommPilotCallManagerGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCommPilotCallManagerGroupID.setStatus('current')
bwCommPilotCallMgrGroupNumDial = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrGroupNumDial.setStatus('current')
bwCommPilotCallMgrGroupNumAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrGroupNumAnswer.setStatus('current')
bwCommPilotCallMgrGroupNumRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrGroupNumRelease.setStatus('current')
bwCommPilotCallMgrGroupNumHold = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrGroupNumHold.setStatus('current')
bwCommPilotCallMgrGroupNumTransfer = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrGroupNumTransfer.setStatus('current')
bwCommPilotCallMgrGroupNumConference = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrGroupNumConference.setStatus('current')
bwCommPilotCallMgrGroupNumTransferVM = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrGroupNumTransferVM.setStatus('current')
bwCommPilotCallMgrGroupNumConferenceAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrGroupNumConferenceAnswer.setStatus('current')
bwCommPilotCallMgrGroupNumConferenceHold = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrGroupNumConferenceHold.setStatus('current')
bwCommPilotCallMgrGroupNumConferenceRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrGroupNumConferenceRelease.setStatus('current')
bwCommPilotCallMgrGroupNumTransferCC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12, 1, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrGroupNumTransferCC.setStatus('current')
bwCommPilotCallMgrGroupNumConferenceAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12, 1, 14), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrGroupNumConferenceAdd.setStatus('current')
bwCommPilotCallMgrGroupNumCallPark = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12, 1, 15), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrGroupNumCallPark.setStatus('current')
bwCommPilotCallMgrGroupNumGroupCallPark = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12, 1, 16), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrGroupNumGroupCallPark.setStatus('current')
bwCommPilotCallMgrGroupNumCallParkRetrieve = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 13, 12, 1, 17), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommPilotCallMgrGroupNumCallParkRetrieve.setStatus('current')
bwDoNotDisturbNumInvoked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 14, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDoNotDisturbNumInvoked.setStatus('current')
bwDoNotDisturbSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 14, 2), )
if mibBuilder.loadTexts: bwDoNotDisturbSPTable.setStatus('current')
bwDndPhoneActivations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 14, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDndPhoneActivations.setStatus('current')
bwDndPhoneDeactivations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 14, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDndPhoneDeactivations.setStatus('current')
bwDoNotDisturbGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 14, 5), )
if mibBuilder.loadTexts: bwDoNotDisturbGroupTable.setStatus('current')
bwDoNotDisturbSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 14, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwDoNotDisturbSPIndex"))
if mibBuilder.loadTexts: bwDoNotDisturbSPEntry.setStatus('current')
bwDoNotDisturbSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 14, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDoNotDisturbSPIndex.setStatus('current')
bwDoNotDisturbSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 14, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDoNotDisturbSPID.setStatus('current')
bwDoNotDisturbSPNumInvoked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 14, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDoNotDisturbSPNumInvoked.setStatus('current')
bwDNDSPNumPhoneActivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 14, 2, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDNDSPNumPhoneActivations.setStatus('current')
bwDNDSPNumPhoneDeactivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 14, 2, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDNDSPNumPhoneDeactivations.setStatus('current')
bwDoNotDisturbGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 14, 5, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwDoNotDisturbGroupIndex"))
if mibBuilder.loadTexts: bwDoNotDisturbGroupEntry.setStatus('current')
bwDoNotDisturbGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 14, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDoNotDisturbGroupIndex.setStatus('current')
bwDoNotDisturbGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 14, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDoNotDisturbGroupID.setStatus('current')
bwDoNotDisturbGroupNumInvoked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 14, 5, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDoNotDisturbGroupNumInvoked.setStatus('current')
bwDNDGroupNumPhoneActivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 14, 5, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDNDGroupNumPhoneActivations.setStatus('current')
bwDNDGroupNumPhoneDeactivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 14, 5, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDNDGroupNumPhoneDeactivations.setStatus('current')
bwECNWarningAnnouncementAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 74, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwECNWarningAnnouncementAttempts.setStatus('current')
bwECNExpensiveCallReleased = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 74, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwECNExpensiveCallReleased.setStatus('current')
bwFlashCallTransferNumTransfers = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 15, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFlashCallTransferNumTransfers.setStatus('current')
bwFlashCallTransferSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 15, 2), )
if mibBuilder.loadTexts: bwFlashCallTransferSPTable.setStatus('current')
bwFlashCallTransferGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 15, 3), )
if mibBuilder.loadTexts: bwFlashCallTransferGroupTable.setStatus('current')
bwFlashCallTransferSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 15, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwFlashCallTransferSPIndex"))
if mibBuilder.loadTexts: bwFlashCallTransferSPEntry.setStatus('current')
bwFlashCallTransferSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 15, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashCallTransferSPIndex.setStatus('current')
bwFlashCallTransferSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 15, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashCallTransferSPID.setStatus('current')
bwFlashCallTransferSPNumTransfers = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 15, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFlashCallTransferSPNumTransfers.setStatus('current')
bwFlashCallTransferGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 15, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwFlashCallTransferGroupIndex"))
if mibBuilder.loadTexts: bwFlashCallTransferGroupEntry.setStatus('current')
bwFlashCallTransferGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 15, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashCallTransferGroupIndex.setStatus('current')
bwFlashCallTransferGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 15, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashCallTransferGroupID.setStatus('current')
bwFlashCallTransferGroupNumTransfers = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 15, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFlashCallTransferGroupNumTransfers.setStatus('current')
bwFlashCallWaitingNumAnswers = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 16, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFlashCallWaitingNumAnswers.setStatus('current')
bwFlashCallWaitingSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 16, 2), )
if mibBuilder.loadTexts: bwFlashCallWaitingSPTable.setStatus('current')
bwFlashCallWaitingGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 16, 3), )
if mibBuilder.loadTexts: bwFlashCallWaitingGroupTable.setStatus('current')
bwFlashCallWaitingSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 16, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwFlashCallWaitingSPIndex"))
if mibBuilder.loadTexts: bwFlashCallWaitingSPEntry.setStatus('current')
bwFlashCallWaitingSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 16, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashCallWaitingSPIndex.setStatus('current')
bwFlashCallWaitingSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 16, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashCallWaitingSPID.setStatus('current')
bwFlashCallWaitingSPNumAnswers = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 16, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFlashCallWaitingSPNumAnswers.setStatus('current')
bwFlashCallWaitingGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 16, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwFlashCallWaitingGroupIndex"))
if mibBuilder.loadTexts: bwFlashCallWaitingGroupEntry.setStatus('current')
bwFlashCallWaitingGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 16, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashCallWaitingGroupIndex.setStatus('current')
bwFlashCallWaitingGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 16, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashCallWaitingGroupID.setStatus('current')
bwFlashCallWaitingGroupNumAnswers = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 16, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFlashCallWaitingGroupNumAnswers.setStatus('current')
bwFlashConsultationNumCalls = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 17, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFlashConsultationNumCalls.setStatus('current')
bwFlashConsultationSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 17, 2), )
if mibBuilder.loadTexts: bwFlashConsultationSPTable.setStatus('current')
bwFlashConsultationGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 17, 3), )
if mibBuilder.loadTexts: bwFlashConsultationGroupTable.setStatus('current')
bwFlashConsultationSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 17, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwFlashConsultationSPIndex"))
if mibBuilder.loadTexts: bwFlashConsultationSPEntry.setStatus('current')
bwFlashConsultationSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 17, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashConsultationSPIndex.setStatus('current')
bwFlashConsultationSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 17, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashConsultationSPID.setStatus('current')
bwFlashConsultationSPNumCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 17, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFlashConsultationSPNumCalls.setStatus('current')
bwFlashConsultationGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 17, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwFlashConsultationGroupIndex"))
if mibBuilder.loadTexts: bwFlashConsultationGroupEntry.setStatus('current')
bwFlashConsultationGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 17, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashConsultationGroupIndex.setStatus('current')
bwFlashConsultationGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 17, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashConsultationGroupID.setStatus('current')
bwFlashConsultationGroupNumCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 17, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFlashConsultationGroupNumCalls.setStatus('current')
bwFlashThreeWayCallNum3WC = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 18, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFlashThreeWayCallNum3WC.setStatus('current')
bwFlashThreeWayCallSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 18, 2), )
if mibBuilder.loadTexts: bwFlashThreeWayCallSPTable.setStatus('current')
bwFlashThreeWayCallGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 18, 3), )
if mibBuilder.loadTexts: bwFlashThreeWayCallGroupTable.setStatus('current')
bwFlashThreeWayCallSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 18, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwFlashThreeWayCallSPIndex"))
if mibBuilder.loadTexts: bwFlashThreeWayCallSPEntry.setStatus('current')
bwFlashThreeWayCallSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 18, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashThreeWayCallSPIndex.setStatus('current')
bwFlashThreeWayCallSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 18, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashThreeWayCallSPID.setStatus('current')
bwFlashThreeWayCallSPNum3WC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 18, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFlashThreeWayCallSPNum3WC.setStatus('current')
bwFlashThreeWayCallGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 18, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwFlashThreeWayCallGroupIndex"))
if mibBuilder.loadTexts: bwFlashThreeWayCallGroupEntry.setStatus('current')
bwFlashThreeWayCallGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 18, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashThreeWayCallGroupIndex.setStatus('current')
bwFlashThreeWayCallGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 18, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashThreeWayCallGroupID.setStatus('current')
bwFlashThreeWayCallGroupNum3WC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 18, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFlashThreeWayCallGroupNum3WC.setStatus('current')
bwHuntGroupNumAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 19, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwHuntGroupNumAttempts.setStatus('current')
bwHuntGroupNumBusy = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 19, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwHuntGroupNumBusy.setStatus('current')
bwHuntGroupsSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 19, 3), )
if mibBuilder.loadTexts: bwHuntGroupsSPTable.setStatus('current')
bwHuntGroupsGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 19, 4), )
if mibBuilder.loadTexts: bwHuntGroupsGroupTable.setStatus('current')
bwHuntGroupsDNHIncomingCalls = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 19, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwHuntGroupsDNHIncomingCalls.setStatus('current')
bwHuntGroupsSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 19, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwHuntGroupsSPIndex"))
if mibBuilder.loadTexts: bwHuntGroupsSPEntry.setStatus('current')
bwHuntGroupsSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 19, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwHuntGroupsSPIndex.setStatus('current')
bwHuntGroupsSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 19, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwHuntGroupsSPID.setStatus('current')
bwHuntGroupSPNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 19, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwHuntGroupSPNumAttempts.setStatus('current')
bwHuntGroupSPNumBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 19, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwHuntGroupSPNumBusy.setStatus('current')
bwHuntGroupsSPDNHIncomingCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 19, 3, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwHuntGroupsSPDNHIncomingCalls.setStatus('current')
bwHuntGroupsGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 19, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwHuntGroupsGroupIndex"))
if mibBuilder.loadTexts: bwHuntGroupsGroupEntry.setStatus('current')
bwHuntGroupsGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 19, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwHuntGroupsGroupIndex.setStatus('current')
bwHuntGroupsGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 19, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwHuntGroupsGroupID.setStatus('current')
bwHuntGroupsGroupNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 19, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwHuntGroupsGroupNumAttempts.setStatus('current')
bwHuntGroupsGroupNumBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 19, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwHuntGroupsGroupNumBusy.setStatus('current')
bwHuntGroupsGroupDNHIncomingCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 19, 4, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwHuntGroupsGroupDNHIncomingCalls.setStatus('current')
bwICPNumInterGroupBlocks = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICPNumInterGroupBlocks.setStatus('current')
bwIncomingCallingPlanSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 2), )
if mibBuilder.loadTexts: bwIncomingCallingPlanSPTable.setStatus('current')
bwIncomingCallingPlanGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 3), )
if mibBuilder.loadTexts: bwIncomingCallingPlanGroupTable.setStatus('current')
bwICPNumCollectCallBlocks = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICPNumCollectCallBlocks.setStatus('current')
bwICPNumIntraGroupBlocks = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICPNumIntraGroupBlocks.setStatus('current')
bwICPNumOutsideCallerBlocks = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICPNumOutsideCallerBlocks.setStatus('current')
bwIncomingCallingPlanSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwIncomingCallingPlanSPIndex"))
if mibBuilder.loadTexts: bwIncomingCallingPlanSPEntry.setStatus('current')
bwIncomingCallingPlanSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwIncomingCallingPlanSPIndex.setStatus('current')
bwIncomingCallingPlanSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwIncomingCallingPlanSPID.setStatus('current')
bwICPSPNumInterGroupBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICPSPNumInterGroupBlocks.setStatus('current')
bwICPSPNumCollectCallBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 2, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICPSPNumCollectCallBlocks.setStatus('current')
bwICPSPNumIntraGroupBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 2, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICPSPNumIntraGroupBlocks.setStatus('current')
bwICPSPNumOutsideCallerBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 2, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICPSPNumOutsideCallerBlocks.setStatus('current')
bwIncomingCallingPlanGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwIncomingCallingPlanGroupIndex"))
if mibBuilder.loadTexts: bwIncomingCallingPlanGroupEntry.setStatus('current')
bwIncomingCallingPlanGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwIncomingCallingPlanGroupIndex.setStatus('current')
bwIncomingCallingPlanGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwIncomingCallingPlanGroupID.setStatus('current')
bwICPGroupNumInterGroupBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICPGroupNumInterGroupBlocks.setStatus('current')
bwICPGroupNumCollectCallBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICPGroupNumCollectCallBlocks.setStatus('current')
bwICPGroupNumIntraGroupBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 3, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICPGroupNumIntraGroupBlocks.setStatus('current')
bwICPGroupNumOutsideCallerBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 20, 3, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICPGroupNumOutsideCallerBlocks.setStatus('current')
bwIPPhoneNumForwards = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 21, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwIPPhoneNumForwards.setStatus('current')
bwIPPhoneSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 21, 2), )
if mibBuilder.loadTexts: bwIPPhoneSPTable.setStatus('current')
bwIPPhoneGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 21, 3), )
if mibBuilder.loadTexts: bwIPPhoneGroupTable.setStatus('current')
bwIPPhoneSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 21, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwIPPhoneSPIndex"))
if mibBuilder.loadTexts: bwIPPhoneSPEntry.setStatus('current')
bwIPPhoneSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 21, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwIPPhoneSPIndex.setStatus('current')
bwIPPhoneSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 21, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwIPPhoneSPID.setStatus('current')
bwIPPhoneSPNumForwards = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 21, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwIPPhoneSPNumForwards.setStatus('current')
bwIPPhoneGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 21, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwIPPhoneGroupIndex"))
if mibBuilder.loadTexts: bwIPPhoneGroupEntry.setStatus('current')
bwIPPhoneGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 21, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwIPPhoneGroupIndex.setStatus('current')
bwIPPhoneGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 21, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwIPPhoneGroupID.setStatus('current')
bwIPPhoneGroupNumForwards = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 21, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwIPPhoneGroupNumForwards.setStatus('current')
bwLNRNumRedials = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 22, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwLNRNumRedials.setStatus('current')
bwLastNumberRedialSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 22, 2), )
if mibBuilder.loadTexts: bwLastNumberRedialSPTable.setStatus('current')
bwLastNumberRedialGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 22, 3), )
if mibBuilder.loadTexts: bwLastNumberRedialGroupTable.setStatus('current')
bwLastNumberRedialSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 22, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwLastNumberRedialSPIndex"))
if mibBuilder.loadTexts: bwLastNumberRedialSPEntry.setStatus('current')
bwLastNumberRedialSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 22, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwLastNumberRedialSPIndex.setStatus('current')
bwLastNumberRedialSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 22, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwLastNumberRedialSPID.setStatus('current')
bwLNRSPNumRedials = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 22, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwLNRSPNumRedials.setStatus('current')
bwLastNumberRedialGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 22, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwLastNumberRedialGroupIndex"))
if mibBuilder.loadTexts: bwLastNumberRedialGroupEntry.setStatus('current')
bwLastNumberRedialGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 22, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwLastNumberRedialGroupIndex.setStatus('current')
bwLastNumberRedialGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 22, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwLastNumberRedialGroupID.setStatus('current')
bwLNRGroupNumRedials = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 22, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwLNRGroupNumRedials.setStatus('current')
bwOCPNumGroupCallsBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPNumGroupCallsBlocked.setStatus('current')
bwOCPNumLocalCallsBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPNumLocalCallsBlocked.setStatus('current')
bwOCPNumTollFreeCallsBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPNumTollFreeCallsBlocked.setStatus('current')
bwOCPNumTollCallsBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPNumTollCallsBlocked.setStatus('current')
bwOCPNumIntlCallsBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPNumIntlCallsBlocked.setStatus('current')
bwOCPNumOperatorAssistedCallsBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPNumOperatorAssistedCallsBlocked.setStatus('current')
bwOCPNumChargeableDirAssistCallsBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPNumChargeableDirAssistCallsBlocked.setStatus('current')
bwOCPNumSpecialServices1CallsBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPNumSpecialServices1CallsBlocked.setStatus('current')
bwOCPNumSpecialServices2CallsBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPNumSpecialServices2CallsBlocked.setStatus('current')
bwOCPNumPremiumServices1CallsBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPNumPremiumServices1CallsBlocked.setStatus('current')
bwOCPNumPremiumServices2CallsBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPNumPremiumServices2CallsBlocked.setStatus('current')
bwOCPNumCasualCallsBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPNumCasualCallsBlocked.setStatus('current')
bwOCPNumURLDialingCallsBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPNumURLDialingCallsBlocked.setStatus('current')
bwOCPNumUnknownCallsBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 14), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPNumUnknownCallsBlocked.setStatus('current')
bwOutgoingCallingPlanSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15), )
if mibBuilder.loadTexts: bwOutgoingCallingPlanSPTable.setStatus('current')
bwOutgoingCallingPlanGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16), )
if mibBuilder.loadTexts: bwOutgoingCallingPlanGroupTable.setStatus('current')
bwOCPNumSuccessfulAuthorizations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 17), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPNumSuccessfulAuthorizations.setStatus('current')
bwOCPNumUnsuccessfulAuthorizations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 18), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPNumUnsuccessfulAuthorizations.setStatus('current')
bwOCPNumTransfers = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 19), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPNumTransfers.setStatus('current')
bwOCPSACNumSuccessfulLock = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 20), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSACNumSuccessfulLock.setStatus('current')
bwOCPSACNumSuccessfulUnlock = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 21), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSACNumSuccessfulUnlock.setStatus('current')
bwOCPSACNumUnsuccessfulLock = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 22), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSACNumUnsuccessfulLock.setStatus('current')
bwOCPSACNumUnsuccessfulUnlock = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 23), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSACNumUnsuccessfulUnlock.setStatus('current')
bwOCPSACNumUnsuccessfulCodeUsage = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 24), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSACNumUnsuccessfulCodeUsage.setStatus('current')
bwOCPNumOutsideGroupTransferBlocks = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 25), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPNumOutsideGroupTransferBlocks.setStatus('current')
bwOutgoingCallingPlanSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwOutgoingCallingPlanSPIndex"))
if mibBuilder.loadTexts: bwOutgoingCallingPlanSPEntry.setStatus('current')
bwOutgoingCallingPlanSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwOutgoingCallingPlanSPIndex.setStatus('current')
bwOutgoingCallingPlanSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwOutgoingCallingPlanSPID.setStatus('current')
bwOCPSPNumGroupCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSPNumGroupCallsBlocked.setStatus('current')
bwOCPSPNumLocalCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSPNumLocalCallsBlocked.setStatus('current')
bwOCPSPNumTollFreeCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSPNumTollFreeCallsBlocked.setStatus('current')
bwOCPSPNumTollCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSPNumTollCallsBlocked.setStatus('current')
bwOCPSPNumIntlCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSPNumIntlCallsBlocked.setStatus('current')
bwOCPSPNumOperatorAssistedCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSPNumOperatorAssistedCallsBlocked.setStatus('current')
bwOCPSPNumChargeableDirAssistCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSPNumChargeableDirAssistCallsBlocked.setStatus('current')
bwOCPSPNumSpecialServices1CallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSPNumSpecialServices1CallsBlocked.setStatus('current')
bwOCPSPNumSpecialServices2CallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSPNumSpecialServices2CallsBlocked.setStatus('current')
bwOCPSPNumPremiumServices1CallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSPNumPremiumServices1CallsBlocked.setStatus('current')
bwOCPSPNumPremiumServices2CallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSPNumPremiumServices2CallsBlocked.setStatus('current')
bwOCPSPNumCasualCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 14), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSPNumCasualCallsBlocked.setStatus('current')
bwOCPSPNumURLDialingCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 15), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSPNumURLDialingCallsBlocked.setStatus('current')
bwOCPSPNumUnknownCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 16), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSPNumUnknownCallsBlocked.setStatus('current')
bwOCPSPNumSuccessfulAuthorizations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 17), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSPNumSuccessfulAuthorizations.setStatus('current')
bwOCPSPNumUnsuccessfulAuthorizations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 18), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSPNumUnsuccessfulAuthorizations.setStatus('current')
bwOCPSPNumTransfers = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 19), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSPNumTransfers.setStatus('current')
bwOCPSACSPNumSuccessfulLock = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 20), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSACSPNumSuccessfulLock.setStatus('current')
bwOCPSACSPNumSuccessfulUnlock = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 21), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSACSPNumSuccessfulUnlock.setStatus('current')
bwOCPSACSPNumUnsuccessfulLock = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 22), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSACSPNumUnsuccessfulLock.setStatus('current')
bwOCPSACSPNumUnsuccessfulUnlock = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 23), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSACSPNumUnsuccessfulUnlock.setStatus('current')
bwOCPSACSPNumUnsuccessfulCodeUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 24), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSACSPNumUnsuccessfulCodeUsage.setStatus('current')
bwOCPSPNumOutsideGroupTransferBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 15, 1, 25), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSPNumOutsideGroupTransferBlocks.setStatus('current')
bwOutgoingCallingPlanGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwOutgoingCallingPlanGroupIndex"))
if mibBuilder.loadTexts: bwOutgoingCallingPlanGroupEntry.setStatus('current')
bwOutgoingCallingPlanGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwOutgoingCallingPlanGroupIndex.setStatus('current')
bwOutgoingCallingPlanGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwOutgoingCallingPlanGroupID.setStatus('current')
bwOCPGroupNumGroupCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPGroupNumGroupCallsBlocked.setStatus('current')
bwOCPGroupNumLocalCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPGroupNumLocalCallsBlocked.setStatus('current')
bwOCPGroupNumTollFreeCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPGroupNumTollFreeCallsBlocked.setStatus('current')
bwOCPGroupNumTollCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPGroupNumTollCallsBlocked.setStatus('current')
bwOCPGroupNumIntlCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPGroupNumIntlCallsBlocked.setStatus('current')
bwOCPGroupNumOperatorAssistedCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPGroupNumOperatorAssistedCallsBlocked.setStatus('current')
bwOCPGroupNumChargeableDirAssistCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPGroupNumChargeableDirAssistCallsBlocked.setStatus('current')
bwOCPGroupNumSpecialServices1CallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPGroupNumSpecialServices1CallsBlocked.setStatus('current')
bwOCPGroupNumSpecialServices2CallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPGroupNumSpecialServices2CallsBlocked.setStatus('current')
bwOCPGroupNumPremiumServices1CallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPGroupNumPremiumServices1CallsBlocked.setStatus('current')
bwOCPGroupNumPremiumServices2CallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPGroupNumPremiumServices2CallsBlocked.setStatus('current')
bwOCPGroupNumCasualCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 14), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPGroupNumCasualCallsBlocked.setStatus('current')
bwOCPGroupNumURLDialingCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 15), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPGroupNumURLDialingCallsBlocked.setStatus('current')
bwOCPGroupNumUnknownCallsBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 16), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPGroupNumUnknownCallsBlocked.setStatus('current')
bwOCPGroupNumSuccessfulAuthorizations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 17), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPGroupNumSuccessfulAuthorizations.setStatus('current')
bwOCPGroupNumUnsuccessfulAuthorizations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 18), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPGroupNumUnsuccessfulAuthorizations.setStatus('current')
bwOCPGroupNumTransfers = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 19), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPGroupNumTransfers.setStatus('current')
bwOCPSACGroupNumSuccessfulLock = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 20), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSACGroupNumSuccessfulLock.setStatus('current')
bwOCPSACGroupNumSuccessfulUnlock = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 21), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSACGroupNumSuccessfulUnlock.setStatus('current')
bwOCPSACGroupNumUnsuccessfulLock = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 22), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSACGroupNumUnsuccessfulLock.setStatus('current')
bwOCPSACGroupNumUnsuccessfulUnlock = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 23), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSACGroupNumUnsuccessfulUnlock.setStatus('current')
bwOCPSACGroupNumUnsuccessfulCodeUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 24), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPSACGroupNumUnsuccessfulCodeUsage.setStatus('current')
bwOCPGroupNumOutsideGroupTransferBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 23, 16, 1, 25), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwOCPGroupNumOutsideGroupTransferBlocks.setStatus('current')
bwPriorityAlertNumDistinctive = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 24, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPriorityAlertNumDistinctive.setStatus('current')
bwPriorityAlertSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 24, 2), )
if mibBuilder.loadTexts: bwPriorityAlertSPTable.setStatus('current')
bwPriorityAlertGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 24, 3), )
if mibBuilder.loadTexts: bwPriorityAlertGroupTable.setStatus('current')
bwPriorityAlertSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 24, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwPriorityAlertSPIndex"))
if mibBuilder.loadTexts: bwPriorityAlertSPEntry.setStatus('current')
bwPriorityAlertSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 24, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPriorityAlertSPIndex.setStatus('current')
bwPriorityAlertSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 24, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPriorityAlertSPID.setStatus('current')
bwPriorityAlertSPNumDistinctive = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 24, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPriorityAlertSPNumDistinctive.setStatus('current')
bwPriorityAlertGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 24, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwPriorityAlertGroupIndex"))
if mibBuilder.loadTexts: bwPriorityAlertGroupEntry.setStatus('current')
bwPriorityAlertGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 24, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPriorityAlertGroupIndex.setStatus('current')
bwPriorityAlertGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 24, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPriorityAlertGroupID.setStatus('current')
bwPriorityAlertGroupNumDistinctive = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 24, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPriorityAlertGroupNumDistinctive.setStatus('current')
bwSCANumAcceptances = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 25, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSCANumAcceptances.setStatus('current')
bwSelectiveCallAcceptanceSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 25, 2), )
if mibBuilder.loadTexts: bwSelectiveCallAcceptanceSPTable.setStatus('current')
bwSelectiveCallAcceptanceGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 25, 3), )
if mibBuilder.loadTexts: bwSelectiveCallAcceptanceGroupTable.setStatus('current')
bwSelectiveCallAcceptanceSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 25, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSelectiveCallAcceptanceSPIndex"))
if mibBuilder.loadTexts: bwSelectiveCallAcceptanceSPEntry.setStatus('current')
bwSelectiveCallAcceptanceSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 25, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSelectiveCallAcceptanceSPIndex.setStatus('current')
bwSelectiveCallAcceptanceSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 25, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSelectiveCallAcceptanceSPID.setStatus('current')
bwSCASPNumAcceptances = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 25, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSCASPNumAcceptances.setStatus('current')
bwSelectiveCallAcceptanceGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 25, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSelectiveCallAcceptanceGroupIndex"))
if mibBuilder.loadTexts: bwSelectiveCallAcceptanceGroupEntry.setStatus('current')
bwSelectiveCallAcceptanceGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 25, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSelectiveCallAcceptanceGroupIndex.setStatus('current')
bwSelectiveCallAcceptanceGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 25, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSelectiveCallAcceptanceGroupID.setStatus('current')
bwSCAGroupNumAcceptances = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 25, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSCAGroupNumAcceptances.setStatus('current')
bwSCFNumForwards = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 26, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSCFNumForwards.setStatus('current')
bwSelectiveCallForwardSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 26, 2), )
if mibBuilder.loadTexts: bwSelectiveCallForwardSPTable.setStatus('current')
bwSelectiveCallForwardGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 26, 3), )
if mibBuilder.loadTexts: bwSelectiveCallForwardGroupTable.setStatus('current')
bwSelectiveCallForwardSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 26, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSelectiveCallForwardSPIndex"))
if mibBuilder.loadTexts: bwSelectiveCallForwardSPEntry.setStatus('current')
bwSelectiveCallForwardSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 26, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSelectiveCallForwardSPIndex.setStatus('current')
bwSelectiveCallForwardSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 26, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSelectiveCallForwardSPID.setStatus('current')
bwSCFSPNumForwards = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 26, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSCFSPNumForwards.setStatus('current')
bwSelectiveCallForwardGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 26, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSelectiveCallForwardGroupIndex"))
if mibBuilder.loadTexts: bwSelectiveCallForwardGroupEntry.setStatus('current')
bwSelectiveCallForwardGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 26, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSelectiveCallForwardGroupIndex.setStatus('current')
bwSelectiveCallForwardGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 26, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSelectiveCallForwardGroupID.setStatus('current')
bwSCFGroupNumForwards = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 26, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSCFGroupNumForwards.setStatus('current')
bwSCRNumRejects = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 27, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSCRNumRejects.setStatus('current')
bwSelectiveCallRejectionSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 27, 2), )
if mibBuilder.loadTexts: bwSelectiveCallRejectionSPTable.setStatus('current')
bwSelectiveCallRejectionGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 27, 3), )
if mibBuilder.loadTexts: bwSelectiveCallRejectionGroupTable.setStatus('current')
bwSelectiveCallRejectionSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 27, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSelectiveCallRejectionSPIndex"))
if mibBuilder.loadTexts: bwSelectiveCallRejectionSPEntry.setStatus('current')
bwSelectiveCallRejectionSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 27, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSelectiveCallRejectionSPIndex.setStatus('current')
bwSelectiveCallRejectionSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 27, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSelectiveCallRejectionSPID.setStatus('current')
bwSCRSPNumRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 27, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSCRSPNumRejects.setStatus('current')
bwSelectiveCallRejectionGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 27, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSelectiveCallRejectionGroupIndex"))
if mibBuilder.loadTexts: bwSelectiveCallRejectionGroupEntry.setStatus('current')
bwSelectiveCallRejectionGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 27, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSelectiveCallRejectionGroupIndex.setStatus('current')
bwSelectiveCallRejectionGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 27, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSelectiveCallRejectionGroupID.setStatus('current')
bwSCRGroupNumRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 27, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSCRGroupNumRejects.setStatus('current')
bwSimRingPersonalNumAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 28, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSimRingPersonalNumAttempts.setStatus('current')
bwSimRingPersonalNumBusy = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 28, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSimRingPersonalNumBusy.setStatus('current')
bwSimRingPersonalSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 28, 3), )
if mibBuilder.loadTexts: bwSimRingPersonalSPTable.setStatus('current')
bwSimRingPersonalGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 28, 4), )
if mibBuilder.loadTexts: bwSimRingPersonalGroupTable.setStatus('current')
bwSimRingPersonalSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 28, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSimRingPersonalSPIndex"))
if mibBuilder.loadTexts: bwSimRingPersonalSPEntry.setStatus('current')
bwSimRingPersonalSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 28, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSimRingPersonalSPIndex.setStatus('current')
bwSimRingPersonalSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 28, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSimRingPersonalSPID.setStatus('current')
bwSimRingPersonalSPNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 28, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSimRingPersonalSPNumAttempts.setStatus('current')
bwSimRingPersonalSPNumBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 28, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSimRingPersonalSPNumBusy.setStatus('current')
bwSimRingPersonalGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 28, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSimRingPersonalGroupIndex"))
if mibBuilder.loadTexts: bwSimRingPersonalGroupEntry.setStatus('current')
bwSimRingPersonalGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 28, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSimRingPersonalGroupIndex.setStatus('current')
bwSimRingPersonalGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 28, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSimRingPersonalGroupID.setStatus('current')
bwSimRingPersonalGroupNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 28, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSimRingPersonalGroupNumAttempts.setStatus('current')
bwSimRingPersonalGroupNumBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 28, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSimRingPersonalGroupNumBusy.setStatus('current')
bwVMNumBusyGreetingsPlayed = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMNumBusyGreetingsPlayed.setStatus('current')
bwVMNumNoAnswerGreetingsPlayed = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMNumNoAnswerGreetingsPlayed.setStatus('current')
bwVMNumMessagesLeft = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMNumMessagesLeft.setStatus('current')
bwVMRNumBusyGreetingsRecorded = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRNumBusyGreetingsRecorded.setStatus('current')
bwVMRNumNoAnswerGreetingsRecorded = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRNumNoAnswerGreetingsRecorded.setStatus('current')
bwVMRNumPersonalizedNamesRecorded = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRNumPersonalizedNamesRecorded.setStatus('current')
bwVMRNumLoginAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRNumLoginAttempts.setStatus('current')
bwVMRNumLoginFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRNumLoginFailures.setStatus('current')
bwVMRNumComposeSendAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRNumComposeSendAttempts.setStatus('current')
bwVMRNumComposeSendGroupAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRNumComposeSendGroupAttempts.setStatus('current')
bwVMRNumForwardSendAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRNumForwardSendAttempts.setStatus('current')
bwVMRNumForwardSendGroupAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRNumForwardSendGroupAttempts.setStatus('current')
bwVMRNumReplySendAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRNumReplySendAttempts.setStatus('current')
bwVMRNumSendFailed = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 14), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRNumSendFailed.setStatus('current')
bwVMRNumSendGroupFailed = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 15), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRNumSendGroupFailed.setStatus('current')
bwVMRDeleteAllMsgsAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 16), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRDeleteAllMsgsAttempts.setStatus('current')
bwVMRCallBackAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 17), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRCallBackAttempts.setStatus('current')
bwVMRCallBackFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 18), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRCallBackFailures.setStatus('obsolete')
bwVPNumAABusHoursGreetingRecorded = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 19), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVPNumAABusHoursGreetingRecorded.setStatus('current')
bwVPNumAAAfterHoursGreetingRecorded = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 20), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVPNumAAAfterHoursGreetingRecorded.setStatus('current')
bwVPNumCFADestinationChanged = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 21), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVPNumCFADestinationChanged.setStatus('current')
bwVPNumPasscodeChanged = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 22), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVPNumPasscodeChanged.setStatus('current')
bwVoiceMessagingSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23), )
if mibBuilder.loadTexts: bwVoiceMessagingSPTable.setStatus('current')
bwVMRNumComposeSendListAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 24), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRNumComposeSendListAttempts.setStatus('current')
bwVMRNumForwardSendListAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 25), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRNumForwardSendListAttempts.setStatus('current')
bwVMRNumSendListFailed = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 26), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRNumSendListFailed.setStatus('current')
bwVPGreetingRecorded = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 27), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVPGreetingRecorded.setStatus('current')
bwVMGreetingRecorded = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 28), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMGreetingRecorded.setStatus('current')
bwVoiceMessagingGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29), )
if mibBuilder.loadTexts: bwVoiceMessagingGroupTable.setStatus('current')
bwVPCCall = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 30), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVPCCall.setStatus('current')
bwMultiMediaMsgDeposit = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 31), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMultiMediaMsgDeposit.setStatus('current')
bwVMMultiMediaGreetingRecorded = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 32), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMMultiMediaGreetingRecorded.setStatus('current')
bwAutoAttendantMultiMediaPromptRecorded = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 33), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAutoAttendantMultiMediaPromptRecorded.setStatus('current')
bwMessagingQuery = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 34), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMessagingQuery.setStatus('current')
bwMessagingQueryNoUser = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 35), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMessagingQueryNoUser.setStatus('current')
bwMessagingQueryNoMailbox = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 36), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMessagingQueryNoMailbox.setStatus('current')
bwVoiceMessagingSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwVoiceMessagingSPIndex"))
if mibBuilder.loadTexts: bwVoiceMessagingSPEntry.setStatus('current')
bwVoiceMessagingSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwVoiceMessagingSPIndex.setStatus('current')
bwVoiceMessagingSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwVoiceMessagingSPID.setStatus('current')
bwVMSPNumBusyGreetingsPlayed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMSPNumBusyGreetingsPlayed.setStatus('current')
bwVMSPNumNoAnswerGreetingsPlayed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMSPNumNoAnswerGreetingsPlayed.setStatus('current')
bwVMSPNumMessagesLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMSPNumMessagesLeft.setStatus('current')
bwVMRSPNumBusyGreetingsRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRSPNumBusyGreetingsRecorded.setStatus('current')
bwVMRSPNumNoAnswerGreetingsRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRSPNumNoAnswerGreetingsRecorded.setStatus('current')
bwVMRSPNumPersonalizedNamesRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRSPNumPersonalizedNamesRecorded.setStatus('current')
bwVMRSPNumLoginAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRSPNumLoginAttempts.setStatus('current')
bwVMRSPNumLoginFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRSPNumLoginFailures.setStatus('current')
bwVMRSPNumComposeSendAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRSPNumComposeSendAttempts.setStatus('current')
bwVMRSPNumComposeSendGroupAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRSPNumComposeSendGroupAttempts.setStatus('current')
bwVMRSPNumForwardSendAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRSPNumForwardSendAttempts.setStatus('current')
bwVMRSPNumForwardSendGroupAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 14), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRSPNumForwardSendGroupAttempts.setStatus('current')
bwVMRSPNumReplySendAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 15), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRSPNumReplySendAttempts.setStatus('current')
bwVMRSPNumSendFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 16), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRSPNumSendFailed.setStatus('current')
bwVMRSPNumSendGroupFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 17), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRSPNumSendGroupFailed.setStatus('current')
bwVMRSPDeleteAllMsgsAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 18), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRSPDeleteAllMsgsAttempts.setStatus('current')
bwVMRSPCallBackAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 19), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRSPCallBackAttempts.setStatus('current')
bwVMRSPCallBackFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 20), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRSPCallBackFailures.setStatus('obsolete')
bwVPSPNumAABusHoursGreetingRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 21), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVPSPNumAABusHoursGreetingRecorded.setStatus('current')
bwVPSPNumAAAfterHoursGreetingRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 22), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVPSPNumAAAfterHoursGreetingRecorded.setStatus('current')
bwVPSPNumCFADestinationChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 23), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVPSPNumCFADestinationChanged.setStatus('current')
bwVPSPNumPasscodeChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 24), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVPSPNumPasscodeChanged.setStatus('current')
bwVMRSPNumComposeSendListAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 25), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRSPNumComposeSendListAttempts.setStatus('current')
bwVMRSPNumForwardSendListAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 26), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRSPNumForwardSendListAttempts.setStatus('current')
bwVMRSPNumSendListFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 27), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRSPNumSendListFailed.setStatus('current')
bwVPSPGreetingRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 28), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVPSPGreetingRecorded.setStatus('current')
bwVMSPGreetingRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 29), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMSPGreetingRecorded.setStatus('current')
bwVPCSPCall = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 30), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVPCSPCall.setStatus('current')
bwSPMultiMediaMsgDeposit = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 31), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSPMultiMediaMsgDeposit.setStatus('current')
bwVMSPMultiMediaGreetingRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 32), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMSPMultiMediaGreetingRecorded.setStatus('current')
bwAutoAttendantSPMultiMediaPromptRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 33), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAutoAttendantSPMultiMediaPromptRecorded.setStatus('current')
bwMessagingSPQuery = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 34), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMessagingSPQuery.setStatus('current')
bwMessagingSPQueryNoUser = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 35), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMessagingSPQueryNoUser.setStatus('current')
bwMessagingSPQueryNoMailbox = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 23, 1, 36), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMessagingSPQueryNoMailbox.setStatus('current')
bwVoiceMessagingGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwVoiceMessagingGroupIndex"))
if mibBuilder.loadTexts: bwVoiceMessagingGroupEntry.setStatus('current')
bwVoiceMessagingGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwVoiceMessagingGroupIndex.setStatus('current')
bwVoiceMessagingGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwVoiceMessagingGroupID.setStatus('current')
bwVMGroupNumBusyGreetingsPlayed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMGroupNumBusyGreetingsPlayed.setStatus('current')
bwVMGroupNumNoAnswerGreetingsPlayed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMGroupNumNoAnswerGreetingsPlayed.setStatus('current')
bwVMGroupNumMessagesLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMGroupNumMessagesLeft.setStatus('current')
bwVMRGroupNumBusyGreetingsRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRGroupNumBusyGreetingsRecorded.setStatus('current')
bwVMRGroupNumNoAnswerGreetingsRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRGroupNumNoAnswerGreetingsRecorded.setStatus('current')
bwVMRGroupNumPersonalizedNamesRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRGroupNumPersonalizedNamesRecorded.setStatus('current')
bwVMRGroupNumLoginAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRGroupNumLoginAttempts.setStatus('current')
bwVMRGroupNumLoginFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRGroupNumLoginFailures.setStatus('current')
bwVMRGroupNumComposeSendAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRGroupNumComposeSendAttempts.setStatus('current')
bwVMRGroupNumComposeSendGroupAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRGroupNumComposeSendGroupAttempts.setStatus('current')
bwVMRGroupNumForwardSendAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRGroupNumForwardSendAttempts.setStatus('current')
bwVMRGroupNumForwardSendGroupAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 14), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRGroupNumForwardSendGroupAttempts.setStatus('current')
bwVMRGroupNumReplySendAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 15), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRGroupNumReplySendAttempts.setStatus('current')
bwVMRGroupNumSendFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 16), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRGroupNumSendFailed.setStatus('current')
bwVMRGroupNumSendGroupFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 17), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRGroupNumSendGroupFailed.setStatus('current')
bwVMRGroupDeleteAllMsgsAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 18), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRGroupDeleteAllMsgsAttempts.setStatus('current')
bwVMRGroupCallBackAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 19), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRGroupCallBackAttempts.setStatus('current')
bwVMRGroupCallBackFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 20), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRGroupCallBackFailures.setStatus('obsolete')
bwVPGroupNumAABusHoursGreetingRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 21), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVPGroupNumAABusHoursGreetingRecorded.setStatus('current')
bwVPGroupNumAAAfterHoursGreetingRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 22), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVPGroupNumAAAfterHoursGreetingRecorded.setStatus('current')
bwVPGroupNumCFADestinationChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 23), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVPGroupNumCFADestinationChanged.setStatus('current')
bwVPGroupNumPasscodeChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 24), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVPGroupNumPasscodeChanged.setStatus('current')
bwVMRGroupNumComposeSendListAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 25), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRGroupNumComposeSendListAttempts.setStatus('current')
bwVMRGroupNumForwardSendListAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 26), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRGroupNumForwardSendListAttempts.setStatus('current')
bwVMRGroupNumSendListFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 27), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMRGroupNumSendListFailed.setStatus('current')
bwVPGroupGreetingRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 28), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVPGroupGreetingRecorded.setStatus('current')
bwVMGroupGreetingRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 29), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMGroupGreetingRecorded.setStatus('current')
bwVPCGroupCall = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 30), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVPCGroupCall.setStatus('current')
bwGroupMultiMediaMsgDeposit = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 31), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwGroupMultiMediaMsgDeposit.setStatus('current')
bwVMGroupMultiMediaGreetingRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 32), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVMGroupMultiMediaGreetingRecorded.setStatus('current')
bwAutoAttendantGroupMultiMediaPromptRecorded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 33), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAutoAttendantGroupMultiMediaPromptRecorded.setStatus('current')
bwMessagingGroupQuery = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 34), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMessagingGroupQuery.setStatus('current')
bwMessagingGroupQueryNoUser = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 35), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMessagingGroupQueryNoUser.setStatus('current')
bwMessagingGroupQueryNoMailbox = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 29, 29, 1, 36), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMessagingGroupQueryNoMailbox.setStatus('current')
bwSeriesCompletionNumAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 30, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSeriesCompletionNumAttempts.setStatus('current')
bwSeriesCompletionNumBusy = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 30, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSeriesCompletionNumBusy.setStatus('current')
bwSeriesCompletionSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 30, 3), )
if mibBuilder.loadTexts: bwSeriesCompletionSPTable.setStatus('current')
bwSeriesCompletionGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 30, 4), )
if mibBuilder.loadTexts: bwSeriesCompletionGroupTable.setStatus('current')
bwSeriesCompletionSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 30, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSeriesCompletionSPIndex"))
if mibBuilder.loadTexts: bwSeriesCompletionSPEntry.setStatus('current')
bwSeriesCompletionSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 30, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSeriesCompletionSPIndex.setStatus('current')
bwSeriesCompletionSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 30, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSeriesCompletionSPID.setStatus('current')
bwSeriesCompletionSPNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 30, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSeriesCompletionSPNumAttempts.setStatus('current')
bwSeriesCompletionSPNumBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 30, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSeriesCompletionSPNumBusy.setStatus('current')
bwSeriesCompletionGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 30, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSeriesCompletionGroupIndex"))
if mibBuilder.loadTexts: bwSeriesCompletionGroupEntry.setStatus('current')
bwSeriesCompletionGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 30, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSeriesCompletionGroupIndex.setStatus('current')
bwSeriesCompletionGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 30, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSeriesCompletionGroupID.setStatus('current')
bwSeriesCompletionGroupNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 30, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSeriesCompletionGroupNumAttempts.setStatus('current')
bwSeriesCompletionGroupNumBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 30, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSeriesCompletionGroupNumBusy.setStatus('current')
bwInterceptUserOriginationInvocations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwInterceptUserOriginationInvocations.setStatus('current')
bwInterceptGroupOriginationInvocations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwInterceptGroupOriginationInvocations.setStatus('current')
bwInterceptUserTerminationInvocations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwInterceptUserTerminationInvocations.setStatus('current')
bwInterceptGroupTerminationInvocations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwInterceptGroupTerminationInvocations.setStatus('current')
bwInterceptTransfers = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwInterceptTransfers.setStatus('current')
bwInterceptSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 6), )
if mibBuilder.loadTexts: bwInterceptSPTable.setStatus('current')
bwInterceptGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 7), )
if mibBuilder.loadTexts: bwInterceptGroupTable.setStatus('current')
bwInterceptSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 6, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwInterceptSPIndex"))
if mibBuilder.loadTexts: bwInterceptSPEntry.setStatus('current')
bwInterceptSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwInterceptSPIndex.setStatus('current')
bwInterceptSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwInterceptSPID.setStatus('current')
bwInterceptSPUserOriginationInvocations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 6, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwInterceptSPUserOriginationInvocations.setStatus('current')
bwInterceptSPGroupOriginationInvocations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 6, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwInterceptSPGroupOriginationInvocations.setStatus('current')
bwInterceptSPUserTerminationInvocations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 6, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwInterceptSPUserTerminationInvocations.setStatus('current')
bwInterceptSPGroupTerminationInvocations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 6, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwInterceptSPGroupTerminationInvocations.setStatus('current')
bwInterceptSPTransfers = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 6, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwInterceptSPTransfers.setStatus('current')
bwInterceptGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 7, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwInterceptGroupIndex"))
if mibBuilder.loadTexts: bwInterceptGroupEntry.setStatus('current')
bwInterceptGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 7, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwInterceptGroupIndex.setStatus('current')
bwInterceptGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwInterceptGroupID.setStatus('current')
bwInterceptGroupUserOriginationInvocations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 7, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwInterceptGroupUserOriginationInvocations.setStatus('current')
bwInterceptGroupGroupOriginationInvocations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 7, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwInterceptGroupGroupOriginationInvocations.setStatus('current')
bwInterceptGroupUserTerminationInvocations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 7, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwInterceptGroupUserTerminationInvocations.setStatus('current')
bwInterceptGroupGroupTerminationInvocations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 7, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwInterceptGroupGroupTerminationInvocations.setStatus('current')
bwInterceptGroupTransfers = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 31, 7, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwInterceptGroupTransfers.setStatus('current')
bwICGroupPortLimitExceeded = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICGroupPortLimitExceeded.setStatus('current')
bwICNumAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICNumAttempts.setStatus('current')
bwInstantConferencingSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 3), )
if mibBuilder.loadTexts: bwInstantConferencingSPTable.setStatus('current')
bwInstantConferencingGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 4), )
if mibBuilder.loadTexts: bwInstantConferencingGroupTable.setStatus('current')
bwInstantConferencingBridgeTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 5), )
if mibBuilder.loadTexts: bwInstantConferencingBridgeTable.setStatus('current')
bwICOutdialNumAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICOutdialNumAttempts.setStatus('current')
bwInstantConferencingSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwInstantConferencingSPIndex"))
if mibBuilder.loadTexts: bwInstantConferencingSPEntry.setStatus('current')
bwInstantConferencingSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwInstantConferencingSPIndex.setStatus('current')
bwInstantConferencingSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwInstantConferencingSPID.setStatus('current')
bwICSPGroupPortLimitExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICSPGroupPortLimitExceeded.setStatus('current')
bwICSPNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICSPNumAttempts.setStatus('current')
bwICSPOutdialNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 3, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICSPOutdialNumAttempts.setStatus('current')
bwInstantConferencingGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwInstantConferencingGroupIndex"))
if mibBuilder.loadTexts: bwInstantConferencingGroupEntry.setStatus('current')
bwInstantConferencingGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwInstantConferencingGroupIndex.setStatus('current')
bwInstantConferencingGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwInstantConferencingGroupID.setStatus('current')
bwICGroupGroupPortLimitExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICGroupGroupPortLimitExceeded.setStatus('current')
bwICGroupNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICGroupNumAttempts.setStatus('current')
bwICGroupOutdialNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 4, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICGroupOutdialNumAttempts.setStatus('current')
bwInstantConferencingBridgeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 5, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwInstantConferencingBridgeIndex"))
if mibBuilder.loadTexts: bwInstantConferencingBridgeEntry.setStatus('current')
bwInstantConferencingBridgeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwInstantConferencingBridgeIndex.setStatus('current')
bwInstantConferencingBridgeName = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwInstantConferencingBridgeName.setStatus('current')
bwInstantConferencingBridgeGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 5, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwInstantConferencingBridgeGroupName.setStatus('current')
bwInstantConferencingCurrentUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 5, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwInstantConferencingCurrentUsage.setStatus('current')
bwInstantConferencingTodaysPeakUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 5, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwInstantConferencingTodaysPeakUsage.setStatus('current')
bwInstantConferencingYesterdaysPeakUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 32, 5, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwInstantConferencingYesterdaysPeakUsage.setStatus('current')
bwCallingLineIDDeliveryBlockPerCallBlocks = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 33, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallingLineIDDeliveryBlockPerCallBlocks.setStatus('current')
bwCallingLineIDDeliveryBlockSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 33, 2), )
if mibBuilder.loadTexts: bwCallingLineIDDeliveryBlockSPTable.setStatus('current')
bwCallingLineIDDeliveryBlockGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 33, 3), )
if mibBuilder.loadTexts: bwCallingLineIDDeliveryBlockGroupTable.setStatus('current')
bwCallingLineIDDeliveryPerCall = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 33, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallingLineIDDeliveryPerCall.setStatus('current')
bwCallingLineIDDeliveryBlockSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 33, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallingLineIDDeliveryBlockSPIndex"))
if mibBuilder.loadTexts: bwCallingLineIDDeliveryBlockSPEntry.setStatus('current')
bwCallingLineIDDeliveryBlockSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 33, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallingLineIDDeliveryBlockSPIndex.setStatus('current')
bwCallingLineIDDeliveryBlockSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 33, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallingLineIDDeliveryBlockSPID.setStatus('current')
bwCallingLineIDDeliveryBlockSPPerCallBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 33, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallingLineIDDeliveryBlockSPPerCallBlocks.setStatus('current')
bwCallingLineIDDeliveryPerCallSP = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 33, 2, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallingLineIDDeliveryPerCallSP.setStatus('current')
bwCallingLineIDDeliveryBlockGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 33, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallingLineIDDeliveryBlockGroupIndex"))
if mibBuilder.loadTexts: bwCallingLineIDDeliveryBlockGroupEntry.setStatus('current')
bwCallingLineIDDeliveryBlockGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 33, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallingLineIDDeliveryBlockGroupIndex.setStatus('current')
bwCallingLineIDDeliveryBlockGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 33, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallingLineIDDeliveryBlockGroupID.setStatus('current')
bwCallingLineIDDeliveryBlockGroupPerCallBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 33, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallingLineIDDeliveryBlockGroupPerCallBlocks.setStatus('current')
bwCallingLineIDDeliveryPerCallGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 33, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallingLineIDDeliveryPerCallGroup.setStatus('current')
bwSessionAuditNumCallsAudited = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSessionAuditNumCallsAudited.setStatus('current')
bwSessionAuditNumEndpointsAudited = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSessionAuditNumEndpointsAudited.setStatus('current')
bwSessionAuditNumCallsFailedAudit = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSessionAuditNumCallsFailedAudit.setStatus('current')
bwSessionAuditNumEndpointsFailedAudit = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSessionAuditNumEndpointsFailedAudit.setStatus('current')
bwSessionAuditSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 5), )
if mibBuilder.loadTexts: bwSessionAuditSPTable.setStatus('current')
bwSessionAuditGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 6), )
if mibBuilder.loadTexts: bwSessionAuditGroupTable.setStatus('current')
bwSessionAuditSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 5, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSessionAuditSPIndex"))
if mibBuilder.loadTexts: bwSessionAuditSPEntry.setStatus('current')
bwSessionAuditSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSessionAuditSPIndex.setStatus('current')
bwSessionAuditSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSessionAuditSPID.setStatus('current')
bwSessionAuditSPNumCallsAudited = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 5, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSessionAuditSPNumCallsAudited.setStatus('current')
bwSessionAuditSPNumEndpointsAudited = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 5, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSessionAuditSPNumEndpointsAudited.setStatus('current')
bwSessionAuditSPNumCallsFailedAudit = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 5, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSessionAuditSPNumCallsFailedAudit.setStatus('current')
bwSessionAuditSPNumEndpointsFailedAudit = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 5, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSessionAuditSPNumEndpointsFailedAudit.setStatus('current')
bwSessionAuditGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 6, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSessionAuditGroupIndex"))
if mibBuilder.loadTexts: bwSessionAuditGroupEntry.setStatus('current')
bwSessionAuditGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSessionAuditGroupIndex.setStatus('current')
bwSessionAuditGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSessionAuditGroupID.setStatus('current')
bwSessionAuditGroupNumCallsAudited = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 6, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSessionAuditGroupNumCallsAudited.setStatus('current')
bwSessionAuditGroupNumEndpointsAudited = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 6, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSessionAuditGroupNumEndpointsAudited.setStatus('current')
bwSessionAuditGroupNumCallsFailedAudit = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 6, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSessionAuditGroupNumCallsFailedAudit.setStatus('current')
bwSessionAuditGroupNumEndpointsFailedAudit = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 34, 6, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSessionAuditGroupNumEndpointsFailedAudit.setStatus('current')
bwWindowsMessagingIMSessionSuccessCounter = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 35, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwWindowsMessagingIMSessionSuccessCounter.setStatus('current')
bwCallWaitingSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 36, 1), )
if mibBuilder.loadTexts: bwCallWaitingSPTable.setStatus('current')
bwCWNumPhoneCancellations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 36, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCWNumPhoneCancellations.setStatus('current')
bwCallWaitingGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 36, 3), )
if mibBuilder.loadTexts: bwCallWaitingGroupTable.setStatus('current')
bwCallWaitingSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 36, 1, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallWaitingSPIndex"))
if mibBuilder.loadTexts: bwCallWaitingSPEntry.setStatus('current')
bwCallWaitingSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 36, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallWaitingSPIndex.setStatus('current')
bwCallWaitingSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 36, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallWaitingSPID.setStatus('current')
bwCWSPNumPhoneCancellations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 36, 1, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCWSPNumPhoneCancellations.setStatus('current')
bwCallWaitingGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 36, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallWaitingGroupIndex"))
if mibBuilder.loadTexts: bwCallWaitingGroupEntry.setStatus('current')
bwCallWaitingGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 36, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallWaitingGroupIndex.setStatus('current')
bwCallWaitingGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 36, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallWaitingGroupID.setStatus('current')
bwCWGroupNumPhoneCancellations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 36, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCWGroupNumPhoneCancellations.setStatus('current')
bwAlternateNumbersSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 37, 1), )
if mibBuilder.loadTexts: bwAlternateNumbersSPTable.setStatus('current')
bwAlternateNumbersUsage = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 37, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAlternateNumbersUsage.setStatus('current')
bwAlternateNumbersGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 37, 3), )
if mibBuilder.loadTexts: bwAlternateNumbersGroupTable.setStatus('current')
bwAlternateNumbersSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 37, 1, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwAlternateNumbersSPIndex"))
if mibBuilder.loadTexts: bwAlternateNumbersSPEntry.setStatus('current')
bwAlternateNumbersSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 37, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAlternateNumbersSPIndex.setStatus('current')
bwAlternateNumbersSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 37, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAlternateNumbersSPID.setStatus('current')
bwAlternateNumbersSPUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 37, 1, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAlternateNumbersSPUsage.setStatus('current')
bwAlternateNumbersGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 37, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwAlternateNumbersGroupIndex"))
if mibBuilder.loadTexts: bwAlternateNumbersGroupEntry.setStatus('current')
bwAlternateNumbersGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 37, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAlternateNumbersGroupIndex.setStatus('current')
bwAlternateNumbersGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 37, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAlternateNumbersGroupID.setStatus('current')
bwAlternateNumbersGroupUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 37, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAlternateNumbersGroupUsage.setStatus('current')
bwCotActivation = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 38, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCotActivation.setStatus('current')
bwCotFailureNoId = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 38, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCotFailureNoId.setStatus('current')
bwCotSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 38, 3), )
if mibBuilder.loadTexts: bwCotSPTable.setStatus('current')
bwCotGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 38, 4), )
if mibBuilder.loadTexts: bwCotGroupTable.setStatus('current')
bwCotSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 38, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCotSPIndex"))
if mibBuilder.loadTexts: bwCotSPEntry.setStatus('current')
bwCotSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 38, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCotSPIndex.setStatus('current')
bwCotSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 38, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCotSPID.setStatus('current')
bwCotSPActivation = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 38, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCotSPActivation.setStatus('current')
bwCotSPFailureNoId = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 38, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCotSPFailureNoId.setStatus('current')
bwCotGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 38, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCotGroupIndex"))
if mibBuilder.loadTexts: bwCotGroupEntry.setStatus('current')
bwCotGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 38, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCotGroupIndex.setStatus('current')
bwCotGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 38, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCotGroupID.setStatus('current')
bwCotGroupActivation = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 38, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCotGroupActivation.setStatus('current')
bwCotGroupFailureNoId = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 38, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCotGroupFailureNoId.setStatus('current')
bwSD8NumTimesDialed = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 39, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSD8NumTimesDialed.setStatus('current')
bwSD8NumTimesProgrammed = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 39, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSD8NumTimesProgrammed.setStatus('current')
bwSD8SPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 39, 3), )
if mibBuilder.loadTexts: bwSD8SPTable.setStatus('current')
bwSD8GroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 39, 4), )
if mibBuilder.loadTexts: bwSD8GroupTable.setStatus('current')
bwSD8SPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 39, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSD8SPIndex"))
if mibBuilder.loadTexts: bwSD8SPEntry.setStatus('current')
bwSD8SPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 39, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSD8SPIndex.setStatus('current')
bwSD8SPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 39, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSD8SPID.setStatus('current')
bwSD8SPNumTimesDialed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 39, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSD8SPNumTimesDialed.setStatus('current')
bwSD8SPNumTimesProgrammed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 39, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSD8SPNumTimesProgrammed.setStatus('current')
bwSD8GroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 39, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSD8GroupIndex"))
if mibBuilder.loadTexts: bwSD8GroupEntry.setStatus('current')
bwSD8GroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 39, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSD8GroupIndex.setStatus('current')
bwSD8GroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 39, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSD8GroupID.setStatus('current')
bwSD8GroupNumTimesDialed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 39, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSD8GroupNumTimesDialed.setStatus('current')
bwSD8GroupNumTimesProgrammed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 39, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSD8GroupNumTimesProgrammed.setStatus('current')
bwMusicOnHoldNumUses = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 40, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMusicOnHoldNumUses.setStatus('current')
bwMusicOnHoldSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 40, 2), )
if mibBuilder.loadTexts: bwMusicOnHoldSPTable.setStatus('current')
bwMusicOnHoldGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 40, 3), )
if mibBuilder.loadTexts: bwMusicOnHoldGroupTable.setStatus('current')
bwMusicOnHoldExternalSourceNumFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 40, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMusicOnHoldExternalSourceNumFailures.setStatus('current')
bwMusicOnHoldSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 40, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwMusicOnHoldSPIndex"))
if mibBuilder.loadTexts: bwMusicOnHoldSPEntry.setStatus('current')
bwMusicOnHoldSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 40, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwMusicOnHoldSPIndex.setStatus('current')
bwMusicOnHoldSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 40, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwMusicOnHoldSPID.setStatus('current')
bwMusicOnHoldSPNumUses = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 40, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMusicOnHoldSPNumUses.setStatus('current')
bwMusicOnHoldSPExternalSourceNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 40, 2, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMusicOnHoldSPExternalSourceNumFailures.setStatus('current')
bwMusicOnHoldGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 40, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwMusicOnHoldGroupIndex"))
if mibBuilder.loadTexts: bwMusicOnHoldGroupEntry.setStatus('current')
bwMusicOnHoldGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 40, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwMusicOnHoldGroupIndex.setStatus('current')
bwMusicOnHoldGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 40, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwMusicOnHoldGroupID.setStatus('current')
bwMusicOnHoldGroupNumUses = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 40, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMusicOnHoldGroupNumUses.setStatus('current')
bwMusicOnHoldGroupExternalSourceNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 40, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMusicOnHoldGroupExternalSourceNumFailures.setStatus('current')
bwCNAMQueriesSent = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 41, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCNAMQueriesSent.setStatus('current')
bwCNAMQueriesFailed = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 41, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCNAMQueriesFailed.setStatus('current')
bwCNAMQueriesTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 41, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCNAMQueriesTimeout.setStatus('current')
bwThirdPartyMWIControlNotifyIns = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 42, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwThirdPartyMWIControlNotifyIns.setStatus('current')
bwThirdPartyMWIControlNotifyFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 42, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwThirdPartyMWIControlNotifyFailures.setStatus('current')
bwCallCenterReportEmailed = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 43, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallCenterReportEmailed.setStatus('current')
bwCallCenterSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 43, 2), )
if mibBuilder.loadTexts: bwCallCenterSPTable.setStatus('current')
bwCallCenterGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 43, 3), )
if mibBuilder.loadTexts: bwCallCenterGroupTable.setStatus('current')
bwCallCenterSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 43, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallCenterSPIndex"))
if mibBuilder.loadTexts: bwCallCenterSPEntry.setStatus('current')
bwCallCenterSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 43, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallCenterSPIndex.setStatus('current')
bwCallCenterSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 43, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallCenterSPID.setStatus('current')
bwCallCenterSPReportEmailed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 43, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallCenterSPReportEmailed.setStatus('current')
bwCallCenterGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 43, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallCenterGroupIndex"))
if mibBuilder.loadTexts: bwCallCenterGroupEntry.setStatus('current')
bwCallCenterGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 43, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallCenterGroupIndex.setStatus('current')
bwCallCenterGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 43, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallCenterGroupID.setStatus('current')
bwCallCenterGroupReportEmailed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 43, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallCenterGroupReportEmailed.setStatus('current')
bwCFGNAForward = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFGNAForward.setStatus('current')
bwCFGNAOverflowForward = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFGNAOverflowForward.setStatus('current')
bwCFGNAOverflowNoForward = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFGNAOverflowNoForward.setStatus('current')
bwCFGNASPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 4), )
if mibBuilder.loadTexts: bwCFGNASPTable.setStatus('current')
bwCFGNAGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 5), )
if mibBuilder.loadTexts: bwCFGNAGroupTable.setStatus('current')
bwCFGNAExternalForward = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFGNAExternalForward.setStatus('current')
bwCFGNAExternalNoForward = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFGNAExternalNoForward.setStatus('current')
bwCFGNASPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCFGNASPIndex"))
if mibBuilder.loadTexts: bwCFGNASPEntry.setStatus('current')
bwCFGNASPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCFGNASPIndex.setStatus('current')
bwCFGNASPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCFGNASPID.setStatus('current')
bwCFGNASPForward = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFGNASPForward.setStatus('current')
bwCFGNASPOverflowForward = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFGNASPOverflowForward.setStatus('current')
bwCFGNASPOverflowNoForward = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 4, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFGNASPOverflowNoForward.setStatus('current')
bwCFGNASPExternalForward = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 4, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFGNASPExternalForward.setStatus('current')
bwCFGNASPExternalNoForward = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 4, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFGNASPExternalNoForward.setStatus('current')
bwCFGNAGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 5, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCFGNAGroupIndex"))
if mibBuilder.loadTexts: bwCFGNAGroupEntry.setStatus('current')
bwCFGNAGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCFGNAGroupIndex.setStatus('current')
bwCFGNAGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCFGNAGroupID.setStatus('current')
bwCFGNAGroupForward = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 5, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFGNAGroupForward.setStatus('current')
bwCFGNAGroupOverflowForward = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 5, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFGNAGroupOverflowForward.setStatus('current')
bwCFGNAGroupOverflowNoForward = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 5, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFGNAGroupOverflowNoForward.setStatus('current')
bwCFGNAGroupExternalForward = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 5, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFGNAGroupExternalForward.setStatus('current')
bwCFGNAGroupExternalNoForward = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 44, 5, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFGNAGroupExternalNoForward.setStatus('current')
bwSD100Program = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 45, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSD100Program.setStatus('current')
bwSD100Call = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 45, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSD100Call.setStatus('current')
bwSD100SPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 45, 3), )
if mibBuilder.loadTexts: bwSD100SPTable.setStatus('current')
bwSD100GroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 45, 4), )
if mibBuilder.loadTexts: bwSD100GroupTable.setStatus('current')
bwSD100SPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 45, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSD100SPIndex"))
if mibBuilder.loadTexts: bwSD100SPEntry.setStatus('current')
bwSD100SPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 45, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSD100SPIndex.setStatus('current')
bwSD100SPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 45, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSD100SPID.setStatus('current')
bwSD100SPProgram = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 45, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSD100SPProgram.setStatus('current')
bwSD100SPCall = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 45, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSD100SPCall.setStatus('current')
bwSD100GroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 45, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSD100GroupIndex"))
if mibBuilder.loadTexts: bwSD100GroupEntry.setStatus('current')
bwSD100GroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 45, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSD100GroupIndex.setStatus('current')
bwSD100GroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 45, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSD100GroupID.setStatus('current')
bwSD100GroupProgram = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 45, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSD100GroupProgram.setStatus('current')
bwSD100GroupCall = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 45, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSD100GroupCall.setStatus('current')
bwThirdPartyVoiceMailNbOfCFWBusy = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 46, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwThirdPartyVoiceMailNbOfCFWBusy.setStatus('current')
bwThirdPartyVoiceMailNbOfCFWNoAnswer = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 46, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwThirdPartyVoiceMailNbOfCFWNoAnswer.setStatus('current')
bwThirdPartyVMailSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 46, 3), )
if mibBuilder.loadTexts: bwThirdPartyVMailSPTable.setStatus('current')
bwThirdPartyVMailGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 46, 4), )
if mibBuilder.loadTexts: bwThirdPartyVMailGroupTable.setStatus('current')
bwThirdPartyVMailSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 46, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwThirdPartyVMailSPIndex"))
if mibBuilder.loadTexts: bwThirdPartyVMailSPEntry.setStatus('current')
bwThirdPartyVMailSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 46, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwThirdPartyVMailSPIndex.setStatus('current')
bwThirdPartyVMailSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 46, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwThirdPartyVMailSPID.setStatus('current')
bwThirdPartyVoiceMailSPNbOfCFWBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 46, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwThirdPartyVoiceMailSPNbOfCFWBusy.setStatus('current')
bwThirdPartyVoiceMailSPNbOfCFWNoAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 46, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwThirdPartyVoiceMailSPNbOfCFWNoAnswer.setStatus('current')
bwThirdPartyVMailGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 46, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwThirdPartyVMailGroupIndex"))
if mibBuilder.loadTexts: bwThirdPartyVMailGroupEntry.setStatus('current')
bwThirdPartyVMailGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 46, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwThirdPartyVMailGroupIndex.setStatus('current')
bwThirdPartyVMailGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 46, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwThirdPartyVMailGroupID.setStatus('current')
bwThirdPartyVoiceMailGroupNbOfCFWBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 46, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwThirdPartyVoiceMailGroupNbOfCFWBusy.setStatus('current')
bwThirdPartyVoiceMailGroupNbOfCFWNoAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 46, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwThirdPartyVoiceMailGroupNbOfCFWNoAnswer.setStatus('current')
bwDirectedCallPickupNumAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 47, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDirectedCallPickupNumAttempts.setStatus('current')
bwDirectedCallPickupNumFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 47, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDirectedCallPickupNumFailures.setStatus('current')
bwDirectedCallPickupSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 47, 3), )
if mibBuilder.loadTexts: bwDirectedCallPickupSPTable.setStatus('current')
bwDirectedCallPickupGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 47, 4), )
if mibBuilder.loadTexts: bwDirectedCallPickupGroupTable.setStatus('current')
bwDirectedCallPickupSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 47, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwDirectedCallPickupSPIndex"))
if mibBuilder.loadTexts: bwDirectedCallPickupSPEntry.setStatus('current')
bwDirectedCallPickupSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 47, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDirectedCallPickupSPIndex.setStatus('current')
bwDirectedCallPickupSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 47, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDirectedCallPickupSPID.setStatus('current')
bwDirectedCallPickupSPNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 47, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDirectedCallPickupSPNumAttempts.setStatus('current')
bwDirectedCallPickupSPNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 47, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDirectedCallPickupSPNumFailures.setStatus('current')
bwDirectedCallPickupGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 47, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwDirectedCallPickupGroupIndex"))
if mibBuilder.loadTexts: bwDirectedCallPickupGroupEntry.setStatus('current')
bwDirectedCallPickupGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 47, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDirectedCallPickupGroupIndex.setStatus('current')
bwDirectedCallPickupGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 47, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDirectedCallPickupGroupID.setStatus('current')
bwDirectedCallPickupGroupNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 47, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDirectedCallPickupGroupNumAttempts.setStatus('current')
bwDirectedCallPickupGroupNumFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 47, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDirectedCallPickupGroupNumFailures.setStatus('current')
bwFlashCallHoldNumActivations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 48, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFlashCallHoldNumActivations.setStatus('current')
bwFlashCallHoldSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 48, 2), )
if mibBuilder.loadTexts: bwFlashCallHoldSPTable.setStatus('current')
bwFlashCallHoldGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 48, 3), )
if mibBuilder.loadTexts: bwFlashCallHoldGroupTable.setStatus('current')
bwFlashCallHoldSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 48, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwFlashCallHoldSPIndex"))
if mibBuilder.loadTexts: bwFlashCallHoldSPEntry.setStatus('current')
bwFlashCallHoldSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 48, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashCallHoldSPIndex.setStatus('current')
bwFlashCallHoldSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 48, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashCallHoldSPID.setStatus('current')
bwFlashCallHoldSPNumActivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 48, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFlashCallHoldSPNumActivations.setStatus('current')
bwFlashCallHoldGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 48, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwFlashCallHoldGroupIndex"))
if mibBuilder.loadTexts: bwFlashCallHoldGroupEntry.setStatus('current')
bwFlashCallHoldGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 48, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashCallHoldGroupIndex.setStatus('current')
bwFlashCallHoldGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 48, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFlashCallHoldGroupID.setStatus('current')
bwFlashCallHoldGroupNumActivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 48, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFlashCallHoldGroupNumActivations.setStatus('current')
bwEZRegistrationsRejected = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 49, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwEZRegistrationsRejected.setStatus('current')
bwEZEmergencyCallsRejected = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 49, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwEZEmergencyCallsRejected.setStatus('current')
bwEZNormalCallsRejected = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 49, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwEZNormalCallsRejected.setStatus('current')
bwEZSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 49, 4), )
if mibBuilder.loadTexts: bwEZSPTable.setStatus('current')
bwEZGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 49, 5), )
if mibBuilder.loadTexts: bwEZGroupTable.setStatus('current')
bwEZSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 49, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwEZSPIndex"))
if mibBuilder.loadTexts: bwEZSPEntry.setStatus('current')
bwEZSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 49, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwEZSPIndex.setStatus('current')
bwEZSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 49, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwEZSPID.setStatus('current')
bwEZSPRegistrationsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 49, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwEZSPRegistrationsRejected.setStatus('current')
bwEZSPEmergencyCallsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 49, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwEZSPEmergencyCallsRejected.setStatus('current')
bwEZSPNormalCallsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 49, 4, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwEZSPNormalCallsRejected.setStatus('current')
bwEZGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 49, 5, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwEZGroupIndex"))
if mibBuilder.loadTexts: bwEZGroupEntry.setStatus('current')
bwEZGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 49, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwEZGroupIndex.setStatus('current')
bwEZGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 49, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwEZGroupID.setStatus('current')
bwEZGroupRegistrationsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 49, 5, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwEZGroupRegistrationsRejected.setStatus('current')
bwEZGroupEmergencyCallsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 49, 5, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwEZGroupEmergencyCallsRejected.setStatus('current')
bwEZGroupNormalCallsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 49, 5, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwEZGroupNormalCallsRejected.setStatus('current')
bwDPUBIAttempt = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDPUBIAttempt.setStatus('current')
bwDPUBIFailure = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDPUBIFailure.setStatus('current')
bwDPUBIBargeIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDPUBIBargeIn.setStatus('current')
bwDPUBIBargeInFailure = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDPUBIBargeInFailure.setStatus('current')
bwDPUBISPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 5), )
if mibBuilder.loadTexts: bwDPUBISPTable.setStatus('current')
bwDPUBIGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 6), )
if mibBuilder.loadTexts: bwDPUBIGroupTable.setStatus('current')
bwDPUBIExempt = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDPUBIExempt.setStatus('current')
bwDPUBISPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 5, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwDPUBISPIndex"))
if mibBuilder.loadTexts: bwDPUBISPEntry.setStatus('current')
bwDPUBISPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDPUBISPIndex.setStatus('current')
bwDPUBISPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDPUBISPID.setStatus('current')
bwDPUBISPAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 5, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDPUBISPAttempt.setStatus('current')
bwDPUBISPFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 5, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDPUBISPFailure.setStatus('current')
bwDPUBISPBargeIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 5, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDPUBISPBargeIn.setStatus('current')
bwDPUBISPBargeInFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 5, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDPUBISPBargeInFailure.setStatus('current')
bwDPUBISPExempt = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 5, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDPUBISPExempt.setStatus('current')
bwDPUBIGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 6, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwDPUBIGroupIndex"))
if mibBuilder.loadTexts: bwDPUBIGroupEntry.setStatus('current')
bwDPUBIGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDPUBIGroupIndex.setStatus('current')
bwDPUBIGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDPUBIGroupID.setStatus('current')
bwDPUBIGroupAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 6, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDPUBIGroupAttempt.setStatus('current')
bwDPUBIGroupFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 6, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDPUBIGroupFailure.setStatus('current')
bwDPUBIGroupBargeIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 6, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDPUBIGroupBargeIn.setStatus('current')
bwDPUBIGroupBargeInFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 6, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDPUBIGroupBargeInFailure.setStatus('current')
bwDPUBIGroupExempt = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 50, 6, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDPUBIGroupExempt.setStatus('current')
bwACBStarted = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 51, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwACBStarted.setStatus('current')
bwACBExpired = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 51, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwACBExpired.setStatus('current')
bwACBMaxSession = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 51, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwACBMaxSession.setStatus('current')
bwACBSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 51, 4), )
if mibBuilder.loadTexts: bwACBSPTable.setStatus('current')
bwACBGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 51, 5), )
if mibBuilder.loadTexts: bwACBGroupTable.setStatus('current')
bwACBSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 51, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwACBSPIndex"))
if mibBuilder.loadTexts: bwACBSPEntry.setStatus('current')
bwACBSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 51, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwACBSPIndex.setStatus('current')
bwACBSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 51, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwACBSPID.setStatus('current')
bwACBSPStarted = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 51, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwACBSPStarted.setStatus('current')
bwACBSPExpired = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 51, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwACBSPExpired.setStatus('current')
bwACBSPMaxSession = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 51, 4, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwACBSPMaxSession.setStatus('current')
bwACBGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 51, 5, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwACBGroupIndex"))
if mibBuilder.loadTexts: bwACBGroupEntry.setStatus('current')
bwACBGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 51, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwACBGroupIndex.setStatus('current')
bwACBGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 51, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwACBGroupID.setStatus('current')
bwACBGroupStarted = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 51, 5, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwACBGroupStarted.setStatus('current')
bwACBGroupExpired = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 51, 5, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwACBGroupExpired.setStatus('current')
bwACBGroupMaxSession = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 51, 5, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwACBGroupMaxSession.setStatus('current')
bwRingTimeoutNumExpires = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 53, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwRingTimeoutNumExpires.setStatus('current')
bwRingTimeoutSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 53, 2), )
if mibBuilder.loadTexts: bwRingTimeoutSPTable.setStatus('current')
bwRingTimeoutGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 53, 3), )
if mibBuilder.loadTexts: bwRingTimeoutGroupTable.setStatus('current')
bwRingTimeoutSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 53, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwRingTimeoutSPIndex"))
if mibBuilder.loadTexts: bwRingTimeoutSPEntry.setStatus('current')
bwRingTimeoutSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 53, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwRingTimeoutSPIndex.setStatus('current')
bwRingTimeoutSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 53, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwRingTimeoutSPID.setStatus('current')
bwRingTimeoutSPNumExpires = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 53, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwRingTimeoutSPNumExpires.setStatus('current')
bwRingTimeoutGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 53, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwRingTimeoutGroupIndex"))
if mibBuilder.loadTexts: bwRingTimeoutGroupEntry.setStatus('current')
bwRingTimeoutGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 53, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwRingTimeoutGroupIndex.setStatus('current')
bwRingTimeoutGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 53, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwRingTimeoutGroupID.setStatus('current')
bwRingTimeoutGroupNumExpires = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 53, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwRingTimeoutGroupNumExpires.setStatus('current')
bwSequentialRingNumAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSequentialRingNumAttempts.setStatus('current')
bwSequentialRingNumNoAnswer = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSequentialRingNumNoAnswer.setStatus('current')
bwSequentialRingSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 3), )
if mibBuilder.loadTexts: bwSequentialRingSPTable.setStatus('current')
bwSequentialRingGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 4), )
if mibBuilder.loadTexts: bwSequentialRingGroupTable.setStatus('current')
bwSequentialRingActivations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSequentialRingActivations.setStatus('current')
bwSequentialRingAnswered = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSequentialRingAnswered.setStatus('current')
bwSequentialRingAbandoned = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSequentialRingAbandoned.setStatus('current')
bwSequentialRingSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSequentialRingSPIndex"))
if mibBuilder.loadTexts: bwSequentialRingSPEntry.setStatus('current')
bwSequentialRingSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSequentialRingSPIndex.setStatus('current')
bwSequentialRingSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSequentialRingSPID.setStatus('current')
bwSequentialRingSPNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSequentialRingSPNumAttempts.setStatus('current')
bwSequentialRingSPNumNoAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSequentialRingSPNumNoAnswer.setStatus('current')
bwSequentialRingSPActivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 3, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSequentialRingSPActivations.setStatus('current')
bwSequentialRingSPAnswered = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 3, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSequentialRingSPAnswered.setStatus('current')
bwSequentialRingSPAbandoned = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 3, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSequentialRingSPAbandoned.setStatus('current')
bwSequentialRingGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSequentialRingGroupIndex"))
if mibBuilder.loadTexts: bwSequentialRingGroupEntry.setStatus('current')
bwSequentialRingGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSequentialRingGroupIndex.setStatus('current')
bwSequentialRingGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSequentialRingGroupID.setStatus('current')
bwSequentialRingGroupNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSequentialRingGroupNumAttempts.setStatus('current')
bwSequentialRingGroupNumNoAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSequentialRingGroupNumNoAnswer.setStatus('current')
bwSequentialRingGroupActivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 4, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSequentialRingGroupActivations.setStatus('current')
bwSequentialRingGroupAnswered = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 4, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSequentialRingGroupAnswered.setStatus('current')
bwSequentialRingGroupAbandoned = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 52, 4, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSequentialRingGroupAbandoned.setStatus('current')
bwVAOOutgoingAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVAOOutgoingAttempts.setStatus('current')
bwVAOOutgoingSuccess = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVAOOutgoingSuccess.setStatus('current')
bwVAOIncomingAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVAOIncomingAttempts.setStatus('current')
bwVAOIncomingSuccess = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVAOIncomingSuccess.setStatus('current')
bwVAOSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 5), )
if mibBuilder.loadTexts: bwVAOSPTable.setStatus('current')
bwVAOGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 6), )
if mibBuilder.loadTexts: bwVAOGroupTable.setStatus('current')
bwVAOSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 5, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwVAOSPIndex"))
if mibBuilder.loadTexts: bwVAOSPEntry.setStatus('current')
bwVAOSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwVAOSPIndex.setStatus('current')
bwVAOSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwVAOSPID.setStatus('current')
bwVAOSPOutgoingAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 5, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVAOSPOutgoingAttempts.setStatus('current')
bwVAOSPOutgoingSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 5, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVAOSPOutgoingSuccess.setStatus('current')
bwVAOSPIncomingAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 5, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVAOSPIncomingAttempts.setStatus('current')
bwVAOSPIncomingSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 5, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVAOSPIncomingSuccess.setStatus('current')
bwVAOGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 6, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwVAOGroupIndex"))
if mibBuilder.loadTexts: bwVAOGroupEntry.setStatus('current')
bwVAOGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwVAOGroupIndex.setStatus('current')
bwVAOGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwVAOGroupID.setStatus('current')
bwVAOGroupOutgoingAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 6, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVAOGroupOutgoingAttempts.setStatus('current')
bwVAOGroupOutgoingSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 6, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVAOGroupOutgoingSuccess.setStatus('current')
bwVAOGroupIncomingAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 6, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVAOGroupIncomingAttempts.setStatus('current')
bwVAOGroupIncomingSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 54, 6, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwVAOGroupIncomingSuccess.setStatus('current')
bwMaliciousCallTraceApplied = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 55, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMaliciousCallTraceApplied.setStatus('current')
bwMaliciousCallTraceSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 55, 2), )
if mibBuilder.loadTexts: bwMaliciousCallTraceSPTable.setStatus('current')
bwMaliciousCallTraceGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 55, 3), )
if mibBuilder.loadTexts: bwMaliciousCallTraceGroupTable.setStatus('current')
bwMaliciousCallTraceSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 55, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwMaliciousCallTraceSPIndex"))
if mibBuilder.loadTexts: bwMaliciousCallTraceSPEntry.setStatus('current')
bwMaliciousCallTraceSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 55, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwMaliciousCallTraceSPIndex.setStatus('current')
bwMaliciousCallTraceSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 55, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwMaliciousCallTraceSPID.setStatus('current')
bwMaliciousCallTraceSPApplied = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 55, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMaliciousCallTraceSPApplied.setStatus('current')
bwMaliciousCallTraceGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 55, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwMaliciousCallTraceGroupIndex"))
if mibBuilder.loadTexts: bwMaliciousCallTraceGroupEntry.setStatus('current')
bwMaliciousCallTraceGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 55, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwMaliciousCallTraceGroupIndex.setStatus('current')
bwMaliciousCallTraceGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 55, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwMaliciousCallTraceGroupID.setStatus('current')
bwMaliciousCallTraceGroupApplied = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 55, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMaliciousCallTraceGroupApplied.setStatus('current')
bwPTTInvoke = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 56, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPTTInvoke.setStatus('current')
bwPTTReject = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 56, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPTTReject.setStatus('current')
bwPTTSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 56, 3), )
if mibBuilder.loadTexts: bwPTTSPTable.setStatus('current')
bwPTTGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 56, 4), )
if mibBuilder.loadTexts: bwPTTGroupTable.setStatus('current')
bwPTTSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 56, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwPTTSPIndex"))
if mibBuilder.loadTexts: bwPTTSPEntry.setStatus('current')
bwPTTSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 56, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPTTSPIndex.setStatus('current')
bwPTTSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 56, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPTTSPID.setStatus('current')
bwPTTSPInvoke = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 56, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPTTSPInvoke.setStatus('current')
bwPTTSPReject = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 56, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPTTSPReject.setStatus('current')
bwPTTGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 56, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwPTTGroupIndex"))
if mibBuilder.loadTexts: bwPTTGroupEntry.setStatus('current')
bwPTTGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 56, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPTTGroupIndex.setStatus('current')
bwPTTGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 56, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPTTGroupID.setStatus('current')
bwPTTGroupInvoke = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 56, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPTTGroupInvoke.setStatus('current')
bwPTTGroupReject = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 56, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPTTGroupReject.setStatus('current')
bwHotelingAssociate = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 57, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwHotelingAssociate.setStatus('current')
bwHotelingDisassociate = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 57, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwHotelingDisassociate.setStatus('current')
bwHotelingTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 57, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwHotelingTimeout.setStatus('current')
bwHotelingSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 57, 4), )
if mibBuilder.loadTexts: bwHotelingSPTable.setStatus('current')
bwHotelingGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 57, 5), )
if mibBuilder.loadTexts: bwHotelingGroupTable.setStatus('current')
bwHotelingSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 57, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwHotelingSPIndex"))
if mibBuilder.loadTexts: bwHotelingSPEntry.setStatus('current')
bwHotelingSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 57, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwHotelingSPIndex.setStatus('current')
bwHotelingSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 57, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwHotelingSPID.setStatus('current')
bwHotelingSPAssociate = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 57, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwHotelingSPAssociate.setStatus('current')
bwHotelingSPDisassociate = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 57, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwHotelingSPDisassociate.setStatus('current')
bwHotelingSPTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 57, 4, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwHotelingSPTimeout.setStatus('current')
bwHotelingGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 57, 5, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwHotelingGroupIndex"))
if mibBuilder.loadTexts: bwHotelingGroupEntry.setStatus('current')
bwHotelingGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 57, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwHotelingGroupIndex.setStatus('current')
bwHotelingGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 57, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwHotelingGroupID.setStatus('current')
bwHotelingGroupAssociate = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 57, 5, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwHotelingGroupAssociate.setStatus('current')
bwHotelingGroupDisassociate = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 57, 5, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwHotelingGroupDisassociate.setStatus('current')
bwHotelingGroupTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 57, 5, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwHotelingGroupTimeout.setStatus('current')
bwSubscriptionUserPIC = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSubscriptionUserPIC.setStatus('current')
bwSubscriptionGroupPIC = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSubscriptionGroupPIC.setStatus('current')
bwSubscriptionServiceProviderPIC = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSubscriptionServiceProviderPIC.setStatus('current')
bwSubscriptionDialedUserPIC = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSubscriptionDialedUserPIC.setStatus('current')
bwSubscriptionDialedGroupPIC = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSubscriptionDialedGroupPIC.setStatus('current')
bwSubscriptionDialedServiceProviderPIC = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSubscriptionDialedServiceProviderPIC.setStatus('current')
bwNonSubscriptionDialedUserPIC = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNonSubscriptionDialedUserPIC.setStatus('current')
bwNonSubscriptionDialedGroupPIC = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNonSubscriptionDialedGroupPIC.setStatus('current')
bwNonSubscriptionDialedServiceProviderPIC = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNonSubscriptionDialedServiceProviderPIC.setStatus('current')
bwNoIndicationUserPIC = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNoIndicationUserPIC.setStatus('current')
bwNoIndicationGroupPIC = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNoIndicationGroupPIC.setStatus('current')
bwNoIndicationServiceProviderPIC = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNoIndicationServiceProviderPIC.setStatus('current')
bwPreferredCarrierSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 13), )
if mibBuilder.loadTexts: bwPreferredCarrierSPTable.setStatus('current')
bwPreferredCarrierGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 14), )
if mibBuilder.loadTexts: bwPreferredCarrierGroupTable.setStatus('current')
bwPreferredCarrierSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 13, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwPreferredCarrierSPIndex"))
if mibBuilder.loadTexts: bwPreferredCarrierSPEntry.setStatus('current')
bwPreferredCarrierSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 13, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPreferredCarrierSPIndex.setStatus('current')
bwPreferredCarrierSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 13, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPreferredCarrierSPID.setStatus('current')
bwSPSubscriptionUserPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 13, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSPSubscriptionUserPIC.setStatus('current')
bwSPSubscriptionGroupPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 13, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSPSubscriptionGroupPIC.setStatus('current')
bwSPSubscriptionServiceProviderPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 13, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSPSubscriptionServiceProviderPIC.setStatus('current')
bwSPSubscriptionDialedUserPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 13, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSPSubscriptionDialedUserPIC.setStatus('current')
bwSPSubscriptionDialedGroupPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 13, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSPSubscriptionDialedGroupPIC.setStatus('current')
bwSPSubscriptionDialedServiceProviderPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 13, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSPSubscriptionDialedServiceProviderPIC.setStatus('current')
bwSPNonSubscriptionDialedUserPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 13, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSPNonSubscriptionDialedUserPIC.setStatus('current')
bwSPNonSubscriptionDialedGroupPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 13, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSPNonSubscriptionDialedGroupPIC.setStatus('current')
bwSPNonSubscriptionDialedServiceProviderPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 13, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSPNonSubscriptionDialedServiceProviderPIC.setStatus('current')
bwSPNoIndicationUserPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 13, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSPNoIndicationUserPIC.setStatus('current')
bwSPNoIndicationGroupPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 13, 1, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSPNoIndicationGroupPIC.setStatus('current')
bwSPNoIndicationServiceProviderPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 13, 1, 14), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSPNoIndicationServiceProviderPIC.setStatus('current')
bwPreferredCarrierGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 14, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwPreferredCarrierGroupIndex"))
if mibBuilder.loadTexts: bwPreferredCarrierGroupEntry.setStatus('current')
bwPreferredCarrierGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 14, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPreferredCarrierGroupIndex.setStatus('current')
bwPreferredCarrierGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 14, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPreferredCarrierGroupID.setStatus('current')
bwGroupSubscriptionUserPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 14, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwGroupSubscriptionUserPIC.setStatus('current')
bwGroupSubscriptionGroupPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 14, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwGroupSubscriptionGroupPIC.setStatus('current')
bwGroupSubscriptionServiceProviderPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 14, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwGroupSubscriptionServiceProviderPIC.setStatus('current')
bwGroupSubscriptionDialedUserPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 14, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwGroupSubscriptionDialedUserPIC.setStatus('current')
bwGroupSubscriptionDialedGroupPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 14, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwGroupSubscriptionDialedGroupPIC.setStatus('current')
bwGroupSubscriptionDialedServiceProviderPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 14, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwGroupSubscriptionDialedServiceProviderPIC.setStatus('current')
bwGroupNonSubscriptionDialedUserPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 14, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwGroupNonSubscriptionDialedUserPIC.setStatus('current')
bwGroupNonSubscriptionDialedGroupPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 14, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwGroupNonSubscriptionDialedGroupPIC.setStatus('current')
bwGroupNonSubscriptionDialedServiceProviderPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 14, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwGroupNonSubscriptionDialedServiceProviderPIC.setStatus('current')
bwGroupNoIndicationUserPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 14, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwGroupNoIndicationUserPIC.setStatus('current')
bwGroupNoIndicationGroupPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 14, 1, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwGroupNoIndicationGroupPIC.setStatus('current')
bwGroupNoIndicationServiceProviderPIC = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 58, 14, 1, 14), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwGroupNoIndicationServiceProviderPIC.setStatus('current')
bwFamilySimRingNumAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 59, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFamilySimRingNumAttempts.setStatus('current')
bwFamilySimRingNumBusy = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 59, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFamilySimRingNumBusy.setStatus('current')
bwFamilySimRingSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 59, 3), )
if mibBuilder.loadTexts: bwFamilySimRingSPTable.setStatus('current')
bwFamilySimRingGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 59, 4), )
if mibBuilder.loadTexts: bwFamilySimRingGroupTable.setStatus('current')
bwFamilySimRingSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 59, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwFamilySimRingSPIndex"))
if mibBuilder.loadTexts: bwFamilySimRingSPEntry.setStatus('current')
bwFamilySimRingSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 59, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFamilySimRingSPIndex.setStatus('current')
bwFamilySimRingSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 59, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFamilySimRingSPID.setStatus('current')
bwFamilySimRingSPNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 59, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFamilySimRingSPNumAttempts.setStatus('current')
bwFamilySimRingSPNumBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 59, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFamilySimRingSPNumBusy.setStatus('current')
bwFamilySimRingGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 59, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwFamilySimRingGroupIndex"))
if mibBuilder.loadTexts: bwFamilySimRingGroupEntry.setStatus('current')
bwFamilySimRingGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 59, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFamilySimRingGroupIndex.setStatus('current')
bwFamilySimRingGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 59, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFamilySimRingGroupID.setStatus('current')
bwFamilySimRingGroupNumAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 59, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFamilySimRingGroupNumAttempts.setStatus('current')
bwFamilySimRingGroupNumBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 59, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFamilySimRingGroupNumBusy.setStatus('current')
bwDiversionInhibited = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 60, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwDiversionInhibited.setStatus('current')
bwDiversionInhibitorSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 60, 2), )
if mibBuilder.loadTexts: bwDiversionInhibitorSPTable.setStatus('current')
bwDiversionInhibitorGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 60, 3), )
if mibBuilder.loadTexts: bwDiversionInhibitorGroupTable.setStatus('current')
bwDiversionInhibitorSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 60, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwDiversionInhibitorSPIndex"))
if mibBuilder.loadTexts: bwDiversionInhibitorSPEntry.setStatus('current')
bwDiversionInhibitorSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 60, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiversionInhibitorSPIndex.setStatus('current')
bwDiversionInhibitorSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 60, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiversionInhibitorSPID.setStatus('current')
bwSPDiversionInhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 60, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSPDiversionInhibited.setStatus('current')
bwDiversionInhibitorGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 60, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwDiversionInhibitorGroupIndex"))
if mibBuilder.loadTexts: bwDiversionInhibitorGroupEntry.setStatus('current')
bwDiversionInhibitorGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 60, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiversionInhibitorGroupIndex.setStatus('current')
bwDiversionInhibitorGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 60, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDiversionInhibitorGroupID.setStatus('current')
bwGroupDiversionInhibited = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 60, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwGroupDiversionInhibited.setStatus('current')
bwIGCPushToTalkInvoke = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 61, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwIGCPushToTalkInvoke.setStatus('current')
bwIGCNormalInvoke = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 61, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwIGCNormalInvoke.setStatus('current')
bwIGCSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 61, 3), )
if mibBuilder.loadTexts: bwIGCSPTable.setStatus('current')
bwIGCGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 61, 4), )
if mibBuilder.loadTexts: bwIGCGroupTable.setStatus('current')
bwIGCSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 61, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwIGCSPIndex"))
if mibBuilder.loadTexts: bwIGCSPEntry.setStatus('current')
bwIGCSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 61, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwIGCSPIndex.setStatus('current')
bwIGCSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 61, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwIGCSPID.setStatus('current')
bwIGCSPPushToTalkInvoke = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 61, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwIGCSPPushToTalkInvoke.setStatus('current')
bwIGCSPNormalInvoke = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 61, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwIGCSPNormalInvoke.setStatus('current')
bwIGCGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 61, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwIGCGroupIndex"))
if mibBuilder.loadTexts: bwIGCGroupEntry.setStatus('current')
bwIGCGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 61, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwIGCGroupIndex.setStatus('current')
bwIGCGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 61, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwIGCGroupID.setStatus('current')
bwIGCGroupPushToTalkInvoke = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 61, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwIGCGroupPushToTalkInvoke.setStatus('current')
bwIGCGroupNormalInvoke = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 61, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwIGCGroupNormalInvoke.setStatus('current')
bwAHRHold = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 62, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAHRHold.setStatus('current')
bwAHRRetrieve = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 62, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAHRRetrieve.setStatus('current')
bwAHRSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 62, 3), )
if mibBuilder.loadTexts: bwAHRSPTable.setStatus('current')
bwAHRGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 62, 4), )
if mibBuilder.loadTexts: bwAHRGroupTable.setStatus('current')
bwAHRSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 62, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwAHRSPIndex"))
if mibBuilder.loadTexts: bwAHRSPEntry.setStatus('current')
bwAHRSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 62, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAHRSPIndex.setStatus('current')
bwAHRSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 62, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAHRSPID.setStatus('current')
bwAHRSPHold = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 62, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAHRSPHold.setStatus('current')
bwAHRSPRetrieve = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 62, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAHRSPRetrieve.setStatus('current')
bwAHRGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 62, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwAHRGroupIndex"))
if mibBuilder.loadTexts: bwAHRGroupEntry.setStatus('current')
bwAHRGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 62, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAHRGroupIndex.setStatus('current')
bwAHRGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 62, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwAHRGroupID.setStatus('current')
bwAHRGroupHold = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 62, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAHRGroupHold.setStatus('current')
bwAHRGroupRetrieve = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 62, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwAHRGroupRetrieve.setStatus('current')
bwTrunkOriginationAttempt = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwTrunkOriginationAttempt.setStatus('current')
bwTrunkOriginationBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwTrunkOriginationBlocked.setStatus('current')
bwTrunkTerminationAttempt = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwTrunkTerminationAttempt.setStatus('current')
bwTrunkTerminationBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwTrunkTerminationBlocked.setStatus('current')
bwTrunkSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 5), )
if mibBuilder.loadTexts: bwTrunkSPTable.setStatus('current')
bwTrunkGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 6), )
if mibBuilder.loadTexts: bwTrunkGroupTable.setStatus('current')
bwTrunkGroupPerTGTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 7), )
if mibBuilder.loadTexts: bwTrunkGroupPerTGTable.setStatus('current')
bwTrunkSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 5, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwTrunkSPIndex"))
if mibBuilder.loadTexts: bwTrunkSPEntry.setStatus('current')
bwTrunkSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTrunkSPIndex.setStatus('current')
bwTrunkSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTrunkSPID.setStatus('current')
bwTrunkSPOriginationAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 5, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwTrunkSPOriginationAttempt.setStatus('current')
bwTrunkSPOriginationBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 5, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwTrunkSPOriginationBlocked.setStatus('current')
bwTrunkSPTerminationAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 5, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwTrunkSPTerminationAttempt.setStatus('current')
bwTrunkSPTerminationBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 5, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwTrunkSPTerminationBlocked.setStatus('current')
bwTrunkGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 6, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwTrunkGroupIndex"))
if mibBuilder.loadTexts: bwTrunkGroupEntry.setStatus('current')
bwTrunkGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTrunkGroupIndex.setStatus('current')
bwTrunkGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTrunkGroupID.setStatus('current')
bwTrunkGroupOriginationAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 6, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwTrunkGroupOriginationAttempt.setStatus('current')
bwTrunkGroupOriginationBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 6, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwTrunkGroupOriginationBlocked.setStatus('current')
bwTrunkGroupTerminationAttempt = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 6, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwTrunkGroupTerminationAttempt.setStatus('current')
bwTrunkGroupTerminationBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 6, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwTrunkGroupTerminationBlocked.setStatus('current')
bwTrunkGroupPerTGEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 7, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwTrunkGroupPerTGIndex"))
if mibBuilder.loadTexts: bwTrunkGroupPerTGEntry.setStatus('current')
bwTrunkGroupPerTGIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 7, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTrunkGroupPerTGIndex.setStatus('current')
bwTrunkGroupPerTGName = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTrunkGroupPerTGName.setStatus('current')
bwTrunkGroupPerTGCapacityExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 7, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwTrunkGroupPerTGCapacityExceeded.setStatus('current')
bwTrunkGroupPerTGUnreachableDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 7, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwTrunkGroupPerTGUnreachableDestination.setStatus('current')
bwTrunkGroupPerTGMaxActiveCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 7, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTrunkGroupPerTGMaxActiveCalls.setStatus('current')
bwTrunkGroupPerTGMaxOutgoingActiveCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 7, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTrunkGroupPerTGMaxOutgoingActiveCalls.setStatus('current')
bwTrunkGroupPerTGMaxIncomingActiveCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 7, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTrunkGroupPerTGMaxIncomingActiveCalls.setStatus('current')
bwTrunkGroupPerTGCapacityExceededInitialValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 7, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTrunkGroupPerTGCapacityExceededInitialValue.setStatus('current')
bwTrunkGroupPerTGCapacityExceededOffsetValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 7, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTrunkGroupPerTGCapacityExceededOffsetValue.setStatus('current')
bwTrunkGroupPerTGUnreachableDestinationExceededInitialValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 7, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTrunkGroupPerTGUnreachableDestinationExceededInitialValue.setStatus('current')
bwTrunkGroupPerTGUnreachableDestinationExceededOffsetValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 7, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTrunkGroupPerTGUnreachableDestinationExceededOffsetValue.setStatus('current')
bwTrunkGroupPerTGBursting = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 7, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTrunkGroupPerTGBursting.setStatus('current')
bwTrunkGroupPerTGBurstingMaxActiveCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 7, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTrunkGroupPerTGBurstingMaxActiveCalls.setStatus('current')
bwTrunkGroupPerTGBurstingMaxOutgoingActiveCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 7, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTrunkGroupPerTGBurstingMaxOutgoingActiveCalls.setStatus('current')
bwTrunkGroupPerTGBurstingMaxIncomingActiveCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 7, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTrunkGroupPerTGBurstingMaxIncomingActiveCalls.setStatus('current')
bwTrunkGroupPerTGGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 63, 7, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTrunkGroupPerTGGroupID.setStatus('current')
bwCustomRingbackUserAudioAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackUserAudioAttempts.setStatus('current')
bwCustomRingbackUserVideoAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackUserVideoAttempts.setStatus('current')
bwCustomRingbackUserAudioFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackUserAudioFailures.setStatus('current')
bwCustomRingbackUserVideoFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackUserVideoFailures.setStatus('current')
bwCustomRingbackGroupAudioAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackGroupAudioAttempts.setStatus('current')
bwCustomRingbackGroupVideoAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackGroupVideoAttempts.setStatus('current')
bwCustomRingbackGroupAudioFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackGroupAudioFailures.setStatus('current')
bwCustomRingbackGroupVideoFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackGroupVideoFailures.setStatus('current')
bwCustomRingbackSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 9), )
if mibBuilder.loadTexts: bwCustomRingbackSPTable.setStatus('current')
bwCustomRingbackGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 10), )
if mibBuilder.loadTexts: bwCustomRingbackGroupTable.setStatus('current')
bwCustomRingbackSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 9, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCustomRingbackSPIndex"))
if mibBuilder.loadTexts: bwCustomRingbackSPEntry.setStatus('current')
bwCustomRingbackSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 9, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCustomRingbackSPIndex.setStatus('current')
bwCustomRingbackSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 9, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCustomRingbackSPID.setStatus('current')
bwCustomRingbackUserAudioSPAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 9, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackUserAudioSPAttempts.setStatus('current')
bwCustomRingbackUserVideoSPAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 9, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackUserVideoSPAttempts.setStatus('current')
bwCustomRingbackUserAudioSPFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 9, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackUserAudioSPFailures.setStatus('current')
bwCustomRingbackUserVideoSPFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 9, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackUserVideoSPFailures.setStatus('current')
bwCustomRingbackGroupAudioSPAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 9, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackGroupAudioSPAttempts.setStatus('current')
bwCustomRingbackGroupVideoSPAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 9, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackGroupVideoSPAttempts.setStatus('current')
bwCustomRingbackGroupAudioSPFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 9, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackGroupAudioSPFailures.setStatus('current')
bwCustomRingbackGroupVideoSPFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 9, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackGroupVideoSPFailures.setStatus('current')
bwCustomRingbackGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 10, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCustomRingbackGroupIndex"))
if mibBuilder.loadTexts: bwCustomRingbackGroupEntry.setStatus('current')
bwCustomRingbackGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 10, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCustomRingbackGroupIndex.setStatus('current')
bwCustomRingbackGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 10, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCustomRingbackGroupID.setStatus('current')
bwCustomRingbackUserAudioGroupAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 10, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackUserAudioGroupAttempts.setStatus('current')
bwCustomRingbackUserVideoGroupAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 10, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackUserVideoGroupAttempts.setStatus('current')
bwCustomRingbackUserAudioGroupFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 10, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackUserAudioGroupFailures.setStatus('current')
bwCustomRingbackUserVideoGroupFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 10, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackUserVideoGroupFailures.setStatus('current')
bwCustomRingbackGroupAudioGroupAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 10, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackGroupAudioGroupAttempts.setStatus('current')
bwCustomRingbackGroupVideoGroupAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 10, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackGroupVideoGroupAttempts.setStatus('current')
bwCustomRingbackGroupAudioGroupFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 10, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackGroupAudioGroupFailures.setStatus('current')
bwCustomRingbackGroupVideoGroupFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 64, 10, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCustomRingbackGroupVideoGroupFailures.setStatus('current')
bwPhysicalLocationOriginationBlocked = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 65, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPhysicalLocationOriginationBlocked.setStatus('current')
bwPhysicalLocationSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 65, 2), )
if mibBuilder.loadTexts: bwPhysicalLocationSPTable.setStatus('current')
bwPhysicalLocationGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 65, 3), )
if mibBuilder.loadTexts: bwPhysicalLocationGroupTable.setStatus('current')
bwPhysicalLocationSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 65, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwPhysicalLocationSPIndex"))
if mibBuilder.loadTexts: bwPhysicalLocationSPEntry.setStatus('current')
bwPhysicalLocationSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 65, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPhysicalLocationSPIndex.setStatus('current')
bwPhysicalLocationSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 65, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPhysicalLocationSPID.setStatus('current')
bwPhysicalLocationSPOriginationBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 65, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPhysicalLocationSPOriginationBlocked.setStatus('current')
bwPhysicalLocationGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 65, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwPhysicalLocationGroupIndex"))
if mibBuilder.loadTexts: bwPhysicalLocationGroupEntry.setStatus('current')
bwPhysicalLocationGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 65, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPhysicalLocationGroupIndex.setStatus('current')
bwPhysicalLocationGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 65, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPhysicalLocationGroupID.setStatus('current')
bwPhysicalLocationGroupOriginationBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 65, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPhysicalLocationGroupOriginationBlocked.setStatus('current')
bwFaxMessagingReceived = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFaxMessagingReceived.setStatus('current')
bwFaxMessagingReceptionFailure = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFaxMessagingReceptionFailure.setStatus('current')
bwFaxMessagingPrinted = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFaxMessagingPrinted.setStatus('current')
bwFaxMessagingPrintingFailure = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFaxMessagingPrintingFailure.setStatus('current')
bwFaxMessagingSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 5), )
if mibBuilder.loadTexts: bwFaxMessagingSPTable.setStatus('current')
bwFaxMessagingGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 6), )
if mibBuilder.loadTexts: bwFaxMessagingGroupTable.setStatus('current')
bwFaxMessagingSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 5, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwFaxMessagingSPIndex"))
if mibBuilder.loadTexts: bwFaxMessagingSPEntry.setStatus('current')
bwFaxMessagingSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFaxMessagingSPIndex.setStatus('current')
bwFaxMessagingSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFaxMessagingSPID.setStatus('current')
bwFaxMessagingSPReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 5, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFaxMessagingSPReceived.setStatus('current')
bwFaxMessagingSPReceptionFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 5, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFaxMessagingSPReceptionFailure.setStatus('current')
bwFaxMessagingSPPrinted = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 5, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFaxMessagingSPPrinted.setStatus('current')
bwFaxMessagingSPPrintingFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 5, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFaxMessagingSPPrintingFailure.setStatus('current')
bwFaxMessagingGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 6, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwFaxMessagingGroupIndex"))
if mibBuilder.loadTexts: bwFaxMessagingGroupEntry.setStatus('current')
bwFaxMessagingGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFaxMessagingGroupIndex.setStatus('current')
bwFaxMessagingGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwFaxMessagingGroupID.setStatus('current')
bwFaxMessagingGroupReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 6, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFaxMessagingGroupReceived.setStatus('current')
bwFaxMessagingGroupReceptionFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 6, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFaxMessagingGroupReceptionFailure.setStatus('current')
bwFaxMessagingGroupPrinted = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 6, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFaxMessagingGroupPrinted.setStatus('current')
bwFaxMessagingGroupPrintingFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 66, 6, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwFaxMessagingGroupPrintingFailure.setStatus('current')
bwExtEmergencyRtgQuerySent = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 67, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwExtEmergencyRtgQuerySent.setStatus('current')
bwExtEmergencyRtgQueryFailure = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 67, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwExtEmergencyRtgQueryFailure.setStatus('current')
bwExtEmergencyRtgENServerTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 67, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwExtEmergencyRtgENServerTimeout.setStatus('current')
bwTwoStageDialingInvocation = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 68, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwTwoStageDialingInvocation.setStatus('current')
bwTwoStageDialingSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 68, 2), )
if mibBuilder.loadTexts: bwTwoStageDialingSPTable.setStatus('current')
bwTwoStageDialingGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 68, 3), )
if mibBuilder.loadTexts: bwTwoStageDialingGroupTable.setStatus('current')
bwTwoStageDialingSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 68, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwTwoStageDialingSPIndex"))
if mibBuilder.loadTexts: bwTwoStageDialingSPEntry.setStatus('current')
bwTwoStageDialingSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 68, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTwoStageDialingSPIndex.setStatus('current')
bwTwoStageDialingSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 68, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTwoStageDialingSPID.setStatus('current')
bwTwoStageDialingSPInvocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 68, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwTwoStageDialingSPInvocation.setStatus('current')
bwTwoStageDialingGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 68, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwTwoStageDialingGroupIndex"))
if mibBuilder.loadTexts: bwTwoStageDialingGroupEntry.setStatus('current')
bwTwoStageDialingGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 68, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTwoStageDialingGroupIndex.setStatus('current')
bwTwoStageDialingGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 68, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwTwoStageDialingGroupID.setStatus('current')
bwTwoStageDialingGroupInvocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 68, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwTwoStageDialingGroupInvocation.setStatus('current')
bwCFNRcNumForwarded = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNRcNumForwarded.setStatus('current')
bwCFNRcNumPhoneActivations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNRcNumPhoneActivations.setStatus('current')
bwCFNRcNumPhoneDeactivations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNRcNumPhoneDeactivations.setStatus('current')
bwCFNRcDestinationChanged = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNRcDestinationChanged.setStatus('current')
bwCallForwardingNotReachableSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 5), )
if mibBuilder.loadTexts: bwCallForwardingNotReachableSPTable.setStatus('current')
bwCallForwardingNotReachableGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 6), )
if mibBuilder.loadTexts: bwCallForwardingNotReachableGroupTable.setStatus('current')
bwCallForwardingNotReachableSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 5, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCFNRcSPIndex"))
if mibBuilder.loadTexts: bwCallForwardingNotReachableSPEntry.setStatus('current')
bwCFNRcSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCFNRcSPIndex.setStatus('current')
bwCFNRcSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCFNRcSPID.setStatus('current')
bwCFNRcSPNumForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 5, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNRcSPNumForwarded.setStatus('current')
bwCFNRcSPNumPhoneActivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 5, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNRcSPNumPhoneActivations.setStatus('current')
bwCFNRcSPNumPhoneDeactivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 5, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNRcSPNumPhoneDeactivations.setStatus('current')
bwCFNRcSPDestinationChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 5, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNRcSPDestinationChanged.setStatus('current')
bwCallForwardingNotReachableGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 6, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCFNRcGroupIndex"))
if mibBuilder.loadTexts: bwCallForwardingNotReachableGroupEntry.setStatus('current')
bwCFNRcGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCFNRcGroupIndex.setStatus('current')
bwCFNRcGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCFNRcGroupID.setStatus('current')
bwCFNRcGroupNumForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 6, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNRcGroupNumForwarded.setStatus('current')
bwCFNRcGroupNumPhoneActivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 6, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNRcGroupNumPhoneActivations.setStatus('current')
bwCFNRcGroupNumPhoneDeactivations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 6, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNRcGroupNumPhoneDeactivations.setStatus('current')
bwCFNRcGroupDestinationChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 69, 6, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCFNRcGroupDestinationChanged.setStatus('current')
bwMWISMSSent = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 70, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwMWISMSSent.setStatus('current')
bwMWIDeliveryToMobileSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 70, 2), )
if mibBuilder.loadTexts: bwMWIDeliveryToMobileSPTable.setStatus('current')
bwMWIDeliveryToMobileGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 70, 3), )
if mibBuilder.loadTexts: bwMWIDeliveryToMobileGroupTable.setStatus('current')
bwMWIDeliveryToMobileSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 70, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwMWISPIndex"))
if mibBuilder.loadTexts: bwMWIDeliveryToMobileSPEntry.setStatus('current')
bwMWISPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 70, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwMWISPIndex.setStatus('current')
bwMWISPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 70, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwMWISPID.setStatus('current')
bwSPMWISMSSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 70, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSPMWISMSSent.setStatus('current')
bwMWIDeliveryToMobileGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 70, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwMWIGroupIndex"))
if mibBuilder.loadTexts: bwMWIDeliveryToMobileGroupEntry.setStatus('current')
bwMWIGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 70, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwMWIGroupIndex.setStatus('current')
bwMWIGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 70, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwMWIGroupID.setStatus('current')
bwGroupMWISMSSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 70, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwGroupMWISMSSent.setStatus('current')
bwSCASPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 71, 1), )
if mibBuilder.loadTexts: bwSCASPTable.setStatus('current')
bwSCAGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 71, 2), )
if mibBuilder.loadTexts: bwSCAGroupTable.setStatus('current')
bwSCACallRetrieveSuccess = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 71, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSCACallRetrieveSuccess.setStatus('current')
bwSCALocationControlActivationSuccess = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 71, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSCALocationControlActivationSuccess.setStatus('current')
bwSCALocationControlDeactivationSuccess = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 71, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSCALocationControlDeactivationSuccess.setStatus('current')
bwSCASPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 71, 1, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSCASPIndex"))
if mibBuilder.loadTexts: bwSCASPEntry.setStatus('current')
bwSCASPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 71, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSCASPIndex.setStatus('current')
bwSCASPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 71, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSCASPID.setStatus('current')
bwSCASPCallRetrieveSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 71, 1, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSCASPCallRetrieveSuccess.setStatus('current')
bwSCASPLocationControlActivationSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 71, 1, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSCASPLocationControlActivationSuccess.setStatus('current')
bwSCASPLocationControlDeactivationSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 71, 1, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSCASPLocationControlDeactivationSuccess.setStatus('current')
bwSCAGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 71, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSCAGroupIndex"))
if mibBuilder.loadTexts: bwSCAGroupEntry.setStatus('current')
bwSCAGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 71, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSCAGroupIndex.setStatus('current')
bwSCAGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 71, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSCAGroupID.setStatus('current')
bwSCAGroupCallRetrieveSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 71, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSCAGroupCallRetrieveSuccess.setStatus('current')
bwSCAGroupLocationControlActivationSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 71, 2, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSCAGroupLocationControlActivationSuccess.setStatus('current')
bwSCAGroupLocationControlDeactivationSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 71, 2, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwSCAGroupLocationControlDeactivationSuccess.setStatus('current')
bwExternalCustomRingbackAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 72, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwExternalCustomRingbackAttempts.setStatus('current')
bwExternalCustomRingbackFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 72, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwExternalCustomRingbackFailures.setStatus('current')
bwExternalCustomRingbackSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 72, 3), )
if mibBuilder.loadTexts: bwExternalCustomRingbackSPTable.setStatus('current')
bwExternalCustomRingbackGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 72, 4), )
if mibBuilder.loadTexts: bwExternalCustomRingbackGroupTable.setStatus('current')
bwExternalCustomRingbackSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 72, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwExternalCustomRingbackSPIndex"))
if mibBuilder.loadTexts: bwExternalCustomRingbackSPEntry.setStatus('current')
bwExternalCustomRingbackSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 72, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwExternalCustomRingbackSPIndex.setStatus('current')
bwExternalCustomRingbackSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 72, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwExternalCustomRingbackSPID.setStatus('current')
bwExternalCustomRingbackSPAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 72, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwExternalCustomRingbackSPAttempts.setStatus('current')
bwExternalCustomRingbackSPFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 72, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwExternalCustomRingbackSPFailures.setStatus('current')
bwExternalCustomRingbackGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 72, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwExternalCustomRingbackGroupIndex"))
if mibBuilder.loadTexts: bwExternalCustomRingbackGroupEntry.setStatus('current')
bwExternalCustomRingbackGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 72, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwExternalCustomRingbackGroupIndex.setStatus('current')
bwExternalCustomRingbackGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 72, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwExternalCustomRingbackGroupID.setStatus('current')
bwExternalCustomRingbackGroupAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 72, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwExternalCustomRingbackGroupAttempts.setStatus('current')
bwExternalCustomRingbackGroupFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 72, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwExternalCustomRingbackGroupFailures.setStatus('current')
bwInCallServiceActivationSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 73, 1), )
if mibBuilder.loadTexts: bwInCallServiceActivationSPTable.setStatus('current')
bwInCallServiceActivationGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 73, 2), )
if mibBuilder.loadTexts: bwInCallServiceActivationGroupTable.setStatus('current')
bwICSAMonitoringStarted = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 73, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICSAMonitoringStarted.setStatus('current')
bwICSAMonitoringFailure = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 73, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICSAMonitoringFailure.setStatus('current')
bwICSAFlashDigitsDetected = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 73, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICSAFlashDigitsDetected.setStatus('current')
bwInCallServiceActivationSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 73, 1, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwICSASPIndex"))
if mibBuilder.loadTexts: bwInCallServiceActivationSPEntry.setStatus('current')
bwICSASPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 73, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwICSASPIndex.setStatus('current')
bwICSASPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 73, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwICSASPID.setStatus('current')
bwICSASPMonitoringStarted = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 73, 1, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICSASPMonitoringStarted.setStatus('current')
bwICSASPMonitoringFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 73, 1, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICSASPMonitoringFailure.setStatus('current')
bwICSASPFlashDigitsDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 73, 1, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICSASPFlashDigitsDetected.setStatus('current')
bwInCallServiceActivationGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 73, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwICSAGroupIndex"))
if mibBuilder.loadTexts: bwInCallServiceActivationGroupEntry.setStatus('current')
bwICSAGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 73, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwICSAGroupIndex.setStatus('current')
bwICSAGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 73, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwICSAGroupID.setStatus('current')
bwICSAGroupMonitoringStarted = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 73, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICSAGroupMonitoringStarted.setStatus('current')
bwICSAGroupMonitoringFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 73, 2, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICSAGroupMonitoringFailure.setStatus('current')
bwICSAGroupFlashDigitsDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 73, 2, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwICSAGroupFlashDigitsDetected.setStatus('current')
bwLocationControlSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 75, 1), )
if mibBuilder.loadTexts: bwLocationControlSPTable.setStatus('current')
bwLocationControlGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 75, 2), )
if mibBuilder.loadTexts: bwLocationControlGroupTable.setStatus('current')
bwLocationControlActivationSuccess = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 75, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwLocationControlActivationSuccess.setStatus('current')
bwLocationControlDeactivationSuccess = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 75, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwLocationControlDeactivationSuccess.setStatus('current')
bwLocationControlSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 75, 1, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwLocationControlSPIndex"))
if mibBuilder.loadTexts: bwLocationControlSPEntry.setStatus('current')
bwLocationControlSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 75, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwLocationControlSPIndex.setStatus('current')
bwLocationControlSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 75, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwLocationControlSPID.setStatus('current')
bwLocationControlSPActivationSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 75, 1, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwLocationControlSPActivationSuccess.setStatus('current')
bwLocationControlSPDeactivationSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 75, 1, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwLocationControlSPDeactivationSuccess.setStatus('current')
bwLocationControlGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 75, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwLocationControlGroupIndex"))
if mibBuilder.loadTexts: bwLocationControlGroupEntry.setStatus('current')
bwLocationControlGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 75, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwLocationControlGroupIndex.setStatus('current')
bwLocationControlGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 75, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwLocationControlGroupID.setStatus('current')
bwLocationControlGroupActivationSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 75, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwLocationControlGroupActivationSuccess.setStatus('current')
bwLocationControlGroupDeactivationSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 75, 2, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwLocationControlGroupDeactivationSuccess.setStatus('current')
bwCallRetrieveSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 76, 1), )
if mibBuilder.loadTexts: bwCallRetrieveSPTable.setStatus('current')
bwCallRetrieveGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 76, 2), )
if mibBuilder.loadTexts: bwCallRetrieveGroupTable.setStatus('current')
bwCallRetrieveSuccess = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 76, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallRetrieveSuccess.setStatus('current')
bwCallRetrieveSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 76, 1, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallRetrieveSPIndex"))
if mibBuilder.loadTexts: bwCallRetrieveSPEntry.setStatus('current')
bwCallRetrieveSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 76, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallRetrieveSPIndex.setStatus('current')
bwCallRetrieveSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 76, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallRetrieveSPID.setStatus('current')
bwCallRetrieveSPSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 76, 1, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallRetrieveSPSuccess.setStatus('current')
bwCallRetrieveGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 76, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCallRetrieveGroupIndex"))
if mibBuilder.loadTexts: bwCallRetrieveGroupEntry.setStatus('current')
bwCallRetrieveGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 76, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallRetrieveGroupIndex.setStatus('current')
bwCallRetrieveGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 76, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCallRetrieveGroupID.setStatus('current')
bwCallRetrieveGroupSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 76, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCallRetrieveGroupSuccess.setStatus('current')
bwBroadWorksAnywhereSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 77, 1), )
if mibBuilder.loadTexts: bwBroadWorksAnywhereSPTable.setStatus('current')
bwBroadWorksAnywhereGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 77, 2), )
if mibBuilder.loadTexts: bwBroadWorksAnywhereGroupTable.setStatus('current')
bwBACallOriginations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 77, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwBACallOriginations.setStatus('current')
bwBACallTerminations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 77, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwBACallTerminations.setStatus('current')
bwBroadWorksAnywhereSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 77, 1, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwBroadWorksAnywhereSPIndex"))
if mibBuilder.loadTexts: bwBroadWorksAnywhereSPEntry.setStatus('current')
bwBroadWorksAnywhereSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 77, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwBroadWorksAnywhereSPIndex.setStatus('current')
bwBroadWorksAnywhereSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 77, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwBroadWorksAnywhereSPID.setStatus('current')
bwBASPCallOriginations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 77, 1, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwBASPCallOriginations.setStatus('current')
bwBASPCallTerminations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 77, 1, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwBASPCallTerminations.setStatus('current')
bwBroadWorksAnywhereGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 77, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwBroadWorksAnywhereGroupIndex"))
if mibBuilder.loadTexts: bwBroadWorksAnywhereGroupEntry.setStatus('current')
bwBroadWorksAnywhereGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 77, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwBroadWorksAnywhereGroupIndex.setStatus('current')
bwBroadWorksAnywhereGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 77, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwBroadWorksAnywhereGroupID.setStatus('current')
bwBAGroupCallOriginations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 77, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwBAGroupCallOriginations.setStatus('current')
bwBAGroupCallTerminations = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 11, 77, 2, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwBAGroupCallTerminations.setStatus('current')
bwNSqueryRequestsTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 12, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNSqueryRequestsTransmitted.setStatus('current')
bwNSqueryRequestsRetransmitted = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 12, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNSqueryRequestsRetransmitted.setStatus('obsolete')
bwNSqueryCommFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 12, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNSqueryCommFailures.setStatus('current')
bwNbInvalidMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNbInvalidMessagesReceived.setStatus('current')
bwNbRequestsReceived = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNbRequestsReceived.setStatus('current')
bwNbResponsesReceived = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNbResponsesReceived.setStatus('current')
bwNbErrorsReceived = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNbErrorsReceived.setStatus('current')
bwNbRequestsSent = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNbRequestsSent.setStatus('current')
bwNbResponsesSent = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNbResponsesSent.setStatus('current')
bwNbErrorsSent = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNbErrorsSent.setStatus('current')
bwNbRequestsResent = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNbRequestsResent.setStatus('current')
bwNbResponsesResent = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 14), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNbResponsesResent.setStatus('current')
bwNbRequestsUnanswered = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 15), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNbRequestsUnanswered.setStatus('current')
bwNRSStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 16), )
if mibBuilder.loadTexts: bwNRSStatsTable.setStatus('current')
bwNRSStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 16, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwNRSStatsTableIndex"))
if mibBuilder.loadTexts: bwNRSStatsEntry.setStatus('current')
bwNRSStatsTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 16, 1, 1), Unsigned32())
if mibBuilder.loadTexts: bwNRSStatsTableIndex.setStatus('current')
bwNRSStatsTableProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 16, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNRSStatsTableProtocolName.setStatus('current')
bwNRSStatsTableNbRequestsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 16, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNRSStatsTableNbRequestsReceived.setStatus('current')
bwNRSStatsTableNbResponsesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 16, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNRSStatsTableNbResponsesReceived.setStatus('current')
bwNRSStatsTableNbErrorsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 16, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNRSStatsTableNbErrorsReceived.setStatus('current')
bwNRSStatsTableNbRequestsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 16, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNRSStatsTableNbRequestsSent.setStatus('current')
bwNRSStatsTableNbResponsesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 16, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNRSStatsTableNbResponsesSent.setStatus('current')
bwNRSStatsTableNbErrorsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 16, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNRSStatsTableNbErrorsSent.setStatus('current')
bwNRSStatsTableNbRequestsResent = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 16, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNRSStatsTableNbRequestsResent.setStatus('current')
bwNRSStatsTableNbResponsesResent = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 16, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNRSStatsTableNbResponsesResent.setStatus('current')
bwNRSStatsTableNbRequestsUnanswered = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 13, 1, 16, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNRSStatsTableNbRequestsUnanswered.setStatus('current')
timesTen = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1))
perNbOpenedTransactions = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: perNbOpenedTransactions.setStatus('current')
perNbCommittedTransactions = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: perNbCommittedTransactions.setStatus('current')
perNbFailedTransactions = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: perNbFailedTransactions.setStatus('current')
perNbCriticalErrors = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: perNbCriticalErrors.setStatus('current')
ttNbConnectionsCreated = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ttNbConnectionsCreated.setStatus('current')
ttConnectionPoolSize = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ttConnectionPoolSize.setStatus('current')
ttNbBackdoorUpdates = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ttNbBackdoorUpdates.setStatus('obsolete')
ttNbFailedCheckpoints = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ttNbFailedCheckpoints.setStatus('obsolete')
bwXSAvgUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXSAvgUpdateTime.setStatus('current')
bwXSAvgRowsUpdated = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXSAvgRowsUpdated.setStatus('current')
bwXSAvgQueryTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXSAvgQueryTime.setStatus('current')
bwXSAvgRowsQueried = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXSAvgRowsQueried.setStatus('current')
bwXSUpdateCount = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXSUpdateCount.setStatus('current')
bwXSQueryCount = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXSQueryCount.setStatus('current')
bwXSTTHWMTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 12), )
if mibBuilder.loadTexts: bwXSTTHWMTable.setStatus('current')
bwXSTTHWMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 12, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwXSTTHWMIndex"))
if mibBuilder.loadTexts: bwXSTTHWMEntry.setStatus('current')
bwXSTTHWMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 12, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXSTTHWMIndex.setStatus('current')
bwXSTTHWMName = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 12, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwXSTTHWMName.setStatus('current')
bwXSTTHWMValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 12, 1, 3), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXSTTHWMValue.setStatus('current')
bwXSTTHWMTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 12, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXSTTHWMTimestamp.setStatus('current')
bwXSTTHWMStackTrace = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 12, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwXSTTHWMStackTrace.setStatus('current')
xsRemoteXla = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 5))
xsRemoteXlaNbTimesConnected = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 5, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xsRemoteXlaNbTimesConnected.setStatus('current')
xsRemoteXlaNbTimesDisconnected = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 5, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xsRemoteXlaNbTimesDisconnected.setStatus('current')
xsRemoteXlaUpdatesProcessed = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 5, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xsRemoteXlaUpdatesProcessed.setStatus('current')
xsRemoteXlaUpdatesPending = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 5, 1, 1, 5, 4), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xsRemoteXlaUpdatesPending.setStatus('current')
bwPMTNumMonitorsCreated = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 15, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPMTNumMonitorsCreated.setStatus('current')
bwPMTNumMonitorsOpen = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 15, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPMTNumMonitorsOpen.setStatus('current')
bwPMTNumLoggerCreated = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 15, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPMTNumLoggerCreated.setStatus('current')
bwPMTNumLoggerOpen = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 15, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPMTNumLoggerOpen.setStatus('current')
systemStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1))
bwSystemName = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemName.setStatus('current')
bwNumberOfUsers = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNumberOfUsers.setStatus('current')
bwNumberOfGroups = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNumberOfGroups.setStatus('current')
bwNumberOfServProv = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNumberOfServProv.setStatus('current')
bwNumberOfDNDefined = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNumberOfDNDefined.setStatus('current')
bwNumberOfDNAssigned = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNumberOfDNAssigned.setStatus('current')
bwNumberOfDeviceType = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNumberOfDeviceType.setStatus('current')
bwNumberOfServiceType = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNumberOfServiceType.setStatus('current')
bwDeviceTypeSystemTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 9), )
if mibBuilder.loadTexts: bwDeviceTypeSystemTable.setStatus('current')
bwServiceTypeSystemTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 10), )
if mibBuilder.loadTexts: bwServiceTypeSystemTable.setStatus('current')
bwSystemSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 11), )
if mibBuilder.loadTexts: bwSystemSPTable.setStatus('current')
bwSystemGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 12), )
if mibBuilder.loadTexts: bwSystemGroupTable.setStatus('current')
bwDeviceTypeSystemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 9, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwDeviceTypeSystemIndex"))
if mibBuilder.loadTexts: bwDeviceTypeSystemEntry.setStatus('current')
bwDeviceTypeSystemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 9, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDeviceTypeSystemIndex.setStatus('current')
bwDeviceTypeSystemID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 9, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwDeviceTypeSystemID.setStatus('current')
bwNumberOfDeviceTypeSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 9, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNumberOfDeviceTypeSystem.setStatus('current')
bwServiceTypeSystemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 10, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwServiceTypeSystemIndex"))
if mibBuilder.loadTexts: bwServiceTypeSystemEntry.setStatus('current')
bwServiceTypeSystemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 10, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwServiceTypeSystemIndex.setStatus('current')
bwServiceTypeSystemID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 10, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwServiceTypeSystemID.setStatus('current')
bwNumberOfServiceTypeAssignedSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 10, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNumberOfServiceTypeAssignedSystem.setStatus('current')
bwSystemSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 11, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSystemSPIndex"))
if mibBuilder.loadTexts: bwSystemSPEntry.setStatus('current')
bwSystemSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 11, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemSPIndex.setStatus('current')
bwSystemSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 11, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemSPID.setStatus('current')
bwSystemSPName = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 11, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemSPName.setStatus('current')
bwNumberOfSPUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 11, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNumberOfSPUsers.setStatus('current')
bwNumberOfSPGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 11, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNumberOfSPGroups.setStatus('current')
bwNumberOfSPDNDefined = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 11, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNumberOfSPDNDefined.setStatus('current')
bwNumberOfSPDNAssigned = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 11, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNumberOfSPDNAssigned.setStatus('current')
bwNumberOfSPDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 11, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNumberOfSPDeviceType.setStatus('current')
bwSystemGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 12, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSystemGroupIndex"))
if mibBuilder.loadTexts: bwSystemGroupEntry.setStatus('current')
bwSystemGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 12, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemGroupIndex.setStatus('current')
bwSystemGroupSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 12, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemGroupSPID.setStatus('current')
bwSystemGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 12, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemGroupID.setStatus('current')
bwSystemGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 12, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemGroupName.setStatus('current')
bwNumberOfGroupUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 12, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNumberOfGroupUsers.setStatus('current')
bwNumberOfGroupDNDefined = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 12, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNumberOfGroupDNDefined.setStatus('current')
bwNumberOfGroupDNAssigned = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 12, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNumberOfGroupDNAssigned.setStatus('current')
bwNumberOfGroupDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 1, 12, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwNumberOfGroupDeviceType.setStatus('current')
internalStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2))
bySystemInternalQueueResets = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bySystemInternalQueueResets.setStatus('current')
bwSystemInternalQueueTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2, 2), )
if mibBuilder.loadTexts: bwSystemInternalQueueTable.setStatus('current')
bwSystemInternalQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwSystemInternalQueueIndex"))
if mibBuilder.loadTexts: bwSystemInternalQueueEntry.setStatus('current')
bwSystemInternalQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemInternalQueueIndex.setStatus('current')
bwSystemInternalQueueName = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemInternalQueueName.setStatus('current')
bwSystemInternalQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemInternalQueueSize.setStatus('current')
bwSystemInternalQueueTimeAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemInternalQueueTimeAvg.setStatus('current')
bwSystemInternalQueueTimeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemInternalQueueTimeMin.setStatus('current')
bwSystemInternalQueueTimeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemInternalQueueTimeMax.setStatus('current')
bwSystemInternalQueueTimeMaxTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemInternalQueueTimeMaxTimestamp.setStatus('obsolete')
bwSystemInternalQueueLengthCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemInternalQueueLengthCurrent.setStatus('current')
bwSystemInternalQueueLengthAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemInternalQueueLengthAvg.setStatus('current')
bwSystemInternalQueueLengthMax = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemInternalQueueLengthMax.setStatus('current')
bwSystemInternalQueueLengthMaxTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemInternalQueueLengthMaxTimestamp.setStatus('obsolete')
bwSystemInternalQueueTimeMaxTimestampMSB = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemInternalQueueTimeMaxTimestampMSB.setStatus('current')
bwSystemInternalQueueLengthMaxTimestampMSB = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemInternalQueueLengthMaxTimestampMSB.setStatus('current')
bwSystemInternalQueueLengthMaxTimestampLSB = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemInternalQueueLengthMaxTimestampLSB.setStatus('current')
bwSystemInternalQueueTimeMaxTimestampLSB = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 2, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwSystemInternalQueueTimeMaxTimestampLSB.setStatus('current')
overloadStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 3))
bwCurrentOverloadZone = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCurrentOverloadZone.setStatus('obsolete')
bwNumYellowZoneOverloadTrans = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 3, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNumYellowZoneOverloadTrans.setStatus('obsolete')
bwNumRedZoneOverloadTrans = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 3, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNumRedZoneOverloadTrans.setStatus('obsolete')
bwCurrentCallOverloadZone = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 3, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCurrentCallOverloadZone.setStatus('current')
bwNumCallYellowZoneOverloadTrans = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 3, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNumCallYellowZoneOverloadTrans.setStatus('current')
bwNumCallRedZoneOverloadTrans = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 3, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNumCallRedZoneOverloadTrans.setStatus('current')
bwCurrentNonCallOverloadZone = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 3, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCurrentNonCallOverloadZone.setStatus('current')
bwNumNonCallYellowZoneOverloadTrans = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 3, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNumNonCallYellowZoneOverloadTrans.setStatus('current')
bwNumNonCallRedZoneOverloadTrans = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 3, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNumNonCallRedZoneOverloadTrans.setStatus('current')
bwNumDiscardedMessage = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 3, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwNumDiscardedMessage.setStatus('current')
bwTimeLastDiscardedMessage = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 16, 3, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwTimeLastDiscardedMessage.setStatus('current')
nbOfMigratedUsers = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 18, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbOfMigratedUsers.setStatus('current')
psTimesTen = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1))
psPerNbOpenedTransactions = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psPerNbOpenedTransactions.setStatus('current')
psPerNbCommittedTransactions = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psPerNbCommittedTransactions.setStatus('current')
psPerNbFailedTransactions = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psPerNbFailedTransactions.setStatus('current')
psPerNbCriticalErrors = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psPerNbCriticalErrors.setStatus('current')
psTtNbConnectionsCreated = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psTtNbConnectionsCreated.setStatus('current')
psTtConnectionPoolSize = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psTtConnectionPoolSize.setStatus('current')
psTtNbBackdoorUpdates = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psTtNbBackdoorUpdates.setStatus('obsolete')
psTtNbFailedCheckpoints = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psTtNbFailedCheckpoints.setStatus('obsolete')
bwPSAvgUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPSAvgUpdateTime.setStatus('current')
bwPSAvgRowsUpdated = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPSAvgRowsUpdated.setStatus('current')
bwPSAvgQueryTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPSAvgQueryTime.setStatus('current')
bwPSAvgRowsQueried = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPSAvgRowsQueried.setStatus('current')
bwPSUpdateCount = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPSUpdateCount.setStatus('current')
bwPSQueryCount = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPSQueryCount.setStatus('current')
bwPSTTHWMTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 12), )
if mibBuilder.loadTexts: bwPSTTHWMTable.setStatus('current')
bwPSTTHWMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 12, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwPSTTHWMIndex"))
if mibBuilder.loadTexts: bwPSTTHWMEntry.setStatus('current')
bwPSTTHWMIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 12, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPSTTHWMIndex.setStatus('current')
bwPSTTHWMName = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 12, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPSTTHWMName.setStatus('current')
bwPSTTHWMValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 12, 1, 3), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPSTTHWMValue.setStatus('current')
bwPSTTHWMTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 12, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPSTTHWMTimestamp.setStatus('current')
bwPSTTHWMStackTrace = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 12, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPSTTHWMStackTrace.setStatus('current')
psRemoteXla = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 5))
psRemoteXlaNbTimesConnected = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 5, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psRemoteXlaNbTimesConnected.setStatus('current')
psRemoteXlaNbTimesDisconnected = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 5, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psRemoteXlaNbTimesDisconnected.setStatus('current')
psRemoteXlaUpdatesProcessed = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 5, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psRemoteXlaUpdatesProcessed.setStatus('current')
psRemoteXlaUpdatesPending = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 1, 1, 1, 5, 4), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psRemoteXlaUpdatesPending.setStatus('current')
bwExternalCallLogsRetrievalAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 7, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwExternalCallLogsRetrievalAttempts.setStatus('current')
bwExternalCallLogsRetrievalFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 7, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwExternalCallLogsRetrievalFailures.setStatus('current')
psOciStatsNbUpdateRequests = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psOciStatsNbUpdateRequests.setStatus('current')
psOciStatsNbUpdateRequestFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psOciStatsNbUpdateRequestFailures.setStatus('current')
psOciStatsNbQueryRequests = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psOciStatsNbQueryRequests.setStatus('current')
psOciStatsNbQueryRequestFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psOciStatsNbQueryRequestFailures.setStatus('current')
psOciStatsNbAuthorizationRequests = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psOciStatsNbAuthorizationRequests.setStatus('current')
psOciStatsNbAuthorizationRequestFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psOciStatsNbAuthorizationRequestFailures.setStatus('current')
psOciStatsNbReportingAclViolations = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psOciStatsNbReportingAclViolations.setStatus('current')
psOciStatsNbReportNotificationsOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psOciStatsNbReportNotificationsOut.setStatus('current')
psOciStatsActiveSessions = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOciStatsActiveSessions.setStatus('current')
psOciStatsSystemRequestsPerHour = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOciStatsSystemRequestsPerHour.setStatus('current')
psOciStatsSystemRequestResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOciStatsSystemRequestResponseTime.setStatus('current')
psOciStatsMinSystemRequestResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 12), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psOciStatsMinSystemRequestResponseTime.setStatus('current')
psOciStatsMaxSystemRequestResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 13), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psOciStatsMaxSystemRequestResponseTime.setStatus('current')
psOciStatsMaxSystemRequestName = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOciStatsMaxSystemRequestName.setStatus('current')
psOciStatsServiceProviderRequestsPerHour = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOciStatsServiceProviderRequestsPerHour.setStatus('current')
psOciStatsServiceProviderRequestResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOciStatsServiceProviderRequestResponseTime.setStatus('current')
psOciStatsMinServiceProviderRequestResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 17), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psOciStatsMinServiceProviderRequestResponseTime.setStatus('current')
psOciStatsMaxServiceProviderRequestResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 18), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psOciStatsMaxServiceProviderRequestResponseTime.setStatus('current')
psOciStatsMaxServiceProviderRequestName = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOciStatsMaxServiceProviderRequestName.setStatus('current')
psOciStatsGroupRequestsPerHour = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOciStatsGroupRequestsPerHour.setStatus('current')
psOciStatsGroupRequestResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOciStatsGroupRequestResponseTime.setStatus('current')
psOciStatsMinGroupRequestResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 22), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psOciStatsMinGroupRequestResponseTime.setStatus('current')
psOciStatsMaxGroupRequestResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 23), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psOciStatsMaxGroupRequestResponseTime.setStatus('current')
psOciStatsMaxGroupRequestName = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOciStatsMaxGroupRequestName.setStatus('current')
psOciStatsUserRequestsPerHour = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOciStatsUserRequestsPerHour.setStatus('current')
psOciStatsUserRequestResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOciStatsUserRequestResponseTime.setStatus('current')
psOciStatsMinUserRequestResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 27), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psOciStatsMinUserRequestResponseTime.setStatus('current')
psOciStatsMaxUserRequestResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 28), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psOciStatsMaxUserRequestResponseTime.setStatus('current')
psOciStatsMaxUserRequestName = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOciStatsMaxUserRequestName.setStatus('current')
psOciStatsRequestsPerHour = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOciStatsRequestsPerHour.setStatus('current')
psOciStatsRequestResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOciStatsRequestResponseTime.setStatus('current')
psOciStatsMinRequestResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 32), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psOciStatsMinRequestResponseTime.setStatus('current')
psOciStatsMaxRequestResponseTime = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 33), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psOciStatsMaxRequestResponseTime.setStatus('current')
psOciStatsMaxRequestName = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOciStatsMaxRequestName.setStatus('current')
psOCIReportingBackLogMessageTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 35), )
if mibBuilder.loadTexts: psOCIReportingBackLogMessageTable.setStatus('current')
psOCIReportingBackLogMessageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 35, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "psOCIReportingBackLogMessageIndex"))
if mibBuilder.loadTexts: psOCIReportingBackLogMessageEntry.setStatus('current')
psOCIReportingBackLogMessageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 35, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOCIReportingBackLogMessageIndex.setStatus('current')
psOCIReportingBackLogMessageHost = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 35, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOCIReportingBackLogMessageHost.setStatus('current')
psOCIReportingBackLogMessageSaved = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 35, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOCIReportingBackLogMessageSaved.setStatus('current')
psOCIReportingBackLogMessageSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 8, 1, 35, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psOCIReportingBackLogMessageSent.setStatus('current')
psSystemInternalQueueResets = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psSystemInternalQueueResets.setStatus('current')
psSystemInternalQueueTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1, 2), )
if mibBuilder.loadTexts: psSystemInternalQueueTable.setStatus('current')
psSystemInternalQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "psSystemInternalQueueIndex"))
if mibBuilder.loadTexts: psSystemInternalQueueEntry.setStatus('current')
psSystemInternalQueueIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSystemInternalQueueIndex.setStatus('current')
psSystemInternalQueueName = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSystemInternalQueueName.setStatus('current')
psSystemInternalQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSystemInternalQueueSize.setStatus('current')
psSystemInternalQueueTimeAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSystemInternalQueueTimeAvg.setStatus('current')
psSystemInternalQueueTimeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSystemInternalQueueTimeMin.setStatus('current')
psSystemInternalQueueTimeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSystemInternalQueueTimeMax.setStatus('current')
psSystemInternalQueueTimeMaxTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSystemInternalQueueTimeMaxTimestamp.setStatus('obsolete')
psSystemInternalQueueLengthCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSystemInternalQueueLengthCurrent.setStatus('current')
psSystemInternalQueueLengthAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSystemInternalQueueLengthAvg.setStatus('current')
psSystemInternalQueueLengthMax = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSystemInternalQueueLengthMax.setStatus('current')
psSystemInternalQueueLengthMaxTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSystemInternalQueueLengthMaxTimestamp.setStatus('obsolete')
psSystemInternalQueueTimeMaxTimestampMSB = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSystemInternalQueueTimeMaxTimestampMSB.setStatus('current')
psSystemInternalQueueLengthMaxTimestampMSB = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSystemInternalQueueLengthMaxTimestampMSB.setStatus('current')
psSystemInternalQueueLengthMaxTimestampLSB = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSystemInternalQueueLengthMaxTimestampLSB.setStatus('current')
psSystemInternalQueueTimeMaxTimestampLSB = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 9, 1, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSystemInternalQueueTimeMaxTimestampLSB.setStatus('current')
bwLDAPIntegrationNumQueryAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 5, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwLDAPIntegrationNumQueryAttempts.setStatus('current')
bwLDAPIntegrationNumConnectionFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 5, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwLDAPIntegrationNumConnectionFailures.setStatus('current')
bwCommonCommPSStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 6, 10, 1, 1), )
if mibBuilder.loadTexts: bwCommonCommPSStatsTable.setStatus('current')
bwCommonCommPSStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 6, 10, 1, 1, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwCommonCommPSStatsIndex"))
if mibBuilder.loadTexts: bwCommonCommPSStatsEntry.setStatus('current')
bwCommonCommPSStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 10, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCommonCommPSStatsIndex.setStatus('current')
bwCommonCommPSHost = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 10, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCommonCommPSHost.setStatus('current')
bwCommonCommPSInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 10, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCommonCommPSInterface.setStatus('current')
bwCommonCommPSProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 10, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwCommonCommPSProtocol.setStatus('current')
bwCommonCommPSAcceptedOutboundConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 10, 1, 1, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommonCommPSAcceptedOutboundConnections.setStatus('current')
bwCommonCommPSAcceptedInboundConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 10, 1, 1, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommonCommPSAcceptedInboundConnections.setStatus('current')
bwCommonCommPSRejectedOutboundConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 10, 1, 1, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommonCommPSRejectedOutboundConnections.setStatus('current')
bwCommonCommPSRejectedInboundConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 10, 1, 1, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommonCommPSRejectedInboundConnections.setStatus('current')
bwCommonCommPSOutputMessagesProcessed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 10, 1, 1, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommonCommPSOutputMessagesProcessed.setStatus('current')
bwCommonCommPSInputMessagesProcessed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 10, 1, 1, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommonCommPSInputMessagesProcessed.setStatus('current')
bwCommonCommPSOutputCommunicationErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 10, 1, 1, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommonCommPSOutputCommunicationErrors.setStatus('current')
bwCommonCommPSInputCommunicationErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 10, 1, 1, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwCommonCommPSInputCommunicationErrors.setStatus('current')
bwPSMonitoringExecutorTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 6, 12, 1, 1), )
if mibBuilder.loadTexts: bwPSMonitoringExecutorTable.setStatus('current')
bwPSMonitoringExecutorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 6, 12, 1, 1, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwPSMonitoringExecutorIndex"))
if mibBuilder.loadTexts: bwPSMonitoringExecutorEntry.setStatus('current')
bwPSMonitoringExecutorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 12, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPSMonitoringExecutorIndex.setStatus('current')
bwPSMonitoringExecutorName = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 12, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPSMonitoringExecutorName.setStatus('current')
bwPSMonitoringExecutorCurrentPoolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 12, 1, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPSMonitoringExecutorCurrentPoolSize.setStatus('current')
bwPSMonitoringExecutorMaxPoolSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 12, 1, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPSMonitoringExecutorMaxPoolSize.setStatus('current')
bwPSMonitoringExecutorAvgActiveThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 12, 1, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPSMonitoringExecutorAvgActiveThreads.setStatus('current')
bwPSMonitoringExecutorTaskQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 12, 1, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPSMonitoringExecutorTaskQueueSize.setStatus('current')
bwPSMonitoringExecutorNbTasksRun = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 12, 1, 1, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPSMonitoringExecutorNbTasksRun.setStatus('current')
bwPSMonitoringExecutorNbWarnings = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 12, 1, 1, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPSMonitoringExecutorNbWarnings.setStatus('current')
bwPSMonitoringExecutorNbErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 12, 1, 1, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPSMonitoringExecutorNbErrors.setStatus('current')
bwPSMonitoringExecutorLongestTaskMs = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 12, 1, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPSMonitoringExecutorLongestTaskMs.setStatus('current')
bwPSMonitoringExecutorLongestTaskName = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 12, 1, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPSMonitoringExecutorLongestTaskName.setStatus('current')
bwPSTcpServersStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 6, 11, 1, 1), )
if mibBuilder.loadTexts: bwPSTcpServersStatsTable.setStatus('current')
bwPSTcpServersStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 6, 11, 1, 1, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwPSTcpServersStatsIndex"))
if mibBuilder.loadTexts: bwPSTcpServersStatsEntry.setStatus('current')
bwPSTcpServersStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 11, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPSTcpServersStatsIndex.setStatus('current')
bwPSTcpServersName = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 11, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPSTcpServersName.setStatus('current')
bwPSTcpServersNbConnectionsAccepted = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 11, 1, 1, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPSTcpServersNbConnectionsAccepted.setStatus('current')
bwPSTcpServersNbConnectionsRefused = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 11, 1, 1, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPSTcpServersNbConnectionsRefused.setStatus('current')
bwPSTcpServersNbConnectionsInitiated = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 11, 1, 1, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPSTcpServersNbConnectionsInitiated.setStatus('current')
bwPSTcpServersNbConnectionsClosed = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 11, 1, 1, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPSTcpServersNbConnectionsClosed.setStatus('current')
bwPSTcpServersNbBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 11, 1, 1, 1, 7), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPSTcpServersNbBytesSent.setStatus('current')
bwPSTcpServersNbBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 11, 1, 1, 1, 8), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPSTcpServersNbBytesReceived.setStatus('current')
bwPSTcpServersOutgoingQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 11, 1, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPSTcpServersOutgoingQueueSize.setStatus('current')
bwPSTcpServersIncomingQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 11, 1, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwPSTcpServersIncomingQueueSize.setStatus('current')
bwPSTcpServersNbBytesSentSecure = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 11, 1, 1, 1, 11), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPSTcpServersNbBytesSentSecure.setStatus('current')
bwPSTcpServersNbBytesReceivedSecure = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 11, 1, 1, 1, 12), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPSTcpServersNbBytesReceivedSecure.setStatus('current')
bwActivatableFeatureTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 6, 13, 1, 1), )
if mibBuilder.loadTexts: bwActivatableFeatureTable.setStatus('current')
bwActivatableFeatureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 6, 13, 1, 1, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "bwActivatableFeatureIndex"))
if mibBuilder.loadTexts: bwActivatableFeatureEntry.setStatus('current')
bwActivatableFeatureIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 13, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwActivatableFeatureIndex.setStatus('current')
bwActivatableFeatureId = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 13, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwActivatableFeatureId.setStatus('current')
bwActivatableFeatureDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 13, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwActivatableFeatureDescription.setStatus('current')
bwActivatableFeatureActivated = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 13, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notActive", 0), ("active", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bwActivatableFeatureActivated.setStatus('current')
bwShInterfaceRequestsIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 14, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwShInterfaceRequestsIn.setStatus('current')
bwShInterfaceRequestsOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 14, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwShInterfaceRequestsOut.setStatus('current')
bwShInterfaceResponsesIn = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 14, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwShInterfaceResponsesIn.setStatus('current')
bwShInterfaceResponsesOut = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 14, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwShInterfaceResponsesOut.setStatus('current')
bwShInterfaceRequestTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 14, 1, 5), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwShInterfaceRequestTimeout.setStatus('current')
bwShInterfaceRequestResourceLimitation = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 14, 1, 6), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwShInterfaceRequestResourceLimitation.setStatus('current')
bwShInterfaceUserDataRequest = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 14, 1, 7), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwShInterfaceUserDataRequest.setStatus('current')
bwShInterfaceUserDataRequestFailure = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 14, 1, 8), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwShInterfaceUserDataRequestFailure.setStatus('current')
bwShInterfaceSubscribeNotificationsRequest = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 14, 1, 9), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwShInterfaceSubscribeNotificationsRequest.setStatus('current')
bwShInterfaceSubscribeNotificationsRequestFailure = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 14, 1, 10), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwShInterfaceSubscribeNotificationsRequestFailure.setStatus('current')
bwShInterfacePushNotificationRequest = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 14, 1, 11), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwShInterfacePushNotificationRequest.setStatus('current')
bwShInterfacePushNotificationRequestFailure = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 14, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwShInterfacePushNotificationRequestFailure.setStatus('current')
bwShInterfacePublicIdentityRefreshInitiated = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 14, 1, 13), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwShInterfacePublicIdentityRefreshInitiated.setStatus('current')
bwShInterfacePublicIdentityRefreshFailure = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 14, 1, 14), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwShInterfacePublicIdentityRefreshFailure.setStatus('current')
bwShInterfaceSystemRefreshInitiated = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 14, 1, 15), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwShInterfaceSystemRefreshInitiated.setStatus('current')
psBwVMRNumLoginAttempts = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 1, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBwVMRNumLoginAttempts.setStatus('current')
psBwVMRNumLoginFailures = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBwVMRNumLoginFailures.setStatus('current')
psBwVMRSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 1, 3), )
if mibBuilder.loadTexts: psBwVMRSPTable.setStatus('current')
psBwVMRSPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 1, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "psBwVMRSPIndex"))
if mibBuilder.loadTexts: psBwVMRSPEntry.setStatus('current')
psBwVMRSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 1, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBwVMRSPIndex.setStatus('current')
psBwVMRSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 1, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBwVMRSPID.setStatus('current')
psBwVMRSPNumLoginAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 1, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBwVMRSPNumLoginAttempts.setStatus('current')
psBwVMRSPNumLoginFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 1, 3, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBwVMRSPNumLoginFailures.setStatus('current')
psBwVMRGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 1, 4), )
if mibBuilder.loadTexts: psBwVMRGroupTable.setStatus('current')
psBwVMRGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 1, 4, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "psBwVMRGroupIndex"))
if mibBuilder.loadTexts: psBwVMRGroupEntry.setStatus('current')
psBwVMRGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 1, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBwVMRGroupIndex.setStatus('current')
psBwVMRGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 1, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBwVMRGroupID.setStatus('current')
psBwVMRGroupNumLoginAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 1, 4, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBwVMRGroupNumLoginAttempts.setStatus('current')
psBwVMRGroupNumLoginFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 1, 4, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psBwVMRGroupNumLoginFailures.setStatus('current')
bwPolycomPhoneDirectoryNumDownloads = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 2, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPolycomPhoneDirectoryNumDownloads.setStatus('current')
polycomSPTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 2, 2), )
if mibBuilder.loadTexts: polycomSPTable.setStatus('current')
polycomSPTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 2, 2, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "polycomSPIndex"))
if mibBuilder.loadTexts: polycomSPTableEntry.setStatus('current')
polycomSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 2, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomSPIndex.setStatus('current')
polycomSPID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomSPID.setStatus('current')
bwPolycomPhoneDirectorySPNumDownloads = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 2, 2, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPolycomPhoneDirectorySPNumDownloads.setStatus('current')
polycomGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 2, 3), )
if mibBuilder.loadTexts: polycomGroupTable.setStatus('current')
polycomGroupTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 2, 3, 1), ).setIndexNames((0, "BW-BroadworksApplicationServer", "polycomGroupIndex"))
if mibBuilder.loadTexts: polycomGroupTableEntry.setStatus('current')
polycomGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 2, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomGroupIndex.setStatus('current')
polycomGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 2, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: polycomGroupID.setStatus('current')
bwPolycomPhoneDirectoryGroupNumDownloads = MibTableColumn((1, 3, 6, 1, 4, 1, 6431, 1, 6, 15, 2, 3, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bwPolycomPhoneDirectoryGroupNumDownloads.setStatus('current')
resetAllCounters = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 2, 17, 1), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resetAllCounters.setStatus('current')
psReservedCounter = MibScalar((1, 3, 6, 1, 4, 1, 6431, 1, 6, 999, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psReservedCounter.setStatus('obsolete')
bwAsMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1))
bwAsMibCompliancy = MibIdentifier((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 2))
bwAsMgcpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 1)).setObjects(("BW-BroadworksApplicationServer", "bwMGCPStatsMGCPCommandOuts"), ("BW-BroadworksApplicationServer", "bwMGCPStatsMGCPCommandIns"), ("BW-BroadworksApplicationServer", "bwMGCPStatsMGCPResponseOuts"), ("BW-BroadworksApplicationServer", "bwMGCPStatsMGCPResponseIns"), ("BW-BroadworksApplicationServer", "bwMGCPStatsAuditConnectionOuts"), ("BW-BroadworksApplicationServer", "bwMGCPStatsAuditEndpointOuts"), ("BW-BroadworksApplicationServer", "bwMGCPStatsCreateConnectionOuts"), ("BW-BroadworksApplicationServer", "bwMGCPStatsDeleteAgentConnectionOuts"), ("BW-BroadworksApplicationServer", "bwMGCPStatsDeleteConnectionOuts"), ("BW-BroadworksApplicationServer", "bwMGCPStatsDeleteGatewayConnectionIns"), ("BW-BroadworksApplicationServer", "bwMGCPStatsEndpointConfigurationOuts"), ("BW-BroadworksApplicationServer", "bwMGCPStatsExtraCommandOuts"), ("BW-BroadworksApplicationServer", "bwMGCPStatsModifyConnectionOuts"), ("BW-BroadworksApplicationServer", "bwMGCPStatsNotificationRequestOuts"), ("BW-BroadworksApplicationServer", "bwMGCPStatsNotifyIns"), ("BW-BroadworksApplicationServer", "bwMGCPStatsRestartInProgressIns"), ("BW-BroadworksApplicationServer", "bwMGCPStatsMGCPCommandResponseTable"), ("BW-BroadworksApplicationServer", "bwMGCPStatsMGCPCommandResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwMGCPStatsMGCPCommandResponseOuts"), ("BW-BroadworksApplicationServer", "bwMGCPStatsMGCPCommandResponseIns"), ("BW-BroadworksApplicationServer", "bwMGCPStatsAuditConnectionResponseTable"), ("BW-BroadworksApplicationServer", "bwMGCPStatsAuditConnectionResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwMGCPStatsAuditConnectionResponseIns"), ("BW-BroadworksApplicationServer", "bwMGCPStatsAuditEndpointResponseTable"), ("BW-BroadworksApplicationServer", "bwMGCPStatsAuditEndpointResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwMGCPStatsAuditEndpointResponseIns"), ("BW-BroadworksApplicationServer", "bwMGCPStatsCreateConnectionResponseTable"), ("BW-BroadworksApplicationServer", "bwMGCPStatsCreateConnectionResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwMGCPStatsCreateConnectionResponseIns"), ("BW-BroadworksApplicationServer", "bwMGCPStatsDeleteConnectionResponseTable"), ("BW-BroadworksApplicationServer", "bwMGCPStatsDeleteConnectionResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwMGCPStatsDeleteAgentConnectionResponseIns"), ("BW-BroadworksApplicationServer", "bwMGCPStatsDeleteConnectionResponseIns"), ("BW-BroadworksApplicationServer", "bwMGCPStatsDeleteGatewayConnectionResponseOuts"), ("BW-BroadworksApplicationServer", "bwMGCPStatsEndpointConfigurationResponseTable"), ("BW-BroadworksApplicationServer", "bwMGCPStatsEndpointConfigurationResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwMGCPStatsEndpointConfigurationResponseIns"), ("BW-BroadworksApplicationServer", "bwMGCPStatsExtraCommandResponseTable"), ("BW-BroadworksApplicationServer", "bwMGCPStatsExtraCommandResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwMGCPStatsExtraCommandResponseIns"), ("BW-BroadworksApplicationServer", "bwMGCPStatsModifyConnectionResponseTable"), ("BW-BroadworksApplicationServer", "bwMGCPStatsModifyConnectionResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwMGCPStatsModifyConnectionResponseIns"), ("BW-BroadworksApplicationServer", "bwMGCPStatsNotificationRequestResponseTable"), ("BW-BroadworksApplicationServer", "bwMGCPStatsNotificationRequestResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwMGCPStatsNotificationRequestResponseIns"), ("BW-BroadworksApplicationServer", "bwMGCPStatsNotifyResponseTable"), ("BW-BroadworksApplicationServer", "bwMGCPStatsNotifyResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwMGCPStatsNotifyResponseOuts"), ("BW-BroadworksApplicationServer", "bwMGCPStatsRestartInProgressResponseTable"), ("BW-BroadworksApplicationServer", "bwMGCPStatsRestartInProgressResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwMGCPStatsRestartInProgressResponseOuts"), ("BW-BroadworksApplicationServer", "bwMGCPStatsDialToneDelay"), ("BW-BroadworksApplicationServer", "bwMGCPStatsMinDialToneDelay"), ("BW-BroadworksApplicationServer", "bwMGCPStatsMaxDialToneDelay"), ("BW-BroadworksApplicationServer", "bwMGCPStatsSetupSignalDelay"), ("BW-BroadworksApplicationServer", "bwMGCPStatsMinSetupSignalDelay"), ("BW-BroadworksApplicationServer", "bwMGCPStatsMaxSetupSignalDelay"), ("BW-BroadworksApplicationServer", "bwMGCPStatsAnswerSignalDelay"), ("BW-BroadworksApplicationServer", "bwMGCPStatsMinAnswerSignalDelay"), ("BW-BroadworksApplicationServer", "bwMGCPStatsMaxAnswerSignalDelay"), ("BW-BroadworksApplicationServer", "bwMGCPStatsMessageRetryPercentage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsMgcpGroup = bwAsMgcpGroup.setStatus('current')
bwAsMcpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 2)).setObjects(("BW-BroadworksApplicationServer", "bwMCPCommandsTransmitted"), ("BW-BroadworksApplicationServer", "bwMCPCommandsRetransmitted"), ("BW-BroadworksApplicationServer", "bwMCPNotificationsReceived"), ("BW-BroadworksApplicationServer", "bwMCPResourceAllocAttempts"), ("BW-BroadworksApplicationServer", "bwMCPResourceAllocFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsMcpGroup = bwAsMcpGroup.setStatus('current')
bwAsImsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 3)).setObjects(("BW-BroadworksApplicationServer", "bwIMSSuccessfulConnectionAttempts"), ("BW-BroadworksApplicationServer", "bwIMSUnsuccessfulConnectionAttempts"), ("BW-BroadworksApplicationServer", "bwIMSSuccessfulDownLoadAttempts"), ("BW-BroadworksApplicationServer", "bwIMSUnsuccessfulDownLoadAttempts"), ("BW-BroadworksApplicationServer", "bwIMSMaxSessions"), ("BW-BroadworksApplicationServer", "bwIMSAvgSessions"), ("BW-BroadworksApplicationServer", "bwIMSMaxThreads"), ("BW-BroadworksApplicationServer", "bwIMSAvgThreads"), ("BW-BroadworksApplicationServer", "bwIMSMaxServiceTime"), ("BW-BroadworksApplicationServer", "bwIMSAvgServiceTime"), ("BW-BroadworksApplicationServer", "bwIMSNumKeepAlive"), ("BW-BroadworksApplicationServer", "bwIMSNumDroppedRequests"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsImsGroup = bwAsImsGroup.setStatus('current')
bwAsCapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 4)).setObjects(("BW-BroadworksApplicationServer", "bwCAPStatsRegisterRequests"), ("BW-BroadworksApplicationServer", "bwCAPStatsUnRegistersIn"), ("BW-BroadworksApplicationServer", "bwCAPStatsUnRegistersOut"), ("BW-BroadworksApplicationServer", "bwCAPStatsSessionUpdatesOut"), ("BW-BroadworksApplicationServer", "bwCAPStatsProfileUpdatesOut"), ("BW-BroadworksApplicationServer", "bwCAPStatsCallUpdatesOut"), ("BW-BroadworksApplicationServer", "bwCAPStatsCallActionsIn"), ("BW-BroadworksApplicationServer", "bwCAPStatsAcknowledgementsIn"), ("BW-BroadworksApplicationServer", "bwCAPStatsAcknowledgementsOut"), ("BW-BroadworksApplicationServer", "bwCAPStatsAclViolations"), ("BW-BroadworksApplicationServer", "bwCAPStatsUnsuccessfulRegisterResponses"), ("BW-BroadworksApplicationServer", "bwCAPStatsRegisterResponsesTable"), ("BW-BroadworksApplicationServer", "bwCAPStatsCallControlInfosOut"), ("BW-BroadworksApplicationServer", "bwCAPStatsRegisterAuthentications"), ("BW-BroadworksApplicationServer", "bwCAPStatsResponseAuthentications"), ("BW-BroadworksApplicationServer", "bwCAPStatsInfoRequests"), ("BW-BroadworksApplicationServer", "bwCAPStatsInfoResponses"), ("BW-BroadworksApplicationServer", "bwCAPStatsExternalNotifies"), ("BW-BroadworksApplicationServer", "bwCAPMonitoringUsersRequests"), ("BW-BroadworksApplicationServer", "bwCAPMonitoringUsersResponses"), ("BW-BroadworksApplicationServer", "bwCAPStatsQueueUpdatesOut"), ("BW-BroadworksApplicationServer", "bwCAPStatsQueueActionsIn"), ("BW-BroadworksApplicationServer", "bwCAPStatsDatagramsIn"), ("BW-BroadworksApplicationServer", "bwCAPStatsDatagramsOut"), ("BW-BroadworksApplicationServer", "bwCAPStatsTotalMsgs"), ("BW-BroadworksApplicationServer", "bwCAPStatsRegisterResponsesType"), ("BW-BroadworksApplicationServer", "bwCAPStatsRegisterResponses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCapGroup = bwAsCapGroup.setStatus('current')
bwAsSmdiGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 5)).setObjects(("BW-BroadworksApplicationServer", "bwSmdiNbOfActiveConnection"), ("BW-BroadworksApplicationServer", "bwSmdiNbOfOpenedConnection"), ("BW-BroadworksApplicationServer", "bwSmdiIncomingMWIActivationRequests"), ("BW-BroadworksApplicationServer", "bwSmdiIncomingMWIDesactivationRequests"), ("BW-BroadworksApplicationServer", "bwSmdiInvalidRequestsReceived"), ("BW-BroadworksApplicationServer", "bwSmdiBlockResponsesSent"), ("BW-BroadworksApplicationServer", "bwSmdiInvalidResponsesSent"), ("BW-BroadworksApplicationServer", "bwSmdiOutgoingMWIActivationRequests"), ("BW-BroadworksApplicationServer", "bwSmdiOutgoingMWIDeactivationRequests"), ("BW-BroadworksApplicationServer", "bwSmdiBlockResponsesReceived"), ("BW-BroadworksApplicationServer", "bwSmdiInvalidResponsesReceived"), ("BW-BroadworksApplicationServer", "bwSMDIMessageDeskMessageSent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsSmdiGroup = bwAsSmdiGroup.setStatus('current')
bwAsMediaResourceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 6)).setObjects(("BW-BroadworksApplicationServer", "bwMediaCommandsTransmitted"), ("BW-BroadworksApplicationServer", "bwMediaNotificationsReceived"), ("BW-BroadworksApplicationServer", "bwMediaResourceAllocAttempts"), ("BW-BroadworksApplicationServer", "bwMediaResourceAllocFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsMediaResourceGroup = bwAsMediaResourceGroup.setStatus('current')
bwAsWholeSalesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 7)).setObjects(("BW-BroadworksApplicationServer", "bwWSPStatsServiceRequestsIn"), ("BW-BroadworksApplicationServer", "bwWSPStatsServiceActionsOut"), ("BW-BroadworksApplicationServer", "bwWSPStatsServiceUpdatesIn"), ("BW-BroadworksApplicationServer", "bwWSPStatsServiceAcknowledgementsOut"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsWholeSalesGroup = bwAsWholeSalesGroup.setStatus('current')
bwAsRealTimeAccntGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 8)).setObjects(("BW-BroadworksApplicationServer", "bwRealtimeAccountingRequestsTransmitted"), ("BW-BroadworksApplicationServer", "bwRealtimeAccountingRequestsRetransmitted"), ("BW-BroadworksApplicationServer", "bwRealtimeAccountingRequestsDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsRealTimeAccntGroup = bwAsRealTimeAccntGroup.setStatus('current')
bwAsExtCallLogsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 9)).setObjects(("BW-BroadworksApplicationServer", "bwExternalCallLogsTransmitted"), ("BW-BroadworksApplicationServer", "bwExternalCallLogsRetransmitted"), ("BW-BroadworksApplicationServer", "bwExternalCallLogsDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsExtCallLogsGroup = bwAsExtCallLogsGroup.setStatus('current')
bwAsXsBcctGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 10)).setObjects(("BW-BroadworksApplicationServer", "bwCommonCommXSStatsTable"), ("BW-BroadworksApplicationServer", "bwCommonCommXSStatsIndex"), ("BW-BroadworksApplicationServer", "bwCommonCommXSHost"), ("BW-BroadworksApplicationServer", "bwCommonCommXSInterface"), ("BW-BroadworksApplicationServer", "bwCommonCommXSProtocol"), ("BW-BroadworksApplicationServer", "bwCommonCommXSAcceptedOutboundConnections"), ("BW-BroadworksApplicationServer", "bwCommonCommXSAcceptedInboundConnections"), ("BW-BroadworksApplicationServer", "bwCommonCommXSRejectedOutboundConnections"), ("BW-BroadworksApplicationServer", "bwCommonCommXSRejectedInboundConnections"), ("BW-BroadworksApplicationServer", "bwCommonCommXSOutputMessagesProcessed"), ("BW-BroadworksApplicationServer", "bwCommonCommXSInputMessagesProcessed"), ("BW-BroadworksApplicationServer", "bwCommonCommXSOutputCommunicationErrors"), ("BW-BroadworksApplicationServer", "bwCommonCommXSInputCommunicationErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsXsBcctGroup = bwAsXsBcctGroup.setStatus('current')
bwAsCpeDeviceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 11)).setObjects(("BW-BroadworksApplicationServer", "bwCPEDeviceStatsTable"), ("BW-BroadworksApplicationServer", "bwCPEDeviceStatsIndex"), ("BW-BroadworksApplicationServer", "bwCPEDeviceName"), ("BW-BroadworksApplicationServer", "bwCPEDeviceReset"), ("BW-BroadworksApplicationServer", "bwCPEDeviceFileRebuilt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCpeDeviceGroup = bwAsCpeDeviceGroup.setStatus('current')
bwAsCallpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 12)).setObjects(("BW-BroadworksApplicationServer", "bwCallpNetworkOriginationAttempts"), ("BW-BroadworksApplicationServer", "bwCallpNetworkTerminationAttempts"), ("BW-BroadworksApplicationServer", "bwCallpNetworkTerminationsAnswered"), ("BW-BroadworksApplicationServer", "bwCallpUserOriginationAttempts"), ("BW-BroadworksApplicationServer", "bwCallpUserTerminationAttempts"), ("BW-BroadworksApplicationServer", "bwCallpUserTerminationsAnswered"), ("BW-BroadworksApplicationServer", "bwCallpEmergencyCallAttempts"), ("BW-BroadworksApplicationServer", "bwCallpEmergencyCallAlarms"), ("BW-BroadworksApplicationServer", "bwCallpSPTable"), ("BW-BroadworksApplicationServer", "bwCallpActiveCalls"), ("BW-BroadworksApplicationServer", "bwCallpGroupTable"), ("BW-BroadworksApplicationServer", "bwCallpCallsPerSecond"), ("BW-BroadworksApplicationServer", "bwCallpMaximumNumberofSimCallsExceeded"), ("BW-BroadworksApplicationServer", "bwCallpMaximumCallTimeforAnsweredCallsExceeded"), ("BW-BroadworksApplicationServer", "bwCallpMaximumCallTimeforUnansweredCallsExceeded"), ("BW-BroadworksApplicationServer", "bwCallpActiveCallsAsPercentOfLicense"), ("BW-BroadworksApplicationServer", "bwCallpMaximumNumberofSimVideoCallsExceeded"), ("BW-BroadworksApplicationServer", "bwCallpMediaTypeNotSupported"), ("BW-BroadworksApplicationServer", "bwCallpSPIndex"), ("BW-BroadworksApplicationServer", "bwCallpSPID"), ("BW-BroadworksApplicationServer", "bwCallpSPUserOriginationAttempts"), ("BW-BroadworksApplicationServer", "bwCallpSPUserTerminationAttempts"), ("BW-BroadworksApplicationServer", "bwCallpSPUserTerminationsAnswered"), ("BW-BroadworksApplicationServer", "bwCallpSPEmergencyCallAttempts"), ("BW-BroadworksApplicationServer", "bwCallpSPMaximumNumberofSimCallsExceeded"), ("BW-BroadworksApplicationServer", "bwCallpSPMaximumCallTimeforAnsweredCallsExceeded"), ("BW-BroadworksApplicationServer", "bwCallpSPMaximumCallTimeforUnansweredCallsExceeded"), ("BW-BroadworksApplicationServer", "bwCallpSPMaximumNumberofSimVideoCallsExceeded"), ("BW-BroadworksApplicationServer", "bwCallpSPMediaTypeNotSupported"), ("BW-BroadworksApplicationServer", "bwCallpGroupIndex"), ("BW-BroadworksApplicationServer", "bwCallpGroupID"), ("BW-BroadworksApplicationServer", "bwCallpGroupUserOriginationAttempts"), ("BW-BroadworksApplicationServer", "bwCallpGroupUserTerminationAttempts"), ("BW-BroadworksApplicationServer", "bwCallpGroupUserTerminationsAnswered"), ("BW-BroadworksApplicationServer", "bwCallpGroupEmergencyCallAttempts"), ("BW-BroadworksApplicationServer", "bwCallpGroupMaximumNumberofSimCallsExceeded"), ("BW-BroadworksApplicationServer", "bwCallpGroupMaximumCallTimeforAnsweredCallsExceeded"), ("BW-BroadworksApplicationServer", "bwCallpGroupMaximumCallTimeforUnansweredCallsExceeded"), ("BW-BroadworksApplicationServer", "bwCallpGroupMaximumNumberofSimVideoCallsExceeded"), ("BW-BroadworksApplicationServer", "bwCallpGroupMediaTypeNotSupported"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCallpGroup = bwAsCallpGroup.setStatus('current')
bwAsSmtpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 13)).setObjects(("BW-BroadworksApplicationServer", "bwSMTPTotalPrimaryEmailSendAttempts"), ("BW-BroadworksApplicationServer", "bwSMTPTotalSecondaryEmailSendAttempts"), ("BW-BroadworksApplicationServer", "bwSMTPPrimaryUnSuccessfulEmailSendAttempts"), ("BW-BroadworksApplicationServer", "bwSMTPSecondaryUnSuccessfulEmailSendAttempts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsSmtpGroup = bwAsSmtpGroup.setStatus('current')
bwAsSipGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 14)).setObjects(("BW-BroadworksApplicationServer", "bwSipSummaryTotalTransactions"), ("BW-BroadworksApplicationServer", "bwSipStatsInviteIns"), ("BW-BroadworksApplicationServer", "bwSipStatsInviteOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsAckIns"), ("BW-BroadworksApplicationServer", "bwSipStatsAckOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsByeIns"), ("BW-BroadworksApplicationServer", "bwSipStatsByeOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsCancelIns"), ("BW-BroadworksApplicationServer", "bwSipStatsCancelOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsOptionsIns"), ("BW-BroadworksApplicationServer", "bwSipStatsOptionsOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsRegisterIns"), ("BW-BroadworksApplicationServer", "bwSipStatsRegisterOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsInfoIns"), ("BW-BroadworksApplicationServer", "bwSipStatsInfoOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsNotifyIns"), ("BW-BroadworksApplicationServer", "bwSipStatsNotifyOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsPrackIns"), ("BW-BroadworksApplicationServer", "bwSipStatsPrackOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsOtherIns"), ("BW-BroadworksApplicationServer", "bwSipStatsOtherOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsInviteResponsesTable"), ("BW-BroadworksApplicationServer", "bwSipStatsInviteResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwSipStatsInviteResponseIns"), ("BW-BroadworksApplicationServer", "bwSipStatsInviteResponseOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsByeResponsesTable"), ("BW-BroadworksApplicationServer", "bwSipStatsByeResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwSipStatsByeResponseIns"), ("BW-BroadworksApplicationServer", "bwSipStatsByeResponseOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsCancelResponsesTable"), ("BW-BroadworksApplicationServer", "bwSipStatsCancelResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwSipStatsCancelResponseIns"), ("BW-BroadworksApplicationServer", "bwSipStatsCancelResponseOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsOptionsResponsesTable"), ("BW-BroadworksApplicationServer", "bwSipStatsOptionsResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwSipStatsOptionsResponseIns"), ("BW-BroadworksApplicationServer", "bwSipStatsOptionsResponseOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsRegisterResponsesTable"), ("BW-BroadworksApplicationServer", "bwSipStatsRegisterResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwSipStatsRegisterResponseIns"), ("BW-BroadworksApplicationServer", "bwSipStatsRegisterResponseOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsPrackResponsesTable"), ("BW-BroadworksApplicationServer", "bwSipStatsPrackResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwSipStatsPrackResponseIns"), ("BW-BroadworksApplicationServer", "bwSipStatsPrackResponseOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsInfoResponsesTable"), ("BW-BroadworksApplicationServer", "bwSipStatsInfoResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwSipStatsInfoResponseIns"), ("BW-BroadworksApplicationServer", "bwSipStatsInfoResponseOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsNotifyResponsesTable"), ("BW-BroadworksApplicationServer", "bwSipStatsNotifyResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwSipStatsNotifyResponseIns"), ("BW-BroadworksApplicationServer", "bwSipStatsNotifyResponseOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsOtherResponsesTable"), ("BW-BroadworksApplicationServer", "bwSipStatsOtherResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwSipStatsOtherResponseIns"), ("BW-BroadworksApplicationServer", "bwSipStatsOtherResponseOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsRetryInvites"), ("BW-BroadworksApplicationServer", "bwSipStatsRetryByes"), ("BW-BroadworksApplicationServer", "bwSipStatsRetryCancels"), ("BW-BroadworksApplicationServer", "bwSipStatsRetryResponses"), ("BW-BroadworksApplicationServer", "bwSipStatsSubscribeIns"), ("BW-BroadworksApplicationServer", "bwSipStatsSubscribeOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsMessageIns"), ("BW-BroadworksApplicationServer", "bwSipStatsMessageOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsSubscribeResponsesTable"), ("BW-BroadworksApplicationServer", "bwSipStatsSubscribeResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwSipStatsSubscribeResponseIns"), ("BW-BroadworksApplicationServer", "bwSipStatsSubscribeResponseOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsMessageResponsesTable"), ("BW-BroadworksApplicationServer", "bwSipStatsMessageResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwSipStatsMessageResponseIns"), ("BW-BroadworksApplicationServer", "bwSipStatsMessageResponseOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsUpdateIns"), ("BW-BroadworksApplicationServer", "bwSipStatsUpdateOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsUpdateResponseTable"), ("BW-BroadworksApplicationServer", "bwSipStatsUpdateResponseCodeValue"), ("BW-BroadworksApplicationServer", "bwSipStatsUpdateResponseIns"), ("BW-BroadworksApplicationServer", "bwSipStatsUpdateResponseOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsSetupSignalDelay"), ("BW-BroadworksApplicationServer", "bwSipStatsMinSetupSignalDelay"), ("BW-BroadworksApplicationServer", "bwSipStatsMaxSetupSignalDelay"), ("BW-BroadworksApplicationServer", "bwSipStatsAnswerSignalDelay"), ("BW-BroadworksApplicationServer", "bwSipStatsMinAnswerSignalDelay"), ("BW-BroadworksApplicationServer", "bwSipStatsMaxAnswerSignalDelay"), ("BW-BroadworksApplicationServer", "bwSipStatsRegistrationsPerMinute"), ("BW-BroadworksApplicationServer", "bwSipStatsMsgRetryPercentageToOther"), ("BW-BroadworksApplicationServer", "bwSipStatsMsgRetryToNeTable"), ("BW-BroadworksApplicationServer", "bwSipStatsMsgRetryToNeID"), ("BW-BroadworksApplicationServer", "bwSipStatsMsgRetryToNeAddr"), ("BW-BroadworksApplicationServer", "bwSipStatsMsgRetryToNePercentage"), ("BW-BroadworksApplicationServer", "bwSipStatsActiveTcpConnections"), ("BW-BroadworksApplicationServer", "bwSipStatsTcpIns"), ("BW-BroadworksApplicationServer", "bwSipStatsTcpOuts"), ("BW-BroadworksApplicationServer", "bwSipStatsTcpFailures"), ("BW-BroadworksApplicationServer", "bwSipStatsUdpIns"), ("BW-BroadworksApplicationServer", "bwSipStatsUdpOuts"), ("BW-BroadworksApplicationServer", "bwSIPReclaimedStaleTcpConnections"), ("BW-BroadworksApplicationServer", "bwSIPTcpTotalConnections"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsSipGroup = bwAsSipGroup.setStatus('current')
bwAsAccntCodeServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 15)).setObjects(("BW-BroadworksApplicationServer", "bwAuthCodeNumAttempts"), ("BW-BroadworksApplicationServer", "bwAuthCodeNumValidations"), ("BW-BroadworksApplicationServer", "bwAccountCodeNumAttempts"), ("BW-BroadworksApplicationServer", "bwAccountCodesSPTable"), ("BW-BroadworksApplicationServer", "bwAccountCodesGroupTable"), ("BW-BroadworksApplicationServer", "bwAccountCodeNumPerCallAttempts"), ("BW-BroadworksApplicationServer", "bwAccountCodesSPIndex"), ("BW-BroadworksApplicationServer", "bwAccountCodesSPID"), ("BW-BroadworksApplicationServer", "bwAuthCodeSPNumAttempts"), ("BW-BroadworksApplicationServer", "bwAuthCodeSPNumValidations"), ("BW-BroadworksApplicationServer", "bwAccountCodeSPNumAttempts"), ("BW-BroadworksApplicationServer", "bwAccountCodeSPNumPerCallAttempts"), ("BW-BroadworksApplicationServer", "bwAccountCodesGroupIndex"), ("BW-BroadworksApplicationServer", "bwAccountCodesGroupID"), ("BW-BroadworksApplicationServer", "bwAuthCodeGroupNumAttempts"), ("BW-BroadworksApplicationServer", "bwAuthCodeGroupNumValidations"), ("BW-BroadworksApplicationServer", "bwAccountCodeGroupNumAttempts"), ("BW-BroadworksApplicationServer", "bwAccountCodeGroupNumPerCallAttempts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsAccntCodeServiceGroup = bwAsAccntCodeServiceGroup.setStatus('current')
bwAsAnonymousCallRejectionServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 16)).setObjects(("BW-BroadworksApplicationServer", "bwAnonymousCallsNumRejected"), ("BW-BroadworksApplicationServer", "bwAnonymousCallRejectionSPTable"), ("BW-BroadworksApplicationServer", "bwAnonymousCallRejectionGroupTable"), ("BW-BroadworksApplicationServer", "bwAnonymousCallRejectionSPIndex"), ("BW-BroadworksApplicationServer", "bwAnonymousCallRejectionSPID"), ("BW-BroadworksApplicationServer", "bwAnonymousCallsSPNumRejected"), ("BW-BroadworksApplicationServer", "bwAnonymousCallRejectionGroupIndex"), ("BW-BroadworksApplicationServer", "bwAnonymousCallRejectionGroupID"), ("BW-BroadworksApplicationServer", "bwAnonymousCallsGroupNumRejected"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsAnonymousCallRejectionServiceGroup = bwAsAnonymousCallRejectionServiceGroup.setStatus('current')
bwAsAuthenticationServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 17)).setObjects(("BW-BroadworksApplicationServer", "bwAuthenticationNumChallenges"), ("BW-BroadworksApplicationServer", "bwAuthenticationNumValidResponses"), ("BW-BroadworksApplicationServer", "bwAuthenticationSPTable"), ("BW-BroadworksApplicationServer", "bwAuthenticationGroupTable"), ("BW-BroadworksApplicationServer", "bwAuthenticationSPIndex"), ("BW-BroadworksApplicationServer", "bwAuthenticationSPID"), ("BW-BroadworksApplicationServer", "bwAuthenticationSPNumChallenges"), ("BW-BroadworksApplicationServer", "bwAuthenticationSPNumValidResponses"), ("BW-BroadworksApplicationServer", "bwAuthenticationGroupIndex"), ("BW-BroadworksApplicationServer", "bwAuthenticationGroupID"), ("BW-BroadworksApplicationServer", "bwAuthenticationGroupNumChallenges"), ("BW-BroadworksApplicationServer", "bwAuthenticationGroupNumValidResponses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsAuthenticationServiceGroup = bwAsAuthenticationServiceGroup.setStatus('current')
bwAsAutoAttendantServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 18)).setObjects(("BW-BroadworksApplicationServer", "bwAutoAttendantNumAnswers"), ("BW-BroadworksApplicationServer", "bwAutoAttendantNumTransfers"), ("BW-BroadworksApplicationServer", "bwAutoAttendantSPTable"), ("BW-BroadworksApplicationServer", "bwAutoAttendantGroupTable"), ("BW-BroadworksApplicationServer", "bwAutoAttendantSPIndex"), ("BW-BroadworksApplicationServer", "bwAutoAttendantSPID"), ("BW-BroadworksApplicationServer", "bwAutoAttendantSPNumAnswers"), ("BW-BroadworksApplicationServer", "bwAutoAttendantSPNumTransfers"), ("BW-BroadworksApplicationServer", "bwAutoAttendantGroupIndex"), ("BW-BroadworksApplicationServer", "bwAutoAttendantGroupID"), ("BW-BroadworksApplicationServer", "bwAutoAttendantGroupNumAnswers"), ("BW-BroadworksApplicationServer", "bwAutoAttendantGroupNumTransfers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsAutoAttendantServiceGroup = bwAsAutoAttendantServiceGroup.setStatus('current')
bwAsCallCapacityServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 19)).setObjects(("BW-BroadworksApplicationServer", "bwCallCapacityNumCallsAttempted"), ("BW-BroadworksApplicationServer", "bwCallCapacityNumCallsBlocked"), ("BW-BroadworksApplicationServer", "bwCallCapacitySPTable"), ("BW-BroadworksApplicationServer", "bwCallCapacityGroupTable"), ("BW-BroadworksApplicationServer", "bwCallCapacitySPIndex"), ("BW-BroadworksApplicationServer", "bwCallCapacitySPID"), ("BW-BroadworksApplicationServer", "bwCallCapacitySPNumCallsAttempted"), ("BW-BroadworksApplicationServer", "bwCallCapacitySPNumCallsBlocked"), ("BW-BroadworksApplicationServer", "bwCallCapacityGroupIndex"), ("BW-BroadworksApplicationServer", "bwCallCapacityGroupID"), ("BW-BroadworksApplicationServer", "bwCallCapacityGroupNumCallsAttempted"), ("BW-BroadworksApplicationServer", "bwCallCapacityGroupNumCallsBlocked"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCallCapacityServiceGroup = bwAsCallCapacityServiceGroup.setStatus('current')
bwAsCFAlwaysServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 20)).setObjects(("BW-BroadworksApplicationServer", "bwCFANumForwarded"), ("BW-BroadworksApplicationServer", "bwCFANumPhoneActivations"), ("BW-BroadworksApplicationServer", "bwCFANumPhoneDeactivations"), ("BW-BroadworksApplicationServer", "bwCallForwardingAlwaysSPTable"), ("BW-BroadworksApplicationServer", "bwCFADestinationChanged"), ("BW-BroadworksApplicationServer", "bwCallForwardingAlwaysGroupTable"), ("BW-BroadworksApplicationServer", "bwCallForwardingAlwaysSPIndex"), ("BW-BroadworksApplicationServer", "bwCallForwardingAlwaysSPID"), ("BW-BroadworksApplicationServer", "bwCFASPNumForwarded"), ("BW-BroadworksApplicationServer", "bwCFASPNumPhoneActivations"), ("BW-BroadworksApplicationServer", "bwCFASPNumPhoneDeactivations"), ("BW-BroadworksApplicationServer", "bwCFASPDestinationChanged"), ("BW-BroadworksApplicationServer", "bwCallForwardingAlwaysGroupIndex"), ("BW-BroadworksApplicationServer", "bwCallForwardingAlwaysGroupID"), ("BW-BroadworksApplicationServer", "bwCFAGroupNumForwarded"), ("BW-BroadworksApplicationServer", "bwCFAGroupNumPhoneActivations"), ("BW-BroadworksApplicationServer", "bwCFAGroupNumPhoneDeactivations"), ("BW-BroadworksApplicationServer", "bwCFAGroupDestinationChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCFAlwaysServiceGroup = bwAsCFAlwaysServiceGroup.setStatus('current')
bwAsCFBusyServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 21)).setObjects(("BW-BroadworksApplicationServer", "bwCFBNumForwarded"), ("BW-BroadworksApplicationServer", "bwCallForwardingBusySPTable"), ("BW-BroadworksApplicationServer", "bwCFBNumPhoneActivations"), ("BW-BroadworksApplicationServer", "bwCFBNumPhoneDeactivations"), ("BW-BroadworksApplicationServer", "bwCFBDestinationChanged"), ("BW-BroadworksApplicationServer", "bwCallForwardingBusyGroupTable"), ("BW-BroadworksApplicationServer", "bwCallForwardingBusySPIndex"), ("BW-BroadworksApplicationServer", "bwCallForwardingBusySPID"), ("BW-BroadworksApplicationServer", "bwCFBSPNumForwarded"), ("BW-BroadworksApplicationServer", "bwCFBSPNumPhoneActivations"), ("BW-BroadworksApplicationServer", "bwCFBSPNumPhoneDeactivations"), ("BW-BroadworksApplicationServer", "bwCFBSPDestinationChanged"), ("BW-BroadworksApplicationServer", "bwCallForwardingBusyGroupIndex"), ("BW-BroadworksApplicationServer", "bwCallForwardingBusyGroupID"), ("BW-BroadworksApplicationServer", "bwCFBGroupNumForwarded"), ("BW-BroadworksApplicationServer", "bwCFBGroupNumPhoneActivations"), ("BW-BroadworksApplicationServer", "bwCFBGroupNumPhoneDeactivations"), ("BW-BroadworksApplicationServer", "bwCFBGroupDestinationChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCFBusyServiceGroup = bwAsCFBusyServiceGroup.setStatus('current')
bwAsCFNoAnswerServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 22)).setObjects(("BW-BroadworksApplicationServer", "bwCFNANumForwarded"), ("BW-BroadworksApplicationServer", "bwCallForwardingNoAnswerSPTable"), ("BW-BroadworksApplicationServer", "bwCFNADestinationChanged"), ("BW-BroadworksApplicationServer", "bwCFNANumPhoneActivations"), ("BW-BroadworksApplicationServer", "bwCFNANumPhoneDeactivations"), ("BW-BroadworksApplicationServer", "bwCallForwardingNoAnswerGroupTable"), ("BW-BroadworksApplicationServer", "bwCallForwardingNoAnswerSPIndex"), ("BW-BroadworksApplicationServer", "bwCallForwardingNoAnswerSPID"), ("BW-BroadworksApplicationServer", "bwCFNASPNumForwarded"), ("BW-BroadworksApplicationServer", "bwCFNASPDestinationChanged"), ("BW-BroadworksApplicationServer", "bwCFNASPNumPhoneActivations"), ("BW-BroadworksApplicationServer", "bwCFNASPNumPhoneDeactivations"), ("BW-BroadworksApplicationServer", "bwCallForwardingNoAnswerGroupIndex"), ("BW-BroadworksApplicationServer", "bwCallForwardingNoAnswerGroupID"), ("BW-BroadworksApplicationServer", "bwCFNAGroupNumForwarded"), ("BW-BroadworksApplicationServer", "bwCFNAGroupDestinationChanged"), ("BW-BroadworksApplicationServer", "bwCFNAGroupNumPhoneActivations"), ("BW-BroadworksApplicationServer", "bwCFNAGroupNumPhoneDeactivations"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCFNoAnswerServiceGroup = bwAsCFNoAnswerServiceGroup.setStatus('current')
bwAsCallNotifyServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 23)).setObjects(("BW-BroadworksApplicationServer", "bwCallNotifyNumNotifications"), ("BW-BroadworksApplicationServer", "bwCallNotifySPTable"), ("BW-BroadworksApplicationServer", "bwCallNotifyGroupTable"), ("BW-BroadworksApplicationServer", "bwCallNotifySPIndex"), ("BW-BroadworksApplicationServer", "bwCallNotifySPID"), ("BW-BroadworksApplicationServer", "bwCallNotifySPNumNotifications"), ("BW-BroadworksApplicationServer", "bwCallNotifyGroupIndex"), ("BW-BroadworksApplicationServer", "bwCallNotifyGroupID"), ("BW-BroadworksApplicationServer", "bwCallNotifyGroupNumNotifications"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCallNotifyServiceGroup = bwAsCallNotifyServiceGroup.setStatus('current')
bwAsCallParkServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 24)).setObjects(("BW-BroadworksApplicationServer", "bwCallParkNumAttempts"), ("BW-BroadworksApplicationServer", "bwCallParkNumFailures"), ("BW-BroadworksApplicationServer", "bwCallParkNumRetrieveAttempts"), ("BW-BroadworksApplicationServer", "bwCallParkNumRetrieveFailures"), ("BW-BroadworksApplicationServer", "bwCallParkSPTable"), ("BW-BroadworksApplicationServer", "bwCallParkGroupTable"), ("BW-BroadworksApplicationServer", "bwCallParkSPIndex"), ("BW-BroadworksApplicationServer", "bwCallParkSPID"), ("BW-BroadworksApplicationServer", "bwCallParkSPNumAttempts"), ("BW-BroadworksApplicationServer", "bwCallParkSPNumFailures"), ("BW-BroadworksApplicationServer", "bwCallParkSPNumRetrieveAttempts"), ("BW-BroadworksApplicationServer", "bwCallParkSPNumRetrieveFailures"), ("BW-BroadworksApplicationServer", "bwCallParkGroupIndex"), ("BW-BroadworksApplicationServer", "bwCallParkGroupID"), ("BW-BroadworksApplicationServer", "bwCallParkGroupNumAttempts"), ("BW-BroadworksApplicationServer", "bwCallParkGroupNumFailures"), ("BW-BroadworksApplicationServer", "bwCallParkGroupNumRetrieveAttempts"), ("BW-BroadworksApplicationServer", "bwCallParkGroupNumRetrieveFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCallParkServiceGroup = bwAsCallParkServiceGroup.setStatus('current')
bwAsCallPickupServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 25)).setObjects(("BW-BroadworksApplicationServer", "bwCallPickupNumAttempts"), ("BW-BroadworksApplicationServer", "bwCallPickupNumFailures"), ("BW-BroadworksApplicationServer", "bwCallPickupSPTable"), ("BW-BroadworksApplicationServer", "bwCallPickupGroupTable"), ("BW-BroadworksApplicationServer", "bwCallPickupSPIndex"), ("BW-BroadworksApplicationServer", "bwCallPickupSPID"), ("BW-BroadworksApplicationServer", "bwCallPickupSPNumAttempts"), ("BW-BroadworksApplicationServer", "bwCallPickupSPNumFailures"), ("BW-BroadworksApplicationServer", "bwCallPickupGroupIndex"), ("BW-BroadworksApplicationServer", "bwCallPickupGroupID"), ("BW-BroadworksApplicationServer", "bwCallPickupGroupNumAttempts"), ("BW-BroadworksApplicationServer", "bwCallPickupGroupNumFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCallPickupServiceGroup = bwAsCallPickupServiceGroup.setStatus('current')
bwAsCallReturnServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 26)).setObjects(("BW-BroadworksApplicationServer", "bwCallReturnNumReturns"), ("BW-BroadworksApplicationServer", "bwCallReturnSPTable"), ("BW-BroadworksApplicationServer", "bwCallReturnGroupTable"), ("BW-BroadworksApplicationServer", "bwCallReturnSPIndex"), ("BW-BroadworksApplicationServer", "bwCallReturnSPID"), ("BW-BroadworksApplicationServer", "bwCallReturnSPNumReturns"), ("BW-BroadworksApplicationServer", "bwCallReturnGroupIndex"), ("BW-BroadworksApplicationServer", "bwCallReturnGroupID"), ("BW-BroadworksApplicationServer", "bwCallReturnGroupNumReturns"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCallReturnServiceGroup = bwAsCallReturnServiceGroup.setStatus('current')
bwAsCompilotCallMgrServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 27)).setObjects(("BW-BroadworksApplicationServer", "bwCommPilotCallMgrNumDial"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrNumAnswer"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrNumRelease"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrNumHold"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrNumTransfer"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrNumConference"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrNumTransferVM"), ("BW-BroadworksApplicationServer", "bwCommPilotCallManagerSPTable"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrNumConferenceAnswer"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrNumConferenceHold"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrNumConferenceRelease"), ("BW-BroadworksApplicationServer", "bwCommPilotCallManagerGroupTable"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrNumTransferCC"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrNumConferenceAdd"), ("BW-BroadworksApplicationServer", "bwCommPilotCallManagerSPIndex"), ("BW-BroadworksApplicationServer", "bwCommPilotCallManagerSPID"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrSPNumDial"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrSPNumAnswer"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrSPNumRelease"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrSPNumHold"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrSPNumTransfer"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrSPNumConference"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrSPNumTransferVM"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrSPNumConferenceAnswer"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrSPNumConferenceHold"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrSPNumConferenceRelease"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrSPNumTransferCC"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrSPNumConferenceAdd"), ("BW-BroadworksApplicationServer", "bwCommPilotCallManagerGroupIndex"), ("BW-BroadworksApplicationServer", "bwCommPilotCallManagerGroupID"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrGroupNumDial"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrGroupNumAnswer"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrGroupNumRelease"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrGroupNumHold"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrGroupNumTransfer"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrGroupNumConference"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrGroupNumTransferVM"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrGroupNumConferenceAnswer"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrGroupNumConferenceHold"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrGroupNumConferenceRelease"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrGroupNumTransferCC"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrGroupNumConferenceAdd"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrNumCallPark"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrNumGroupCallPark"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrNumCallParkRetrieve"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrSPNumCallPark"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrSPNumGroupCallPark"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrSPNumCallParkRetrieve"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrGroupNumCallPark"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrGroupNumGroupCallPark"), ("BW-BroadworksApplicationServer", "bwCommPilotCallMgrGroupNumCallParkRetrieve"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCompilotCallMgrServiceGroup = bwAsCompilotCallMgrServiceGroup.setStatus('current')
bwAsDoNotDisturbServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 28)).setObjects(("BW-BroadworksApplicationServer", "bwDoNotDisturbNumInvoked"), ("BW-BroadworksApplicationServer", "bwDoNotDisturbSPTable"), ("BW-BroadworksApplicationServer", "bwDndPhoneActivations"), ("BW-BroadworksApplicationServer", "bwDndPhoneDeactivations"), ("BW-BroadworksApplicationServer", "bwDoNotDisturbGroupTable"), ("BW-BroadworksApplicationServer", "bwDoNotDisturbSPIndex"), ("BW-BroadworksApplicationServer", "bwDoNotDisturbSPID"), ("BW-BroadworksApplicationServer", "bwDoNotDisturbSPNumInvoked"), ("BW-BroadworksApplicationServer", "bwDNDSPNumPhoneActivations"), ("BW-BroadworksApplicationServer", "bwDNDSPNumPhoneDeactivations"), ("BW-BroadworksApplicationServer", "bwDoNotDisturbGroupIndex"), ("BW-BroadworksApplicationServer", "bwDoNotDisturbGroupID"), ("BW-BroadworksApplicationServer", "bwDoNotDisturbGroupNumInvoked"), ("BW-BroadworksApplicationServer", "bwDNDGroupNumPhoneActivations"), ("BW-BroadworksApplicationServer", "bwDNDGroupNumPhoneDeactivations"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsDoNotDisturbServiceGroup = bwAsDoNotDisturbServiceGroup.setStatus('current')
bwAsFlashCallXferServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 29)).setObjects(("BW-BroadworksApplicationServer", "bwFlashCallTransferNumTransfers"), ("BW-BroadworksApplicationServer", "bwFlashCallTransferSPTable"), ("BW-BroadworksApplicationServer", "bwFlashCallTransferGroupTable"), ("BW-BroadworksApplicationServer", "bwFlashCallTransferSPIndex"), ("BW-BroadworksApplicationServer", "bwFlashCallTransferSPID"), ("BW-BroadworksApplicationServer", "bwFlashCallTransferSPNumTransfers"), ("BW-BroadworksApplicationServer", "bwFlashCallTransferGroupIndex"), ("BW-BroadworksApplicationServer", "bwFlashCallTransferGroupID"), ("BW-BroadworksApplicationServer", "bwFlashCallTransferGroupNumTransfers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsFlashCallXferServiceGroup = bwAsFlashCallXferServiceGroup.setStatus('current')
bwAsFlashCallWaitingServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 30)).setObjects(("BW-BroadworksApplicationServer", "bwFlashCallWaitingNumAnswers"), ("BW-BroadworksApplicationServer", "bwFlashCallWaitingSPTable"), ("BW-BroadworksApplicationServer", "bwFlashCallWaitingGroupTable"), ("BW-BroadworksApplicationServer", "bwFlashCallWaitingSPIndex"), ("BW-BroadworksApplicationServer", "bwFlashCallWaitingSPID"), ("BW-BroadworksApplicationServer", "bwFlashCallWaitingSPNumAnswers"), ("BW-BroadworksApplicationServer", "bwFlashCallWaitingGroupIndex"), ("BW-BroadworksApplicationServer", "bwFlashCallWaitingGroupID"), ("BW-BroadworksApplicationServer", "bwFlashCallWaitingGroupNumAnswers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsFlashCallWaitingServiceGroup = bwAsFlashCallWaitingServiceGroup.setStatus('current')
bwAsFlashConsultationServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 31)).setObjects(("BW-BroadworksApplicationServer", "bwFlashConsultationNumCalls"), ("BW-BroadworksApplicationServer", "bwFlashConsultationSPTable"), ("BW-BroadworksApplicationServer", "bwFlashConsultationGroupTable"), ("BW-BroadworksApplicationServer", "bwFlashConsultationSPIndex"), ("BW-BroadworksApplicationServer", "bwFlashConsultationSPID"), ("BW-BroadworksApplicationServer", "bwFlashConsultationSPNumCalls"), ("BW-BroadworksApplicationServer", "bwFlashConsultationGroupIndex"), ("BW-BroadworksApplicationServer", "bwFlashConsultationGroupID"), ("BW-BroadworksApplicationServer", "bwFlashConsultationGroupNumCalls"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsFlashConsultationServiceGroup = bwAsFlashConsultationServiceGroup.setStatus('current')
bwAsFlash3wcServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 32)).setObjects(("BW-BroadworksApplicationServer", "bwFlashThreeWayCallNum3WC"), ("BW-BroadworksApplicationServer", "bwFlashThreeWayCallSPTable"), ("BW-BroadworksApplicationServer", "bwFlashThreeWayCallGroupTable"), ("BW-BroadworksApplicationServer", "bwFlashThreeWayCallSPIndex"), ("BW-BroadworksApplicationServer", "bwFlashThreeWayCallSPID"), ("BW-BroadworksApplicationServer", "bwFlashThreeWayCallSPNum3WC"), ("BW-BroadworksApplicationServer", "bwFlashThreeWayCallGroupIndex"), ("BW-BroadworksApplicationServer", "bwFlashThreeWayCallGroupID"), ("BW-BroadworksApplicationServer", "bwFlashThreeWayCallGroupNum3WC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsFlash3wcServiceGroup = bwAsFlash3wcServiceGroup.setStatus('current')
bwAsHuntGroupServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 33)).setObjects(("BW-BroadworksApplicationServer", "bwHuntGroupNumAttempts"), ("BW-BroadworksApplicationServer", "bwHuntGroupNumBusy"), ("BW-BroadworksApplicationServer", "bwHuntGroupsDNHIncomingCalls"), ("BW-BroadworksApplicationServer", "bwHuntGroupsSPTable"), ("BW-BroadworksApplicationServer", "bwHuntGroupsGroupTable"), ("BW-BroadworksApplicationServer", "bwHuntGroupsSPIndex"), ("BW-BroadworksApplicationServer", "bwHuntGroupsSPID"), ("BW-BroadworksApplicationServer", "bwHuntGroupSPNumAttempts"), ("BW-BroadworksApplicationServer", "bwHuntGroupSPNumBusy"), ("BW-BroadworksApplicationServer", "bwHuntGroupsSPDNHIncomingCalls"), ("BW-BroadworksApplicationServer", "bwHuntGroupsGroupIndex"), ("BW-BroadworksApplicationServer", "bwHuntGroupsGroupID"), ("BW-BroadworksApplicationServer", "bwHuntGroupsGroupNumAttempts"), ("BW-BroadworksApplicationServer", "bwHuntGroupsGroupNumBusy"), ("BW-BroadworksApplicationServer", "bwHuntGroupsGroupDNHIncomingCalls"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsHuntGroupServiceGroup = bwAsHuntGroupServiceGroup.setStatus('current')
bwAsIcpServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 34)).setObjects(("BW-BroadworksApplicationServer", "bwICPNumInterGroupBlocks"), ("BW-BroadworksApplicationServer", "bwIncomingCallingPlanSPTable"), ("BW-BroadworksApplicationServer", "bwIncomingCallingPlanGroupTable"), ("BW-BroadworksApplicationServer", "bwICPNumCollectCallBlocks"), ("BW-BroadworksApplicationServer", "bwICPNumIntraGroupBlocks"), ("BW-BroadworksApplicationServer", "bwICPNumOutsideCallerBlocks"), ("BW-BroadworksApplicationServer", "bwIncomingCallingPlanSPIndex"), ("BW-BroadworksApplicationServer", "bwIncomingCallingPlanSPID"), ("BW-BroadworksApplicationServer", "bwICPSPNumInterGroupBlocks"), ("BW-BroadworksApplicationServer", "bwICPSPNumCollectCallBlocks"), ("BW-BroadworksApplicationServer", "bwICPSPNumIntraGroupBlocks"), ("BW-BroadworksApplicationServer", "bwICPSPNumOutsideCallerBlocks"), ("BW-BroadworksApplicationServer", "bwIncomingCallingPlanGroupIndex"), ("BW-BroadworksApplicationServer", "bwIncomingCallingPlanGroupID"), ("BW-BroadworksApplicationServer", "bwICPGroupNumInterGroupBlocks"), ("BW-BroadworksApplicationServer", "bwICPGroupNumCollectCallBlocks"), ("BW-BroadworksApplicationServer", "bwICPGroupNumIntraGroupBlocks"), ("BW-BroadworksApplicationServer", "bwICPGroupNumOutsideCallerBlocks"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsIcpServiceGroup = bwAsIcpServiceGroup.setStatus('current')
bwAsIpPhoneServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 35)).setObjects(("BW-BroadworksApplicationServer", "bwIPPhoneNumForwards"), ("BW-BroadworksApplicationServer", "bwIPPhoneSPTable"), ("BW-BroadworksApplicationServer", "bwIPPhoneGroupTable"), ("BW-BroadworksApplicationServer", "bwIPPhoneSPIndex"), ("BW-BroadworksApplicationServer", "bwIPPhoneSPID"), ("BW-BroadworksApplicationServer", "bwIPPhoneSPNumForwards"), ("BW-BroadworksApplicationServer", "bwIPPhoneGroupIndex"), ("BW-BroadworksApplicationServer", "bwIPPhoneGroupID"), ("BW-BroadworksApplicationServer", "bwIPPhoneGroupNumForwards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsIpPhoneServiceGroup = bwAsIpPhoneServiceGroup.setStatus('current')
bwAsLastNumberRedialServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 36)).setObjects(("BW-BroadworksApplicationServer", "bwLNRNumRedials"), ("BW-BroadworksApplicationServer", "bwLastNumberRedialSPTable"), ("BW-BroadworksApplicationServer", "bwLastNumberRedialGroupTable"), ("BW-BroadworksApplicationServer", "bwLastNumberRedialSPIndex"), ("BW-BroadworksApplicationServer", "bwLastNumberRedialSPID"), ("BW-BroadworksApplicationServer", "bwLNRSPNumRedials"), ("BW-BroadworksApplicationServer", "bwLastNumberRedialGroupIndex"), ("BW-BroadworksApplicationServer", "bwLastNumberRedialGroupID"), ("BW-BroadworksApplicationServer", "bwLNRGroupNumRedials"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsLastNumberRedialServiceGroup = bwAsLastNumberRedialServiceGroup.setStatus('current')
bwAsOcpServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 37)).setObjects(("BW-BroadworksApplicationServer", "bwOCPNumGroupCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPNumLocalCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPNumTollFreeCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPNumTollCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPNumIntlCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPNumOperatorAssistedCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPNumChargeableDirAssistCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPNumSpecialServices1CallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPNumSpecialServices2CallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPNumPremiumServices1CallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPNumPremiumServices2CallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPNumCasualCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPNumURLDialingCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPNumUnknownCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOutgoingCallingPlanSPTable"), ("BW-BroadworksApplicationServer", "bwOutgoingCallingPlanGroupTable"), ("BW-BroadworksApplicationServer", "bwOCPNumSuccessfulAuthorizations"), ("BW-BroadworksApplicationServer", "bwOCPNumUnsuccessfulAuthorizations"), ("BW-BroadworksApplicationServer", "bwOCPNumTransfers"), ("BW-BroadworksApplicationServer", "bwOCPSACNumSuccessfulLock"), ("BW-BroadworksApplicationServer", "bwOCPSACNumSuccessfulUnlock"), ("BW-BroadworksApplicationServer", "bwOCPSACNumUnsuccessfulLock"), ("BW-BroadworksApplicationServer", "bwOCPSACNumUnsuccessfulUnlock"), ("BW-BroadworksApplicationServer", "bwOCPSACNumUnsuccessfulCodeUsage"), ("BW-BroadworksApplicationServer", "bwOCPNumOutsideGroupTransferBlocks"), ("BW-BroadworksApplicationServer", "bwOutgoingCallingPlanSPIndex"), ("BW-BroadworksApplicationServer", "bwOutgoingCallingPlanSPID"), ("BW-BroadworksApplicationServer", "bwOCPSPNumGroupCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPSPNumLocalCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPSPNumTollFreeCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPSPNumTollCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPSPNumIntlCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPSPNumOperatorAssistedCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPSPNumChargeableDirAssistCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPSPNumSpecialServices1CallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPSPNumSpecialServices2CallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPSPNumPremiumServices1CallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPSPNumPremiumServices2CallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPSPNumCasualCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPSPNumURLDialingCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPSPNumUnknownCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPSPNumSuccessfulAuthorizations"), ("BW-BroadworksApplicationServer", "bwOCPSPNumUnsuccessfulAuthorizations"), ("BW-BroadworksApplicationServer", "bwOCPSPNumTransfers"), ("BW-BroadworksApplicationServer", "bwOCPSACSPNumSuccessfulLock"), ("BW-BroadworksApplicationServer", "bwOCPSACSPNumSuccessfulUnlock"), ("BW-BroadworksApplicationServer", "bwOCPSACSPNumUnsuccessfulLock"), ("BW-BroadworksApplicationServer", "bwOCPSACSPNumUnsuccessfulUnlock"), ("BW-BroadworksApplicationServer", "bwOCPSACSPNumUnsuccessfulCodeUsage"), ("BW-BroadworksApplicationServer", "bwOCPSPNumOutsideGroupTransferBlocks"), ("BW-BroadworksApplicationServer", "bwOutgoingCallingPlanGroupIndex"), ("BW-BroadworksApplicationServer", "bwOutgoingCallingPlanGroupID"), ("BW-BroadworksApplicationServer", "bwOCPGroupNumGroupCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPGroupNumLocalCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPGroupNumTollFreeCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPGroupNumTollCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPGroupNumIntlCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPGroupNumOperatorAssistedCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPGroupNumChargeableDirAssistCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPGroupNumSpecialServices1CallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPGroupNumSpecialServices2CallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPGroupNumPremiumServices1CallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPGroupNumPremiumServices2CallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPGroupNumCasualCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPGroupNumURLDialingCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPGroupNumUnknownCallsBlocked"), ("BW-BroadworksApplicationServer", "bwOCPGroupNumSuccessfulAuthorizations"), ("BW-BroadworksApplicationServer", "bwOCPGroupNumUnsuccessfulAuthorizations"), ("BW-BroadworksApplicationServer", "bwOCPGroupNumTransfers"), ("BW-BroadworksApplicationServer", "bwOCPSACGroupNumSuccessfulLock"), ("BW-BroadworksApplicationServer", "bwOCPSACGroupNumSuccessfulUnlock"), ("BW-BroadworksApplicationServer", "bwOCPSACGroupNumUnsuccessfulLock"), ("BW-BroadworksApplicationServer", "bwOCPSACGroupNumUnsuccessfulUnlock"), ("BW-BroadworksApplicationServer", "bwOCPSACGroupNumUnsuccessfulCodeUsage"), ("BW-BroadworksApplicationServer", "bwOCPGroupNumOutsideGroupTransferBlocks"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsOcpServiceGroup = bwAsOcpServiceGroup.setStatus('current')
bwAsPriorityAlertServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 38)).setObjects(("BW-BroadworksApplicationServer", "bwPriorityAlertNumDistinctive"), ("BW-BroadworksApplicationServer", "bwPriorityAlertSPTable"), ("BW-BroadworksApplicationServer", "bwPriorityAlertGroupTable"), ("BW-BroadworksApplicationServer", "bwPriorityAlertSPIndex"), ("BW-BroadworksApplicationServer", "bwPriorityAlertSPID"), ("BW-BroadworksApplicationServer", "bwPriorityAlertSPNumDistinctive"), ("BW-BroadworksApplicationServer", "bwPriorityAlertGroupIndex"), ("BW-BroadworksApplicationServer", "bwPriorityAlertGroupID"), ("BW-BroadworksApplicationServer", "bwPriorityAlertGroupNumDistinctive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsPriorityAlertServiceGroup = bwAsPriorityAlertServiceGroup.setStatus('current')
bwAsSelectiveCallAcceptanceServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 39)).setObjects(("BW-BroadworksApplicationServer", "bwSCANumAcceptances"), ("BW-BroadworksApplicationServer", "bwSelectiveCallAcceptanceSPTable"), ("BW-BroadworksApplicationServer", "bwSelectiveCallAcceptanceGroupTable"), ("BW-BroadworksApplicationServer", "bwSelectiveCallAcceptanceSPIndex"), ("BW-BroadworksApplicationServer", "bwSelectiveCallAcceptanceSPID"), ("BW-BroadworksApplicationServer", "bwSCASPNumAcceptances"), ("BW-BroadworksApplicationServer", "bwSelectiveCallAcceptanceGroupIndex"), ("BW-BroadworksApplicationServer", "bwSelectiveCallAcceptanceGroupID"), ("BW-BroadworksApplicationServer", "bwSCAGroupNumAcceptances"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsSelectiveCallAcceptanceServiceGroup = bwAsSelectiveCallAcceptanceServiceGroup.setStatus('current')
bwAsSelectiveCallForwardServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 40)).setObjects(("BW-BroadworksApplicationServer", "bwSCFNumForwards"), ("BW-BroadworksApplicationServer", "bwSelectiveCallForwardSPTable"), ("BW-BroadworksApplicationServer", "bwSelectiveCallForwardGroupTable"), ("BW-BroadworksApplicationServer", "bwSelectiveCallForwardSPIndex"), ("BW-BroadworksApplicationServer", "bwSelectiveCallForwardSPID"), ("BW-BroadworksApplicationServer", "bwSCFSPNumForwards"), ("BW-BroadworksApplicationServer", "bwSelectiveCallForwardGroupIndex"), ("BW-BroadworksApplicationServer", "bwSelectiveCallForwardGroupID"), ("BW-BroadworksApplicationServer", "bwSCFGroupNumForwards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsSelectiveCallForwardServiceGroup = bwAsSelectiveCallForwardServiceGroup.setStatus('current')
bwAsSelectiveCallRejectionServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 41)).setObjects(("BW-BroadworksApplicationServer", "bwSCRNumRejects"), ("BW-BroadworksApplicationServer", "bwSelectiveCallRejectionSPTable"), ("BW-BroadworksApplicationServer", "bwSelectiveCallRejectionGroupTable"), ("BW-BroadworksApplicationServer", "bwSelectiveCallRejectionSPIndex"), ("BW-BroadworksApplicationServer", "bwSelectiveCallRejectionSPID"), ("BW-BroadworksApplicationServer", "bwSCRSPNumRejects"), ("BW-BroadworksApplicationServer", "bwSelectiveCallRejectionGroupIndex"), ("BW-BroadworksApplicationServer", "bwSelectiveCallRejectionGroupID"), ("BW-BroadworksApplicationServer", "bwSCRGroupNumRejects"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsSelectiveCallRejectionServiceGroup = bwAsSelectiveCallRejectionServiceGroup.setStatus('current')
bwAsSimRingServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 42)).setObjects(("BW-BroadworksApplicationServer", "bwSimRingPersonalNumAttempts"), ("BW-BroadworksApplicationServer", "bwSimRingPersonalNumBusy"), ("BW-BroadworksApplicationServer", "bwSimRingPersonalSPTable"), ("BW-BroadworksApplicationServer", "bwSimRingPersonalGroupTable"), ("BW-BroadworksApplicationServer", "bwSimRingPersonalSPIndex"), ("BW-BroadworksApplicationServer", "bwSimRingPersonalSPID"), ("BW-BroadworksApplicationServer", "bwSimRingPersonalSPNumAttempts"), ("BW-BroadworksApplicationServer", "bwSimRingPersonalSPNumBusy"), ("BW-BroadworksApplicationServer", "bwSimRingPersonalGroupIndex"), ("BW-BroadworksApplicationServer", "bwSimRingPersonalGroupID"), ("BW-BroadworksApplicationServer", "bwSimRingPersonalGroupNumAttempts"), ("BW-BroadworksApplicationServer", "bwSimRingPersonalGroupNumBusy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsSimRingServiceGroup = bwAsSimRingServiceGroup.setStatus('current')
bwAsVoiceMessagingServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 43)).setObjects(("BW-BroadworksApplicationServer", "bwVMNumBusyGreetingsPlayed"), ("BW-BroadworksApplicationServer", "bwVMNumNoAnswerGreetingsPlayed"), ("BW-BroadworksApplicationServer", "bwVMNumMessagesLeft"), ("BW-BroadworksApplicationServer", "bwVMRNumBusyGreetingsRecorded"), ("BW-BroadworksApplicationServer", "bwVMRNumNoAnswerGreetingsRecorded"), ("BW-BroadworksApplicationServer", "bwVMRNumPersonalizedNamesRecorded"), ("BW-BroadworksApplicationServer", "bwVMRNumLoginAttempts"), ("BW-BroadworksApplicationServer", "bwVMRNumLoginFailures"), ("BW-BroadworksApplicationServer", "bwVMRNumComposeSendAttempts"), ("BW-BroadworksApplicationServer", "bwVMRNumComposeSendGroupAttempts"), ("BW-BroadworksApplicationServer", "bwVMRNumForwardSendAttempts"), ("BW-BroadworksApplicationServer", "bwVMRNumForwardSendGroupAttempts"), ("BW-BroadworksApplicationServer", "bwVMRNumReplySendAttempts"), ("BW-BroadworksApplicationServer", "bwVMRNumSendFailed"), ("BW-BroadworksApplicationServer", "bwVMRNumSendGroupFailed"), ("BW-BroadworksApplicationServer", "bwVMRDeleteAllMsgsAttempts"), ("BW-BroadworksApplicationServer", "bwVMRCallBackAttempts"), ("BW-BroadworksApplicationServer", "bwVMRCallBackFailures"), ("BW-BroadworksApplicationServer", "bwVPNumAABusHoursGreetingRecorded"), ("BW-BroadworksApplicationServer", "bwVPNumAAAfterHoursGreetingRecorded"), ("BW-BroadworksApplicationServer", "bwVPNumCFADestinationChanged"), ("BW-BroadworksApplicationServer", "bwVPNumPasscodeChanged"), ("BW-BroadworksApplicationServer", "bwVoiceMessagingSPTable"), ("BW-BroadworksApplicationServer", "bwVMRNumComposeSendListAttempts"), ("BW-BroadworksApplicationServer", "bwVMRNumForwardSendListAttempts"), ("BW-BroadworksApplicationServer", "bwVMRNumSendListFailed"), ("BW-BroadworksApplicationServer", "bwVPGreetingRecorded"), ("BW-BroadworksApplicationServer", "bwVMGreetingRecorded"), ("BW-BroadworksApplicationServer", "bwVoiceMessagingGroupTable"), ("BW-BroadworksApplicationServer", "bwVPCCall"), ("BW-BroadworksApplicationServer", "bwMultiMediaMsgDeposit"), ("BW-BroadworksApplicationServer", "bwVMMultiMediaGreetingRecorded"), ("BW-BroadworksApplicationServer", "bwAutoAttendantMultiMediaPromptRecorded"), ("BW-BroadworksApplicationServer", "bwVoiceMessagingSPIndex"), ("BW-BroadworksApplicationServer", "bwVoiceMessagingSPID"), ("BW-BroadworksApplicationServer", "bwVMSPNumBusyGreetingsPlayed"), ("BW-BroadworksApplicationServer", "bwVMSPNumNoAnswerGreetingsPlayed"), ("BW-BroadworksApplicationServer", "bwVMSPNumMessagesLeft"), ("BW-BroadworksApplicationServer", "bwVMRSPNumBusyGreetingsRecorded"), ("BW-BroadworksApplicationServer", "bwVMRSPNumNoAnswerGreetingsRecorded"), ("BW-BroadworksApplicationServer", "bwVMRSPNumPersonalizedNamesRecorded"), ("BW-BroadworksApplicationServer", "bwVMRSPNumLoginAttempts"), ("BW-BroadworksApplicationServer", "bwVMRSPNumLoginFailures"), ("BW-BroadworksApplicationServer", "bwVMRSPNumComposeSendAttempts"), ("BW-BroadworksApplicationServer", "bwVMRSPNumComposeSendGroupAttempts"), ("BW-BroadworksApplicationServer", "bwVMRSPNumForwardSendAttempts"), ("BW-BroadworksApplicationServer", "bwVMRSPNumForwardSendGroupAttempts"), ("BW-BroadworksApplicationServer", "bwVMRSPNumReplySendAttempts"), ("BW-BroadworksApplicationServer", "bwVMRSPNumSendFailed"), ("BW-BroadworksApplicationServer", "bwVMRSPNumSendGroupFailed"), ("BW-BroadworksApplicationServer", "bwVMRSPDeleteAllMsgsAttempts"), ("BW-BroadworksApplicationServer", "bwVMRSPCallBackAttempts"), ("BW-BroadworksApplicationServer", "bwVPSPNumAABusHoursGreetingRecorded"), ("BW-BroadworksApplicationServer", "bwVPSPNumAAAfterHoursGreetingRecorded"), ("BW-BroadworksApplicationServer", "bwVPSPNumCFADestinationChanged"), ("BW-BroadworksApplicationServer", "bwVPSPNumPasscodeChanged"), ("BW-BroadworksApplicationServer", "bwVMRSPNumComposeSendListAttempts"), ("BW-BroadworksApplicationServer", "bwVMRSPNumForwardSendListAttempts"), ("BW-BroadworksApplicationServer", "bwVMRSPNumSendListFailed"), ("BW-BroadworksApplicationServer", "bwVPSPGreetingRecorded"), ("BW-BroadworksApplicationServer", "bwVMSPGreetingRecorded"), ("BW-BroadworksApplicationServer", "bwVPCSPCall"), ("BW-BroadworksApplicationServer", "bwSPMultiMediaMsgDeposit"), ("BW-BroadworksApplicationServer", "bwVMSPMultiMediaGreetingRecorded"), ("BW-BroadworksApplicationServer", "bwAutoAttendantSPMultiMediaPromptRecorded"), ("BW-BroadworksApplicationServer", "bwVoiceMessagingGroupIndex"), ("BW-BroadworksApplicationServer", "bwVoiceMessagingGroupID"), ("BW-BroadworksApplicationServer", "bwVMGroupNumBusyGreetingsPlayed"), ("BW-BroadworksApplicationServer", "bwVMGroupNumNoAnswerGreetingsPlayed"), ("BW-BroadworksApplicationServer", "bwVMGroupNumMessagesLeft"), ("BW-BroadworksApplicationServer", "bwVMRGroupNumBusyGreetingsRecorded"), ("BW-BroadworksApplicationServer", "bwVMRGroupNumNoAnswerGreetingsRecorded"), ("BW-BroadworksApplicationServer", "bwVMRGroupNumPersonalizedNamesRecorded"), ("BW-BroadworksApplicationServer", "bwVMRGroupNumLoginAttempts"), ("BW-BroadworksApplicationServer", "bwVMRGroupNumLoginFailures"), ("BW-BroadworksApplicationServer", "bwVMRGroupNumComposeSendAttempts"), ("BW-BroadworksApplicationServer", "bwVMRGroupNumComposeSendGroupAttempts"), ("BW-BroadworksApplicationServer", "bwVMRGroupNumForwardSendAttempts"), ("BW-BroadworksApplicationServer", "bwVMRGroupNumForwardSendGroupAttempts"), ("BW-BroadworksApplicationServer", "bwVMRGroupNumReplySendAttempts"), ("BW-BroadworksApplicationServer", "bwVMRGroupNumSendFailed"), ("BW-BroadworksApplicationServer", "bwVMRGroupNumSendGroupFailed"), ("BW-BroadworksApplicationServer", "bwVMRGroupDeleteAllMsgsAttempts"), ("BW-BroadworksApplicationServer", "bwVMRGroupCallBackAttempts"), ("BW-BroadworksApplicationServer", "bwVMRGroupCallBackFailures"), ("BW-BroadworksApplicationServer", "bwVPGroupNumAABusHoursGreetingRecorded"), ("BW-BroadworksApplicationServer", "bwVPGroupNumAAAfterHoursGreetingRecorded"), ("BW-BroadworksApplicationServer", "bwVPGroupNumCFADestinationChanged"), ("BW-BroadworksApplicationServer", "bwVPGroupNumPasscodeChanged"), ("BW-BroadworksApplicationServer", "bwVMRGroupNumComposeSendListAttempts"), ("BW-BroadworksApplicationServer", "bwVMRGroupNumForwardSendListAttempts"), ("BW-BroadworksApplicationServer", "bwVMRGroupNumSendListFailed"), ("BW-BroadworksApplicationServer", "bwVPGroupGreetingRecorded"), ("BW-BroadworksApplicationServer", "bwVMGroupGreetingRecorded"), ("BW-BroadworksApplicationServer", "bwVPCGroupCall"), ("BW-BroadworksApplicationServer", "bwGroupMultiMediaMsgDeposit"), ("BW-BroadworksApplicationServer", "bwVMGroupMultiMediaGreetingRecorded"), ("BW-BroadworksApplicationServer", "bwAutoAttendantGroupMultiMediaPromptRecorded"), ("BW-BroadworksApplicationServer", "bwMessagingQuery"), ("BW-BroadworksApplicationServer", "bwMessagingQueryNoUser"), ("BW-BroadworksApplicationServer", "bwMessagingQueryNoMailbox"), ("BW-BroadworksApplicationServer", "bwMessagingSPQuery"), ("BW-BroadworksApplicationServer", "bwMessagingSPQueryNoUser"), ("BW-BroadworksApplicationServer", "bwMessagingSPQueryNoMailbox"), ("BW-BroadworksApplicationServer", "bwMessagingGroupQuery"), ("BW-BroadworksApplicationServer", "bwMessagingGroupQueryNoUser"), ("BW-BroadworksApplicationServer", "bwMessagingGroupQueryNoMailbox"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsVoiceMessagingServiceGroup = bwAsVoiceMessagingServiceGroup.setStatus('current')
bwAsSeriesCompletionServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 44)).setObjects(("BW-BroadworksApplicationServer", "bwSeriesCompletionNumAttempts"), ("BW-BroadworksApplicationServer", "bwSeriesCompletionNumBusy"), ("BW-BroadworksApplicationServer", "bwSeriesCompletionSPTable"), ("BW-BroadworksApplicationServer", "bwSeriesCompletionGroupTable"), ("BW-BroadworksApplicationServer", "bwSeriesCompletionSPIndex"), ("BW-BroadworksApplicationServer", "bwSeriesCompletionSPID"), ("BW-BroadworksApplicationServer", "bwSeriesCompletionSPNumAttempts"), ("BW-BroadworksApplicationServer", "bwSeriesCompletionSPNumBusy"), ("BW-BroadworksApplicationServer", "bwSeriesCompletionGroupIndex"), ("BW-BroadworksApplicationServer", "bwSeriesCompletionGroupID"), ("BW-BroadworksApplicationServer", "bwSeriesCompletionGroupNumAttempts"), ("BW-BroadworksApplicationServer", "bwSeriesCompletionGroupNumBusy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsSeriesCompletionServiceGroup = bwAsSeriesCompletionServiceGroup.setStatus('current')
bwAsInterceptServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 45)).setObjects(("BW-BroadworksApplicationServer", "bwInterceptUserOriginationInvocations"), ("BW-BroadworksApplicationServer", "bwInterceptGroupOriginationInvocations"), ("BW-BroadworksApplicationServer", "bwInterceptUserTerminationInvocations"), ("BW-BroadworksApplicationServer", "bwInterceptGroupTerminationInvocations"), ("BW-BroadworksApplicationServer", "bwInterceptTransfers"), ("BW-BroadworksApplicationServer", "bwInterceptSPTable"), ("BW-BroadworksApplicationServer", "bwInterceptGroupTable"), ("BW-BroadworksApplicationServer", "bwInterceptSPIndex"), ("BW-BroadworksApplicationServer", "bwInterceptSPID"), ("BW-BroadworksApplicationServer", "bwInterceptSPUserOriginationInvocations"), ("BW-BroadworksApplicationServer", "bwInterceptSPGroupOriginationInvocations"), ("BW-BroadworksApplicationServer", "bwInterceptSPUserTerminationInvocations"), ("BW-BroadworksApplicationServer", "bwInterceptSPGroupTerminationInvocations"), ("BW-BroadworksApplicationServer", "bwInterceptSPTransfers"), ("BW-BroadworksApplicationServer", "bwInterceptGroupIndex"), ("BW-BroadworksApplicationServer", "bwInterceptGroupID"), ("BW-BroadworksApplicationServer", "bwInterceptGroupUserOriginationInvocations"), ("BW-BroadworksApplicationServer", "bwInterceptGroupGroupOriginationInvocations"), ("BW-BroadworksApplicationServer", "bwInterceptGroupUserTerminationInvocations"), ("BW-BroadworksApplicationServer", "bwInterceptGroupGroupTerminationInvocations"), ("BW-BroadworksApplicationServer", "bwInterceptGroupTransfers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsInterceptServiceGroup = bwAsInterceptServiceGroup.setStatus('current')
bwAsInstantConferencingServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 46)).setObjects(("BW-BroadworksApplicationServer", "bwICGroupPortLimitExceeded"), ("BW-BroadworksApplicationServer", "bwICNumAttempts"), ("BW-BroadworksApplicationServer", "bwInstantConferencingSPTable"), ("BW-BroadworksApplicationServer", "bwInstantConferencingGroupTable"), ("BW-BroadworksApplicationServer", "bwInstantConferencingBridgeTable"), ("BW-BroadworksApplicationServer", "bwICOutdialNumAttempts"), ("BW-BroadworksApplicationServer", "bwInstantConferencingSPIndex"), ("BW-BroadworksApplicationServer", "bwInstantConferencingSPID"), ("BW-BroadworksApplicationServer", "bwICSPGroupPortLimitExceeded"), ("BW-BroadworksApplicationServer", "bwICSPNumAttempts"), ("BW-BroadworksApplicationServer", "bwICSPOutdialNumAttempts"), ("BW-BroadworksApplicationServer", "bwInstantConferencingGroupIndex"), ("BW-BroadworksApplicationServer", "bwInstantConferencingGroupID"), ("BW-BroadworksApplicationServer", "bwICGroupGroupPortLimitExceeded"), ("BW-BroadworksApplicationServer", "bwICGroupNumAttempts"), ("BW-BroadworksApplicationServer", "bwICGroupOutdialNumAttempts"), ("BW-BroadworksApplicationServer", "bwInstantConferencingBridgeIndex"), ("BW-BroadworksApplicationServer", "bwInstantConferencingBridgeName"), ("BW-BroadworksApplicationServer", "bwInstantConferencingBridgeGroupName"), ("BW-BroadworksApplicationServer", "bwInstantConferencingCurrentUsage"), ("BW-BroadworksApplicationServer", "bwInstantConferencingTodaysPeakUsage"), ("BW-BroadworksApplicationServer", "bwInstantConferencingYesterdaysPeakUsage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsInstantConferencingServiceGroup = bwAsInstantConferencingServiceGroup.setStatus('current')
bwAsCallingLineIdBlockingServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 47)).setObjects(("BW-BroadworksApplicationServer", "bwCallingLineIDDeliveryBlockPerCallBlocks"), ("BW-BroadworksApplicationServer", "bwCallingLineIDDeliveryBlockSPTable"), ("BW-BroadworksApplicationServer", "bwCallingLineIDDeliveryBlockGroupTable"), ("BW-BroadworksApplicationServer", "bwCallingLineIDDeliveryPerCall"), ("BW-BroadworksApplicationServer", "bwCallingLineIDDeliveryBlockSPIndex"), ("BW-BroadworksApplicationServer", "bwCallingLineIDDeliveryBlockSPID"), ("BW-BroadworksApplicationServer", "bwCallingLineIDDeliveryBlockSPPerCallBlocks"), ("BW-BroadworksApplicationServer", "bwCallingLineIDDeliveryPerCallSP"), ("BW-BroadworksApplicationServer", "bwCallingLineIDDeliveryBlockGroupIndex"), ("BW-BroadworksApplicationServer", "bwCallingLineIDDeliveryBlockGroupID"), ("BW-BroadworksApplicationServer", "bwCallingLineIDDeliveryBlockGroupPerCallBlocks"), ("BW-BroadworksApplicationServer", "bwCallingLineIDDeliveryPerCallGroup"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCallingLineIdBlockingServiceGroup = bwAsCallingLineIdBlockingServiceGroup.setStatus('current')
bwAsSessionAuditServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 48)).setObjects(("BW-BroadworksApplicationServer", "bwSessionAuditNumCallsAudited"), ("BW-BroadworksApplicationServer", "bwSessionAuditNumEndpointsAudited"), ("BW-BroadworksApplicationServer", "bwSessionAuditNumCallsFailedAudit"), ("BW-BroadworksApplicationServer", "bwSessionAuditNumEndpointsFailedAudit"), ("BW-BroadworksApplicationServer", "bwSessionAuditSPTable"), ("BW-BroadworksApplicationServer", "bwSessionAuditGroupTable"), ("BW-BroadworksApplicationServer", "bwSessionAuditSPIndex"), ("BW-BroadworksApplicationServer", "bwSessionAuditSPID"), ("BW-BroadworksApplicationServer", "bwSessionAuditSPNumCallsAudited"), ("BW-BroadworksApplicationServer", "bwSessionAuditSPNumEndpointsAudited"), ("BW-BroadworksApplicationServer", "bwSessionAuditSPNumCallsFailedAudit"), ("BW-BroadworksApplicationServer", "bwSessionAuditSPNumEndpointsFailedAudit"), ("BW-BroadworksApplicationServer", "bwSessionAuditGroupIndex"), ("BW-BroadworksApplicationServer", "bwSessionAuditGroupID"), ("BW-BroadworksApplicationServer", "bwSessionAuditGroupNumCallsAudited"), ("BW-BroadworksApplicationServer", "bwSessionAuditGroupNumEndpointsAudited"), ("BW-BroadworksApplicationServer", "bwSessionAuditGroupNumCallsFailedAudit"), ("BW-BroadworksApplicationServer", "bwSessionAuditGroupNumEndpointsFailedAudit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsSessionAuditServiceGroup = bwAsSessionAuditServiceGroup.setStatus('current')
bwAsWindowsMessagingServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 49)).setObjects(("BW-BroadworksApplicationServer", "bwWindowsMessagingIMSessionSuccessCounter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsWindowsMessagingServiceGroup = bwAsWindowsMessagingServiceGroup.setStatus('current')
bwAsCalWaitingServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 50)).setObjects(("BW-BroadworksApplicationServer", "bwCallWaitingSPTable"), ("BW-BroadworksApplicationServer", "bwCWNumPhoneCancellations"), ("BW-BroadworksApplicationServer", "bwCallWaitingGroupTable"), ("BW-BroadworksApplicationServer", "bwCallWaitingSPIndex"), ("BW-BroadworksApplicationServer", "bwCallWaitingSPID"), ("BW-BroadworksApplicationServer", "bwCWSPNumPhoneCancellations"), ("BW-BroadworksApplicationServer", "bwCallWaitingGroupIndex"), ("BW-BroadworksApplicationServer", "bwCallWaitingGroupID"), ("BW-BroadworksApplicationServer", "bwCWGroupNumPhoneCancellations"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCalWaitingServiceGroup = bwAsCalWaitingServiceGroup.setStatus('current')
bwAsAlternateNumberServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 51)).setObjects(("BW-BroadworksApplicationServer", "bwAlternateNumbersSPTable"), ("BW-BroadworksApplicationServer", "bwAlternateNumbersUsage"), ("BW-BroadworksApplicationServer", "bwAlternateNumbersGroupTable"), ("BW-BroadworksApplicationServer", "bwAlternateNumbersSPIndex"), ("BW-BroadworksApplicationServer", "bwAlternateNumbersSPID"), ("BW-BroadworksApplicationServer", "bwAlternateNumbersSPUsage"), ("BW-BroadworksApplicationServer", "bwAlternateNumbersGroupIndex"), ("BW-BroadworksApplicationServer", "bwAlternateNumbersGroupID"), ("BW-BroadworksApplicationServer", "bwAlternateNumbersGroupUsage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsAlternateNumberServiceGroup = bwAsAlternateNumberServiceGroup.setStatus('current')
bwAsCustomerOriginatedTraceServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 52)).setObjects(("BW-BroadworksApplicationServer", "bwCotActivation"), ("BW-BroadworksApplicationServer", "bwCotFailureNoId"), ("BW-BroadworksApplicationServer", "bwCotSPTable"), ("BW-BroadworksApplicationServer", "bwCotGroupTable"), ("BW-BroadworksApplicationServer", "bwCotSPIndex"), ("BW-BroadworksApplicationServer", "bwCotSPID"), ("BW-BroadworksApplicationServer", "bwCotSPActivation"), ("BW-BroadworksApplicationServer", "bwCotSPFailureNoId"), ("BW-BroadworksApplicationServer", "bwCotGroupIndex"), ("BW-BroadworksApplicationServer", "bwCotGroupID"), ("BW-BroadworksApplicationServer", "bwCotGroupActivation"), ("BW-BroadworksApplicationServer", "bwCotGroupFailureNoId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCustomerOriginatedTraceServiceGroup = bwAsCustomerOriginatedTraceServiceGroup.setStatus('current')
bwAsSpeedDialing8ServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 53)).setObjects(("BW-BroadworksApplicationServer", "bwSD8NumTimesDialed"), ("BW-BroadworksApplicationServer", "bwSD8NumTimesProgrammed"), ("BW-BroadworksApplicationServer", "bwSD8SPTable"), ("BW-BroadworksApplicationServer", "bwSD8GroupTable"), ("BW-BroadworksApplicationServer", "bwSD8SPIndex"), ("BW-BroadworksApplicationServer", "bwSD8SPID"), ("BW-BroadworksApplicationServer", "bwSD8SPNumTimesDialed"), ("BW-BroadworksApplicationServer", "bwSD8SPNumTimesProgrammed"), ("BW-BroadworksApplicationServer", "bwSD8GroupIndex"), ("BW-BroadworksApplicationServer", "bwSD8GroupID"), ("BW-BroadworksApplicationServer", "bwSD8GroupNumTimesDialed"), ("BW-BroadworksApplicationServer", "bwSD8GroupNumTimesProgrammed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsSpeedDialing8ServiceGroup = bwAsSpeedDialing8ServiceGroup.setStatus('current')
bwAsMusicOnHoldServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 54)).setObjects(("BW-BroadworksApplicationServer", "bwMusicOnHoldNumUses"), ("BW-BroadworksApplicationServer", "bwMusicOnHoldSPTable"), ("BW-BroadworksApplicationServer", "bwMusicOnHoldGroupTable"), ("BW-BroadworksApplicationServer", "bwMusicOnHoldExternalSourceNumFailures"), ("BW-BroadworksApplicationServer", "bwMusicOnHoldSPIndex"), ("BW-BroadworksApplicationServer", "bwMusicOnHoldSPID"), ("BW-BroadworksApplicationServer", "bwMusicOnHoldSPNumUses"), ("BW-BroadworksApplicationServer", "bwMusicOnHoldSPExternalSourceNumFailures"), ("BW-BroadworksApplicationServer", "bwMusicOnHoldGroupIndex"), ("BW-BroadworksApplicationServer", "bwMusicOnHoldGroupID"), ("BW-BroadworksApplicationServer", "bwMusicOnHoldGroupNumUses"), ("BW-BroadworksApplicationServer", "bwMusicOnHoldGroupExternalSourceNumFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsMusicOnHoldServiceGroup = bwAsMusicOnHoldServiceGroup.setStatus('current')
bwAsCallingNameQueriesServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 55)).setObjects(("BW-BroadworksApplicationServer", "bwCNAMQueriesSent"), ("BW-BroadworksApplicationServer", "bwCNAMQueriesFailed"), ("BW-BroadworksApplicationServer", "bwCNAMQueriesTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCallingNameQueriesServiceGroup = bwAsCallingNameQueriesServiceGroup.setStatus('current')
bwAsThirdPartyMWIControlServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 56)).setObjects(("BW-BroadworksApplicationServer", "bwThirdPartyMWIControlNotifyIns"), ("BW-BroadworksApplicationServer", "bwThirdPartyMWIControlNotifyFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsThirdPartyMWIControlServiceGroup = bwAsThirdPartyMWIControlServiceGroup.setStatus('current')
bwAsCallCenterServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 57)).setObjects(("BW-BroadworksApplicationServer", "bwCallCenterReportEmailed"), ("BW-BroadworksApplicationServer", "bwCallCenterSPTable"), ("BW-BroadworksApplicationServer", "bwCallCenterGroupTable"), ("BW-BroadworksApplicationServer", "bwCallCenterSPIndex"), ("BW-BroadworksApplicationServer", "bwCallCenterSPID"), ("BW-BroadworksApplicationServer", "bwCallCenterSPReportEmailed"), ("BW-BroadworksApplicationServer", "bwCallCenterGroupIndex"), ("BW-BroadworksApplicationServer", "bwCallCenterGroupID"), ("BW-BroadworksApplicationServer", "bwCallCenterGroupReportEmailed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCallCenterServiceGroup = bwAsCallCenterServiceGroup.setStatus('current')
bwAsCallForwardGroupNoAnswerServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 58)).setObjects(("BW-BroadworksApplicationServer", "bwCFGNAForward"), ("BW-BroadworksApplicationServer", "bwCFGNAOverflowForward"), ("BW-BroadworksApplicationServer", "bwCFGNAOverflowNoForward"), ("BW-BroadworksApplicationServer", "bwCFGNASPTable"), ("BW-BroadworksApplicationServer", "bwCFGNAGroupTable"), ("BW-BroadworksApplicationServer", "bwCFGNAExternalForward"), ("BW-BroadworksApplicationServer", "bwCFGNAExternalNoForward"), ("BW-BroadworksApplicationServer", "bwCFGNASPIndex"), ("BW-BroadworksApplicationServer", "bwCFGNASPID"), ("BW-BroadworksApplicationServer", "bwCFGNASPForward"), ("BW-BroadworksApplicationServer", "bwCFGNASPOverflowForward"), ("BW-BroadworksApplicationServer", "bwCFGNASPOverflowNoForward"), ("BW-BroadworksApplicationServer", "bwCFGNASPExternalForward"), ("BW-BroadworksApplicationServer", "bwCFGNASPExternalNoForward"), ("BW-BroadworksApplicationServer", "bwCFGNAGroupIndex"), ("BW-BroadworksApplicationServer", "bwCFGNAGroupID"), ("BW-BroadworksApplicationServer", "bwCFGNAGroupForward"), ("BW-BroadworksApplicationServer", "bwCFGNAGroupOverflowForward"), ("BW-BroadworksApplicationServer", "bwCFGNAGroupOverflowNoForward"), ("BW-BroadworksApplicationServer", "bwCFGNAGroupExternalForward"), ("BW-BroadworksApplicationServer", "bwCFGNAGroupExternalNoForward"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCallForwardGroupNoAnswerServiceGroup = bwAsCallForwardGroupNoAnswerServiceGroup.setStatus('current')
bwAsSpeedDialing100ServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 59)).setObjects(("BW-BroadworksApplicationServer", "bwSD100Program"), ("BW-BroadworksApplicationServer", "bwSD100Call"), ("BW-BroadworksApplicationServer", "bwSD100SPTable"), ("BW-BroadworksApplicationServer", "bwSD100GroupTable"), ("BW-BroadworksApplicationServer", "bwSD100SPIndex"), ("BW-BroadworksApplicationServer", "bwSD100SPID"), ("BW-BroadworksApplicationServer", "bwSD100SPProgram"), ("BW-BroadworksApplicationServer", "bwSD100SPCall"), ("BW-BroadworksApplicationServer", "bwSD100GroupIndex"), ("BW-BroadworksApplicationServer", "bwSD100GroupID"), ("BW-BroadworksApplicationServer", "bwSD100GroupProgram"), ("BW-BroadworksApplicationServer", "bwSD100GroupCall"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsSpeedDialing100ServiceGroup = bwAsSpeedDialing100ServiceGroup.setStatus('current')
bwAsThirdPartyVoiceMailServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 60)).setObjects(("BW-BroadworksApplicationServer", "bwThirdPartyVoiceMailNbOfCFWBusy"), ("BW-BroadworksApplicationServer", "bwThirdPartyVoiceMailNbOfCFWNoAnswer"), ("BW-BroadworksApplicationServer", "bwThirdPartyVMailSPTable"), ("BW-BroadworksApplicationServer", "bwThirdPartyVMailGroupTable"), ("BW-BroadworksApplicationServer", "bwThirdPartyVMailSPIndex"), ("BW-BroadworksApplicationServer", "bwThirdPartyVMailSPID"), ("BW-BroadworksApplicationServer", "bwThirdPartyVoiceMailSPNbOfCFWBusy"), ("BW-BroadworksApplicationServer", "bwThirdPartyVoiceMailSPNbOfCFWNoAnswer"), ("BW-BroadworksApplicationServer", "bwThirdPartyVMailGroupIndex"), ("BW-BroadworksApplicationServer", "bwThirdPartyVMailGroupID"), ("BW-BroadworksApplicationServer", "bwThirdPartyVoiceMailGroupNbOfCFWBusy"), ("BW-BroadworksApplicationServer", "bwThirdPartyVoiceMailGroupNbOfCFWNoAnswer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsThirdPartyVoiceMailServiceGroup = bwAsThirdPartyVoiceMailServiceGroup.setStatus('current')
bwAsDirectedCallPickupServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 61)).setObjects(("BW-BroadworksApplicationServer", "bwDirectedCallPickupNumAttempts"), ("BW-BroadworksApplicationServer", "bwDirectedCallPickupNumFailures"), ("BW-BroadworksApplicationServer", "bwDirectedCallPickupSPTable"), ("BW-BroadworksApplicationServer", "bwDirectedCallPickupGroupTable"), ("BW-BroadworksApplicationServer", "bwDirectedCallPickupSPIndex"), ("BW-BroadworksApplicationServer", "bwDirectedCallPickupSPID"), ("BW-BroadworksApplicationServer", "bwDirectedCallPickupSPNumAttempts"), ("BW-BroadworksApplicationServer", "bwDirectedCallPickupSPNumFailures"), ("BW-BroadworksApplicationServer", "bwDirectedCallPickupGroupIndex"), ("BW-BroadworksApplicationServer", "bwDirectedCallPickupGroupID"), ("BW-BroadworksApplicationServer", "bwDirectedCallPickupGroupNumAttempts"), ("BW-BroadworksApplicationServer", "bwDirectedCallPickupGroupNumFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsDirectedCallPickupServiceGroup = bwAsDirectedCallPickupServiceGroup.setStatus('current')
bwAsFlashCallHoldServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 62)).setObjects(("BW-BroadworksApplicationServer", "bwFlashCallHoldNumActivations"), ("BW-BroadworksApplicationServer", "bwFlashCallHoldSPTable"), ("BW-BroadworksApplicationServer", "bwFlashCallHoldGroupTable"), ("BW-BroadworksApplicationServer", "bwFlashCallHoldSPIndex"), ("BW-BroadworksApplicationServer", "bwFlashCallHoldSPID"), ("BW-BroadworksApplicationServer", "bwFlashCallHoldSPNumActivations"), ("BW-BroadworksApplicationServer", "bwFlashCallHoldGroupIndex"), ("BW-BroadworksApplicationServer", "bwFlashCallHoldGroupID"), ("BW-BroadworksApplicationServer", "bwFlashCallHoldGroupNumActivations"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsFlashCallHoldServiceGroup = bwAsFlashCallHoldServiceGroup.setStatus('current')
bwAsEmergencyZoneServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 63)).setObjects(("BW-BroadworksApplicationServer", "bwEZRegistrationsRejected"), ("BW-BroadworksApplicationServer", "bwEZEmergencyCallsRejected"), ("BW-BroadworksApplicationServer", "bwEZNormalCallsRejected"), ("BW-BroadworksApplicationServer", "bwEZSPTable"), ("BW-BroadworksApplicationServer", "bwEZGroupTable"), ("BW-BroadworksApplicationServer", "bwEZSPIndex"), ("BW-BroadworksApplicationServer", "bwEZSPID"), ("BW-BroadworksApplicationServer", "bwEZSPRegistrationsRejected"), ("BW-BroadworksApplicationServer", "bwEZSPEmergencyCallsRejected"), ("BW-BroadworksApplicationServer", "bwEZSPNormalCallsRejected"), ("BW-BroadworksApplicationServer", "bwEZGroupIndex"), ("BW-BroadworksApplicationServer", "bwEZGroupID"), ("BW-BroadworksApplicationServer", "bwEZGroupRegistrationsRejected"), ("BW-BroadworksApplicationServer", "bwEZGroupEmergencyCallsRejected"), ("BW-BroadworksApplicationServer", "bwEZGroupNormalCallsRejected"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsEmergencyZoneServiceGroup = bwAsEmergencyZoneServiceGroup.setStatus('current')
bwAsDirectedCallPickupWithBargeInServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 64)).setObjects(("BW-BroadworksApplicationServer", "bwDPUBIAttempt"), ("BW-BroadworksApplicationServer", "bwDPUBIFailure"), ("BW-BroadworksApplicationServer", "bwDPUBIBargeIn"), ("BW-BroadworksApplicationServer", "bwDPUBIBargeInFailure"), ("BW-BroadworksApplicationServer", "bwDPUBISPTable"), ("BW-BroadworksApplicationServer", "bwDPUBIGroupTable"), ("BW-BroadworksApplicationServer", "bwDPUBIExempt"), ("BW-BroadworksApplicationServer", "bwDPUBISPIndex"), ("BW-BroadworksApplicationServer", "bwDPUBISPID"), ("BW-BroadworksApplicationServer", "bwDPUBISPAttempt"), ("BW-BroadworksApplicationServer", "bwDPUBISPFailure"), ("BW-BroadworksApplicationServer", "bwDPUBISPBargeIn"), ("BW-BroadworksApplicationServer", "bwDPUBISPBargeInFailure"), ("BW-BroadworksApplicationServer", "bwDPUBISPExempt"), ("BW-BroadworksApplicationServer", "bwDPUBIGroupIndex"), ("BW-BroadworksApplicationServer", "bwDPUBIGroupID"), ("BW-BroadworksApplicationServer", "bwDPUBIGroupAttempt"), ("BW-BroadworksApplicationServer", "bwDPUBIGroupFailure"), ("BW-BroadworksApplicationServer", "bwDPUBIGroupBargeIn"), ("BW-BroadworksApplicationServer", "bwDPUBIGroupBargeInFailure"), ("BW-BroadworksApplicationServer", "bwDPUBIGroupExempt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsDirectedCallPickupWithBargeInServiceGroup = bwAsDirectedCallPickupWithBargeInServiceGroup.setStatus('current')
bwAsAutomaticCallBackServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 65)).setObjects(("BW-BroadworksApplicationServer", "bwACBStarted"), ("BW-BroadworksApplicationServer", "bwACBExpired"), ("BW-BroadworksApplicationServer", "bwACBMaxSession"), ("BW-BroadworksApplicationServer", "bwACBSPTable"), ("BW-BroadworksApplicationServer", "bwACBGroupTable"), ("BW-BroadworksApplicationServer", "bwACBSPIndex"), ("BW-BroadworksApplicationServer", "bwACBSPID"), ("BW-BroadworksApplicationServer", "bwACBSPStarted"), ("BW-BroadworksApplicationServer", "bwACBSPExpired"), ("BW-BroadworksApplicationServer", "bwACBSPMaxSession"), ("BW-BroadworksApplicationServer", "bwACBGroupIndex"), ("BW-BroadworksApplicationServer", "bwACBGroupID"), ("BW-BroadworksApplicationServer", "bwACBGroupStarted"), ("BW-BroadworksApplicationServer", "bwACBGroupExpired"), ("BW-BroadworksApplicationServer", "bwACBGroupMaxSession"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsAutomaticCallBackServiceGroup = bwAsAutomaticCallBackServiceGroup.setStatus('current')
bwAsRingTimeoutServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 66)).setObjects(("BW-BroadworksApplicationServer", "bwRingTimeoutNumExpires"), ("BW-BroadworksApplicationServer", "bwRingTimeoutSPTable"), ("BW-BroadworksApplicationServer", "bwRingTimeoutGroupTable"), ("BW-BroadworksApplicationServer", "bwRingTimeoutSPIndex"), ("BW-BroadworksApplicationServer", "bwRingTimeoutSPID"), ("BW-BroadworksApplicationServer", "bwRingTimeoutSPNumExpires"), ("BW-BroadworksApplicationServer", "bwRingTimeoutGroupIndex"), ("BW-BroadworksApplicationServer", "bwRingTimeoutGroupID"), ("BW-BroadworksApplicationServer", "bwRingTimeoutGroupNumExpires"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsRingTimeoutServiceGroup = bwAsRingTimeoutServiceGroup.setStatus('current')
bwAsSequentialRingServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 67)).setObjects(("BW-BroadworksApplicationServer", "bwSequentialRingNumAttempts"), ("BW-BroadworksApplicationServer", "bwSequentialRingNumNoAnswer"), ("BW-BroadworksApplicationServer", "bwSequentialRingSPTable"), ("BW-BroadworksApplicationServer", "bwSequentialRingGroupTable"), ("BW-BroadworksApplicationServer", "bwSequentialRingActivations"), ("BW-BroadworksApplicationServer", "bwSequentialRingAnswered"), ("BW-BroadworksApplicationServer", "bwSequentialRingAbandoned"), ("BW-BroadworksApplicationServer", "bwSequentialRingSPIndex"), ("BW-BroadworksApplicationServer", "bwSequentialRingSPID"), ("BW-BroadworksApplicationServer", "bwSequentialRingSPNumAttempts"), ("BW-BroadworksApplicationServer", "bwSequentialRingSPNumNoAnswer"), ("BW-BroadworksApplicationServer", "bwSequentialRingSPActivations"), ("BW-BroadworksApplicationServer", "bwSequentialRingSPAnswered"), ("BW-BroadworksApplicationServer", "bwSequentialRingSPAbandoned"), ("BW-BroadworksApplicationServer", "bwSequentialRingGroupIndex"), ("BW-BroadworksApplicationServer", "bwSequentialRingGroupID"), ("BW-BroadworksApplicationServer", "bwSequentialRingGroupNumAttempts"), ("BW-BroadworksApplicationServer", "bwSequentialRingGroupNumNoAnswer"), ("BW-BroadworksApplicationServer", "bwSequentialRingGroupActivations"), ("BW-BroadworksApplicationServer", "bwSequentialRingGroupAnswered"), ("BW-BroadworksApplicationServer", "bwSequentialRingGroupAbandoned"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsSequentialRingServiceGroup = bwAsSequentialRingServiceGroup.setStatus('current')
bwAsVideoAddOnServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 68)).setObjects(("BW-BroadworksApplicationServer", "bwVAOOutgoingAttempts"), ("BW-BroadworksApplicationServer", "bwVAOOutgoingSuccess"), ("BW-BroadworksApplicationServer", "bwVAOIncomingAttempts"), ("BW-BroadworksApplicationServer", "bwVAOIncomingSuccess"), ("BW-BroadworksApplicationServer", "bwVAOSPTable"), ("BW-BroadworksApplicationServer", "bwVAOGroupTable"), ("BW-BroadworksApplicationServer", "bwVAOSPIndex"), ("BW-BroadworksApplicationServer", "bwVAOSPID"), ("BW-BroadworksApplicationServer", "bwVAOSPOutgoingAttempts"), ("BW-BroadworksApplicationServer", "bwVAOSPOutgoingSuccess"), ("BW-BroadworksApplicationServer", "bwVAOSPIncomingAttempts"), ("BW-BroadworksApplicationServer", "bwVAOSPIncomingSuccess"), ("BW-BroadworksApplicationServer", "bwVAOGroupIndex"), ("BW-BroadworksApplicationServer", "bwVAOGroupID"), ("BW-BroadworksApplicationServer", "bwVAOGroupOutgoingAttempts"), ("BW-BroadworksApplicationServer", "bwVAOGroupOutgoingSuccess"), ("BW-BroadworksApplicationServer", "bwVAOGroupIncomingAttempts"), ("BW-BroadworksApplicationServer", "bwVAOGroupIncomingSuccess"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsVideoAddOnServiceGroup = bwAsVideoAddOnServiceGroup.setStatus('current')
bwAsMaliciousCallTraceServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 69)).setObjects(("BW-BroadworksApplicationServer", "bwMaliciousCallTraceApplied"), ("BW-BroadworksApplicationServer", "bwMaliciousCallTraceSPTable"), ("BW-BroadworksApplicationServer", "bwMaliciousCallTraceGroupTable"), ("BW-BroadworksApplicationServer", "bwMaliciousCallTraceSPIndex"), ("BW-BroadworksApplicationServer", "bwMaliciousCallTraceSPID"), ("BW-BroadworksApplicationServer", "bwMaliciousCallTraceSPApplied"), ("BW-BroadworksApplicationServer", "bwMaliciousCallTraceGroupIndex"), ("BW-BroadworksApplicationServer", "bwMaliciousCallTraceGroupID"), ("BW-BroadworksApplicationServer", "bwMaliciousCallTraceGroupApplied"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsMaliciousCallTraceServiceGroup = bwAsMaliciousCallTraceServiceGroup.setStatus('current')
bwAsPushToTalkServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 70)).setObjects(("BW-BroadworksApplicationServer", "bwPTTInvoke"), ("BW-BroadworksApplicationServer", "bwPTTReject"), ("BW-BroadworksApplicationServer", "bwPTTSPTable"), ("BW-BroadworksApplicationServer", "bwPTTGroupTable"), ("BW-BroadworksApplicationServer", "bwPTTSPIndex"), ("BW-BroadworksApplicationServer", "bwPTTSPID"), ("BW-BroadworksApplicationServer", "bwPTTSPInvoke"), ("BW-BroadworksApplicationServer", "bwPTTSPReject"), ("BW-BroadworksApplicationServer", "bwPTTGroupIndex"), ("BW-BroadworksApplicationServer", "bwPTTGroupID"), ("BW-BroadworksApplicationServer", "bwPTTGroupInvoke"), ("BW-BroadworksApplicationServer", "bwPTTGroupReject"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsPushToTalkServiceGroup = bwAsPushToTalkServiceGroup.setStatus('current')
bwAsHotelingServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 71)).setObjects(("BW-BroadworksApplicationServer", "bwHotelingAssociate"), ("BW-BroadworksApplicationServer", "bwHotelingDisassociate"), ("BW-BroadworksApplicationServer", "bwHotelingTimeout"), ("BW-BroadworksApplicationServer", "bwHotelingSPTable"), ("BW-BroadworksApplicationServer", "bwHotelingGroupTable"), ("BW-BroadworksApplicationServer", "bwHotelingSPIndex"), ("BW-BroadworksApplicationServer", "bwHotelingSPID"), ("BW-BroadworksApplicationServer", "bwHotelingSPAssociate"), ("BW-BroadworksApplicationServer", "bwHotelingSPDisassociate"), ("BW-BroadworksApplicationServer", "bwHotelingSPTimeout"), ("BW-BroadworksApplicationServer", "bwHotelingGroupIndex"), ("BW-BroadworksApplicationServer", "bwHotelingGroupID"), ("BW-BroadworksApplicationServer", "bwHotelingGroupAssociate"), ("BW-BroadworksApplicationServer", "bwHotelingGroupDisassociate"), ("BW-BroadworksApplicationServer", "bwHotelingGroupTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsHotelingServiceGroup = bwAsHotelingServiceGroup.setStatus('current')
bwAsPreferredCarrierServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 72)).setObjects(("BW-BroadworksApplicationServer", "bwSubscriptionUserPIC"), ("BW-BroadworksApplicationServer", "bwSubscriptionGroupPIC"), ("BW-BroadworksApplicationServer", "bwSubscriptionServiceProviderPIC"), ("BW-BroadworksApplicationServer", "bwSubscriptionDialedUserPIC"), ("BW-BroadworksApplicationServer", "bwSubscriptionDialedGroupPIC"), ("BW-BroadworksApplicationServer", "bwSubscriptionDialedServiceProviderPIC"), ("BW-BroadworksApplicationServer", "bwNonSubscriptionDialedUserPIC"), ("BW-BroadworksApplicationServer", "bwNonSubscriptionDialedGroupPIC"), ("BW-BroadworksApplicationServer", "bwNonSubscriptionDialedServiceProviderPIC"), ("BW-BroadworksApplicationServer", "bwNoIndicationUserPIC"), ("BW-BroadworksApplicationServer", "bwNoIndicationGroupPIC"), ("BW-BroadworksApplicationServer", "bwNoIndicationServiceProviderPIC"), ("BW-BroadworksApplicationServer", "bwPreferredCarrierSPTable"), ("BW-BroadworksApplicationServer", "bwPreferredCarrierGroupTable"), ("BW-BroadworksApplicationServer", "bwPreferredCarrierSPIndex"), ("BW-BroadworksApplicationServer", "bwPreferredCarrierSPID"), ("BW-BroadworksApplicationServer", "bwSPSubscriptionUserPIC"), ("BW-BroadworksApplicationServer", "bwSPSubscriptionGroupPIC"), ("BW-BroadworksApplicationServer", "bwSPSubscriptionServiceProviderPIC"), ("BW-BroadworksApplicationServer", "bwSPSubscriptionDialedUserPIC"), ("BW-BroadworksApplicationServer", "bwSPSubscriptionDialedGroupPIC"), ("BW-BroadworksApplicationServer", "bwSPSubscriptionDialedServiceProviderPIC"), ("BW-BroadworksApplicationServer", "bwSPNonSubscriptionDialedUserPIC"), ("BW-BroadworksApplicationServer", "bwSPNonSubscriptionDialedGroupPIC"), ("BW-BroadworksApplicationServer", "bwSPNonSubscriptionDialedServiceProviderPIC"), ("BW-BroadworksApplicationServer", "bwSPNoIndicationUserPIC"), ("BW-BroadworksApplicationServer", "bwSPNoIndicationGroupPIC"), ("BW-BroadworksApplicationServer", "bwSPNoIndicationServiceProviderPIC"), ("BW-BroadworksApplicationServer", "bwPreferredCarrierGroupIndex"), ("BW-BroadworksApplicationServer", "bwPreferredCarrierGroupID"), ("BW-BroadworksApplicationServer", "bwGroupSubscriptionUserPIC"), ("BW-BroadworksApplicationServer", "bwGroupSubscriptionGroupPIC"), ("BW-BroadworksApplicationServer", "bwGroupSubscriptionServiceProviderPIC"), ("BW-BroadworksApplicationServer", "bwGroupSubscriptionDialedUserPIC"), ("BW-BroadworksApplicationServer", "bwGroupSubscriptionDialedGroupPIC"), ("BW-BroadworksApplicationServer", "bwGroupSubscriptionDialedServiceProviderPIC"), ("BW-BroadworksApplicationServer", "bwGroupNonSubscriptionDialedUserPIC"), ("BW-BroadworksApplicationServer", "bwGroupNonSubscriptionDialedGroupPIC"), ("BW-BroadworksApplicationServer", "bwGroupNonSubscriptionDialedServiceProviderPIC"), ("BW-BroadworksApplicationServer", "bwGroupNoIndicationUserPIC"), ("BW-BroadworksApplicationServer", "bwGroupNoIndicationGroupPIC"), ("BW-BroadworksApplicationServer", "bwGroupNoIndicationServiceProviderPIC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsPreferredCarrierServiceGroup = bwAsPreferredCarrierServiceGroup.setStatus('current')
bwAsFamilySimRingServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 73)).setObjects(("BW-BroadworksApplicationServer", "bwFamilySimRingNumAttempts"), ("BW-BroadworksApplicationServer", "bwFamilySimRingNumBusy"), ("BW-BroadworksApplicationServer", "bwFamilySimRingSPTable"), ("BW-BroadworksApplicationServer", "bwFamilySimRingGroupTable"), ("BW-BroadworksApplicationServer", "bwFamilySimRingSPIndex"), ("BW-BroadworksApplicationServer", "bwFamilySimRingSPID"), ("BW-BroadworksApplicationServer", "bwFamilySimRingSPNumAttempts"), ("BW-BroadworksApplicationServer", "bwFamilySimRingSPNumBusy"), ("BW-BroadworksApplicationServer", "bwFamilySimRingGroupIndex"), ("BW-BroadworksApplicationServer", "bwFamilySimRingGroupID"), ("BW-BroadworksApplicationServer", "bwFamilySimRingGroupNumAttempts"), ("BW-BroadworksApplicationServer", "bwFamilySimRingGroupNumBusy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsFamilySimRingServiceGroup = bwAsFamilySimRingServiceGroup.setStatus('current')
bwAsDiversionInhibitorServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 74)).setObjects(("BW-BroadworksApplicationServer", "bwDiversionInhibited"), ("BW-BroadworksApplicationServer", "bwDiversionInhibitorSPTable"), ("BW-BroadworksApplicationServer", "bwDiversionInhibitorGroupTable"), ("BW-BroadworksApplicationServer", "bwDiversionInhibitorSPIndex"), ("BW-BroadworksApplicationServer", "bwDiversionInhibitorSPID"), ("BW-BroadworksApplicationServer", "bwSPDiversionInhibited"), ("BW-BroadworksApplicationServer", "bwDiversionInhibitorGroupIndex"), ("BW-BroadworksApplicationServer", "bwDiversionInhibitorGroupID"), ("BW-BroadworksApplicationServer", "bwGroupDiversionInhibited"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsDiversionInhibitorServiceGroup = bwAsDiversionInhibitorServiceGroup.setStatus('current')
bwAsInstantGroupCallServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 75)).setObjects(("BW-BroadworksApplicationServer", "bwIGCPushToTalkInvoke"), ("BW-BroadworksApplicationServer", "bwIGCNormalInvoke"), ("BW-BroadworksApplicationServer", "bwIGCSPTable"), ("BW-BroadworksApplicationServer", "bwIGCGroupTable"), ("BW-BroadworksApplicationServer", "bwIGCSPIndex"), ("BW-BroadworksApplicationServer", "bwIGCSPID"), ("BW-BroadworksApplicationServer", "bwIGCSPPushToTalkInvoke"), ("BW-BroadworksApplicationServer", "bwIGCSPNormalInvoke"), ("BW-BroadworksApplicationServer", "bwIGCGroupIndex"), ("BW-BroadworksApplicationServer", "bwIGCGroupID"), ("BW-BroadworksApplicationServer", "bwIGCGroupPushToTalkInvoke"), ("BW-BroadworksApplicationServer", "bwIGCGroupNormalInvoke"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsInstantGroupCallServiceGroup = bwAsInstantGroupCallServiceGroup.setStatus('current')
bwAsAutomaticHoldAndRetrieveServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 76)).setObjects(("BW-BroadworksApplicationServer", "bwAHRHold"), ("BW-BroadworksApplicationServer", "bwAHRRetrieve"), ("BW-BroadworksApplicationServer", "bwAHRSPTable"), ("BW-BroadworksApplicationServer", "bwAHRGroupTable"), ("BW-BroadworksApplicationServer", "bwAHRSPIndex"), ("BW-BroadworksApplicationServer", "bwAHRSPID"), ("BW-BroadworksApplicationServer", "bwAHRSPHold"), ("BW-BroadworksApplicationServer", "bwAHRSPRetrieve"), ("BW-BroadworksApplicationServer", "bwAHRGroupIndex"), ("BW-BroadworksApplicationServer", "bwAHRGroupID"), ("BW-BroadworksApplicationServer", "bwAHRGroupHold"), ("BW-BroadworksApplicationServer", "bwAHRGroupRetrieve"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsAutomaticHoldAndRetrieveServiceGroup = bwAsAutomaticHoldAndRetrieveServiceGroup.setStatus('current')
bwAsBusinessTrunkGroupServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 77)).setObjects(("BW-BroadworksApplicationServer", "bwTrunkOriginationAttempt"), ("BW-BroadworksApplicationServer", "bwTrunkOriginationBlocked"), ("BW-BroadworksApplicationServer", "bwTrunkTerminationAttempt"), ("BW-BroadworksApplicationServer", "bwTrunkTerminationBlocked"), ("BW-BroadworksApplicationServer", "bwTrunkSPTable"), ("BW-BroadworksApplicationServer", "bwTrunkGroupTable"), ("BW-BroadworksApplicationServer", "bwTrunkSPIndex"), ("BW-BroadworksApplicationServer", "bwTrunkSPID"), ("BW-BroadworksApplicationServer", "bwTrunkSPOriginationAttempt"), ("BW-BroadworksApplicationServer", "bwTrunkSPOriginationBlocked"), ("BW-BroadworksApplicationServer", "bwTrunkSPTerminationAttempt"), ("BW-BroadworksApplicationServer", "bwTrunkSPTerminationBlocked"), ("BW-BroadworksApplicationServer", "bwTrunkGroupIndex"), ("BW-BroadworksApplicationServer", "bwTrunkGroupID"), ("BW-BroadworksApplicationServer", "bwTrunkGroupOriginationAttempt"), ("BW-BroadworksApplicationServer", "bwTrunkGroupOriginationBlocked"), ("BW-BroadworksApplicationServer", "bwTrunkGroupTerminationAttempt"), ("BW-BroadworksApplicationServer", "bwTrunkGroupTerminationBlocked"), ("BW-BroadworksApplicationServer", "bwTrunkGroupPerTGTable"), ("BW-BroadworksApplicationServer", "bwTrunkGroupPerTGIndex"), ("BW-BroadworksApplicationServer", "bwTrunkGroupPerTGName"), ("BW-BroadworksApplicationServer", "bwTrunkGroupPerTGCapacityExceeded"), ("BW-BroadworksApplicationServer", "bwTrunkGroupPerTGUnreachableDestination"), ("BW-BroadworksApplicationServer", "bwTrunkGroupPerTGMaxActiveCalls"), ("BW-BroadworksApplicationServer", "bwTrunkGroupPerTGMaxOutgoingActiveCalls"), ("BW-BroadworksApplicationServer", "bwTrunkGroupPerTGMaxIncomingActiveCalls"), ("BW-BroadworksApplicationServer", "bwTrunkGroupPerTGCapacityExceededInitialValue"), ("BW-BroadworksApplicationServer", "bwTrunkGroupPerTGCapacityExceededOffsetValue"), ("BW-BroadworksApplicationServer", "bwTrunkGroupPerTGUnreachableDestinationExceededInitialValue"), ("BW-BroadworksApplicationServer", "bwTrunkGroupPerTGUnreachableDestinationExceededOffsetValue"), ("BW-BroadworksApplicationServer", "bwTrunkGroupPerTGGroupID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsBusinessTrunkGroupServiceGroup = bwAsBusinessTrunkGroupServiceGroup.setStatus('current')
bwAsCustomRingbackServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 78)).setObjects(("BW-BroadworksApplicationServer", "bwCustomRingbackUserAudioAttempts"), ("BW-BroadworksApplicationServer", "bwCustomRingbackUserVideoAttempts"), ("BW-BroadworksApplicationServer", "bwCustomRingbackUserAudioFailures"), ("BW-BroadworksApplicationServer", "bwCustomRingbackUserVideoFailures"), ("BW-BroadworksApplicationServer", "bwCustomRingbackGroupAudioAttempts"), ("BW-BroadworksApplicationServer", "bwCustomRingbackGroupVideoAttempts"), ("BW-BroadworksApplicationServer", "bwCustomRingbackGroupAudioFailures"), ("BW-BroadworksApplicationServer", "bwCustomRingbackGroupVideoFailures"), ("BW-BroadworksApplicationServer", "bwCustomRingbackSPTable"), ("BW-BroadworksApplicationServer", "bwCustomRingbackGroupTable"), ("BW-BroadworksApplicationServer", "bwCustomRingbackSPIndex"), ("BW-BroadworksApplicationServer", "bwCustomRingbackSPID"), ("BW-BroadworksApplicationServer", "bwCustomRingbackUserAudioSPAttempts"), ("BW-BroadworksApplicationServer", "bwCustomRingbackUserVideoSPAttempts"), ("BW-BroadworksApplicationServer", "bwCustomRingbackUserAudioSPFailures"), ("BW-BroadworksApplicationServer", "bwCustomRingbackUserVideoSPFailures"), ("BW-BroadworksApplicationServer", "bwCustomRingbackGroupAudioSPAttempts"), ("BW-BroadworksApplicationServer", "bwCustomRingbackGroupVideoSPAttempts"), ("BW-BroadworksApplicationServer", "bwCustomRingbackGroupAudioSPFailures"), ("BW-BroadworksApplicationServer", "bwCustomRingbackGroupVideoSPFailures"), ("BW-BroadworksApplicationServer", "bwCustomRingbackGroupIndex"), ("BW-BroadworksApplicationServer", "bwCustomRingbackGroupID"), ("BW-BroadworksApplicationServer", "bwCustomRingbackUserAudioGroupAttempts"), ("BW-BroadworksApplicationServer", "bwCustomRingbackUserVideoGroupAttempts"), ("BW-BroadworksApplicationServer", "bwCustomRingbackUserAudioGroupFailures"), ("BW-BroadworksApplicationServer", "bwCustomRingbackUserVideoGroupFailures"), ("BW-BroadworksApplicationServer", "bwCustomRingbackGroupAudioGroupAttempts"), ("BW-BroadworksApplicationServer", "bwCustomRingbackGroupVideoGroupAttempts"), ("BW-BroadworksApplicationServer", "bwCustomRingbackGroupAudioGroupFailures"), ("BW-BroadworksApplicationServer", "bwCustomRingbackGroupVideoGroupFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCustomRingbackServiceGroup = bwAsCustomRingbackServiceGroup.setStatus('current')
bwAsMssGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 79)).setObjects(("BW-BroadworksApplicationServer", "bwNSqueryRequestsTransmitted"), ("BW-BroadworksApplicationServer", "bwNSqueryRequestsRetransmitted"), ("BW-BroadworksApplicationServer", "bwNSqueryCommFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsMssGroup = bwAsMssGroup.setStatus('current')
bwAsNrsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 80)).setObjects(("BW-BroadworksApplicationServer", "bwNbInvalidMessagesReceived"), ("BW-BroadworksApplicationServer", "bwNbRequestsReceived"), ("BW-BroadworksApplicationServer", "bwNbResponsesReceived"), ("BW-BroadworksApplicationServer", "bwNbErrorsReceived"), ("BW-BroadworksApplicationServer", "bwNbRequestsSent"), ("BW-BroadworksApplicationServer", "bwNbResponsesSent"), ("BW-BroadworksApplicationServer", "bwNbErrorsSent"), ("BW-BroadworksApplicationServer", "bwNbRequestsResent"), ("BW-BroadworksApplicationServer", "bwNbResponsesResent"), ("BW-BroadworksApplicationServer", "bwNbRequestsUnanswered"), ("BW-BroadworksApplicationServer", "bwNRSStatsTable"), ("BW-BroadworksApplicationServer", "bwNRSStatsTableIndex"), ("BW-BroadworksApplicationServer", "bwNRSStatsTableProtocolName"), ("BW-BroadworksApplicationServer", "bwNRSStatsTableNbRequestsReceived"), ("BW-BroadworksApplicationServer", "bwNRSStatsTableNbResponsesReceived"), ("BW-BroadworksApplicationServer", "bwNRSStatsTableNbErrorsReceived"), ("BW-BroadworksApplicationServer", "bwNRSStatsTableNbRequestsSent"), ("BW-BroadworksApplicationServer", "bwNRSStatsTableNbResponsesSent"), ("BW-BroadworksApplicationServer", "bwNRSStatsTableNbErrorsSent"), ("BW-BroadworksApplicationServer", "bwNRSStatsTableNbRequestsResent"), ("BW-BroadworksApplicationServer", "bwNRSStatsTableNbResponsesResent"), ("BW-BroadworksApplicationServer", "bwNRSStatsTableNbRequestsUnanswered"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsNrsGroup = bwAsNrsGroup.setStatus('current')
bwAsXsPersistencyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 81)).setObjects(("BW-BroadworksApplicationServer", "perNbOpenedTransactions"), ("BW-BroadworksApplicationServer", "perNbCommittedTransactions"), ("BW-BroadworksApplicationServer", "perNbFailedTransactions"), ("BW-BroadworksApplicationServer", "perNbCriticalErrors"), ("BW-BroadworksApplicationServer", "ttNbConnectionsCreated"), ("BW-BroadworksApplicationServer", "ttConnectionPoolSize"), ("BW-BroadworksApplicationServer", "ttNbBackdoorUpdates"), ("BW-BroadworksApplicationServer", "ttNbFailedCheckpoints"), ("BW-BroadworksApplicationServer", "xsRemoteXlaNbTimesConnected"), ("BW-BroadworksApplicationServer", "xsRemoteXlaNbTimesDisconnected"), ("BW-BroadworksApplicationServer", "xsRemoteXlaUpdatesProcessed"), ("BW-BroadworksApplicationServer", "xsRemoteXlaUpdatesPending"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsXsPersistencyGroup = bwAsXsPersistencyGroup.setStatus('current')
bwAsProtocolMonitorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 82)).setObjects(("BW-BroadworksApplicationServer", "bwPMTNumMonitorsCreated"), ("BW-BroadworksApplicationServer", "bwPMTNumMonitorsOpen"), ("BW-BroadworksApplicationServer", "bwPMTNumLoggerCreated"), ("BW-BroadworksApplicationServer", "bwPMTNumLoggerOpen"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsProtocolMonitorGroup = bwAsProtocolMonitorGroup.setStatus('current')
bwAsSystemStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 83)).setObjects(("BW-BroadworksApplicationServer", "bwSystemName"), ("BW-BroadworksApplicationServer", "bwNumberOfUsers"), ("BW-BroadworksApplicationServer", "bwNumberOfGroups"), ("BW-BroadworksApplicationServer", "bwNumberOfServProv"), ("BW-BroadworksApplicationServer", "bwNumberOfDNDefined"), ("BW-BroadworksApplicationServer", "bwNumberOfDNAssigned"), ("BW-BroadworksApplicationServer", "bwNumberOfDeviceType"), ("BW-BroadworksApplicationServer", "bwNumberOfServiceType"), ("BW-BroadworksApplicationServer", "bwDeviceTypeSystemTable"), ("BW-BroadworksApplicationServer", "bwServiceTypeSystemTable"), ("BW-BroadworksApplicationServer", "bwSystemSPTable"), ("BW-BroadworksApplicationServer", "bwSystemGroupTable"), ("BW-BroadworksApplicationServer", "bwDeviceTypeSystemIndex"), ("BW-BroadworksApplicationServer", "bwDeviceTypeSystemID"), ("BW-BroadworksApplicationServer", "bwNumberOfDeviceTypeSystem"), ("BW-BroadworksApplicationServer", "bwServiceTypeSystemIndex"), ("BW-BroadworksApplicationServer", "bwServiceTypeSystemID"), ("BW-BroadworksApplicationServer", "bwNumberOfServiceTypeAssignedSystem"), ("BW-BroadworksApplicationServer", "bwSystemSPIndex"), ("BW-BroadworksApplicationServer", "bwSystemSPID"), ("BW-BroadworksApplicationServer", "bwSystemSPName"), ("BW-BroadworksApplicationServer", "bwNumberOfSPUsers"), ("BW-BroadworksApplicationServer", "bwNumberOfSPGroups"), ("BW-BroadworksApplicationServer", "bwNumberOfSPDNDefined"), ("BW-BroadworksApplicationServer", "bwNumberOfSPDNAssigned"), ("BW-BroadworksApplicationServer", "bwNumberOfSPDeviceType"), ("BW-BroadworksApplicationServer", "bwSystemGroupIndex"), ("BW-BroadworksApplicationServer", "bwSystemGroupSPID"), ("BW-BroadworksApplicationServer", "bwSystemGroupID"), ("BW-BroadworksApplicationServer", "bwSystemGroupName"), ("BW-BroadworksApplicationServer", "bwNumberOfGroupUsers"), ("BW-BroadworksApplicationServer", "bwNumberOfGroupDNDefined"), ("BW-BroadworksApplicationServer", "bwNumberOfGroupDNAssigned"), ("BW-BroadworksApplicationServer", "bwNumberOfGroupDeviceType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsSystemStatsGroup = bwAsSystemStatsGroup.setStatus('current')
bwAsQueueStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 84)).setObjects(("BW-BroadworksApplicationServer", "bySystemInternalQueueResets"), ("BW-BroadworksApplicationServer", "bwSystemInternalQueueTable"), ("BW-BroadworksApplicationServer", "bwSystemInternalQueueIndex"), ("BW-BroadworksApplicationServer", "bwSystemInternalQueueName"), ("BW-BroadworksApplicationServer", "bwSystemInternalQueueSize"), ("BW-BroadworksApplicationServer", "bwSystemInternalQueueTimeAvg"), ("BW-BroadworksApplicationServer", "bwSystemInternalQueueTimeMin"), ("BW-BroadworksApplicationServer", "bwSystemInternalQueueTimeMax"), ("BW-BroadworksApplicationServer", "bwSystemInternalQueueTimeMaxTimestampMSB"), ("BW-BroadworksApplicationServer", "bwSystemInternalQueueLengthCurrent"), ("BW-BroadworksApplicationServer", "bwSystemInternalQueueLengthAvg"), ("BW-BroadworksApplicationServer", "bwSystemInternalQueueLengthMax"), ("BW-BroadworksApplicationServer", "bwSystemInternalQueueLengthMaxTimestampMSB"), ("BW-BroadworksApplicationServer", "bwSystemInternalQueueLengthMaxTimestampLSB"), ("BW-BroadworksApplicationServer", "bwSystemInternalQueueTimeMaxTimestampLSB"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsQueueStatsGroup = bwAsQueueStatsGroup.setStatus('current')
bwAsOverloadControlStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 85)).setObjects(("BW-BroadworksApplicationServer", "bwCurrentOverloadZone"), ("BW-BroadworksApplicationServer", "bwNumYellowZoneOverloadTrans"), ("BW-BroadworksApplicationServer", "bwNumRedZoneOverloadTrans"), ("BW-BroadworksApplicationServer", "bwCurrentCallOverloadZone"), ("BW-BroadworksApplicationServer", "bwNumCallYellowZoneOverloadTrans"), ("BW-BroadworksApplicationServer", "bwNumCallRedZoneOverloadTrans"), ("BW-BroadworksApplicationServer", "bwCurrentNonCallOverloadZone"), ("BW-BroadworksApplicationServer", "bwNumNonCallYellowZoneOverloadTrans"), ("BW-BroadworksApplicationServer", "bwNumNonCallRedZoneOverloadTrans"), ("BW-BroadworksApplicationServer", "bwNumDiscardedMessage"), ("BW-BroadworksApplicationServer", "bwTimeLastDiscardedMessage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsOverloadControlStatsGroup = bwAsOverloadControlStatsGroup.setStatus('current')
bwAsRedundancyStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 86)).setObjects(("BW-BroadworksApplicationServer", "nbOfMigratedUsers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsRedundancyStatsGroup = bwAsRedundancyStatsGroup.setStatus('current')
bwAsPsPersistencyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 87)).setObjects(("BW-BroadworksApplicationServer", "psPerNbOpenedTransactions"), ("BW-BroadworksApplicationServer", "psPerNbCommittedTransactions"), ("BW-BroadworksApplicationServer", "psPerNbFailedTransactions"), ("BW-BroadworksApplicationServer", "psPerNbCriticalErrors"), ("BW-BroadworksApplicationServer", "psTtNbConnectionsCreated"), ("BW-BroadworksApplicationServer", "psTtConnectionPoolSize"), ("BW-BroadworksApplicationServer", "psTtNbBackdoorUpdates"), ("BW-BroadworksApplicationServer", "psTtNbFailedCheckpoints"), ("BW-BroadworksApplicationServer", "psRemoteXlaNbTimesConnected"), ("BW-BroadworksApplicationServer", "psRemoteXlaNbTimesDisconnected"), ("BW-BroadworksApplicationServer", "psRemoteXlaUpdatesProcessed"), ("BW-BroadworksApplicationServer", "psRemoteXlaUpdatesPending"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsPsPersistencyGroup = bwAsPsPersistencyGroup.setStatus('current')
bwAsPsExtCallLogsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 88)).setObjects(("BW-BroadworksApplicationServer", "bwExternalCallLogsRetrievalAttempts"), ("BW-BroadworksApplicationServer", "bwExternalCallLogsRetrievalFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsPsExtCallLogsGroup = bwAsPsExtCallLogsGroup.setStatus('current')
bwAsPsOciGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 89)).setObjects(("BW-BroadworksApplicationServer", "psOciStatsNbUpdateRequests"), ("BW-BroadworksApplicationServer", "psOciStatsNbUpdateRequestFailures"), ("BW-BroadworksApplicationServer", "psOciStatsNbQueryRequests"), ("BW-BroadworksApplicationServer", "psOciStatsNbQueryRequestFailures"), ("BW-BroadworksApplicationServer", "psOciStatsNbAuthorizationRequests"), ("BW-BroadworksApplicationServer", "psOciStatsNbAuthorizationRequestFailures"), ("BW-BroadworksApplicationServer", "psOciStatsNbReportingAclViolations"), ("BW-BroadworksApplicationServer", "psOciStatsNbReportNotificationsOut"), ("BW-BroadworksApplicationServer", "psOciStatsActiveSessions"), ("BW-BroadworksApplicationServer", "psOciStatsSystemRequestsPerHour"), ("BW-BroadworksApplicationServer", "psOciStatsSystemRequestResponseTime"), ("BW-BroadworksApplicationServer", "psOciStatsMinSystemRequestResponseTime"), ("BW-BroadworksApplicationServer", "psOciStatsMaxSystemRequestResponseTime"), ("BW-BroadworksApplicationServer", "psOciStatsMaxSystemRequestName"), ("BW-BroadworksApplicationServer", "psOciStatsServiceProviderRequestsPerHour"), ("BW-BroadworksApplicationServer", "psOciStatsServiceProviderRequestResponseTime"), ("BW-BroadworksApplicationServer", "psOciStatsMinServiceProviderRequestResponseTime"), ("BW-BroadworksApplicationServer", "psOciStatsMaxServiceProviderRequestResponseTime"), ("BW-BroadworksApplicationServer", "psOciStatsMaxServiceProviderRequestName"), ("BW-BroadworksApplicationServer", "psOciStatsGroupRequestsPerHour"), ("BW-BroadworksApplicationServer", "psOciStatsGroupRequestResponseTime"), ("BW-BroadworksApplicationServer", "psOciStatsMinGroupRequestResponseTime"), ("BW-BroadworksApplicationServer", "psOciStatsMaxGroupRequestResponseTime"), ("BW-BroadworksApplicationServer", "psOciStatsMaxGroupRequestName"), ("BW-BroadworksApplicationServer", "psOciStatsUserRequestsPerHour"), ("BW-BroadworksApplicationServer", "psOciStatsUserRequestResponseTime"), ("BW-BroadworksApplicationServer", "psOciStatsMinUserRequestResponseTime"), ("BW-BroadworksApplicationServer", "psOciStatsMaxUserRequestResponseTime"), ("BW-BroadworksApplicationServer", "psOciStatsMaxUserRequestName"), ("BW-BroadworksApplicationServer", "psOciStatsRequestsPerHour"), ("BW-BroadworksApplicationServer", "psOciStatsRequestResponseTime"), ("BW-BroadworksApplicationServer", "psOciStatsMinRequestResponseTime"), ("BW-BroadworksApplicationServer", "psOciStatsMaxRequestResponseTime"), ("BW-BroadworksApplicationServer", "psOciStatsMaxRequestName"), ("BW-BroadworksApplicationServer", "psOCIReportingBackLogMessageTable"), ("BW-BroadworksApplicationServer", "psOCIReportingBackLogMessageIndex"), ("BW-BroadworksApplicationServer", "psOCIReportingBackLogMessageHost"), ("BW-BroadworksApplicationServer", "psOCIReportingBackLogMessageSaved"), ("BW-BroadworksApplicationServer", "psOCIReportingBackLogMessageSent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsPsOciGroup = bwAsPsOciGroup.setStatus('current')
bwAsPsQueueStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 90)).setObjects(("BW-BroadworksApplicationServer", "psSystemInternalQueueResets"), ("BW-BroadworksApplicationServer", "psSystemInternalQueueTable"), ("BW-BroadworksApplicationServer", "psSystemInternalQueueIndex"), ("BW-BroadworksApplicationServer", "psSystemInternalQueueName"), ("BW-BroadworksApplicationServer", "psSystemInternalQueueSize"), ("BW-BroadworksApplicationServer", "psSystemInternalQueueTimeAvg"), ("BW-BroadworksApplicationServer", "psSystemInternalQueueTimeMin"), ("BW-BroadworksApplicationServer", "psSystemInternalQueueTimeMax"), ("BW-BroadworksApplicationServer", "psSystemInternalQueueTimeMaxTimestampMSB"), ("BW-BroadworksApplicationServer", "psSystemInternalQueueLengthCurrent"), ("BW-BroadworksApplicationServer", "psSystemInternalQueueLengthAvg"), ("BW-BroadworksApplicationServer", "psSystemInternalQueueLengthMax"), ("BW-BroadworksApplicationServer", "psSystemInternalQueueLengthMaxTimestampMSB"), ("BW-BroadworksApplicationServer", "psSystemInternalQueueLengthMaxTimestampLSB"), ("BW-BroadworksApplicationServer", "psSystemInternalQueueTimeMaxTimestampLSB"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsPsQueueStatsGroup = bwAsPsQueueStatsGroup.setStatus('current')
bwAsPsLdapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 91)).setObjects(("BW-BroadworksApplicationServer", "bwLDAPIntegrationNumQueryAttempts"), ("BW-BroadworksApplicationServer", "bwLDAPIntegrationNumConnectionFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsPsLdapGroup = bwAsPsLdapGroup.setStatus('current')
bwAsPsBcctGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 92)).setObjects(("BW-BroadworksApplicationServer", "bwCommonCommPSStatsTable"), ("BW-BroadworksApplicationServer", "bwCommonCommPSStatsIndex"), ("BW-BroadworksApplicationServer", "bwCommonCommPSHost"), ("BW-BroadworksApplicationServer", "bwCommonCommPSInterface"), ("BW-BroadworksApplicationServer", "bwCommonCommPSProtocol"), ("BW-BroadworksApplicationServer", "bwCommonCommPSAcceptedOutboundConnections"), ("BW-BroadworksApplicationServer", "bwCommonCommPSAcceptedInboundConnections"), ("BW-BroadworksApplicationServer", "bwCommonCommPSRejectedOutboundConnections"), ("BW-BroadworksApplicationServer", "bwCommonCommPSRejectedInboundConnections"), ("BW-BroadworksApplicationServer", "bwCommonCommPSOutputMessagesProcessed"), ("BW-BroadworksApplicationServer", "bwCommonCommPSInputMessagesProcessed"), ("BW-BroadworksApplicationServer", "bwCommonCommPSOutputCommunicationErrors"), ("BW-BroadworksApplicationServer", "bwCommonCommPSInputCommunicationErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsPsBcctGroup = bwAsPsBcctGroup.setStatus('current')
bwAsMoCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 93)).setObjects(("BW-BroadworksApplicationServer", "resetAllCounters"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsMoCountersGroup = bwAsMoCountersGroup.setStatus('current')
bwAsReservedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 94)).setObjects(("BW-BroadworksApplicationServer", "psReservedCounter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsReservedGroup = bwAsReservedGroup.setStatus('current')
bwAsPhysicalLocationServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 95)).setObjects(("BW-BroadworksApplicationServer", "bwPhysicalLocationOriginationBlocked"), ("BW-BroadworksApplicationServer", "bwPhysicalLocationSPTable"), ("BW-BroadworksApplicationServer", "bwPhysicalLocationGroupTable"), ("BW-BroadworksApplicationServer", "bwPhysicalLocationSPIndex"), ("BW-BroadworksApplicationServer", "bwPhysicalLocationSPID"), ("BW-BroadworksApplicationServer", "bwPhysicalLocationSPOriginationBlocked"), ("BW-BroadworksApplicationServer", "bwPhysicalLocationGroupIndex"), ("BW-BroadworksApplicationServer", "bwPhysicalLocationGroupID"), ("BW-BroadworksApplicationServer", "bwPhysicalLocationGroupOriginationBlocked"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsPhysicalLocationServiceGroup = bwAsPhysicalLocationServiceGroup.setStatus('current')
bwAsFaxMessagingServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 96)).setObjects(("BW-BroadworksApplicationServer", "bwFaxMessagingReceived"), ("BW-BroadworksApplicationServer", "bwFaxMessagingReceptionFailure"), ("BW-BroadworksApplicationServer", "bwFaxMessagingPrinted"), ("BW-BroadworksApplicationServer", "bwFaxMessagingPrintingFailure"), ("BW-BroadworksApplicationServer", "bwFaxMessagingSPTable"), ("BW-BroadworksApplicationServer", "bwFaxMessagingGroupTable"), ("BW-BroadworksApplicationServer", "bwFaxMessagingSPIndex"), ("BW-BroadworksApplicationServer", "bwFaxMessagingSPID"), ("BW-BroadworksApplicationServer", "bwFaxMessagingSPReceived"), ("BW-BroadworksApplicationServer", "bwFaxMessagingSPReceptionFailure"), ("BW-BroadworksApplicationServer", "bwFaxMessagingSPPrinted"), ("BW-BroadworksApplicationServer", "bwFaxMessagingSPPrintingFailure"), ("BW-BroadworksApplicationServer", "bwFaxMessagingGroupIndex"), ("BW-BroadworksApplicationServer", "bwFaxMessagingGroupID"), ("BW-BroadworksApplicationServer", "bwFaxMessagingGroupReceived"), ("BW-BroadworksApplicationServer", "bwFaxMessagingGroupReceptionFailure"), ("BW-BroadworksApplicationServer", "bwFaxMessagingGroupPrinted"), ("BW-BroadworksApplicationServer", "bwFaxMessagingGroupPrintingFailure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsFaxMessagingServiceGroup = bwAsFaxMessagingServiceGroup.setStatus('current')
bwPSTcpStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 97)).setObjects(("BW-BroadworksApplicationServer", "bwPSTcpServersStatsTable"), ("BW-BroadworksApplicationServer", "bwPSTcpServersStatsIndex"), ("BW-BroadworksApplicationServer", "bwPSTcpServersName"), ("BW-BroadworksApplicationServer", "bwPSTcpServersNbConnectionsAccepted"), ("BW-BroadworksApplicationServer", "bwPSTcpServersNbConnectionsClosed"), ("BW-BroadworksApplicationServer", "bwPSTcpServersOutgoingQueueSize"), ("BW-BroadworksApplicationServer", "bwPSTcpServersIncomingQueueSize"), ("BW-BroadworksApplicationServer", "bwPSTcpServersNbBytesSentSecure"), ("BW-BroadworksApplicationServer", "bwPSTcpServersNbBytesReceivedSecure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwPSTcpStatsGroup = bwPSTcpStatsGroup.setStatus('current')
bwXSTcpStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 98)).setObjects(("BW-BroadworksApplicationServer", "bwXSTcpServersStatsTable"), ("BW-BroadworksApplicationServer", "bwXSTcpServersStatsIndex"), ("BW-BroadworksApplicationServer", "bwXSTcpServersName"), ("BW-BroadworksApplicationServer", "bwXSTcpServersNbConnectionsAccepted"), ("BW-BroadworksApplicationServer", "bwXSTcpServersNbConnectionsClosed"), ("BW-BroadworksApplicationServer", "bwXSTcpServersOutgoingQueueSize"), ("BW-BroadworksApplicationServer", "bwXSTcpServersIncomingQueueSize"), ("BW-BroadworksApplicationServer", "bwXSTcpServersNbBytesSentSecure"), ("BW-BroadworksApplicationServer", "bwXSTcpServersNbBytesReceivedSecure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwXSTcpStatsGroup = bwXSTcpStatsGroup.setStatus('current')
bwPSConcurrentFrameworkStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 99)).setObjects(("BW-BroadworksApplicationServer", "bwPSMonitoringExecutorTable"), ("BW-BroadworksApplicationServer", "bwPSMonitoringExecutorIndex"), ("BW-BroadworksApplicationServer", "bwPSMonitoringExecutorName"), ("BW-BroadworksApplicationServer", "bwPSMonitoringExecutorCurrentPoolSize"), ("BW-BroadworksApplicationServer", "bwPSMonitoringExecutorMaxPoolSize"), ("BW-BroadworksApplicationServer", "bwPSMonitoringExecutorAvgActiveThreads"), ("BW-BroadworksApplicationServer", "bwPSMonitoringExecutorTaskQueueSize"), ("BW-BroadworksApplicationServer", "bwPSMonitoringExecutorNbTasksRun"), ("BW-BroadworksApplicationServer", "bwPSMonitoringExecutorNbWarnings"), ("BW-BroadworksApplicationServer", "bwPSMonitoringExecutorNbErrors"), ("BW-BroadworksApplicationServer", "bwPSMonitoringExecutorLongestTaskMs"), ("BW-BroadworksApplicationServer", "bwPSMonitoringExecutorLongestTaskName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwPSConcurrentFrameworkStatsGroup = bwPSConcurrentFrameworkStatsGroup.setStatus('current')
bwXSConcurrentFrameworkStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 100)).setObjects(("BW-BroadworksApplicationServer", "bwXSMonitoringExecutorTable"), ("BW-BroadworksApplicationServer", "bwXSMonitoringExecutorIndex"), ("BW-BroadworksApplicationServer", "bwXSMonitoringExecutorName"), ("BW-BroadworksApplicationServer", "bwXSMonitoringExecutorCurrentPoolSize"), ("BW-BroadworksApplicationServer", "bwXSMonitoringExecutorMaxPoolSize"), ("BW-BroadworksApplicationServer", "bwXSMonitoringExecutorAvgActiveThreads"), ("BW-BroadworksApplicationServer", "bwXSMonitoringExecutorTaskQueueSize"), ("BW-BroadworksApplicationServer", "bwXSMonitoringExecutorNbTasksRun"), ("BW-BroadworksApplicationServer", "bwXSMonitoringExecutorNbWarnings"), ("BW-BroadworksApplicationServer", "bwXSMonitoringExecutorNbErrors"), ("BW-BroadworksApplicationServer", "bwXSMonitoringExecutorLongestTaskMs"), ("BW-BroadworksApplicationServer", "bwXSMonitoringExecutorLongestTaskName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwXSConcurrentFrameworkStatsGroup = bwXSConcurrentFrameworkStatsGroup.setStatus('current')
bwAsExtEmergencyRtgStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 101)).setObjects(("BW-BroadworksApplicationServer", "bwExtEmergencyRtgQuerySent"), ("BW-BroadworksApplicationServer", "bwExtEmergencyRtgQueryFailure"), ("BW-BroadworksApplicationServer", "bwExtEmergencyRtgENServerTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsExtEmergencyRtgStatsGroup = bwAsExtEmergencyRtgStatsGroup.setStatus('current')
bwAsSoapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 103)).setObjects(("BW-BroadworksApplicationServer", "bwSOAPMaxSessions"), ("BW-BroadworksApplicationServer", "bwSOAPAvgSessions"), ("BW-BroadworksApplicationServer", "bwSOAPMaxThreads"), ("BW-BroadworksApplicationServer", "bwSOAPAvgThreads"), ("BW-BroadworksApplicationServer", "bwSOAPMaxServiceTime"), ("BW-BroadworksApplicationServer", "bwSOAPAvgServiceTime"), ("BW-BroadworksApplicationServer", "bwSOAPNumDroppedRequests"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsSoapGroup = bwAsSoapGroup.setStatus('current')
bwAsTwoStageDialingServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 102)).setObjects(("BW-BroadworksApplicationServer", "bwTwoStageDialingInvocation"), ("BW-BroadworksApplicationServer", "bwTwoStageDialingSPTable"), ("BW-BroadworksApplicationServer", "bwTwoStageDialingSPIndex"), ("BW-BroadworksApplicationServer", "bwTwoStageDialingSPID"), ("BW-BroadworksApplicationServer", "bwTwoStageDialingSPInvocation"), ("BW-BroadworksApplicationServer", "bwTwoStageDialingGroupTable"), ("BW-BroadworksApplicationServer", "bwTwoStageDialingGroupIndex"), ("BW-BroadworksApplicationServer", "bwTwoStageDialingGroupID"), ("BW-BroadworksApplicationServer", "bwTwoStageDialingGroupInvocation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsTwoStageDialingServiceGroup = bwAsTwoStageDialingServiceGroup.setStatus('current')
bwAsActivatableFeatureGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 104)).setObjects(("BW-BroadworksApplicationServer", "bwActivatableFeatureTable"), ("BW-BroadworksApplicationServer", "bwActivatableFeatureEntry"), ("BW-BroadworksApplicationServer", "bwActivatableFeatureIndex"), ("BW-BroadworksApplicationServer", "bwActivatableFeatureId"), ("BW-BroadworksApplicationServer", "bwActivatableFeatureDescription"), ("BW-BroadworksApplicationServer", "bwActivatableFeatureActivated"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsActivatableFeatureGroup = bwAsActivatableFeatureGroup.setStatus('current')
bwAsCallForwardingNotReachableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 105)).setObjects(("BW-BroadworksApplicationServer", "bwCFNRcNumForwarded"), ("BW-BroadworksApplicationServer", "bwCFNRcNumPhoneActivations"), ("BW-BroadworksApplicationServer", "bwCFNRcNumPhoneDeactivations"), ("BW-BroadworksApplicationServer", "bwCFNRcDestinationChanged"), ("BW-BroadworksApplicationServer", "bwCallForwardingNotReachableSPTable"), ("BW-BroadworksApplicationServer", "bwCallForwardingNotReachableGroupTable"), ("BW-BroadworksApplicationServer", "bwCFNRcSPIndex"), ("BW-BroadworksApplicationServer", "bwCFNRcSPID"), ("BW-BroadworksApplicationServer", "bwCFNRcSPNumForwarded"), ("BW-BroadworksApplicationServer", "bwCFNRcSPNumPhoneActivations"), ("BW-BroadworksApplicationServer", "bwCFNRcSPNumPhoneDeactivations"), ("BW-BroadworksApplicationServer", "bwCFNRcSPDestinationChanged"), ("BW-BroadworksApplicationServer", "bwCFNRcGroupIndex"), ("BW-BroadworksApplicationServer", "bwCFNRcGroupID"), ("BW-BroadworksApplicationServer", "bwCFNRcGroupNumForwarded"), ("BW-BroadworksApplicationServer", "bwCFNRcGroupNumPhoneActivations"), ("BW-BroadworksApplicationServer", "bwCFNRcGroupNumPhoneDeactivations"), ("BW-BroadworksApplicationServer", "bwCFNRcGroupDestinationChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsCallForwardingNotReachableGroup = bwAsCallForwardingNotReachableGroup.setStatus('current')
bwMWIDeliveryToMobileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 106)).setObjects(("BW-BroadworksApplicationServer", "bwMWISMSSent"), ("BW-BroadworksApplicationServer", "bwMWIDeliveryToMobileSPTable"), ("BW-BroadworksApplicationServer", "bwMWISPIndex"), ("BW-BroadworksApplicationServer", "bwMWISPID"), ("BW-BroadworksApplicationServer", "bwSPMWISMSSent"), ("BW-BroadworksApplicationServer", "bwMWIDeliveryToMobileGroupTable"), ("BW-BroadworksApplicationServer", "bwMWIGroupIndex"), ("BW-BroadworksApplicationServer", "bwMWIGroupID"), ("BW-BroadworksApplicationServer", "bwGroupMWISMSSent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwMWIDeliveryToMobileGroup = bwMWIDeliveryToMobileGroup.setStatus('current')
bwSharedCallAppearanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 107)).setObjects(("BW-BroadworksApplicationServer", "bwSCASPTable"), ("BW-BroadworksApplicationServer", "bwSCAGroupTable"), ("BW-BroadworksApplicationServer", "bwSCACallRetrieveSuccess"), ("BW-BroadworksApplicationServer", "bwSCALocationControlActivationSuccess"), ("BW-BroadworksApplicationServer", "bwSCALocationControlDeactivationSuccess"), ("BW-BroadworksApplicationServer", "bwSCASPIndex"), ("BW-BroadworksApplicationServer", "bwSCASPIndex"), ("BW-BroadworksApplicationServer", "bwSCASPCallRetrieveSuccess"), ("BW-BroadworksApplicationServer", "bwSCASPLocationControlActivationSuccess"), ("BW-BroadworksApplicationServer", "bwSCASPLocationControlDeactivationSuccess"), ("BW-BroadworksApplicationServer", "bwSCAGroupIndex"), ("BW-BroadworksApplicationServer", "bwSCAGroupID"), ("BW-BroadworksApplicationServer", "bwSCAGroupCallRetrieveSuccess"), ("BW-BroadworksApplicationServer", "bwSCAGroupLocationControlActivationSuccess"), ("BW-BroadworksApplicationServer", "bwSCAGroupLocationControlDeactivationSuccess"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwSharedCallAppearanceGroup = bwSharedCallAppearanceGroup.setStatus('current')
bwExternalCustomRingbackGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 109)).setObjects(("BW-BroadworksApplicationServer", "bwExternalCustomRingbackAttempts"), ("BW-BroadworksApplicationServer", "bwExternalCustomRingbackFailures"), ("BW-BroadworksApplicationServer", "bwExternalCustomRingbackSPTable"), ("BW-BroadworksApplicationServer", "bwExternalCustomRingbackGroupTable"), ("BW-BroadworksApplicationServer", "bwExternalCustomRingbackSPEntry"), ("BW-BroadworksApplicationServer", "bwExternalCustomRingbackSPIndex"), ("BW-BroadworksApplicationServer", "bwExternalCustomRingbackSPID"), ("BW-BroadworksApplicationServer", "bwExternalCustomRingbackSPAttempts"), ("BW-BroadworksApplicationServer", "bwExternalCustomRingbackSPFailures"), ("BW-BroadworksApplicationServer", "bwExternalCustomRingbackGroupEntry"), ("BW-BroadworksApplicationServer", "bwExternalCustomRingbackGroupIndex"), ("BW-BroadworksApplicationServer", "bwExternalCustomRingbackGroupID"), ("BW-BroadworksApplicationServer", "bwExternalCustomRingbackGroupAttempts"), ("BW-BroadworksApplicationServer", "bwExternalCustomRingbackGroupFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwExternalCustomRingbackGroup = bwExternalCustomRingbackGroup.setStatus('current')
bwAsInCallServiceActivationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 110)).setObjects(("BW-BroadworksApplicationServer", "bwICSAMonitoringStarted"), ("BW-BroadworksApplicationServer", "bwICSAMonitoringFailure"), ("BW-BroadworksApplicationServer", "bwICSAFlashDigitsDetected"), ("BW-BroadworksApplicationServer", "bwInCallServiceActivationSPTable"), ("BW-BroadworksApplicationServer", "bwInCallServiceActivationGroupTable"), ("BW-BroadworksApplicationServer", "bwICSASPIndex"), ("BW-BroadworksApplicationServer", "bwICSASPID"), ("BW-BroadworksApplicationServer", "bwICSASPMonitoringStarted"), ("BW-BroadworksApplicationServer", "bwICSASPMonitoringFailure"), ("BW-BroadworksApplicationServer", "bwICSASPFlashDigitsDetected"), ("BW-BroadworksApplicationServer", "bwICSAGroupIndex"), ("BW-BroadworksApplicationServer", "bwICSAGroupID"), ("BW-BroadworksApplicationServer", "bwICSAGroupMonitoringStarted"), ("BW-BroadworksApplicationServer", "bwICSAGroupMonitoringFailure"), ("BW-BroadworksApplicationServer", "bwICSAGroupFlashDigitsDetected"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsInCallServiceActivationGroup = bwAsInCallServiceActivationGroup.setStatus('current')
bwCongestionManagementGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 111)).setObjects(("BW-BroadworksApplicationServer", "bwCongestionManagementNeighborTable"), ("BW-BroadworksApplicationServer", "bwCongestionManagementNeighborIndex"), ("BW-BroadworksApplicationServer", "bwCongestionManagementNeighborIpAddress"), ("BW-BroadworksApplicationServer", "bwCongestionManagementNeighborInviteIn"), ("BW-BroadworksApplicationServer", "bwCongestionManagementNeighborInviteOut"), ("BW-BroadworksApplicationServer", "bwCongestionManagementNeighborRegisterIn"), ("BW-BroadworksApplicationServer", "bwCongestionManagementNeighborOptionsIn"), ("BW-BroadworksApplicationServer", "bwCongestionManagementNeighborOptionsOut"), ("BW-BroadworksApplicationServer", "bwCongestionManagementNeighborSubscribeNotifyIn"), ("BW-BroadworksApplicationServer", "bwCongestionManagementNeighborSubscribeNotifyOut"), ("BW-BroadworksApplicationServer", "bwCongestionManagementNeighbor5xxIn"), ("BW-BroadworksApplicationServer", "bwCongestionManagementNeighborCallpMessageInRate"), ("BW-BroadworksApplicationServer", "bwCongestionManagementNeighborCallpMessageOutRate"), ("BW-BroadworksApplicationServer", "bwCongestionManagementNeighborCallpRequestInRate"), ("BW-BroadworksApplicationServer", "bwCongestionManagementNeighborNonCallpMessageInRate"), ("BW-BroadworksApplicationServer", "bwCongestionManagementNeighborNonCallpMessageOutRate"), ("BW-BroadworksApplicationServer", "bwCongestionManagementNeighborNonCallpRequestInRate"), ("BW-BroadworksApplicationServer", "bwCongestionManagementNeighborState"), ("BW-BroadworksApplicationServer", "bwCongestionManagementNeighborCapability"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwCongestionManagementGroup = bwCongestionManagementGroup.setStatus('current')
bwShInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 112)).setObjects(("BW-BroadworksApplicationServer", "bwShInterfaceRequestsIn"), ("BW-BroadworksApplicationServer", "bwShInterfaceRequestsOut"), ("BW-BroadworksApplicationServer", "bwShInterfaceResponsesIn"), ("BW-BroadworksApplicationServer", "bwShInterfaceResponsesOut"), ("BW-BroadworksApplicationServer", "bwShInterfaceRequestTimeout"), ("BW-BroadworksApplicationServer", "bwShInterfaceRequestResourceLimitation"), ("BW-BroadworksApplicationServer", "bwShInterfaceUserDataRequest"), ("BW-BroadworksApplicationServer", "bwShInterfaceUserDataRequestFailure"), ("BW-BroadworksApplicationServer", "bwShInterfaceSubscribeNotificationsRequest"), ("BW-BroadworksApplicationServer", "bwShInterfaceSubscribeNotificationsRequestFailure"), ("BW-BroadworksApplicationServer", "bwShInterfacePushNotificationRequest"), ("BW-BroadworksApplicationServer", "bwShInterfacePushNotificationRequestFailure"), ("BW-BroadworksApplicationServer", "bwShInterfacePublicIdentityRefreshInitiated"), ("BW-BroadworksApplicationServer", "bwShInterfacePublicIdentityRefreshFailure"), ("BW-BroadworksApplicationServer", "bwShInterfaceSystemRefreshInitiated"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwShInterfaceGroup = bwShInterfaceGroup.setStatus('current')
bwDnsQueryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 113)).setObjects(("BW-BroadworksApplicationServer", "bwDnsQueryTimeMax"), ("BW-BroadworksApplicationServer", "bwDnsQueryTimeMaxTimestampMSB"), ("BW-BroadworksApplicationServer", "bwDnsQueryTimeMaxTimestampLSB"), ("BW-BroadworksApplicationServer", "bwDnsQueryTimeAvg"), ("BW-BroadworksApplicationServer", "bwDnsStatsQueriesTable"), ("BW-BroadworksApplicationServer", "bwDnsStatsQueriesEntry"), ("BW-BroadworksApplicationServer", "bwDnsStatsQueryIndex"), ("BW-BroadworksApplicationServer", "bwDnsStatsQueryType"), ("BW-BroadworksApplicationServer", "bwDnsStatsQueries"), ("BW-BroadworksApplicationServer", "bwDnsStatsQueryTimeouts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwDnsQueryGroup = bwDnsQueryGroup.setStatus('current')
bwAsExpensiveCallNotificationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 114)).setObjects(("BW-BroadworksApplicationServer", "bwECNWarningAnnouncementAttempts"), ("BW-BroadworksApplicationServer", "bwECNExpensiveCallReleased"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsExpensiveCallNotificationGroup = bwAsExpensiveCallNotificationGroup.setStatus('current')
bwLocationControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 115)).setObjects(("BW-BroadworksApplicationServer", "bwLocationControlSPTable"), ("BW-BroadworksApplicationServer", "bwLocationControlGroupTable"), ("BW-BroadworksApplicationServer", "bwLocationControlActivationSuccess"), ("BW-BroadworksApplicationServer", "bwLocationControlDeactivationSuccess"), ("BW-BroadworksApplicationServer", "bwLocationControlSPEntry"), ("BW-BroadworksApplicationServer", "bwLocationControlSPIndex"), ("BW-BroadworksApplicationServer", "bwLocationControlSPID"), ("BW-BroadworksApplicationServer", "bwLocationControlSPActivationSuccess"), ("BW-BroadworksApplicationServer", "bwLocationControlSPDeactivationSuccess"), ("BW-BroadworksApplicationServer", "bwLocationControlGroupEntry"), ("BW-BroadworksApplicationServer", "bwLocationControlGroupIndex"), ("BW-BroadworksApplicationServer", "bwLocationControlGroupID"), ("BW-BroadworksApplicationServer", "bwLocationControlGroupActivationSuccess"), ("BW-BroadworksApplicationServer", "bwLocationControlGroupDeactivationSuccess"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwLocationControlGroup = bwLocationControlGroup.setStatus('current')
bwCallRetrieveGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 116)).setObjects(("BW-BroadworksApplicationServer", "bwCallRetrieveSPTable"), ("BW-BroadworksApplicationServer", "bwCallRetrieveGroupTable"), ("BW-BroadworksApplicationServer", "bwCallRetrieveSuccess"), ("BW-BroadworksApplicationServer", "bwCallRetrieveSPEntry"), ("BW-BroadworksApplicationServer", "bwCallRetrieveSPIndex"), ("BW-BroadworksApplicationServer", "bwCallRetrieveSPID"), ("BW-BroadworksApplicationServer", "bwCallRetrieveSPSuccess"), ("BW-BroadworksApplicationServer", "bwCallRetrieveGroupEntry"), ("BW-BroadworksApplicationServer", "bwCallRetrieveGroupIndex"), ("BW-BroadworksApplicationServer", "bwCallRetrieveGroupID"), ("BW-BroadworksApplicationServer", "bwCallRetrieveGroupSuccess"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwCallRetrieveGroup = bwCallRetrieveGroup.setStatus('current')
bwBroadworksAnywhereGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 117)).setObjects(("BW-BroadworksApplicationServer", "bwBroadWorksAnywhereSPTable"), ("BW-BroadworksApplicationServer", "bwBroadWorksAnywhereGroupTable"), ("BW-BroadworksApplicationServer", "bwBACallOriginations"), ("BW-BroadworksApplicationServer", "bwBACallTerminations"), ("BW-BroadworksApplicationServer", "bwBroadWorksAnywhereSPEntry"), ("BW-BroadworksApplicationServer", "bwBroadWorksAnywhereSPIndex"), ("BW-BroadworksApplicationServer", "bwBroadWorksAnywhereSPID"), ("BW-BroadworksApplicationServer", "bwBASPCallOriginations"), ("BW-BroadworksApplicationServer", "bwBASPCallTerminations"), ("BW-BroadworksApplicationServer", "bwBroadWorksAnywhereGroupEntry"), ("BW-BroadworksApplicationServer", "bwBroadWorksAnywhereGroupIndex"), ("BW-BroadworksApplicationServer", "bwBroadWorksAnywhereGroupID"), ("BW-BroadworksApplicationServer", "bwBAGroupCallOriginations"), ("BW-BroadworksApplicationServer", "bwBAGroupCallTerminations"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwBroadworksAnywhereGroup = bwBroadworksAnywhereGroup.setStatus('current')
psVoiceMessagingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 121)).setObjects(("BW-BroadworksApplicationServer", "psBwVMRNumLoginAttempts"), ("BW-BroadworksApplicationServer", "psBwVMRNumLoginFailures"), ("BW-BroadworksApplicationServer", "psBwVMRSPIndex"), ("BW-BroadworksApplicationServer", "psBwVMRSPID"), ("BW-BroadworksApplicationServer", "psBwVMRSPNumLoginAttempts"), ("BW-BroadworksApplicationServer", "psBwVMRSPNumLoginFailures"), ("BW-BroadworksApplicationServer", "psBwVMRGroupIndex"), ("BW-BroadworksApplicationServer", "psBwVMRGroupID"), ("BW-BroadworksApplicationServer", "psBwVMRGroupNumLoginAttempts"), ("BW-BroadworksApplicationServer", "psBwVMRGroupNumLoginFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    psVoiceMessagingGroup = psVoiceMessagingGroup.setStatus('current')
psPolycomPhoneServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 1, 122)).setObjects(("BW-BroadworksApplicationServer", "bwPolycomPhoneDirectoryNumDownloads"), ("BW-BroadworksApplicationServer", "polycomSPIndex"), ("BW-BroadworksApplicationServer", "polycomSPID"), ("BW-BroadworksApplicationServer", "bwPolycomPhoneDirectorySPNumDownloads"), ("BW-BroadworksApplicationServer", "polycomGroupIndex"), ("BW-BroadworksApplicationServer", "polycomGroupID"), ("BW-BroadworksApplicationServer", "bwPolycomPhoneDirectoryGroupNumDownloads"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    psPolycomPhoneServiceGroup = psPolycomPhoneServiceGroup.setStatus('current')
bwAsBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6431, 1, 2, 1000, 2, 1)).setObjects(("BW-BroadworksApplicationServer", "bwAsMgcpGroup"), ("BW-BroadworksApplicationServer", "bwAsMcpGroup"), ("BW-BroadworksApplicationServer", "bwAsImsGroup"), ("BW-BroadworksApplicationServer", "bwAsCapGroup"), ("BW-BroadworksApplicationServer", "bwAsSmdiGroup"), ("BW-BroadworksApplicationServer", "bwAsMediaResourceGroup"), ("BW-BroadworksApplicationServer", "bwAsWholeSalesGroup"), ("BW-BroadworksApplicationServer", "bwAsRealTimeAccntGroup"), ("BW-BroadworksApplicationServer", "bwAsExtCallLogsGroup"), ("BW-BroadworksApplicationServer", "bwAsXsBcctGroup"), ("BW-BroadworksApplicationServer", "bwAsCpeDeviceGroup"), ("BW-BroadworksApplicationServer", "bwAsCallpGroup"), ("BW-BroadworksApplicationServer", "bwAsSmtpGroup"), ("BW-BroadworksApplicationServer", "bwAsSipGroup"), ("BW-BroadworksApplicationServer", "bwAsAccntCodeServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsAnonymousCallRejectionServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsAuthenticationServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsAutoAttendantServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsCallCapacityServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsCFAlwaysServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsCFBusyServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsCFNoAnswerServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsCallNotifyServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsCallParkServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsCallPickupServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsCallReturnServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsCompilotCallMgrServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsDoNotDisturbServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsFlashCallXferServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsFlashCallWaitingServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsFlashConsultationServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsFlash3wcServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsHuntGroupServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsIcpServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsIpPhoneServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsLastNumberRedialServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsOcpServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsPriorityAlertServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsSelectiveCallAcceptanceServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsSelectiveCallForwardServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsSelectiveCallRejectionServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsSimRingServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsVoiceMessagingServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsSeriesCompletionServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsInterceptServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsInstantConferencingServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsCallingLineIdBlockingServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsSessionAuditServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsWindowsMessagingServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsCalWaitingServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsAlternateNumberServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsCustomerOriginatedTraceServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsSpeedDialing8ServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsMusicOnHoldServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsCallingNameQueriesServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsThirdPartyMWIControlServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsCallCenterServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsCallForwardGroupNoAnswerServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsSpeedDialing100ServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsThirdPartyVoiceMailServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsDirectedCallPickupServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsFlashCallHoldServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsEmergencyZoneServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsDirectedCallPickupWithBargeInServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsAutomaticCallBackServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsRingTimeoutServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsSequentialRingServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsVideoAddOnServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsMaliciousCallTraceServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsPushToTalkServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsHotelingServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsPreferredCarrierServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsFamilySimRingServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsDiversionInhibitorServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsInstantGroupCallServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsAutomaticHoldAndRetrieveServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsBusinessTrunkGroupServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsCustomRingbackServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsMssGroup"), ("BW-BroadworksApplicationServer", "bwAsNrsGroup"), ("BW-BroadworksApplicationServer", "bwAsXsPersistencyGroup"), ("BW-BroadworksApplicationServer", "bwAsProtocolMonitorGroup"), ("BW-BroadworksApplicationServer", "bwAsSystemStatsGroup"), ("BW-BroadworksApplicationServer", "bwAsQueueStatsGroup"), ("BW-BroadworksApplicationServer", "bwAsOverloadControlStatsGroup"), ("BW-BroadworksApplicationServer", "bwAsRedundancyStatsGroup"), ("BW-BroadworksApplicationServer", "bwAsPsPersistencyGroup"), ("BW-BroadworksApplicationServer", "bwAsPsExtCallLogsGroup"), ("BW-BroadworksApplicationServer", "bwAsPsOciGroup"), ("BW-BroadworksApplicationServer", "bwAsPsQueueStatsGroup"), ("BW-BroadworksApplicationServer", "bwAsPsLdapGroup"), ("BW-BroadworksApplicationServer", "bwAsPsBcctGroup"), ("BW-BroadworksApplicationServer", "bwAsMoCountersGroup"), ("BW-BroadworksApplicationServer", "bwAsReservedGroup"), ("BW-BroadworksApplicationServer", "bwAsPhysicalLocationServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsFaxMessagingServiceGroup"), ("BW-BroadworksApplicationServer", "bwPSTcpStatsGroup"), ("BW-BroadworksApplicationServer", "bwXSTcpStatsGroup"), ("BW-BroadworksApplicationServer", "bwPSConcurrentFrameworkStatsGroup"), ("BW-BroadworksApplicationServer", "bwXSConcurrentFrameworkStatsGroup"), ("BW-BroadworksApplicationServer", "bwAsExtEmergencyRtgStatsGroup"), ("BW-BroadworksApplicationServer", "bwAsTwoStageDialingServiceGroup"), ("BW-BroadworksApplicationServer", "bwAsSoapGroup"), ("BW-BroadworksApplicationServer", "bwAsActivatableFeatureGroup"), ("BW-BroadworksApplicationServer", "bwAsCallForwardingNotReachableGroup"), ("BW-BroadworksApplicationServer", "bwMWIDeliveryToMobileGroup"), ("BW-BroadworksApplicationServer", "bwSharedCallAppearanceGroup"), ("BW-BroadworksApplicationServer", "bwExternalCustomRingbackGroup"), ("BW-BroadworksApplicationServer", "bwAsInCallServiceActivationGroup"), ("BW-BroadworksApplicationServer", "bwCongestionManagementGroup"), ("BW-BroadworksApplicationServer", "bwShInterfaceGroup"), ("BW-BroadworksApplicationServer", "bwDnsQueryGroup"), ("BW-BroadworksApplicationServer", "bwAsExpensiveCallNotificationGroup"), ("BW-BroadworksApplicationServer", "bwLocationControlGroup"), ("BW-BroadworksApplicationServer", "bwCallRetrieveGroup"), ("BW-BroadworksApplicationServer", "bwBroadworksAnywhereGroup"), ("BW-BroadworksApplicationServer", "psVoiceMessagingGroup"), ("BW-BroadworksApplicationServer", "psPolycomPhoneServiceGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bwAsBasicCompliance = bwAsBasicCompliance.setStatus('current')
mibBuilder.exportSymbols("BW-BroadworksApplicationServer", bwSMTPSecondaryUnSuccessfulEmailSendAttempts=bwSMTPSecondaryUnSuccessfulEmailSendAttempts, psSystemInternalQueueLengthMaxTimestamp=psSystemInternalQueueLengthMaxTimestamp, bwCongestionManagementNeighborState=bwCongestionManagementNeighborState, bwAsPriorityAlertServiceGroup=bwAsPriorityAlertServiceGroup, bwTrunkGroupIndex=bwTrunkGroupIndex, bwSD8GroupIndex=bwSD8GroupIndex, bwSD8SPTable=bwSD8SPTable, bwBASPCallTerminations=bwBASPCallTerminations, anonymousCallRejection=anonymousCallRejection, bwSCAGroupEntry=bwSCAGroupEntry, bwSelectiveCallForwardSPIndex=bwSelectiveCallForwardSPIndex, bwCallForwardingAlwaysGroupID=bwCallForwardingAlwaysGroupID, bwMCPCommandsRetransmitted=bwMCPCommandsRetransmitted, bwSipStatsSubscribeResponsesTable=bwSipStatsSubscribeResponsesTable, bwDirectedCallPickupSPEntry=bwDirectedCallPickupSPEntry, bwFaxMessagingSPID=bwFaxMessagingSPID, bwCPEDeviceStatsIndex=bwCPEDeviceStatsIndex, bwInterceptSPEntry=bwInterceptSPEntry, bwICPGroupNumCollectCallBlocks=bwICPGroupNumCollectCallBlocks, bwNSqueryCommFailures=bwNSqueryCommFailures, bwAuthCodeNumAttempts=bwAuthCodeNumAttempts, bwDirectedCallPickupSPNumFailures=bwDirectedCallPickupSPNumFailures, bwSipStatsRegisterResponseCodeValue=bwSipStatsRegisterResponseCodeValue, bwSD8GroupNumTimesProgrammed=bwSD8GroupNumTimesProgrammed, bwCallpMaximumCallTimeforAnsweredCallsExceeded=bwCallpMaximumCallTimeforAnsweredCallsExceeded, bwInterceptTransfers=bwInterceptTransfers, bwVMRGroupNumSendGroupFailed=bwVMRGroupNumSendGroupFailed, bwMGCPStatsAuditConnectionResponseEntry=bwMGCPStatsAuditConnectionResponseEntry, bwCFAGroupDestinationChanged=bwCFAGroupDestinationChanged, bwRingTimeoutGroupIndex=bwRingTimeoutGroupIndex, bwAsDirectedCallPickupServiceGroup=bwAsDirectedCallPickupServiceGroup, bwCallpGroupEmergencyCallAttempts=bwCallpGroupEmergencyCallAttempts, bwSipStatsSetupSignalDelay=bwSipStatsSetupSignalDelay, bwMGCPStatsCreateConnectionResponseIns=bwMGCPStatsCreateConnectionResponseIns, bwSipStatsRetryCancels=bwSipStatsRetryCancels, bwCallCapacityGroupNumCallsBlocked=bwCallCapacityGroupNumCallsBlocked, bwCommPilotCallMgrNumGroupCallPark=bwCommPilotCallMgrNumGroupCallPark, bwFlashCallWaitingGroupEntry=bwFlashCallWaitingGroupEntry, psSystemInternalQueueSize=psSystemInternalQueueSize, bwDPUBISPIndex=bwDPUBISPIndex, bwPTTSPInvoke=bwPTTSPInvoke, bwSimRingPersonalSPNumBusy=bwSimRingPersonalSPNumBusy, bwACBGroupIndex=bwACBGroupIndex, bwCallingLineIDDeliveryPerCallSP=bwCallingLineIDDeliveryPerCallSP, twoStageDialing=twoStageDialing, bwCotActivation=bwCotActivation, bwSelectiveCallRejectionSPEntry=bwSelectiveCallRejectionSPEntry, bwSubscriptionUserPIC=bwSubscriptionUserPIC, bwSequentialRingGroupAbandoned=bwSequentialRingGroupAbandoned, bwCAPStatsRegisterResponsesEntry=bwCAPStatsRegisterResponsesEntry, bwAccountCodesSPID=bwAccountCodesSPID, bwCallForwardingNoAnswerGroupID=bwCallForwardingNoAnswerGroupID, bwAHRSPTable=bwAHRSPTable, bwSOAPAvgSessions=bwSOAPAvgSessions, bwCallpMaximumNumberofSimCallsExceeded=bwCallpMaximumNumberofSimCallsExceeded, bwFamilySimRingSPEntry=bwFamilySimRingSPEntry, bwOCPGroupNumChargeableDirAssistCallsBlocked=bwOCPGroupNumChargeableDirAssistCallsBlocked, bwSipStatsActiveTcpConnections=bwSipStatsActiveTcpConnections, bwPhysicalLocationOriginationBlocked=bwPhysicalLocationOriginationBlocked, bwCongestionManagementNeighborTable=bwCongestionManagementNeighborTable, bwSPNoIndicationUserPIC=bwSPNoIndicationUserPIC, bwCFNRcSPDestinationChanged=bwCFNRcSPDestinationChanged, bwIncomingCallingPlanSPID=bwIncomingCallingPlanSPID, bwCWSPNumPhoneCancellations=bwCWSPNumPhoneCancellations, psOciStatsUserRequestResponseTime=psOciStatsUserRequestResponseTime, bwNRSStatsTableNbResponsesResent=bwNRSStatsTableNbResponsesResent, bwSCRGroupNumRejects=bwSCRGroupNumRejects, bwPSTcpServersOutgoingQueueSize=bwPSTcpServersOutgoingQueueSize, psOciStatsMinGroupRequestResponseTime=psOciStatsMinGroupRequestResponseTime, bwMGCPStatsRestartInProgressResponseTable=bwMGCPStatsRestartInProgressResponseTable, bwSystemInternalQueueLengthAvg=bwSystemInternalQueueLengthAvg, bwFaxMessagingGroupPrinted=bwFaxMessagingGroupPrinted, bwPMTNumMonitorsOpen=bwPMTNumMonitorsOpen, bwSipStatsOtherResponseCodeValue=bwSipStatsOtherResponseCodeValue, bwCallCenterGroupID=bwCallCenterGroupID, bwOutgoingCallingPlanSPID=bwOutgoingCallingPlanSPID, bwLocationControlGroupEntry=bwLocationControlGroupEntry, bwFlashCallWaitingSPTable=bwFlashCallWaitingSPTable, bwCallReturnGroupIndex=bwCallReturnGroupIndex, bwPriorityAlertSPID=bwPriorityAlertSPID, bwAsCpeDeviceGroup=bwAsCpeDeviceGroup, bwSubscriptionServiceProviderPIC=bwSubscriptionServiceProviderPIC, bwFlashCallWaitingGroupTable=bwFlashCallWaitingGroupTable, bwPhysicalLocationSPID=bwPhysicalLocationSPID, bwCAPStatsResponseAuthentications=bwCAPStatsResponseAuthentications, bwCommPilotCallMgrSPNumConference=bwCommPilotCallMgrSPNumConference, bwAuthCodeNumValidations=bwAuthCodeNumValidations, bwInterceptUserTerminationInvocations=bwInterceptUserTerminationInvocations, commonCommModule=commonCommModule, psRemoteXlaUpdatesProcessed=psRemoteXlaUpdatesProcessed, psOciStatsMaxUserRequestResponseTime=psOciStatsMaxUserRequestResponseTime, bwCongestionManagementNeighborEntry=bwCongestionManagementNeighborEntry, bwAsPsExtCallLogsGroup=bwAsPsExtCallLogsGroup, bwMGCPStatsAuditEndpointResponseCodeValue=bwMGCPStatsAuditEndpointResponseCodeValue, bwCallCenterSPID=bwCallCenterSPID, bwSessionAuditGroupID=bwSessionAuditGroupID, bwSCASPEntry=bwSCASPEntry, sd8=sd8, bwCallForwardingAlwaysSPEntry=bwCallForwardingAlwaysSPEntry, bwMaliciousCallTraceGroupEntry=bwMaliciousCallTraceGroupEntry, bwSessionAuditNumCallsAudited=bwSessionAuditNumCallsAudited, bwEZSPEntry=bwEZSPEntry, bwVAOGroupIndex=bwVAOGroupIndex, bwNRSStatsEntry=bwNRSStatsEntry, bwMusicOnHoldNumUses=bwMusicOnHoldNumUses, bwHuntGroupsSPEntry=bwHuntGroupsSPEntry, bwSystemInternalQueueLengthMaxTimestampLSB=bwSystemInternalQueueLengthMaxTimestampLSB, bwCommPilotCallMgrNumCallParkRetrieve=bwCommPilotCallMgrNumCallParkRetrieve, bwHuntGroupSPNumAttempts=bwHuntGroupSPNumAttempts, bwCallParkNumRetrieveAttempts=bwCallParkNumRetrieveAttempts, bwSessionAuditGroupEntry=bwSessionAuditGroupEntry, bwCommPilotCallMgrNumTransferCC=bwCommPilotCallMgrNumTransferCC, bwNumberOfSPDeviceType=bwNumberOfSPDeviceType, bwAsVideoAddOnServiceGroup=bwAsVideoAddOnServiceGroup, bwExternalCustomRingbackGroupID=bwExternalCustomRingbackGroupID, bwCFASPNumForwarded=bwCFASPNumForwarded, bwVMRCallBackAttempts=bwVMRCallBackAttempts, bwFlashCallHoldGroupNumActivations=bwFlashCallHoldGroupNumActivations, bwCommPilotCallMgrSPNumConferenceAnswer=bwCommPilotCallMgrSPNumConferenceAnswer, bwDPUBIGroupAttempt=bwDPUBIGroupAttempt, bwSipStatsPrackOuts=bwSipStatsPrackOuts, bwCallRetrieveGroupTable=bwCallRetrieveGroupTable, bwAsCompilotCallMgrServiceGroup=bwAsCompilotCallMgrServiceGroup, bwPreferredCarrierGroupIndex=bwPreferredCarrierGroupIndex, bwAsWholeSalesGroup=bwAsWholeSalesGroup, bwSCAGroupTable=bwSCAGroupTable, bwBroadWorksAnywhereSPTable=bwBroadWorksAnywhereSPTable, bwOutgoingCallingPlanGroupIndex=bwOutgoingCallingPlanGroupIndex, bwSipStatsInviteIns=bwSipStatsInviteIns, bwPhysicalLocationGroupID=bwPhysicalLocationGroupID, bwGroupMultiMediaMsgDeposit=bwGroupMultiMediaMsgDeposit, bwPSMonitoringExecutorTaskQueueSize=bwPSMonitoringExecutorTaskQueueSize, bwACBMaxSession=bwACBMaxSession, bwGroupDiversionInhibited=bwGroupDiversionInhibited, psPolycomPhoneServiceGroup=psPolycomPhoneServiceGroup, bwCFANumForwarded=bwCFANumForwarded, bwCommPilotCallManagerGroupID=bwCommPilotCallManagerGroupID, bwNumberOfDNDefined=bwNumberOfDNDefined, bwAHRSPIndex=bwAHRSPIndex, bwOCPSPNumURLDialingCallsBlocked=bwOCPSPNumURLDialingCallsBlocked, bwTrunkGroupPerTGMaxIncomingActiveCalls=bwTrunkGroupPerTGMaxIncomingActiveCalls, bwEZGroupRegistrationsRejected=bwEZGroupRegistrationsRejected, bwSD8NumTimesProgrammed=bwSD8NumTimesProgrammed, bwDeviceTypeSystemTable=bwDeviceTypeSystemTable, bwCustomRingbackGroupTable=bwCustomRingbackGroupTable, mediaStats=mediaStats, bwIncomingCallingPlanGroupIndex=bwIncomingCallingPlanGroupIndex, bwVPGroupGreetingRecorded=bwVPGroupGreetingRecorded, bwFlashConsultationSPTable=bwFlashConsultationSPTable, bwHuntGroupsSPTable=bwHuntGroupsSPTable, bwCAPStatsCallControlInfosOut=bwCAPStatsCallControlInfosOut, bwInterceptGroupOriginationInvocations=bwInterceptGroupOriginationInvocations, bwAlternateNumbersGroupIndex=bwAlternateNumbersGroupIndex, bwIGCGroupNormalInvoke=bwIGCGroupNormalInvoke, bwCallNotifySPIndex=bwCallNotifySPIndex, bwCommPilotCallMgrSPNumCallPark=bwCommPilotCallMgrSPNumCallPark, bwThirdPartyVoiceMailSPNbOfCFWNoAnswer=bwThirdPartyVoiceMailSPNbOfCFWNoAnswer, systemStats=systemStats, bwDPUBIGroupBargeInFailure=bwDPUBIGroupBargeInFailure, bwVMRGroupDeleteAllMsgsAttempts=bwVMRGroupDeleteAllMsgsAttempts, bwEZSPEmergencyCallsRejected=bwEZSPEmergencyCallsRejected, bwCommonCommXSRejectedInboundConnections=bwCommonCommXSRejectedInboundConnections, bwAuthenticationGroupNumValidResponses=bwAuthenticationGroupNumValidResponses, bwAnonymousCallRejectionGroupID=bwAnonymousCallRejectionGroupID, bwSequentialRingAnswered=bwSequentialRingAnswered, bwOCPSACNumUnsuccessfulUnlock=bwOCPSACNumUnsuccessfulUnlock, bwNumberOfUsers=bwNumberOfUsers, bwMGCPStatsDeleteAgentConnectionResponseIns=bwMGCPStatsDeleteAgentConnectionResponseIns, bwTwoStageDialingSPIndex=bwTwoStageDialingSPIndex, bwWSPStatsServiceActionsOut=bwWSPStatsServiceActionsOut, bwCallForwardingBusyGroupTable=bwCallForwardingBusyGroupTable, bwBroadworksAnywhereGroup=bwBroadworksAnywhereGroup, bwHotelingSPAssociate=bwHotelingSPAssociate, polycomGroupID=polycomGroupID, bwOCPGroupNumSuccessfulAuthorizations=bwOCPGroupNumSuccessfulAuthorizations, bwEZSPID=bwEZSPID, bwMGCPStatsModifyConnectionOuts=bwMGCPStatsModifyConnectionOuts, ttConnectionPoolSize=ttConnectionPoolSize, bwPSAvgUpdateTime=bwPSAvgUpdateTime, bwCallpSPTable=bwCallpSPTable, bwIGCSPIndex=bwIGCSPIndex, bwIGCSPEntry=bwIGCSPEntry, bwDiversionInhibitorGroupIndex=bwDiversionInhibitorGroupIndex, bwCallCapacityGroupNumCallsAttempted=bwCallCapacityGroupNumCallsAttempted, bwCFGNAOverflowNoForward=bwCFGNAOverflowNoForward, bwFlashThreeWayCallGroupIndex=bwFlashThreeWayCallGroupIndex, bwCommonCommXSOutputMessagesProcessed=bwCommonCommXSOutputMessagesProcessed, bwCFNASPNumForwarded=bwCFNASPNumForwarded, bwIPPhoneSPEntry=bwIPPhoneSPEntry, bwNumberOfServiceTypeAssignedSystem=bwNumberOfServiceTypeAssignedSystem, bwSPSubscriptionDialedGroupPIC=bwSPSubscriptionDialedGroupPIC, bwRingTimeoutGroupNumExpires=bwRingTimeoutGroupNumExpires, bwDPUBIGroupBargeIn=bwDPUBIGroupBargeIn, bwCommPilotCallMgrNumConferenceHold=bwCommPilotCallMgrNumConferenceHold, bwVAOGroupEntry=bwVAOGroupEntry, bwThirdPartyVMailSPID=bwThirdPartyVMailSPID, bwMGCPStatsAuditConnectionResponseTable=bwMGCPStatsAuditConnectionResponseTable, dnsStats=dnsStats, bwCallCapacitySPEntry=bwCallCapacitySPEntry, bwCFNRcGroupIndex=bwCFNRcGroupIndex, bwRingTimeoutGroupTable=bwRingTimeoutGroupTable, bwCallForwardingBusyGroupEntry=bwCallForwardingBusyGroupEntry, bwAlternateNumbersGroupTable=bwAlternateNumbersGroupTable, bwNRSStatsTableNbRequestsResent=bwNRSStatsTableNbRequestsResent, bwICPSPNumIntraGroupBlocks=bwICPSPNumIntraGroupBlocks, bwCallForwardingBusySPID=bwCallForwardingBusySPID, bwCFNRcGroupNumForwarded=bwCFNRcGroupNumForwarded, bwCommonCommPSProtocol=bwCommonCommPSProtocol, bwSipStatsOtherResponsesTable=bwSipStatsOtherResponsesTable, bwVMGroupNumMessagesLeft=bwVMGroupNumMessagesLeft, smppModule=smppModule, bwCFNRcGroupNumPhoneActivations=bwCFNRcGroupNumPhoneActivations, bwVMRNumSendGroupFailed=bwVMRNumSendGroupFailed, bwSystemInternalQueueIndex=bwSystemInternalQueueIndex, bwCallWaitingGroupEntry=bwCallWaitingGroupEntry, bwSeriesCompletionSPNumBusy=bwSeriesCompletionSPNumBusy, bwLastNumberRedialSPEntry=bwLastNumberRedialSPEntry, bwOCPSPNumPremiumServices2CallsBlocked=bwOCPSPNumPremiumServices2CallsBlocked, bwCFNRcSPIndex=bwCFNRcSPIndex, bwCFASPNumPhoneDeactivations=bwCFASPNumPhoneDeactivations, bwCongestionManagementNeighborInviteOut=bwCongestionManagementNeighborInviteOut, bwCFGNAGroupEntry=bwCFGNAGroupEntry, bwDPUBIExempt=bwDPUBIExempt, bwCustomRingbackGroupVideoAttempts=bwCustomRingbackGroupVideoAttempts, bwCommPilotCallMgrSPNumConferenceRelease=bwCommPilotCallMgrSPNumConferenceRelease, bwInstantConferencingGroupEntry=bwInstantConferencingGroupEntry, bwAsMibCompliancy=bwAsMibCompliancy, bwPTTSPID=bwPTTSPID, bwDNDSPNumPhoneDeactivations=bwDNDSPNumPhoneDeactivations, bwCFNRcNumForwarded=bwCFNRcNumForwarded, bwCFBNumForwarded=bwCFBNumForwarded, psExternalCallLogsModule=psExternalCallLogsModule, bwMGCPStatsModifyConnectionResponseIns=bwMGCPStatsModifyConnectionResponseIns, bwMaliciousCallTraceApplied=bwMaliciousCallTraceApplied, bwFlashConsultationSPEntry=bwFlashConsultationSPEntry, bwSimRingPersonalSPIndex=bwSimRingPersonalSPIndex, bwCallpMaximumNumberofSimVideoCallsExceeded=bwCallpMaximumNumberofSimVideoCallsExceeded, bwAccountCodesGroupEntry=bwAccountCodesGroupEntry, bwIMSMaxThreads=bwIMSMaxThreads, musicOnHold=musicOnHold, bwPSTcpServersNbBytesSentSecure=bwPSTcpServersNbBytesSentSecure, bwCallParkGroupTable=bwCallParkGroupTable, bwSystemInternalQueueLengthMax=bwSystemInternalQueueLengthMax, bwAHRSPID=bwAHRSPID, bwCallpCallsPerSecond=bwCallpCallsPerSecond, psOAMModule=psOAMModule, bwVMRSPNumLoginAttempts=bwVMRSPNumLoginAttempts, wspStats=wspStats, bwCallCapacitySPTable=bwCallCapacitySPTable, bwSeriesCompletionGroupTable=bwSeriesCompletionGroupTable, bwPTTGroupEntry=bwPTTGroupEntry, bwDiversionInhibitorGroupEntry=bwDiversionInhibitorGroupEntry, bwCallForwardingNotReachableGroupTable=bwCallForwardingNotReachableGroupTable, bwXSTTHWMValue=bwXSTTHWMValue)
mibBuilder.exportSymbols("BW-BroadworksApplicationServer", bwSipStatsInfoIns=bwSipStatsInfoIns, perNbFailedTransactions=perNbFailedTransactions, bwSelectiveCallForwardGroupID=bwSelectiveCallForwardGroupID, bwMGCPStatsNotificationRequestResponseIns=bwMGCPStatsNotificationRequestResponseIns, bwCurrentCallOverloadZone=bwCurrentCallOverloadZone, bwFlashCallTransferGroupID=bwFlashCallTransferGroupID, bwHuntGroupsGroupDNHIncomingCalls=bwHuntGroupsGroupDNHIncomingCalls, bwThirdPartyVMailGroupID=bwThirdPartyVMailGroupID, bwInstantConferencingBridgeIndex=bwInstantConferencingBridgeIndex, bwExternalCustomRingbackGroupEntry=bwExternalCustomRingbackGroupEntry, bwLastNumberRedialGroupTable=bwLastNumberRedialGroupTable, bwSOAPAvgServiceTime=bwSOAPAvgServiceTime, bwCallNotifyGroupID=bwCallNotifyGroupID, bwAsIpPhoneServiceGroup=bwAsIpPhoneServiceGroup, bwPTTGroupID=bwPTTGroupID, bwOCPSACNumUnsuccessfulLock=bwOCPSACNumUnsuccessfulLock, bwDoNotDisturbSPIndex=bwDoNotDisturbSPIndex, bwAsPsOciGroup=bwAsPsOciGroup, bwShInterfaceRequestsOut=bwShInterfaceRequestsOut, bwCallParkGroupNumRetrieveAttempts=bwCallParkGroupNumRetrieveAttempts, bwInstantConferencingSPTable=bwInstantConferencingSPTable, bwMWISPID=bwMWISPID, bwSD100SPCall=bwSD100SPCall, bwSD100SPTable=bwSD100SPTable, bwTrunkGroupPerTGUnreachableDestination=bwTrunkGroupPerTGUnreachableDestination, bwTrunkSPOriginationBlocked=bwTrunkSPOriginationBlocked, bwDPUBIBargeInFailure=bwDPUBIBargeInFailure, bwCFNRcNumPhoneDeactivations=bwCFNRcNumPhoneDeactivations, bwSessionAuditGroupNumCallsAudited=bwSessionAuditGroupNumCallsAudited, bwAsPsQueueStatsGroup=bwAsPsQueueStatsGroup, bwWSPStatsServiceAcknowledgementsOut=bwWSPStatsServiceAcknowledgementsOut, bwSipStatsOtherOuts=bwSipStatsOtherOuts, bwSipStatsUdpIns=bwSipStatsUdpIns, bwFamilySimRingGroupIndex=bwFamilySimRingGroupIndex, bwOCPGroupNumGroupCallsBlocked=bwOCPGroupNumGroupCallsBlocked, bwNumNonCallRedZoneOverloadTrans=bwNumNonCallRedZoneOverloadTrans, flashCallHold=flashCallHold, bwEZNormalCallsRejected=bwEZNormalCallsRejected, bwXSMonitoringExecutorTaskQueueSize=bwXSMonitoringExecutorTaskQueueSize, bwCPEDeviceName=bwCPEDeviceName, bwCFGNAGroupExternalForward=bwCFGNAGroupExternalForward, bwMaliciousCallTraceSPID=bwMaliciousCallTraceSPID, bwHotelingGroupTimeout=bwHotelingGroupTimeout, externalCallLogsModule=externalCallLogsModule, bwCPEDeviceReset=bwCPEDeviceReset, bwSCACallRetrieveSuccess=bwSCACallRetrieveSuccess, bwSimRingPersonalSPNumAttempts=bwSimRingPersonalSPNumAttempts, bwMaliciousCallTraceGroupTable=bwMaliciousCallTraceGroupTable, bwCallpGroupUserTerminationAttempts=bwCallpGroupUserTerminationAttempts, bwCFGNAGroupTable=bwCFGNAGroupTable, bwHotelingSPTable=bwHotelingSPTable, bwSipStatsPrackResponsesEntry=bwSipStatsPrackResponsesEntry, bwShInterfaceUserDataRequestFailure=bwShInterfaceUserDataRequestFailure, bwXSMonitoringExecutorTable=bwXSMonitoringExecutorTable, bwNumRedZoneOverloadTrans=bwNumRedZoneOverloadTrans, bwNbRequestsSent=bwNbRequestsSent, bwSequentialRingGroupEntry=bwSequentialRingGroupEntry, bwACBSPMaxSession=bwACBSPMaxSession, bwFlashConsultationGroupNumCalls=bwFlashConsultationGroupNumCalls, bwVMRGroupNumForwardSendAttempts=bwVMRGroupNumForwardSendAttempts, bwOCPSPNumTollFreeCallsBlocked=bwOCPSPNumTollFreeCallsBlocked, bwTrunkGroupPerTGCapacityExceededInitialValue=bwTrunkGroupPerTGCapacityExceededInitialValue, concurrentStats=concurrentStats, bwCallRetrieveGroupID=bwCallRetrieveGroupID, bwCommPilotCallManagerGroupTable=bwCommPilotCallManagerGroupTable, bwPSMonitoringExecutorNbErrors=bwPSMonitoringExecutorNbErrors, bwSCASPNumAcceptances=bwSCASPNumAcceptances, bwCallCenterSPTable=bwCallCenterSPTable, bwXSConcurrentFrameworkStatsGroup=bwXSConcurrentFrameworkStatsGroup, bwICPNumIntraGroupBlocks=bwICPNumIntraGroupBlocks, mct=mct, bwDirectedCallPickupGroupIndex=bwDirectedCallPickupGroupIndex, bwRealtimeAccountingRequestsRetransmitted=bwRealtimeAccountingRequestsRetransmitted, psSystemInternalQueueTimeMin=psSystemInternalQueueTimeMin, bwRingTimeoutSPTable=bwRingTimeoutSPTable, bwSystemInternalQueueTimeMax=bwSystemInternalQueueTimeMax, callRetrieve=callRetrieve, bwCommPilotCallMgrSPNumDial=bwCommPilotCallMgrSPNumDial, psBwVMRSPNumLoginAttempts=psBwVMRSPNumLoginAttempts, bwMGCPStatsNotificationRequestOuts=bwMGCPStatsNotificationRequestOuts, bwOutgoingCallingPlanSPTable=bwOutgoingCallingPlanSPTable, bwMaliciousCallTraceGroupApplied=bwMaliciousCallTraceGroupApplied, bwCallRetrieveGroupIndex=bwCallRetrieveGroupIndex, bwSipStatsByeResponsesTable=bwSipStatsByeResponsesTable, bwIGCSPID=bwIGCSPID, bwAsInstantConferencingServiceGroup=bwAsInstantConferencingServiceGroup, bwAnonymousCallRejectionGroupIndex=bwAnonymousCallRejectionGroupIndex, bwMGCPStatsRestartInProgressResponseEntry=bwMGCPStatsRestartInProgressResponseEntry, callReturn=callReturn, bwCallingLineIDDeliveryBlockSPID=bwCallingLineIDDeliveryBlockSPID, bwAsCFNoAnswerServiceGroup=bwAsCFNoAnswerServiceGroup, bwInstantConferencingYesterdaysPeakUsage=bwInstantConferencingYesterdaysPeakUsage, bwSeriesCompletionSPIndex=bwSeriesCompletionSPIndex, psOciStatsSystemRequestsPerHour=psOciStatsSystemRequestsPerHour, executionServer=executionServer, bwTrunkGroupPerTGIndex=bwTrunkGroupPerTGIndex, bwSipStatsMessageResponseIns=bwSipStatsMessageResponseIns, bwSequentialRingSPTable=bwSequentialRingSPTable, bwMGCPStatsExtraCommandOuts=bwMGCPStatsExtraCommandOuts, bwSipStatsOptionsResponsesEntry=bwSipStatsOptionsResponsesEntry, bwMGCPStatsCreateConnectionResponseEntry=bwMGCPStatsCreateConnectionResponseEntry, bwCommPilotCallMgrNumCallPark=bwCommPilotCallMgrNumCallPark, bwMWIDeliveryToMobileGroupTable=bwMWIDeliveryToMobileGroupTable, bwAsVoiceMessagingServiceGroup=bwAsVoiceMessagingServiceGroup, bwMGCPStatsCreateConnectionOuts=bwMGCPStatsCreateConnectionOuts, bwAutoAttendantNumAnswers=bwAutoAttendantNumAnswers, bwCallingLineIDDeliveryBlockSPPerCallBlocks=bwCallingLineIDDeliveryBlockSPPerCallBlocks, bwCallpSPID=bwCallpSPID, bwAHRSPHold=bwAHRSPHold, bwCallWaitingSPTable=bwCallWaitingSPTable, soapModule=soapModule, lastNumberRedial=lastNumberRedial, bwCallParkSPNumAttempts=bwCallParkSPNumAttempts, bwCustomRingbackUserAudioSPFailures=bwCustomRingbackUserAudioSPFailures, bwMGCPStatsAuditConnectionOuts=bwMGCPStatsAuditConnectionOuts, bwCotSPActivation=bwCotSPActivation, bwVPGroupNumAAAfterHoursGreetingRecorded=bwVPGroupNumAAAfterHoursGreetingRecorded, bwMGCPStatsAuditEndpointResponseEntry=bwMGCPStatsAuditEndpointResponseEntry, bwDoNotDisturbGroupID=bwDoNotDisturbGroupID, bwFaxMessagingSPTable=bwFaxMessagingSPTable, bwIPPhoneSPNumForwards=bwIPPhoneSPNumForwards, psOciStatsServiceProviderRequestsPerHour=psOciStatsServiceProviderRequestsPerHour, bwCallingLineIDDeliveryPerCall=bwCallingLineIDDeliveryPerCall, bwSipStatsPrackResponseCodeValue=bwSipStatsPrackResponseCodeValue, bwNRSStatsTableProtocolName=bwNRSStatsTableProtocolName, bwCallForwardingNoAnswerSPTable=bwCallForwardingNoAnswerSPTable, bwIMSAvgServiceTime=bwIMSAvgServiceTime, bwMGCPStatsExtraCommandResponseIns=bwMGCPStatsExtraCommandResponseIns, bwVAOSPOutgoingAttempts=bwVAOSPOutgoingAttempts, bwDeviceTypeSystemIndex=bwDeviceTypeSystemIndex, bwXSUpdateCount=bwXSUpdateCount, bwSipStatsMessageResponseOuts=bwSipStatsMessageResponseOuts, wspModule=wspModule, bwCommPilotCallMgrGroupNumGroupCallPark=bwCommPilotCallMgrGroupNumGroupCallPark, bwSessionAuditGroupNumCallsFailedAudit=bwSessionAuditGroupNumCallsFailedAudit, bwFlashThreeWayCallGroupTable=bwFlashThreeWayCallGroupTable, bwAccountCodeGroupNumAttempts=bwAccountCodeGroupNumAttempts, bwCAPStatsQueueUpdatesOut=bwCAPStatsQueueUpdatesOut, bwThirdPartyVMailSPIndex=bwThirdPartyVMailSPIndex, bwDiversionInhibitorSPTable=bwDiversionInhibitorSPTable, bwSessionAuditSPNumCallsAudited=bwSessionAuditSPNumCallsAudited, bwVPNumCFADestinationChanged=bwVPNumCFADestinationChanged, bwCallRetrieveGroupEntry=bwCallRetrieveGroupEntry, bwCFGNASPForward=bwCFGNASPForward, bwPTTGroupReject=bwPTTGroupReject, bwAsRealTimeAccntGroup=bwAsRealTimeAccntGroup, bwPhysicalLocationSPOriginationBlocked=bwPhysicalLocationSPOriginationBlocked, bwAsCallNotifyServiceGroup=bwAsCallNotifyServiceGroup, bwDPUBIGroupExempt=bwDPUBIGroupExempt, bwCallWaitingGroupID=bwCallWaitingGroupID, bwInterceptSPTable=bwInterceptSPTable, psShInterfaceStats=psShInterfaceStats, bwLocationControlSPTable=bwLocationControlSPTable, bwOCPGroupNumSpecialServices2CallsBlocked=bwOCPGroupNumSpecialServices2CallsBlocked, bwCFGNASPExternalNoForward=bwCFGNASPExternalNoForward, bwPSMonitoringExecutorName=bwPSMonitoringExecutorName, bwMGCPStatsAuditConnectionResponseIns=bwMGCPStatsAuditConnectionResponseIns, bwDoNotDisturbGroupTable=bwDoNotDisturbGroupTable, bwInstantConferencingSPID=bwInstantConferencingSPID, bwAnonymousCallsGroupNumRejected=bwAnonymousCallsGroupNumRejected, bwOCPSACNumSuccessfulUnlock=bwOCPSACNumSuccessfulUnlock, bwMGCPStatsModifyConnectionResponseEntry=bwMGCPStatsModifyConnectionResponseEntry, bwSPNonSubscriptionDialedGroupPIC=bwSPNonSubscriptionDialedGroupPIC, psOciStatsNbReportNotificationsOut=psOciStatsNbReportNotificationsOut, bwSipStatsInviteOuts=bwSipStatsInviteOuts, bwDnsStatsQueryIndex=bwDnsStatsQueryIndex, bwMGCPStatsMaxSetupSignalDelay=bwMGCPStatsMaxSetupSignalDelay, bwMaliciousCallTraceSPApplied=bwMaliciousCallTraceSPApplied, bwCallpMaximumCallTimeforUnansweredCallsExceeded=bwCallpMaximumCallTimeforUnansweredCallsExceeded, flashConsultation=flashConsultation, bwCongestionManagementNeighborIpAddress=bwCongestionManagementNeighborIpAddress, ttNbFailedCheckpoints=ttNbFailedCheckpoints, polycomSPTable=polycomSPTable, bwHotelingSPTimeout=bwHotelingSPTimeout, bwSPDiversionInhibited=bwSPDiversionInhibited, bwOCPSPNumCasualCallsBlocked=bwOCPSPNumCasualCallsBlocked, bwCFNRcSPNumForwarded=bwCFNRcSPNumForwarded, bwServiceTypeSystemIndex=bwServiceTypeSystemIndex, bwICOutdialNumAttempts=bwICOutdialNumAttempts, bwAsFlashCallHoldServiceGroup=bwAsFlashCallHoldServiceGroup, bwNbRequestsReceived=bwNbRequestsReceived, bwCallpEmergencyCallAttempts=bwCallpEmergencyCallAttempts, bwFlashConsultationNumCalls=bwFlashConsultationNumCalls, bwCallParkGroupIndex=bwCallParkGroupIndex, bwDnsStatsQueriesEntry=bwDnsStatsQueriesEntry, bwSessionAuditSPID=bwSessionAuditSPID, bwCommPilotCallMgrNumConferenceAnswer=bwCommPilotCallMgrNumConferenceAnswer, bwExternalCallLogsDropped=bwExternalCallLogsDropped, bwICSAGroupMonitoringFailure=bwICSAGroupMonitoringFailure, bwCallReturnSPTable=bwCallReturnSPTable, customRingback=customRingback, bwAsSimRingServiceGroup=bwAsSimRingServiceGroup, bwICSAGroupID=bwICSAGroupID, bwAsInCallServiceActivationGroup=bwAsInCallServiceActivationGroup, bwCFGNAGroupOverflowNoForward=bwCFGNAGroupOverflowNoForward, bwPSTcpServersNbConnectionsRefused=bwPSTcpServersNbConnectionsRefused, systemModule=systemModule, bwLastNumberRedialGroupID=bwLastNumberRedialGroupID, bwDirectedCallPickupNumAttempts=bwDirectedCallPickupNumAttempts, bwCFGNASPID=bwCFGNASPID, bwCommPilotCallMgrNumDial=bwCommPilotCallMgrNumDial, bwLastNumberRedialGroupIndex=bwLastNumberRedialGroupIndex, bwSipStatsOptionsResponsesTable=bwSipStatsOptionsResponsesTable, bwAsFlashConsultationServiceGroup=bwAsFlashConsultationServiceGroup, externalCustomRingback=externalCustomRingback, psSystemInternalQueueLengthCurrent=psSystemInternalQueueLengthCurrent, bwVMRSPNumComposeSendListAttempts=bwVMRSPNumComposeSendListAttempts, bwVAOIncomingAttempts=bwVAOIncomingAttempts, bwCommPilotCallMgrGroupNumDial=bwCommPilotCallMgrGroupNumDial, bwCallForwardingNoAnswerSPIndex=bwCallForwardingNoAnswerSPIndex, bwShInterfaceSubscribeNotificationsRequest=bwShInterfaceSubscribeNotificationsRequest, bwSessionAuditSPNumEndpointsFailedAudit=bwSessionAuditSPNumEndpointsFailedAudit, bwXSTcpServersNbConnectionsRefused=bwXSTcpServersNbConnectionsRefused, bwThirdPartyVoiceMailSPNbOfCFWBusy=bwThirdPartyVoiceMailSPNbOfCFWBusy, bwVPNumPasscodeChanged=bwVPNumPasscodeChanged, bwCallingLineIDDeliveryBlockPerCallBlocks=bwCallingLineIDDeliveryBlockPerCallBlocks, bwInstantConferencingGroupTable=bwInstantConferencingGroupTable, trunkGroup=trunkGroup, bwSeriesCompletionNumAttempts=bwSeriesCompletionNumAttempts, bwSequentialRingGroupAnswered=bwSequentialRingGroupAnswered, bwCommPilotCallMgrNumRelease=bwCommPilotCallMgrNumRelease, bwCallpGroupID=bwCallpGroupID, bwInstantConferencingBridgeTable=bwInstantConferencingBridgeTable, callForwardingNoAnswer=callForwardingNoAnswer, bwVPGreetingRecorded=bwVPGreetingRecorded, bwPSTcpServersNbBytesSent=bwPSTcpServersNbBytesSent, bwCallReturnSPID=bwCallReturnSPID, bwAlternateNumbersSPID=bwAlternateNumbersSPID, bwNumYellowZoneOverloadTrans=bwNumYellowZoneOverloadTrans, bwXSTcpServersStatsIndex=bwXSTcpServersStatsIndex, bwCustomRingbackSPEntry=bwCustomRingbackSPEntry, bwAHRGroupEntry=bwAHRGroupEntry, bwAnonymousCallRejectionGroupEntry=bwAnonymousCallRejectionGroupEntry, psOciStatsGroupRequestsPerHour=psOciStatsGroupRequestsPerHour, bwCallpNetworkTerminationAttempts=bwCallpNetworkTerminationAttempts, bwAsAutomaticHoldAndRetrieveServiceGroup=bwAsAutomaticHoldAndRetrieveServiceGroup, smdiModule=smdiModule, bwTwoStageDialingSPID=bwTwoStageDialingSPID, bwCallpSPMaximumNumberofSimCallsExceeded=bwCallpSPMaximumNumberofSimCallsExceeded, bwSCANumAcceptances=bwSCANumAcceptances, bwMultiMediaMsgDeposit=bwMultiMediaMsgDeposit, bwNRSStatsTableNbErrorsSent=bwNRSStatsTableNbErrorsSent, bwSipStatsNotifyResponseOuts=bwSipStatsNotifyResponseOuts, bwAsSpeedDialing100ServiceGroup=bwAsSpeedDialing100ServiceGroup, bwIGCPushToTalkInvoke=bwIGCPushToTalkInvoke, bwPTTSPReject=bwPTTSPReject, bwExternalCustomRingbackSPTable=bwExternalCustomRingbackSPTable, bwCommonCommPSAcceptedInboundConnections=bwCommonCommPSAcceptedInboundConnections, expensiveCallNotification=expensiveCallNotification, doNotDisturb=doNotDisturb, bwSipStatsInviteResponseCodeValue=bwSipStatsInviteResponseCodeValue, bwFlashConsultationGroupTable=bwFlashConsultationGroupTable, bwLNRSPNumRedials=bwLNRSPNumRedials, bwPSMonitoringExecutorNbWarnings=bwPSMonitoringExecutorNbWarnings)
mibBuilder.exportSymbols("BW-BroadworksApplicationServer", sessionAudit=sessionAudit, bwIPPhoneSPIndex=bwIPPhoneSPIndex, psBwVMRSPID=psBwVMRSPID, bwSipStatsMsgRetryToNeAddr=bwSipStatsMsgRetryToNeAddr, bwFamilySimRingGroupNumBusy=bwFamilySimRingGroupNumBusy, bwMessagingGroupQueryNoMailbox=bwMessagingGroupQueryNoMailbox, bwExternalCustomRingbackSPAttempts=bwExternalCustomRingbackSPAttempts, bwVAOOutgoingSuccess=bwVAOOutgoingSuccess, bwCAPStatsDatagramsOut=bwCAPStatsDatagramsOut, bwICPSPNumInterGroupBlocks=bwICPSPNumInterGroupBlocks, bwMCPResourceAllocAttempts=bwMCPResourceAllocAttempts, bwFaxMessagingPrinted=bwFaxMessagingPrinted, bwFlashThreeWayCallNum3WC=bwFlashThreeWayCallNum3WC, bwSipStatsSubscribeOuts=bwSipStatsSubscribeOuts, bwNonSubscriptionDialedUserPIC=bwNonSubscriptionDialedUserPIC, bwOCPSPNumUnsuccessfulAuthorizations=bwOCPSPNumUnsuccessfulAuthorizations, psOssStats=psOssStats, bwAsCustomerOriginatedTraceServiceGroup=bwAsCustomerOriginatedTraceServiceGroup, bwThirdPartyVMailSPEntry=bwThirdPartyVMailSPEntry, bwMWIDeliveryToMobileSPTable=bwMWIDeliveryToMobileSPTable, psShInterfaceModule=psShInterfaceModule, bwECNWarningAnnouncementAttempts=bwECNWarningAnnouncementAttempts, bwSipStatsInfoOuts=bwSipStatsInfoOuts, psOciStatsMaxRequestResponseTime=psOciStatsMaxRequestResponseTime, bwTrunkSPTerminationAttempt=bwTrunkSPTerminationAttempt, bwFlashCallHoldSPID=bwFlashCallHoldSPID, bwSCFGroupNumForwards=bwSCFGroupNumForwards, bwShInterfaceSubscribeNotificationsRequestFailure=bwShInterfaceSubscribeNotificationsRequestFailure, bwCallParkNumRetrieveFailures=bwCallParkNumRetrieveFailures, bwNRSStatsTableNbResponsesReceived=bwNRSStatsTableNbResponsesReceived, autoAttendant=autoAttendant, bwPTTSPIndex=bwPTTSPIndex, psOciStatsNbUpdateRequests=psOciStatsNbUpdateRequests, bwPolycomPhoneDirectoryGroupNumDownloads=bwPolycomPhoneDirectoryGroupNumDownloads, bwLocationControlGroup=bwLocationControlGroup, bwCallReturnSPEntry=bwCallReturnSPEntry, bwMGCPStatsAuditEndpointOuts=bwMGCPStatsAuditEndpointOuts, bwIGCSPNormalInvoke=bwIGCSPNormalInvoke, bwInterceptSPID=bwInterceptSPID, bwLDAPIntegrationNumQueryAttempts=bwLDAPIntegrationNumQueryAttempts, bwMGCPStatsEndpointConfigurationResponseTable=bwMGCPStatsEndpointConfigurationResponseTable, pushToTalk=pushToTalk, bwTrunkSPTerminationBlocked=bwTrunkSPTerminationBlocked, cot=cot, bwVPSPNumPasscodeChanged=bwVPSPNumPasscodeChanged, bwCallForwardingNoAnswerSPEntry=bwCallForwardingNoAnswerSPEntry, bwSipStatsUpdateResponseTable=bwSipStatsUpdateResponseTable, bwTrunkTerminationBlocked=bwTrunkTerminationBlocked, bwDPUBISPEntry=bwDPUBISPEntry, bwCommonCommPSHost=bwCommonCommPSHost, bwCallpActiveCallsAsPercentOfLicense=bwCallpActiveCallsAsPercentOfLicense, bwMGCPStatsDeleteConnectionResponseEntry=bwMGCPStatsDeleteConnectionResponseEntry, bwAsAnonymousCallRejectionServiceGroup=bwAsAnonymousCallRejectionServiceGroup, bwAlternateNumbersUsage=bwAlternateNumbersUsage, services=services, bwSequentialRingSPID=bwSequentialRingSPID, psBwVMRGroupID=psBwVMRGroupID, bwSessionAuditGroupNumEndpointsFailedAudit=bwSessionAuditGroupNumEndpointsFailedAudit, sharedCallAppearance=sharedCallAppearance, bwSimRingPersonalGroupTable=bwSimRingPersonalGroupTable, bwAlternateNumbersGroupEntry=bwAlternateNumbersGroupEntry, bwSystemInternalQueueLengthMaxTimestampMSB=bwSystemInternalQueueLengthMaxTimestampMSB, bwCongestionManagementNeighborCapability=bwCongestionManagementNeighborCapability, bwDoNotDisturbSPID=bwDoNotDisturbSPID, psTtConnectionPoolSize=psTtConnectionPoolSize, callCapacity=callCapacity, bwCommPilotCallMgrGroupNumConferenceAnswer=bwCommPilotCallMgrGroupNumConferenceAnswer, bwDPUBISPFailure=bwDPUBISPFailure, bwCommonCommPSStatsIndex=bwCommonCommPSStatsIndex, bwCustomRingbackUserAudioFailures=bwCustomRingbackUserAudioFailures, bwAsMgcpGroup=bwAsMgcpGroup, bwCAPStatsAclViolations=bwCAPStatsAclViolations, bwCallForwardingNoAnswerGroupEntry=bwCallForwardingNoAnswerGroupEntry, bwSipStatsOptionsResponseOuts=bwSipStatsOptionsResponseOuts, provisioningServer=provisioningServer, callForwardingNotReachable=callForwardingNotReachable, bwSelectiveCallRejectionGroupEntry=bwSelectiveCallRejectionGroupEntry, bwExtEmergencyRtgENServerTimeout=bwExtEmergencyRtgENServerTimeout, psOciStatsMaxServiceProviderRequestResponseTime=psOciStatsMaxServiceProviderRequestResponseTime, bwCongestionManagementNeighborSubscribeNotifyOut=bwCongestionManagementNeighborSubscribeNotifyOut, psOciStatsNbQueryRequests=psOciStatsNbQueryRequests, bwVMRSPCallBackAttempts=bwVMRSPCallBackAttempts, bwSD8GroupTable=bwSD8GroupTable, bwCommPilotCallManagerGroupIndex=bwCommPilotCallManagerGroupIndex, bwXSTTHWMEntry=bwXSTTHWMEntry, bwCFGNAExternalNoForward=bwCFGNAExternalNoForward, psOciModule=psOciModule, bwOCPNumOutsideGroupTransferBlocks=bwOCPNumOutsideGroupTransferBlocks, bwCallNotifySPEntry=bwCallNotifySPEntry, bwPSTcpServersNbBytesReceived=bwPSTcpServersNbBytesReceived, bwCFNRcNumPhoneActivations=bwCFNRcNumPhoneActivations, bwAnonymousCallRejectionSPID=bwAnonymousCallRejectionSPID, bwFlashThreeWayCallGroupID=bwFlashThreeWayCallGroupID, bwMessagingQueryNoUser=bwMessagingQueryNoUser, bwCallpSPMaximumCallTimeforAnsweredCallsExceeded=bwCallpSPMaximumCallTimeforAnsweredCallsExceeded, bwCallCapacityNumCallsBlocked=bwCallCapacityNumCallsBlocked, bwVMRCallBackFailures=bwVMRCallBackFailures, bwSystemInternalQueueLengthCurrent=bwSystemInternalQueueLengthCurrent, bwXSAvgRowsQueried=bwXSAvgRowsQueried, bwOCPGroupNumPremiumServices1CallsBlocked=bwOCPGroupNumPremiumServices1CallsBlocked, bwTrunkOriginationAttempt=bwTrunkOriginationAttempt, bwOCPNumUnknownCallsBlocked=bwOCPNumUnknownCallsBlocked, bwSipStatsCancelResponseOuts=bwSipStatsCancelResponseOuts, bwCongestionManagementNeighborCallpMessageInRate=bwCongestionManagementNeighborCallpMessageInRate, bwSeriesCompletionGroupIndex=bwSeriesCompletionGroupIndex, bwOCPGroupNumTollCallsBlocked=bwOCPGroupNumTollCallsBlocked, bwAsHotelingServiceGroup=bwAsHotelingServiceGroup, bwSipStatsOtherResponsesEntry=bwSipStatsOtherResponsesEntry, capModule=capModule, psPerNbFailedTransactions=psPerNbFailedTransactions, bwSPNonSubscriptionDialedServiceProviderPIC=bwSPNonSubscriptionDialedServiceProviderPIC, bwMessagingSPQueryNoMailbox=bwMessagingSPQueryNoMailbox, bwFamilySimRingGroupEntry=bwFamilySimRingGroupEntry, bwNbInvalidMessagesReceived=bwNbInvalidMessagesReceived, bwFlashCallTransferGroupEntry=bwFlashCallTransferGroupEntry, bwXSTTHWMIndex=bwXSTTHWMIndex, bwExternalCallLogsRetransmittedFromQueue=bwExternalCallLogsRetransmittedFromQueue, bwMusicOnHoldGroupTable=bwMusicOnHoldGroupTable, bwIGCGroupTable=bwIGCGroupTable, bwSD100SPProgram=bwSD100SPProgram, bwCallForwardingBusySPIndex=bwCallForwardingBusySPIndex, bwSipStatsRetryResponses=bwSipStatsRetryResponses, bwAutoAttendantGroupNumTransfers=bwAutoAttendantGroupNumTransfers, polycomGroupIndex=polycomGroupIndex, bwThirdPartyVoiceMailNbOfCFWNoAnswer=bwThirdPartyVoiceMailNbOfCFWNoAnswer, bwVMGroupMultiMediaGreetingRecorded=bwVMGroupMultiMediaGreetingRecorded, bwVAOGroupOutgoingSuccess=bwVAOGroupOutgoingSuccess, bwCallNotifyNumNotifications=bwCallNotifyNumNotifications, bwNumberOfSPUsers=bwNumberOfSPUsers, bwCustomRingbackUserAudioAttempts=bwCustomRingbackUserAudioAttempts, bwSipStatsMinAnswerSignalDelay=bwSipStatsMinAnswerSignalDelay, bwAccountCodeNumAttempts=bwAccountCodeNumAttempts, psOciStats=psOciStats, bwICPNumOutsideCallerBlocks=bwICPNumOutsideCallerBlocks, bwFaxMessagingGroupIndex=bwFaxMessagingGroupIndex, bwDPUBIGroupFailure=bwDPUBIGroupFailure, bwDnsQueryTimeAvg=bwDnsQueryTimeAvg, bwAccountCodesGroupTable=bwAccountCodesGroupTable, bwInterceptSPGroupTerminationInvocations=bwInterceptSPGroupTerminationInvocations, psRemoteXla=psRemoteXla, bwAsWindowsMessagingServiceGroup=bwAsWindowsMessagingServiceGroup, psSystemModule=psSystemModule, bwSmdiIncomingMWIActivationRequests=bwSmdiIncomingMWIActivationRequests, bwMGCPStatsEndpointConfigurationResponseEntry=bwMGCPStatsEndpointConfigurationResponseEntry, bwEZGroupEntry=bwEZGroupEntry, bwRingTimeoutGroupID=bwRingTimeoutGroupID, bwAsCallCapacityServiceGroup=bwAsCallCapacityServiceGroup, bwAutoAttendantNumTransfers=bwAutoAttendantNumTransfers, bwSequentialRingGroupID=bwSequentialRingGroupID, bwSelectiveCallAcceptanceGroupTable=bwSelectiveCallAcceptanceGroupTable, bwPSConcurrentFrameworkStatsGroup=bwPSConcurrentFrameworkStatsGroup, bwPSAvgRowsQueried=bwPSAvgRowsQueried, bwCallpSPIndex=bwCallpSPIndex, bwCallpSPMaximumNumberofSimVideoCallsExceeded=bwCallpSPMaximumNumberofSimVideoCallsExceeded, bwCFNAGroupNumPhoneDeactivations=bwCFNAGroupNumPhoneDeactivations, bwCallNotifySPTable=bwCallNotifySPTable, redundancyStats=redundancyStats, bwOCPSACNumUnsuccessfulCodeUsage=bwOCPSACNumUnsuccessfulCodeUsage, bwPreferredCarrierSPTable=bwPreferredCarrierSPTable, bwCAPStatsUnRegistersOut=bwCAPStatsUnRegistersOut, bwRingTimeoutGroupEntry=bwRingTimeoutGroupEntry, bwTrunkGroupPerTGBurstingMaxActiveCalls=bwTrunkGroupPerTGBurstingMaxActiveCalls, bwOutgoingCallingPlanGroupEntry=bwOutgoingCallingPlanGroupEntry, bwVMSPNumMessagesLeft=bwVMSPNumMessagesLeft, bwCallParkGroupEntry=bwCallParkGroupEntry, bwNbRequestsResent=bwNbRequestsResent, bwCommPilotCallMgrSPNumAnswer=bwCommPilotCallMgrSPNumAnswer, bwCommPilotCallMgrGroupNumTransfer=bwCommPilotCallMgrGroupNumTransfer, bwCommonCommXSOutputCommunicationErrors=bwCommonCommXSOutputCommunicationErrors, bwCallPickupGroupNumAttempts=bwCallPickupGroupNumAttempts, bwXSTcpServersNbBytesSentSecure=bwXSTcpServersNbBytesSentSecure, faxMessaging=faxMessaging, instantGroupCall=instantGroupCall, bwHuntGroupsGroupTable=bwHuntGroupsGroupTable, bwCotFailureNoId=bwCotFailureNoId, bwDndPhoneDeactivations=bwDndPhoneDeactivations, polycomGroupTableEntry=polycomGroupTableEntry, bwInterceptGroupUserTerminationInvocations=bwInterceptGroupUserTerminationInvocations, bwCotSPTable=bwCotSPTable, bwCommonCommPSStatsEntry=bwCommonCommPSStatsEntry, bwSPNoIndicationGroupPIC=bwSPNoIndicationGroupPIC, bwSessionAuditNumEndpointsAudited=bwSessionAuditNumEndpointsAudited, bwNRSStatsTableNbRequestsUnanswered=bwNRSStatsTableNbRequestsUnanswered, bwCFNAGroupNumForwarded=bwCFNAGroupNumForwarded, bwMGCPStatsCreateConnectionResponseTable=bwMGCPStatsCreateConnectionResponseTable, bwServiceTypeSystemID=bwServiceTypeSystemID, bwCallingLineIDDeliveryBlockGroupEntry=bwCallingLineIDDeliveryBlockGroupEntry, bwVAOIncomingSuccess=bwVAOIncomingSuccess, bwSipStatsInfoResponsesEntry=bwSipStatsInfoResponsesEntry, bwAsRedundancyStatsGroup=bwAsRedundancyStatsGroup, bwSipStatsCancelResponseIns=bwSipStatsCancelResponseIns, bwExternalCustomRingbackGroup=bwExternalCustomRingbackGroup, bwCAPStatsTotalMsgs=bwCAPStatsTotalMsgs, psOciStatsMaxSystemRequestResponseTime=psOciStatsMaxSystemRequestResponseTime, bwFlashCallTransferSPNumTransfers=bwFlashCallTransferSPNumTransfers, bwVAOSPIncomingSuccess=bwVAOSPIncomingSuccess, bwCFANumPhoneActivations=bwCFANumPhoneActivations, bwAccountCodesGroupID=bwAccountCodesGroupID, bwNumberOfSPGroups=bwNumberOfSPGroups, bwCallPickupGroupNumFailures=bwCallPickupGroupNumFailures, bwCongestionManagementNeighborIndex=bwCongestionManagementNeighborIndex, bwCAPStatsRegisterResponsesTable=bwCAPStatsRegisterResponsesTable, bwMGCPStatsDeleteConnectionResponseIns=bwMGCPStatsDeleteConnectionResponseIns, bwICPSPNumOutsideCallerBlocks=bwICPSPNumOutsideCallerBlocks, bwIncomingCallingPlanGroupTable=bwIncomingCallingPlanGroupTable, bwAccountCodeSPNumPerCallAttempts=bwAccountCodeSPNumPerCallAttempts, bwSmdiBlockResponsesReceived=bwSmdiBlockResponsesReceived, bwACBSPExpired=bwACBSPExpired, bwSipStatsInfoResponseCodeValue=bwSipStatsInfoResponseCodeValue, bwExtEmergencyRtgQueryFailure=bwExtEmergencyRtgQueryFailure, bwSessionAuditNumCallsFailedAudit=bwSessionAuditNumCallsFailedAudit, bwCAPStatsInfoRequests=bwCAPStatsInfoRequests, bwSipStatsUpdateIns=bwSipStatsUpdateIns, bwSPSubscriptionDialedUserPIC=bwSPSubscriptionDialedUserPIC, bwCallParkGroupID=bwCallParkGroupID, bwAsAccntCodeServiceGroup=bwAsAccntCodeServiceGroup, bwVMMultiMediaGreetingRecorded=bwVMMultiMediaGreetingRecorded, bwDPUBIGroupID=bwDPUBIGroupID, concurrentModule=concurrentModule, callPark=callPark, bwFamilySimRingSPTable=bwFamilySimRingSPTable, bwSystemGroupIndex=bwSystemGroupIndex, bwFamilySimRingGroupTable=bwFamilySimRingGroupTable, bwRingTimeoutSPID=bwRingTimeoutSPID, bwSCALocationControlActivationSuccess=bwSCALocationControlActivationSuccess, bwCallCenterGroupReportEmailed=bwCallCenterGroupReportEmailed, bwExternalCustomRingbackSPIndex=bwExternalCustomRingbackSPIndex, bwCustomRingbackSPTable=bwCustomRingbackSPTable, externalemergencyrouting=externalemergencyrouting, bwDirectedCallPickupGroupID=bwDirectedCallPickupGroupID, bwSimRingPersonalNumBusy=bwSimRingPersonalNumBusy, bwSelectiveCallRejectionGroupTable=bwSelectiveCallRejectionGroupTable, pmtStats=pmtStats, bwAccountCodesSPIndex=bwAccountCodesSPIndex, bwXSAvgQueryTime=bwXSAvgQueryTime, bwAccountCodeGroupNumPerCallAttempts=bwAccountCodeGroupNumPerCallAttempts, bwAsPreferredCarrierServiceGroup=bwAsPreferredCarrierServiceGroup, bwCFGNAGroupForward=bwCFGNAGroupForward, bwCotGroupEntry=bwCotGroupEntry, psOciStatsMaxGroupRequestName=psOciStatsMaxGroupRequestName, bwCommonCommPSInterface=bwCommonCommPSInterface, bwMCPResourceAllocFailures=bwMCPResourceAllocFailures, bwAuthenticationGroupID=bwAuthenticationGroupID, bwAsIcpServiceGroup=bwAsIcpServiceGroup, bwCallForwardingAlwaysGroupEntry=bwCallForwardingAlwaysGroupEntry, bwVPGroupNumCFADestinationChanged=bwVPGroupNumCFADestinationChanged, bwMusicOnHoldSPTable=bwMusicOnHoldSPTable, bwOCPSPNumOperatorAssistedCallsBlocked=bwOCPSPNumOperatorAssistedCallsBlocked, bwSipStatsTcpFailures=bwSipStatsTcpFailures, bwOCPNumTollFreeCallsBlocked=bwOCPNumTollFreeCallsBlocked, bwAsQueueStatsGroup=bwAsQueueStatsGroup, bwDPUBIBargeIn=bwDPUBIBargeIn, bwCotSPEntry=bwCotSPEntry, bwMessagingSPQueryNoUser=bwMessagingSPQueryNoUser)
mibBuilder.exportSymbols("BW-BroadworksApplicationServer", bwInterceptGroupTable=bwInterceptGroupTable, bwAsEmergencyZoneServiceGroup=bwAsEmergencyZoneServiceGroup, psServices=psServices, bwOCPNumURLDialingCallsBlocked=bwOCPNumURLDialingCallsBlocked, bwVMNumNoAnswerGreetingsPlayed=bwVMNumNoAnswerGreetingsPlayed, bwCallpGroupMaximumNumberofSimVideoCallsExceeded=bwCallpGroupMaximumNumberofSimVideoCallsExceeded, bwFamilySimRingGroupID=bwFamilySimRingGroupID, psSystemInternalQueueTimeMaxTimestampLSB=psSystemInternalQueueTimeMaxTimestampLSB, bwSelectiveCallRejectionSPID=bwSelectiveCallRejectionSPID, bwExternalCallLogsTransmitted=bwExternalCallLogsTransmitted, bwSystemInternalQueueSize=bwSystemInternalQueueSize, bwCallWaitingSPID=bwCallWaitingSPID, bwPSTcpServersNbBytesReceivedSecure=bwPSTcpServersNbBytesReceivedSecure, bwOCPSACSPNumSuccessfulLock=bwOCPSACSPNumSuccessfulLock, bwSD8GroupID=bwSD8GroupID, bwTrunkGroupOriginationBlocked=bwTrunkGroupOriginationBlocked, psBwVMRGroupEntry=psBwVMRGroupEntry, callingLineIDDeliveryBlock=callingLineIDDeliveryBlock, bwNumberOfSPDNAssigned=bwNumberOfSPDNAssigned, psRemoteXlaUpdatesPending=psRemoteXlaUpdatesPending, bwICPGroupNumIntraGroupBlocks=bwICPGroupNumIntraGroupBlocks, bwFlashCallHoldGroupID=bwFlashCallHoldGroupID, bwCommPilotCallMgrNumConference=bwCommPilotCallMgrNumConference, soapStats=soapStats, bwCongestionManagementNeighborRegisterIn=bwCongestionManagementNeighborRegisterIn, bwFlashThreeWayCallSPNum3WC=bwFlashThreeWayCallSPNum3WC, bwFaxMessagingSPPrinted=bwFaxMessagingSPPrinted, bwCallpUserTerminationAttempts=bwCallpUserTerminationAttempts, bwSimRingPersonalSPTable=bwSimRingPersonalSPTable, bwXSTTHWMTimestamp=bwXSTTHWMTimestamp, bwSelectiveCallRejectionGroupIndex=bwSelectiveCallRejectionGroupIndex, bwVPCCall=bwVPCCall, bwSD100GroupEntry=bwSD100GroupEntry, bwTwoStageDialingSPTable=bwTwoStageDialingSPTable, bwMCPCommandsTransmitted=bwMCPCommandsTransmitted, bwCallCapacityGroupID=bwCallCapacityGroupID, bwShInterfacePushNotificationRequest=bwShInterfacePushNotificationRequest, bwAutoAttendantGroupNumAnswers=bwAutoAttendantGroupNumAnswers, bwSD100SPEntry=bwSD100SPEntry, bwAsMssGroup=bwAsMssGroup, bwThirdPartyVMailSPTable=bwThirdPartyVMailSPTable, bwTrunkGroupPerTGGroupID=bwTrunkGroupPerTGGroupID, bwMGCPStatsMinSetupSignalDelay=bwMGCPStatsMinSetupSignalDelay, bwIGCGroupID=bwIGCGroupID, bwVAOSPIncomingAttempts=bwVAOSPIncomingAttempts, psOCIReportingBackLogMessageHost=psOCIReportingBackLogMessageHost, bwHotelingGroupAssociate=bwHotelingGroupAssociate, bwCustomRingbackUserVideoSPFailures=bwCustomRingbackUserVideoSPFailures, bwCommonCommPSStatsTable=bwCommonCommPSStatsTable, bwCallParkGroupNumRetrieveFailures=bwCallParkGroupNumRetrieveFailures, bwVoiceMessagingGroupEntry=bwVoiceMessagingGroupEntry, bwEZGroupTable=bwEZGroupTable, bwHuntGroupsSPIndex=bwHuntGroupsSPIndex, bwExternalCustomRingbackGroupIndex=bwExternalCustomRingbackGroupIndex, bwMessagingSPQuery=bwMessagingSPQuery, bwICSPOutdialNumAttempts=bwICSPOutdialNumAttempts, bwFlashThreeWayCallGroupNum3WC=bwFlashThreeWayCallGroupNum3WC, bwDirectedCallPickupNumFailures=bwDirectedCallPickupNumFailures, bwVMGroupNumNoAnswerGreetingsPlayed=bwVMGroupNumNoAnswerGreetingsPlayed, bwSipStatsMsgRetryToNeID=bwSipStatsMsgRetryToNeID, outgoingCallingPlan=outgoingCallingPlan, bwDPUBIAttempt=bwDPUBIAttempt, bwCFGNASPExternalForward=bwCFGNASPExternalForward, bwNbResponsesSent=bwNbResponsesSent, bwNbErrorsSent=bwNbErrorsSent, bwCommonCommPSOutputCommunicationErrors=bwCommonCommPSOutputCommunicationErrors, bwLocationControlSPEntry=bwLocationControlSPEntry, resetAllCounters=resetAllCounters, bwEZSPTable=bwEZSPTable, bwCallpSPEmergencyCallAttempts=bwCallpSPEmergencyCallAttempts, bwCallRetrieveSPTable=bwCallRetrieveSPTable, bwLNRGroupNumRedials=bwLNRGroupNumRedials, bwTrunkGroupEntry=bwTrunkGroupEntry, bwDiversionInhibitorGroupTable=bwDiversionInhibitorGroupTable, bwInterceptSPIndex=bwInterceptSPIndex, bwAsActivatableFeatureGroup=bwAsActivatableFeatureGroup, psDatabaseStats=psDatabaseStats, psConcurrentStats=psConcurrentStats, bwSipStatsMessageResponseCodeValue=bwSipStatsMessageResponseCodeValue, psBwVMRSPNumLoginFailures=psBwVMRSPNumLoginFailures, bwAuthenticationGroupTable=bwAuthenticationGroupTable, bwAsSequentialRingServiceGroup=bwAsSequentialRingServiceGroup, bwCallpNetworkTerminationsAnswered=bwCallpNetworkTerminationsAnswered, bwIMSSuccessfulConnectionAttempts=bwIMSSuccessfulConnectionAttempts, bwICPGroupNumOutsideCallerBlocks=bwICPGroupNumOutsideCallerBlocks, bwSCASPLocationControlActivationSuccess=bwSCASPLocationControlActivationSuccess, psPerNbCriticalErrors=psPerNbCriticalErrors, bwDirectedCallPickupSPTable=bwDirectedCallPickupSPTable, bwVMRGroupNumForwardSendListAttempts=bwVMRGroupNumForwardSendListAttempts, bwCallpGroupIndex=bwCallpGroupIndex, bwFlashCallTransferGroupNumTransfers=bwFlashCallTransferGroupNumTransfers, bwNonSubscriptionDialedGroupPIC=bwNonSubscriptionDialedGroupPIC, bwAsPhysicalLocationServiceGroup=bwAsPhysicalLocationServiceGroup, authentication=authentication, bwSipStatsSubscribeResponseIns=bwSipStatsSubscribeResponseIns, internalStats=internalStats, bwSipStatsPrackIns=bwSipStatsPrackIns, bwSipStatsRegistrationsPerMinute=bwSipStatsRegistrationsPerMinute, bwAsMusicOnHoldServiceGroup=bwAsMusicOnHoldServiceGroup, bwPhysicalLocationGroupIndex=bwPhysicalLocationGroupIndex, bwOCPNumUnsuccessfulAuthorizations=bwOCPNumUnsuccessfulAuthorizations, bwSessionAuditSPTable=bwSessionAuditSPTable, bwSeriesCompletionNumBusy=bwSeriesCompletionNumBusy, bwBASPCallOriginations=bwBASPCallOriginations, psVoiceMessagingGroup=psVoiceMessagingGroup, bwICSASPFlashDigitsDetected=bwICSASPFlashDigitsDetected, bwICSPGroupPortLimitExceeded=bwICSPGroupPortLimitExceeded, bwNRSStatsTableNbErrorsReceived=bwNRSStatsTableNbErrorsReceived, bwCFBSPNumPhoneActivations=bwCFBSPNumPhoneActivations, mssModule=mssModule, bwVMRNumForwardSendAttempts=bwVMRNumForwardSendAttempts, bwCFBGroupNumPhoneActivations=bwCFBGroupNumPhoneActivations, bwCommonCommPSAcceptedOutboundConnections=bwCommonCommPSAcceptedOutboundConnections, bwSipStatsSubscribeResponseCodeValue=bwSipStatsSubscribeResponseCodeValue, bwSD8GroupEntry=bwSD8GroupEntry, bwCallPickupSPIndex=bwCallPickupSPIndex, bwVMRGroupNumSendListFailed=bwVMRGroupNumSendListFailed, bwMWISMSSent=bwMWISMSSent, bwSmdiInvalidRequestsReceived=bwSmdiInvalidRequestsReceived, bwMusicOnHoldSPEntry=bwMusicOnHoldSPEntry, bwCongestionManagementNeighborNonCallpRequestInRate=bwCongestionManagementNeighborNonCallpRequestInRate, bwSelectiveCallForwardSPEntry=bwSelectiveCallForwardSPEntry, bwCallingLineIDDeliveryBlockSPTable=bwCallingLineIDDeliveryBlockSPTable, bwSipStatsNotifyOuts=bwSipStatsNotifyOuts, bwGroupSubscriptionDialedUserPIC=bwGroupSubscriptionDialedUserPIC, ttNbBackdoorUpdates=ttNbBackdoorUpdates, bwFlashCallHoldSPTable=bwFlashCallHoldSPTable, bwCAPStatsRegisterResponsesType=bwCAPStatsRegisterResponsesType, psBwVMRGroupIndex=psBwVMRGroupIndex, psOciStatsNbAuthorizationRequestFailures=psOciStatsNbAuthorizationRequestFailures, bwCFAGroupNumPhoneDeactivations=bwCFAGroupNumPhoneDeactivations, bwOCPSPNumChargeableDirAssistCallsBlocked=bwOCPSPNumChargeableDirAssistCallsBlocked, bwSeriesCompletionSPID=bwSeriesCompletionSPID, psSystemInternalQueueLengthMaxTimestampMSB=psSystemInternalQueueLengthMaxTimestampMSB, bwNumCallRedZoneOverloadTrans=bwNumCallRedZoneOverloadTrans, bwXSMonitoringExecutorEntry=bwXSMonitoringExecutorEntry, bwMWISPIndex=bwMWISPIndex, bwCotGroupTable=bwCotGroupTable, polycomSPTableEntry=polycomSPTableEntry, bwAsCallCenterServiceGroup=bwAsCallCenterServiceGroup, bwMCPNotificationsReceived=bwMCPNotificationsReceived, bwCommPilotCallMgrNumTransfer=bwCommPilotCallMgrNumTransfer, bwHuntGroupsDNHIncomingCalls=bwHuntGroupsDNHIncomingCalls, callpModule=callpModule, bwOCPSPNumSuccessfulAuthorizations=bwOCPSPNumSuccessfulAuthorizations, bwDiversionInhibitorSPIndex=bwDiversionInhibitorSPIndex, bwCommPilotCallMgrNumAnswer=bwCommPilotCallMgrNumAnswer, bwVAOGroupIncomingAttempts=bwVAOGroupIncomingAttempts, bwCallPickupSPNumFailures=bwCallPickupSPNumFailures, bwXSMonitoringExecutorName=bwXSMonitoringExecutorName, bwCFGNAOverflowForward=bwCFGNAOverflowForward, bwSequentialRingNumNoAnswer=bwSequentialRingNumNoAnswer, bwOCPNumSpecialServices2CallsBlocked=bwOCPNumSpecialServices2CallsBlocked, bwSelectiveCallAcceptanceSPTable=bwSelectiveCallAcceptanceSPTable, bwRingTimeoutSPIndex=bwRingTimeoutSPIndex, bwCotSPIndex=bwCotSPIndex, broadworks=broadworks, psBwVMRGroupNumLoginAttempts=psBwVMRGroupNumLoginAttempts, bwVPGroupNumPasscodeChanged=bwVPGroupNumPasscodeChanged, bwAsFlashCallXferServiceGroup=bwAsFlashCallXferServiceGroup, bwCFAGroupNumPhoneActivations=bwCFAGroupNumPhoneActivations, bwBroadWorksAnywhereSPID=bwBroadWorksAnywhereSPID, bwVMRSPNumSendGroupFailed=bwVMRSPNumSendGroupFailed, psCommonCommStats=psCommonCommStats, bwInstantConferencingBridgeName=bwInstantConferencingBridgeName, bwSipStatsMessageIns=bwSipStatsMessageIns, bwSequentialRingSPNumNoAnswer=bwSequentialRingSPNumNoAnswer, bwCallCapacitySPID=bwCallCapacitySPID, bwCustomRingbackGroupAudioSPAttempts=bwCustomRingbackGroupAudioSPAttempts, psRemoteXlaNbTimesConnected=psRemoteXlaNbTimesConnected, bwDiversionInhibitorGroupID=bwDiversionInhibitorGroupID, bwCallpActiveCalls=bwCallpActiveCalls, bwSipStatsUpdateResponseEntry=bwSipStatsUpdateResponseEntry, bwCallPickupNumAttempts=bwCallPickupNumAttempts, bwSCASPTable=bwSCASPTable, bwExternalCallLogsRetrievalFailures=bwExternalCallLogsRetrievalFailures, bwCallWaitingSPEntry=bwCallWaitingSPEntry, bwPSTTHWMEntry=bwPSTTHWMEntry, bwInterceptSPTransfers=bwInterceptSPTransfers, bwTrunkGroupPerTGCapacityExceededOffsetValue=bwTrunkGroupPerTGCapacityExceededOffsetValue, bwCallCenterGroupEntry=bwCallCenterGroupEntry, bwAuthenticationSPNumChallenges=bwAuthenticationSPNumChallenges, bwAsSpeedDialing8ServiceGroup=bwAsSpeedDialing8ServiceGroup, bwVPSPNumAABusHoursGreetingRecorded=bwVPSPNumAABusHoursGreetingRecorded, bwInstantConferencingGroupID=bwInstantConferencingGroupID, bwBroadWorksAnywhereGroupEntry=bwBroadWorksAnywhereGroupEntry, bwAsPushToTalkServiceGroup=bwAsPushToTalkServiceGroup, bwVMRNumLoginFailures=bwVMRNumLoginFailures, bwMGCPStatsMGCPCommandResponseIns=bwMGCPStatsMGCPCommandResponseIns, bwAuthCodeSPNumAttempts=bwAuthCodeSPNumAttempts, bwFlashCallHoldSPIndex=bwFlashCallHoldSPIndex, bwXSMonitoringExecutorNbErrors=bwXSMonitoringExecutorNbErrors, bwVMSPGreetingRecorded=bwVMSPGreetingRecorded, bwSipStatsByeResponseIns=bwSipStatsByeResponseIns, bwCallPickupGroupTable=bwCallPickupGroupTable, bwCustomRingbackGroupAudioGroupFailures=bwCustomRingbackGroupAudioGroupFailures, bwMGCPStatsDeleteGatewayConnectionResponseOuts=bwMGCPStatsDeleteGatewayConnectionResponseOuts, bwSelectiveCallRejectionGroupID=bwSelectiveCallRejectionGroupID, psRemoteXlaNbTimesDisconnected=psRemoteXlaNbTimesDisconnected, bwMGCPStatsMGCPCommandResponseOuts=bwMGCPStatsMGCPCommandResponseOuts, bwCommPilotCallMgrNumConferenceAdd=bwCommPilotCallMgrNumConferenceAdd, bwSmdiOutgoingMWIActivationRequests=bwSmdiOutgoingMWIActivationRequests, bwSipStatsMsgRetryPercentageToOther=bwSipStatsMsgRetryPercentageToOther, bwDoNotDisturbNumInvoked=bwDoNotDisturbNumInvoked, bwPMTNumLoggerOpen=bwPMTNumLoggerOpen, flashThreeWayCall=flashThreeWayCall, bwMGCPStatsRestartInProgressResponseOuts=bwMGCPStatsRestartInProgressResponseOuts, bwPSMonitoringExecutorCurrentPoolSize=bwPSMonitoringExecutorCurrentPoolSize, bwXSTcpStatsGroup=bwXSTcpStatsGroup, bwVPSPNumCFADestinationChanged=bwVPSPNumCFADestinationChanged, bwHotelingGroupTable=bwHotelingGroupTable, bwPSUpdateCount=bwPSUpdateCount, bwActivatableFeatureTable=bwActivatableFeatureTable, psOciStatsUserRequestsPerHour=psOciStatsUserRequestsPerHour, bwCFGNASPOverflowForward=bwCFGNASPOverflowForward, bwSubscriptionGroupPIC=bwSubscriptionGroupPIC, bwSessionAuditSPEntry=bwSessionAuditSPEntry, bwTrunkGroupOriginationAttempt=bwTrunkGroupOriginationAttempt, bwAsInstantGroupCallServiceGroup=bwAsInstantGroupCallServiceGroup, bwCNAMQueriesFailed=bwCNAMQueriesFailed, bwCallNotifyGroupEntry=bwCallNotifyGroupEntry, bwSPNonSubscriptionDialedUserPIC=bwSPNonSubscriptionDialedUserPIC, bwSOAPMaxServiceTime=bwSOAPMaxServiceTime, instantConferencing=instantConferencing, bwAsCallpGroup=bwAsCallpGroup, bwAutoAttendantGroupMultiMediaPromptRecorded=bwAutoAttendantGroupMultiMediaPromptRecorded, bwSmdiIncomingMWIDesactivationRequests=bwSmdiIncomingMWIDesactivationRequests, bwCAPStatsDatagramsIn=bwCAPStatsDatagramsIn, bwCallReturnGroupTable=bwCallReturnGroupTable, bwDoNotDisturbGroupEntry=bwDoNotDisturbGroupEntry, bwXSTcpServersNbBytesReceivedSecure=bwXSTcpServersNbBytesReceivedSecure, bwSMTPTotalSecondaryEmailSendAttempts=bwSMTPTotalSecondaryEmailSendAttempts, bwVoiceMessagingGroupID=bwVoiceMessagingGroupID, bwAuthCodeGroupNumAttempts=bwAuthCodeGroupNumAttempts, bwCallpNetworkOriginationAttempts=bwCallpNetworkOriginationAttempts, bwAuthenticationGroupIndex=bwAuthenticationGroupIndex, bwOCPSACGroupNumUnsuccessfulCodeUsage=bwOCPSACGroupNumUnsuccessfulCodeUsage, cpeDevicesStats=cpeDevicesStats, bwMusicOnHoldGroupIndex=bwMusicOnHoldGroupIndex, bwCustomRingbackGroupVideoGroupFailures=bwCustomRingbackGroupVideoGroupFailures, bwMGCPStatsNotifyResponseEntry=bwMGCPStatsNotifyResponseEntry, bwHuntGroupNumBusy=bwHuntGroupNumBusy, bwThirdPartyMWIControlNotifyFailures=bwThirdPartyMWIControlNotifyFailures, bwCFBGroupNumForwarded=bwCFBGroupNumForwarded, acb=acb, bwAlternateNumbersGroupID=bwAlternateNumbersGroupID, bwFaxMessagingGroupReceived=bwFaxMessagingGroupReceived, bwShInterfaceSystemRefreshInitiated=bwShInterfaceSystemRefreshInitiated, capStats=capStats, sd100=sd100, bwVMGreetingRecorded=bwVMGreetingRecorded, bwAsCallingLineIdBlockingServiceGroup=bwAsCallingLineIdBlockingServiceGroup, alternateNumbers=alternateNumbers, bwXSTcpServersOutgoingQueueSize=bwXSTcpServersOutgoingQueueSize)
mibBuilder.exportSymbols("BW-BroadworksApplicationServer", bwCFNANumForwarded=bwCFNANumForwarded, bwRingTimeoutNumExpires=bwRingTimeoutNumExpires, bwCustomRingbackUserAudioGroupFailures=bwCustomRingbackUserAudioGroupFailures, bwVMRSPNumNoAnswerGreetingsRecorded=bwVMRSPNumNoAnswerGreetingsRecorded, bwVMRGroupNumSendFailed=bwVMRGroupNumSendFailed, bwSequentialRingNumAttempts=bwSequentialRingNumAttempts, psTtNbConnectionsCreated=psTtNbConnectionsCreated, psNSSyncModule=psNSSyncModule, bwCommonCommXSStatsTable=bwCommonCommXSStatsTable, bwVoiceMessagingGroupIndex=bwVoiceMessagingGroupIndex, bwMGCPStatsMGCPCommandResponseTable=bwMGCPStatsMGCPCommandResponseTable, bwSipStatsMsgRetryToNePercentage=bwSipStatsMsgRetryToNePercentage, bwMGCPStatsAuditConnectionResponseCodeValue=bwMGCPStatsAuditConnectionResponseCodeValue, bwPreferredCarrierGroupID=bwPreferredCarrierGroupID, bwBroadWorksAnywhereSPIndex=bwBroadWorksAnywhereSPIndex, bwCallpGroupEntry=bwCallpGroupEntry, bwGroupSubscriptionGroupPIC=bwGroupSubscriptionGroupPIC, bwFlashConsultationSPNumCalls=bwFlashConsultationSPNumCalls, psOciStatsMinRequestResponseTime=psOciStatsMinRequestResponseTime, bwSCFNumForwards=bwSCFNumForwards, bwAsSipGroup=bwAsSipGroup, bwSipStatsCancelResponseCodeValue=bwSipStatsCancelResponseCodeValue, bwIPPhoneSPTable=bwIPPhoneSPTable, bwInstantConferencingTodaysPeakUsage=bwInstantConferencingTodaysPeakUsage, priorityAlert=priorityAlert, bwFamilySimRingNumAttempts=bwFamilySimRingNumAttempts, bwXSTTHWMTable=bwXSTTHWMTable, bwAsCallingNameQueriesServiceGroup=bwAsCallingNameQueriesServiceGroup, bwShInterfacePublicIdentityRefreshInitiated=bwShInterfacePublicIdentityRefreshInitiated, bwVMRDeleteAllMsgsAttempts=bwVMRDeleteAllMsgsAttempts, bwAnonymousCallsNumRejected=bwAnonymousCallsNumRejected, callForwardingBusy=callForwardingBusy, timesTen=timesTen, bwTrunkGroupPerTGEntry=bwTrunkGroupPerTGEntry, bwFlashCallWaitingSPIndex=bwFlashCallWaitingSPIndex, bwSD8SPID=bwSD8SPID, bwXSMonitoringExecutorCurrentPoolSize=bwXSMonitoringExecutorCurrentPoolSize, bwVMRNumForwardSendListAttempts=bwVMRNumForwardSendListAttempts, bwTrunkSPEntry=bwTrunkSPEntry, bwFaxMessagingSPReceptionFailure=bwFaxMessagingSPReceptionFailure, psInternalStats=psInternalStats, bwSipStatsUpdateResponseOuts=bwSipStatsUpdateResponseOuts, bwBroadWorksAnywhereSPEntry=bwBroadWorksAnywhereSPEntry, bwShInterfaceRequestTimeout=bwShInterfaceRequestTimeout, bwHuntGroupSPNumBusy=bwHuntGroupSPNumBusy, bwGroupNoIndicationUserPIC=bwGroupNoIndicationUserPIC, bwMWIDeliveryToMobileGroup=bwMWIDeliveryToMobileGroup, bwICSAFlashDigitsDetected=bwICSAFlashDigitsDetected, bwIncomingCallingPlanSPIndex=bwIncomingCallingPlanSPIndex, bwSystemInternalQueueName=bwSystemInternalQueueName, bwAutoAttendantSPNumAnswers=bwAutoAttendantSPNumAnswers, callCenter=callCenter, perNbOpenedTransactions=perNbOpenedTransactions, bwCommPilotCallMgrGroupNumTransferCC=bwCommPilotCallMgrGroupNumTransferCC, bwCallRetrieveSuccess=bwCallRetrieveSuccess, bwInCallServiceActivationGroupTable=bwInCallServiceActivationGroupTable, bwCallingLineIDDeliveryBlockGroupID=bwCallingLineIDDeliveryBlockGroupID, bwICSAMonitoringFailure=bwICSAMonitoringFailure, bwCallParkSPNumRetrieveFailures=bwCallParkSPNumRetrieveFailures, bwCommPilotCallManagerSPEntry=bwCommPilotCallManagerSPEntry, bwCPEDeviceStatsEntry=bwCPEDeviceStatsEntry, bwSipStatsOptionsResponseIns=bwSipStatsOptionsResponseIns, bwCPEDeviceFileGet=bwCPEDeviceFileGet, bwCPEDeviceFilePut=bwCPEDeviceFilePut, bwVMRGroupNumBusyGreetingsRecorded=bwVMRGroupNumBusyGreetingsRecorded, bwCFASPDestinationChanged=bwCFASPDestinationChanged, bwCallParkSPEntry=bwCallParkSPEntry, bwAHRGroupID=bwAHRGroupID, bwVoiceMessagingSPIndex=bwVoiceMessagingSPIndex, huntGroups=huntGroups, bwCommPilotCallMgrSPNumRelease=bwCommPilotCallMgrSPNumRelease, bwFaxMessagingGroupEntry=bwFaxMessagingGroupEntry, psSystemInternalQueueResets=psSystemInternalQueueResets, bwDNDGroupNumPhoneDeactivations=bwDNDGroupNumPhoneDeactivations, bwMGCPStatsMGCPCommandResponseCodeValue=bwMGCPStatsMGCPCommandResponseCodeValue, bwNbResponsesReceived=bwNbResponsesReceived, bwPSTcpServersStatsEntry=bwPSTcpServersStatsEntry, bwMusicOnHoldSPIndex=bwMusicOnHoldSPIndex, bwCFNAGroupNumPhoneActivations=bwCFNAGroupNumPhoneActivations, bwSipStatsCancelOuts=bwSipStatsCancelOuts, bwCallPickupSPID=bwCallPickupSPID, bwTrunkGroupPerTGName=bwTrunkGroupPerTGName, bwPSTcpServersName=bwPSTcpServersName, broadsoft=broadsoft, dnsModule=dnsModule, bwCustomRingbackGroupAudioFailures=bwCustomRingbackGroupAudioFailures, bwSOAPMaxThreads=bwSOAPMaxThreads, bwCallpUserTerminationsAnswered=bwCallpUserTerminationsAnswered, bwInCallServiceActivationSPEntry=bwInCallServiceActivationSPEntry, bwXSAvgUpdateTime=bwXSAvgUpdateTime, flashCallWaiting=flashCallWaiting, bwACBGroupTable=bwACBGroupTable, bwVMRNumComposeSendGroupAttempts=bwVMRNumComposeSendGroupAttempts, bwMessagingGroupQueryNoUser=bwMessagingGroupQueryNoUser, bwXSQueryCount=bwXSQueryCount, psPerNbOpenedTransactions=psPerNbOpenedTransactions, bwCommonCommXSInputCommunicationErrors=bwCommonCommXSInputCommunicationErrors, bwPreferredCarrierSPEntry=bwPreferredCarrierSPEntry, psOCIReportingBackLogMessageEntry=psOCIReportingBackLogMessageEntry, bwXSTcpServersIncomingQueueSize=bwXSTcpServersIncomingQueueSize, bwVMNumBusyGreetingsPlayed=bwVMNumBusyGreetingsPlayed, physicalLocation=physicalLocation, bwCongestionManagementNeighborNonCallpMessageOutRate=bwCongestionManagementNeighborNonCallpMessageOutRate, thirdPartyVMail=thirdPartyVMail, bwPreferredCarrierGroupTable=bwPreferredCarrierGroupTable, bwIMSSuccessfulDownLoadAttempts=bwIMSSuccessfulDownLoadAttempts, bwSipStatsInfoResponseOuts=bwSipStatsInfoResponseOuts, bwCommPilotCallMgrSPNumConferenceHold=bwCommPilotCallMgrSPNumConferenceHold, bwVPNumAAAfterHoursGreetingRecorded=bwVPNumAAAfterHoursGreetingRecorded, bwFlashCallWaitingSPEntry=bwFlashCallWaitingSPEntry, bwCallCapacityGroupTable=bwCallCapacityGroupTable, bwCommPilotCallMgrGroupNumAnswer=bwCommPilotCallMgrGroupNumAnswer, PYSNMP_MODULE_ID=broadsoft, bwMWIDeliveryToMobileSPEntry=bwMWIDeliveryToMobileSPEntry, bwCallNotifySPNumNotifications=bwCallNotifySPNumNotifications, bwMGCPStatsRestartInProgressIns=bwMGCPStatsRestartInProgressIns, bwOCPGroupNumOperatorAssistedCallsBlocked=bwOCPGroupNumOperatorAssistedCallsBlocked, bwSD8NumTimesDialed=bwSD8NumTimesDialed, bwAccountCodesSPEntry=bwAccountCodesSPEntry, bwTwoStageDialingSPEntry=bwTwoStageDialingSPEntry, bwVMRGroupNumForwardSendGroupAttempts=bwVMRGroupNumForwardSendGroupAttempts, bwNumberOfDeviceType=bwNumberOfDeviceType, bwAsFlashCallWaitingServiceGroup=bwAsFlashCallWaitingServiceGroup, bwCallParkSPNumRetrieveAttempts=bwCallParkSPNumRetrieveAttempts, bwCommPilotCallMgrSPNumConferenceAdd=bwCommPilotCallMgrSPNumConferenceAdd, bwOCPSACSPNumSuccessfulUnlock=bwOCPSACSPNumSuccessfulUnlock, bwCFBNumPhoneDeactivations=bwCFBNumPhoneDeactivations, bwSeriesCompletionGroupID=bwSeriesCompletionGroupID, bwCFNASPNumPhoneActivations=bwCFNASPNumPhoneActivations, bwSipStatsSubscribeIns=bwSipStatsSubscribeIns, bwSipStatsNotifyResponseIns=bwSipStatsNotifyResponseIns, bwDnsStatsQueriesTable=bwDnsStatsQueriesTable, bwICGroupOutdialNumAttempts=bwICGroupOutdialNumAttempts, bwSelectiveCallForwardGroupIndex=bwSelectiveCallForwardGroupIndex, bwVAOGroupTable=bwVAOGroupTable, bwTrunkGroupPerTGMaxActiveCalls=bwTrunkGroupPerTGMaxActiveCalls, bwSipStatsMaxAnswerSignalDelay=bwSipStatsMaxAnswerSignalDelay, bwEZSPRegistrationsRejected=bwEZSPRegistrationsRejected, bwDnsStatsQueries=bwDnsStatsQueries, bwWSPStatsServiceUpdatesIn=bwWSPStatsServiceUpdatesIn, bwInterceptGroupTerminationInvocations=bwInterceptGroupTerminationInvocations, bwXSMonitoringExecutorNbTasksRun=bwXSMonitoringExecutorNbTasksRun, bwICSASPMonitoringStarted=bwICSASPMonitoringStarted, bwNumberOfGroups=bwNumberOfGroups, bwMediaResourceAllocAttempts=bwMediaResourceAllocAttempts, bwSPSubscriptionGroupPIC=bwSPSubscriptionGroupPIC, bwACBGroupMaxSession=bwACBGroupMaxSession, psSystemInternalQueueLengthMax=psSystemInternalQueueLengthMax, bwXSAvgRowsUpdated=bwXSAvgRowsUpdated, bwPhysicalLocationSPIndex=bwPhysicalLocationSPIndex, bwSequentialRingSPEntry=bwSequentialRingSPEntry, bwSD100Program=bwSD100Program, bwCAPMonitoringUsersRequests=bwCAPMonitoringUsersRequests, bwCFNRcGroupNumPhoneDeactivations=bwCFNRcGroupNumPhoneDeactivations, bwVMRGroupNumPersonalizedNamesRecorded=bwVMRGroupNumPersonalizedNamesRecorded, bwSeriesCompletionGroupNumBusy=bwSeriesCompletionGroupNumBusy, bwSMDIMessageDeskMessageSent=bwSMDIMessageDeskMessageSent, bwMGCPStatsDeleteAgentConnectionOuts=bwMGCPStatsDeleteAgentConnectionOuts, bwAnonymousCallRejectionSPTable=bwAnonymousCallRejectionSPTable, bwOCPNumOperatorAssistedCallsBlocked=bwOCPNumOperatorAssistedCallsBlocked, bwCFNRcSPNumPhoneActivations=bwCFNRcSPNumPhoneActivations, bwCustomRingbackUserVideoGroupAttempts=bwCustomRingbackUserVideoGroupAttempts, bwMGCPStatsExtraCommandResponseCodeValue=bwMGCPStatsExtraCommandResponseCodeValue, bwACBSPID=bwACBSPID, bwCustomRingbackGroupIndex=bwCustomRingbackGroupIndex, bwSipStatsNotifyResponsesTable=bwSipStatsNotifyResponsesTable, bwSystemGroupID=bwSystemGroupID, bwSPNoIndicationServiceProviderPIC=bwSPNoIndicationServiceProviderPIC, bwPriorityAlertGroupTable=bwPriorityAlertGroupTable, bwCongestionManagementNeighborOptionsOut=bwCongestionManagementNeighborOptionsOut, bwCallForwardingAlwaysSPTable=bwCallForwardingAlwaysSPTable, bwCommPilotCallMgrGroupNumConferenceAdd=bwCommPilotCallMgrGroupNumConferenceAdd, bwCallpGroupMediaTypeNotSupported=bwCallpGroupMediaTypeNotSupported, bwLocationControlActivationSuccess=bwLocationControlActivationSuccess, bwICPNumCollectCallBlocks=bwICPNumCollectCallBlocks, tcpStats=tcpStats, bwAHRGroupIndex=bwAHRGroupIndex, bwAccountCodeSPNumAttempts=bwAccountCodeSPNumAttempts, bwNbErrorsReceived=bwNbErrorsReceived, bwCAPStatsRegisterRequests=bwCAPStatsRegisterRequests, bwCallCenterGroupIndex=bwCallCenterGroupIndex, bwTrunkGroupPerTGBurstingMaxIncomingActiveCalls=bwTrunkGroupPerTGBurstingMaxIncomingActiveCalls, bwAnonymousCallsSPNumRejected=bwAnonymousCallsSPNumRejected, bwPSTcpServersNbConnectionsAccepted=bwPSTcpServersNbConnectionsAccepted, bwCWNumPhoneCancellations=bwCWNumPhoneCancellations, bwSystemSPName=bwSystemSPName, commonCommStats=commonCommStats, bwAsPsLdapGroup=bwAsPsLdapGroup, bwSMTPPrimaryUnSuccessfulEmailSendAttempts=bwSMTPPrimaryUnSuccessfulEmailSendAttempts, bwAuthenticationGroupEntry=bwAuthenticationGroupEntry, bwMusicOnHoldGroupID=bwMusicOnHoldGroupID, bwTwoStageDialingGroupID=bwTwoStageDialingGroupID, bwExternalCustomRingbackGroupAttempts=bwExternalCustomRingbackGroupAttempts, psTcpStats=psTcpStats, bwCallpUserOriginationAttempts=bwCallpUserOriginationAttempts, bwVMNumMessagesLeft=bwVMNumMessagesLeft, bwCFBNumPhoneActivations=bwCFBNumPhoneActivations, bwCallReturnGroupID=bwCallReturnGroupID, bwMusicOnHoldExternalSourceNumFailures=bwMusicOnHoldExternalSourceNumFailures, bwFlashConsultationGroupID=bwFlashConsultationGroupID, bwOCPGroupNumSpecialServices1CallsBlocked=bwOCPGroupNumSpecialServices1CallsBlocked, bwCotGroupFailureNoId=bwCotGroupFailureNoId, bwCongestionManagementNeighborSubscribeNotifyIn=bwCongestionManagementNeighborSubscribeNotifyIn, bwFlashCallTransferSPIndex=bwFlashCallTransferSPIndex, bwOCPSACGroupNumUnsuccessfulLock=bwOCPSACGroupNumUnsuccessfulLock, bwDPUBISPExempt=bwDPUBISPExempt, bwFlashThreeWayCallSPTable=bwFlashThreeWayCallSPTable, bwCotGroupID=bwCotGroupID, bwAsTwoStageDialingServiceGroup=bwAsTwoStageDialingServiceGroup, bwLocationControlGroupActivationSuccess=bwLocationControlGroupActivationSuccess, bwPhysicalLocationGroupEntry=bwPhysicalLocationGroupEntry, bwFaxMessagingPrintingFailure=bwFaxMessagingPrintingFailure, bwCotGroupIndex=bwCotGroupIndex, bwCAPStatsAcknowledgementsIn=bwCAPStatsAcknowledgementsIn, bwExternalCustomRingbackGroupFailures=bwExternalCustomRingbackGroupFailures, bwFaxMessagingSPEntry=bwFaxMessagingSPEntry, bwVMRGroupNumComposeSendAttempts=bwVMRGroupNumComposeSendAttempts, bwCFBSPNumPhoneDeactivations=bwCFBSPNumPhoneDeactivations, bwSystemGroupTable=bwSystemGroupTable, bwDnsStatsQueryType=bwDnsStatsQueryType, psOssModule=psOssModule, bwGroupNonSubscriptionDialedUserPIC=bwGroupNonSubscriptionDialedUserPIC, bwHotelingSPIndex=bwHotelingSPIndex, bwSipStatsCancelResponsesTable=bwSipStatsCancelResponsesTable, bwHotelingSPID=bwHotelingSPID, nrsModule=nrsModule, ttNbConnectionsCreated=ttNbConnectionsCreated, bwCallForwardingBusySPTable=bwCallForwardingBusySPTable, bwVMRNumReplySendAttempts=bwVMRNumReplySendAttempts, bwMGCPStatsSetupSignalDelay=bwMGCPStatsSetupSignalDelay, bwCustomRingbackUserVideoFailures=bwCustomRingbackUserVideoFailures, bwEZGroupEmergencyCallsRejected=bwEZGroupEmergencyCallsRejected, bwXSMonitoringExecutorMaxPoolSize=bwXSMonitoringExecutorMaxPoolSize, psReservedModule=psReservedModule, bwVMRNumForwardSendGroupAttempts=bwVMRNumForwardSendGroupAttempts, xsRemoteXlaUpdatesPending=xsRemoteXlaUpdatesPending, bwFamilySimRingNumBusy=bwFamilySimRingNumBusy, bwTrunkGroupTerminationBlocked=bwTrunkGroupTerminationBlocked, psOciStatsMaxServiceProviderRequestName=psOciStatsMaxServiceProviderRequestName, psBwVMRSPTable=psBwVMRSPTable, bwNRSStatsTable=bwNRSStatsTable, bwFamilySimRingSPNumBusy=bwFamilySimRingSPNumBusy, bwAsBusinessTrunkGroupServiceGroup=bwAsBusinessTrunkGroupServiceGroup, bwExternalCallLogsQueued=bwExternalCallLogsQueued, bwCallParkNumFailures=bwCallParkNumFailures, automaticHoldRetrieve=automaticHoldRetrieve, bwAlternateNumbersSPTable=bwAlternateNumbersSPTable, bwAsCallReturnServiceGroup=bwAsCallReturnServiceGroup, bwSPSubscriptionUserPIC=bwSPSubscriptionUserPIC, bwNRSStatsTableNbResponsesSent=bwNRSStatsTableNbResponsesSent, bwPriorityAlertGroupNumDistinctive=bwPriorityAlertGroupNumDistinctive, bwCustomRingbackGroupAudioGroupAttempts=bwCustomRingbackGroupAudioGroupAttempts, bwSCASPCallRetrieveSuccess=bwSCASPCallRetrieveSuccess, bwOCPSPNumIntlCallsBlocked=bwOCPSPNumIntlCallsBlocked)
mibBuilder.exportSymbols("BW-BroadworksApplicationServer", bwAsExtEmergencyRtgStatsGroup=bwAsExtEmergencyRtgStatsGroup, bwActivatableFeatureId=bwActivatableFeatureId, hoteling=hoteling, bwSelectiveCallAcceptanceSPEntry=bwSelectiveCallAcceptanceSPEntry, bwIGCNormalInvoke=bwIGCNormalInvoke, bwSimRingPersonalGroupID=bwSimRingPersonalGroupID, preferredCarrier=preferredCarrier, bwOCPSPNumTollCallsBlocked=bwOCPSPNumTollCallsBlocked, bwCommPilotCallMgrNumConferenceRelease=bwCommPilotCallMgrNumConferenceRelease, bwFlashCallHoldSPNumActivations=bwFlashCallHoldSPNumActivations, bwAsInterceptServiceGroup=bwAsInterceptServiceGroup, bwFaxMessagingSPIndex=bwFaxMessagingSPIndex, bwSPSubscriptionDialedServiceProviderPIC=bwSPSubscriptionDialedServiceProviderPIC, bwCallCapacitySPNumCallsAttempted=bwCallCapacitySPNumCallsAttempted, bwVMRGroupNumLoginFailures=bwVMRGroupNumLoginFailures, bwICNumAttempts=bwICNumAttempts, bwFaxMessagingReceptionFailure=bwFaxMessagingReceptionFailure, bwCallpSPMaximumCallTimeforUnansweredCallsExceeded=bwCallpSPMaximumCallTimeforUnansweredCallsExceeded, bwPTTReject=bwPTTReject, sipModule=sipModule, bwCallReturnSPNumReturns=bwCallReturnSPNumReturns, bwCallpRemoteOfficeEmergencyCallsBlocked=bwCallpRemoteOfficeEmergencyCallsBlocked, bwSipStatsByeResponseCodeValue=bwSipStatsByeResponseCodeValue, bwGroupMWISMSSent=bwGroupMWISMSSent, bwAsReservedGroup=bwAsReservedGroup, bwSipStatsOtherResponseIns=bwSipStatsOtherResponseIns, bwAnonymousCallRejectionGroupTable=bwAnonymousCallRejectionGroupTable, bwSmdiBlockResponsesSent=bwSmdiBlockResponsesSent, bwVAOSPID=bwVAOSPID, bwCallForwardingBusyGroupIndex=bwCallForwardingBusyGroupIndex, bwFlashCallWaitingNumAnswers=bwFlashCallWaitingNumAnswers, bwSeriesCompletionGroupEntry=bwSeriesCompletionGroupEntry, bwTrunkSPTable=bwTrunkSPTable, bwPMTNumLoggerCreated=bwPMTNumLoggerCreated, bwOCPNumPremiumServices2CallsBlocked=bwOCPNumPremiumServices2CallsBlocked, bwMGCPStatsMGCPCommandOuts=bwMGCPStatsMGCPCommandOuts, bwOCPGroupNumTransfers=bwOCPGroupNumTransfers, bwInterceptGroupGroupTerminationInvocations=bwInterceptGroupGroupTerminationInvocations, bwMGCPStatsEndpointConfigurationResponseIns=bwMGCPStatsEndpointConfigurationResponseIns, bwShInterfaceResponsesIn=bwShInterfaceResponsesIn, bwMGCPStatsModifyConnectionResponseCodeValue=bwMGCPStatsModifyConnectionResponseCodeValue, bwCallingLineIDDeliveryBlockSPIndex=bwCallingLineIDDeliveryBlockSPIndex, bwExternalCustomRingbackAttempts=bwExternalCustomRingbackAttempts, psVoiceMessaging=psVoiceMessaging, selectiveCallAcceptance=selectiveCallAcceptance, bwVMRNumComposeSendAttempts=bwVMRNumComposeSendAttempts, bwSD100GroupTable=bwSD100GroupTable, bwSPSubscriptionServiceProviderPIC=bwSPSubscriptionServiceProviderPIC, bwSessionAuditGroupIndex=bwSessionAuditGroupIndex, bwVMRGroupNumLoginAttempts=bwVMRGroupNumLoginAttempts, bwDirectedCallPickupSPID=bwDirectedCallPickupSPID, bwSystemInternalQueueTimeMin=bwSystemInternalQueueTimeMin, bwECNExpensiveCallReleased=bwECNExpensiveCallReleased, bwSequentialRingGroupActivations=bwSequentialRingGroupActivations, bwAsImsGroup=bwAsImsGroup, bwBroadWorksAnywhereGroupIndex=bwBroadWorksAnywhereGroupIndex, bwSystemInternalQueueTimeMaxTimestampMSB=bwSystemInternalQueueTimeMaxTimestampMSB, bwVoiceMessagingSPTable=bwVoiceMessagingSPTable, bwIGCGroupIndex=bwIGCGroupIndex, bwPriorityAlertSPNumDistinctive=bwPriorityAlertSPNumDistinctive, bwSIPReclaimedStaleTcpConnections=bwSIPReclaimedStaleTcpConnections, bwXSMonitoringExecutorAvgActiveThreads=bwXSMonitoringExecutorAvgActiveThreads, bwSystemGroupEntry=bwSystemGroupEntry, bwSipStatsUpdateResponseIns=bwSipStatsUpdateResponseIns, bwPSTTHWMTable=bwPSTTHWMTable, bwSCASPIndex=bwSCASPIndex, bwShInterfaceRequestResourceLimitation=bwShInterfaceRequestResourceLimitation, bwTwoStageDialingGroupInvocation=bwTwoStageDialingGroupInvocation, bwAsMibGroups=bwAsMibGroups, bwAsSmdiGroup=bwAsSmdiGroup, bwCAPStatsUnRegistersIn=bwCAPStatsUnRegistersIn, bwDirectedCallPickupSPIndex=bwDirectedCallPickupSPIndex, bwSipStatsInviteResponsesTable=bwSipStatsInviteResponsesTable, bwSipStatsByeResponsesEntry=bwSipStatsByeResponsesEntry, bwCustomRingbackUserVideoSPAttempts=bwCustomRingbackUserVideoSPAttempts, bwAsMaliciousCallTraceServiceGroup=bwAsMaliciousCallTraceServiceGroup, bwCAPStatsQueueActionsIn=bwCAPStatsQueueActionsIn, psOciStatsSystemRequestResponseTime=psOciStatsSystemRequestResponseTime, bwCallingLineIDDeliveryBlockGroupTable=bwCallingLineIDDeliveryBlockGroupTable, bwCFANumPhoneDeactivations=bwCFANumPhoneDeactivations, bwIMSAvgSessions=bwIMSAvgSessions, bwICPNumInterGroupBlocks=bwICPNumInterGroupBlocks, bwLocationControlGroupTable=bwLocationControlGroupTable, bwACBSPIndex=bwACBSPIndex, bwTrunkSPOriginationAttempt=bwTrunkSPOriginationAttempt, bwAsXsBcctGroup=bwAsXsBcctGroup, bwIMSMaxServiceTime=bwIMSMaxServiceTime, bwSipStatsRetryInvites=bwSipStatsRetryInvites, bwNSqueryRequestsRetransmitted=bwNSqueryRequestsRetransmitted, bwCFNRcSPID=bwCFNRcSPID, bwSD100GroupCall=bwSD100GroupCall, bwPriorityAlertSPEntry=bwPriorityAlertSPEntry, bwOCPSPNumPremiumServices1CallsBlocked=bwOCPSPNumPremiumServices1CallsBlocked, bwFlashThreeWayCallSPIndex=bwFlashThreeWayCallSPIndex, bwVMRSPNumLoginFailures=bwVMRSPNumLoginFailures, bwMGCPStatsExtraCommandResponseTable=bwMGCPStatsExtraCommandResponseTable, bwHuntGroupsSPDNHIncomingCalls=bwHuntGroupsSPDNHIncomingCalls, bwFlashCallHoldGroupEntry=bwFlashCallHoldGroupEntry, bwEZRegistrationsRejected=bwEZRegistrationsRejected, bwDPUBIGroupIndex=bwDPUBIGroupIndex, bwOCPSPNumSpecialServices1CallsBlocked=bwOCPSPNumSpecialServices1CallsBlocked, bwFlashCallTransferSPTable=bwFlashCallTransferSPTable, bwAsRingTimeoutServiceGroup=bwAsRingTimeoutServiceGroup, bwEZSPNormalCallsRejected=bwEZSPNormalCallsRejected, sequentialRing=sequentialRing, bwMGCPStatsMaxAnswerSignalDelay=bwMGCPStatsMaxAnswerSignalDelay, bwACBGroupExpired=bwACBGroupExpired, bwAccountCodesGroupIndex=bwAccountCodesGroupIndex, bwAutoAttendantSPNumTransfers=bwAutoAttendantSPNumTransfers, bwVoiceMessagingGroupTable=bwVoiceMessagingGroupTable, bwPTTGroupTable=bwPTTGroupTable, psActivatableFeatureModule=psActivatableFeatureModule, bwSipStatsRegisterResponsesEntry=bwSipStatsRegisterResponsesEntry, bwCPEDeviceFileDelete=bwCPEDeviceFileDelete, bwOCPNumCasualCallsBlocked=bwOCPNumCasualCallsBlocked, bwDirectedCallPickupGroupEntry=bwDirectedCallPickupGroupEntry, bwSipStatsByeOuts=bwSipStatsByeOuts, bwSystemSPID=bwSystemSPID, psReservedCounter=psReservedCounter, psOCIReportingBackLogMessageSent=psOCIReportingBackLogMessageSent, bwSystemGroupSPID=bwSystemGroupSPID, bwTrunkSPIndex=bwTrunkSPIndex, bwHotelingGroupIndex=bwHotelingGroupIndex, psOciStatsActiveSessions=psOciStatsActiveSessions, bwMaliciousCallTraceSPIndex=bwMaliciousCallTraceSPIndex, psDatabaseModule=psDatabaseModule, bwOutgoingCallingPlanGroupID=bwOutgoingCallingPlanGroupID, bwCallRetrieveSPID=bwCallRetrieveSPID, bwAuthenticationNumValidResponses=bwAuthenticationNumValidResponses, bwInterceptGroupEntry=bwInterceptGroupEntry, bwCallingLineIDDeliveryPerCallGroup=bwCallingLineIDDeliveryPerCallGroup, bwXSTcpServersName=bwXSTcpServersName, bwSCRSPNumRejects=bwSCRSPNumRejects, bwCommonCommXSHost=bwCommonCommXSHost, bwAuthenticationSPIndex=bwAuthenticationSPIndex, bwIPPhoneGroupIndex=bwIPPhoneGroupIndex, bwExternalCustomRingbackSPID=bwExternalCustomRingbackSPID, bwTrunkGroupPerTGBursting=bwTrunkGroupPerTGBursting, bwSessionAuditSPNumEndpointsAudited=bwSessionAuditSPNumEndpointsAudited, psOciStatsRequestsPerHour=psOciStatsRequestsPerHour, bwLDAPIntegrationNumConnectionFailures=bwLDAPIntegrationNumConnectionFailures, bwCallPickupSPTable=bwCallPickupSPTable, bwDeviceTypeSystemID=bwDeviceTypeSystemID, bwAlternateNumbersGroupUsage=bwAlternateNumbersGroupUsage, psSystemInternalQueueName=psSystemInternalQueueName, bwBAGroupCallTerminations=bwBAGroupCallTerminations, bwSipStatsAnswerSignalDelay=bwSipStatsAnswerSignalDelay, bwCallCenterSPEntry=bwCallCenterSPEntry, bwICGroupGroupPortLimitExceeded=bwICGroupGroupPortLimitExceeded, bwOCPSPNumSpecialServices2CallsBlocked=bwOCPSPNumSpecialServices2CallsBlocked, bwCAPStatsCallActionsIn=bwCAPStatsCallActionsIn, selectiveCallRejection=selectiveCallRejection, bwIncomingCallingPlanSPEntry=bwIncomingCallingPlanSPEntry, bwAsCallForwardGroupNoAnswerServiceGroup=bwAsCallForwardGroupNoAnswerServiceGroup, polycomSPID=polycomSPID, bwPSMonitoringExecutorLongestTaskMs=bwPSMonitoringExecutorLongestTaskMs, bwMessagingGroupQuery=bwMessagingGroupQuery, bwDirectedCallPickupGroupNumFailures=bwDirectedCallPickupGroupNumFailures, bwVMRSPNumForwardSendListAttempts=bwVMRSPNumForwardSendListAttempts, bwLocationControlGroupID=bwLocationControlGroupID, bwInterceptSPUserOriginationInvocations=bwInterceptSPUserOriginationInvocations, bwBACallTerminations=bwBACallTerminations, psSystemInternalQueueTimeAvg=psSystemInternalQueueTimeAvg, bwExtEmergencyRtgQuerySent=bwExtEmergencyRtgQuerySent, bwAlternateNumbersSPIndex=bwAlternateNumbersSPIndex, bwCallpEmergencyCallAlarms=bwCallpEmergencyCallAlarms, bwIPPhoneNumForwards=bwIPPhoneNumForwards, bwNRSStatsTableNbRequestsSent=bwNRSStatsTableNbRequestsSent, bwMaliciousCallTraceSPEntry=bwMaliciousCallTraceSPEntry, bwFlashCallTransferSPID=bwFlashCallTransferSPID, callNotify=callNotify, bwGroupNonSubscriptionDialedServiceProviderPIC=bwGroupNonSubscriptionDialedServiceProviderPIC, bwRealtimeAccountingRequestsTransmitted=bwRealtimeAccountingRequestsTransmitted, bwSipStatsMsgRetryToNeTable=bwSipStatsMsgRetryToNeTable, bwCFNANumPhoneDeactivations=bwCFNANumPhoneDeactivations, psSystemInternalQueueIndex=psSystemInternalQueueIndex, bwTrunkGroupPerTGBurstingMaxOutgoingActiveCalls=bwTrunkGroupPerTGBurstingMaxOutgoingActiveCalls, bwGroupSubscriptionDialedServiceProviderPIC=bwGroupSubscriptionDialedServiceProviderPIC, bwVAOSPTable=bwVAOSPTable, bwMWIGroupIndex=bwMWIGroupIndex, bwSessionAuditGroupNumEndpointsAudited=bwSessionAuditGroupNumEndpointsAudited, bwMGCPStatsNotificationRequestResponseCodeValue=bwMGCPStatsNotificationRequestResponseCodeValue, mediaModule=mediaModule, realtimeAccountingStats=realtimeAccountingStats, bwThirdPartyMWIControlNotifyIns=bwThirdPartyMWIControlNotifyIns, bwExternalCustomRingbackSPEntry=bwExternalCustomRingbackSPEntry, bwOCPSPNumUnknownCallsBlocked=bwOCPSPNumUnknownCallsBlocked, bwCallForwardingAlwaysGroupIndex=bwCallForwardingAlwaysGroupIndex, bwVMRNumComposeSendListAttempts=bwVMRNumComposeSendListAttempts, bwHotelingGroupDisassociate=bwHotelingGroupDisassociate, bwPSMonitoringExecutorEntry=bwPSMonitoringExecutorEntry, bwDPUBISPAttempt=bwDPUBISPAttempt, bwCongestionManagementNeighborOptionsIn=bwCongestionManagementNeighborOptionsIn, psOciStatsGroupRequestResponseTime=psOciStatsGroupRequestResponseTime, bwSequentialRingGroupTable=bwSequentialRingGroupTable, bwTrunkGroupTerminationAttempt=bwTrunkGroupTerminationAttempt, bwXSTcpServersNbBytesReceived=bwXSTcpServersNbBytesReceived, bwAnonymousCallRejectionSPEntry=bwAnonymousCallRejectionSPEntry, bwCommonCommXSStatsEntry=bwCommonCommXSStatsEntry, externalCallLogsStats=externalCallLogsStats, bwSipStatsMessageResponsesTable=bwSipStatsMessageResponsesTable, bwAsDiversionInhibitorServiceGroup=bwAsDiversionInhibitorServiceGroup, bwSipStatsCancelResponsesEntry=bwSipStatsCancelResponsesEntry, bwMWIGroupID=bwMWIGroupID, bwSequentialRingSPIndex=bwSequentialRingSPIndex, bwFamilySimRingGroupNumAttempts=bwFamilySimRingGroupNumAttempts, bwTimeLastDiscardedMessage=bwTimeLastDiscardedMessage, bwCPEDeviceStatsTable=bwCPEDeviceStatsTable, bwSipStatsPrackResponsesTable=bwSipStatsPrackResponsesTable, bwAlternateNumbersSPUsage=bwAlternateNumbersSPUsage, bwIGCGroupPushToTalkInvoke=bwIGCGroupPushToTalkInvoke, bwPriorityAlertNumDistinctive=bwPriorityAlertNumDistinctive, bwSessionAuditSPNumCallsFailedAudit=bwSessionAuditSPNumCallsFailedAudit, bwHotelingSPDisassociate=bwHotelingSPDisassociate, callWaiting=callWaiting, bwSCAGroupCallRetrieveSuccess=bwSCAGroupCallRetrieveSuccess, bwInterceptGroupUserOriginationInvocations=bwInterceptGroupUserOriginationInvocations, psOciStatsMaxRequestName=psOciStatsMaxRequestName, bwCallpSPEntry=bwCallpSPEntry, bwDnsStatsQueryTimeouts=bwDnsStatsQueryTimeouts, bwICSAGroupIndex=bwICSAGroupIndex, ipPhone=ipPhone, bwICGroupNumAttempts=bwICGroupNumAttempts, bwSmppSubmitSMRequestsSent=bwSmppSubmitSMRequestsSent, bwCFGNASPEntry=bwCFGNASPEntry, bwCAPStatsRegisterResponses=bwCAPStatsRegisterResponses, bwCallForwardingNotReachableSPTable=bwCallForwardingNotReachableSPTable, bwVMRSPNumSendFailed=bwVMRSPNumSendFailed, bwVMSPNumBusyGreetingsPlayed=bwVMSPNumBusyGreetingsPlayed, bwICPSPNumCollectCallBlocks=bwICPSPNumCollectCallBlocks, bwSelectiveCallRejectionSPTable=bwSelectiveCallRejectionSPTable, psBwVMRSPIndex=psBwVMRSPIndex, bwHotelingSPEntry=bwHotelingSPEntry, bwPreferredCarrierSPIndex=bwPreferredCarrierSPIndex, bwPSTcpServersNbConnectionsClosed=bwPSTcpServersNbConnectionsClosed, bwCongestionManagementNeighborCallpMessageOutRate=bwCongestionManagementNeighborCallpMessageOutRate, mssStats=mssStats, bwMGCPStatsNotifyResponseTable=bwMGCPStatsNotifyResponseTable, bwThirdPartyVMailGroupIndex=bwThirdPartyVMailGroupIndex, bwVAOSPOutgoingSuccess=bwVAOSPOutgoingSuccess, bwMGCPStatsMGCPResponseOuts=bwMGCPStatsMGCPResponseOuts, dpubi=dpubi, bwAnonymousCallRejectionSPIndex=bwAnonymousCallRejectionSPIndex, bwSystemGroupName=bwSystemGroupName, smtpModule=smtpModule, bwNoIndicationGroupPIC=bwNoIndicationGroupPIC, bwPSQueryCount=bwPSQueryCount, bwDNDGroupNumPhoneActivations=bwDNDGroupNumPhoneActivations, bwInstantConferencingSPEntry=bwInstantConferencingSPEntry, bwPhysicalLocationGroupOriginationBlocked=bwPhysicalLocationGroupOriginationBlocked, bwDPUBISPID=bwDPUBISPID, bwMusicOnHoldSPID=bwMusicOnHoldSPID, bwCurrentOverloadZone=bwCurrentOverloadZone, bwRingTimeoutSPEntry=bwRingTimeoutSPEntry)
mibBuilder.exportSymbols("BW-BroadworksApplicationServer", bwCallNotifyGroupNumNotifications=bwCallNotifyGroupNumNotifications, bwCallForwardingNoAnswerGroupTable=bwCallForwardingNoAnswerGroupTable, bwActivatableFeatureIndex=bwActivatableFeatureIndex, bwSmppInvalidSubmitSMResponsesReceived=bwSmppInvalidSubmitSMResponsesReceived, bwVMRSPNumReplySendAttempts=bwVMRSPNumReplySendAttempts, realtimeAccountingModule=realtimeAccountingModule, bwSimRingPersonalGroupNumBusy=bwSimRingPersonalGroupNumBusy, bwCallNotifySPID=bwCallNotifySPID, bwSequentialRingAbandoned=bwSequentialRingAbandoned, ringTimeout=ringTimeout, bwSCFSPNumForwards=bwSCFSPNumForwards, bwSubscriptionDialedUserPIC=bwSubscriptionDialedUserPIC, bwSOAPNumDroppedRequests=bwSOAPNumDroppedRequests, bwAsSessionAuditServiceGroup=bwAsSessionAuditServiceGroup, bwPSTcpServersStatsTable=bwPSTcpServersStatsTable, bwSD100SPIndex=bwSD100SPIndex, psTtNbFailedCheckpoints=psTtNbFailedCheckpoints, bwSubscriptionDialedServiceProviderPIC=bwSubscriptionDialedServiceProviderPIC, psActivatableFeatureStats=psActivatableFeatureStats, bwCallReturnGroupEntry=bwCallReturnGroupEntry, bwCommPilotCallMgrGroupNumConferenceHold=bwCommPilotCallMgrGroupNumConferenceHold, bwHotelingTimeout=bwHotelingTimeout, bwShInterfacePublicIdentityRefreshFailure=bwShInterfacePublicIdentityRefreshFailure, imsStats=imsStats, inCallServiceActivation=inCallServiceActivation, bwVMRNumLoginAttempts=bwVMRNumLoginAttempts, xsRemoteXlaNbTimesConnected=xsRemoteXlaNbTimesConnected, bwNumberOfGroupUsers=bwNumberOfGroupUsers, bwSipStatsByeIns=bwSipStatsByeIns, bwDNDSPNumPhoneActivations=bwDNDSPNumPhoneActivations, bwICSASPID=bwICSASPID, bwPolycomPhoneDirectoryNumDownloads=bwPolycomPhoneDirectoryNumDownloads, bwCallForwardingBusySPEntry=bwCallForwardingBusySPEntry, bwVPCSPCall=bwVPCSPCall, bwThirdPartyVoiceMailNbOfCFWBusy=bwThirdPartyVoiceMailNbOfCFWBusy, bwLastNumberRedialSPIndex=bwLastNumberRedialSPIndex, bwIncomingCallingPlanSPTable=bwIncomingCallingPlanSPTable, bwAHRGroupHold=bwAHRGroupHold, bwAsAlternateNumberServiceGroup=bwAsAlternateNumberServiceGroup, bwTrunkGroupID=bwTrunkGroupID, bwTrunkGroupPerTGMaxOutgoingActiveCalls=bwTrunkGroupPerTGMaxOutgoingActiveCalls, bwHotelingGroupEntry=bwHotelingGroupEntry, bwCustomRingbackGroupVideoSPAttempts=bwCustomRingbackGroupVideoSPAttempts, bwAuthenticationSPTable=bwAuthenticationSPTable, bwSOAPMaxSessions=bwSOAPMaxSessions, bwDnsQueryTimeMaxTimestampLSB=bwDnsQueryTimeMaxTimestampLSB, bwACBExpired=bwACBExpired, callPickup=callPickup, bwSimRingPersonalSPEntry=bwSimRingPersonalSPEntry, bwShInterfaceResponsesOut=bwShInterfaceResponsesOut, bwCFBSPNumForwarded=bwCFBSPNumForwarded, bwVMRSPNumForwardSendGroupAttempts=bwVMRSPNumForwardSendGroupAttempts, bwAutoAttendantMultiMediaPromptRecorded=bwAutoAttendantMultiMediaPromptRecorded, bwSCAGroupLocationControlActivationSuccess=bwSCAGroupLocationControlActivationSuccess, bwSmdiOutgoingMWIDeactivationRequests=bwSmdiOutgoingMWIDeactivationRequests, bwCommonCommPSInputCommunicationErrors=bwCommonCommPSInputCommunicationErrors, callForwardingAlways=callForwardingAlways, bwPSTTHWMTimestamp=bwPSTTHWMTimestamp, bwCommPilotCallMgrSPNumHold=bwCommPilotCallMgrSPNumHold, bwCommonCommXSInterface=bwCommonCommXSInterface, bwAsXsPersistencyGroup=bwAsXsPersistencyGroup, bwACBGroupEntry=bwACBGroupEntry, bwAsCapGroup=bwAsCapGroup, bwVAOSPEntry=bwVAOSPEntry, bwNRSStatsTableIndex=bwNRSStatsTableIndex, bwSipStatsUpdateResponseCodeValue=bwSipStatsUpdateResponseCodeValue, psSystemInternalQueueTable=psSystemInternalQueueTable, bwRealtimeAccountingRequestsDropped=bwRealtimeAccountingRequestsDropped, bwLocationControlSPActivationSuccess=bwLocationControlSPActivationSuccess, bwXSTTHWMStackTrace=bwXSTTHWMStackTrace, bwServiceTypeSystemTable=bwServiceTypeSystemTable, bwMGCPStatsDeleteGatewayConnectionIns=bwMGCPStatsDeleteGatewayConnectionIns, bwAuthenticationGroupNumChallenges=bwAuthenticationGroupNumChallenges, bwCallParkNumAttempts=bwCallParkNumAttempts, bwMGCPStatsCreateConnectionResponseCodeValue=bwMGCPStatsCreateConnectionResponseCodeValue, bwSelectiveCallAcceptanceGroupIndex=bwSelectiveCallAcceptanceGroupIndex, bwAutoAttendantSPTable=bwAutoAttendantSPTable, bwOCPGroupNumTollFreeCallsBlocked=bwOCPGroupNumTollFreeCallsBlocked, seriesCompletion=seriesCompletion, bwCongestionManagementGroup=bwCongestionManagementGroup, bwCurrentNonCallOverloadZone=bwCurrentNonCallOverloadZone, bwSPMWISMSSent=bwSPMWISMSSent, psBwVMRGroupNumLoginFailures=psBwVMRGroupNumLoginFailures, bwExternalCallLogsRetransmitted=bwExternalCallLogsRetransmitted, bwSimRingPersonalGroupIndex=bwSimRingPersonalGroupIndex, bwFaxMessagingGroupPrintingFailure=bwFaxMessagingGroupPrintingFailure, bwPTTSPTable=bwPTTSPTable, bwFlashCallHoldSPEntry=bwFlashCallHoldSPEntry, psExternalCallLogsStats=psExternalCallLogsStats, bwFlashThreeWayCallSPEntry=bwFlashThreeWayCallSPEntry, bwOCPSPNumLocalCallsBlocked=bwOCPSPNumLocalCallsBlocked, bwCallParkGroupNumAttempts=bwCallParkGroupNumAttempts, bwNumberOfDeviceTypeSystem=bwNumberOfDeviceTypeSystem, bwSipStatsAckOuts=bwSipStatsAckOuts, bwSystemSPIndex=bwSystemSPIndex, bwAutoAttendantSPMultiMediaPromptRecorded=bwAutoAttendantSPMultiMediaPromptRecorded, bwSequentialRingGroupNumAttempts=bwSequentialRingGroupNumAttempts, smdiStats=smdiStats, bwPreferredCarrierGroupEntry=bwPreferredCarrierGroupEntry, bwTwoStageDialingGroupTable=bwTwoStageDialingGroupTable, bwSmdiNbOfOpenedConnection=bwSmdiNbOfOpenedConnection, bwShInterfaceRequestsIn=bwShInterfaceRequestsIn, bwCallForwardingNoAnswerSPID=bwCallForwardingNoAnswerSPID, psOciStatsNbQueryRequestFailures=psOciStatsNbQueryRequestFailures, bwNbRequestsUnanswered=bwNbRequestsUnanswered, bwTwoStageDialingInvocation=bwTwoStageDialingInvocation, bwFlashCallTransferGroupTable=bwFlashCallTransferGroupTable, bwVMRSPDeleteAllMsgsAttempts=bwVMRSPDeleteAllMsgsAttempts, bwFaxMessagingSPReceived=bwFaxMessagingSPReceived, bwGroupSubscriptionDialedGroupPIC=bwGroupSubscriptionDialedGroupPIC, bwCommPilotCallMgrSPNumGroupCallPark=bwCommPilotCallMgrSPNumGroupCallPark, thirdPartyMWIControl=thirdPartyMWIControl, bwDPUBIFailure=bwDPUBIFailure, bwNumNonCallYellowZoneOverloadTrans=bwNumNonCallYellowZoneOverloadTrans, bwSD100GroupIndex=bwSD100GroupIndex, bwAsMoCountersGroup=bwAsMoCountersGroup, diversionInhibitor=diversionInhibitor, bwXSTcpServersStatsEntry=bwXSTcpServersStatsEntry, bwAsBasicCompliance=bwAsBasicCompliance, bwCallpSPMediaTypeNotSupported=bwCallpSPMediaTypeNotSupported, bwPriorityAlertSPTable=bwPriorityAlertSPTable, bwCallpMediaTypeNotSupported=bwCallpMediaTypeNotSupported, bwSipStatsRegisterResponseOuts=bwSipStatsRegisterResponseOuts, bwAsAuthenticationServiceGroup=bwAsAuthenticationServiceGroup, bwLocationControlSPIndex=bwLocationControlSPIndex, bwActivatableFeatureActivated=bwActivatableFeatureActivated, bwMGCPStatsAuditEndpointResponseTable=bwMGCPStatsAuditEndpointResponseTable, psSystemInternalQueueTimeMax=psSystemInternalQueueTimeMax, bwDnsQueryTimeMaxTimestampMSB=bwDnsQueryTimeMaxTimestampMSB, bwCongestionManagementNeighborInviteIn=bwCongestionManagementNeighborInviteIn, bwCallCapacitySPIndex=bwCallCapacitySPIndex, psNSSyncStats=psNSSyncStats, bwCallpSPUserOriginationAttempts=bwCallpSPUserOriginationAttempts, bwMaliciousCallTraceSPTable=bwMaliciousCallTraceSPTable, bwACBSPEntry=bwACBSPEntry, bwAHRSPEntry=bwAHRSPEntry, bwFlashCallWaitingGroupNumAnswers=bwFlashCallWaitingGroupNumAnswers, bwLNRNumRedials=bwLNRNumRedials, bwSipStatsAckIns=bwSipStatsAckIns, bwSessionAuditGroupTable=bwSessionAuditGroupTable, bwActivatableFeatureDescription=bwActivatableFeatureDescription, bwSCASPID=bwSCASPID, bwOCPSPNumGroupCallsBlocked=bwOCPSPNumGroupCallsBlocked, bwPSMonitoringExecutorAvgActiveThreads=bwPSMonitoringExecutorAvgActiveThreads, bwMGCPStatsMGCPCommandResponseEntry=bwMGCPStatsMGCPCommandResponseEntry, bwOCPSACGroupNumUnsuccessfulUnlock=bwOCPSACGroupNumUnsuccessfulUnlock, psOciStatsMinSystemRequestResponseTime=psOciStatsMinSystemRequestResponseTime, bwDnsQueryGroup=bwDnsQueryGroup, bwSelectiveCallForwardGroupEntry=bwSelectiveCallForwardGroupEntry, bwExternalCustomRingbackGroupTable=bwExternalCustomRingbackGroupTable, bwPMTNumMonitorsCreated=bwPMTNumMonitorsCreated, bwCallPickupSPEntry=bwCallPickupSPEntry, bwNumDiscardedMessage=bwNumDiscardedMessage, bwInterceptGroupIndex=bwInterceptGroupIndex, bwCallCapacityGroupIndex=bwCallCapacityGroupIndex, bwSipStatsRegisterResponsesTable=bwSipStatsRegisterResponsesTable, bwFlashConsultationGroupIndex=bwFlashConsultationGroupIndex, bwSipStatsOptionsOuts=bwSipStatsOptionsOuts, bwCAPStatsInfoResponses=bwCAPStatsInfoResponses, bwTwoStageDialingGroupIndex=bwTwoStageDialingGroupIndex, imsModule=imsModule, bwFlashCallWaitingSPID=bwFlashCallWaitingSPID, bwCotSPID=bwCotSPID, bwInstantConferencingCurrentUsage=bwInstantConferencingCurrentUsage, bwPSTcpServersNbConnectionsInitiated=bwPSTcpServersNbConnectionsInitiated, bwSipStatsNotifyIns=bwSipStatsNotifyIns, bwEZSPIndex=bwEZSPIndex, bwCustomRingbackGroupVideoSPFailures=bwCustomRingbackGroupVideoSPFailures, incomingCallingPlan=incomingCallingPlan, bwSD8SPNumTimesDialed=bwSD8SPNumTimesDialed, bwExternalCallLogsRetrievalAttempts=bwExternalCallLogsRetrievalAttempts, bwMGCPStatsMinAnswerSignalDelay=bwMGCPStatsMinAnswerSignalDelay, bwCAPStatsAcknowledgementsOut=bwCAPStatsAcknowledgementsOut, bwCotSPFailureNoId=bwCotSPFailureNoId, bwSD100SPID=bwSD100SPID, bwAuthenticationSPNumValidResponses=bwAuthenticationSPNumValidResponses, bwSipStatsRegisterResponseIns=bwSipStatsRegisterResponseIns, bwHuntGroupsGroupIndex=bwHuntGroupsGroupIndex, bwSipStatsTcpOuts=bwSipStatsTcpOuts, bwPSMonitoringExecutorIndex=bwPSMonitoringExecutorIndex, bwCallRetrieveGroupSuccess=bwCallRetrieveGroupSuccess, bwPTTGroupIndex=bwPTTGroupIndex, bwNumCallYellowZoneOverloadTrans=bwNumCallYellowZoneOverloadTrans, bwAccountCodeNumPerCallAttempts=bwAccountCodeNumPerCallAttempts, bwMGCPStatsExtraCommandResponseEntry=bwMGCPStatsExtraCommandResponseEntry, bwACBGroupID=bwACBGroupID, bwCustomRingbackSPIndex=bwCustomRingbackSPIndex, bwCNAMQueriesSent=bwCNAMQueriesSent, bwPriorityAlertSPIndex=bwPriorityAlertSPIndex, bwMediaResourceAllocFailures=bwMediaResourceAllocFailures, bwCFGNAGroupExternalNoForward=bwCFGNAGroupExternalNoForward, bwSubscriptionDialedGroupPIC=bwSubscriptionDialedGroupPIC, bwCallForwardingBusyGroupID=bwCallForwardingBusyGroupID, bwSCAGroupLocationControlDeactivationSuccess=bwSCAGroupLocationControlDeactivationSuccess, windowsMessaging=windowsMessaging, bwFlashConsultationSPIndex=bwFlashConsultationSPIndex, bwSelectiveCallAcceptanceGroupEntry=bwSelectiveCallAcceptanceGroupEntry, bwCallParkSPNumFailures=bwCallParkSPNumFailures, bwSeriesCompletionSPNumAttempts=bwSeriesCompletionSPNumAttempts, bwCWGroupNumPhoneCancellations=bwCWGroupNumPhoneCancellations, bwAuthCodeGroupNumValidations=bwAuthCodeGroupNumValidations, bwPSTcpStatsGroup=bwPSTcpStatsGroup, bwCommPilotCallMgrSPNumCallParkRetrieve=bwCommPilotCallMgrSPNumCallParkRetrieve, bwACBSPTable=bwACBSPTable, simRingPersonal=simRingPersonal, bwCFNASPNumPhoneDeactivations=bwCFNASPNumPhoneDeactivations, bwDnsQueryTimeMax=bwDnsQueryTimeMax, bwCFASPNumPhoneActivations=bwCFASPNumPhoneActivations, bwSequentialRingGroupIndex=bwSequentialRingGroupIndex, bwAutoAttendantSPIndex=bwAutoAttendantSPIndex, bwHotelingDisassociate=bwHotelingDisassociate, bwVMRSPNumForwardSendAttempts=bwVMRSPNumForwardSendAttempts, bwDPUBISPTable=bwDPUBISPTable, databaseStats=databaseStats, bwACBSPStarted=bwACBSPStarted, bwCommPilotCallMgrNumTransferVM=bwCommPilotCallMgrNumTransferVM, congestionManagement=congestionManagement, bwAsMcpGroup=bwAsMcpGroup, bwAutoAttendantSPID=bwAutoAttendantSPID, bwFlashCallTransferSPEntry=bwFlashCallTransferSPEntry, bwInCallServiceActivationSPTable=bwInCallServiceActivationSPTable, bwTrunkGroupPerTGCapacityExceeded=bwTrunkGroupPerTGCapacityExceeded, bwMGCPStatsAuditEndpointResponseIns=bwMGCPStatsAuditEndpointResponseIns, bwOCPGroupNumOutsideGroupTransferBlocks=bwOCPGroupNumOutsideGroupTransferBlocks, bwIPPhoneGroupTable=bwIPPhoneGroupTable, bwInterceptSPGroupOriginationInvocations=bwInterceptSPGroupOriginationInvocations, bwSipStatsPrackResponseIns=bwSipStatsPrackResponseIns, bwCNAMQueriesTimeout=bwCNAMQueriesTimeout, bwVMRGroupNumNoAnswerGreetingsRecorded=bwVMRGroupNumNoAnswerGreetingsRecorded, bwCustomRingbackUserVideoGroupFailures=bwCustomRingbackUserVideoGroupFailures, bwCallpSPUserTerminationsAnswered=bwCallpSPUserTerminationsAnswered, bwCFBGroupDestinationChanged=bwCFBGroupDestinationChanged, bwFlashCallWaitingGroupIndex=bwFlashCallWaitingGroupIndex, bwFamilySimRingSPNumAttempts=bwFamilySimRingSPNumAttempts, bwMediaNotificationsReceived=bwMediaNotificationsReceived, bwCallWaitingGroupIndex=bwCallWaitingGroupIndex, bwCommonCommPSRejectedInboundConnections=bwCommonCommPSRejectedInboundConnections, psSystemInternalQueueEntry=psSystemInternalQueueEntry, psBwVMRSPEntry=psBwVMRSPEntry, databaseModule=databaseModule, management=management, intercept=intercept, bwFlashCallHoldGroupIndex=bwFlashCallHoldGroupIndex, bwCustomRingbackGroupAudioAttempts=bwCustomRingbackGroupAudioAttempts, psOciStatsMinServiceProviderRequestResponseTime=psOciStatsMinServiceProviderRequestResponseTime, bwSipStatsMessageOuts=bwSipStatsMessageOuts, bwCallRetrieveGroup=bwCallRetrieveGroup, bwAsCallPickupServiceGroup=bwAsCallPickupServiceGroup, bwXSMonitoringExecutorLongestTaskName=bwXSMonitoringExecutorLongestTaskName, bwCFGNAGroupOverflowForward=bwCFGNAGroupOverflowForward, bwAutoAttendantGroupTable=bwAutoAttendantGroupTable, bwSessionAuditNumEndpointsFailedAudit=bwSessionAuditNumEndpointsFailedAudit, bwIMSUnsuccessfulDownLoadAttempts=bwIMSUnsuccessfulDownLoadAttempts, bwTwoStageDialingSPInvocation=bwTwoStageDialingSPInvocation)
mibBuilder.exportSymbols("BW-BroadworksApplicationServer", bwPTTGroupInvoke=bwPTTGroupInvoke, bwCFGNASPOverflowNoForward=bwCFGNASPOverflowNoForward, bwAsFaxMessagingServiceGroup=bwAsFaxMessagingServiceGroup, bwTrunkTerminationAttempt=bwTrunkTerminationAttempt, bwMusicOnHoldGroupNumUses=bwMusicOnHoldGroupNumUses, bwTrunkGroupPerTGUnreachableDestinationExceededOffsetValue=bwTrunkGroupPerTGUnreachableDestinationExceededOffsetValue, bwCustomRingbackUserVideoAttempts=bwCustomRingbackUserVideoAttempts, bwAsCallForwardingNotReachableGroup=bwAsCallForwardingNotReachableGroup, bwMaliciousCallTraceGroupID=bwMaliciousCallTraceGroupID, bwFlashCallWaitingSPNumAnswers=bwFlashCallWaitingSPNumAnswers, bwMGCPStatsRestartInProgressResponseCodeValue=bwMGCPStatsRestartInProgressResponseCodeValue, bwMGCPStatsNotifyResponseOuts=bwMGCPStatsNotifyResponseOuts, bwCallPickupGroupEntry=bwCallPickupGroupEntry, bwFlashThreeWayCallGroupEntry=bwFlashThreeWayCallGroupEntry, bwFaxMessagingGroupTable=bwFaxMessagingGroupTable, bwCallParkGroupNumFailures=bwCallParkGroupNumFailures, bwVMRSPNumBusyGreetingsRecorded=bwVMRSPNumBusyGreetingsRecorded, bwSipStatsInfoResponsesTable=bwSipStatsInfoResponsesTable, bwCFGNASPTable=bwCFGNASPTable, bwMaliciousCallTraceGroupIndex=bwMaliciousCallTraceGroupIndex, bwOCPGroupNumCasualCallsBlocked=bwOCPGroupNumCasualCallsBlocked, nbOfMigratedUsers=nbOfMigratedUsers, psCommonCommModule=psCommonCommModule, bwSystemInternalQueueLengthMaxTimestamp=bwSystemInternalQueueLengthMaxTimestamp, bwNumberOfServProv=bwNumberOfServProv, bwSipStatsInviteResponsesEntry=bwSipStatsInviteResponsesEntry, bwMGCPStatsEndpointConfigurationResponseCodeValue=bwMGCPStatsEndpointConfigurationResponseCodeValue, bwDoNotDisturbGroupNumInvoked=bwDoNotDisturbGroupNumInvoked, bwNbResponsesResent=bwNbResponsesResent, bwOCPGroupNumUnsuccessfulAuthorizations=bwOCPGroupNumUnsuccessfulAuthorizations, bwHotelingGroupID=bwHotelingGroupID, bwPhysicalLocationGroupTable=bwPhysicalLocationGroupTable, bwAsExpensiveCallNotificationGroup=bwAsExpensiveCallNotificationGroup, psBwVMRNumLoginFailures=psBwVMRNumLoginFailures, bwCommPilotCallMgrGroupNumConferenceRelease=bwCommPilotCallMgrGroupNumConferenceRelease, bwCustomRingbackUserAudioSPAttempts=bwCustomRingbackUserAudioSPAttempts, bwCallPickupNumFailures=bwCallPickupNumFailures, bwCommPilotCallMgrSPNumTransferCC=bwCommPilotCallMgrSPNumTransferCC, bwVPSPNumAAAfterHoursGreetingRecorded=bwVPSPNumAAAfterHoursGreetingRecorded, bwDirectedCallPickupSPNumAttempts=bwDirectedCallPickupSPNumAttempts, bwSipStatsNotifyResponsesEntry=bwSipStatsNotifyResponsesEntry, bwDPUBIGroupEntry=bwDPUBIGroupEntry, bwThirdPartyVoiceMailGroupNbOfCFWNoAnswer=bwThirdPartyVoiceMailGroupNbOfCFWNoAnswer, bwHuntGroupsGroupEntry=bwHuntGroupsGroupEntry, bwSD8SPEntry=bwSD8SPEntry, bwSD8GroupNumTimesDialed=bwSD8GroupNumTimesDialed, pmtModule=pmtModule, bwMGCPStatsEndpointConfigurationOuts=bwMGCPStatsEndpointConfigurationOuts, bwOCPSACGroupNumSuccessfulUnlock=bwOCPSACGroupNumSuccessfulUnlock, bwCallCenterReportEmailed=bwCallCenterReportEmailed, bwLocationControlGroupDeactivationSuccess=bwLocationControlGroupDeactivationSuccess, bwVoiceMessagingSPID=bwVoiceMessagingSPID, psOciStatsMaxGroupRequestResponseTime=psOciStatsMaxGroupRequestResponseTime, bwAsExtCallLogsGroup=bwAsExtCallLogsGroup, bwCAPMonitoringUsersResponses=bwCAPMonitoringUsersResponses, bwOutgoingCallingPlanSPEntry=bwOutgoingCallingPlanSPEntry, bwPTTInvoke=bwPTTInvoke, broadworksAnywhere=broadworksAnywhere, bwSipStatsOtherResponseOuts=bwSipStatsOtherResponseOuts, bwICSASPIndex=bwICSASPIndex, bwFlashCallHoldNumActivations=bwFlashCallHoldNumActivations, bwSequentialRingGroupNumNoAnswer=bwSequentialRingGroupNumNoAnswer, bwCFGNAGroupIndex=bwCFGNAGroupIndex, bwIGCGroupEntry=bwIGCGroupEntry, bwMGCPStatsNotificationRequestResponseTable=bwMGCPStatsNotificationRequestResponseTable, bwIPPhoneGroupID=bwIPPhoneGroupID, bwPhysicalLocationSPEntry=bwPhysicalLocationSPEntry, psOciStatsMaxUserRequestName=psOciStatsMaxUserRequestName, psOciStatsRequestResponseTime=psOciStatsRequestResponseTime, bwXSTcpServersNbConnectionsClosed=bwXSTcpServersNbConnectionsClosed, bwSystemInternalQueueTimeMaxTimestampLSB=bwSystemInternalQueueTimeMaxTimestampLSB, bwCommPilotCallManagerSPID=bwCommPilotCallManagerSPID, bwDoNotDisturbGroupIndex=bwDoNotDisturbGroupIndex, bwFaxMessagingReceived=bwFaxMessagingReceived, bwPriorityAlertGroupEntry=bwPriorityAlertGroupEntry, bwSOAPAvgThreads=bwSOAPAvgThreads, bwCallForwardingAlwaysGroupTable=bwCallForwardingAlwaysGroupTable, bwAuthenticationSPEntry=bwAuthenticationSPEntry, bwSelectiveCallRejectionSPIndex=bwSelectiveCallRejectionSPIndex, bwCallRetrieveSPEntry=bwCallRetrieveSPEntry, bwSipStatsRegisterOuts=bwSipStatsRegisterOuts, bwAsCFAlwaysServiceGroup=bwAsCFAlwaysServiceGroup, bwSystemInternalQueueEntry=bwSystemInternalQueueEntry, bwShInterfacePushNotificationRequestFailure=bwShInterfacePushNotificationRequestFailure, bwCommPilotCallMgrNumHold=bwCommPilotCallMgrNumHold, bwCallNotifyGroupTable=bwCallNotifyGroupTable, bwVPGroupNumAABusHoursGreetingRecorded=bwVPGroupNumAABusHoursGreetingRecorded, bwCFNANumPhoneActivations=bwCFNANumPhoneActivations, bwSystemInternalQueueTimeAvg=bwSystemInternalQueueTimeAvg, psOCIReportingBackLogMessageIndex=psOCIReportingBackLogMessageIndex, bwFlashCallWaitingGroupID=bwFlashCallWaitingGroupID, bwExternalCustomRingbackSPFailures=bwExternalCustomRingbackSPFailures, bwSeriesCompletionGroupNumAttempts=bwSeriesCompletionGroupNumAttempts, bwFaxMessagingGroupID=bwFaxMessagingGroupID, bwXSMonitoringExecutorIndex=bwXSMonitoringExecutorIndex, bwXSTTHWMName=bwXSTTHWMName, bwPSTTHWMIndex=bwPSTTHWMIndex, bwICSPNumAttempts=bwICSPNumAttempts, bwAsSelectiveCallAcceptanceServiceGroup=bwAsSelectiveCallAcceptanceServiceGroup, bwAlternateNumbersSPEntry=bwAlternateNumbersSPEntry, bwCFGNAExternalForward=bwCFGNAExternalForward, bwCallpGroupMaximumCallTimeforAnsweredCallsExceeded=bwCallpGroupMaximumCallTimeforAnsweredCallsExceeded, bwMessagingQueryNoMailbox=bwMessagingQueryNoMailbox, bwCFNRcGroupID=bwCFNRcGroupID, psSystemInternalQueueTimeMaxTimestampMSB=psSystemInternalQueueTimeMaxTimestampMSB, bwCallpGroupMaximumCallTimeforUnansweredCallsExceeded=bwCallpGroupMaximumCallTimeforUnansweredCallsExceeded, bwNoIndicationServiceProviderPIC=bwNoIndicationServiceProviderPIC, bwHuntGroupsGroupNumBusy=bwHuntGroupsGroupNumBusy, bwCFNRcGroupDestinationChanged=bwCFNRcGroupDestinationChanged, bwSPMultiMediaMsgDeposit=bwSPMultiMediaMsgDeposit, bwCallCenterSPIndex=bwCallCenterSPIndex, bwVMSPMultiMediaGreetingRecorded=bwVMSPMultiMediaGreetingRecorded, bwSipStatsInviteResponseOuts=bwSipStatsInviteResponseOuts, psTcpModule=psTcpModule, bwIMSUnsuccessfulConnectionAttempts=bwIMSUnsuccessfulConnectionAttempts, bwSD100Call=bwSD100Call, bwDirectedCallPickupGroupTable=bwDirectedCallPickupGroupTable, bwAsPsPersistencyGroup=bwAsPsPersistencyGroup, bwCallWaitingSPIndex=bwCallWaitingSPIndex, bwMGCPStatsDeleteConnectionResponseCodeValue=bwMGCPStatsDeleteConnectionResponseCodeValue, bwAsSoapGroup=bwAsSoapGroup, bwFlashCallTransferNumTransfers=bwFlashCallTransferNumTransfers, bwInterceptSPUserTerminationInvocations=bwInterceptSPUserTerminationInvocations, bwInterceptUserOriginationInvocations=bwInterceptUserOriginationInvocations, bwCongestionManagementNeighborNonCallpMessageInRate=bwCongestionManagementNeighborNonCallpMessageInRate, psOciStatsNbUpdateRequestFailures=psOciStatsNbUpdateRequestFailures, bwVMRNumSendFailed=bwVMRNumSendFailed, bwCustomRingbackGroupID=bwCustomRingbackGroupID, bwCallForwardingAlwaysSPIndex=bwCallForwardingAlwaysSPIndex, bwDeviceTypeSystemEntry=bwDeviceTypeSystemEntry, bwFlashThreeWayCallSPID=bwFlashThreeWayCallSPID, directedCallPickup=directedCallPickup, polycomGroupTable=polycomGroupTable, bwCallPickupGroupID=bwCallPickupGroupID, bwOCPSPNumTransfers=bwOCPSPNumTransfers, bwIPPhoneSPID=bwIPPhoneSPID, psSystemInternalQueueTimeMaxTimestamp=psSystemInternalQueueTimeMaxTimestamp, bwCallForwardingNotReachableSPEntry=bwCallForwardingNotReachableSPEntry, bwCallParkSPIndex=bwCallParkSPIndex, bwCallPickupSPNumAttempts=bwCallPickupSPNumAttempts, bwVoiceMessagingSPEntry=bwVoiceMessagingSPEntry, bwMGCPStatsMGCPCommandIns=bwMGCPStatsMGCPCommandIns, bwMGCPStatsNotifyResponseCodeValue=bwMGCPStatsNotifyResponseCodeValue, bwCommPilotCallMgrGroupNumHold=bwCommPilotCallMgrGroupNumHold, bwCallWaitingGroupTable=bwCallWaitingGroupTable, bwThirdPartyVMailGroupTable=bwThirdPartyVMailGroupTable, bwThirdPartyVMailGroupEntry=bwThirdPartyVMailGroupEntry, bwNumberOfDNAssigned=bwNumberOfDNAssigned, bwVMGroupGreetingRecorded=bwVMGroupGreetingRecorded, bwSystemSPTable=bwSystemSPTable, bwVPSPGreetingRecorded=bwVPSPGreetingRecorded, selectiveCallForward=selectiveCallForward, bwCallRetrieveSPIndex=bwCallRetrieveSPIndex, bwServiceTypeSystemEntry=bwServiceTypeSystemEntry, bwDiversionInhibited=bwDiversionInhibited, bwIncomingCallingPlanGroupEntry=bwIncomingCallingPlanGroupEntry, bwVMRSPNumComposeSendAttempts=bwVMRSPNumComposeSendAttempts, bwPSTTHWMValue=bwPSTTHWMValue, bwAHRHold=bwAHRHold, bwDoNotDisturbSPNumInvoked=bwDoNotDisturbSPNumInvoked, bwSeriesCompletionSPEntry=bwSeriesCompletionSPEntry, bwAsHuntGroupServiceGroup=bwAsHuntGroupServiceGroup, bwMGCPStatsDialToneDelay=bwMGCPStatsDialToneDelay, bwCAPStatsProfileUpdatesOut=bwCAPStatsProfileUpdatesOut, bwCommonCommXSAcceptedOutboundConnections=bwCommonCommXSAcceptedOutboundConnections, bwSCALocationControlDeactivationSuccess=bwSCALocationControlDeactivationSuccess, bwOCPSACSPNumUnsuccessfulLock=bwOCPSACSPNumUnsuccessfulLock, bwMGCPStatsMinDialToneDelay=bwMGCPStatsMinDialToneDelay, bwOCPSACSPNumUnsuccessfulUnlock=bwOCPSACSPNumUnsuccessfulUnlock, bwOCPNumChargeableDirAssistCallsBlocked=bwOCPNumChargeableDirAssistCallsBlocked, bwVMRNumNoAnswerGreetingsRecorded=bwVMRNumNoAnswerGreetingsRecorded, psOciStatsNbAuthorizationRequests=psOciStatsNbAuthorizationRequests, bwOutgoingCallingPlanGroupTable=bwOutgoingCallingPlanGroupTable, bwAsOverloadControlStatsGroup=bwAsOverloadControlStatsGroup, bwInstantConferencingBridgeEntry=bwInstantConferencingBridgeEntry, bwVPCGroupCall=bwVPCGroupCall, bwTrunkGroupTable=bwTrunkGroupTable, bwSmdiNbOfActiveConnection=bwSmdiNbOfActiveConnection, bwAHRSPRetrieve=bwAHRSPRetrieve, bwLocationControlDeactivationSuccess=bwLocationControlDeactivationSuccess, bwSipSummaryTotalTransactions=bwSipSummaryTotalTransactions, bwSelectiveCallAcceptanceGroupID=bwSelectiveCallAcceptanceGroupID, bwSipStatsSubscribeResponsesEntry=bwSipStatsSubscribeResponsesEntry, bwAsPsBcctGroup=bwAsPsBcctGroup, bwFlashCallHoldGroupTable=bwFlashCallHoldGroupTable, bwSipStatsUpdateOuts=bwSipStatsUpdateOuts, bwSCRNumRejects=bwSCRNumRejects, bwCallCenterSPReportEmailed=bwCallCenterSPReportEmailed, bwCommonCommXSProtocol=bwCommonCommXSProtocol, bwOCPGroupNumUnknownCallsBlocked=bwOCPGroupNumUnknownCallsBlocked, bwCallForwardingNotReachableGroupEntry=bwCallForwardingNotReachableGroupEntry, bwSipStatsMaxSetupSignalDelay=bwSipStatsMaxSetupSignalDelay, callingNameRetrieval=callingNameRetrieval, bwDPUBISPBargeIn=bwDPUBISPBargeIn, bwAsCFBusyServiceGroup=bwAsCFBusyServiceGroup, bwOCPNumTollCallsBlocked=bwOCPNumTollCallsBlocked, bwSmppSubmitSMResponseTimeout=bwSmppSubmitSMResponseTimeout, bwPriorityAlertGroupIndex=bwPriorityAlertGroupIndex, psOCIReportingBackLogMessageTable=psOCIReportingBackLogMessageTable, bwVAOGroupID=bwVAOGroupID, bwTrunkOriginationBlocked=bwTrunkOriginationBlocked, bwCAPStatsUnsuccessfulRegisterResponses=bwCAPStatsUnsuccessfulRegisterResponses, flashCallTransfer=flashCallTransfer, bwIncomingCallingPlanGroupID=bwIncomingCallingPlanGroupID, bwAutoAttendantSPEntry=bwAutoAttendantSPEntry, bwOCPNumSuccessfulAuthorizations=bwOCPNumSuccessfulAuthorizations, bwAsAutoAttendantServiceGroup=bwAsAutoAttendantServiceGroup, bwMGCPStatsDeleteConnectionOuts=bwMGCPStatsDeleteConnectionOuts, bwSD8SPNumTimesProgrammed=bwSD8SPNumTimesProgrammed, bwCallingLineIDDeliveryBlockSPEntry=bwCallingLineIDDeliveryBlockSPEntry, bwMGCPStatsNotificationRequestResponseEntry=bwMGCPStatsNotificationRequestResponseEntry, bwSipStatsInfoResponseIns=bwSipStatsInfoResponseIns, bwOCPSACNumSuccessfulLock=bwOCPSACNumSuccessfulLock, bwSimRingPersonalGroupEntry=bwSimRingPersonalGroupEntry, bwVMRGroupCallBackFailures=bwVMRGroupCallBackFailures, bwSimRingPersonalNumAttempts=bwSimRingPersonalNumAttempts, bwInterceptGroupID=bwInterceptGroupID, bwCFNRcDestinationChanged=bwCFNRcDestinationChanged, bwBAGroupCallOriginations=bwBAGroupCallOriginations, bwCommPilotCallManagerSPIndex=bwCommPilotCallManagerSPIndex, bwGroupSubscriptionServiceProviderPIC=bwGroupSubscriptionServiceProviderPIC, bwTrunkGroupPerTGTable=bwTrunkGroupPerTGTable, bwNSqueryRequestsTransmitted=bwNSqueryRequestsTransmitted, bwMGCPStatsNotifyIns=bwMGCPStatsNotifyIns, bwTwoStageDialingGroupEntry=bwTwoStageDialingGroupEntry, bwHotelingAssociate=bwHotelingAssociate, psOCIReportingBackLogMessageSaved=psOCIReportingBackLogMessageSaved, bwCallpGroupTable=bwCallpGroupTable, bwNonSubscriptionDialedServiceProviderPIC=bwNonSubscriptionDialedServiceProviderPIC, bwSequentialRingSPNumAttempts=bwSequentialRingSPNumAttempts, bwEZEmergencyCallsRejected=bwEZEmergencyCallsRejected, bwCallingLineIDDeliveryBlockGroupPerCallBlocks=bwCallingLineIDDeliveryBlockGroupPerCallBlocks, bwOutgoingCallingPlanSPIndex=bwOutgoingCallingPlanSPIndex, bwTrunkSPID=bwTrunkSPID, bwCallRetrieveSPSuccess=bwCallRetrieveSPSuccess, psOciStatsNbReportingAclViolations=psOciStatsNbReportingAclViolations, bwCFGNAGroupID=bwCFGNAGroupID, bwMGCPStatsMGCPResponseIns=bwMGCPStatsMGCPResponseIns, bwAsSystemStatsGroup=bwAsSystemStatsGroup, bwVMRNumBusyGreetingsRecorded=bwVMRNumBusyGreetingsRecorded, bwIGCSPTable=bwIGCSPTable, bwGroupNonSubscriptionDialedGroupPIC=bwGroupNonSubscriptionDialedGroupPIC, bwInstantConferencingSPIndex=bwInstantConferencingSPIndex, bwBACallOriginations=bwBACallOriginations, bwCAPStatsRegisterAuthentications=bwCAPStatsRegisterAuthentications, bwSipStatsMsgRetryToNeEntry=bwSipStatsMsgRetryToNeEntry, bwSipStatsRegisterIns=bwSipStatsRegisterIns, bwHuntGroupNumAttempts=bwHuntGroupNumAttempts, bwSequentialRingSPAnswered=bwSequentialRingSPAnswered, bwCustomRingbackSPID=bwCustomRingbackSPID, bwPSMonitoringExecutorNbTasksRun=bwPSMonitoringExecutorNbTasksRun, sipStats=sipStats, bwInterceptGroupTransfers=bwInterceptGroupTransfers, familySimRing=familySimRing)
mibBuilder.exportSymbols("BW-BroadworksApplicationServer", bwCommPilotCallMgrGroupNumTransferVM=bwCommPilotCallMgrGroupNumTransferVM, bwPSAvgQueryTime=bwPSAvgQueryTime, bwNumberOfGroupDNAssigned=bwNumberOfGroupDNAssigned, bwHuntGroupsGroupID=bwHuntGroupsGroupID, bwCustomRingbackUserAudioGroupAttempts=bwCustomRingbackUserAudioGroupAttempts, bwAsCallParkServiceGroup=bwAsCallParkServiceGroup, bwSeriesCompletionSPTable=bwSeriesCompletionSPTable, bwCustomRingbackGroupVideoGroupAttempts=bwCustomRingbackGroupVideoGroupAttempts, bwSipStatsUdpOuts=bwSipStatsUdpOuts, bwOCPSPNumOutsideGroupTransferBlocks=bwOCPSPNumOutsideGroupTransferBlocks, bwVPNumAABusHoursGreetingRecorded=bwVPNumAABusHoursGreetingRecorded, bwSCAGroupNumAcceptances=bwSCAGroupNumAcceptances, bwPTTSPEntry=bwPTTSPEntry, bwCommPilotCallManagerGroupEntry=bwCommPilotCallManagerGroupEntry, bwEZGroupID=bwEZGroupID, bwIMSAvgThreads=bwIMSAvgThreads, bwLocationControlGroupIndex=bwLocationControlGroupIndex, xsRemoteXla=xsRemoteXla, bwCFNADestinationChanged=bwCFNADestinationChanged, bwSipStatsPrackResponseOuts=bwSipStatsPrackResponseOuts, commPilotCallManager=commPilotCallManager, bwAuthenticationNumChallenges=bwAuthenticationNumChallenges, bwSD100GroupID=bwSD100GroupID, bwVMRGroupCallBackAttempts=bwVMRGroupCallBackAttempts, bwVAOGroupIncomingSuccess=bwVAOGroupIncomingSuccess, mgcpModule=mgcpModule, bwInstantConferencingGroupIndex=bwInstantConferencingGroupIndex, bwOCPGroupNumIntlCallsBlocked=bwOCPGroupNumIntlCallsBlocked, bwIMSMaxSessions=bwIMSMaxSessions, psBwVMRNumLoginAttempts=psBwVMRNumLoginAttempts, bwCallParkSPID=bwCallParkSPID, bwPSTTHWMStackTrace=bwPSTTHWMStackTrace, bwICSASPMonitoringFailure=bwICSASPMonitoringFailure, bwCommPilotCallMgrGroupNumCallPark=bwCommPilotCallMgrGroupNumCallPark, bwCommonCommPSOutputMessagesProcessed=bwCommonCommPSOutputMessagesProcessed, bwAsCalWaitingServiceGroup=bwAsCalWaitingServiceGroup, bwXSTcpServersNbConnectionsAccepted=bwXSTcpServersNbConnectionsAccepted, bwMusicOnHoldGroupEntry=bwMusicOnHoldGroupEntry, nrsStats=nrsStats, bwNumberOfGroupDeviceType=bwNumberOfGroupDeviceType, bwCAPStatsCallUpdatesOut=bwCAPStatsCallUpdatesOut, bwDiversionInhibitorSPID=bwDiversionInhibitorSPID, bwLastNumberRedialGroupEntry=bwLastNumberRedialGroupEntry, bwVMGroupNumBusyGreetingsPlayed=bwVMGroupNumBusyGreetingsPlayed, bwCallParkSPTable=bwCallParkSPTable, bwSipStatsRetryByes=bwSipStatsRetryByes, bwOCPSACSPNumUnsuccessfulCodeUsage=bwOCPSACSPNumUnsuccessfulCodeUsage, bwFaxMessagingGroupReceptionFailure=bwFaxMessagingGroupReceptionFailure, bwCallForwardingNoAnswerGroupIndex=bwCallForwardingNoAnswerGroupIndex, bwMGCPStatsMessageRetryPercentage=bwMGCPStatsMessageRetryPercentage, bwSharedCallAppearanceGroup=bwSharedCallAppearanceGroup, bwEZGroupNormalCallsRejected=bwEZGroupNormalCallsRejected, mwiDeliveryToMobile=mwiDeliveryToMobile, bwOCPNumGroupCallsBlocked=bwOCPNumGroupCallsBlocked, psOciStatsMaxSystemRequestName=psOciStatsMaxSystemRequestName, bwInCallServiceActivationGroupEntry=bwInCallServiceActivationGroupEntry, bwLocationControlSPDeactivationSuccess=bwLocationControlSPDeactivationSuccess, bwNRSStatsTableNbRequestsReceived=bwNRSStatsTableNbRequestsReceived, bwCongestionManagementNeighbor5xxIn=bwCongestionManagementNeighbor5xxIn, bwACBStarted=bwACBStarted, bwNumberOfGroupDNDefined=bwNumberOfGroupDNDefined, bwSmdiInvalidResponsesSent=bwSmdiInvalidResponsesSent, bwPSMonitoringExecutorMaxPoolSize=bwPSMonitoringExecutorMaxPoolSize, bwCustomRingbackGroupEntry=bwCustomRingbackGroupEntry, bwCallpGroupUserTerminationsAnswered=bwCallpGroupUserTerminationsAnswered, bwSipStatsOptionsResponseCodeValue=bwSipStatsOptionsResponseCodeValue, bwSystemInternalQueueTimeMaxTimestamp=bwSystemInternalQueueTimeMaxTimestamp, bwICGroupPortLimitExceeded=bwICGroupPortLimitExceeded, bwSystemInternalQueueTable=bwSystemInternalQueueTable, bwCFADestinationChanged=bwCFADestinationChanged, videoAddOn=videoAddOn, bwCommPilotCallMgrGroupNumRelease=bwCommPilotCallMgrGroupNumRelease, redundancyModule=redundancyModule, psOciStatsServiceProviderRequestResponseTime=psOciStatsServiceProviderRequestResponseTime, bwThirdPartyVoiceMailGroupNbOfCFWBusy=bwThirdPartyVoiceMailGroupNbOfCFWBusy, bwDndPhoneActivations=bwDndPhoneActivations, bwVAOSPIndex=bwVAOSPIndex, bwDoNotDisturbSPTable=bwDoNotDisturbSPTable, bwCallNotifyGroupIndex=bwCallNotifyGroupIndex, bwAutoAttendantGroupID=bwAutoAttendantGroupID, bwShInterfaceUserDataRequest=bwShInterfaceUserDataRequest, bwMGCPStatsAnswerSignalDelay=bwMGCPStatsAnswerSignalDelay, bwGroupNoIndicationGroupPIC=bwGroupNoIndicationGroupPIC, psSystemInternalQueueLengthAvg=psSystemInternalQueueLengthAvg, bwWindowsMessagingIMSessionSuccessCounter=bwWindowsMessagingIMSessionSuccessCounter, bwCFNAGroupDestinationChanged=bwCFNAGroupDestinationChanged, bwCommPilotCallMgrSPNumTransfer=bwCommPilotCallMgrSPNumTransfer, psTtNbBackdoorUpdates=psTtNbBackdoorUpdates, bwPSAvgRowsUpdated=bwPSAvgRowsUpdated, bwFlashConsultationGroupEntry=bwFlashConsultationGroupEntry, bwDPUBISPBargeInFailure=bwDPUBISPBargeInFailure, bwCallCapacityNumCallsAttempted=bwCallCapacityNumCallsAttempted, bwIMSNumKeepAlive=bwIMSNumKeepAlive, bwMusicOnHoldGroupExternalSourceNumFailures=bwMusicOnHoldGroupExternalSourceNumFailures, bwCommonCommXSStatsIndex=bwCommonCommXSStatsIndex, overloadStats=overloadStats, tcpModule=tcpModule, bwEZGroupIndex=bwEZGroupIndex, bwVMRSPNumComposeSendGroupAttempts=bwVMRSPNumComposeSendGroupAttempts, bwGroupNoIndicationServiceProviderPIC=bwGroupNoIndicationServiceProviderPIC, bwIGCSPPushToTalkInvoke=bwIGCSPPushToTalkInvoke, bwAsMibConformance=bwAsMibConformance, bwAsCustomRingbackServiceGroup=bwAsCustomRingbackServiceGroup, bwMusicOnHoldSPExternalSourceNumFailures=bwMusicOnHoldSPExternalSourceNumFailures, bwAsSelectiveCallRejectionServiceGroup=bwAsSelectiveCallRejectionServiceGroup, bwSipStatsOtherIns=bwSipStatsOtherIns, bwSimRingPersonalSPID=bwSimRingPersonalSPID, bwVMRGroupNumComposeSendListAttempts=bwVMRGroupNumComposeSendListAttempts, bwCommonCommPSInputMessagesProcessed=bwCommonCommPSInputMessagesProcessed, bwInterceptGroupGroupOriginationInvocations=bwInterceptGroupGroupOriginationInvocations, bwFaxMessagingSPPrintingFailure=bwFaxMessagingSPPrintingFailure, bwCFBSPDestinationChanged=bwCFBSPDestinationChanged, bwIPPhoneGroupEntry=bwIPPhoneGroupEntry, ldapModule=ldapModule, bwLastNumberRedialSPID=bwLastNumberRedialSPID, bwCallpGroupMaximumNumberofSimCallsExceeded=bwCallpGroupMaximumNumberofSimCallsExceeded, bwRingTimeoutSPNumExpires=bwRingTimeoutSPNumExpires, bwPSTTHWMName=bwPSTTHWMName, bwAsLastNumberRedialServiceGroup=bwAsLastNumberRedialServiceGroup, perNbCriticalErrors=perNbCriticalErrors, bwSystemName=bwSystemName, bwSequentialRingSPAbandoned=bwSequentialRingSPAbandoned, bwMGCPStatsMaxDialToneDelay=bwMGCPStatsMaxDialToneDelay, bwVMRNumSendListFailed=bwVMRNumSendListFailed, bwExternalCustomRingbackFailures=bwExternalCustomRingbackFailures, bwAutoAttendantGroupIndex=bwAutoAttendantGroupIndex, bwMediaCommandsTransmitted=bwMediaCommandsTransmitted, bwPSMonitoringExecutorTable=bwPSMonitoringExecutorTable, bwCustomRingbackGroupAudioSPFailures=bwCustomRingbackGroupAudioSPFailures, bwOCPGroupNumPremiumServices2CallsBlocked=bwOCPGroupNumPremiumServices2CallsBlocked, bwIMSNumDroppedRequests=bwIMSNumDroppedRequests, bwVMRNumPersonalizedNamesRecorded=bwVMRNumPersonalizedNamesRecorded, bwAsDirectedCallPickupWithBargeInServiceGroup=bwAsDirectedCallPickupWithBargeInServiceGroup, bwCFAGroupNumForwarded=bwCFAGroupNumForwarded, bwAsAutomaticCallBackServiceGroup=bwAsAutomaticCallBackServiceGroup, xsRemoteXlaUpdatesProcessed=xsRemoteXlaUpdatesProcessed, bwPSTcpServersIncomingQueueSize=bwPSTcpServersIncomingQueueSize, bwCommonCommPSRejectedOutboundConnections=bwCommonCommPSRejectedOutboundConnections, bwCommonCommXSAcceptedInboundConnections=bwCommonCommXSAcceptedInboundConnections, bwSelectiveCallForwardSPTable=bwSelectiveCallForwardSPTable, bwPriorityAlertGroupID=bwPriorityAlertGroupID, bwAuthenticationSPID=bwAuthenticationSPID, bwVMRGroupNumComposeSendGroupAttempts=bwVMRGroupNumComposeSendGroupAttempts, bwVMRGroupNumReplySendAttempts=bwVMRGroupNumReplySendAttempts, bwSequentialRingActivations=bwSequentialRingActivations, bwAccountCodesSPTable=bwAccountCodesSPTable, bwVAOGroupOutgoingAttempts=bwVAOGroupOutgoingAttempts, bwAHRRetrieve=bwAHRRetrieve, bwSCASPLocationControlDeactivationSuccess=bwSCASPLocationControlDeactivationSuccess, bwPSMonitoringExecutorLongestTaskName=bwPSMonitoringExecutorLongestTaskName, bwCommonCommXSInputMessagesProcessed=bwCommonCommXSInputMessagesProcessed, bwMWIDeliveryToMobileGroupEntry=bwMWIDeliveryToMobileGroupEntry, bwInstantConferencingBridgeGroupName=bwInstantConferencingBridgeGroupName, mcpStats=mcpStats, bwSMTPTotalPrimaryEmailSendAttempts=bwSMTPTotalPrimaryEmailSendAttempts, bwAsSelectiveCallForwardServiceGroup=bwAsSelectiveCallForwardServiceGroup, psOAMStats=psOAMStats, bwSCAGroupID=bwSCAGroupID, bwSipStatsTcpIns=bwSipStatsTcpIns, bwMGCPStatsModifyConnectionResponseTable=bwMGCPStatsModifyConnectionResponseTable, bwCongestionManagementNeighborCallpRequestInRate=bwCongestionManagementNeighborCallpRequestInRate, bwVMSPNumNoAnswerGreetingsPlayed=bwVMSPNumNoAnswerGreetingsPlayed, psOciStatsMinUserRequestResponseTime=psOciStatsMinUserRequestResponseTime, bwOCPNumSpecialServices1CallsBlocked=bwOCPNumSpecialServices1CallsBlocked, bwCAPStatsExternalNotifies=bwCAPStatsExternalNotifies, bwVMRSPNumPersonalizedNamesRecorded=bwVMRSPNumPersonalizedNamesRecorded, bwDPUBIGroupTable=bwDPUBIGroupTable, bwOCPNumTransfers=bwOCPNumTransfers, bwACBGroupStarted=bwACBGroupStarted, bwOCPGroupNumLocalCallsBlocked=bwOCPGroupNumLocalCallsBlocked, bwCommPilotCallMgrGroupNumCallParkRetrieve=bwCommPilotCallMgrGroupNumCallParkRetrieve, mcpModule=mcpModule, bwSelectiveCallForwardGroupTable=bwSelectiveCallForwardGroupTable, bwShInterfaceGroup=bwShInterfaceGroup, bwHuntGroupsGroupNumAttempts=bwHuntGroupsGroupNumAttempts, bwCommPilotCallMgrGroupNumConference=bwCommPilotCallMgrGroupNumConference, bwAHRGroupRetrieve=bwAHRGroupRetrieve, bwXSTcpServersNbBytesSent=bwXSTcpServersNbBytesSent, bwExternalCallLogsTransmittedFromQueue=bwExternalCallLogsTransmittedFromQueue, smppStats=smppStats, bwWSPStatsServiceRequestsIn=bwWSPStatsServiceRequestsIn, bwSipStatsOptionsIns=bwSipStatsOptionsIns, bwCallCapacityGroupEntry=bwCallCapacityGroupEntry, bwFamilySimRingSPID=bwFamilySimRingSPID, callpStats=callpStats, bwFlashConsultationSPID=bwFlashConsultationSPID, bwLocationControlSPID=bwLocationControlSPID, bwCallForwardingAlwaysSPID=bwCallForwardingAlwaysSPID, perNbCommittedTransactions=perNbCommittedTransactions, bwSmdiInvalidResponsesReceived=bwSmdiInvalidResponsesReceived, bwOCPGroupNumURLDialingCallsBlocked=bwOCPGroupNumURLDialingCallsBlocked, bwAutoAttendantGroupEntry=bwAutoAttendantGroupEntry, bwCFGNASPIndex=bwCFGNASPIndex, polycomSPIndex=polycomSPIndex, bwVAOOutgoingAttempts=bwVAOOutgoingAttempts, bwOCPNumPremiumServices1CallsBlocked=bwOCPNumPremiumServices1CallsBlocked, bwPreferredCarrierSPID=bwPreferredCarrierSPID, bwCommPilotCallManagerSPTable=bwCommPilotCallManagerSPTable, bwFlashCallTransferGroupIndex=bwFlashCallTransferGroupIndex, bwCFBDestinationChanged=bwCFBDestinationChanged, bwDirectedCallPickupGroupNumAttempts=bwDirectedCallPickupGroupNumAttempts, locationControl=locationControl, emergencyZones=emergencyZones, psTimesTen=psTimesTen, bwCAPStatsSessionUpdatesOut=bwCAPStatsSessionUpdatesOut, psSystemInternalQueueLengthMaxTimestampLSB=psSystemInternalQueueLengthMaxTimestampLSB, bwAsOcpServiceGroup=bwAsOcpServiceGroup, bwXSTcpServersStatsTable=bwXSTcpServersStatsTable, bwAsSmtpGroup=bwAsSmtpGroup, bwHuntGroupsSPID=bwHuntGroupsSPID, psConcurrentModule=psConcurrentModule, bwNumberOfServiceType=bwNumberOfServiceType, bwSequentialRingSPActivations=bwSequentialRingSPActivations, bwLastNumberRedialSPTable=bwLastNumberRedialSPTable, bySystemInternalQueueResets=bySystemInternalQueueResets, bwCustomRingbackGroupVideoFailures=bwCustomRingbackGroupVideoFailures, bwSystemSPEntry=bwSystemSPEntry, bwCallCenterGroupTable=bwCallCenterGroupTable, psBwVMRGroupTable=psBwVMRGroupTable, bwCommPilotCallMgrSPNumTransferVM=bwCommPilotCallMgrSPNumTransferVM, bwAsThirdPartyMWIControlServiceGroup=bwAsThirdPartyMWIControlServiceGroup, bwICSAGroupFlashDigitsDetected=bwICSAGroupFlashDigitsDetected, bwOCPNumLocalCallsBlocked=bwOCPNumLocalCallsBlocked, bwCallPickupGroupIndex=bwCallPickupGroupIndex, bwIPPhoneGroupNumForwards=bwIPPhoneGroupNumForwards, bwICSAGroupMonitoringStarted=bwICSAGroupMonitoringStarted, bwFamilySimRingSPIndex=bwFamilySimRingSPIndex, bwSipStatsByeResponseOuts=bwSipStatsByeResponseOuts, bwBroadWorksAnywhereGroupID=bwBroadWorksAnywhereGroupID, polycomPhoneServices=polycomPhoneServices, bwCotGroupActivation=bwCotGroupActivation, bwSipStatsInviteResponseIns=bwSipStatsInviteResponseIns, bwBroadWorksAnywhereGroupTable=bwBroadWorksAnywhereGroupTable, smtpStats=smtpStats, bwOCPNumIntlCallsBlocked=bwOCPNumIntlCallsBlocked, bwAsFamilySimRingServiceGroup=bwAsFamilySimRingServiceGroup, bwPSTcpServersStatsIndex=bwPSTcpServersStatsIndex, bwSipStatsSubscribeResponseOuts=bwSipStatsSubscribeResponseOuts, bwSelectiveCallAcceptanceSPID=bwSelectiveCallAcceptanceSPID, bwMusicOnHoldSPNumUses=bwMusicOnHoldSPNumUses, bwAsThirdPartyVoiceMailServiceGroup=bwAsThirdPartyVoiceMailServiceGroup, bwCallCapacitySPNumCallsBlocked=bwCallCapacitySPNumCallsBlocked, bwAsProtocolMonitorGroup=bwAsProtocolMonitorGroup, psPerNbCommittedTransactions=psPerNbCommittedTransactions, bwXSMonitoringExecutorNbWarnings=bwXSMonitoringExecutorNbWarnings, bwICSAMonitoringStarted=bwICSAMonitoringStarted, bwGroupSubscriptionUserPIC=bwGroupSubscriptionUserPIC, bwOCPSACGroupNumSuccessfulLock=bwOCPSACGroupNumSuccessfulLock, xsRemoteXlaNbTimesDisconnected=xsRemoteXlaNbTimesDisconnected, mgcpStats=mgcpStats, bwAuthCodeSPNumValidations=bwAuthCodeSPNumValidations, bwCFNASPDestinationChanged=bwCFNASPDestinationChanged, bwSipStatsMessageResponsesEntry=bwSipStatsMessageResponsesEntry, bwAsDoNotDisturbServiceGroup=bwAsDoNotDisturbServiceGroup)
mibBuilder.exportSymbols("BW-BroadworksApplicationServer", bwActivatableFeatureEntry=bwActivatableFeatureEntry, bwSD8SPIndex=bwSD8SPIndex, bwSD100GroupProgram=bwSD100GroupProgram, cpeDevicesModule=cpeDevicesModule, bwCPEDeviceFileRebuilt=bwCPEDeviceFileRebuilt, bwCommonCommXSRejectedOutboundConnections=bwCommonCommXSRejectedOutboundConnections, bwSessionAuditSPIndex=bwSessionAuditSPIndex, bwDoNotDisturbSPEntry=bwDoNotDisturbSPEntry, bwVMRSPNumSendListFailed=bwVMRSPNumSendListFailed, bwSelectiveCallAcceptanceSPIndex=bwSelectiveCallAcceptanceSPIndex, bwAsFlash3wcServiceGroup=bwAsFlash3wcServiceGroup, bwMessagingQuery=bwMessagingQuery, bwCFGNAForward=bwCFGNAForward, bwCallReturnGroupNumReturns=bwCallReturnGroupNumReturns, bwSCAGroupIndex=bwSCAGroupIndex, bwSipStatsNotifyResponseCodeValue=bwSipStatsNotifyResponseCodeValue, bwICPGroupNumInterGroupBlocks=bwICPGroupNumInterGroupBlocks, bwAsMediaResourceGroup=bwAsMediaResourceGroup, accountCodes=accountCodes, bwAHRGroupTable=bwAHRGroupTable, bwCallpSPUserTerminationAttempts=bwCallpSPUserTerminationAttempts, bwAsSeriesCompletionServiceGroup=bwAsSeriesCompletionServiceGroup, bwAsNrsGroup=bwAsNrsGroup, callForwardGroupNoAnswer=callForwardGroupNoAnswer, bwSelectiveCallForwardSPID=bwSelectiveCallForwardSPID, bwCallpGroupUserOriginationAttempts=bwCallpGroupUserOriginationAttempts, bwNumberOfSPDNDefined=bwNumberOfSPDNDefined, bwSipStatsCancelIns=bwSipStatsCancelIns, bwCallReturnNumReturns=bwCallReturnNumReturns, bwSipStatsMinSetupSignalDelay=bwSipStatsMinSetupSignalDelay, bwCallingLineIDDeliveryBlockGroupIndex=bwCallingLineIDDeliveryBlockGroupIndex, bwSimRingPersonalGroupNumAttempts=bwSimRingPersonalGroupNumAttempts, bwCFNRcSPNumPhoneDeactivations=bwCFNRcSPNumPhoneDeactivations, bwXSTcpServersNbConnectionsInitiated=bwXSTcpServersNbConnectionsInitiated, bwVMRSPCallBackFailures=bwVMRSPCallBackFailures, bwNoIndicationUserPIC=bwNoIndicationUserPIC, bwMGCPStatsDeleteConnectionResponseTable=bwMGCPStatsDeleteConnectionResponseTable, bwPhysicalLocationSPTable=bwPhysicalLocationSPTable, bwCallReturnSPIndex=bwCallReturnSPIndex, bwPolycomPhoneDirectorySPNumDownloads=bwPolycomPhoneDirectorySPNumDownloads, bwCFBGroupNumPhoneDeactivations=bwCFBGroupNumPhoneDeactivations, bwSIPTcpTotalConnections=bwSIPTcpTotalConnections, bwDiversionInhibitorSPEntry=bwDiversionInhibitorSPEntry, bwTrunkGroupPerTGUnreachableDestinationExceededInitialValue=bwTrunkGroupPerTGUnreachableDestinationExceededInitialValue, bwXSMonitoringExecutorLongestTaskMs=bwXSMonitoringExecutorLongestTaskMs, voiceMessaging=voiceMessaging)
