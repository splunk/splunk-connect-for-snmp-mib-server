#
# PySNMP MIB module CIMWIN32-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CIMWIN32-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:32:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, iso, Integer32, ModuleIdentity, Unsigned32, MibIdentifier, Gauge32, Counter32, Counter64, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, IpAddress, Bits, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "Integer32", "ModuleIdentity", "Unsigned32", "MibIdentifier", "Gauge32", "Counter32", "Counter64", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "IpAddress", "Bits", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
Sint16, Uint8, Datetime, Sint8, Uint32, Uint64, String, Boolean, Uint16, Sint32, Sint64, win32WMI, Real32, Real64 = mibBuilder.importSymbols("UMS-MIB", "Sint16", "Uint8", "Datetime", "Sint8", "Uint32", "Uint64", "String", "Boolean", "Uint16", "Sint32", "Sint64", "win32WMI", "Real32", "Real64")
win32ComputerSystemTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10), )
if mibBuilder.loadTexts: win32ComputerSystemTable.setStatus('mandatory')
win32ComputerSystemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32ComputerSystemKeyIndex"))
if mibBuilder.loadTexts: win32ComputerSystemEntry.setStatus('mandatory')
win32ComputerSystemKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemKeyIndex.setStatus('mandatory')
win32ComputerSystemAutomaticResetBootOption = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 2), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemAutomaticResetBootOption.setStatus('mandatory')
win32ComputerSystemAutomaticResetCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 3), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemAutomaticResetCapability.setStatus('mandatory')
win32ComputerSystemBootROMSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 4), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemBootROMSupported.setStatus('mandatory')
win32ComputerSystemBootupState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemBootupState.setStatus('mandatory')
win32ComputerSystemCurrentTimeZone = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 6), Sint16()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemCurrentTimeZone.setStatus('mandatory')
win32ComputerSystemDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 7), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemDomain.setStatus('mandatory')
win32ComputerSystemInfraredSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 8), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemInfraredSupported.setStatus('mandatory')
win32ComputerSystemManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 9), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemManufacturer.setStatus('mandatory')
win32ComputerSystemModel = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 10), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemModel.setStatus('mandatory')
win32ComputerSystemNetworkServerModeEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 11), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemNetworkServerModeEnabled.setStatus('mandatory')
win32ComputerSystemOEMLogoBitmap = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 12), Uint8()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemOEMLogoBitmap.setStatus('mandatory')
win32ComputerSystemSupportContactDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 13), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemSupportContactDescription.setStatus('mandatory')
win32ComputerSystemSystemStartupDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 14), Uint16()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemSystemStartupDelay.setStatus('mandatory')
win32ComputerSystemSystemStartupOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 15), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemSystemStartupOptions.setStatus('mandatory')
win32ComputerSystemSystemStartupSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 16), Uint8()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemSystemStartupSetting.setStatus('mandatory')
win32ComputerSystemSystemType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 17), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemSystemType.setStatus('mandatory')
win32ComputerSystemUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 18), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemUserName.setStatus('mandatory')
win32ComputerSystemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 10, 1, 19), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ComputerSystemStatus.setStatus('mandatory')
win32TapeDriveTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 20), )
if mibBuilder.loadTexts: win32TapeDriveTable.setStatus('mandatory')
win32TapeDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 20, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32TapeDriveKeyIndex"))
if mibBuilder.loadTexts: win32TapeDriveEntry.setStatus('mandatory')
win32TapeDriveKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 20, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TapeDriveKeyIndex.setStatus('mandatory')
win32TapeDriveCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 20, 1, 2), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TapeDriveCompression.setStatus('mandatory')
win32TapeDriveECC = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 20, 1, 3), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TapeDriveECC.setStatus('mandatory')
win32TapeDriveFeaturesHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 20, 1, 4), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TapeDriveFeaturesHigh.setStatus('mandatory')
win32TapeDriveFeaturesLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 20, 1, 5), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TapeDriveFeaturesLow.setStatus('mandatory')
win32TapeDriveMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 20, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TapeDriveMediaType.setStatus('mandatory')
win32TapeDriveReportSetMarks = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 20, 1, 7), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TapeDriveReportSetMarks.setStatus('mandatory')
win32TapeDriveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 20, 1, 8), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TapeDriveStatus.setStatus('mandatory')
win32DiskDriveTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30), )
if mibBuilder.loadTexts: win32DiskDriveTable.setStatus('mandatory')
win32DiskDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32DiskDriveKeyIndex"))
if mibBuilder.loadTexts: win32DiskDriveEntry.setStatus('mandatory')
win32DiskDriveKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveKeyIndex.setStatus('mandatory')
win32DiskDriveBytesPerSector = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 2), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveBytesPerSector.setStatus('mandatory')
win32DiskDriveInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveInterfaceType.setStatus('mandatory')
win32DiskDrivePartitions = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 4), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDrivePartitions.setStatus('mandatory')
win32DiskDriveSectorsPerTrack = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 5), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveSectorsPerTrack.setStatus('mandatory')
win32DiskDriveTotalCylinders = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveTotalCylinders.setStatus('mandatory')
win32DiskDriveTotalHeads = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 7), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveTotalHeads.setStatus('mandatory')
win32DiskDriveTotalSectors = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 8), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveTotalSectors.setStatus('mandatory')
win32DiskDriveTotalTracks = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 9), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveTotalTracks.setStatus('mandatory')
win32DiskDriveTracksPerCylinder = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 10), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveTracksPerCylinder.setStatus('mandatory')
win32DiskDriveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 11), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveIndex.setStatus('mandatory')
win32DiskDriveManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 12), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveManufacturer.setStatus('mandatory')
win32DiskDriveMediaLoaded = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 13), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveMediaLoaded.setStatus('mandatory')
win32DiskDriveMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 14), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveMediaType.setStatus('mandatory')
win32DiskDriveModel = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 15), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveModel.setStatus('mandatory')
win32DiskDriveSCSIBus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 16), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveSCSIBus.setStatus('mandatory')
win32DiskDriveSCSILogicalUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 17), Uint16()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveSCSILogicalUnit.setStatus('mandatory')
win32DiskDriveSCSIPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 18), Uint16()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveSCSIPort.setStatus('mandatory')
win32DiskDriveSCSITargetId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 19), Uint16()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveSCSITargetId.setStatus('mandatory')
win32DiskDriveSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 20), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveSize.setStatus('mandatory')
win32DiskDriveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 30, 1, 21), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveStatus.setStatus('mandatory')
win32CDROMDriveTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 40), )
if mibBuilder.loadTexts: win32CDROMDriveTable.setStatus('mandatory')
win32CDROMDriveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 40, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32CDROMDriveKeyIndex"))
if mibBuilder.loadTexts: win32CDROMDriveEntry.setStatus('mandatory')
win32CDROMDriveKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 40, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CDROMDriveKeyIndex.setStatus('mandatory')
win32CDROMDriveDrive = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 40, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CDROMDriveDrive.setStatus('mandatory')
win32CDROMDriveFileSystemFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 40, 1, 3), Uint16()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CDROMDriveFileSystemFlags.setStatus('mandatory')
win32CDROMDriveId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 40, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CDROMDriveId.setStatus('mandatory')
win32CDROMDriveManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 40, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CDROMDriveManufacturer.setStatus('mandatory')
win32CDROMDriveMaximumComponentLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 40, 1, 6), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CDROMDriveMaximumComponentLength.setStatus('mandatory')
win32CDROMDriveMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 40, 1, 7), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CDROMDriveMediaType.setStatus('mandatory')
win32CDROMDriveRevisionLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 40, 1, 8), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CDROMDriveRevisionLevel.setStatus('mandatory')
win32CDROMDriveSCSITargetId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 40, 1, 9), Uint16()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CDROMDriveSCSITargetId.setStatus('mandatory')
win32CDROMDriveVolumeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 40, 1, 10), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CDROMDriveVolumeName.setStatus('mandatory')
win32CDROMDriveVolumeSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 40, 1, 11), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CDROMDriveVolumeSerialNumber.setStatus('mandatory')
win32CDROMDriveTransferRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 40, 1, 12), Real64()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CDROMDriveTransferRate.setStatus('mandatory')
win32CDROMDriveDriveIntegrity = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 40, 1, 13), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CDROMDriveDriveIntegrity.setStatus('mandatory')
win32CDROMDriveMediaLoaded = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 40, 1, 14), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CDROMDriveMediaLoaded.setStatus('mandatory')
win32CDROMDriveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 40, 1, 15), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CDROMDriveStatus.setStatus('mandatory')
win32PointingDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 50), )
if mibBuilder.loadTexts: win32PointingDeviceTable.setStatus('mandatory')
win32PointingDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 50, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32PointingDeviceKeyIndex"))
if mibBuilder.loadTexts: win32PointingDeviceEntry.setStatus('mandatory')
win32PointingDeviceKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 50, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PointingDeviceKeyIndex.setStatus('mandatory')
win32PointingDeviceHardwareType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 50, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PointingDeviceHardwareType.setStatus('mandatory')
win32PointingDeviceInfFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 50, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PointingDeviceInfFileName.setStatus('mandatory')
win32PointingDeviceInfSection = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 50, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PointingDeviceInfSection.setStatus('mandatory')
win32PointingDeviceSampleRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 50, 1, 5), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PointingDeviceSampleRate.setStatus('mandatory')
win32PointingDeviceSynch = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 50, 1, 6), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PointingDeviceSynch.setStatus('mandatory')
win32PointingDeviceDoubleSpeedThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 50, 1, 7), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PointingDeviceDoubleSpeedThreshold.setStatus('mandatory')
win32PointingDeviceQuadSpeedThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 50, 1, 8), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PointingDeviceQuadSpeedThreshold.setStatus('mandatory')
win32PointingDeviceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 50, 1, 9), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PointingDeviceStatus.setStatus('mandatory')
win32LogicalDiskTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 70), )
if mibBuilder.loadTexts: win32LogicalDiskTable.setStatus('mandatory')
win32LogicalDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 70, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32LogicalDiskKeyIndex"))
if mibBuilder.loadTexts: win32LogicalDiskEntry.setStatus('mandatory')
win32LogicalDiskKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 70, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalDiskKeyIndex.setStatus('mandatory')
win32LogicalDiskCompressed = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 70, 1, 2), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalDiskCompressed.setStatus('mandatory')
win32LogicalDiskDriveType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 70, 1, 3), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalDiskDriveType.setStatus('mandatory')
win32LogicalDiskFileSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 70, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalDiskFileSystem.setStatus('mandatory')
win32LogicalDiskFreeSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 70, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalDiskFreeSpace.setStatus('mandatory')
win32LogicalDiskMaximumComponentLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 70, 1, 6), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalDiskMaximumComponentLength.setStatus('mandatory')
win32LogicalDiskProviderName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 70, 1, 7), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalDiskProviderName.setStatus('mandatory')
win32LogicalDiskSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 70, 1, 8), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalDiskSize.setStatus('mandatory')
win32LogicalDiskSupportsFileBasedCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 70, 1, 9), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalDiskSupportsFileBasedCompression.setStatus('mandatory')
win32LogicalDiskVolumeName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 70, 1, 10), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalDiskVolumeName.setStatus('mandatory')
win32LogicalDiskVolumeSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 70, 1, 11), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalDiskVolumeSerialNumber.setStatus('mandatory')
win32LogicalDiskMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 70, 1, 12), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalDiskMediaType.setStatus('mandatory')
win32LogicalDiskStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 70, 1, 13), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalDiskStatus.setStatus('mandatory')
win32DiskPartitionTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 80), )
if mibBuilder.loadTexts: win32DiskPartitionTable.setStatus('mandatory')
win32DiskPartitionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 80, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32DiskPartitionKeyIndex"))
if mibBuilder.loadTexts: win32DiskPartitionEntry.setStatus('mandatory')
win32DiskPartitionKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 80, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskPartitionKeyIndex.setStatus('mandatory')
win32DiskPartitionBootPartition = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 80, 1, 2), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskPartitionBootPartition.setStatus('mandatory')
win32DiskPartitionDiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 80, 1, 3), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskPartitionDiskIndex.setStatus('mandatory')
win32DiskPartitionHiddenSectors = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 80, 1, 4), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskPartitionHiddenSectors.setStatus('mandatory')
win32DiskPartitionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 80, 1, 5), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskPartitionIndex.setStatus('mandatory')
win32DiskPartitionRewritePartition = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 80, 1, 6), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskPartitionRewritePartition.setStatus('mandatory')
win32DiskPartitionSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 80, 1, 7), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskPartitionSize.setStatus('mandatory')
win32DiskPartitionStartingOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 80, 1, 8), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskPartitionStartingOffset.setStatus('mandatory')
win32DiskPartitionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 80, 1, 9), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskPartitionType.setStatus('mandatory')
win32DiskPartitionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 80, 1, 10), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskPartitionStatus.setStatus('mandatory')
win32BatteryTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 90), )
if mibBuilder.loadTexts: win32BatteryTable.setStatus('mandatory')
win32BatteryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 90, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32BatteryKeyIndex"))
if mibBuilder.loadTexts: win32BatteryEntry.setStatus('mandatory')
win32BatteryKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 90, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32BatteryKeyIndex.setStatus('mandatory')
win32BatteryExpectedBatteryLife = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 90, 1, 2), Uint16()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32BatteryExpectedBatteryLife.setStatus('mandatory')
win32BatteryBatteryRechargeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 90, 1, 3), Uint16()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32BatteryBatteryRechargeTime.setStatus('mandatory')
win32BatteryBatteryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 90, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32BatteryBatteryStatus.setStatus('mandatory')
win32MotherboardDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 100), )
if mibBuilder.loadTexts: win32MotherboardDeviceTable.setStatus('mandatory')
win32MotherboardDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 100, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32MotherboardDeviceKeyIndex"))
if mibBuilder.loadTexts: win32MotherboardDeviceEntry.setStatus('mandatory')
win32MotherboardDeviceKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 100, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32MotherboardDeviceKeyIndex.setStatus('mandatory')
win32MotherboardDevicePrimaryBusType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 100, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32MotherboardDevicePrimaryBusType.setStatus('mandatory')
win32MotherboardDeviceRevisionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 100, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32MotherboardDeviceRevisionNumber.setStatus('mandatory')
win32MotherboardDeviceSecondaryBusType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 100, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32MotherboardDeviceSecondaryBusType.setStatus('mandatory')
win32MotherboardDeviceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 100, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32MotherboardDeviceStatus.setStatus('mandatory')
win32ProcessorTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 110), )
if mibBuilder.loadTexts: win32ProcessorTable.setStatus('mandatory')
win32ProcessorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 110, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32ProcessorKeyIndex"))
if mibBuilder.loadTexts: win32ProcessorEntry.setStatus('mandatory')
win32ProcessorKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 110, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessorKeyIndex.setStatus('mandatory')
win32ProcessorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 110, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessorVersion.setStatus('mandatory')
win32ProcessorManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 110, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessorManufacturer.setStatus('mandatory')
win32ProcessorL2CacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 110, 1, 4), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessorL2CacheSize.setStatus('mandatory')
win32ProcessorL2CacheSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 110, 1, 5), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessorL2CacheSpeed.setStatus('mandatory')
win32ProcessorArchitecture = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 110, 1, 6), Uint16()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessorArchitecture.setStatus('mandatory')
win32ProcessorLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 110, 1, 7), Uint16()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessorLevel.setStatus('mandatory')
win32ProcessorRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 110, 1, 8), Uint16()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessorRevision.setStatus('mandatory')
win32ProcessorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 110, 1, 9), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessorStatus.setStatus('mandatory')
win32PrinterTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 120), )
if mibBuilder.loadTexts: win32PrinterTable.setStatus('mandatory')
win32PrinterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 120, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32PrinterKeyIndex"))
if mibBuilder.loadTexts: win32PrinterEntry.setStatus('mandatory')
win32PrinterKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 120, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterKeyIndex.setStatus('mandatory')
win32PrinterAttributes = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 120, 1, 2), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterAttributes.setStatus('mandatory')
win32PrinterDriverName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 120, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterDriverName.setStatus('mandatory')
win32PrinterLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 120, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterLocation.setStatus('mandatory')
win32PrinterPrinterPaperNames = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 120, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterPrinterPaperNames.setStatus('mandatory')
win32PrinterPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 120, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterPortName.setStatus('mandatory')
win32PrinterPrintJobDataType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 120, 1, 7), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterPrintJobDataType.setStatus('mandatory')
win32PrinterSeparatorFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 120, 1, 8), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterSeparatorFile.setStatus('mandatory')
win32PrinterServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 120, 1, 9), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterServerName.setStatus('mandatory')
win32PrinterShareName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 120, 1, 10), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterShareName.setStatus('mandatory')
win32PrinterStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 120, 1, 11), Datetime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterStartTime.setStatus('mandatory')
win32PrinterUntilTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 120, 1, 12), Datetime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterUntilTime.setStatus('mandatory')
win32PrinterDefaultPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 120, 1, 13), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterDefaultPriority.setStatus('mandatory')
win32PrinterAveragePagesPerMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 120, 1, 14), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterAveragePagesPerMinute.setStatus('mandatory')
win32PrinterPrintProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 120, 1, 15), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterPrintProcessor.setStatus('mandatory')
win32PrinterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 120, 1, 16), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterStatus.setStatus('mandatory')
win32UninterruptiblePowerSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 130), )
if mibBuilder.loadTexts: win32UninterruptiblePowerSupplyTable.setStatus('mandatory')
win32UninterruptiblePowerSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 130, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32UninterruptiblePowerSupplyKeyIndex"))
if mibBuilder.loadTexts: win32UninterruptiblePowerSupplyEntry.setStatus('mandatory')
win32UninterruptiblePowerSupplyKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 130, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UninterruptiblePowerSupplyKeyIndex.setStatus('mandatory')
win32UninterruptiblePowerSupplyBatteryInstalled = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 130, 1, 2), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UninterruptiblePowerSupplyBatteryInstalled.setStatus('mandatory')
win32UninterruptiblePowerSupplyCanTurnOffRemotely = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 130, 1, 3), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UninterruptiblePowerSupplyCanTurnOffRemotely.setStatus('mandatory')
win32UninterruptiblePowerSupplyCommandFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 130, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UninterruptiblePowerSupplyCommandFile.setStatus('mandatory')
win32UninterruptiblePowerSupplyFirstMessageDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 130, 1, 5), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UninterruptiblePowerSupplyFirstMessageDelay.setStatus('mandatory')
win32UninterruptiblePowerSupplyLowBatterySignal = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 130, 1, 6), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UninterruptiblePowerSupplyLowBatterySignal.setStatus('mandatory')
win32UninterruptiblePowerSupplyMessageInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 130, 1, 7), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UninterruptiblePowerSupplyMessageInterval.setStatus('mandatory')
win32UninterruptiblePowerSupplyPowerFailSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 130, 1, 8), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UninterruptiblePowerSupplyPowerFailSignal.setStatus('mandatory')
win32UninterruptiblePowerSupplyUPSPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 130, 1, 9), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UninterruptiblePowerSupplyUPSPort.setStatus('mandatory')
win32UninterruptiblePowerSupplyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 130, 1, 10), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UninterruptiblePowerSupplyStatus.setStatus('mandatory')
win32POTSModemTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140), )
if mibBuilder.loadTexts: win32POTSModemTable.setStatus('mandatory')
win32POTSModemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32POTSModemKeyIndex"))
if mibBuilder.loadTexts: win32POTSModemEntry.setStatus('mandatory')
win32POTSModemKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemKeyIndex.setStatus('mandatory')
win32POTSModemAttachedTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemAttachedTo.setStatus('mandatory')
win32POTSModemBlindOff = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemBlindOff.setStatus('mandatory')
win32POTSModemBlindOn = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemBlindOn.setStatus('mandatory')
win32POTSModemCompatibilityFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemCompatibilityFlags.setStatus('mandatory')
win32POTSModemCompressionOff = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemCompressionOff.setStatus('mandatory')
win32POTSModemCompressionOn = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 7), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemCompressionOn.setStatus('mandatory')
win32POTSModemConfigurationDialog = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 8), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemConfigurationDialog.setStatus('mandatory')
win32POTSModemDCB = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 9), Uint8()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemDCB.setStatus('mandatory')
win32POTSModemDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 10), Uint8()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemDefault.setStatus('mandatory')
win32POTSModemDeviceLoader = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 11), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemDeviceLoader.setStatus('mandatory')
win32POTSModemDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 12), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemDeviceType.setStatus('mandatory')
win32POTSModemDriverDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 13), Datetime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemDriverDate.setStatus('mandatory')
win32POTSModemErrorControlForced = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 14), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemErrorControlForced.setStatus('mandatory')
win32POTSModemErrorControlOff = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 15), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemErrorControlOff.setStatus('mandatory')
win32POTSModemErrorControlOn = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 16), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemErrorControlOn.setStatus('mandatory')
win32POTSModemFlowControlHard = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 17), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemFlowControlHard.setStatus('mandatory')
win32POTSModemFlowControlSoft = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 18), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemFlowControlSoft.setStatus('mandatory')
win32POTSModemFlowControlOff = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 19), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemFlowControlOff.setStatus('mandatory')
win32POTSModemInactivityScale = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 20), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemInactivityScale.setStatus('mandatory')
win32POTSModemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 21), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemIndex.setStatus('mandatory')
win32POTSModemModel = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 22), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemModel.setStatus('mandatory')
win32POTSModemModemInfPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 23), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemModemInfPath.setStatus('mandatory')
win32POTSModemModemInfSection = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 24), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemModemInfSection.setStatus('mandatory')
win32POTSModemModulationBell = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 25), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemModulationBell.setStatus('mandatory')
win32POTSModemModulationCCITT = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 26), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemModulationCCITT.setStatus('mandatory')
win32POTSModemPortSubClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 27), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemPortSubClass.setStatus('mandatory')
win32POTSModemPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 28), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemPrefix.setStatus('mandatory')
win32POTSModemProperties = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 29), Uint8()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemProperties.setStatus('mandatory')
win32POTSModemProviderName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 30), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemProviderName.setStatus('mandatory')
win32POTSModemPulse = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 31), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemPulse.setStatus('mandatory')
win32POTSModemReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 32), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemReset.setStatus('mandatory')
win32POTSModemResponsesKeyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 33), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemResponsesKeyName.setStatus('mandatory')
win32POTSModemSpeakerModeDial = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 34), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemSpeakerModeDial.setStatus('mandatory')
win32POTSModemSpeakerModeOff = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 35), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemSpeakerModeOff.setStatus('mandatory')
win32POTSModemSpeakerModeOn = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 36), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemSpeakerModeOn.setStatus('mandatory')
win32POTSModemSpeakerModeSetup = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 37), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemSpeakerModeSetup.setStatus('mandatory')
win32POTSModemSpeakerVolumeHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 38), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemSpeakerVolumeHigh.setStatus('mandatory')
win32POTSModemSpeakerVolumeLow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 39), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemSpeakerVolumeLow.setStatus('mandatory')
win32POTSModemSpeakerVolumeMed = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 40), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemSpeakerVolumeMed.setStatus('mandatory')
win32POTSModemStringFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 41), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemStringFormat.setStatus('mandatory')
win32POTSModemTerminator = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 42), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemTerminator.setStatus('mandatory')
win32POTSModemTone = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 43), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemTone.setStatus('mandatory')
win32POTSModemVoiceSwitchFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 44), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemVoiceSwitchFeature.setStatus('mandatory')
win32POTSModemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 140, 1, 45), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32POTSModemStatus.setStatus('mandatory')
win32SerialPortTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150), )
if mibBuilder.loadTexts: win32SerialPortTable.setStatus('mandatory')
win32SerialPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32SerialPortKeyIndex"))
if mibBuilder.loadTexts: win32SerialPortEntry.setStatus('mandatory')
win32SerialPortKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortKeyIndex.setStatus('mandatory')
win32SerialPortBinary = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 2), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortBinary.setStatus('mandatory')
win32SerialPortMaximumInputBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 3), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortMaximumInputBufferSize.setStatus('mandatory')
win32SerialPortMaximumOutputBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 4), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortMaximumOutputBufferSize.setStatus('mandatory')
win32SerialPortProviderType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortProviderType.setStatus('mandatory')
win32SerialPortSettableBaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 6), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortSettableBaudRate.setStatus('mandatory')
win32SerialPortSettableDataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 7), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortSettableDataBits.setStatus('mandatory')
win32SerialPortSettableFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 8), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortSettableFlowControl.setStatus('mandatory')
win32SerialPortSettableParity = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 9), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortSettableParity.setStatus('mandatory')
win32SerialPortSettableParityCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 10), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortSettableParityCheck.setStatus('mandatory')
win32SerialPortSettableRLSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 11), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortSettableRLSD.setStatus('mandatory')
win32SerialPortSettableStopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 12), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortSettableStopBits.setStatus('mandatory')
win32SerialPortSupports16BitMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 13), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortSupports16BitMode.setStatus('mandatory')
win32SerialPortSupportsDTRDSR = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 14), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortSupportsDTRDSR.setStatus('mandatory')
win32SerialPortSupportsElapsedTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 15), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortSupportsElapsedTimeouts.setStatus('mandatory')
win32SerialPortSupportsIntTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 16), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortSupportsIntTimeouts.setStatus('mandatory')
win32SerialPortSupportsParityCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 17), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortSupportsParityCheck.setStatus('mandatory')
win32SerialPortSupportsRLSD = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 18), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortSupportsRLSD.setStatus('mandatory')
win32SerialPortSupportsRTSCTS = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 19), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortSupportsRTSCTS.setStatus('mandatory')
win32SerialPortSupportsSpecialCharacters = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 20), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortSupportsSpecialCharacters.setStatus('mandatory')
win32SerialPortSupportsXOnXOff = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 21), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortSupportsXOnXOff.setStatus('mandatory')
win32SerialPortSupportsXOnXOffSet = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 22), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortSupportsXOnXOffSet.setStatus('mandatory')
win32SerialPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 150, 1, 23), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortStatus.setStatus('mandatory')
win32NetworkAdapterTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 160), )
if mibBuilder.loadTexts: win32NetworkAdapterTable.setStatus('mandatory')
win32NetworkAdapterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 160, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32NetworkAdapterKeyIndex"))
if mibBuilder.loadTexts: win32NetworkAdapterEntry.setStatus('mandatory')
win32NetworkAdapterKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 160, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkAdapterKeyIndex.setStatus('mandatory')
win32NetworkAdapterProductName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 160, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkAdapterProductName.setStatus('mandatory')
win32NetworkAdapterAdapterType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 160, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkAdapterAdapterType.setStatus('mandatory')
win32NetworkAdapterMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 160, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkAdapterMACAddress.setStatus('mandatory')
win32NetworkAdapterServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 160, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkAdapterServiceName.setStatus('mandatory')
win32NetworkAdapterManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 160, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkAdapterManufacturer.setStatus('mandatory')
win32NetworkAdapterInstalled = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 160, 1, 7), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkAdapterInstalled.setStatus('mandatory')
win32NetworkAdapterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 160, 1, 8), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkAdapterIndex.setStatus('mandatory')
win32NetworkAdapterMaxNumberControlled = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 160, 1, 9), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkAdapterMaxNumberControlled.setStatus('mandatory')
win32NetworkAdapterTimeOfLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 160, 1, 10), Datetime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkAdapterTimeOfLastReset.setStatus('mandatory')
win32NetworkAdapterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 160, 1, 11), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkAdapterStatus.setStatus('mandatory')
win32SCSIControllerTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 170), )
if mibBuilder.loadTexts: win32SCSIControllerTable.setStatus('mandatory')
win32SCSIControllerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 170, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32SCSIControllerKeyIndex"))
if mibBuilder.loadTexts: win32SCSIControllerEntry.setStatus('mandatory')
win32SCSIControllerKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 170, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SCSIControllerKeyIndex.setStatus('mandatory')
win32SCSIControllerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 170, 1, 2), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SCSIControllerIndex.setStatus('mandatory')
win32SCSIControllerDriverName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 170, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SCSIControllerDriverName.setStatus('mandatory')
win32SCSIControllerDeviceMap = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 170, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SCSIControllerDeviceMap.setStatus('mandatory')
win32SCSIControllerHardwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 170, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SCSIControllerHardwareVersion.setStatus('mandatory')
win32SCSIControllerManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 170, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SCSIControllerManufacturer.setStatus('mandatory')
win32SCSIControllerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 170, 1, 7), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SCSIControllerStatus.setStatus('mandatory')
win32CodecFileTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 190), )
if mibBuilder.loadTexts: win32CodecFileTable.setStatus('mandatory')
win32CodecFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 190, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32CodecFileKeyIndex"))
if mibBuilder.loadTexts: win32CodecFileEntry.setStatus('mandatory')
win32CodecFileKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 190, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CodecFileKeyIndex.setStatus('mandatory')
win32CodecFileGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 190, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CodecFileGroup.setStatus('mandatory')
win32CodecFileDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 190, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CodecFileDescription.setStatus('mandatory')
win32CodecFileStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 190, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32CodecFileStatus.setStatus('mandatory')
win32PageFileTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 210), )
if mibBuilder.loadTexts: win32PageFileTable.setStatus('mandatory')
win32PageFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 210, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32PageFileKeyIndex"))
if mibBuilder.loadTexts: win32PageFileEntry.setStatus('mandatory')
win32PageFileKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 210, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PageFileKeyIndex.setStatus('mandatory')
win32PageFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 210, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PageFileName.setStatus('mandatory')
win32PageFileFreeSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 210, 1, 3), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PageFileFreeSpace.setStatus('mandatory')
win32PageFileInitialSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 210, 1, 4), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PageFileInitialSize.setStatus('mandatory')
win32PageFileMaximumSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 210, 1, 5), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PageFileMaximumSize.setStatus('mandatory')
win32PageFileStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 210, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PageFileStatus.setStatus('mandatory')
win32DriverVXDTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 230), )
if mibBuilder.loadTexts: win32DriverVXDTable.setStatus('mandatory')
win32DriverVXDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 230, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32DriverVXDKeyIndex"))
if mibBuilder.loadTexts: win32DriverVXDEntry.setStatus('mandatory')
win32DriverVXDKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 230, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DriverVXDKeyIndex.setStatus('mandatory')
win32DriverVXDControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 230, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DriverVXDControl.setStatus('mandatory')
win32DriverVXDDeviceDescriptorBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 230, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DriverVXDDeviceDescriptorBlock.setStatus('mandatory')
win32DriverVXDPMAPI = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 230, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DriverVXDPMAPI.setStatus('mandatory')
win32DriverVXDServiceTableSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 230, 1, 5), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DriverVXDServiceTableSize.setStatus('mandatory')
win32DriverVXDV86API = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 230, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DriverVXDV86API.setStatus('mandatory')
win32DriverVXDVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 230, 1, 7), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DriverVXDVersion.setStatus('mandatory')
win32DriverVXDStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 230, 1, 8), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DriverVXDStatus.setStatus('mandatory')
win32AccountTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 240), )
if mibBuilder.loadTexts: win32AccountTable.setStatus('mandatory')
win32AccountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 240, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32AccountKeyIndex"))
if mibBuilder.loadTexts: win32AccountEntry.setStatus('mandatory')
win32AccountKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 240, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32AccountKeyIndex.setStatus('mandatory')
win32AccountDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 240, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32AccountDomain.setStatus('mandatory')
win32AccountSID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 240, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32AccountSID.setStatus('mandatory')
win32AccountSIDType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 240, 1, 4), Uint8()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32AccountSIDType.setStatus('mandatory')
win32AccountStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 240, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32AccountStatus.setStatus('mandatory')
win32SystemAccountTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 250), )
if mibBuilder.loadTexts: win32SystemAccountTable.setStatus('mandatory')
win32SystemAccountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 250, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32SystemAccountKeyIndex"))
if mibBuilder.loadTexts: win32SystemAccountEntry.setStatus('mandatory')
win32SystemAccountKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 250, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SystemAccountKeyIndex.setStatus('mandatory')
win32SystemAccountDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 250, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SystemAccountDomain.setStatus('mandatory')
win32SystemAccountName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 250, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SystemAccountName.setStatus('mandatory')
win32SystemAccountStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 250, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SystemAccountStatus.setStatus('mandatory')
win32GroupTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 260), )
if mibBuilder.loadTexts: win32GroupTable.setStatus('mandatory')
win32GroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 260, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32GroupKeyIndex"))
if mibBuilder.loadTexts: win32GroupEntry.setStatus('mandatory')
win32GroupKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 260, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32GroupKeyIndex.setStatus('mandatory')
win32GroupDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 260, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32GroupDomain.setStatus('mandatory')
win32GroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 260, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32GroupName.setStatus('mandatory')
win32GroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 260, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32GroupStatus.setStatus('mandatory')
win32UserAccountTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 270), )
if mibBuilder.loadTexts: win32UserAccountTable.setStatus('mandatory')
win32UserAccountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 270, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32UserAccountKeyIndex"))
if mibBuilder.loadTexts: win32UserAccountEntry.setStatus('mandatory')
win32UserAccountKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 270, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UserAccountKeyIndex.setStatus('mandatory')
win32UserAccountAccountType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 270, 1, 2), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UserAccountAccountType.setStatus('mandatory')
win32UserAccountDisabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 270, 1, 3), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UserAccountDisabled.setStatus('mandatory')
win32UserAccountDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 270, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UserAccountDomain.setStatus('mandatory')
win32UserAccountFullName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 270, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UserAccountFullName.setStatus('mandatory')
win32UserAccountLockout = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 270, 1, 6), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UserAccountLockout.setStatus('mandatory')
win32UserAccountName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 270, 1, 7), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UserAccountName.setStatus('mandatory')
win32UserAccountPasswordChangeable = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 270, 1, 8), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UserAccountPasswordChangeable.setStatus('mandatory')
win32UserAccountPasswordExpires = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 270, 1, 9), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UserAccountPasswordExpires.setStatus('mandatory')
win32UserAccountPasswordRequired = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 270, 1, 10), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UserAccountPasswordRequired.setStatus('mandatory')
win32UserAccountStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 270, 1, 11), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32UserAccountStatus.setStatus('mandatory')
win32NetworkConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 280), )
if mibBuilder.loadTexts: win32NetworkConnectionTable.setStatus('mandatory')
win32NetworkConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 280, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32NetworkConnectionKeyIndex"))
if mibBuilder.loadTexts: win32NetworkConnectionEntry.setStatus('mandatory')
win32NetworkConnectionKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 280, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkConnectionKeyIndex.setStatus('mandatory')
win32NetworkConnectionComment = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 280, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkConnectionComment.setStatus('mandatory')
win32NetworkConnectionConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 280, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkConnectionConnectionType.setStatus('mandatory')
win32NetworkConnectionDisplayType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 280, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkConnectionDisplayType.setStatus('mandatory')
win32NetworkConnectionLocalName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 280, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkConnectionLocalName.setStatus('mandatory')
win32NetworkConnectionName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 280, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkConnectionName.setStatus('mandatory')
win32NetworkConnectionPersistent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 280, 1, 7), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkConnectionPersistent.setStatus('mandatory')
win32NetworkConnectionProviderName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 280, 1, 8), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkConnectionProviderName.setStatus('mandatory')
win32NetworkConnectionRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 280, 1, 9), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkConnectionRemoteName.setStatus('mandatory')
win32NetworkConnectionRemotePath = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 280, 1, 10), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkConnectionRemotePath.setStatus('mandatory')
win32NetworkConnectionResourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 280, 1, 11), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkConnectionResourceType.setStatus('mandatory')
win32NetworkConnectionUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 280, 1, 12), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkConnectionUserName.setStatus('mandatory')
win32NetworkConnectionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 280, 1, 13), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkConnectionStatus.setStatus('mandatory')
win32DeviceMemoryAddressTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 290), )
if mibBuilder.loadTexts: win32DeviceMemoryAddressTable.setStatus('mandatory')
win32DeviceMemoryAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 290, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32DeviceMemoryAddressKeyIndex"))
if mibBuilder.loadTexts: win32DeviceMemoryAddressEntry.setStatus('mandatory')
win32DeviceMemoryAddressKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 290, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DeviceMemoryAddressKeyIndex.setStatus('mandatory')
win32DeviceMemoryAddressMemoryType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 290, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DeviceMemoryAddressMemoryType.setStatus('mandatory')
win32DeviceMemoryAddressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 290, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DeviceMemoryAddressStatus.setStatus('mandatory')
win32PortResourceTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 300), )
if mibBuilder.loadTexts: win32PortResourceTable.setStatus('mandatory')
win32PortResourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 300, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32PortResourceKeyIndex"))
if mibBuilder.loadTexts: win32PortResourceEntry.setStatus('mandatory')
win32PortResourceKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 300, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PortResourceKeyIndex.setStatus('mandatory')
win32PortResourceAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 300, 1, 2), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PortResourceAlias.setStatus('mandatory')
win32PortResourceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 300, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PortResourceStatus.setStatus('mandatory')
win32DMAChannelTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 310), )
if mibBuilder.loadTexts: win32DMAChannelTable.setStatus('mandatory')
win32DMAChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 310, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32DMAChannelKeyIndex"))
if mibBuilder.loadTexts: win32DMAChannelEntry.setStatus('mandatory')
win32DMAChannelKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 310, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DMAChannelKeyIndex.setStatus('mandatory')
win32DMAChannelPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 310, 1, 2), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DMAChannelPort.setStatus('mandatory')
win32DMAChannelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 310, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DMAChannelStatus.setStatus('mandatory')
win32EnvironmentTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 320), )
if mibBuilder.loadTexts: win32EnvironmentTable.setStatus('mandatory')
win32EnvironmentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 320, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32EnvironmentKeyIndex"))
if mibBuilder.loadTexts: win32EnvironmentEntry.setStatus('mandatory')
win32EnvironmentKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 320, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32EnvironmentKeyIndex.setStatus('mandatory')
win32EnvironmentName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 320, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32EnvironmentName.setStatus('mandatory')
win32EnvironmentSystemVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 320, 1, 3), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32EnvironmentSystemVariable.setStatus('mandatory')
win32EnvironmentUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 320, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32EnvironmentUserName.setStatus('mandatory')
win32EnvironmentVariableValue = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 320, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32EnvironmentVariableValue.setStatus('mandatory')
win32EnvironmentStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 320, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32EnvironmentStatus.setStatus('mandatory')
win32IRQResourceTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 330), )
if mibBuilder.loadTexts: win32IRQResourceTable.setStatus('mandatory')
win32IRQResourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 330, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32IRQResourceKeyIndex"))
if mibBuilder.loadTexts: win32IRQResourceEntry.setStatus('mandatory')
win32IRQResourceKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 330, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32IRQResourceKeyIndex.setStatus('mandatory')
win32IRQResourceVector = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 330, 1, 2), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32IRQResourceVector.setStatus('mandatory')
win32IRQResourceHardware = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 330, 1, 3), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32IRQResourceHardware.setStatus('mandatory')
win32IRQResourceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 330, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32IRQResourceStatus.setStatus('mandatory')
win32LoadOrderGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 340), )
if mibBuilder.loadTexts: win32LoadOrderGroupTable.setStatus('mandatory')
win32LoadOrderGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 340, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32LoadOrderGroupKeyIndex"))
if mibBuilder.loadTexts: win32LoadOrderGroupEntry.setStatus('mandatory')
win32LoadOrderGroupKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 340, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LoadOrderGroupKeyIndex.setStatus('mandatory')
win32LoadOrderGroupGroupOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 340, 1, 2), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LoadOrderGroupGroupOrder.setStatus('mandatory')
win32LoadOrderGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 340, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LoadOrderGroupName.setStatus('mandatory')
win32LoadOrderGroupDriverEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 340, 1, 4), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LoadOrderGroupDriverEnabled.setStatus('mandatory')
win32LoadOrderGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 340, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LoadOrderGroupStatus.setStatus('mandatory')
win32NetworkClientTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 350), )
if mibBuilder.loadTexts: win32NetworkClientTable.setStatus('mandatory')
win32NetworkClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 350, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32NetworkClientKeyIndex"))
if mibBuilder.loadTexts: win32NetworkClientEntry.setStatus('mandatory')
win32NetworkClientKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 350, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkClientKeyIndex.setStatus('mandatory')
win32NetworkClientManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 350, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkClientManufacturer.setStatus('mandatory')
win32NetworkClientName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 350, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkClientName.setStatus('mandatory')
win32NetworkClientStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 350, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkClientStatus.setStatus('mandatory')
win32ShareTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 360), )
if mibBuilder.loadTexts: win32ShareTable.setStatus('mandatory')
win32ShareEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 360, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32ShareKeyIndex"))
if mibBuilder.loadTexts: win32ShareEntry.setStatus('mandatory')
win32ShareKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 360, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ShareKeyIndex.setStatus('mandatory')
win32ShareAllowMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 360, 1, 2), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ShareAllowMaximum.setStatus('mandatory')
win32ShareMaximumAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 360, 1, 3), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ShareMaximumAllowed.setStatus('mandatory')
win32ShareName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 360, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ShareName.setStatus('mandatory')
win32SharePath = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 360, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SharePath.setStatus('mandatory')
win32ShareType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 360, 1, 6), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ShareType.setStatus('mandatory')
win32ShareStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 360, 1, 7), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ShareStatus.setStatus('mandatory')
win32RegistryTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 370), )
if mibBuilder.loadTexts: win32RegistryTable.setStatus('mandatory')
win32RegistryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 370, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32RegistryKeyIndex"))
if mibBuilder.loadTexts: win32RegistryEntry.setStatus('mandatory')
win32RegistryKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 370, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32RegistryKeyIndex.setStatus('mandatory')
win32RegistryCurrentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 370, 1, 2), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32RegistryCurrentSize.setStatus('mandatory')
win32RegistryProposedSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 370, 1, 3), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32RegistryProposedSize.setStatus('mandatory')
win32RegistryMaximumSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 370, 1, 4), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32RegistryMaximumSize.setStatus('mandatory')
win32RegistryName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 370, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32RegistryName.setStatus('mandatory')
win32RegistryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 370, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32RegistryStatus.setStatus('mandatory')
win32NetworkProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380), )
if mibBuilder.loadTexts: win32NetworkProtocolTable.setStatus('mandatory')
win32NetworkProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32NetworkProtocolKeyIndex"))
if mibBuilder.loadTexts: win32NetworkProtocolEntry.setStatus('mandatory')
win32NetworkProtocolKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolKeyIndex.setStatus('mandatory')
win32NetworkProtocolConnectionlessService = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 2), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolConnectionlessService.setStatus('mandatory')
win32NetworkProtocolGuranteesDelivery = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 3), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolGuranteesDelivery.setStatus('mandatory')
win32NetworkProtocolGuranteesSequencing = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 4), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolGuranteesSequencing.setStatus('mandatory')
win32NetworkProtocolMaximumAddressSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 5), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolMaximumAddressSize.setStatus('mandatory')
win32NetworkProtocolMaximumMessageSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 6), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolMaximumMessageSize.setStatus('mandatory')
win32NetworkProtocolMessageOriented = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 7), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolMessageOriented.setStatus('mandatory')
win32NetworkProtocolMinimumAddressSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 8), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolMinimumAddressSize.setStatus('mandatory')
win32NetworkProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 9), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolName.setStatus('mandatory')
win32NetworkProtocolPseudoStreamOriented = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 10), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolPseudoStreamOriented.setStatus('mandatory')
win32NetworkProtocolSupportsBroadcasting = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 11), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolSupportsBroadcasting.setStatus('mandatory')
win32NetworkProtocolSupportsConnectData = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 12), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolSupportsConnectData.setStatus('mandatory')
win32NetworkProtocolSupportsDisconnectData = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 13), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolSupportsDisconnectData.setStatus('mandatory')
win32NetworkProtocolSupportsEncryption = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 14), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolSupportsEncryption.setStatus('mandatory')
win32NetworkProtocolSupportsExpiditeData = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 15), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolSupportsExpiditeData.setStatus('mandatory')
win32NetworkProtocolSupportsFragmentation = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 16), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolSupportsFragmentation.setStatus('mandatory')
win32NetworkProtocolSupportsGracefulClosing = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 17), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolSupportsGracefulClosing.setStatus('mandatory')
win32NetworkProtocolSupportsGuaranteedBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 18), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolSupportsGuaranteedBandwidth.setStatus('mandatory')
win32NetworkProtocolSupportsMulticasting = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 19), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolSupportsMulticasting.setStatus('mandatory')
win32NetworkProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 380, 1, 20), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkProtocolStatus.setStatus('mandatory')
win32ProcessStartupTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 400), )
if mibBuilder.loadTexts: win32ProcessStartupTable.setStatus('mandatory')
win32ProcessStartupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 400, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32ProcessStartupKeyIndex"))
if mibBuilder.loadTexts: win32ProcessStartupEntry.setStatus('mandatory')
win32ProcessStartupKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 400, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessStartupKeyIndex.setStatus('mandatory')
win32ProcessStartupCreateFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 400, 1, 2), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessStartupCreateFlags.setStatus('mandatory')
win32ProcessStartupPriorityClass = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 400, 1, 3), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessStartupPriorityClass.setStatus('mandatory')
win32ProcessStartupWinstationDesktop = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 400, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessStartupWinstationDesktop.setStatus('mandatory')
win32ProcessStartupTitle = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 400, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessStartupTitle.setStatus('mandatory')
win32ProcessStartupX = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 400, 1, 7), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessStartupX.setStatus('mandatory')
win32ProcessStartupY = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 400, 1, 8), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessStartupY.setStatus('mandatory')
win32ProcessStartupXSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 400, 1, 9), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessStartupXSize.setStatus('mandatory')
win32ProcessStartupYSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 400, 1, 10), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessStartupYSize.setStatus('mandatory')
win32ProcessStartupXCountChars = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 400, 1, 11), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessStartupXCountChars.setStatus('mandatory')
win32ProcessStartupYCountChars = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 400, 1, 12), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessStartupYCountChars.setStatus('mandatory')
win32ProcessStartupFillAttribute = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 400, 1, 13), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessStartupFillAttribute.setStatus('mandatory')
win32ProcessStartupShowWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 400, 1, 14), Uint16()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessStartupShowWindow.setStatus('mandatory')
win32ProcessStartupErrorMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 400, 1, 15), Uint16()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessStartupErrorMode.setStatus('mandatory')
win32ProcessStartupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 400, 1, 16), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessStartupStatus.setStatus('mandatory')
win32ProcessTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 410), )
if mibBuilder.loadTexts: win32ProcessTable.setStatus('mandatory')
win32ProcessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 410, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32ProcessKeyIndex"))
if mibBuilder.loadTexts: win32ProcessEntry.setStatus('mandatory')
win32ProcessKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 410, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessKeyIndex.setStatus('mandatory')
win32ProcessExecutablePath = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 410, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessExecutablePath.setStatus('mandatory')
win32ProcessMaximumWorkingSetSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 410, 1, 3), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessMaximumWorkingSetSize.setStatus('mandatory')
win32ProcessMinimumWorkingSetSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 410, 1, 4), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessMinimumWorkingSetSize.setStatus('mandatory')
win32ProcessPageFaults = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 410, 1, 5), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessPageFaults.setStatus('mandatory')
win32ProcessPageFileUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 410, 1, 6), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessPageFileUsage.setStatus('mandatory')
win32ProcessPeakWorkingSetSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 410, 1, 7), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessPeakWorkingSetSize.setStatus('mandatory')
win32ProcessProcessId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 410, 1, 8), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessProcessId.setStatus('mandatory')
win32ProcessQuotaNonPagedPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 410, 1, 9), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessQuotaNonPagedPoolUsage.setStatus('mandatory')
win32ProcessQuotaPagedPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 410, 1, 10), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessQuotaPagedPoolUsage.setStatus('mandatory')
win32ProcessQuotaPeakNonPagedPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 410, 1, 11), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessQuotaPeakNonPagedPoolUsage.setStatus('mandatory')
win32ProcessQuotaPeakPagedPoolUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 410, 1, 12), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessQuotaPeakPagedPoolUsage.setStatus('mandatory')
win32ProcessWindowsVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 410, 1, 13), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessWindowsVersion.setStatus('mandatory')
win32ProcessStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 410, 1, 14), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProcessStatus.setStatus('mandatory')
win32ThreadTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 420), )
if mibBuilder.loadTexts: win32ThreadTable.setStatus('mandatory')
win32ThreadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 420, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32ThreadKeyIndex"))
if mibBuilder.loadTexts: win32ThreadEntry.setStatus('mandatory')
win32ThreadKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 420, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ThreadKeyIndex.setStatus('mandatory')
win32ThreadProcessHandle = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 420, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ThreadProcessHandle.setStatus('mandatory')
win32ThreadHandle = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 420, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ThreadHandle.setStatus('mandatory')
win32ThreadElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 420, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ThreadElapsedTime.setStatus('mandatory')
win32ThreadPriorityBase = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 420, 1, 5), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ThreadPriorityBase.setStatus('mandatory')
win32ThreadPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 420, 1, 6), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ThreadPriority.setStatus('mandatory')
win32ThreadStartAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 420, 1, 7), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ThreadStartAddress.setStatus('mandatory')
win32ThreadThreadState = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 420, 1, 8), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ThreadThreadState.setStatus('mandatory')
win32ThreadThreadWaitReason = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 420, 1, 9), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ThreadThreadWaitReason.setStatus('mandatory')
win32ThreadStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 420, 1, 10), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ThreadStatus.setStatus('mandatory')
win32OperatingSystemTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430), )
if mibBuilder.loadTexts: win32OperatingSystemTable.setStatus('mandatory')
win32OperatingSystemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32OperatingSystemKeyIndex"))
if mibBuilder.loadTexts: win32OperatingSystemEntry.setStatus('mandatory')
win32OperatingSystemKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemKeyIndex.setStatus('mandatory')
win32OperatingSystemBootDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemBootDevice.setStatus('mandatory')
win32OperatingSystemBuildNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemBuildNumber.setStatus('mandatory')
win32OperatingSystemBuildType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemBuildType.setStatus('mandatory')
win32OperatingSystemCodeSet = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemCodeSet.setStatus('mandatory')
win32OperatingSystemCountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemCountryCode.setStatus('mandatory')
win32OperatingSystemCSDVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 7), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemCSDVersion.setStatus('mandatory')
win32OperatingSystemDebug = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 8), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemDebug.setStatus('mandatory')
win32OperatingSystemForegroundApplicationBoost = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 9), Uint8()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemForegroundApplicationBoost.setStatus('mandatory')
win32OperatingSystemLocale = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 10), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemLocale.setStatus('mandatory')
win32OperatingSystemManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 11), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemManufacturer.setStatus('mandatory')
win32OperatingSystemOrganization = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 12), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemOrganization.setStatus('mandatory')
win32OperatingSystemOSLanguage = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 13), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemOSLanguage.setStatus('mandatory')
win32OperatingSystemPlusProductID = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 14), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemPlusProductID.setStatus('mandatory')
win32OperatingSystemPlusVersionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 15), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemPlusVersionNumber.setStatus('mandatory')
win32OperatingSystemPrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 16), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemPrimary.setStatus('mandatory')
win32OperatingSystemQuantumLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 17), Uint8()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemQuantumLength.setStatus('mandatory')
win32OperatingSystemQuantumType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 18), Uint8()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemQuantumType.setStatus('mandatory')
win32OperatingSystemRegisteredUser = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 19), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemRegisteredUser.setStatus('mandatory')
win32OperatingSystemSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 20), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemSerialNumber.setStatus('mandatory')
win32OperatingSystemSystemDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 21), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemSystemDevice.setStatus('mandatory')
win32OperatingSystemSystemDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 22), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemSystemDirectory.setStatus('mandatory')
win32OperatingSystemVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 23), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemVersion.setStatus('mandatory')
win32OperatingSystemWindowsDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 24), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemWindowsDirectory.setStatus('mandatory')
win32OperatingSystemDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 25), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemDescription.setStatus('mandatory')
win32OperatingSystemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 430, 1, 26), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OperatingSystemStatus.setStatus('mandatory')
win32PrintJobTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 440), )
if mibBuilder.loadTexts: win32PrintJobTable.setStatus('mandatory')
win32PrintJobEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 440, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32PrintJobKeyIndex"))
if mibBuilder.loadTexts: win32PrintJobEntry.setStatus('mandatory')
win32PrintJobKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 440, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrintJobKeyIndex.setStatus('mandatory')
win32PrintJobName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 440, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrintJobName.setStatus('mandatory')
win32PrintJobDataType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 440, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrintJobDataType.setStatus('mandatory')
win32PrintJobDocument = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 440, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrintJobDocument.setStatus('mandatory')
win32PrintJobDriverName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 440, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrintJobDriverName.setStatus('mandatory')
win32PrintJobHostPrintQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 440, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrintJobHostPrintQueue.setStatus('mandatory')
win32PrintJobJobId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 440, 1, 7), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrintJobJobId.setStatus('mandatory')
win32PrintJobPagesPrinted = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 440, 1, 8), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrintJobPagesPrinted.setStatus('mandatory')
win32PrintJobParameters = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 440, 1, 9), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrintJobParameters.setStatus('mandatory')
win32PrintJobPrintProcessor = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 440, 1, 10), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrintJobPrintProcessor.setStatus('mandatory')
win32PrintJobSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 440, 1, 11), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrintJobSize.setStatus('mandatory')
win32PrintJobTotalPages = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 440, 1, 12), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrintJobTotalPages.setStatus('mandatory')
win32PrintJobStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 440, 1, 13), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrintJobStatus.setStatus('mandatory')
win32ScheduledJobTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 450), )
if mibBuilder.loadTexts: win32ScheduledJobTable.setStatus('mandatory')
win32ScheduledJobEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 450, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32ScheduledJobKeyIndex"))
if mibBuilder.loadTexts: win32ScheduledJobEntry.setStatus('mandatory')
win32ScheduledJobKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 450, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ScheduledJobKeyIndex.setStatus('mandatory')
win32ScheduledJobJobId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 450, 1, 2), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ScheduledJobJobId.setStatus('mandatory')
win32ScheduledJobCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 450, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ScheduledJobCommand.setStatus('mandatory')
win32ScheduledJobStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 450, 1, 4), Datetime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ScheduledJobStartTime.setStatus('mandatory')
win32ScheduledJobRunRepeatedly = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 450, 1, 5), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ScheduledJobRunRepeatedly.setStatus('mandatory')
win32ScheduledJobInteractWithDesktop = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 450, 1, 6), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ScheduledJobInteractWithDesktop.setStatus('mandatory')
win32ScheduledJobDaysOfWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 450, 1, 7), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ScheduledJobDaysOfWeek.setStatus('mandatory')
win32ScheduledJobDaysOfMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 450, 1, 8), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ScheduledJobDaysOfMonth.setStatus('mandatory')
win32ScheduledJobJobStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 450, 1, 9), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ScheduledJobJobStatus.setStatus('mandatory')
win32ScheduledJobStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 450, 1, 10), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ScheduledJobStatus.setStatus('mandatory')
win32BIOSTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 460), )
if mibBuilder.loadTexts: win32BIOSTable.setStatus('mandatory')
win32BIOSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 460, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32BIOSKeyIndex"))
if mibBuilder.loadTexts: win32BIOSEntry.setStatus('mandatory')
win32BIOSKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 460, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32BIOSKeyIndex.setStatus('mandatory')
win32BIOSReleaseDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 460, 1, 2), Datetime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32BIOSReleaseDate.setStatus('mandatory')
win32BIOSVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 460, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32BIOSVersion.setStatus('mandatory')
win32BIOSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 460, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32BIOSStatus.setStatus('mandatory')
win32BootConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 470), )
if mibBuilder.loadTexts: win32BootConfigurationTable.setStatus('mandatory')
win32BootConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 470, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32BootConfigurationKeyIndex"))
if mibBuilder.loadTexts: win32BootConfigurationEntry.setStatus('mandatory')
win32BootConfigurationKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 470, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32BootConfigurationKeyIndex.setStatus('mandatory')
win32BootConfigurationBootDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 470, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32BootConfigurationBootDirectory.setStatus('mandatory')
win32BootConfigurationConfigurationPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 470, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32BootConfigurationConfigurationPath.setStatus('mandatory')
win32BootConfigurationLastDrive = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 470, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32BootConfigurationLastDrive.setStatus('mandatory')
win32BootConfigurationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 470, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32BootConfigurationName.setStatus('mandatory')
win32BootConfigurationScratchDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 470, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32BootConfigurationScratchDirectory.setStatus('mandatory')
win32BootConfigurationTempDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 470, 1, 7), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32BootConfigurationTempDirectory.setStatus('mandatory')
win32DesktopTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480), )
if mibBuilder.loadTexts: win32DesktopTable.setStatus('mandatory')
win32DesktopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32DesktopKeyIndex"))
if mibBuilder.loadTexts: win32DesktopEntry.setStatus('mandatory')
win32DesktopKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopKeyIndex.setStatus('mandatory')
win32DesktopBorderWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 2), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopBorderWidth.setStatus('mandatory')
win32DesktopCoolSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 3), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopCoolSwitch.setStatus('mandatory')
win32DesktopCursorBlinkRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 4), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopCursorBlinkRate.setStatus('mandatory')
win32DesktopDragFullWindows = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 5), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopDragFullWindows.setStatus('mandatory')
win32DesktopGridGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 6), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopGridGranularity.setStatus('mandatory')
win32DesktopIconSpacing = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 7), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopIconSpacing.setStatus('mandatory')
win32DesktopIconTitleFaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 8), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopIconTitleFaceName.setStatus('mandatory')
win32DesktopIconTitleSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 9), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopIconTitleSize.setStatus('mandatory')
win32DesktopIconTitleWrap = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 10), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopIconTitleWrap.setStatus('mandatory')
win32DesktopName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 11), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopName.setStatus('mandatory')
win32DesktopPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 12), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopPattern.setStatus('mandatory')
win32DesktopScreenSaverActive = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 13), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopScreenSaverActive.setStatus('mandatory')
win32DesktopScreenSaverExecutable = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 14), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopScreenSaverExecutable.setStatus('mandatory')
win32DesktopScreenSaverSecure = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 15), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopScreenSaverSecure.setStatus('mandatory')
win32DesktopScreenSaverTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 16), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopScreenSaverTimeout.setStatus('mandatory')
win32DesktopWallpaper = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 17), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopWallpaper.setStatus('mandatory')
win32DesktopWallpaperTiled = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 18), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopWallpaperTiled.setStatus('mandatory')
win32DesktopWallpaperStretched = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 480, 1, 19), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DesktopWallpaperStretched.setStatus('mandatory')
win32DisplayConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 490), )
if mibBuilder.loadTexts: win32DisplayConfigurationTable.setStatus('mandatory')
win32DisplayConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 490, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32DisplayConfigurationKeyIndex"))
if mibBuilder.loadTexts: win32DisplayConfigurationEntry.setStatus('mandatory')
win32DisplayConfigurationKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 490, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayConfigurationKeyIndex.setStatus('mandatory')
win32DisplayConfigurationBitsPerPel = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 490, 1, 2), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayConfigurationBitsPerPel.setStatus('mandatory')
win32DisplayConfigurationDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 490, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayConfigurationDeviceName.setStatus('mandatory')
win32DisplayConfigurationDisplayFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 490, 1, 4), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayConfigurationDisplayFlags.setStatus('mandatory')
win32DisplayConfigurationDisplayFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 490, 1, 5), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayConfigurationDisplayFrequency.setStatus('mandatory')
win32DisplayConfigurationDitherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 490, 1, 6), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayConfigurationDitherType.setStatus('mandatory')
win32DisplayConfigurationDriverVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 490, 1, 7), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayConfigurationDriverVersion.setStatus('mandatory')
win32DisplayConfigurationICMIntent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 490, 1, 8), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayConfigurationICMIntent.setStatus('mandatory')
win32DisplayConfigurationICMMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 490, 1, 9), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayConfigurationICMMethod.setStatus('mandatory')
win32DisplayConfigurationLogPixels = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 490, 1, 10), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayConfigurationLogPixels.setStatus('mandatory')
win32DisplayConfigurationPelsHeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 490, 1, 11), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayConfigurationPelsHeight.setStatus('mandatory')
win32DisplayConfigurationPelsWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 490, 1, 12), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayConfigurationPelsWidth.setStatus('mandatory')
win32DisplayConfigurationSpecificationVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 490, 1, 13), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayConfigurationSpecificationVersion.setStatus('mandatory')
win32DisplayControllerConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 500), )
if mibBuilder.loadTexts: win32DisplayControllerConfigurationTable.setStatus('mandatory')
win32DisplayControllerConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 500, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32DisplayControllerConfigurationKeyIndex"))
if mibBuilder.loadTexts: win32DisplayControllerConfigurationEntry.setStatus('mandatory')
win32DisplayControllerConfigurationKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 500, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayControllerConfigurationKeyIndex.setStatus('mandatory')
win32DisplayControllerConfigurationBitsPerPixel = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 500, 1, 2), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayControllerConfigurationBitsPerPixel.setStatus('mandatory')
win32DisplayControllerConfigurationColorPlanes = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 500, 1, 3), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayControllerConfigurationColorPlanes.setStatus('mandatory')
win32DisplayControllerConfigurationDeviceEntriesInAColorTable = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 500, 1, 4), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayControllerConfigurationDeviceEntriesInAColorTable.setStatus('mandatory')
win32DisplayControllerConfigurationDeviceSpecificPens = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 500, 1, 5), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayControllerConfigurationDeviceSpecificPens.setStatus('mandatory')
win32DisplayControllerConfigurationHorizontalResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 500, 1, 6), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayControllerConfigurationHorizontalResolution.setStatus('mandatory')
win32DisplayControllerConfigurationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 500, 1, 7), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayControllerConfigurationName.setStatus('mandatory')
win32DisplayControllerConfigurationRefreshRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 500, 1, 8), Sint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayControllerConfigurationRefreshRate.setStatus('mandatory')
win32DisplayControllerConfigurationReservedSystemPaletteEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 500, 1, 9), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayControllerConfigurationReservedSystemPaletteEntries.setStatus('mandatory')
win32DisplayControllerConfigurationSystemPaletteEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 500, 1, 10), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayControllerConfigurationSystemPaletteEntries.setStatus('mandatory')
win32DisplayControllerConfigurationVerticalResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 500, 1, 11), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayControllerConfigurationVerticalResolution.setStatus('mandatory')
win32DisplayControllerConfigurationVideoMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 500, 1, 12), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DisplayControllerConfigurationVideoMode.setStatus('mandatory')
win32LogicalMemoryConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 510), )
if mibBuilder.loadTexts: win32LogicalMemoryConfigurationTable.setStatus('mandatory')
win32LogicalMemoryConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 510, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32LogicalMemoryConfigurationKeyIndex"))
if mibBuilder.loadTexts: win32LogicalMemoryConfigurationEntry.setStatus('mandatory')
win32LogicalMemoryConfigurationKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 510, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalMemoryConfigurationKeyIndex.setStatus('mandatory')
win32LogicalMemoryConfigurationAvailableVirtualMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 510, 1, 2), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalMemoryConfigurationAvailableVirtualMemory.setStatus('mandatory')
win32LogicalMemoryConfigurationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 510, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalMemoryConfigurationName.setStatus('mandatory')
win32LogicalMemoryConfigurationTotalPageFileSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 510, 1, 4), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalMemoryConfigurationTotalPageFileSpace.setStatus('mandatory')
win32LogicalMemoryConfigurationTotalPhysicalMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 510, 1, 5), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalMemoryConfigurationTotalPhysicalMemory.setStatus('mandatory')
win32LogicalMemoryConfigurationTotalVirtualMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 510, 1, 6), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalMemoryConfigurationTotalVirtualMemory.setStatus('mandatory')
win32NetworkLoginProfileTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520), )
if mibBuilder.loadTexts: win32NetworkLoginProfileTable.setStatus('mandatory')
win32NetworkLoginProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32NetworkLoginProfileKeyIndex"))
if mibBuilder.loadTexts: win32NetworkLoginProfileEntry.setStatus('mandatory')
win32NetworkLoginProfileKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileKeyIndex.setStatus('mandatory')
win32NetworkLoginProfileAccountExpires = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 2), Datetime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileAccountExpires.setStatus('mandatory')
win32NetworkLoginProfileAuthorizationFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 3), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileAuthorizationFlags.setStatus('mandatory')
win32NetworkLoginProfileBadPasswordCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 4), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileBadPasswordCount.setStatus('mandatory')
win32NetworkLoginProfileCodePage = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 5), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileCodePage.setStatus('mandatory')
win32NetworkLoginProfileComment = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileComment.setStatus('mandatory')
win32NetworkLoginProfileCountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 7), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileCountryCode.setStatus('mandatory')
win32NetworkLoginProfileFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 8), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileFlags.setStatus('mandatory')
win32NetworkLoginProfileFullName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 9), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileFullName.setStatus('mandatory')
win32NetworkLoginProfileHomeDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 10), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileHomeDirectory.setStatus('mandatory')
win32NetworkLoginProfileHomeDirectoryDrive = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 11), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileHomeDirectoryDrive.setStatus('mandatory')
win32NetworkLoginProfileLastLogoff = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 12), Datetime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileLastLogoff.setStatus('mandatory')
win32NetworkLoginProfileLastLogon = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 13), Datetime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileLastLogon.setStatus('mandatory')
win32NetworkLoginProfileLogonHours = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 14), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileLogonHours.setStatus('mandatory')
win32NetworkLoginProfileLogonServer = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 15), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileLogonServer.setStatus('mandatory')
win32NetworkLoginProfileMaximumStorage = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 16), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileMaximumStorage.setStatus('mandatory')
win32NetworkLoginProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 17), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileName.setStatus('mandatory')
win32NetworkLoginProfileNumberOfLogons = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 18), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileNumberOfLogons.setStatus('mandatory')
win32NetworkLoginProfileParameters = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 19), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileParameters.setStatus('mandatory')
win32NetworkLoginProfilePasswordAge = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 20), Datetime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfilePasswordAge.setStatus('mandatory')
win32NetworkLoginProfilePasswordExpires = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 21), Datetime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfilePasswordExpires.setStatus('mandatory')
win32NetworkLoginProfilePrimaryGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 22), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfilePrimaryGroupId.setStatus('mandatory')
win32NetworkLoginProfilePrivileges = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 23), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfilePrivileges.setStatus('mandatory')
win32NetworkLoginProfileProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 24), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileProfile.setStatus('mandatory')
win32NetworkLoginProfileScriptPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 25), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileScriptPath.setStatus('mandatory')
win32NetworkLoginProfileUnitsPerWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 26), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileUnitsPerWeek.setStatus('mandatory')
win32NetworkLoginProfileUserComment = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 27), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileUserComment.setStatus('mandatory')
win32NetworkLoginProfileUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 28), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileUserId.setStatus('mandatory')
win32NetworkLoginProfileUserType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 29), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileUserType.setStatus('mandatory')
win32NetworkLoginProfileWorkstations = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 520, 1, 30), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32NetworkLoginProfileWorkstations.setStatus('mandatory')
win32OSRecoveryConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 530), )
if mibBuilder.loadTexts: win32OSRecoveryConfigurationTable.setStatus('mandatory')
win32OSRecoveryConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 530, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32OSRecoveryConfigurationKeyIndex"))
if mibBuilder.loadTexts: win32OSRecoveryConfigurationEntry.setStatus('mandatory')
win32OSRecoveryConfigurationKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 530, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OSRecoveryConfigurationKeyIndex.setStatus('mandatory')
win32OSRecoveryConfigurationAutoReboot = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 530, 1, 2), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OSRecoveryConfigurationAutoReboot.setStatus('mandatory')
win32OSRecoveryConfigurationDebugFilePath = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 530, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OSRecoveryConfigurationDebugFilePath.setStatus('mandatory')
win32OSRecoveryConfigurationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 530, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OSRecoveryConfigurationName.setStatus('mandatory')
win32OSRecoveryConfigurationOverwriteExistingDebugFile = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 530, 1, 5), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OSRecoveryConfigurationOverwriteExistingDebugFile.setStatus('mandatory')
win32OSRecoveryConfigurationSendAdminAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 530, 1, 6), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OSRecoveryConfigurationSendAdminAlert.setStatus('mandatory')
win32OSRecoveryConfigurationWriteDebugInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 530, 1, 7), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OSRecoveryConfigurationWriteDebugInfo.setStatus('mandatory')
win32OSRecoveryConfigurationWriteToSystemLog = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 530, 1, 8), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32OSRecoveryConfigurationWriteToSystemLog.setStatus('mandatory')
win32PrinterConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540), )
if mibBuilder.loadTexts: win32PrinterConfigurationTable.setStatus('mandatory')
win32PrinterConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32PrinterConfigurationKeyIndex"))
if mibBuilder.loadTexts: win32PrinterConfigurationEntry.setStatus('mandatory')
win32PrinterConfigurationKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationKeyIndex.setStatus('mandatory')
win32PrinterConfigurationBitsPerPel = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 2), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationBitsPerPel.setStatus('mandatory')
win32PrinterConfigurationCollate = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 3), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationCollate.setStatus('mandatory')
win32PrinterConfigurationColor = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 4), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationColor.setStatus('mandatory')
win32PrinterConfigurationCopies = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 5), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationCopies.setStatus('mandatory')
win32PrinterConfigurationDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationDeviceName.setStatus('mandatory')
win32PrinterConfigurationDisplayFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 7), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationDisplayFlags.setStatus('mandatory')
win32PrinterConfigurationDisplayFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 8), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationDisplayFrequency.setStatus('mandatory')
win32PrinterConfigurationDitherType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 9), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationDitherType.setStatus('mandatory')
win32PrinterConfigurationDriverVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 10), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationDriverVersion.setStatus('mandatory')
win32PrinterConfigurationDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 11), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationDuplex.setStatus('mandatory')
win32PrinterConfigurationFormName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 12), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationFormName.setStatus('mandatory')
win32PrinterConfigurationICMIntent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 13), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationICMIntent.setStatus('mandatory')
win32PrinterConfigurationICMMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 14), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationICMMethod.setStatus('mandatory')
win32PrinterConfigurationLogPixels = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 15), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationLogPixels.setStatus('mandatory')
win32PrinterConfigurationMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 16), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationMediaType.setStatus('mandatory')
win32PrinterConfigurationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 17), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationName.setStatus('mandatory')
win32PrinterConfigurationOrientation = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 18), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationOrientation.setStatus('mandatory')
win32PrinterConfigurationPaperLength = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 19), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationPaperLength.setStatus('mandatory')
win32PrinterConfigurationPaperSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 20), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationPaperSize.setStatus('mandatory')
win32PrinterConfigurationPaperWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 21), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationPaperWidth.setStatus('mandatory')
win32PrinterConfigurationPelsHeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 22), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationPelsHeight.setStatus('mandatory')
win32PrinterConfigurationPelsWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 23), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationPelsWidth.setStatus('mandatory')
win32PrinterConfigurationPrintQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 24), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationPrintQuality.setStatus('mandatory')
win32PrinterConfigurationScale = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 25), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationScale.setStatus('mandatory')
win32PrinterConfigurationSpecificationVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 26), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationSpecificationVersion.setStatus('mandatory')
win32PrinterConfigurationTTOption = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 27), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationTTOption.setStatus('mandatory')
win32PrinterConfigurationXResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 28), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationXResolution.setStatus('mandatory')
win32PrinterConfigurationYResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 540, 1, 29), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32PrinterConfigurationYResolution.setStatus('mandatory')
win32ProgramGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 550), )
if mibBuilder.loadTexts: win32ProgramGroupTable.setStatus('mandatory')
win32ProgramGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 550, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32ProgramGroupKeyIndex"))
if mibBuilder.loadTexts: win32ProgramGroupEntry.setStatus('mandatory')
win32ProgramGroupKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 550, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProgramGroupKeyIndex.setStatus('mandatory')
win32ProgramGroupGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 550, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProgramGroupGroupName.setStatus('mandatory')
win32ProgramGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 550, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProgramGroupName.setStatus('mandatory')
win32ProgramGroupUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 550, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32ProgramGroupUserName.setStatus('mandatory')
win32SerialPortConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560), )
if mibBuilder.loadTexts: win32SerialPortConfigurationTable.setStatus('mandatory')
win32SerialPortConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32SerialPortConfigurationKeyIndex"))
if mibBuilder.loadTexts: win32SerialPortConfigurationEntry.setStatus('mandatory')
win32SerialPortConfigurationKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationKeyIndex.setStatus('mandatory')
win32SerialPortConfigurationAbortReadWriteOnError = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 2), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationAbortReadWriteOnError.setStatus('mandatory')
win32SerialPortConfigurationBaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 3), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationBaudRate.setStatus('mandatory')
win32SerialPortConfigurationBinaryModeEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 4), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationBinaryModeEnabled.setStatus('mandatory')
win32SerialPortConfigurationBitsPerByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 5), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationBitsPerByte.setStatus('mandatory')
win32SerialPortConfigurationContinueXMitOnXOff = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 6), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationContinueXMitOnXOff.setStatus('mandatory')
win32SerialPortConfigurationCTSOutflowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 7), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationCTSOutflowControl.setStatus('mandatory')
win32SerialPortConfigurationDiscardNULLBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 8), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationDiscardNULLBytes.setStatus('mandatory')
win32SerialPortConfigurationDSROutflowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 9), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationDSROutflowControl.setStatus('mandatory')
win32SerialPortConfigurationDSRSensitivity = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 10), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationDSRSensitivity.setStatus('mandatory')
win32SerialPortConfigurationDTRFlowControlType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 11), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationDTRFlowControlType.setStatus('mandatory')
win32SerialPortConfigurationEOFCharacter = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 12), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationEOFCharacter.setStatus('mandatory')
win32SerialPortConfigurationErrorReplaceCharacter = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 13), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationErrorReplaceCharacter.setStatus('mandatory')
win32SerialPortConfigurationErrorReplacementEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 14), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationErrorReplacementEnabled.setStatus('mandatory')
win32SerialPortConfigurationEventCharacter = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 15), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationEventCharacter.setStatus('mandatory')
win32SerialPortConfigurationIsBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 16), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationIsBusy.setStatus('mandatory')
win32SerialPortConfigurationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 17), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationName.setStatus('mandatory')
win32SerialPortConfigurationParity = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 18), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationParity.setStatus('mandatory')
win32SerialPortConfigurationParityCheckEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 19), Boolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationParityCheckEnabled.setStatus('mandatory')
win32SerialPortConfigurationRTSFlowControlType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 20), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationRTSFlowControlType.setStatus('mandatory')
win32SerialPortConfigurationStopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 21), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationStopBits.setStatus('mandatory')
win32SerialPortConfigurationXOffCharacter = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 22), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationXOffCharacter.setStatus('mandatory')
win32SerialPortConfigurationXOffXMitThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 23), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationXOffXMitThreshold.setStatus('mandatory')
win32SerialPortConfigurationXOnCharacter = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 24), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationXOnCharacter.setStatus('mandatory')
win32SerialPortConfigurationXOnXMitThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 25), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationXOnXMitThreshold.setStatus('mandatory')
win32SerialPortConfigurationXOnXOffInFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 26), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationXOnXOffInFlowControl.setStatus('mandatory')
win32SerialPortConfigurationXOnXOffOutFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 560, 1, 27), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32SerialPortConfigurationXOnXOffOutFlowControl.setStatus('mandatory')
win32TimeZoneTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570), )
if mibBuilder.loadTexts: win32TimeZoneTable.setStatus('mandatory')
win32TimeZoneEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32TimeZoneKeyIndex"))
if mibBuilder.loadTexts: win32TimeZoneEntry.setStatus('mandatory')
win32TimeZoneKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneKeyIndex.setStatus('mandatory')
win32TimeZoneBias = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 2), Sint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneBias.setStatus('mandatory')
win32TimeZoneDaylightBias = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 3), Sint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneDaylightBias.setStatus('mandatory')
win32TimeZoneDaylightDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 4), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneDaylightDay.setStatus('mandatory')
win32TimeZoneDaylightDayOfWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 5), Uint8()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneDaylightDayOfWeek.setStatus('mandatory')
win32TimeZoneDaylightHour = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 6), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneDaylightHour.setStatus('mandatory')
win32TimeZoneDaylightMillisecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 7), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneDaylightMillisecond.setStatus('mandatory')
win32TimeZoneDaylightMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 8), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneDaylightMinute.setStatus('mandatory')
win32TimeZoneDaylightMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 9), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneDaylightMonth.setStatus('mandatory')
win32TimeZoneDaylightName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 10), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneDaylightName.setStatus('mandatory')
win32TimeZoneDaylightSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 11), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneDaylightSecond.setStatus('mandatory')
win32TimeZoneDaylightYear = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 12), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneDaylightYear.setStatus('mandatory')
win32TimeZoneStandardBias = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 13), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneStandardBias.setStatus('mandatory')
win32TimeZoneStandardDay = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 14), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneStandardDay.setStatus('mandatory')
win32TimeZoneStandardDayOfWeek = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 15), Uint8()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneStandardDayOfWeek.setStatus('mandatory')
win32TimeZoneStandardHour = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 16), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneStandardHour.setStatus('mandatory')
win32TimeZoneStandardMillisecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 17), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneStandardMillisecond.setStatus('mandatory')
win32TimeZoneStandardMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 18), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneStandardMinute.setStatus('mandatory')
win32TimeZoneStandardMonth = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 19), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneStandardMonth.setStatus('mandatory')
win32TimeZoneStandardName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 20), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneStandardName.setStatus('mandatory')
win32TimeZoneStandardSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 21), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneStandardSecond.setStatus('mandatory')
win32TimeZoneStandardYear = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 570, 1, 22), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32TimeZoneStandardYear.setStatus('mandatory')
win32VideoConfigurationTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580), )
if mibBuilder.loadTexts: win32VideoConfigurationTable.setStatus('mandatory')
win32VideoConfigurationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32VideoConfigurationKeyIndex"))
if mibBuilder.loadTexts: win32VideoConfigurationEntry.setStatus('mandatory')
win32VideoConfigurationKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationKeyIndex.setStatus('mandatory')
win32VideoConfigurationActualColorResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 2), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationActualColorResolution.setStatus('mandatory')
win32VideoConfigurationAdapterChipType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationAdapterChipType.setStatus('mandatory')
win32VideoConfigurationAdapterCompatibility = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationAdapterCompatibility.setStatus('mandatory')
win32VideoConfigurationAdapterDACType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationAdapterDACType.setStatus('mandatory')
win32VideoConfigurationAdapterDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationAdapterDescription.setStatus('mandatory')
win32VideoConfigurationAdapterRAM = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 7), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationAdapterRAM.setStatus('mandatory')
win32VideoConfigurationAdapterType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 8), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationAdapterType.setStatus('mandatory')
win32VideoConfigurationBitsPerPixel = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 9), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationBitsPerPixel.setStatus('mandatory')
win32VideoConfigurationColorPlanes = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 10), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationColorPlanes.setStatus('mandatory')
win32VideoConfigurationColorTableEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 11), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationColorTableEntries.setStatus('mandatory')
win32VideoConfigurationDeviceSpecificPens = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 12), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationDeviceSpecificPens.setStatus('mandatory')
win32VideoConfigurationDriverDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 13), Datetime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationDriverDate.setStatus('mandatory')
win32VideoConfigurationHorizontalResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 14), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationHorizontalResolution.setStatus('mandatory')
win32VideoConfigurationInfFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 15), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationInfFilename.setStatus('mandatory')
win32VideoConfigurationInfSection = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 16), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationInfSection.setStatus('mandatory')
win32VideoConfigurationInstalledDisplayDrivers = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 17), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationInstalledDisplayDrivers.setStatus('mandatory')
win32VideoConfigurationMonitorManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 18), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationMonitorManufacturer.setStatus('mandatory')
win32VideoConfigurationMonitorType = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 19), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationMonitorType.setStatus('mandatory')
win32VideoConfigurationName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 20), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationName.setStatus('mandatory')
win32VideoConfigurationPixelsPerXLogicalInch = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 21), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationPixelsPerXLogicalInch.setStatus('mandatory')
win32VideoConfigurationPixelsPerYLogicalInch = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 22), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationPixelsPerYLogicalInch.setStatus('mandatory')
win32VideoConfigurationRefreshRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 23), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationRefreshRate.setStatus('mandatory')
win32VideoConfigurationScanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 24), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationScanMode.setStatus('mandatory')
win32VideoConfigurationScreenHeight = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 25), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationScreenHeight.setStatus('mandatory')
win32VideoConfigurationScreenWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 26), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationScreenWidth.setStatus('mandatory')
win32VideoConfigurationSystemPaletteEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 27), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationSystemPaletteEntries.setStatus('mandatory')
win32VideoConfigurationVerticalResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 580, 1, 28), Uint32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32VideoConfigurationVerticalResolution.setStatus('mandatory')
win32LogicalDiskToPartitionTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 590), )
if mibBuilder.loadTexts: win32LogicalDiskToPartitionTable.setStatus('mandatory')
win32LogicalDiskToPartitionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 590, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32LogicalDiskToPartitionKeyIndex"))
if mibBuilder.loadTexts: win32LogicalDiskToPartitionEntry.setStatus('mandatory')
win32LogicalDiskToPartitionKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 590, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalDiskToPartitionKeyIndex.setStatus('mandatory')
win32LogicalDiskToPartitionAntecedent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 590, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalDiskToPartitionAntecedent.setStatus('mandatory')
win32LogicalDiskToPartitionDependent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 590, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32LogicalDiskToPartitionDependent.setStatus('mandatory')
win32DiskDriveToDiskPartitionTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 600), )
if mibBuilder.loadTexts: win32DiskDriveToDiskPartitionTable.setStatus('mandatory')
win32DiskDriveToDiskPartitionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 600, 1), ).setIndexNames((0, "CIMWIN32-MIB", "win32DiskDriveToDiskPartitionKeyIndex"))
if mibBuilder.loadTexts: win32DiskDriveToDiskPartitionEntry.setStatus('mandatory')
win32DiskDriveToDiskPartitionKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 600, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveToDiskPartitionKeyIndex.setStatus('mandatory')
win32DiskDriveToDiskPartitionAntecedent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 600, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveToDiskPartitionAntecedent.setStatus('mandatory')
win32DiskDriveToDiskPartitionDependent = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 600, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: win32DiskDriveToDiskPartitionDependent.setStatus('mandatory')
cimBIOSElementTable = MibTable((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 610), )
if mibBuilder.loadTexts: cimBIOSElementTable.setStatus('mandatory')
cimBIOSElementEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 610, 1), ).setIndexNames((0, "CIMWIN32-MIB", "cimBIOSElementKeyIndex"))
if mibBuilder.loadTexts: cimBIOSElementEntry.setStatus('mandatory')
cimBIOSElementKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 610, 1, 1), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cimBIOSElementKeyIndex.setStatus('mandatory')
cimBIOSElementName = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 610, 1, 2), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cimBIOSElementName.setStatus('mandatory')
cimBIOSElementManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 610, 1, 3), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cimBIOSElementManufacturer.setStatus('mandatory')
cimBIOSElementDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 610, 1, 4), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cimBIOSElementDescription.setStatus('mandatory')
cimBIOSElementVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 610, 1, 5), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cimBIOSElementVersion.setStatus('mandatory')
cimBIOSElementBuildNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 610, 1, 6), String()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cimBIOSElementBuildNumber.setStatus('mandatory')
cimBIOSElementReleaseDate = MibTableColumn((1, 3, 6, 1, 4, 1, 2, 6, 159, 1, 2, 10, 610, 1, 7), Datetime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cimBIOSElementReleaseDate.setStatus('mandatory')
mibBuilder.exportSymbols("CIMWIN32-MIB", win32NetworkConnectionEntry=win32NetworkConnectionEntry, win32POTSModemSpeakerVolumeMed=win32POTSModemSpeakerVolumeMed, win32POTSModemCompressionOn=win32POTSModemCompressionOn, win32OSRecoveryConfigurationDebugFilePath=win32OSRecoveryConfigurationDebugFilePath, win32ProcessStartupYSize=win32ProcessStartupYSize, win32DisplayControllerConfigurationTable=win32DisplayControllerConfigurationTable, win32NetworkConnectionResourceType=win32NetworkConnectionResourceType, win32ThreadStatus=win32ThreadStatus, win32MotherboardDeviceTable=win32MotherboardDeviceTable, win32TimeZoneDaylightBias=win32TimeZoneDaylightBias, win32MotherboardDeviceEntry=win32MotherboardDeviceEntry, win32ThreadHandle=win32ThreadHandle, win32BatteryExpectedBatteryLife=win32BatteryExpectedBatteryLife, win32PrinterPrinterPaperNames=win32PrinterPrinterPaperNames, win32OperatingSystemPlusProductID=win32OperatingSystemPlusProductID, win32SerialPortBinary=win32SerialPortBinary, win32DriverVXDVersion=win32DriverVXDVersion, win32PrinterSeparatorFile=win32PrinterSeparatorFile, win32ProcessExecutablePath=win32ProcessExecutablePath, win32SerialPortConfigurationKeyIndex=win32SerialPortConfigurationKeyIndex, win32NetworkLoginProfileEntry=win32NetworkLoginProfileEntry, win32TimeZoneKeyIndex=win32TimeZoneKeyIndex, win32PointingDeviceInfSection=win32PointingDeviceInfSection, win32PointingDeviceDoubleSpeedThreshold=win32PointingDeviceDoubleSpeedThreshold, win32ComputerSystemSystemStartupDelay=win32ComputerSystemSystemStartupDelay, win32DeviceMemoryAddressStatus=win32DeviceMemoryAddressStatus, win32SerialPortConfigurationRTSFlowControlType=win32SerialPortConfigurationRTSFlowControlType, win32ProcessQuotaPagedPoolUsage=win32ProcessQuotaPagedPoolUsage, win32CDROMDriveEntry=win32CDROMDriveEntry, win32ScheduledJobStatus=win32ScheduledJobStatus, win32VideoConfigurationColorPlanes=win32VideoConfigurationColorPlanes, win32POTSModemDefault=win32POTSModemDefault, win32TimeZoneDaylightMillisecond=win32TimeZoneDaylightMillisecond, win32SerialPortConfigurationBinaryModeEnabled=win32SerialPortConfigurationBinaryModeEnabled, win32UserAccountFullName=win32UserAccountFullName, win32CDROMDriveRevisionLevel=win32CDROMDriveRevisionLevel, win32CodecFileStatus=win32CodecFileStatus, win32NetworkConnectionRemotePath=win32NetworkConnectionRemotePath, win32DeviceMemoryAddressMemoryType=win32DeviceMemoryAddressMemoryType, win32OSRecoveryConfigurationWriteToSystemLog=win32OSRecoveryConfigurationWriteToSystemLog, win32PrinterConfigurationDeviceName=win32PrinterConfigurationDeviceName, win32CDROMDriveTable=win32CDROMDriveTable, win32SerialPortConfigurationEventCharacter=win32SerialPortConfigurationEventCharacter, win32SerialPortEntry=win32SerialPortEntry, win32OperatingSystemSystemDevice=win32OperatingSystemSystemDevice, win32ComputerSystemSystemStartupOptions=win32ComputerSystemSystemStartupOptions, win32NetworkProtocolMaximumMessageSize=win32NetworkProtocolMaximumMessageSize, win32PrintJobDriverName=win32PrintJobDriverName, win32BootConfigurationName=win32BootConfigurationName, win32LogicalMemoryConfigurationTable=win32LogicalMemoryConfigurationTable, win32OperatingSystemKeyIndex=win32OperatingSystemKeyIndex, win32LogicalMemoryConfigurationName=win32LogicalMemoryConfigurationName, win32LogicalDiskVolumeName=win32LogicalDiskVolumeName, win32DiskPartitionKeyIndex=win32DiskPartitionKeyIndex, win32ComputerSystemSystemStartupSetting=win32ComputerSystemSystemStartupSetting, win32POTSModemProperties=win32POTSModemProperties, win32NetworkAdapterServiceName=win32NetworkAdapterServiceName, win32NetworkProtocolPseudoStreamOriented=win32NetworkProtocolPseudoStreamOriented, win32NetworkAdapterStatus=win32NetworkAdapterStatus, win32PrintJobEntry=win32PrintJobEntry, win32UninterruptiblePowerSupplyPowerFailSignal=win32UninterruptiblePowerSupplyPowerFailSignal, win32BIOSReleaseDate=win32BIOSReleaseDate, win32ThreadEntry=win32ThreadEntry, win32OperatingSystemSystemDirectory=win32OperatingSystemSystemDirectory, win32CodecFileDescription=win32CodecFileDescription, win32DMAChannelStatus=win32DMAChannelStatus, win32OperatingSystemCountryCode=win32OperatingSystemCountryCode, win32OSRecoveryConfigurationTable=win32OSRecoveryConfigurationTable, win32PrinterConfigurationPaperSize=win32PrinterConfigurationPaperSize, win32SerialPortConfigurationEntry=win32SerialPortConfigurationEntry, win32DisplayConfigurationPelsWidth=win32DisplayConfigurationPelsWidth, win32ComputerSystemCurrentTimeZone=win32ComputerSystemCurrentTimeZone, win32ScheduledJobDaysOfMonth=win32ScheduledJobDaysOfMonth, win32SystemAccountKeyIndex=win32SystemAccountKeyIndex, win32OperatingSystemBuildNumber=win32OperatingSystemBuildNumber, win32ProcessStartupWinstationDesktop=win32ProcessStartupWinstationDesktop, win32TimeZoneDaylightName=win32TimeZoneDaylightName, win32DiskDriveModel=win32DiskDriveModel, win32DisplayConfigurationICMIntent=win32DisplayConfigurationICMIntent, win32DisplayControllerConfigurationVerticalResolution=win32DisplayControllerConfigurationVerticalResolution, win32RegistryName=win32RegistryName, win32VideoConfigurationAdapterRAM=win32VideoConfigurationAdapterRAM, win32PrinterConfigurationTTOption=win32PrinterConfigurationTTOption, win32TimeZoneStandardMinute=win32TimeZoneStandardMinute, win32DriverVXDStatus=win32DriverVXDStatus, win32TimeZoneTable=win32TimeZoneTable, win32LogicalDiskProviderName=win32LogicalDiskProviderName, win32NetworkLoginProfilePrimaryGroupId=win32NetworkLoginProfilePrimaryGroupId, win32NetworkProtocolStatus=win32NetworkProtocolStatus, win32DisplayControllerConfigurationEntry=win32DisplayControllerConfigurationEntry, win32TapeDriveFeaturesHigh=win32TapeDriveFeaturesHigh, win32POTSModemPulse=win32POTSModemPulse, win32PrintJobHostPrintQueue=win32PrintJobHostPrintQueue, win32PointingDeviceKeyIndex=win32PointingDeviceKeyIndex, win32NetworkLoginProfileHomeDirectory=win32NetworkLoginProfileHomeDirectory, win32PrinterConfigurationPrintQuality=win32PrinterConfigurationPrintQuality, win32VideoConfigurationAdapterChipType=win32VideoConfigurationAdapterChipType, win32NetworkAdapterIndex=win32NetworkAdapterIndex, win32ComputerSystemInfraredSupported=win32ComputerSystemInfraredSupported, win32BIOSStatus=win32BIOSStatus, win32DesktopCoolSwitch=win32DesktopCoolSwitch, win32SharePath=win32SharePath, win32SCSIControllerDriverName=win32SCSIControllerDriverName, win32LogicalDiskSupportsFileBasedCompression=win32LogicalDiskSupportsFileBasedCompression, win32SCSIControllerEntry=win32SCSIControllerEntry, win32DiskDriveSCSILogicalUnit=win32DiskDriveSCSILogicalUnit, win32LogicalMemoryConfigurationTotalVirtualMemory=win32LogicalMemoryConfigurationTotalVirtualMemory, win32NetworkLoginProfilePasswordAge=win32NetworkLoginProfilePasswordAge, win32OperatingSystemDescription=win32OperatingSystemDescription, win32VideoConfigurationColorTableEntries=win32VideoConfigurationColorTableEntries, win32DesktopCursorBlinkRate=win32DesktopCursorBlinkRate, win32SerialPortConfigurationEOFCharacter=win32SerialPortConfigurationEOFCharacter, win32PrinterConfigurationICMMethod=win32PrinterConfigurationICMMethod, win32POTSModemErrorControlForced=win32POTSModemErrorControlForced, win32DiskPartitionSize=win32DiskPartitionSize, win32DisplayConfigurationTable=win32DisplayConfigurationTable, win32DisplayControllerConfigurationName=win32DisplayControllerConfigurationName, win32CDROMDriveSCSITargetId=win32CDROMDriveSCSITargetId, win32ProcessMaximumWorkingSetSize=win32ProcessMaximumWorkingSetSize, win32NetworkProtocolSupportsConnectData=win32NetworkProtocolSupportsConnectData, win32ProcessQuotaPeakPagedPoolUsage=win32ProcessQuotaPeakPagedPoolUsage, win32POTSModemResponsesKeyName=win32POTSModemResponsesKeyName, win32LoadOrderGroupStatus=win32LoadOrderGroupStatus, win32SerialPortSupportsXOnXOffSet=win32SerialPortSupportsXOnXOffSet, win32DisplayControllerConfigurationHorizontalResolution=win32DisplayControllerConfigurationHorizontalResolution, win32OperatingSystemCodeSet=win32OperatingSystemCodeSet, win32SerialPortMaximumOutputBufferSize=win32SerialPortMaximumOutputBufferSize, win32PrintJobKeyIndex=win32PrintJobKeyIndex, win32DesktopName=win32DesktopName, win32GroupKeyIndex=win32GroupKeyIndex, win32LoadOrderGroupGroupOrder=win32LoadOrderGroupGroupOrder, win32NetworkLoginProfileUserComment=win32NetworkLoginProfileUserComment, win32SystemAccountDomain=win32SystemAccountDomain, win32PrintJobJobId=win32PrintJobJobId, win32TimeZoneStandardDay=win32TimeZoneStandardDay, win32LoadOrderGroupEntry=win32LoadOrderGroupEntry, win32CDROMDriveVolumeSerialNumber=win32CDROMDriveVolumeSerialNumber, win32NetworkProtocolMaximumAddressSize=win32NetworkProtocolMaximumAddressSize, win32LogicalMemoryConfigurationTotalPageFileSpace=win32LogicalMemoryConfigurationTotalPageFileSpace, win32ProcessQuotaNonPagedPoolUsage=win32ProcessQuotaNonPagedPoolUsage, win32UserAccountPasswordRequired=win32UserAccountPasswordRequired, win32OperatingSystemEntry=win32OperatingSystemEntry, win32PrintJobDataType=win32PrintJobDataType, win32PrintJobStatus=win32PrintJobStatus, win32NetworkLoginProfileBadPasswordCount=win32NetworkLoginProfileBadPasswordCount, win32PointingDeviceEntry=win32PointingDeviceEntry, win32TimeZoneStandardYear=win32TimeZoneStandardYear, win32ScheduledJobJobStatus=win32ScheduledJobJobStatus, win32RegistryTable=win32RegistryTable, win32DMAChannelTable=win32DMAChannelTable, win32ThreadThreadWaitReason=win32ThreadThreadWaitReason, win32DesktopWallpaper=win32DesktopWallpaper, win32TimeZoneDaylightDayOfWeek=win32TimeZoneDaylightDayOfWeek, win32DiskDriveStatus=win32DiskDriveStatus, win32NetworkAdapterKeyIndex=win32NetworkAdapterKeyIndex, win32SerialPortSupportsIntTimeouts=win32SerialPortSupportsIntTimeouts, win32LoadOrderGroupDriverEnabled=win32LoadOrderGroupDriverEnabled, win32ProgramGroupName=win32ProgramGroupName, win32DiskDriveKeyIndex=win32DiskDriveKeyIndex, win32DiskDriveManufacturer=win32DiskDriveManufacturer, win32PointingDeviceTable=win32PointingDeviceTable, win32DiskPartitionDiskIndex=win32DiskPartitionDiskIndex, win32PageFileFreeSpace=win32PageFileFreeSpace, win32UserAccountTable=win32UserAccountTable, win32EnvironmentEntry=win32EnvironmentEntry, win32LogicalMemoryConfigurationAvailableVirtualMemory=win32LogicalMemoryConfigurationAvailableVirtualMemory, win32SerialPortConfigurationXOffCharacter=win32SerialPortConfigurationXOffCharacter, win32PrinterConfigurationScale=win32PrinterConfigurationScale, win32ProcessTable=win32ProcessTable, win32OperatingSystemPrimary=win32OperatingSystemPrimary, win32PointingDeviceQuadSpeedThreshold=win32PointingDeviceQuadSpeedThreshold, win32NetworkProtocolSupportsBroadcasting=win32NetworkProtocolSupportsBroadcasting, win32NetworkAdapterProductName=win32NetworkAdapterProductName, win32ComputerSystemOEMLogoBitmap=win32ComputerSystemOEMLogoBitmap, win32NetworkLoginProfileProfile=win32NetworkLoginProfileProfile, win32DiskPartitionStatus=win32DiskPartitionStatus, win32AccountSID=win32AccountSID, win32NetworkConnectionProviderName=win32NetworkConnectionProviderName, win32NetworkClientTable=win32NetworkClientTable, win32ProcessStartupXCountChars=win32ProcessStartupXCountChars, win32SerialPortSupportsRLSD=win32SerialPortSupportsRLSD, win32NetworkAdapterTimeOfLastReset=win32NetworkAdapterTimeOfLastReset, win32ShareMaximumAllowed=win32ShareMaximumAllowed, win32POTSModemStringFormat=win32POTSModemStringFormat, win32PrinterConfigurationPelsWidth=win32PrinterConfigurationPelsWidth, win32CDROMDriveMediaType=win32CDROMDriveMediaType, win32UserAccountEntry=win32UserAccountEntry, win32CDROMDriveManufacturer=win32CDROMDriveManufacturer, win32NetworkConnectionName=win32NetworkConnectionName, win32ProcessPageFaults=win32ProcessPageFaults, win32TimeZoneDaylightYear=win32TimeZoneDaylightYear, win32GroupTable=win32GroupTable, win32SerialPortConfigurationBaudRate=win32SerialPortConfigurationBaudRate, win32PortResourceEntry=win32PortResourceEntry, win32DisplayControllerConfigurationKeyIndex=win32DisplayControllerConfigurationKeyIndex, win32PrinterConfigurationOrientation=win32PrinterConfigurationOrientation, win32SerialPortConfigurationIsBusy=win32SerialPortConfigurationIsBusy, win32VideoConfigurationPixelsPerYLogicalInch=win32VideoConfigurationPixelsPerYLogicalInch, win32DiskPartitionEntry=win32DiskPartitionEntry, win32PrinterDefaultPriority=win32PrinterDefaultPriority, win32POTSModemFlowControlSoft=win32POTSModemFlowControlSoft, win32DesktopScreenSaverTimeout=win32DesktopScreenSaverTimeout, win32PrintJobTotalPages=win32PrintJobTotalPages, win32SerialPortSettableDataBits=win32SerialPortSettableDataBits, win32ProgramGroupUserName=win32ProgramGroupUserName, win32OperatingSystemStatus=win32OperatingSystemStatus, win32ProgramGroupGroupName=win32ProgramGroupGroupName, win32DesktopIconSpacing=win32DesktopIconSpacing, win32DiskDriveSectorsPerTrack=win32DiskDriveSectorsPerTrack, win32SCSIControllerHardwareVersion=win32SCSIControllerHardwareVersion, win32PrinterConfigurationMediaType=win32PrinterConfigurationMediaType, win32VideoConfigurationAdapterDescription=win32VideoConfigurationAdapterDescription, win32NetworkConnectionComment=win32NetworkConnectionComment, win32POTSModemDeviceType=win32POTSModemDeviceType, win32DiskPartitionTable=win32DiskPartitionTable, win32DiskDriveMediaType=win32DiskDriveMediaType, win32CDROMDriveMaximumComponentLength=win32CDROMDriveMaximumComponentLength, win32NetworkProtocolSupportsExpiditeData=win32NetworkProtocolSupportsExpiditeData, win32PrinterConfigurationKeyIndex=win32PrinterConfigurationKeyIndex, win32PrinterConfigurationLogPixels=win32PrinterConfigurationLogPixels, win32DiskDriveSCSITargetId=win32DiskDriveSCSITargetId, win32PointingDeviceStatus=win32PointingDeviceStatus, win32SerialPortConfigurationParity=win32SerialPortConfigurationParity, win32TimeZoneStandardDayOfWeek=win32TimeZoneStandardDayOfWeek, win32BootConfigurationConfigurationPath=win32BootConfigurationConfigurationPath, win32DiskDriveTotalHeads=win32DiskDriveTotalHeads, win32NetworkProtocolEntry=win32NetworkProtocolEntry, win32POTSModemDriverDate=win32POTSModemDriverDate, win32PrinterAttributes=win32PrinterAttributes, win32NetworkLoginProfileLastLogon=win32NetworkLoginProfileLastLogon, win32DiskPartitionBootPartition=win32DiskPartitionBootPartition, win32EnvironmentVariableValue=win32EnvironmentVariableValue, win32AccountSIDType=win32AccountSIDType, win32IRQResourceKeyIndex=win32IRQResourceKeyIndex, win32NetworkClientManufacturer=win32NetworkClientManufacturer, win32TapeDriveEntry=win32TapeDriveEntry, win32BootConfigurationTable=win32BootConfigurationTable, win32BIOSKeyIndex=win32BIOSKeyIndex, win32POTSModemFlowControlOff=win32POTSModemFlowControlOff, win32DiskDriveSCSIBus=win32DiskDriveSCSIBus, win32DiskDrivePartitions=win32DiskDrivePartitions, win32IRQResourceTable=win32IRQResourceTable, win32SerialPortConfigurationXOnCharacter=win32SerialPortConfigurationXOnCharacter, win32EnvironmentName=win32EnvironmentName, win32POTSModemIndex=win32POTSModemIndex, win32PrinterStartTime=win32PrinterStartTime, win32UninterruptiblePowerSupplyStatus=win32UninterruptiblePowerSupplyStatus, win32ProcessStartupShowWindow=win32ProcessStartupShowWindow, win32ComputerSystemSystemType=win32ComputerSystemSystemType, win32AccountDomain=win32AccountDomain, win32OperatingSystemTable=win32OperatingSystemTable, win32SerialPortConfigurationParityCheckEnabled=win32SerialPortConfigurationParityCheckEnabled, win32NetworkProtocolSupportsEncryption=win32NetworkProtocolSupportsEncryption, win32ShareKeyIndex=win32ShareKeyIndex)
mibBuilder.exportSymbols("CIMWIN32-MIB", win32DeviceMemoryAddressTable=win32DeviceMemoryAddressTable, win32DesktopDragFullWindows=win32DesktopDragFullWindows, win32NetworkLoginProfileScriptPath=win32NetworkLoginProfileScriptPath, win32ThreadStartAddress=win32ThreadStartAddress, win32BootConfigurationEntry=win32BootConfigurationEntry, win32CDROMDriveDrive=win32CDROMDriveDrive, win32ComputerSystemBootupState=win32ComputerSystemBootupState, win32MotherboardDeviceRevisionNumber=win32MotherboardDeviceRevisionNumber, win32VideoConfigurationActualColorResolution=win32VideoConfigurationActualColorResolution, win32LoadOrderGroupName=win32LoadOrderGroupName, win32NetworkProtocolName=win32NetworkProtocolName, win32ProcessStartupCreateFlags=win32ProcessStartupCreateFlags, win32POTSModemCompatibilityFlags=win32POTSModemCompatibilityFlags, win32NetworkAdapterTable=win32NetworkAdapterTable, win32NetworkConnectionStatus=win32NetworkConnectionStatus, win32DesktopIconTitleSize=win32DesktopIconTitleSize, win32SerialPortSettableRLSD=win32SerialPortSettableRLSD, win32UninterruptiblePowerSupplyUPSPort=win32UninterruptiblePowerSupplyUPSPort, win32ThreadThreadState=win32ThreadThreadState, win32VideoConfigurationInstalledDisplayDrivers=win32VideoConfigurationInstalledDisplayDrivers, win32TimeZoneDaylightDay=win32TimeZoneDaylightDay, win32ProcessStartupEntry=win32ProcessStartupEntry, win32LoadOrderGroupTable=win32LoadOrderGroupTable, win32VideoConfigurationScanMode=win32VideoConfigurationScanMode, win32BatteryEntry=win32BatteryEntry, win32MotherboardDevicePrimaryBusType=win32MotherboardDevicePrimaryBusType, win32OperatingSystemRegisteredUser=win32OperatingSystemRegisteredUser, win32DriverVXDControl=win32DriverVXDControl, win32VideoConfigurationDriverDate=win32VideoConfigurationDriverDate, win32RegistryEntry=win32RegistryEntry, win32PageFileInitialSize=win32PageFileInitialSize, win32OSRecoveryConfigurationWriteDebugInfo=win32OSRecoveryConfigurationWriteDebugInfo, win32PrintJobName=win32PrintJobName, win32POTSModemInactivityScale=win32POTSModemInactivityScale, cimBIOSElementManufacturer=cimBIOSElementManufacturer, win32SerialPortConfigurationErrorReplacementEnabled=win32SerialPortConfigurationErrorReplacementEnabled, win32POTSModemEntry=win32POTSModemEntry, win32OperatingSystemOrganization=win32OperatingSystemOrganization, win32DesktopPattern=win32DesktopPattern, win32LogicalMemoryConfigurationKeyIndex=win32LogicalMemoryConfigurationKeyIndex, win32SerialPortKeyIndex=win32SerialPortKeyIndex, win32VideoConfigurationKeyIndex=win32VideoConfigurationKeyIndex, win32OSRecoveryConfigurationAutoReboot=win32OSRecoveryConfigurationAutoReboot, win32BootConfigurationKeyIndex=win32BootConfigurationKeyIndex, win32SCSIControllerStatus=win32SCSIControllerStatus, win32VideoConfigurationScreenHeight=win32VideoConfigurationScreenHeight, win32DiskDriveIndex=win32DiskDriveIndex, win32PrinterConfigurationPaperLength=win32PrinterConfigurationPaperLength, win32VideoConfigurationDeviceSpecificPens=win32VideoConfigurationDeviceSpecificPens, win32DisplayControllerConfigurationReservedSystemPaletteEntries=win32DisplayControllerConfigurationReservedSystemPaletteEntries, win32PrinterConfigurationTable=win32PrinterConfigurationTable, win32DesktopGridGranularity=win32DesktopGridGranularity, win32PrinterConfigurationSpecificationVersion=win32PrinterConfigurationSpecificationVersion, win32DisplayControllerConfigurationRefreshRate=win32DisplayControllerConfigurationRefreshRate, win32IRQResourceVector=win32IRQResourceVector, win32DiskDriveTotalCylinders=win32DiskDriveTotalCylinders, win32VideoConfigurationBitsPerPixel=win32VideoConfigurationBitsPerPixel, win32ProcessPageFileUsage=win32ProcessPageFileUsage, win32DiskDriveSize=win32DiskDriveSize, win32SCSIControllerTable=win32SCSIControllerTable, win32SerialPortMaximumInputBufferSize=win32SerialPortMaximumInputBufferSize, win32ShareType=win32ShareType, win32POTSModemSpeakerModeOn=win32POTSModemSpeakerModeOn, win32SystemAccountName=win32SystemAccountName, win32ScheduledJobKeyIndex=win32ScheduledJobKeyIndex, win32PrinterShareName=win32PrinterShareName, win32DesktopScreenSaverActive=win32DesktopScreenSaverActive, win32POTSModemKeyIndex=win32POTSModemKeyIndex, win32ProgramGroupEntry=win32ProgramGroupEntry, win32SerialPortStatus=win32SerialPortStatus, win32DiskDriveMediaLoaded=win32DiskDriveMediaLoaded, cimBIOSElementBuildNumber=cimBIOSElementBuildNumber, win32OperatingSystemDebug=win32OperatingSystemDebug, win32SerialPortConfigurationXOffXMitThreshold=win32SerialPortConfigurationXOffXMitThreshold, win32PrinterConfigurationBitsPerPel=win32PrinterConfigurationBitsPerPel, win32DiskPartitionIndex=win32DiskPartitionIndex, win32BIOSTable=win32BIOSTable, win32NetworkClientKeyIndex=win32NetworkClientKeyIndex, win32DiskDriveToDiskPartitionKeyIndex=win32DiskDriveToDiskPartitionKeyIndex, win32ComputerSystemNetworkServerModeEnabled=win32ComputerSystemNetworkServerModeEnabled, win32PrinterPrintJobDataType=win32PrinterPrintJobDataType, win32POTSModemSpeakerVolumeLow=win32POTSModemSpeakerVolumeLow, win32ComputerSystemKeyIndex=win32ComputerSystemKeyIndex, win32ProcessStartupYCountChars=win32ProcessStartupYCountChars, win32LogicalMemoryConfigurationTotalPhysicalMemory=win32LogicalMemoryConfigurationTotalPhysicalMemory, win32NetworkLoginProfileTable=win32NetworkLoginProfileTable, win32SerialPortConfigurationErrorReplaceCharacter=win32SerialPortConfigurationErrorReplaceCharacter, win32OperatingSystemWindowsDirectory=win32OperatingSystemWindowsDirectory, win32NetworkLoginProfileLastLogoff=win32NetworkLoginProfileLastLogoff, win32DisplayConfigurationPelsHeight=win32DisplayConfigurationPelsHeight, win32ProcessorEntry=win32ProcessorEntry, win32PrinterConfigurationDisplayFrequency=win32PrinterConfigurationDisplayFrequency, win32VideoConfigurationVerticalResolution=win32VideoConfigurationVerticalResolution, win32DiskDriveTotalTracks=win32DiskDriveTotalTracks, win32DiskPartitionRewritePartition=win32DiskPartitionRewritePartition, win32ProcessStartupKeyIndex=win32ProcessStartupKeyIndex, win32UninterruptiblePowerSupplyBatteryInstalled=win32UninterruptiblePowerSupplyBatteryInstalled, win32AccountKeyIndex=win32AccountKeyIndex, win32POTSModemSpeakerVolumeHigh=win32POTSModemSpeakerVolumeHigh, win32CDROMDriveDriveIntegrity=win32CDROMDriveDriveIntegrity, win32NetworkConnectionUserName=win32NetworkConnectionUserName, win32VideoConfigurationMonitorType=win32VideoConfigurationMonitorType, win32PrinterConfigurationColor=win32PrinterConfigurationColor, win32NetworkLoginProfileUserType=win32NetworkLoginProfileUserType, win32SerialPortSupportsRTSCTS=win32SerialPortSupportsRTSCTS, win32DMAChannelKeyIndex=win32DMAChannelKeyIndex, win32PointingDeviceInfFileName=win32PointingDeviceInfFileName, win32PrinterConfigurationICMIntent=win32PrinterConfigurationICMIntent, win32ProgramGroupKeyIndex=win32ProgramGroupKeyIndex, win32BootConfigurationScratchDirectory=win32BootConfigurationScratchDirectory, win32PrinterConfigurationFormName=win32PrinterConfigurationFormName, win32PointingDeviceSampleRate=win32PointingDeviceSampleRate, win32DeviceMemoryAddressEntry=win32DeviceMemoryAddressEntry, win32NetworkLoginProfileAuthorizationFlags=win32NetworkLoginProfileAuthorizationFlags, win32PrinterDriverName=win32PrinterDriverName, win32TapeDriveMediaType=win32TapeDriveMediaType, win32UserAccountPasswordExpires=win32UserAccountPasswordExpires, win32NetworkProtocolGuranteesSequencing=win32NetworkProtocolGuranteesSequencing, win32DisplayControllerConfigurationDeviceSpecificPens=win32DisplayControllerConfigurationDeviceSpecificPens, win32OperatingSystemSerialNumber=win32OperatingSystemSerialNumber, win32TapeDriveECC=win32TapeDriveECC, win32BootConfigurationTempDirectory=win32BootConfigurationTempDirectory, win32MotherboardDeviceStatus=win32MotherboardDeviceStatus, win32ComputerSystemAutomaticResetBootOption=win32ComputerSystemAutomaticResetBootOption, win32DiskDriveToDiskPartitionTable=win32DiskDriveToDiskPartitionTable, win32TapeDriveFeaturesLow=win32TapeDriveFeaturesLow, win32NetworkProtocolTable=win32NetworkProtocolTable, win32PrinterConfigurationEntry=win32PrinterConfigurationEntry, win32TapeDriveKeyIndex=win32TapeDriveKeyIndex, win32TimeZoneEntry=win32TimeZoneEntry, win32PrintJobTable=win32PrintJobTable, win32PrinterPortName=win32PrinterPortName, win32DeviceMemoryAddressKeyIndex=win32DeviceMemoryAddressKeyIndex, win32LogicalDiskFileSystem=win32LogicalDiskFileSystem, win32OperatingSystemOSLanguage=win32OperatingSystemOSLanguage, win32ScheduledJobDaysOfWeek=win32ScheduledJobDaysOfWeek, win32VideoConfigurationTable=win32VideoConfigurationTable, win32VideoConfigurationScreenWidth=win32VideoConfigurationScreenWidth, win32LogicalDiskKeyIndex=win32LogicalDiskKeyIndex, win32ProcessQuotaPeakNonPagedPoolUsage=win32ProcessQuotaPeakNonPagedPoolUsage, win32NetworkAdapterMaxNumberControlled=win32NetworkAdapterMaxNumberControlled, win32POTSModemSpeakerModeDial=win32POTSModemSpeakerModeDial, win32DMAChannelPort=win32DMAChannelPort, win32NetworkClientName=win32NetworkClientName, win32ThreadElapsedTime=win32ThreadElapsedTime, win32SerialPortConfigurationBitsPerByte=win32SerialPortConfigurationBitsPerByte, win32LogicalDiskVolumeSerialNumber=win32LogicalDiskVolumeSerialNumber, win32ProgramGroupTable=win32ProgramGroupTable, cimBIOSElementName=cimBIOSElementName, win32ProcessKeyIndex=win32ProcessKeyIndex, win32DriverVXDTable=win32DriverVXDTable, win32BootConfigurationBootDirectory=win32BootConfigurationBootDirectory, win32SerialPortConfigurationDSROutflowControl=win32SerialPortConfigurationDSROutflowControl, win32SerialPortConfigurationDSRSensitivity=win32SerialPortConfigurationDSRSensitivity, win32CodecFileTable=win32CodecFileTable, win32TapeDriveTable=win32TapeDriveTable, win32DesktopBorderWidth=win32DesktopBorderWidth, win32SerialPortSettableFlowControl=win32SerialPortSettableFlowControl, win32UserAccountLockout=win32UserAccountLockout, win32UninterruptiblePowerSupplyKeyIndex=win32UninterruptiblePowerSupplyKeyIndex, win32OperatingSystemVersion=win32OperatingSystemVersion, win32POTSModemBlindOn=win32POTSModemBlindOn, win32POTSModemModel=win32POTSModemModel, win32LogicalDiskToPartitionDependent=win32LogicalDiskToPartitionDependent, win32POTSModemTerminator=win32POTSModemTerminator, win32ComputerSystemEntry=win32ComputerSystemEntry, win32CDROMDriveFileSystemFlags=win32CDROMDriveFileSystemFlags, win32PrinterConfigurationDisplayFlags=win32PrinterConfigurationDisplayFlags, win32NetworkAdapterInstalled=win32NetworkAdapterInstalled, win32NetworkLoginProfileUnitsPerWeek=win32NetworkLoginProfileUnitsPerWeek, win32DiskPartitionStartingOffset=win32DiskPartitionStartingOffset, win32NetworkAdapterManufacturer=win32NetworkAdapterManufacturer, win32ComputerSystemModel=win32ComputerSystemModel, win32BatteryBatteryStatus=win32BatteryBatteryStatus, win32ThreadProcessHandle=win32ThreadProcessHandle, win32RegistryKeyIndex=win32RegistryKeyIndex, win32SystemAccountStatus=win32SystemAccountStatus, win32NetworkLoginProfileCodePage=win32NetworkLoginProfileCodePage, win32TimeZoneBias=win32TimeZoneBias, win32ThreadKeyIndex=win32ThreadKeyIndex, win32ProcessStartupXSize=win32ProcessStartupXSize, win32ProcessStartupTitle=win32ProcessStartupTitle, win32ComputerSystemUserName=win32ComputerSystemUserName, win32SerialPortConfigurationAbortReadWriteOnError=win32SerialPortConfigurationAbortReadWriteOnError, win32DesktopScreenSaverSecure=win32DesktopScreenSaverSecure, win32ProcessStartupY=win32ProcessStartupY, win32PrinterTable=win32PrinterTable, win32DisplayConfigurationDisplayFrequency=win32DisplayConfigurationDisplayFrequency, win32NetworkLoginProfileWorkstations=win32NetworkLoginProfileWorkstations, win32SCSIControllerIndex=win32SCSIControllerIndex, win32NetworkProtocolSupportsMulticasting=win32NetworkProtocolSupportsMulticasting, win32DesktopEntry=win32DesktopEntry, win32ProcessPeakWorkingSetSize=win32ProcessPeakWorkingSetSize, win32SerialPortConfigurationDiscardNULLBytes=win32SerialPortConfigurationDiscardNULLBytes, win32NetworkAdapterMACAddress=win32NetworkAdapterMACAddress, win32NetworkProtocolMinimumAddressSize=win32NetworkProtocolMinimumAddressSize, win32POTSModemModemInfPath=win32POTSModemModemInfPath, win32BatteryKeyIndex=win32BatteryKeyIndex, win32VideoConfigurationPixelsPerXLogicalInch=win32VideoConfigurationPixelsPerXLogicalInch, win32DesktopKeyIndex=win32DesktopKeyIndex, win32DiskPartitionType=win32DiskPartitionType, win32SerialPortSupportsSpecialCharacters=win32SerialPortSupportsSpecialCharacters, win32NetworkProtocolSupportsGuaranteedBandwidth=win32NetworkProtocolSupportsGuaranteedBandwidth, win32TimeZoneStandardMonth=win32TimeZoneStandardMonth, win32DriverVXDServiceTableSize=win32DriverVXDServiceTableSize, win32ComputerSystemTable=win32ComputerSystemTable, win32POTSModemDeviceLoader=win32POTSModemDeviceLoader, win32NetworkConnectionTable=win32NetworkConnectionTable, win32LogicalDiskSize=win32LogicalDiskSize, win32DisplayConfigurationKeyIndex=win32DisplayConfigurationKeyIndex, win32BatteryBatteryRechargeTime=win32BatteryBatteryRechargeTime, win32ProcessStartupFillAttribute=win32ProcessStartupFillAttribute, win32TapeDriveCompression=win32TapeDriveCompression, win32NetworkConnectionPersistent=win32NetworkConnectionPersistent, win32NetworkLoginProfileKeyIndex=win32NetworkLoginProfileKeyIndex, win32OperatingSystemLocale=win32OperatingSystemLocale, win32SerialPortConfigurationXOnXOffInFlowControl=win32SerialPortConfigurationXOnXOffInFlowControl, win32VideoConfigurationAdapterType=win32VideoConfigurationAdapterType, win32SerialPortConfigurationContinueXMitOnXOff=win32SerialPortConfigurationContinueXMitOnXOff, win32TapeDriveReportSetMarks=win32TapeDriveReportSetMarks, win32NetworkLoginProfileFlags=win32NetworkLoginProfileFlags, win32ProcessorTable=win32ProcessorTable, win32CDROMDriveKeyIndex=win32CDROMDriveKeyIndex, win32NetworkProtocolConnectionlessService=win32NetworkProtocolConnectionlessService, win32DiskDriveToDiskPartitionDependent=win32DiskDriveToDiskPartitionDependent, win32OSRecoveryConfigurationSendAdminAlert=win32OSRecoveryConfigurationSendAdminAlert, win32ScheduledJobInteractWithDesktop=win32ScheduledJobInteractWithDesktop, win32ShareAllowMaximum=win32ShareAllowMaximum, win32LogicalDiskEntry=win32LogicalDiskEntry, win32DiskDriveInterfaceType=win32DiskDriveInterfaceType, win32UninterruptiblePowerSupplyTable=win32UninterruptiblePowerSupplyTable, win32DiskDriveToDiskPartitionEntry=win32DiskDriveToDiskPartitionEntry, win32NetworkProtocolMessageOriented=win32NetworkProtocolMessageOriented, win32POTSModemDCB=win32POTSModemDCB, win32DisplayConfigurationDriverVersion=win32DisplayConfigurationDriverVersion, win32DiskDriveToDiskPartitionAntecedent=win32DiskDriveToDiskPartitionAntecedent, win32ProcessStartupStatus=win32ProcessStartupStatus, win32PrinterConfigurationDriverVersion=win32PrinterConfigurationDriverVersion, win32SerialPortSettableBaudRate=win32SerialPortSettableBaudRate, win32PrinterLocation=win32PrinterLocation, win32PrinterPrintProcessor=win32PrinterPrintProcessor, win32SCSIControllerManufacturer=win32SCSIControllerManufacturer, win32ComputerSystemManufacturer=win32ComputerSystemManufacturer, win32PrinterUntilTime=win32PrinterUntilTime, cimBIOSElementReleaseDate=cimBIOSElementReleaseDate, win32ProcessStatus=win32ProcessStatus, win32TimeZoneStandardName=win32TimeZoneStandardName, win32CodecFileEntry=win32CodecFileEntry, win32DisplayControllerConfigurationDeviceEntriesInAColorTable=win32DisplayControllerConfigurationDeviceEntriesInAColorTable, cimBIOSElementEntry=cimBIOSElementEntry, win32UserAccountAccountType=win32UserAccountAccountType, win32DesktopWallpaperTiled=win32DesktopWallpaperTiled, win32OperatingSystemQuantumLength=win32OperatingSystemQuantumLength, win32SerialPortConfigurationName=win32SerialPortConfigurationName)
mibBuilder.exportSymbols("CIMWIN32-MIB", win32ThreadPriorityBase=win32ThreadPriorityBase, win32NetworkLoginProfileAccountExpires=win32NetworkLoginProfileAccountExpires, win32NetworkLoginProfileLogonServer=win32NetworkLoginProfileLogonServer, win32PrinterAveragePagesPerMinute=win32PrinterAveragePagesPerMinute, win32LogicalDiskToPartitionKeyIndex=win32LogicalDiskToPartitionKeyIndex, win32DisplayControllerConfigurationColorPlanes=win32DisplayControllerConfigurationColorPlanes, win32SerialPortSupportsXOnXOff=win32SerialPortSupportsXOnXOff, win32NetworkLoginProfileCountryCode=win32NetworkLoginProfileCountryCode, win32VideoConfigurationMonitorManufacturer=win32VideoConfigurationMonitorManufacturer, win32DriverVXDDeviceDescriptorBlock=win32DriverVXDDeviceDescriptorBlock, win32DisplayConfigurationLogPixels=win32DisplayConfigurationLogPixels, win32PointingDeviceSynch=win32PointingDeviceSynch, win32DisplayControllerConfigurationBitsPerPixel=win32DisplayControllerConfigurationBitsPerPixel, win32VideoConfigurationAdapterDACType=win32VideoConfigurationAdapterDACType, win32NetworkConnectionConnectionType=win32NetworkConnectionConnectionType, win32ProcessorArchitecture=win32ProcessorArchitecture, win32SerialPortSupportsParityCheck=win32SerialPortSupportsParityCheck, win32PageFileMaximumSize=win32PageFileMaximumSize, win32PortResourceStatus=win32PortResourceStatus, win32SerialPortConfigurationXOnXMitThreshold=win32SerialPortConfigurationXOnXMitThreshold, win32VideoConfigurationInfSection=win32VideoConfigurationInfSection, win32IRQResourceStatus=win32IRQResourceStatus, win32VideoConfigurationName=win32VideoConfigurationName, win32PageFileKeyIndex=win32PageFileKeyIndex, win32LogicalDiskFreeSpace=win32LogicalDiskFreeSpace, win32RegistryStatus=win32RegistryStatus, win32ThreadPriority=win32ThreadPriority, win32UserAccountStatus=win32UserAccountStatus, cimBIOSElementVersion=cimBIOSElementVersion, win32VideoConfigurationHorizontalResolution=win32VideoConfigurationHorizontalResolution, win32SerialPortProviderType=win32SerialPortProviderType, win32DisplayConfigurationBitsPerPel=win32DisplayConfigurationBitsPerPel, win32POTSModemErrorControlOn=win32POTSModemErrorControlOn, win32ProcessEntry=win32ProcessEntry, win32PrinterEntry=win32PrinterEntry, win32UninterruptiblePowerSupplyEntry=win32UninterruptiblePowerSupplyEntry, win32VideoConfigurationEntry=win32VideoConfigurationEntry, win32NetworkLoginProfileLogonHours=win32NetworkLoginProfileLogonHours, win32TimeZoneDaylightMonth=win32TimeZoneDaylightMonth, win32SerialPortConfigurationStopBits=win32SerialPortConfigurationStopBits, win32DiskDriveTable=win32DiskDriveTable, win32EnvironmentSystemVariable=win32EnvironmentSystemVariable, win32SerialPortConfigurationXOnXOffOutFlowControl=win32SerialPortConfigurationXOnXOffOutFlowControl, win32LogicalDiskStatus=win32LogicalDiskStatus, win32PrinterServerName=win32PrinterServerName, win32LogicalDiskTable=win32LogicalDiskTable, win32SerialPortTable=win32SerialPortTable, win32CDROMDriveStatus=win32CDROMDriveStatus, win32ScheduledJobStartTime=win32ScheduledJobStartTime, win32DesktopTable=win32DesktopTable, win32NetworkLoginProfileMaximumStorage=win32NetworkLoginProfileMaximumStorage, win32NetworkProtocolSupportsFragmentation=win32NetworkProtocolSupportsFragmentation, win32TimeZoneStandardMillisecond=win32TimeZoneStandardMillisecond, win32VideoConfigurationAdapterCompatibility=win32VideoConfigurationAdapterCompatibility, win32ScheduledJobRunRepeatedly=win32ScheduledJobRunRepeatedly, win32NetworkLoginProfileUserId=win32NetworkLoginProfileUserId, win32LogicalDiskMediaType=win32LogicalDiskMediaType, win32DesktopScreenSaverExecutable=win32DesktopScreenSaverExecutable, win32DriverVXDKeyIndex=win32DriverVXDKeyIndex, win32DiskDriveTotalSectors=win32DiskDriveTotalSectors, win32DisplayConfigurationDeviceName=win32DisplayConfigurationDeviceName, win32UninterruptiblePowerSupplyFirstMessageDelay=win32UninterruptiblePowerSupplyFirstMessageDelay, win32PrinterConfigurationCopies=win32PrinterConfigurationCopies, win32OperatingSystemPlusVersionNumber=win32OperatingSystemPlusVersionNumber, win32PortResourceTable=win32PortResourceTable, win32NetworkClientStatus=win32NetworkClientStatus, win32DiskDriveTracksPerCylinder=win32DiskDriveTracksPerCylinder, win32POTSModemModemInfSection=win32POTSModemModemInfSection, win32ProcessWindowsVersion=win32ProcessWindowsVersion, win32POTSModemPrefix=win32POTSModemPrefix, win32POTSModemModulationBell=win32POTSModemModulationBell, win32NetworkAdapterAdapterType=win32NetworkAdapterAdapterType, win32PointingDeviceHardwareType=win32PointingDeviceHardwareType, win32SerialPortSettableParity=win32SerialPortSettableParity, win32EnvironmentUserName=win32EnvironmentUserName, win32ScheduledJobEntry=win32ScheduledJobEntry, win32DiskDriveBytesPerSector=win32DiskDriveBytesPerSector, win32EnvironmentKeyIndex=win32EnvironmentKeyIndex, win32SCSIControllerDeviceMap=win32SCSIControllerDeviceMap, win32AccountTable=win32AccountTable, win32UserAccountDomain=win32UserAccountDomain, win32PrintJobParameters=win32PrintJobParameters, win32NetworkLoginProfileHomeDirectoryDrive=win32NetworkLoginProfileHomeDirectoryDrive, win32PrinterStatus=win32PrinterStatus, win32NetworkConnectionDisplayType=win32NetworkConnectionDisplayType, win32POTSModemProviderName=win32POTSModemProviderName, win32ComputerSystemStatus=win32ComputerSystemStatus, win32ProcessorKeyIndex=win32ProcessorKeyIndex, win32DisplayControllerConfigurationVideoMode=win32DisplayControllerConfigurationVideoMode, win32UserAccountKeyIndex=win32UserAccountKeyIndex, win32POTSModemPortSubClass=win32POTSModemPortSubClass, win32DiskPartitionHiddenSectors=win32DiskPartitionHiddenSectors, win32DMAChannelEntry=win32DMAChannelEntry, win32ShareStatus=win32ShareStatus, win32GroupName=win32GroupName, win32DisplayConfigurationEntry=win32DisplayConfigurationEntry, win32OperatingSystemForegroundApplicationBoost=win32OperatingSystemForegroundApplicationBoost, win32PrinterKeyIndex=win32PrinterKeyIndex, win32SerialPortConfigurationDTRFlowControlType=win32SerialPortConfigurationDTRFlowControlType, win32LoadOrderGroupKeyIndex=win32LoadOrderGroupKeyIndex, win32LogicalDiskToPartitionAntecedent=win32LogicalDiskToPartitionAntecedent, win32ComputerSystemBootROMSupported=win32ComputerSystemBootROMSupported, win32ComputerSystemSupportContactDescription=win32ComputerSystemSupportContactDescription, win32SCSIControllerKeyIndex=win32SCSIControllerKeyIndex, win32EnvironmentTable=win32EnvironmentTable, win32NetworkLoginProfileComment=win32NetworkLoginProfileComment, win32RegistryMaximumSize=win32RegistryMaximumSize, win32PrinterConfigurationPaperWidth=win32PrinterConfigurationPaperWidth, win32POTSModemModulationCCITT=win32POTSModemModulationCCITT, win32BIOSVersion=win32BIOSVersion, win32TimeZoneStandardBias=win32TimeZoneStandardBias, cimBIOSElementKeyIndex=cimBIOSElementKeyIndex, win32POTSModemConfigurationDialog=win32POTSModemConfigurationDialog, win32OperatingSystemBuildType=win32OperatingSystemBuildType, win32IRQResourceHardware=win32IRQResourceHardware, win32PrintJobDocument=win32PrintJobDocument, win32PrinterConfigurationYResolution=win32PrinterConfigurationYResolution, win32PrintJobPagesPrinted=win32PrintJobPagesPrinted, win32NetworkLoginProfileParameters=win32NetworkLoginProfileParameters, win32SerialPortSupportsElapsedTimeouts=win32SerialPortSupportsElapsedTimeouts, win32LogicalMemoryConfigurationEntry=win32LogicalMemoryConfigurationEntry, win32NetworkLoginProfileName=win32NetworkLoginProfileName, win32PrinterConfigurationPelsHeight=win32PrinterConfigurationPelsHeight, win32NetworkConnectionKeyIndex=win32NetworkConnectionKeyIndex, cimBIOSElementTable=cimBIOSElementTable, win32DesktopIconTitleWrap=win32DesktopIconTitleWrap, win32DisplayControllerConfigurationSystemPaletteEntries=win32DisplayControllerConfigurationSystemPaletteEntries, win32NetworkLoginProfileFullName=win32NetworkLoginProfileFullName, win32PrinterConfigurationName=win32PrinterConfigurationName, win32UserAccountName=win32UserAccountName, win32POTSModemCompressionOff=win32POTSModemCompressionOff, win32UninterruptiblePowerSupplyCanTurnOffRemotely=win32UninterruptiblePowerSupplyCanTurnOffRemotely, win32NetworkProtocolSupportsDisconnectData=win32NetworkProtocolSupportsDisconnectData, win32NetworkLoginProfilePrivileges=win32NetworkLoginProfilePrivileges, win32ThreadTable=win32ThreadTable, win32PrinterConfigurationDuplex=win32PrinterConfigurationDuplex, win32DiskDriveEntry=win32DiskDriveEntry, win32POTSModemBlindOff=win32POTSModemBlindOff, win32OperatingSystemManufacturer=win32OperatingSystemManufacturer, win32UninterruptiblePowerSupplyMessageInterval=win32UninterruptiblePowerSupplyMessageInterval, win32PortResourceAlias=win32PortResourceAlias, win32PageFileEntry=win32PageFileEntry, win32POTSModemAttachedTo=win32POTSModemAttachedTo, win32UserAccountPasswordChangeable=win32UserAccountPasswordChangeable, win32SystemAccountTable=win32SystemAccountTable, win32PortResourceKeyIndex=win32PortResourceKeyIndex, win32TimeZoneStandardHour=win32TimeZoneStandardHour, win32BatteryTable=win32BatteryTable, win32DesktopWallpaperStretched=win32DesktopWallpaperStretched, win32AccountEntry=win32AccountEntry, win32DisplayConfigurationICMMethod=win32DisplayConfigurationICMMethod, win32ComputerSystemAutomaticResetCapability=win32ComputerSystemAutomaticResetCapability, win32LogicalDiskDriveType=win32LogicalDiskDriveType, win32LogicalDiskMaximumComponentLength=win32LogicalDiskMaximumComponentLength, win32OperatingSystemQuantumType=win32OperatingSystemQuantumType, win32AccountStatus=win32AccountStatus, win32NetworkLoginProfilePasswordExpires=win32NetworkLoginProfilePasswordExpires, win32DiskDriveSCSIPort=win32DiskDriveSCSIPort, win32POTSModemTable=win32POTSModemTable, win32ProcessorStatus=win32ProcessorStatus, win32POTSModemSpeakerModeOff=win32POTSModemSpeakerModeOff, win32CodecFileKeyIndex=win32CodecFileKeyIndex, win32TimeZoneStandardSecond=win32TimeZoneStandardSecond, win32DriverVXDPMAPI=win32DriverVXDPMAPI, win32PrinterConfigurationDitherType=win32PrinterConfigurationDitherType, win32RegistryCurrentSize=win32RegistryCurrentSize, win32ProcessStartupPriorityClass=win32ProcessStartupPriorityClass, win32MotherboardDeviceKeyIndex=win32MotherboardDeviceKeyIndex, win32ProcessorVersion=win32ProcessorVersion, win32DisplayConfigurationSpecificationVersion=win32DisplayConfigurationSpecificationVersion, win32OSRecoveryConfigurationKeyIndex=win32OSRecoveryConfigurationKeyIndex, win32CodecFileGroup=win32CodecFileGroup, win32POTSModemVoiceSwitchFeature=win32POTSModemVoiceSwitchFeature, win32PrintJobSize=win32PrintJobSize, win32POTSModemErrorControlOff=win32POTSModemErrorControlOff, win32OperatingSystemCSDVersion=win32OperatingSystemCSDVersion, win32SerialPortSupportsDTRDSR=win32SerialPortSupportsDTRDSR, win32ScheduledJobJobId=win32ScheduledJobJobId, win32GroupStatus=win32GroupStatus, win32CDROMDriveVolumeName=win32CDROMDriveVolumeName, win32ProcessMinimumWorkingSetSize=win32ProcessMinimumWorkingSetSize, win32NetworkLoginProfileNumberOfLogons=win32NetworkLoginProfileNumberOfLogons, win32ProcessorLevel=win32ProcessorLevel, win32DriverVXDEntry=win32DriverVXDEntry, win32SerialPortConfigurationTable=win32SerialPortConfigurationTable, win32UninterruptiblePowerSupplyLowBatterySignal=win32UninterruptiblePowerSupplyLowBatterySignal, win32SerialPortSettableStopBits=win32SerialPortSettableStopBits, win32DesktopIconTitleFaceName=win32DesktopIconTitleFaceName, win32CDROMDriveId=win32CDROMDriveId, win32VideoConfigurationInfFilename=win32VideoConfigurationInfFilename, win32ProcessorManufacturer=win32ProcessorManufacturer, win32EnvironmentStatus=win32EnvironmentStatus, win32OperatingSystemBootDevice=win32OperatingSystemBootDevice, win32PageFileStatus=win32PageFileStatus, win32NetworkProtocolSupportsGracefulClosing=win32NetworkProtocolSupportsGracefulClosing, win32ProcessorL2CacheSize=win32ProcessorL2CacheSize, win32PageFileName=win32PageFileName, win32ComputerSystemDomain=win32ComputerSystemDomain, cimBIOSElementDescription=cimBIOSElementDescription, win32NetworkClientEntry=win32NetworkClientEntry, win32OSRecoveryConfigurationEntry=win32OSRecoveryConfigurationEntry, win32ProcessorL2CacheSpeed=win32ProcessorL2CacheSpeed, win32OSRecoveryConfigurationOverwriteExistingDebugFile=win32OSRecoveryConfigurationOverwriteExistingDebugFile, win32PageFileTable=win32PageFileTable, win32POTSModemTone=win32POTSModemTone, win32NetworkProtocolGuranteesDelivery=win32NetworkProtocolGuranteesDelivery, win32SerialPortSupports16BitMode=win32SerialPortSupports16BitMode, win32ProcessStartupErrorMode=win32ProcessStartupErrorMode, win32ProcessorRevision=win32ProcessorRevision, win32GroupDomain=win32GroupDomain, win32ProcessProcessId=win32ProcessProcessId, win32CDROMDriveTransferRate=win32CDROMDriveTransferRate, win32DriverVXDV86API=win32DriverVXDV86API, win32MotherboardDeviceSecondaryBusType=win32MotherboardDeviceSecondaryBusType, win32TimeZoneDaylightHour=win32TimeZoneDaylightHour, win32TapeDriveStatus=win32TapeDriveStatus, win32IRQResourceEntry=win32IRQResourceEntry, win32DisplayConfigurationDitherType=win32DisplayConfigurationDitherType, win32POTSModemStatus=win32POTSModemStatus, win32PrinterConfigurationXResolution=win32PrinterConfigurationXResolution, win32ScheduledJobCommand=win32ScheduledJobCommand, win32SerialPortConfigurationCTSOutflowControl=win32SerialPortConfigurationCTSOutflowControl, win32NetworkConnectionLocalName=win32NetworkConnectionLocalName, win32VideoConfigurationRefreshRate=win32VideoConfigurationRefreshRate, win32VideoConfigurationSystemPaletteEntries=win32VideoConfigurationSystemPaletteEntries, win32LogicalDiskToPartitionEntry=win32LogicalDiskToPartitionEntry, win32SerialPortSettableParityCheck=win32SerialPortSettableParityCheck, win32POTSModemReset=win32POTSModemReset, win32ProcessStartupX=win32ProcessStartupX, win32BIOSEntry=win32BIOSEntry, win32UninterruptiblePowerSupplyCommandFile=win32UninterruptiblePowerSupplyCommandFile, win32ScheduledJobTable=win32ScheduledJobTable, win32GroupEntry=win32GroupEntry, win32PrintJobPrintProcessor=win32PrintJobPrintProcessor, win32OSRecoveryConfigurationName=win32OSRecoveryConfigurationName, win32SystemAccountEntry=win32SystemAccountEntry, win32BootConfigurationLastDrive=win32BootConfigurationLastDrive, win32DisplayConfigurationDisplayFlags=win32DisplayConfigurationDisplayFlags, win32CDROMDriveMediaLoaded=win32CDROMDriveMediaLoaded, win32POTSModemFlowControlHard=win32POTSModemFlowControlHard, win32TimeZoneDaylightSecond=win32TimeZoneDaylightSecond, win32POTSModemSpeakerModeSetup=win32POTSModemSpeakerModeSetup, win32ShareName=win32ShareName, win32LogicalDiskToPartitionTable=win32LogicalDiskToPartitionTable, win32NetworkConnectionRemoteName=win32NetworkConnectionRemoteName, win32PrinterConfigurationCollate=win32PrinterConfigurationCollate, win32LogicalDiskCompressed=win32LogicalDiskCompressed, win32RegistryProposedSize=win32RegistryProposedSize, win32TimeZoneDaylightMinute=win32TimeZoneDaylightMinute, win32UserAccountDisabled=win32UserAccountDisabled, win32NetworkProtocolKeyIndex=win32NetworkProtocolKeyIndex, win32ProcessStartupTable=win32ProcessStartupTable, win32ShareTable=win32ShareTable, win32NetworkAdapterEntry=win32NetworkAdapterEntry)
mibBuilder.exportSymbols("CIMWIN32-MIB", win32ShareEntry=win32ShareEntry)
