#
# PySNMP MIB module CADANT-MPLS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CADANT-MPLS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:28:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
cadMpls, = mibBuilder.importSymbols("CADANT-PRODUCTS-MIB", "cadMpls")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Integer32, Bits, Counter32, iso, Counter64, Gauge32, ModuleIdentity, TimeTicks, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "Counter32", "iso", "Counter64", "Gauge32", "ModuleIdentity", "TimeTicks", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "IpAddress", "Unsigned32")
TextualConvention, TruthValue, DisplayString, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "RowStatus", "MacAddress")
cadMplsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998, 1, 1, 130, 1))
cadMplsMIB.setRevisions(('2014-01-24 00:00', '2013-12-04 00:00', '2013-11-04 00:00',))
if mibBuilder.loadTexts: cadMplsMIB.setLastUpdated('201401240000Z')
if mibBuilder.loadTexts: cadMplsMIB.setOrganization('Arris International, Inc.')
cadMplsMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 130, 1, 1))
cadMplsParams = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 130, 1, 1, 1))
cadMplsLdpHelloHoldTimer = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 130, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(15)).setUnits('second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadMplsLdpHelloHoldTimer.setStatus('current')
cadMplsLdpTargetedHelloHoldTimer = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 130, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(45)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadMplsLdpTargetedHelloHoldTimer.setStatus('current')
cadMplsLdpKeepAliveHoldTimer = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 130, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadMplsLdpKeepAliveHoldTimer.setStatus('current')
cadMplsLdpVcDescription = MibScalar((1, 3, 6, 1, 4, 1, 4998, 1, 1, 130, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cadMplsLdpVcDescription.setStatus('current')
cadMplsLdpNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 130, 1, 1, 2), )
if mibBuilder.loadTexts: cadMplsLdpNeighborTable.setStatus('current')
cadMplsLdpNeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 130, 1, 1, 2, 1), ).setIndexNames((0, "CADANT-MPLS-MIB", "cadMplsLdpNeighborAddressType"), (0, "CADANT-MPLS-MIB", "cadMplsLdpNeighborIpAddress"))
if mibBuilder.loadTexts: cadMplsLdpNeighborEntry.setStatus('current')
cadMplsLdpNeighborAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 130, 1, 1, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cadMplsLdpNeighborAddressType.setStatus('current')
cadMplsLdpNeighborIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 130, 1, 1, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: cadMplsLdpNeighborIpAddress.setStatus('current')
cadMplsLdpNeighborPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 130, 1, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadMplsLdpNeighborPassword.setStatus('current')
cadMplsLdpNeighborTargetedPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 130, 1, 1, 2, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadMplsLdpNeighborTargetedPeer.setStatus('current')
cadMplsLdpNeighborRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 130, 1, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadMplsLdpNeighborRowStatus.setStatus('current')
mibBuilder.exportSymbols("CADANT-MPLS-MIB", cadMplsMIB=cadMplsMIB, cadMplsLdpVcDescription=cadMplsLdpVcDescription, cadMplsLdpTargetedHelloHoldTimer=cadMplsLdpTargetedHelloHoldTimer, cadMplsLdpNeighborIpAddress=cadMplsLdpNeighborIpAddress, cadMplsParams=cadMplsParams, cadMplsLdpNeighborTable=cadMplsLdpNeighborTable, cadMplsLdpNeighborEntry=cadMplsLdpNeighborEntry, cadMplsLdpNeighborPassword=cadMplsLdpNeighborPassword, cadMplsLdpNeighborTargetedPeer=cadMplsLdpNeighborTargetedPeer, cadMplsLdpNeighborAddressType=cadMplsLdpNeighborAddressType, cadMplsMIBObjects=cadMplsMIBObjects, cadMplsLdpNeighborRowStatus=cadMplsLdpNeighborRowStatus, cadMplsLdpKeepAliveHoldTimer=cadMplsLdpKeepAliveHoldTimer, PYSNMP_MODULE_ID=cadMplsMIB, cadMplsLdpHelloHoldTimer=cadMplsLdpHelloHoldTimer)
