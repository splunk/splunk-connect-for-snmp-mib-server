#
# PySNMP MIB module BayNetworks-AHB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BayNetworks-AHB-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:25:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, IpAddress, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, NotificationType, Integer32, Counter32, Gauge32, ModuleIdentity, iso, ObjectIdentity, TimeTicks, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "NotificationType", "Integer32", "Counter32", "Gauge32", "ModuleIdentity", "iso", "ObjectIdentity", "TimeTicks", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfAtmHalfBridgeGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfAtmHalfBridgeGroup")
class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

wfAhb = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1))
wfAhbDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbDelete.setStatus('mandatory')
wfAhbDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbDisable.setStatus('mandatory')
wfAhbAutoLearnMethod = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("unsecure", 2), ("secure", 3), ("both", 4))).clone('both')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbAutoLearnMethod.setStatus('mandatory')
wfAhbInitFile = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbInitFile.setStatus('mandatory')
wfAhbAltInitFile = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbAltInitFile.setStatus('mandatory')
wfAhbDebugLevel = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbDebugLevel.setStatus('mandatory')
wfAhbInboundFiltDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbInboundFiltDisable.setStatus('mandatory')
wfAhbReset = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notreset", 1), ("reset", 2))).clone('notreset')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbReset.setStatus('mandatory')
wfAhbStatNumNets = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbStatNumNets.setStatus('mandatory')
wfAhbStatNumHosts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbStatNumHosts.setStatus('mandatory')
wfAhbStatTotOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbStatTotOutPkts.setStatus('mandatory')
wfAhbStatFwdOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbStatFwdOutPkts.setStatus('mandatory')
wfAhbStatDropUnkPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbStatDropUnkPkts.setStatus('mandatory')
wfAhbStatTotInPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbStatTotInPkts.setStatus('mandatory')
wfAhbStatFwdInPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbStatFwdInPkts.setStatus('mandatory')
wfAhbStatNumHostCopies = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbStatNumHostCopies.setStatus('mandatory')
wfAhbPolicyDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbPolicyDisable.setStatus('mandatory')
wfAhbBaseStatus = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpres", 4))).clone('notpres')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbBaseStatus.setStatus('mandatory')
wfAhbCctTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 2), )
if mibBuilder.loadTexts: wfAhbCctTable.setStatus('mandatory')
wfAhbCctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 2, 1), ).setIndexNames((0, "BayNetworks-AHB-MIB", "wfAhbCctNum"))
if mibBuilder.loadTexts: wfAhbCctEntry.setStatus('mandatory')
wfAhbCctDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbCctDelete.setStatus('mandatory')
wfAhbCctDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbCctDisable.setStatus('mandatory')
wfAhbCctNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbCctNum.setStatus('mandatory')
wfAhbCctDefSubNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbCctDefSubNetMask.setStatus('mandatory')
wfAhbCctProxyArpDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbCctProxyArpDisable.setStatus('mandatory')
wfAhbCctMaxIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 3600))).clone(namedValues=NamedValues(("minimum", 5), ("default", 3600))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbCctMaxIdleTime.setStatus('mandatory')
wfAhbCctStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbCctStatus.setStatus('mandatory')
wfAhbCctTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbCctTxPkts.setStatus('mandatory')
wfAhbCctTxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbCctTxDrop.setStatus('mandatory')
wfAhbCctRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbCctRxPkts.setStatus('mandatory')
wfAhbCctRxDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbCctRxDrop.setStatus('mandatory')
wfAhbHostTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 3), )
if mibBuilder.loadTexts: wfAhbHostTable.setStatus('mandatory')
wfAhbHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 3, 1), ).setIndexNames((0, "BayNetworks-AHB-MIB", "wfAhbHostSlot"), (0, "BayNetworks-AHB-MIB", "wfAhbHostIpAddress"))
if mibBuilder.loadTexts: wfAhbHostEntry.setStatus('mandatory')
wfAhbHostDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbHostDelete.setStatus('mandatory')
wfAhbHostSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbHostSlot.setStatus('mandatory')
wfAhbHostSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbHostSeqNum.setStatus('mandatory')
wfAhbHostIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbHostIpAddress.setStatus('mandatory')
wfAhbHostSubNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 3, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbHostSubNetMask.setStatus('mandatory')
wfAhbHostCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbHostCct.setStatus('mandatory')
wfAhbHostVcid = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbHostVcid.setStatus('mandatory')
wfAhbHostBridgeHdr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbHostBridgeHdr.setStatus('mandatory')
wfAhbHostFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 3, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbHostFlags.setStatus('mandatory')
wfAhbHostTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbHostTxPkts.setStatus('mandatory')
wfAhbHostRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbHostRxPkts.setStatus('mandatory')
wfAhbHostMaxIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 3, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbHostMaxIdleTime.setStatus('mandatory')
wfAhbHostCurIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbHostCurIdleTime.setStatus('mandatory')
wfAhbPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 4), )
if mibBuilder.loadTexts: wfAhbPolicyTable.setStatus('mandatory')
wfAhbPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 4, 1), ).setIndexNames((0, "BayNetworks-AHB-MIB", "wfAhbPolicyIpAddress"), (0, "BayNetworks-AHB-MIB", "wfAhbPolicySubNetMask"))
if mibBuilder.loadTexts: wfAhbPolicyEntry.setStatus('mandatory')
wfAhbPolicyDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbPolicyDelete.setStatus('mandatory')
wfAhbPolicyIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbPolicyIpAddress.setStatus('mandatory')
wfAhbPolicySubNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfAhbPolicySubNetMask.setStatus('mandatory')
wfAhbPolicyCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbPolicyCct.setStatus('mandatory')
wfAhbPolicyVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 4, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbPolicyVPI.setStatus('mandatory')
wfAhbPolicyVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 4, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbPolicyVCI.setStatus('mandatory')
wfAhbPolicyMACAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 4, 1, 7), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbPolicyMACAddr.setStatus('mandatory')
wfAhbPolicyFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 4, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbPolicyFlags.setStatus('mandatory')
wfAhbPolicyPermission = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 13, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("allow", 1), ("disallow", 2), ("static", 3), ("notused", 4))).clone('allow')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfAhbPolicyPermission.setStatus('mandatory')
mibBuilder.exportSymbols("BayNetworks-AHB-MIB", wfAhbCctStatus=wfAhbCctStatus, wfAhbHostSubNetMask=wfAhbHostSubNetMask, wfAhbPolicyFlags=wfAhbPolicyFlags, wfAhbReset=wfAhbReset, wfAhbStatNumHostCopies=wfAhbStatNumHostCopies, wfAhbPolicyTable=wfAhbPolicyTable, wfAhbAltInitFile=wfAhbAltInitFile, wfAhbPolicyDelete=wfAhbPolicyDelete, wfAhbHostIpAddress=wfAhbHostIpAddress, wfAhbStatNumHosts=wfAhbStatNumHosts, wfAhbDisable=wfAhbDisable, wfAhbPolicyCct=wfAhbPolicyCct, wfAhbCctTxPkts=wfAhbCctTxPkts, wfAhbPolicyVCI=wfAhbPolicyVCI, wfAhbHostEntry=wfAhbHostEntry, wfAhbStatFwdOutPkts=wfAhbStatFwdOutPkts, wfAhbCctNum=wfAhbCctNum, wfAhbHostVcid=wfAhbHostVcid, wfAhbCctTxDrop=wfAhbCctTxDrop, wfAhb=wfAhb, wfAhbCctDisable=wfAhbCctDisable, wfAhbPolicyVPI=wfAhbPolicyVPI, wfAhbStatTotInPkts=wfAhbStatTotInPkts, wfAhbPolicyIpAddress=wfAhbPolicyIpAddress, wfAhbPolicyDisable=wfAhbPolicyDisable, wfAhbHostTable=wfAhbHostTable, MacAddress=MacAddress, wfAhbCctMaxIdleTime=wfAhbCctMaxIdleTime, wfAhbCctRxDrop=wfAhbCctRxDrop, wfAhbDebugLevel=wfAhbDebugLevel, wfAhbStatDropUnkPkts=wfAhbStatDropUnkPkts, wfAhbBaseStatus=wfAhbBaseStatus, wfAhbCctDefSubNetMask=wfAhbCctDefSubNetMask, wfAhbPolicyPermission=wfAhbPolicyPermission, wfAhbStatTotOutPkts=wfAhbStatTotOutPkts, wfAhbHostCct=wfAhbHostCct, wfAhbCctDelete=wfAhbCctDelete, wfAhbHostRxPkts=wfAhbHostRxPkts, wfAhbHostMaxIdleTime=wfAhbHostMaxIdleTime, wfAhbCctTable=wfAhbCctTable, wfAhbPolicySubNetMask=wfAhbPolicySubNetMask, wfAhbHostTxPkts=wfAhbHostTxPkts, wfAhbAutoLearnMethod=wfAhbAutoLearnMethod, wfAhbHostSeqNum=wfAhbHostSeqNum, wfAhbInitFile=wfAhbInitFile, wfAhbHostBridgeHdr=wfAhbHostBridgeHdr, wfAhbHostSlot=wfAhbHostSlot, wfAhbDelete=wfAhbDelete, wfAhbCctEntry=wfAhbCctEntry, wfAhbPolicyEntry=wfAhbPolicyEntry, wfAhbInboundFiltDisable=wfAhbInboundFiltDisable, wfAhbHostDelete=wfAhbHostDelete, wfAhbStatNumNets=wfAhbStatNumNets, wfAhbStatFwdInPkts=wfAhbStatFwdInPkts, wfAhbPolicyMACAddr=wfAhbPolicyMACAddr, wfAhbHostCurIdleTime=wfAhbHostCurIdleTime, wfAhbHostFlags=wfAhbHostFlags, wfAhbCctRxPkts=wfAhbCctRxPkts, wfAhbCctProxyArpDisable=wfAhbCctProxyArpDisable)
