#
# PySNMP MIB module AP80-PRIVATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AP80-PRIVATE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:07:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, IpAddress, Gauge32, ObjectIdentity, Integer32, enterprises, Counter32, TimeTicks, NotificationType, Bits, iso, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, mgmt = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "IpAddress", "Gauge32", "ObjectIdentity", "Integer32", "enterprises", "Counter32", "TimeTicks", "NotificationType", "Bits", "iso", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "mgmt")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class DisplayString(OctetString):
    pass

class TruthValue(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 1))
    namedValues = NamedValues(("false", 2), ("true", 1))

aruba = MibIdentifier((1, 3, 6, 1, 4, 1, 14823))
arubaEnterpriseMibModules = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2))
arubaAp = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3))
wlsrOutDoorApMibModules = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2))
enterpriseApSys = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 1))
enterpriseApLineMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 2))
enterpriseApPortMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 3))
enterpriseApFileTransferMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 4))
enterpriseApResetMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 5))
enterpriseApIpMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 6))
enterpriseAPdot11 = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7))
enterpriseApAdmin = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 8))
enterpriseApVLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 9))
enterpriseApFilterControl = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 10))
enterpriseApSNTP = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 11))
enterpriseApDNS = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 12))
enterpriseApSyslog = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 13))
enterpriseApSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14))
enterpriseApRadio = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15))
enterpriseApSNMP = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16))
enterpriseApSession = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 17))
enterpriseAPVapRadio = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 20))
enterpriseApRadioWds = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 22))
enterpriseApWMM = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24))
enterpriseApSTP = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 25))
swHardwareVer = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swHardwareVer.setStatus('current')
swBootRomVer = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swBootRomVer.setStatus('current')
swOpCodeVer = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swOpCodeVer.setStatus('current')
swSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSerialNumber.setStatus('current')
sysNotificationTree = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 1, 5))
sysNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 1, 5, 1))
sysNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 1, 5, 2))
sysSystemUp = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 1, 5, 2, 1))
if mibBuilder.loadTexts: sysSystemUp.setStatus('current')
sysSystemDown = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 1, 5, 2, 2))
if mibBuilder.loadTexts: sysSystemDown.setStatus('current')
sysRadiusServerChanged = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 1, 5, 2, 3))
if mibBuilder.loadTexts: sysRadiusServerChanged.setStatus('current')
sysConfigFileVersionChanged = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 1, 5, 2, 4))
if mibBuilder.loadTexts: sysConfigFileVersionChanged.setStatus('current')
lineTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 2, 1), )
if mibBuilder.loadTexts: lineTable.setStatus('current')
lineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 2, 1, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "lineIndex"))
if mibBuilder.loadTexts: lineEntry.setStatus('current')
lineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: lineIndex.setStatus('current')
lineDataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lineDataBits.setStatus('current')
lineParity = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(99, 1, 2))).clone(namedValues=NamedValues(("none", 99), ("odd", 1), ("even", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lineParity.setStatus('current')
lineSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lineSpeed.setStatus('current')
lineStopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lineStopBits.setStatus('current')
portTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 3, 1), )
if mibBuilder.loadTexts: portTable.setStatus('current')
portEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 3, 1, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "portIndex"))
if mibBuilder.loadTexts: portEntry.setStatus('current')
portIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: portIndex.setStatus('current')
portName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portName.setStatus('current')
portType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("hundredBaseTX", 2), ("hundredBaseFX", 3), ("thousandBaseSX", 4), ("thousandBaseLX", 5), ("thousandBaseT", 6), ("thousandBaseGBIC", 7), ("thousandBaseMiniGBIC", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portType.setStatus('current')
portSpeedDpxCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("reserved", 1), ("halfDuplex10", 2), ("fullDuplex10", 3), ("halfDuplex100", 4), ("fullDuplex100", 5), ("halfDuplex1000", 6), ("fullDuplex1000", 7))).clone('halfDuplex10')).setMaxAccess("readonly")
if mibBuilder.loadTexts: portSpeedDpxCfg.setStatus('current')
portFlowCtrlCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("backPressure", 3), ("dot3xFlowControl", 4))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: portFlowCtrlCfg.setStatus('current')
portCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(99, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("portCap10half", 99), ("portCap10full", 1), ("portCap100half", 2), ("portCap100full", 3), ("portCap1000half", 4), ("portCap1000full", 5), ("reserved6", 6), ("reserved7", 7), ("reserved8", 8), ("reserved9", 9), ("reserved10", 10), ("reserved11", 11), ("reserved12", 12), ("reserved13", 13), ("portCapSym", 14), ("portCapFlowCtrl", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portCapabilities.setStatus('current')
portAutonegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portAutonegotiation.setStatus('current')
portSpeedDpxStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("error", 1), ("halfDuplex10", 2), ("fullDuplex10", 3), ("halfDuplex100", 4), ("fullDuplex100", 5), ("halfDuplex1000", 6), ("fullDuplex1000", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portSpeedDpxStatus.setStatus('current')
portFlowCtrlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("error", 1), ("backPressure", 2), ("dot3xFlowControl", 3), ("none", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portFlowCtrlStatus.setStatus('current')
transferType = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ftp", 1), ("tftp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: transferType.setStatus('current')
fileType = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("application", 1), ("config", 2), ("bootcode", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fileType.setStatus('current')
srcFile = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 4, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srcFile.setStatus('current')
destFile = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 4, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destFile.setStatus('current')
fileServer = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 4, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fileServer.setStatus('current')
userName = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 4, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userName.setStatus('current')
password = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 4, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: password.setStatus('current')
status = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 10, 11, 12, 13, 20, 30))).clone(namedValues=NamedValues(("running", 1), ("success", 2), ("failureGeneric", 3), ("flashOpenError", 10), ("flashMallocError", 11), ("flashReadError", 12), ("flashFtypeError", 13), ("socketWriteError", 20), ("protocolError", 30)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: status.setStatus('current')
transferStart = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 4, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("nothing", 0), ("download", 1), ("upload", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: transferStart.setStatus('current')
restartOpCodeFile = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: restartOpCodeFile.setStatus('current')
restartControl = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("running", 1), ("warmBoot", 2), ("coldBoot", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: restartControl.setStatus('current')
netConfigIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 6, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigIPAddress.setStatus('current')
netConfigSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 6, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigSubnetMask.setStatus('current')
netConfigDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 6, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigDefaultGateway.setStatus('current')
netConfigHttpState = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigHttpState.setStatus('current')
netConfigHttpPort = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 6, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigHttpPort.setStatus('current')
netConfigHttpsState = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 6, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigHttpsState.setStatus('current')
netConfigHttpsPort = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 6, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigHttpsPort.setStatus('current')
netConfigDHCPState = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 6, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigDHCPState.setStatus('current')
dot11AuthenticationEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 1))
dot118021xState = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("supported", 1), ("required", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot118021xState.setStatus('obsolete')
dot118021xBroadcastKeyRefreshRate = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot118021xBroadcastKeyRefreshRate.setStatus('obsolete')
dot118021xSessionKeyRefreshRate = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot118021xSessionKeyRefreshRate.setStatus('obsolete')
dot118021xReauthenticationTimeout = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot118021xReauthenticationTimeout.setStatus('obsolete')
dot11MACAuthenticationType = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("local", 1), ("radius", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11MACAuthenticationType.setStatus('obsolete')
dot11AuthenticationServerTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 2), )
if mibBuilder.loadTexts: dot11AuthenticationServerTable.setStatus('current')
dot11AuthenticationServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 2, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "dot11AuthenticationServerIndex"))
if mibBuilder.loadTexts: dot11AuthenticationServerEntry.setStatus('current')
dot11AuthenticationServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: dot11AuthenticationServerIndex.setStatus('current')
dot11AuthenticationServer = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11AuthenticationServer.setStatus('current')
dot11AuthenticationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11AuthenticationPort.setStatus('current')
dot11AuthenticationKey = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11AuthenticationKey.setStatus('current')
dot11AuthenticationRetransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11AuthenticationRetransmit.setStatus('current')
dot11AuthenticationTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11AuthenticationTimeout.setStatus('current')
dot11AuthenticationAcctPort = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535)).clone(1813)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11AuthenticationAcctPort.setStatus('current')
dot11AuthenticationAcctInterimUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400)).clone(3600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11AuthenticationAcctInterimUpdate.setStatus('current')
dot11AuthenticationMACAddressFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("no-delimiter", 1), ("single-dash", 2), ("multi-dash", 3), ("multi-colon", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11AuthenticationMACAddressFormat.setStatus('current')
dot11AuthenticationVLANIDFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hex", 1), ("ascii", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11AuthenticationVLANIDFormat.setStatus('current')
dot11MACAuthenticationFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 3))
dot11FilterDefault = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11FilterDefault.setStatus('current')
dot11FilterTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 3, 2), )
if mibBuilder.loadTexts: dot11FilterTable.setStatus('current')
dot11FilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 3, 2, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "dot11FilterAddress"))
if mibBuilder.loadTexts: dot11FilterEntry.setStatus('current')
dot11FilterAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 3, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: dot11FilterAddress.setStatus('current')
dot11FilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(30, 31, 32))).clone(namedValues=NamedValues(("allowed", 30), ("denied", 31), ("delete", 32)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11FilterStatus.setStatus('current')
dot11NotificationTree = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4))
dot11NotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 1))
dot11MacAddr = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 1, 1), MacAddress())
if mibBuilder.loadTexts: dot11MacAddr.setStatus('current')
dot11Station = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 1, 2), MacAddress())
if mibBuilder.loadTexts: dot11Station.setStatus('current')
dot11RequestType = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("association", 2), ("reAssociation", 3), ("authentication", 4))))
if mibBuilder.loadTexts: dot11RequestType.setStatus('current')
dot11ReasonCode = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("invalidModeOrState", 1), ("unAuthenticatedStation", 2), ("internalError", 3), ("outOfSequenceFrame", 4), ("unsupportedAlgorithm", 5), ("invalidFrameLngth", 6), ("wepRequiredOnAP", 7), ("wepNotAllowed", 8), ("challengeTextMismatch", 9))))
if mibBuilder.loadTexts: dot11ReasonCode.setStatus('current')
dot11ApIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 1, 5), IpAddress())
if mibBuilder.loadTexts: dot11ApIpAddress.setStatus('current')
dot1xAuthenticatorMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 1, 6), MacAddress())
if mibBuilder.loadTexts: dot1xAuthenticatorMacAddr.setStatus('current')
dot11Notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2))
dot11StationAssociation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2, 1)).setObjects(("AP80-PRIVATE-MIB", "dot11Station"))
if mibBuilder.loadTexts: dot11StationAssociation.setStatus('current')
dot11StationReAssociation = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2, 2)).setObjects(("AP80-PRIVATE-MIB", "dot11Station"))
if mibBuilder.loadTexts: dot11StationReAssociation.setStatus('current')
dot11StationAuthentication = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2, 3)).setObjects(("AP80-PRIVATE-MIB", "dot11Station"))
if mibBuilder.loadTexts: dot11StationAuthentication.setStatus('current')
dot11StationRequestFail = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2, 4)).setObjects(("AP80-PRIVATE-MIB", "dot11Station"), ("AP80-PRIVATE-MIB", "dot11RequestType"), ("AP80-PRIVATE-MIB", "dot11ReasonCode"))
if mibBuilder.loadTexts: dot11StationRequestFail.setStatus('current')
dot11InterfaceBFail = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2, 5))
if mibBuilder.loadTexts: dot11InterfaceBFail.setStatus('current')
dot11InterfaceAGFail = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2, 6))
if mibBuilder.loadTexts: dot11InterfaceAGFail.setStatus('current')
dot1xMacAddrAuthSuccess = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2, 7)).setObjects(("AP80-PRIVATE-MIB", "dot11Station"))
if mibBuilder.loadTexts: dot1xMacAddrAuthSuccess.setStatus('current')
dot1xMacAddrAuthFail = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2, 8)).setObjects(("AP80-PRIVATE-MIB", "dot11Station"))
if mibBuilder.loadTexts: dot1xMacAddrAuthFail.setStatus('current')
dot1xAuthNotInitiated = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2, 9)).setObjects(("AP80-PRIVATE-MIB", "dot11Station"))
if mibBuilder.loadTexts: dot1xAuthNotInitiated.setStatus('current')
dot1xAuthSuccess = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2, 10)).setObjects(("AP80-PRIVATE-MIB", "dot11Station"))
if mibBuilder.loadTexts: dot1xAuthSuccess.setStatus('current')
dot1xAuthFail = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2, 11)).setObjects(("AP80-PRIVATE-MIB", "dot11Station"))
if mibBuilder.loadTexts: dot1xAuthFail.setStatus('current')
localMacAddrAuthSuccess = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2, 12)).setObjects(("AP80-PRIVATE-MIB", "dot11Station"))
if mibBuilder.loadTexts: localMacAddrAuthSuccess.setStatus('current')
localMacAddrAuthFail = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2, 13)).setObjects(("AP80-PRIVATE-MIB", "dot11Station"))
if mibBuilder.loadTexts: localMacAddrAuthFail.setStatus('current')
pppLogonFail = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2, 14))
if mibBuilder.loadTexts: pppLogonFail.setStatus('current')
iappStationRoamedFrom = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2, 15)).setObjects(("AP80-PRIVATE-MIB", "dot11Station"), ("AP80-PRIVATE-MIB", "dot11ApIpAddress"))
if mibBuilder.loadTexts: iappStationRoamedFrom.setStatus('current')
iappStationRoamedTo = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2, 16)).setObjects(("AP80-PRIVATE-MIB", "dot11Station"), ("AP80-PRIVATE-MIB", "dot11ApIpAddress"))
if mibBuilder.loadTexts: iappStationRoamedTo.setStatus('current')
iappContextDataSent = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2, 17)).setObjects(("AP80-PRIVATE-MIB", "dot11Station"), ("AP80-PRIVATE-MIB", "dot11ApIpAddress"))
if mibBuilder.loadTexts: iappContextDataSent.setStatus('current')
dot1xSupplicantAuthenticated = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 4, 2, 18)).setObjects(("AP80-PRIVATE-MIB", "dot11AuthenticatorMacAddr"))
if mibBuilder.loadTexts: dot1xSupplicantAuthenticated.setStatus('current')
dot11AuthenticationSupplicantTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 5), )
if mibBuilder.loadTexts: dot11AuthenticationSupplicantTable.setStatus('current')
dot11AuthenticationSupplicantEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 5, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "dot11AuthenticationSuppIndex"))
if mibBuilder.loadTexts: dot11AuthenticationSupplicantEntry.setStatus('current')
dot118021xSuppIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: dot118021xSuppIndex.setStatus('current')
dot118021xSuppState = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot118021xSuppState.setStatus('current')
dot118021xSuppUser = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 5, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot118021xSuppUser.setStatus('current')
dot118021xSuppPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot118021xSuppPasswd.setStatus('current')
dot11VapAuthenticationTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 6), )
if mibBuilder.loadTexts: dot11VapAuthenticationTable.setStatus('current')
dot11VapAuthenticationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 6, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "dot11Vap8021xIndex"))
if mibBuilder.loadTexts: dot11VapAuthenticationEntry.setStatus('current')
dot11Vap8021xIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: dot11Vap8021xIndex.setStatus('current')
dot11Vap8021xState = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("supported", 1), ("required", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11Vap8021xState.setStatus('current')
dot11Vap8021xBroadcastKeyRefreshRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11Vap8021xBroadcastKeyRefreshRate.setStatus('current')
dot11Vap8021xSessionKeyRefreshRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11Vap8021xSessionKeyRefreshRate.setStatus('current')
dot11Vap8021xReauthenticationTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11Vap8021xReauthenticationTimeout.setStatus('current')
dot11VapAuthMACAuthenticationType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("local", 1), ("remote", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11VapAuthMACAuthenticationType.setStatus('current')
dot11VapAuthMACAuthenticationTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 7, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11VapAuthMACAuthenticationTimeout.setStatus('current')
enterpriseApAdminUser = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 8, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApAdminUser.setStatus('current')
enterpriseApAdminPassword = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 8, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApAdminPassword.setStatus('current')
enterpriseApVLANNativeId = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 9, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApVLANNativeId.setStatus('current')
enterpriseApVLANState = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApVLANState.setStatus('current')
enterpriseApNativeVlanTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 9, 3), )
if mibBuilder.loadTexts: enterpriseApNativeVlanTable.setStatus('mandatory')
enterpriseApNativeVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 9, 3, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "nativeVlanIfIndex"), (0, "AP80-PRIVATE-MIB", "nativeVlanSsidNumber"))
if mibBuilder.loadTexts: enterpriseApNativeVlanEntry.setStatus('mandatory')
nativeVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 9, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: nativeVlanIfIndex.setStatus('mandatory')
nativeVlanSsidNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 9, 3, 1, 2), Integer32())
if mibBuilder.loadTexts: nativeVlanSsidNumber.setStatus('mandatory')
nativeVlanVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 9, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nativeVlanVlanId.setStatus('mandatory')
enterpriseApFilterControlInterClientSTAsCommun = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("PreventIntraVAPClient", 2), ("PreventInterAndIntraVAPClient", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApFilterControlInterClientSTAsCommun.setStatus('current')
enterpriseApFilterControlAPManage = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApFilterControlAPManage.setStatus('current')
enterpriseApFilterControlEthernet = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApFilterControlEthernet.setStatus('current')
enterpriseApFilterProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 10, 4), )
if mibBuilder.loadTexts: enterpriseApFilterProtocolTable.setStatus('current')
enterpriseApFilterProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 10, 4, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "enterpriseApFilterProtocolIndex"))
if mibBuilder.loadTexts: enterpriseApFilterProtocolEntry.setStatus('current')
enterpriseApFilterProtocolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 10, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: enterpriseApFilterProtocolIndex.setStatus('current')
enterpriseApFilterProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 10, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApFilterProtocolName.setStatus('current')
enterpriseApFilterProtocolISODesignator = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 10, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApFilterProtocolISODesignator.setStatus('current')
enterpriseApFilterProtocolState = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 10, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApFilterProtocolState.setStatus('current')
enterpriseApFilterUplinkPortMACAddrFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 10, 5))
uplinkPortMACAddrFilterStatus = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 10, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uplinkPortMACAddrFilterStatus.setStatus('current')
uplinkPortMACAddrFilterAddMac = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 10, 5, 2), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: uplinkPortMACAddrFilterAddMac.setStatus('current')
uplinkPortMACAddrFilteringTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 10, 5, 3), )
if mibBuilder.loadTexts: uplinkPortMACAddrFilteringTable.setStatus('current')
uplinkPortMACAddrFilteringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 10, 5, 3, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "uplinkPortMacAddrIndex"))
if mibBuilder.loadTexts: uplinkPortMACAddrFilteringEntry.setStatus('current')
uplinkPortMacAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 10, 5, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uplinkPortMacAddrIndex.setStatus('current')
uplinkPortMACAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 10, 5, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: uplinkPortMACAddr.setStatus('current')
deleteMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 10, 5, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("Delete", 1), ("Nothing", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: deleteMacAddr.setStatus('current')
enterpriseApSNTPState = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSNTPState.setStatus('current')
enterpriseApSNTPPrimaryServer = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 11, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSNTPPrimaryServer.setStatus('current')
enterpriseApSNTPSecondaryServer = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 11, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSNTPSecondaryServer.setStatus('current')
enterpriseApSNTPTimezone = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 11, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53))).clone(namedValues=NamedValues(("enewetakKwajalein", 0), ("midwayIsland", 1), ("hawaii", 2), ("alaska", 3), ("pacific", 4), ("arizona", 5), ("mountain", 6), ("central", 7), ("mexicoCity", 8), ("saskatchewan", 9), ("bogota", 10), ("eastern", 11), ("indiana", 12), ("atlantic", 13), ("caracas", 14), ("santiago", 15), ("newfoundland", 16), ("brasilia", 17), ("buenos", 18), ("midAtlantic", 19), ("azores", 20), ("casablanca", 21), ("greenwichMeanTimeDublin", 22), ("greenwichMeanTimeLisbon", 23), ("amsterdam", 24), ("stockhoim", 25), ("bratislava", 26), ("prague", 27), ("paris", 28), ("sofija", 29), ("athens", 30), ("bucharest", 31), ("cairo", 32), ("harare", 33), ("helsinki", 34), ("israel", 35), ("baghdad", 36), ("moscow", 37), ("tehran", 38), ("abuDhabi", 39), ("vogograd", 40), ("islamabad", 41), ("almaty", 42), ("bangkok", 43), ("beijing", 44), ("taipei", 45), ("tokyo", 46), ("brisbane", 47), ("canberra", 48), ("guam", 49), ("hobart", 50), ("magadan", 51), ("fiji", 52), ("wellington", 53)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSNTPTimezone.setStatus('current')
enterpriseApSNTPDST = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 11, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSNTPDST.setStatus('current')
enterpriseApSNTPDSTStartMonth = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 11, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSNTPDSTStartMonth.setStatus('current')
enterpriseApSNTPDSTStartDay = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 11, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSNTPDSTStartDay.setStatus('current')
enterpriseApSNTPDSTEndMonth = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 11, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSNTPDSTEndMonth.setStatus('current')
enterpriseApSNTPDSTEndDay = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 11, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSNTPDSTEndDay.setStatus('current')
sntpNotificationTree = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 11, 10))
sntpNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 11, 10, 1))
sntpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 11, 10, 2))
sntpServerFail = NotificationType((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 11, 10, 2, 1))
if mibBuilder.loadTexts: sntpServerFail.setStatus('current')
enterpriseApDNSPrimaryServer = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 12, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApDNSPrimaryServer.setStatus('current')
enterpriseApDNSSecondaryServer = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 12, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApDNSSecondaryServer.setStatus('current')
enterpriseApSyslogState = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSyslogState.setStatus('current')
enterpriseApSyslogConsoleState = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 13, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSyslogConsoleState.setStatus('current')
enterpriseApSyslogLevel = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 13, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("emergency", 0), ("alert", 1), ("critical", 2), ("error", 3), ("warning", 4), ("notice", 5), ("info", 6), ("debug", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSyslogLevel.setStatus('current')
enterpriseApSyslogServerTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 13, 4), )
if mibBuilder.loadTexts: enterpriseApSyslogServerTable.setStatus('current')
enterpriseApSyslogServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 13, 4, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "enterpriseApSyslogServerIndex"))
if mibBuilder.loadTexts: enterpriseApSyslogServerEntry.setStatus('current')
enterpriseApSyslogServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 13, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: enterpriseApSyslogServerIndex.setStatus('current')
enterpriseApSyslogServerState = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 13, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSyslogServerState.setStatus('current')
enterpriseApSyslogServerIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 13, 4, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSyslogServerIPAddress.setStatus('current')
enterpriseApSyslogServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 13, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSyslogServerPort.setStatus('current')
enterpriseApSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 1), )
if mibBuilder.loadTexts: enterpriseApSecurityTable.setStatus('current')
enterpriseApSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 1, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "enterpriseApSecurityIndex"))
if mibBuilder.loadTexts: enterpriseApSecurityEntry.setStatus('current')
enterpriseApSecurityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: enterpriseApSecurityIndex.setStatus('current')
enterpriseApSecurityAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("opensystem", 0), ("sharedkey", 1), ("wpa", 2), ("wpapsk", 3), ("wpawpa2mixed", 4), ("wpawpa2pskmixed", 5), ("wpa2", 6), ("wpa2psk", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityAuthType.setStatus('current')
enterpriseApSecuritySharedKeyLen = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("sixtyFour", 1), ("oneHundredTwentyEight", 2), ("oneHundredFiftyTwo", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApSecuritySharedKeyLen.setStatus('current')
enterpriseApSecurityWPAMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("supported", 0), ("required", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityWPAMode.setStatus('current')
enterpriseApSecurityWPAKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("dot1x", 0), ("presharedkey", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityWPAKeyType.setStatus('current')
enterpriseApSecurityWPACipher = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("wep", 0), ("tkip", 1), ("aes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityWPACipher.setStatus('obsolete')
enterpriseApSecurityWPAPSKType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("hex", 0), ("alphanumeric", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityWPAPSKType.setStatus('current')
enterpriseApSecurityWPAPSK = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityWPAPSK.setStatus('current')
enterpriseApSecurityWEPKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("hexadecimal", 0), ("alphanumeric", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityWEPKeyType.setStatus('current')
enterpriseApSecurityWEPEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityWEPEnabled.setStatus('current')
enterpriseApSecurityWPACipherSuite = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("aes-ccmp", 0), ("tkip", 1), ("wep", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityWPACipherSuite.setStatus('current')
enterpriseApSecurityWPAPreAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityWPAPreAuthentication.setStatus('current')
enterpriseApSecurityWPAPmksaLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityWPAPmksaLifetime.setStatus('current')
enterpriseApSsh = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 2))
enterpriseApSshServerEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 2, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSshServerEnabled.setStatus('mandatory')
enterpriseApSshServerPort = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 2, 2), Integer32().clone(22)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSshServerPort.setStatus('mandatory')
enterpriseApSshTelnetServerEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 14, 2, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSshTelnetServerEnabled.setStatus('mandatory')
enterpriseApRadioTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1), )
if mibBuilder.loadTexts: enterpriseApRadioTable.setStatus('current')
enterpriseApRadioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "enterpriseApRadioIndex"))
if mibBuilder.loadTexts: enterpriseApRadioEntry.setStatus('current')
enterpriseApRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: enterpriseApRadioIndex.setStatus('current')
enterpriseApRadioState = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioState.setStatus('obsolete')
enterpriseApRadioAutoChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioAutoChannel.setStatus('current')
enterpriseApRadioTransmitPower = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("min", 0), ("eighth", 1), ("quarter", 2), ("half", 3), ("full", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioTransmitPower.setStatus('current')
enterpriseApRadioClosedSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioClosedSystem.setStatus('obsolete')
enterpriseApRadioMaxAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioMaxAssoc.setStatus('obsolete')
enterpriseApRadioTransmitKey = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioTransmitKey.setStatus('obsolete')
enterpriseApRadioTurboMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("static-turbo", 2), ("dynamic-turbo", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioTurboMode.setStatus('current')
enterpriseApRadioDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioDescription.setStatus('obsolete')
enterpriseApRadioDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 5, 6, 9, 11, 12, 18, 24, 36, 48, 54, 255))).clone(namedValues=NamedValues(("oneMbps", 1), ("twoMbps", 2), ("fiveAndHalfMbps", 5), ("sixMbps", 6), ("nineMbps", 9), ("elevenMbps", 11), ("twelveMbps", 12), ("eighteenMbps", 18), ("twentyFourMbps", 24), ("thirtySixMbps", 36), ("fourtyEightMbps", 48), ("fiftyFourMbps", 54), ("auto", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioDataRate.setStatus('current')
enterpriseApRadioGMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("bOnly", 1), ("gOnly", 2), ("bg", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioGMode.setStatus('current')
enterpriseApRadioAntennaMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fixed", 1), ("external", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioAntennaMode.setStatus('mandatory')
enterpriseApRadioAntennaId = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApRadioAntennaId.setStatus('current')
enterpriseApRadioAntennaControlMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("Diversity", 1), ("Left", 2), ("Right", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioAntennaControlMethod.setStatus('current')
enterpriseApRadioAntennaLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("Indoor", 1), ("Outdoor", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioAntennaLocation.setStatus('current')
enterpriseApRadioRogueApDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioRogueApDetection.setStatus('current')
enterpriseApRadioRogueApScanInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 10080))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioRogueApScanInterval.setStatus('current')
enterpriseApRadioRogueApScanDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioRogueApScanDuration.setStatus('current')
enterpriseApRadioRogueApScanNow = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioRogueApScanNow.setStatus('current')
enterpriseApRadioMICMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("software", 1), ("hardware", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioMICMode.setStatus('current')
enterpriseApRadioSuperMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioSuperMode.setStatus('current')
enterpriseApRadioBeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioBeaconInterval.setStatus('current')
enterpriseApRadioDataBeaconRate = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioDataBeaconRate.setStatus('current')
enterpriseApRadioChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioChannel.setStatus('current')
enterpriseApRadioFragmentLength = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256, 2346))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioFragmentLength.setStatus('current')
enterpriseApRadioRTSThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2347))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioRTSThreshold.setStatus('current')
enterpriseApRadioAntennaGainReduction = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 15, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 29))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioAntennaGainReduction.setStatus('current')
enterpriseApSNMPCommunityReadOnly = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSNMPCommunityReadOnly.setStatus('current')
enterpriseApSNMPCommunityReadWrite = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSNMPCommunityReadWrite.setStatus('current')
enterpriseApSNMPTrapDestinationTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 3), )
if mibBuilder.loadTexts: enterpriseApSNMPTrapDestinationTable.setStatus('current')
enterpriseApSNMPTrapDestinationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 3, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "enterpriseApSNMPTrapDestinationIndex"))
if mibBuilder.loadTexts: enterpriseApSNMPTrapDestinationEntry.setStatus('current')
enterpriseApSNMPTrapDestinationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)))
if mibBuilder.loadTexts: enterpriseApSNMPTrapDestinationIndex.setStatus('current')
enterpriseApSNMPTrapDestinationCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSNMPTrapDestinationCommunity.setStatus('current')
enterpriseApSNMPTrapDestinationIP = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 3, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSNMPTrapDestinationIP.setStatus('current')
enterpriseApSNMPTrapDestinationState = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSNMPTrapDestinationState.setStatus('current')
enterpriseApSNMPTrapFilters = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4))
sysSystemUpTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSystemUpTrapEnabled.setStatus('current')
sysSystemDownTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysSystemDownTrapEnabled.setStatus('current')
sysRadiusServerChangedTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysRadiusServerChangedTrapEnabled.setStatus('current')
sysConfigFileVersionChangedTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysConfigFileVersionChangedTrapEnabled.setStatus('current')
dot11StationAssociationTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11StationAssociationTrapEnabled.setStatus('current')
dot11StationReAssociationTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11StationReAssociationTrapEnabled.setStatus('current')
dot11StationAuthenticationTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11StationAuthenticationTrapEnabled.setStatus('current')
dot11StationRequestFailTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11StationRequestFailTrapEnabled.setStatus('current')
dot11InterfaceBFailTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11InterfaceBFailTrapEnabled.setStatus('current')
dot11InterfaceAGFailTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11InterfaceAGFailTrapEnabled.setStatus('current')
dot1xMacAddrAuthSuccessTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xMacAddrAuthSuccessTrapEnabled.setStatus('current')
dot1xMacAddrAuthFailTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xMacAddrAuthFailTrapEnabled.setStatus('current')
dot1xAuthNotInitiatedTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xAuthNotInitiatedTrapEnabled.setStatus('current')
dot1xAuthSuccessTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xAuthSuccessTrapEnabled.setStatus('current')
dot1xAuthFailTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xAuthFailTrapEnabled.setStatus('current')
localMacAddrAuthSuccessTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: localMacAddrAuthSuccessTrapEnabled.setStatus('current')
localMacAddrAuthFailTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: localMacAddrAuthFailTrapEnabled.setStatus('current')
pppLogonFailTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppLogonFailTrapEnabled.setStatus('current')
iappStationRoamedFromTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iappStationRoamedFromTrapEnabled.setStatus('current')
iappStationRoamedToTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iappStationRoamedToTrapEnabled.setStatus('current')
iappContextDataSentTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: iappContextDataSentTrapEnabled.setStatus('current')
sntpServerFailTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sntpServerFailTrapEnabled.setStatus('current')
dot1xSuppAuthenticatedTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot1xSuppAuthenticatedTrapEnabled.setStatus('current')
dot11FailedTransmitsTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11FailedTransmitsTrapEnabled.setStatus('current')
dot11AckFailuresTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11AckFailuresTrapEnabled.setStatus('current')
dot11FcsErrorsTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11FcsErrorsTrapEnabled.setStatus('current')
rogueAPDetectedTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rogueAPDetectedTrapEnabled.setStatus('current')
possibleRogueAPDetectedTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 16, 4, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: possibleRogueAPDetectedTrapEnabled.setStatus('current')
enterpriseApSessionTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 17, 1), )
if mibBuilder.loadTexts: enterpriseApSessionTable.setStatus('current')
enterpriseApSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 17, 1, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "enterpriseApSessionIfIndex"), (0, "AP80-PRIVATE-MIB", "enterpriseApSessionStationAddres"))
if mibBuilder.loadTexts: enterpriseApSessionEntry.setStatus('current')
enterpriseApSessionIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 17, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: enterpriseApSessionIfIndex.setStatus('current')
enterpriseApSessionStationAddres = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 17, 1, 1, 2), MacAddress())
if mibBuilder.loadTexts: enterpriseApSessionStationAddres.setStatus('current')
enterpriseApSessionAuthenticated = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 17, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApSessionAuthenticated.setStatus('current')
enterpriseApSessionAssociated = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 17, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApSessionAssociated.setStatus('current')
enterpriseApSessionIsForwarding = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 17, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApSessionIsForwarding.setStatus('current')
enterpriseApSessionKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 17, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("staticWep", 2), ("dynamicWep", 3), ("wpaWep", 4), ("wpaTkip", 5), ("wpaAes", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApSessionKeyType.setStatus('current')
enterpriseApSessionAssociationId = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 17, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApSessionAssociationId.setStatus('current')
enterpriseApSessionLastAuthenticatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 17, 1, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApSessionLastAuthenticatedTime.setStatus('current')
enterpriseApSessionAssociatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 17, 1, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApSessionAssociatedTime.setStatus('current')
enterpriseApSessionLastAssociatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 17, 1, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApSessionLastAssociatedTime.setStatus('current')
enterpriseApSessionLastDisassociatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 17, 1, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApSessionLastDisassociatedTime.setStatus('current')
enterpriseApSessionTxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 17, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApSessionTxPacketCount.setStatus('current')
enterpriseApSessionRxPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 17, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApSessionRxPacketCount.setStatus('current')
enterpriseApSessionTxByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 17, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApSessionTxByteCount.setStatus('current')
enterpriseApSessionRxByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 17, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApSessionRxByteCount.setStatus('current')
enterpriseAPVapRadioTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 20, 1), )
if mibBuilder.loadTexts: enterpriseAPVapRadioTable.setStatus('current')
enterpriseAPVapRadioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 20, 1, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "enterpriseAPVapRadioIndex"))
if mibBuilder.loadTexts: enterpriseAPVapRadioEntry.setStatus('current')
enterpriseAPVapRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 20, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: enterpriseAPVapRadioIndex.setStatus('current')
enterpriseAPVapRadioState = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 20, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseAPVapRadioState.setStatus('current')
enterpriseAPVapRadioClosedSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 20, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseAPVapRadioClosedSystem.setStatus('current')
enterpriseAPVapRadioMaxAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 20, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseAPVapRadioMaxAssoc.setStatus('current')
enterpriseAPVapRadioTransmitKey = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 20, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseAPVapRadioTransmitKey.setStatus('current')
enterpriseAPVapRadioDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 20, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseAPVapRadioDescription.setStatus('current')
enterpriseAPVapRadioAuthTimeoutInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 20, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseAPVapRadioAuthTimeoutInterval.setStatus('current')
enterpriseAPVapRadioAssocTimeoutInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 20, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseAPVapRadioAssocTimeoutInterval.setStatus('current')
enterpriseAPVapRadioWPA2PMKSALifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 20, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseAPVapRadioWPA2PMKSALifeTime.setStatus('current')
enterpriseApRadioWdsTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 22, 1), )
if mibBuilder.loadTexts: enterpriseApRadioWdsTable.setStatus('current')
enterpriseApRadioWdsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 22, 1, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "enterpriseApRadioIndex"))
if mibBuilder.loadTexts: enterpriseApRadioWdsEntry.setStatus('current')
wdsApRole = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 22, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("roleAp", 1), ("roleBridgeMaster", 2), ("roleBridge", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsApRole.setStatus('current')
wdsChannelAutoSync = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 22, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsChannelAutoSync.setStatus('current')
wdsMasterSlaveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 22, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("master", 1), ("slave", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsMasterSlaveMode.setStatus('current')
enterpriseApRadioWdsPeerTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 22, 2), )
if mibBuilder.loadTexts: enterpriseApRadioWdsPeerTable.setStatus('current')
enterpriseApRadioWdsPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 22, 2, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "enterpriseApRadioIndex"), (0, "AP80-PRIVATE-MIB", "wdsPeerIndex"))
if mibBuilder.loadTexts: enterpriseApRadioWdsPeerEntry.setStatus('current')
wdsPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 22, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: wdsPeerIndex.setStatus('current')
wdsPeerBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 22, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsPeerBssid.setStatus('current')
enterpriseApWMMTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 1), )
if mibBuilder.loadTexts: enterpriseApWMMTable.setStatus('current')
enterpriseApWMMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 1, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "enterpriseApWMMModeIndex"))
if mibBuilder.loadTexts: enterpriseApWMMEntry.setStatus('current')
enterpriseApWMMModeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: enterpriseApWMMModeIndex.setStatus('current')
enterpriseApWMMMode = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("support", 2), ("required", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApWMMMode.setStatus('current')
enterpriseApWMMAckPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 2), )
if mibBuilder.loadTexts: enterpriseApWMMAckPolicyTable.setStatus('current')
enterpriseApWMMAckPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 2, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "enterpriseApWMMAckPolicyIndex"))
if mibBuilder.loadTexts: enterpriseApWMMAckPolicyEntry.setStatus('current')
enterpriseApWMMAckPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApWMMAckPolicyIndex.setStatus('current')
enterpriseApWMMACKPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("acknowledge", 1), ("NoAcknowledge", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApWMMACKPolicy.setStatus('current')
enterpriseApWMMBSSParamTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 3), )
if mibBuilder.loadTexts: enterpriseApWMMBSSParamTable.setStatus('current')
enterpriseApWMMBSSParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 3, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "enterpriseApWMMBSSParamIndex"))
if mibBuilder.loadTexts: enterpriseApWMMBSSParamEntry.setStatus('current')
enterpriseApWMMBSSParamIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApWMMBSSParamIndex.setStatus('current')
enterpriseApWMMBSSParamLogCwMin = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApWMMBSSParamLogCwMin.setStatus('current')
enterpriseApWMMBSSParamLogCwMax = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApWMMBSSParamLogCwMax.setStatus('current')
enterpriseApWMMBSSParamAIFSN = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApWMMBSSParamAIFSN.setStatus('current')
enterpriseApWMMBSSParamTXOPLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApWMMBSSParamTXOPLimit.setStatus('current')
enterpriseApWMMBSSParamAdmissionCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ebabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApWMMBSSParamAdmissionCtrl.setStatus('current')
enterpriseApWMMAPParamTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 4), )
if mibBuilder.loadTexts: enterpriseApWMMAPParamTable.setStatus('current')
enterpriseApWMMAPParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 4, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "enterpriseApWMMAPParamIndex"))
if mibBuilder.loadTexts: enterpriseApWMMAPParamEntry.setStatus('current')
enterpriseApWMMAPParamIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApWMMAPParamIndex.setStatus('current')
enterpriseApWMMAPParamLogCwMin = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApWMMAPParamLogCwMin.setStatus('current')
enterpriseApWMMAPParamLogCwMax = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApWMMAPParamLogCwMax.setStatus('current')
enterpriseApWMMAPParamAIFSN = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApWMMAPParamAIFSN.setStatus('current')
enterpriseApWMMAPParamTXOPLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApWMMAPParamTXOPLimit.setStatus('current')
enterpriseApWMMAPParamAdmissionCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 24, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ebabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApWMMAPParamAdmissionCtrl.setStatus('current')
enterpriseApSTPBridgeStatus = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 25, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSTPBridgeStatus.setStatus('current')
enterpriseApSTPBridgePriority = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 25, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSTPBridgePriority.setStatus('current')
enterpriseApSTPBridgeMaxAge = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 25, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(6, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSTPBridgeMaxAge.setStatus('current')
enterpriseApSTPHelloTime = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 25, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSTPHelloTime.setStatus('current')
enterpriseApSTPBridgeForwardingDelay = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 25, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSTPBridgeForwardingDelay.setStatus('current')
enterpriseApSTPRadioInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 25, 6))
enterpriseApSTPNodeTable = MibTable((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 25, 6, 1), )
if mibBuilder.loadTexts: enterpriseApSTPNodeTable.setStatus('current')
enterpriseApSTPNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 25, 6, 1, 1), ).setIndexNames((0, "AP80-PRIVATE-MIB", "enterpriseApSTPNodeIndex"))
if mibBuilder.loadTexts: enterpriseApSTPNodeEntry.setStatus('current')
enterpriseApSTPNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 25, 6, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: enterpriseApSTPNodeIndex.setStatus('current')
enterpriseApSTPNodeLinkPathCost = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 25, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSTPNodeLinkPathCost.setStatus('current')
enterpriseApSTPNodeLinkPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 25, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSTPNodeLinkPortPriority.setStatus('current')
enterpriseApSTPEthernetInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 25, 7))
enterpriseApSTPEthernetLinkPathCost = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 25, 7, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSTPEthernetLinkPathCost.setStatus('current')
enterpriseApSTPEthernetLinkPortPriority = MibScalar((1, 3, 6, 1, 4, 1, 14823, 2, 3, 2, 25, 7, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSTPEthernetLinkPortPriority.setStatus('current')
mibBuilder.exportSymbols("AP80-PRIVATE-MIB", dot11FailedTransmitsTrapEnabled=dot11FailedTransmitsTrapEnabled, enterpriseAPVapRadioTransmitKey=enterpriseAPVapRadioTransmitKey, sysRadiusServerChanged=sysRadiusServerChanged, dot11AuthenticationSupplicantTable=dot11AuthenticationSupplicantTable, enterpriseApRadioDataBeaconRate=enterpriseApRadioDataBeaconRate, enterpriseApFilterProtocolEntry=enterpriseApFilterProtocolEntry, dot11InterfaceBFail=dot11InterfaceBFail, dot11InterfaceAGFailTrapEnabled=dot11InterfaceAGFailTrapEnabled, netConfigHttpState=netConfigHttpState, dot1xAuthSuccessTrapEnabled=dot1xAuthSuccessTrapEnabled, enterpriseApSecurityWPAPreAuthentication=enterpriseApSecurityWPAPreAuthentication, dot11InterfaceAGFail=dot11InterfaceAGFail, netConfigHttpsState=netConfigHttpsState, enterpriseApRadioTable=enterpriseApRadioTable, enterpriseApSsh=enterpriseApSsh, enterpriseApSessionTable=enterpriseApSessionTable, enterpriseApVLANNativeId=enterpriseApVLANNativeId, portFlowCtrlCfg=portFlowCtrlCfg, dot11StationReAssociationTrapEnabled=dot11StationReAssociationTrapEnabled, enterpriseAPVapRadioState=enterpriseAPVapRadioState, enterpriseApSessionRxPacketCount=enterpriseApSessionRxPacketCount, enterpriseApWMMAPParamTable=enterpriseApWMMAPParamTable, enterpriseApSNMPCommunityReadWrite=enterpriseApSNMPCommunityReadWrite, enterpriseApSNTPDSTEndDay=enterpriseApSNTPDSTEndDay, enterpriseApSTPEthernetInterface=enterpriseApSTPEthernetInterface, enterpriseApWMMACKPolicy=enterpriseApWMMACKPolicy, dot118021xSessionKeyRefreshRate=dot118021xSessionKeyRefreshRate, dot11VapAuthenticationTable=dot11VapAuthenticationTable, pppLogonFailTrapEnabled=pppLogonFailTrapEnabled, enterpriseApSTPBridgeForwardingDelay=enterpriseApSTPBridgeForwardingDelay, dot11NotificationObjects=dot11NotificationObjects, sntpNotificationObjects=sntpNotificationObjects, enterpriseApWMMAPParamLogCwMax=enterpriseApWMMAPParamLogCwMax, enterpriseApSTP=enterpriseApSTP, enterpriseApSecuritySharedKeyLen=enterpriseApSecuritySharedKeyLen, sysConfigFileVersionChanged=sysConfigFileVersionChanged, dot1xAuthFail=dot1xAuthFail, enterpriseApSNTP=enterpriseApSNTP, dot11StationReAssociation=dot11StationReAssociation, enterpriseApWMMBSSParamAdmissionCtrl=enterpriseApWMMBSSParamAdmissionCtrl, enterpriseApRadioState=enterpriseApRadioState, sntpServerFail=sntpServerFail, enterpriseApWMMBSSParamEntry=enterpriseApWMMBSSParamEntry, iappStationRoamedTo=iappStationRoamedTo, iappStationRoamedFromTrapEnabled=iappStationRoamedFromTrapEnabled, possibleRogueAPDetectedTrapEnabled=possibleRogueAPDetectedTrapEnabled, portAutonegotiation=portAutonegotiation, portCapabilities=portCapabilities, dot11Vap8021xReauthenticationTimeout=dot11Vap8021xReauthenticationTimeout, sysNotifications=sysNotifications, dot11AuthenticationMACAddressFormat=dot11AuthenticationMACAddressFormat, enterpriseApPortMgnt=enterpriseApPortMgnt, dot1xMacAddrAuthSuccessTrapEnabled=dot1xMacAddrAuthSuccessTrapEnabled, enterpriseApSyslogServerPort=enterpriseApSyslogServerPort, dot1xAuthNotInitiated=dot1xAuthNotInitiated, enterpriseApSTPNodeIndex=enterpriseApSTPNodeIndex, uplinkPortMACAddrFilterStatus=uplinkPortMACAddrFilterStatus, enterpriseApFileTransferMgt=enterpriseApFileTransferMgt, deleteMacAddr=deleteMacAddr, dot11AuthenticationKey=dot11AuthenticationKey, enterpriseApSNTPDSTEndMonth=enterpriseApSNTPDSTEndMonth, enterpriseApRadioIndex=enterpriseApRadioIndex, enterpriseApSNMPTrapFilters=enterpriseApSNMPTrapFilters, dot11StationAssociationTrapEnabled=dot11StationAssociationTrapEnabled, dot1xAuthenticatorMacAddr=dot1xAuthenticatorMacAddr, dot11FcsErrorsTrapEnabled=dot11FcsErrorsTrapEnabled, sntpNotifications=sntpNotifications, enterpriseApSyslogServerState=enterpriseApSyslogServerState, enterpriseApWMMAPParamTXOPLimit=enterpriseApWMMAPParamTXOPLimit, restartOpCodeFile=restartOpCodeFile, lineIndex=lineIndex, transferStart=transferStart, enterpriseApSecurityWEPEnabled=enterpriseApSecurityWEPEnabled, dot11AckFailuresTrapEnabled=dot11AckFailuresTrapEnabled, enterpriseAPVapRadioIndex=enterpriseAPVapRadioIndex, enterpriseApRadioSuperMode=enterpriseApRadioSuperMode, lineSpeed=lineSpeed, enterpriseApRadioTransmitPower=enterpriseApRadioTransmitPower, enterpriseApSyslogLevel=enterpriseApSyslogLevel, enterpriseApSessionIsForwarding=enterpriseApSessionIsForwarding, userName=userName, enterpriseApWMMAPParamAdmissionCtrl=enterpriseApWMMAPParamAdmissionCtrl, portFlowCtrlStatus=portFlowCtrlStatus, enterpriseApSecurity=enterpriseApSecurity, sysSystemDown=sysSystemDown, enterpriseApRadioMaxAssoc=enterpriseApRadioMaxAssoc, enterpriseApWMMAPParamIndex=enterpriseApWMMAPParamIndex, enterpriseApSyslogServerIndex=enterpriseApSyslogServerIndex, dot11RequestType=dot11RequestType, enterpriseApRadioChannel=enterpriseApRadioChannel, dot11FilterStatus=dot11FilterStatus, enterpriseApRadioDataRate=enterpriseApRadioDataRate, enterpriseApWMMAckPolicyIndex=enterpriseApWMMAckPolicyIndex, enterpriseApSecurityWEPKeyType=enterpriseApSecurityWEPKeyType, dot11StationAssociation=dot11StationAssociation, enterpriseApWMMBSSParamTXOPLimit=enterpriseApWMMBSSParamTXOPLimit, nativeVlanIfIndex=nativeVlanIfIndex, localMacAddrAuthSuccess=localMacAddrAuthSuccess, enterpriseApWMMModeIndex=enterpriseApWMMModeIndex, dot11Vap8021xBroadcastKeyRefreshRate=dot11Vap8021xBroadcastKeyRefreshRate, enterpriseApRadioDescription=enterpriseApRadioDescription, TruthValue=TruthValue, enterpriseApFilterControl=enterpriseApFilterControl, nativeVlanSsidNumber=nativeVlanSsidNumber, enterpriseApSyslogServerEntry=enterpriseApSyslogServerEntry, dot1xMacAddrAuthSuccess=dot1xMacAddrAuthSuccess, enterpriseApSessionAssociatedTime=enterpriseApSessionAssociatedTime, wlsrOutDoorApMibModules=wlsrOutDoorApMibModules, sysNotificationObjects=sysNotificationObjects, enterpriseApSNTPPrimaryServer=enterpriseApSNTPPrimaryServer, sntpNotificationTree=sntpNotificationTree, enterpriseApWMMEntry=enterpriseApWMMEntry, dot11AuthenticationPort=dot11AuthenticationPort, enterpriseAPVapRadioWPA2PMKSALifeTime=enterpriseAPVapRadioWPA2PMKSALifeTime, enterpriseApSessionLastDisassociatedTime=enterpriseApSessionLastDisassociatedTime, nativeVlanVlanId=nativeVlanVlanId, enterpriseApSNMPCommunityReadOnly=enterpriseApSNMPCommunityReadOnly, status=status, sysConfigFileVersionChangedTrapEnabled=sysConfigFileVersionChangedTrapEnabled, enterpriseApWMMTable=enterpriseApWMMTable, enterpriseApNativeVlanTable=enterpriseApNativeVlanTable, enterpriseApSNMPTrapDestinationState=enterpriseApSNMPTrapDestinationState, enterpriseApWMMBSSParamAIFSN=enterpriseApWMMBSSParamAIFSN, dot11MACAuthenticationType=dot11MACAuthenticationType, dot11FilterEntry=dot11FilterEntry, dot11AuthenticationServerEntry=dot11AuthenticationServerEntry, dot11Notifications=dot11Notifications, dot118021xSuppPasswd=dot118021xSuppPasswd, enterpriseAPVapRadioEntry=enterpriseAPVapRadioEntry, rogueAPDetectedTrapEnabled=rogueAPDetectedTrapEnabled, swSerialNumber=swSerialNumber, enterpriseApSTPRadioInterface=enterpriseApSTPRadioInterface, sntpServerFailTrapEnabled=sntpServerFailTrapEnabled, enterpriseAPVapRadioAssocTimeoutInterval=enterpriseAPVapRadioAssocTimeoutInterval, enterpriseAPVapRadioTable=enterpriseAPVapRadioTable, enterpriseApWMMAckPolicyTable=enterpriseApWMMAckPolicyTable, enterpriseApVLANState=enterpriseApVLANState, enterpriseApWMMAPParamAIFSN=enterpriseApWMMAPParamAIFSN, enterpriseApDNS=enterpriseApDNS, dot11AuthenticationServerTable=dot11AuthenticationServerTable, enterpriseApFilterProtocolState=enterpriseApFilterProtocolState, enterpriseApSecurityWPAPSK=enterpriseApSecurityWPAPSK, wdsApRole=wdsApRole, fileType=fileType, enterpriseApSyslogConsoleState=enterpriseApSyslogConsoleState, aruba=aruba, dot11FilterAddress=dot11FilterAddress, wdsChannelAutoSync=wdsChannelAutoSync, enterpriseApSNTPDSTStartDay=enterpriseApSNTPDSTStartDay, enterpriseApSecurityWPACipherSuite=enterpriseApSecurityWPACipherSuite, enterpriseApSessionTxByteCount=enterpriseApSessionTxByteCount, dot11VapAuthMACAuthenticationType=dot11VapAuthMACAuthenticationType, dot11FilterDefault=dot11FilterDefault, enterpriseApRadioMICMode=enterpriseApRadioMICMode, enterpriseApRadioAntennaGainReduction=enterpriseApRadioAntennaGainReduction, enterpriseAPVapRadioMaxAssoc=enterpriseAPVapRadioMaxAssoc, dot11MacAddr=dot11MacAddr, enterpriseApWMMBSSParamLogCwMin=enterpriseApWMMBSSParamLogCwMin, enterpriseApSNTPState=enterpriseApSNTPState, enterpriseApSecurityWPAPmksaLifetime=enterpriseApSecurityWPAPmksaLifetime, enterpriseApRadioAntennaId=enterpriseApRadioAntennaId, dot118021xSuppState=dot118021xSuppState, enterpriseApWMMBSSParamTable=enterpriseApWMMBSSParamTable, enterpriseApSyslogServerIPAddress=enterpriseApSyslogServerIPAddress, dot11AuthenticationVLANIDFormat=dot11AuthenticationVLANIDFormat, dot11AuthenticationTimeout=dot11AuthenticationTimeout, enterpriseApFilterUplinkPortMACAddrFilter=enterpriseApFilterUplinkPortMACAddrFilter, enterpriseApSTPNodeTable=enterpriseApSTPNodeTable, enterpriseApNativeVlanEntry=enterpriseApNativeVlanEntry, enterpriseApSNMPTrapDestinationTable=enterpriseApSNMPTrapDestinationTable, dot11Station=dot11Station, wdsMasterSlaveMode=wdsMasterSlaveMode, enterpriseApSession=enterpriseApSession, dot11Vap8021xIndex=dot11Vap8021xIndex, enterpriseApSNTPSecondaryServer=enterpriseApSNTPSecondaryServer, enterpriseApSessionLastAssociatedTime=enterpriseApSessionLastAssociatedTime, restartControl=restartControl, enterpriseApSNMP=enterpriseApSNMP, enterpriseApSecurityEntry=enterpriseApSecurityEntry, enterpriseAPVapRadio=enterpriseAPVapRadio, wdsPeerIndex=wdsPeerIndex, enterpriseApRadioWdsTable=enterpriseApRadioWdsTable, pppLogonFail=pppLogonFail, enterpriseApRadioTurboMode=enterpriseApRadioTurboMode, enterpriseApSecurityWPAKeyType=enterpriseApSecurityWPAKeyType, enterpriseApSNMPTrapDestinationCommunity=enterpriseApSNMPTrapDestinationCommunity, uplinkPortMACAddr=uplinkPortMACAddr, enterpriseApRadio=enterpriseApRadio, enterpriseAPVapRadioClosedSystem=enterpriseAPVapRadioClosedSystem, enterpriseApAdminUser=enterpriseApAdminUser, dot11StationAuthenticationTrapEnabled=dot11StationAuthenticationTrapEnabled, enterpriseApFilterProtocolName=enterpriseApFilterProtocolName, enterpriseApDNSSecondaryServer=enterpriseApDNSSecondaryServer, enterpriseApSessionTxPacketCount=enterpriseApSessionTxPacketCount, enterpriseApSNTPDST=enterpriseApSNTPDST, portName=portName, lineParity=lineParity, wdsPeerBssid=wdsPeerBssid, enterpriseApSNMPTrapDestinationIP=enterpriseApSNMPTrapDestinationIP, uplinkPortMacAddrIndex=uplinkPortMacAddrIndex, enterpriseApDNSPrimaryServer=enterpriseApDNSPrimaryServer, dot11ApIpAddress=dot11ApIpAddress, enterpriseApRadioClosedSystem=enterpriseApRadioClosedSystem, enterpriseApFilterControlInterClientSTAsCommun=enterpriseApFilterControlInterClientSTAsCommun, dot118021xSuppUser=dot118021xSuppUser, dot1xAuthSuccess=dot1xAuthSuccess, enterpriseApWMMBSSParamLogCwMax=enterpriseApWMMBSSParamLogCwMax, lineStopBits=lineStopBits, sysNotificationTree=sysNotificationTree, localMacAddrAuthFailTrapEnabled=localMacAddrAuthFailTrapEnabled, lineDataBits=lineDataBits, dot11ReasonCode=dot11ReasonCode, enterpriseApRadioGMode=enterpriseApRadioGMode, enterpriseApRadioAntennaMode=enterpriseApRadioAntennaMode, iappStationRoamedFrom=iappStationRoamedFrom, dot11AuthenticationServerIndex=dot11AuthenticationServerIndex, transferType=transferType, fileServer=fileServer, enterpriseApAdminPassword=enterpriseApAdminPassword, localMacAddrAuthFail=localMacAddrAuthFail, enterpriseApSessionKeyType=enterpriseApSessionKeyType, enterpriseApAdmin=enterpriseApAdmin, enterpriseApSecurityWPAPSKType=enterpriseApSecurityWPAPSKType, enterpriseApSessionAssociationId=enterpriseApSessionAssociationId, enterpriseApWMMAckPolicyEntry=enterpriseApWMMAckPolicyEntry, netConfigHttpPort=netConfigHttpPort, uplinkPortMACAddrFilteringEntry=uplinkPortMACAddrFilteringEntry, portSpeedDpxCfg=portSpeedDpxCfg, iappContextDataSent=iappContextDataSent, enterpriseApSyslog=enterpriseApSyslog, enterpriseAPVapRadioAuthTimeoutInterval=enterpriseAPVapRadioAuthTimeoutInterval, enterpriseApSyslogServerTable=enterpriseApSyslogServerTable, enterpriseApRadioWdsEntry=enterpriseApRadioWdsEntry, enterpriseApSNTPTimezone=enterpriseApSNTPTimezone, sysSystemUpTrapEnabled=sysSystemUpTrapEnabled, dot118021xReauthenticationTimeout=dot118021xReauthenticationTimeout, enterpriseApSecurityAuthType=enterpriseApSecurityAuthType, enterpriseApSTPHelloTime=enterpriseApSTPHelloTime, enterpriseApFilterProtocolIndex=enterpriseApFilterProtocolIndex, srcFile=srcFile, enterpriseApSys=enterpriseApSys, enterpriseApRadioWdsPeerTable=enterpriseApRadioWdsPeerTable, enterpriseApSyslogState=enterpriseApSyslogState, dot1xAuthNotInitiatedTrapEnabled=dot1xAuthNotInitiatedTrapEnabled, password=password, lineTable=lineTable, uplinkPortMACAddrFilteringTable=uplinkPortMACAddrFilteringTable, MacAddress=MacAddress, enterpriseAPdot11=enterpriseAPdot11, enterpriseApSTPNodeEntry=enterpriseApSTPNodeEntry, enterpriseAPVapRadioDescription=enterpriseAPVapRadioDescription, enterpriseApSecurityWPACipher=enterpriseApSecurityWPACipher, dot11MACAuthenticationFilter=dot11MACAuthenticationFilter, enterpriseApRadioAntennaControlMethod=enterpriseApRadioAntennaControlMethod)
mibBuilder.exportSymbols("AP80-PRIVATE-MIB", enterpriseApWMMMode=enterpriseApWMMMode, enterpriseApFilterControlEthernet=enterpriseApFilterControlEthernet, dot11VapAuthMACAuthenticationTimeout=dot11VapAuthMACAuthenticationTimeout, enterpriseApRadioAntennaLocation=enterpriseApRadioAntennaLocation, netConfigHttpsPort=netConfigHttpsPort, enterpriseApSessionLastAuthenticatedTime=enterpriseApSessionLastAuthenticatedTime, dot118021xBroadcastKeyRefreshRate=dot118021xBroadcastKeyRefreshRate, enterpriseApSessionStationAddres=enterpriseApSessionStationAddres, enterpriseApWMMAPParamLogCwMin=enterpriseApWMMAPParamLogCwMin, enterpriseApSecurityTable=enterpriseApSecurityTable, portType=portType, enterpriseApRadioTransmitKey=enterpriseApRadioTransmitKey, enterpriseApIpMgt=enterpriseApIpMgt, netConfigDHCPState=netConfigDHCPState, dot1xSupplicantAuthenticated=dot1xSupplicantAuthenticated, enterpriseApSTPBridgePriority=enterpriseApSTPBridgePriority, dot11StationRequestFailTrapEnabled=dot11StationRequestFailTrapEnabled, dot11Vap8021xSessionKeyRefreshRate=dot11Vap8021xSessionKeyRefreshRate, enterpriseApWMMAPParamEntry=enterpriseApWMMAPParamEntry, dot11NotificationTree=dot11NotificationTree, dot1xSuppAuthenticatedTrapEnabled=dot1xSuppAuthenticatedTrapEnabled, portTable=portTable, enterpriseApVLAN=enterpriseApVLAN, portSpeedDpxStatus=portSpeedDpxStatus, enterpriseApFilterProtocolTable=enterpriseApFilterProtocolTable, netConfigIPAddress=netConfigIPAddress, enterpriseApSshServerEnabled=enterpriseApSshServerEnabled, enterpriseApRadioRogueApScanInterval=enterpriseApRadioRogueApScanInterval, sysSystemDownTrapEnabled=sysSystemDownTrapEnabled, enterpriseApSTPNodeLinkPathCost=enterpriseApSTPNodeLinkPathCost, enterpriseApSTPBridgeMaxAge=enterpriseApSTPBridgeMaxAge, dot11StationRequestFail=dot11StationRequestFail, enterpriseApSecurityIndex=enterpriseApSecurityIndex, dot11AuthenticationServer=dot11AuthenticationServer, enterpriseApFilterControlAPManage=enterpriseApFilterControlAPManage, lineEntry=lineEntry, netConfigDefaultGateway=netConfigDefaultGateway, swHardwareVer=swHardwareVer, enterpriseApSTPNodeLinkPortPriority=enterpriseApSTPNodeLinkPortPriority, dot11InterfaceBFailTrapEnabled=dot11InterfaceBFailTrapEnabled, arubaEnterpriseMibModules=arubaEnterpriseMibModules, dot1xMacAddrAuthFail=dot1xMacAddrAuthFail, enterpriseApSshTelnetServerEnabled=enterpriseApSshTelnetServerEnabled, enterpriseApLineMgnt=enterpriseApLineMgnt, enterpriseApSessionIfIndex=enterpriseApSessionIfIndex, enterpriseApSecurityWPAMode=enterpriseApSecurityWPAMode, swBootRomVer=swBootRomVer, dot1xAuthFailTrapEnabled=dot1xAuthFailTrapEnabled, enterpriseApRadioRTSThreshold=enterpriseApRadioRTSThreshold, iappContextDataSentTrapEnabled=iappContextDataSentTrapEnabled, dot118021xState=dot118021xState, dot118021xSuppIndex=dot118021xSuppIndex, enterpriseApSNMPTrapDestinationEntry=enterpriseApSNMPTrapDestinationEntry, enterpriseApRadioRogueApDetection=enterpriseApRadioRogueApDetection, dot11StationAuthentication=dot11StationAuthentication, enterpriseApRadioEntry=enterpriseApRadioEntry, enterpriseApSNTPDSTStartMonth=enterpriseApSNTPDSTStartMonth, dot11AuthenticationSupplicantEntry=dot11AuthenticationSupplicantEntry, enterpriseApWMMBSSParamIndex=enterpriseApWMMBSSParamIndex, dot11AuthenticationAcctInterimUpdate=dot11AuthenticationAcctInterimUpdate, iappStationRoamedToTrapEnabled=iappStationRoamedToTrapEnabled, enterpriseApSessionAuthenticated=enterpriseApSessionAuthenticated, enterpriseApResetMgt=enterpriseApResetMgt, sysSystemUp=sysSystemUp, enterpriseApSessionRxByteCount=enterpriseApSessionRxByteCount, localMacAddrAuthSuccessTrapEnabled=localMacAddrAuthSuccessTrapEnabled, enterpriseApRadioBeaconInterval=enterpriseApRadioBeaconInterval, enterpriseApFilterProtocolISODesignator=enterpriseApFilterProtocolISODesignator, enterpriseApRadioWds=enterpriseApRadioWds, netConfigSubnetMask=netConfigSubnetMask, enterpriseApRadioRogueApScanNow=enterpriseApRadioRogueApScanNow, dot11AuthenticationRetransmit=dot11AuthenticationRetransmit, dot11AuthenticationAcctPort=dot11AuthenticationAcctPort, destFile=destFile, portEntry=portEntry, enterpriseApSshServerPort=enterpriseApSshServerPort, dot11FilterTable=dot11FilterTable, DisplayString=DisplayString, enterpriseApSessionAssociated=enterpriseApSessionAssociated, enterpriseApSNMPTrapDestinationIndex=enterpriseApSNMPTrapDestinationIndex, enterpriseApWMM=enterpriseApWMM, swOpCodeVer=swOpCodeVer, enterpriseApRadioRogueApScanDuration=enterpriseApRadioRogueApScanDuration, enterpriseApRadioFragmentLength=enterpriseApRadioFragmentLength, dot11AuthenticationEntry=dot11AuthenticationEntry, portIndex=portIndex, dot11Vap8021xState=dot11Vap8021xState, enterpriseApRadioWdsPeerEntry=enterpriseApRadioWdsPeerEntry, enterpriseApSessionEntry=enterpriseApSessionEntry, dot11VapAuthenticationEntry=dot11VapAuthenticationEntry, enterpriseApSTPBridgeStatus=enterpriseApSTPBridgeStatus, enterpriseApRadioAutoChannel=enterpriseApRadioAutoChannel, sysRadiusServerChangedTrapEnabled=sysRadiusServerChangedTrapEnabled, enterpriseApSTPEthernetLinkPathCost=enterpriseApSTPEthernetLinkPathCost, uplinkPortMACAddrFilterAddMac=uplinkPortMACAddrFilterAddMac, enterpriseApSTPEthernetLinkPortPriority=enterpriseApSTPEthernetLinkPortPriority, dot1xMacAddrAuthFailTrapEnabled=dot1xMacAddrAuthFailTrapEnabled, arubaAp=arubaAp)
