#
# PySNMP MIB module EXTREME-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EXTREME-BASE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:53:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
extremeAgent, = mibBuilder.importSymbols("EXTREME-BASE-MIB", "extremeAgent")
extremeVlanIfIndex, = mibBuilder.importSymbols("EXTREME-VLAN-MIB", "extremeVlanIfIndex")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, iso, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Bits, MibIdentifier, ModuleIdentity, Counter64, Counter32, NotificationType, Integer32, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Bits", "MibIdentifier", "ModuleIdentity", "Counter64", "Counter32", "NotificationType", "Integer32", "IpAddress", "TimeTicks")
RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
extremeQos = ModuleIdentity((1, 3, 6, 1, 4, 1, 1916, 1, 3))
if mibBuilder.loadTexts: extremeQos.setLastUpdated('0007240000Z')
if mibBuilder.loadTexts: extremeQos.setOrganization('Extreme Networks, Inc.')
extremeQosCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1))
extremeUnitPaceMode = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("normalEthernet", 2), ("lowLatency", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeUnitPaceMode.setStatus('deprecated')
extremeQosMode = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ingress", 1), ("egress", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeQosMode.setStatus('deprecated')
extremeQosUnconfigure = MibScalar((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeQosUnconfigure.setStatus('deprecated')
extremeQosProfileTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 6), )
if mibBuilder.loadTexts: extremeQosProfileTable.setStatus('current')
extremeQosProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 6, 1), ).setIndexNames((0, "EXTREME-QOS-MIB", "extremeQosProfileIndex"))
if mibBuilder.loadTexts: extremeQosProfileEntry.setStatus('current')
extremeQosProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosProfileIndex.setStatus('current')
extremeQosProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosProfileName.setStatus('current')
extremeQosProfileMinBw = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 6, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosProfileMinBw.setStatus('current')
extremeQosProfileMaxBw = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 6, 1, 4), Integer32().clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosProfileMaxBw.setStatus('current')
extremeQosProfilePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("low", 1), ("lowHi", 2), ("normal", 3), ("normalHi", 4), ("medium", 5), ("mediumHi", 6), ("high", 7), ("highHi", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosProfilePriority.setStatus('current')
extremeQosProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 6, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremeQosProfileRowStatus.setStatus('current')
extremeQosByVlanMappingTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 7), )
if mibBuilder.loadTexts: extremeQosByVlanMappingTable.setStatus('current')
extremeQosByVlanMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 7, 1), ).setIndexNames((0, "EXTREME-VLAN-MIB", "extremeVlanIfIndex"))
if mibBuilder.loadTexts: extremeQosByVlanMappingEntry.setStatus('current')
extremeQosByVlanMappingQosProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeQosByVlanMappingQosProfileIndex.setStatus('current')
extremePerPortQosTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 8), )
if mibBuilder.loadTexts: extremePerPortQosTable.setStatus('current')
extremePerPortQosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "EXTREME-QOS-MIB", "extremePerPortQosIndex"))
if mibBuilder.loadTexts: extremePerPortQosEntry.setStatus('current')
extremePerPortQosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremePerPortQosIndex.setStatus('current')
extremePerPortQosMinBw = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 8, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremePerPortQosMinBw.setStatus('current')
extremePerPortQosMaxBw = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 8, 1, 3), Integer32().clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremePerPortQosMaxBw.setStatus('current')
extremePerPortQosPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("low", 1), ("lowHi", 2), ("normal", 3), ("normalHi", 4), ("medium", 5), ("mediumHi", 6), ("high", 7), ("highHi", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremePerPortQosPriority.setStatus('current')
extremePerPortQosRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 8, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: extremePerPortQosRowStatus.setStatus('current')
extremeQosIngressPriorityTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 9), )
if mibBuilder.loadTexts: extremeQosIngressPriorityTable.setStatus('current')
extremeQosIngressPriorityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 9, 1), ).setIndexNames((0, "EXTREME-QOS-MIB", "extremeQosIngressPriorityIndex"))
if mibBuilder.loadTexts: extremeQosIngressPriorityEntry.setStatus('current')
extremeQosIngressPriorityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeQosIngressPriorityIndex.setStatus('current')
extremeQosIngressPriorityName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeQosIngressPriorityName.setStatus('current')
extremeQosIngressPriorityValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeQosIngressPriorityValue.setStatus('current')
extremeIQosProfileTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 10), )
if mibBuilder.loadTexts: extremeIQosProfileTable.setStatus('current')
extremeIQosProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 10, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "EXTREME-QOS-MIB", "extremeIQosProfileIndex"))
if mibBuilder.loadTexts: extremeIQosProfileEntry.setStatus('current')
extremeIQosProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeIQosProfileIndex.setStatus('current')
extremeIQosProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeIQosProfileName.setStatus('current')
extremeIQosProfileMinBwType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("percentage", 1), ("kbps", 2), ("mbps", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeIQosProfileMinBwType.setStatus('current')
extremeIQosProfileMinBw = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeIQosProfileMinBw.setStatus('current')
extremeIQosProfileMaxBwType = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("percentage", 1), ("kbps", 2), ("mbps", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeIQosProfileMaxBwType.setStatus('current')
extremeIQosProfileMaxBw = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 10, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeIQosProfileMaxBw.setStatus('current')
extremeIQosProfileRED = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 10, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeIQosProfileRED.setStatus('current')
extremeIQosProfileMaxBuf = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 10, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeIQosProfileMaxBuf.setStatus('current')
extremeIQosByVlanMappingTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 11), )
if mibBuilder.loadTexts: extremeIQosByVlanMappingTable.setStatus('current')
extremeIQosByVlanMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 11, 1), ).setIndexNames((0, "EXTREME-VLAN-MIB", "extremeVlanIfIndex"))
if mibBuilder.loadTexts: extremeIQosByVlanMappingEntry.setStatus('current')
extremeIQosByVlanMappingIQosProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 3, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeIQosByVlanMappingIQosProfileIndex.setStatus('current')
mibBuilder.exportSymbols("EXTREME-QOS-MIB", extremeIQosProfileName=extremeIQosProfileName, extremeQosProfileMinBw=extremeQosProfileMinBw, extremeQosIngressPriorityName=extremeQosIngressPriorityName, extremeIQosProfileMaxBw=extremeIQosProfileMaxBw, PYSNMP_MODULE_ID=extremeQos, extremeQosMode=extremeQosMode, extremeQosProfileIndex=extremeQosProfileIndex, extremeQosIngressPriorityEntry=extremeQosIngressPriorityEntry, extremeIQosByVlanMappingTable=extremeIQosByVlanMappingTable, extremeQosProfileRowStatus=extremeQosProfileRowStatus, extremeQosProfileMaxBw=extremeQosProfileMaxBw, extremePerPortQosMaxBw=extremePerPortQosMaxBw, extremeIQosProfileIndex=extremeIQosProfileIndex, extremeQosByVlanMappingEntry=extremeQosByVlanMappingEntry, extremeQosProfileEntry=extremeQosProfileEntry, extremeQosProfileTable=extremeQosProfileTable, extremePerPortQosIndex=extremePerPortQosIndex, extremePerPortQosPriority=extremePerPortQosPriority, extremeIQosProfileMinBwType=extremeIQosProfileMinBwType, extremeIQosByVlanMappingEntry=extremeIQosByVlanMappingEntry, extremeQosIngressPriorityValue=extremeQosIngressPriorityValue, extremeIQosProfileMaxBwType=extremeIQosProfileMaxBwType, extremeIQosByVlanMappingIQosProfileIndex=extremeIQosByVlanMappingIQosProfileIndex, extremeQosIngressPriorityTable=extremeQosIngressPriorityTable, extremePerPortQosEntry=extremePerPortQosEntry, extremeQosCommon=extremeQosCommon, extremeIQosProfileMaxBuf=extremeIQosProfileMaxBuf, extremeQosProfilePriority=extremeQosProfilePriority, extremeIQosProfileEntry=extremeIQosProfileEntry, extremePerPortQosTable=extremePerPortQosTable, extremeQosProfileName=extremeQosProfileName, extremeQosUnconfigure=extremeQosUnconfigure, extremeQosIngressPriorityIndex=extremeQosIngressPriorityIndex, extremePerPortQosRowStatus=extremePerPortQosRowStatus, extremeQosByVlanMappingQosProfileIndex=extremeQosByVlanMappingQosProfileIndex, extremePerPortQosMinBw=extremePerPortQosMinBw, extremeQosByVlanMappingTable=extremeQosByVlanMappingTable, extremeIQosProfileMinBw=extremeIQosProfileMinBw, extremeUnitPaceMode=extremeUnitPaceMode, extremeIQosProfileRED=extremeIQosProfileRED, extremeQos=extremeQos, extremeIQosProfileTable=extremeIQosProfileTable)
