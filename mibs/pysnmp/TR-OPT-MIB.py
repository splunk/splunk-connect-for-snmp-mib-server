#
# PySNMP MIB module TR-OPT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TR-OPT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:19:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, iso, Counter32, IpAddress, enterprises, Bits, ObjectIdentity, MibIdentifier, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Integer32, Unsigned32, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "Counter32", "IpAddress", "enterprises", "Bits", "ObjectIdentity", "MibIdentifier", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Integer32", "Unsigned32", "ModuleIdentity", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
codex = MibIdentifier((1, 3, 6, 1, 4, 1, 449))
cdxProductSpecific = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2))
cdx6500 = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1))
cdx6500Configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2))
cdx6500CfgProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1))
cdx6500PCTPortProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1))
cdx6500Statistics = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3))
cdx6500StatProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1))
cdx6500PSTPortProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1))
cdx6500Controls = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 4))
class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

class DisplayString(OctetString):
    pass

cdx6500PPCTdot5PortTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 9), )
if mibBuilder.loadTexts: cdx6500PPCTdot5PortTable.setStatus('mandatory')
cdx6500PPCTdot5PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 9, 1), ).setIndexNames((0, "TR-OPT-MIB", "cdx6500dot5IfIndex"))
if mibBuilder.loadTexts: cdx6500PPCTdot5PortEntry.setStatus('mandatory')
cdx6500dot5IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500dot5IfIndex.setStatus('mandatory')
cdx6500dot5LanCableType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 50))).clone(namedValues=NamedValues(("utp", 0), ("stp", 1), ("unknown", 3), ("newvalUtp", 50)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500dot5LanCableType.setStatus('mandatory')
cdx6500dot5PortMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 9, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500dot5PortMacAddress.setStatus('mandatory')
cdx6500dot5LocalRingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 9, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500dot5LocalRingNumber.setStatus('mandatory')
cdx6500dot5EarlyTokenRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 50))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1), ("newvalDisable", 50)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500dot5EarlyTokenRelease.setStatus('mandatory')
cdx6500dot5TransmitQueueLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500dot5TransmitQueueLimit.setStatus('mandatory')
cdx6500PPSTdot5PortTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 9), )
if mibBuilder.loadTexts: cdx6500PPSTdot5PortTable.setStatus('mandatory')
cdx6500PPSTdot5PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 9, 1), ).setIndexNames((0, "TR-OPT-MIB", "cdx6500dot5StatsIfIndex"))
if mibBuilder.loadTexts: cdx6500PPSTdot5PortEntry.setStatus('mandatory')
cdx6500dot5StatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500dot5StatsIfIndex.setStatus('mandatory')
cdx6500dot5StatsPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(28))).clone(namedValues=NamedValues(("tr", 28)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500dot5StatsPortType.setStatus('mandatory')
cdx6500dot5StatsDataBytesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500dot5StatsDataBytesRx.setStatus('mandatory')
cdx6500dot5StatsDataBytesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500dot5StatsDataBytesTx.setStatus('mandatory')
cdx6500dot5StatsFrameSizeExc = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 9, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500dot5StatsFrameSizeExc.setStatus('mandatory')
cdx6500dot5StatsShortFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 9, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500dot5StatsShortFrames.setStatus('mandatory')
cdx6500dot5StatsTransmitDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 9, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500dot5StatsTransmitDiscards.setStatus('mandatory')
cdx6500dot5StatsPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 9, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 4, 50))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("up", 3), ("down", 4), ("newvalDisabled", 50)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500dot5StatsPortStatus.setStatus('mandatory')
cdx6500dot5StatsLastStatReset = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 9, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500dot5StatsLastStatReset.setStatus('mandatory')
cdx6500dot5StatsClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 9, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: cdx6500dot5StatsClearStats.setStatus('mandatory')
mibBuilder.exportSymbols("TR-OPT-MIB", cdx6500dot5StatsDataBytesTx=cdx6500dot5StatsDataBytesTx, cdx6500Controls=cdx6500Controls, DisplayString=DisplayString, cdx6500PSTPortProtocolGroup=cdx6500PSTPortProtocolGroup, cdx6500dot5StatsClearStats=cdx6500dot5StatsClearStats, cdx6500=cdx6500, cdx6500Configuration=cdx6500Configuration, cdx6500dot5LanCableType=cdx6500dot5LanCableType, cdx6500StatProtocolGroup=cdx6500StatProtocolGroup, cdx6500dot5StatsFrameSizeExc=cdx6500dot5StatsFrameSizeExc, cdx6500dot5StatsPortType=cdx6500dot5StatsPortType, cdx6500dot5StatsIfIndex=cdx6500dot5StatsIfIndex, cdx6500dot5StatsLastStatReset=cdx6500dot5StatsLastStatReset, cdx6500PPSTdot5PortTable=cdx6500PPSTdot5PortTable, cdx6500PPSTdot5PortEntry=cdx6500PPSTdot5PortEntry, MacAddress=MacAddress, codex=codex, cdx6500dot5TransmitQueueLimit=cdx6500dot5TransmitQueueLimit, cdx6500dot5EarlyTokenRelease=cdx6500dot5EarlyTokenRelease, cdx6500PPCTdot5PortEntry=cdx6500PPCTdot5PortEntry, cdx6500CfgProtocolGroup=cdx6500CfgProtocolGroup, cdxProductSpecific=cdxProductSpecific, cdx6500dot5PortMacAddress=cdx6500dot5PortMacAddress, cdx6500dot5StatsShortFrames=cdx6500dot5StatsShortFrames, cdx6500Statistics=cdx6500Statistics, cdx6500dot5IfIndex=cdx6500dot5IfIndex, cdx6500dot5StatsPortStatus=cdx6500dot5StatsPortStatus, cdx6500dot5StatsTransmitDiscards=cdx6500dot5StatsTransmitDiscards, cdx6500PCTPortProtocolGroup=cdx6500PCTPortProtocolGroup, cdx6500dot5LocalRingNumber=cdx6500dot5LocalRingNumber, cdx6500PPCTdot5PortTable=cdx6500PPCTdot5PortTable, cdx6500dot5StatsDataBytesRx=cdx6500dot5StatsDataBytesRx)
