#
# PySNMP MIB module CISCO-LWAPP-DOT11-CCX-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-DOT11-CCX-CLIENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:48:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ciscoLwappDot11ClientCcxMIBObjects, cldcClientMacAddress = mibBuilder.importSymbols("CISCO-LWAPP-DOT11-CLIENT-MIB", "ciscoLwappDot11ClientCcxMIBObjects", "cldcClientMacAddress")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoMilliSeconds, = mibBuilder.importSymbols("CISCO-TC", "CiscoMilliSeconds")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, Gauge32, Bits, Integer32, Counter64, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Unsigned32, NotificationType, MibIdentifier, Counter32, ObjectIdentity, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Gauge32", "Bits", "Integer32", "Counter64", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Unsigned32", "NotificationType", "MibIdentifier", "Counter32", "ObjectIdentity", "ModuleIdentity")
TruthValue, DisplayString, MacAddress, TextualConvention, RowStatus, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "MacAddress", "TextualConvention", "RowStatus", "TimeStamp")
ciscoLwappDot11CcxClientMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3))
ciscoLwappDot11CcxClientMIB.setRevisions(('2006-04-10 00:00',))
if mibBuilder.loadTexts: ciscoLwappDot11CcxClientMIB.setLastUpdated('200606240000Z')
if mibBuilder.loadTexts: ciscoLwappDot11CcxClientMIB.setOrganization('Cisco Systems Inc.')
ciscoLwappDot11CcxClientMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0))
ciscoClientCcxEventLogRequest = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 1))
ciscoClientCcxEventLogResponse = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2))
ciscoClientCcxEventLogStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 3))
ciscoClientCcxStatsRequest = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 4))
ciscoClientCcxStatsResponse = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5))
class CcxEventLogResponseStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("ccx-event-log-successful", 1), ("ccx-event-log-refused", 2), ("ccx-event-log-incapable", 3))

class CcxEventLogDialogToken(TextualConvention, Unsigned32):
    status = 'current'

cldccEventLogsRequestTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 1, 1), )
if mibBuilder.loadTexts: cldccEventLogsRequestTable.setStatus('current')
cldccEventLogsRequestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 1, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccEventLogsRequestEntry.setStatus('current')
cldccEventLogsRequestLogType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 1, 1, 1, 1), Bits().clone(namedValues=NamedValues(("roaming", 0), ("rsna", 1), ("syslog", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cldccEventLogsRequestLogType.setStatus('current')
cldccEventLogsRequestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccEventLogsRequestRowStatus.setStatus('current')
cldccSysLogsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 1), )
if mibBuilder.loadTexts: cldccSysLogsTable.setStatus('current')
cldccSysLogsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CCX-CLIENT-MIB", "cldccSysLogsIndex"))
if mibBuilder.loadTexts: cldccSysLogsEntry.setStatus('current')
cldccSysLogsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cldccSysLogsIndex.setStatus('current')
cldccSysLogsTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccSysLogsTimeStamp.setStatus('current')
cldccSysLogsBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccSysLogsBuffer.setStatus('current')
cldccRoamingLogsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 2), )
if mibBuilder.loadTexts: cldccRoamingLogsTable.setStatus('current')
cldccRoamingLogsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CCX-CLIENT-MIB", "cldccRoamingLogsIndex"))
if mibBuilder.loadTexts: cldccRoamingLogsEntry.setStatus('current')
cldccRoamingLogsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccRoamingLogsIndex.setStatus('current')
cldccRoamingLogsTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 2, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccRoamingLogsTimeStamp.setStatus('current')
cldccRoamingLogsTargetSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 2, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccRoamingLogsTargetSSID.setStatus('current')
cldccRoamingLogsSourceSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 2, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccRoamingLogsSourceSSID.setStatus('current')
cldccRoamingLogsTransitionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 2, 1, 5), CiscoMilliSeconds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccRoamingLogsTransitionTime.setStatus('current')
cldccRoamingLogsTransitionReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("normal-roam-poor-link", 1), ("normal-roam-load-bal", 2), ("insufficient-capacity", 3), ("inf-directed-roam", 4), ("first-association-to-wlan", 5), ("roaming-from-cellular", 6), ("roaming-to-cellular", 7), ("normal-roam-better-ap", 8), ("disassociated-or-deauthenticated", 9), ("failed-8021x-eap-auth", 10), ("failed-8021x-4way-handshake", 11), ("many-replay-counters", 12), ("many-data-mic-failures", 13), ("many-mgt-mic-failures", 14), ("max-retransmissions-excedded", 15), ("excessive-interference", 16), ("many-broadcast-disassociations", 17), ("many-broadcast-deauth", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccRoamingLogsTransitionReason.setStatus('current')
cldccRoamingLogsTransitionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 51))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccRoamingLogsTransitionResult.setStatus('current')
cldccRsnaDataTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 3), )
if mibBuilder.loadTexts: cldccRsnaDataTable.setStatus('current')
cldccRsnaDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 3, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"), (0, "CISCO-LWAPP-DOT11-CCX-CLIENT-MIB", "cldccRsnaDataIndex"))
if mibBuilder.loadTexts: cldccRsnaDataEntry.setStatus('current')
cldccRsnaDataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cldccRsnaDataIndex.setStatus('current')
cldccRsnaDataTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 3, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccRsnaDataTimeStamp.setStatus('current')
cldccRsnaDataVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccRsnaDataVersion.setStatus('current')
cldccRsnaDataTargetSSID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 3, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccRsnaDataTargetSSID.setStatus('current')
cldccRsnaDataAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 255))).clone(namedValues=NamedValues(("ccx-dot1x-leap", 0), ("ccx-dot1x-eap-fast", 1), ("ccx-dot1x-eap-tls", 2), ("ccx-dot1x-eap-ttls", 3), ("ccx-dot1x-peap-v0", 4), ("ccx-dot1x-peap-v1", 5), ("ccx-dot1x-eap-md5", 6), ("ccx-dot1x-eap-sim", 7), ("ccx-dot1x-psk", 8), ("ccx-dot1x-unknown", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccRsnaDataAuthType.setStatus('current')
cldccRsnaDataResult = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccRsnaDataResult.setStatus('current')
cldccRsnaDataElemMultiCastOuis = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 3, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccRsnaDataElemMultiCastOuis.setStatus('current')
cldccRsnaDataElemUnicastCastOuis = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccRsnaDataElemUnicastCastOuis.setStatus('current')
cldccRsnaDataElemAuthOuis = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 3, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccRsnaDataElemAuthOuis.setStatus('current')
cldccRsnaDataElemCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 2, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccRsnaDataElemCapabilities.setStatus('current')
cldccStatsReqTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 4, 1), )
if mibBuilder.loadTexts: cldccStatsReqTable.setStatus('current')
cldccStatsReqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 4, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccStatsReqEntry.setStatus('current')
cldccStatsReqStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("incapable", 0), ("refused", 1), ("invalid-state", 2), ("failure", 3), ("success", 4), ("inprogress", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cldccStatsReqStatus.setStatus('current')
cldccStatsReqGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("dot11-meas", 0), ("security-meas", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cldccStatsReqGroupId.setStatus('current')
cldccStatsReqDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 4, 1, 1, 3), CiscoMilliSeconds()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cldccStatsReqDuration.setStatus('current')
cldccStatsReqRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 4, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cldccStatsReqRowStatus.setStatus('current')
cldccStatsDot11RespTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 1), )
if mibBuilder.loadTexts: cldccStatsDot11RespTable.setStatus('current')
cldccStatsDot11RespEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccStatsDot11RespEntry.setStatus('current')
cldccStatsRespTransmittedFragmentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespTransmittedFragmentCount.setStatus('current')
cldccStatsRespMulticastTransmittedFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespMulticastTransmittedFrameCount.setStatus('current')
cldccStatsRespFailedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespFailedCount.setStatus('current')
cldccStatsRespRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespRetryCount.setStatus('current')
cldccStatsRespMultipleRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespMultipleRetryCount.setStatus('current')
cldccStatsRespFrameDuplicateCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespFrameDuplicateCount.setStatus('current')
cldccStatsRespRtsSuccessCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespRtsSuccessCount.setStatus('current')
cldccStatsRespRtsFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespRtsFailureCount.setStatus('current')
cldccStatsRespAckFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespAckFailureCount.setStatus('current')
cldccStatsRespReceivedFragmentCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespReceivedFragmentCount.setStatus('current')
cldccStatsRespMulticastReceivedFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespMulticastReceivedFrameCount.setStatus('current')
cldccStatsRespFcsErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespFcsErrorCount.setStatus('current')
cldccStatsRespTransmittedFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespTransmittedFrameCount.setStatus('current')
cldccStatsSecurityRespTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 2), )
if mibBuilder.loadTexts: cldccStatsSecurityRespTable.setStatus('current')
cldccStatsSecurityRespEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccStatsSecurityRespEntry.setStatus('current')
cldccStatsRespSelectedPairwiseCipher = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespSelectedPairwiseCipher.setStatus('current')
cldccStatsRespTkipIcvErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespTkipIcvErrors.setStatus('current')
cldccStatsRespTkipLocalMicFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespTkipLocalMicFailures.setStatus('current')
cldccStatsRespCcmpReplays = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespCcmpReplays.setStatus('current')
cldccStatsRespCcmpDecrypErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespCcmpDecrypErrors.setStatus('current')
cldccStatsRespTkipReplays = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespTkipReplays.setStatus('current')
cldccStatsRespMgmtStatsTkipIcvErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespMgmtStatsTkipIcvErrors.setStatus('current')
cldccStatsRespMgmtStatsTkipLocalMicFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespMgmtStatsTkipLocalMicFailures.setStatus('current')
cldccStatsRespMgmtStatsCcmpReplays = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespMgmtStatsCcmpReplays.setStatus('current')
cldccStatsRespMgmtStatsCcmpDecryptErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespMgmtStatsCcmpDecryptErrors.setStatus('current')
cldccStatsRespMgmtStatsTkipReplays = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespMgmtStatsTkipReplays.setStatus('current')
cldccStatsRespMgmtStatsTkipMhdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespMgmtStatsTkipMhdrErrors.setStatus('current')
cldccStatsRespMgmtStatsCcmpMhdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespMgmtStatsCcmpMhdrErrors.setStatus('current')
cldccStatsRespMgmtStatsBroadcastDisassociateCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespMgmtStatsBroadcastDisassociateCount.setStatus('current')
cldccStatsRespMgmtStatsBroadcastDeauthenticateCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespMgmtStatsBroadcastDeauthenticateCount.setStatus('current')
cldccStatsRespMgmtStatsBroadcastActionFrameCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 5, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccStatsRespMgmtStatsBroadcastActionFrameCount.setStatus('current')
cldccEventLogStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 3, 1), )
if mibBuilder.loadTexts: cldccEventLogStatusTable.setStatus('current')
cldccEventLogStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 3, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-DOT11-CLIENT-MIB", "cldcClientMacAddress"))
if mibBuilder.loadTexts: cldccEventLogStatusEntry.setStatus('current')
cldccRoamingLogsResponseStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 3, 1, 1, 1), CcxEventLogResponseStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccRoamingLogsResponseStatus.setStatus('current')
cldccRsnaLogsResponseStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 3, 1, 1, 2), CcxEventLogResponseStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccRsnaLogsResponseStatus.setStatus('current')
cldccSysLogsResponseStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 599, 3, 3, 0, 3, 1, 1, 3), CcxEventLogResponseStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cldccSysLogsResponseStatus.setStatus('current')
mibBuilder.exportSymbols("CISCO-LWAPP-DOT11-CCX-CLIENT-MIB", cldccSysLogsTable=cldccSysLogsTable, cldccStatsReqRowStatus=cldccStatsReqRowStatus, ciscoClientCcxEventLogStatus=ciscoClientCcxEventLogStatus, cldccStatsRespRtsSuccessCount=cldccStatsRespRtsSuccessCount, cldccStatsDot11RespTable=cldccStatsDot11RespTable, cldccRoamingLogsTransitionTime=cldccRoamingLogsTransitionTime, CcxEventLogResponseStatus=CcxEventLogResponseStatus, cldccStatsReqEntry=cldccStatsReqEntry, cldccStatsRespMgmtStatsCcmpDecryptErrors=cldccStatsRespMgmtStatsCcmpDecryptErrors, cldccStatsRespTkipLocalMicFailures=cldccStatsRespTkipLocalMicFailures, cldccSysLogsBuffer=cldccSysLogsBuffer, cldccRoamingLogsEntry=cldccRoamingLogsEntry, cldccStatsReqDuration=cldccStatsReqDuration, cldccStatsRespFrameDuplicateCount=cldccStatsRespFrameDuplicateCount, cldccRsnaDataResult=cldccRsnaDataResult, cldccRsnaDataElemMultiCastOuis=cldccRsnaDataElemMultiCastOuis, cldccStatsRespTkipReplays=cldccStatsRespTkipReplays, cldccStatsRespMgmtStatsTkipLocalMicFailures=cldccStatsRespMgmtStatsTkipLocalMicFailures, cldccRoamingLogsTargetSSID=cldccRoamingLogsTargetSSID, cldccSysLogsEntry=cldccSysLogsEntry, cldccStatsRespMgmtStatsCcmpReplays=cldccStatsRespMgmtStatsCcmpReplays, cldccStatsRespMgmtStatsCcmpMhdrErrors=cldccStatsRespMgmtStatsCcmpMhdrErrors, ciscoLwappDot11CcxClientMIB=ciscoLwappDot11CcxClientMIB, cldccStatsRespMulticastTransmittedFrameCount=cldccStatsRespMulticastTransmittedFrameCount, cldccStatsRespMgmtStatsTkipReplays=cldccStatsRespMgmtStatsTkipReplays, cldccSysLogsTimeStamp=cldccSysLogsTimeStamp, cldccRsnaDataIndex=cldccRsnaDataIndex, ciscoClientCcxEventLogResponse=ciscoClientCcxEventLogResponse, cldccStatsRespTkipIcvErrors=cldccStatsRespTkipIcvErrors, cldccRoamingLogsIndex=cldccRoamingLogsIndex, cldccStatsReqStatus=cldccStatsReqStatus, CcxEventLogDialogToken=CcxEventLogDialogToken, cldccStatsRespMulticastReceivedFrameCount=cldccStatsRespMulticastReceivedFrameCount, cldccEventLogStatusEntry=cldccEventLogStatusEntry, cldccStatsRespMgmtStatsTkipMhdrErrors=cldccStatsRespMgmtStatsTkipMhdrErrors, cldccStatsSecurityRespEntry=cldccStatsSecurityRespEntry, cldccEventLogsRequestEntry=cldccEventLogsRequestEntry, cldccStatsRespReceivedFragmentCount=cldccStatsRespReceivedFragmentCount, ciscoLwappDot11CcxClientMIBObjects=ciscoLwappDot11CcxClientMIBObjects, cldccStatsDot11RespEntry=cldccStatsDot11RespEntry, cldccEventLogStatusTable=cldccEventLogStatusTable, cldccRsnaDataAuthType=cldccRsnaDataAuthType, cldccRsnaDataElemAuthOuis=cldccRsnaDataElemAuthOuis, ciscoClientCcxStatsRequest=ciscoClientCcxStatsRequest, cldccStatsRespFailedCount=cldccStatsRespFailedCount, cldccRsnaDataElemUnicastCastOuis=cldccRsnaDataElemUnicastCastOuis, cldccStatsRespMgmtStatsBroadcastDisassociateCount=cldccStatsRespMgmtStatsBroadcastDisassociateCount, cldccStatsRespFcsErrorCount=cldccStatsRespFcsErrorCount, cldccStatsRespSelectedPairwiseCipher=cldccStatsRespSelectedPairwiseCipher, cldccStatsRespTransmittedFrameCount=cldccStatsRespTransmittedFrameCount, cldccRoamingLogsTimeStamp=cldccRoamingLogsTimeStamp, cldccRsnaDataTable=cldccRsnaDataTable, cldccStatsRespAckFailureCount=cldccStatsRespAckFailureCount, cldccRoamingLogsResponseStatus=cldccRoamingLogsResponseStatus, cldccStatsRespCcmpReplays=cldccStatsRespCcmpReplays, cldccStatsRespRetryCount=cldccStatsRespRetryCount, cldccRsnaDataElemCapabilities=cldccRsnaDataElemCapabilities, cldccStatsRespMgmtStatsBroadcastActionFrameCount=cldccStatsRespMgmtStatsBroadcastActionFrameCount, cldccSysLogsIndex=cldccSysLogsIndex, cldccRsnaDataTargetSSID=cldccRsnaDataTargetSSID, cldccRsnaDataTimeStamp=cldccRsnaDataTimeStamp, cldccRsnaDataVersion=cldccRsnaDataVersion, cldccStatsRespTransmittedFragmentCount=cldccStatsRespTransmittedFragmentCount, cldccRoamingLogsTransitionReason=cldccRoamingLogsTransitionReason, cldccStatsReqTable=cldccStatsReqTable, cldccStatsRespMgmtStatsTkipIcvErrors=cldccStatsRespMgmtStatsTkipIcvErrors, cldccRoamingLogsTable=cldccRoamingLogsTable, cldccStatsRespCcmpDecrypErrors=cldccStatsRespCcmpDecrypErrors, cldccEventLogsRequestTable=cldccEventLogsRequestTable, cldccStatsSecurityRespTable=cldccStatsSecurityRespTable, cldccStatsRespMultipleRetryCount=cldccStatsRespMultipleRetryCount, cldccStatsReqGroupId=cldccStatsReqGroupId, cldccStatsRespMgmtStatsBroadcastDeauthenticateCount=cldccStatsRespMgmtStatsBroadcastDeauthenticateCount, PYSNMP_MODULE_ID=ciscoLwappDot11CcxClientMIB, cldccSysLogsResponseStatus=cldccSysLogsResponseStatus, cldccRsnaDataEntry=cldccRsnaDataEntry, cldccStatsRespRtsFailureCount=cldccStatsRespRtsFailureCount, cldccRoamingLogsTransitionResult=cldccRoamingLogsTransitionResult, cldccRsnaLogsResponseStatus=cldccRsnaLogsResponseStatus, ciscoClientCcxEventLogRequest=ciscoClientCcxEventLogRequest, cldccRoamingLogsSourceSSID=cldccRoamingLogsSourceSSID, cldccEventLogsRequestLogType=cldccEventLogsRequestLogType, cldccEventLogsRequestRowStatus=cldccEventLogsRequestRowStatus, ciscoClientCcxStatsResponse=ciscoClientCcxStatsResponse)
