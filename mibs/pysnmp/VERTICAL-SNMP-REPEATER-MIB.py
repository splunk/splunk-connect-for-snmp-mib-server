#
# PySNMP MIB module VERTICAL-SNMP-REPEATER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VERTICAL-SNMP-REPEATER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:27:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
OwnerString, = mibBuilder.importSymbols("RFC1271-MIB", "OwnerString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, ModuleIdentity, Bits, NotificationType, Gauge32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, iso, ObjectIdentity, TimeTicks, Integer32, Counter64, Unsigned32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ModuleIdentity", "Bits", "NotificationType", "Gauge32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "iso", "ObjectIdentity", "TimeTicks", "Integer32", "Counter64", "Unsigned32", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
vertical, = mibBuilder.importSymbols("VERTICALT1-E1-MIB", "vertical")
vsnmpDot3RptrMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 4))
class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

vrptrBasicPackage = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 4, 1))
vrptrGroupInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 4, 1, 2))
vrptrPortInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 4, 1, 3))
vrptrAllRptrInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 4, 1, 4))
vrptrMonitorPackage = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 4, 2))
vrptrMonitorPortInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3))
vrptrMonitorAllRptrInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 4, 2, 4))
vrptrGroupTable = MibTable((1, 3, 6, 1, 4, 1, 2338, 4, 1, 2, 1), )
if mibBuilder.loadTexts: vrptrGroupTable.setStatus('mandatory')
vrptrGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 4, 1, 2, 1, 1), ).setIndexNames((0, "VERTICAL-SNMP-REPEATER-MIB", "vrptrGroupIndex"))
if mibBuilder.loadTexts: vrptrGroupEntry.setStatus('mandatory')
vrptrGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrGroupIndex.setStatus('mandatory')
vrptrGroupObjectID = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 2, 1, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrGroupObjectID.setStatus('mandatory')
vrptrGroupOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("operational", 2), ("malfunctioning", 3), ("notPresent", 4), ("underTest", 5), ("resetInProgress", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrGroupOperStatus.setStatus('mandatory')
vrptrGroupPortCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrGroupPortCapacity.setStatus('mandatory')
vrptrGroupSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrGroupSlotNumber.setStatus('mandatory')
vrptrGroupBroadcastDomainNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrGroupBroadcastDomainNumber.setStatus('mandatory')
vrptrGroupNetworkAdapterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrGroupNetworkAdapterNumber.setStatus('mandatory')
vrptrGroupLedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("none", 2), ("green", 3), ("red", 4), ("greenRed", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrGroupLedStatus.setStatus('mandatory')
vrptrGroupExternalPortCapacity = MibScalar((1, 3, 6, 1, 4, 1, 2338, 4, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrGroupExternalPortCapacity.setStatus('mandatory')
vrptrPortTable = MibTable((1, 3, 6, 1, 4, 1, 2338, 4, 1, 3, 1), )
if mibBuilder.loadTexts: vrptrPortTable.setStatus('mandatory')
vrptrPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 4, 1, 3, 1, 1), ).setIndexNames((0, "VERTICAL-SNMP-REPEATER-MIB", "vrptrPortGroupIndex"), (0, "VERTICAL-SNMP-REPEATER-MIB", "vrptrPortIndex"))
if mibBuilder.loadTexts: vrptrPortEntry.setStatus('mandatory')
vrptrPortGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrPortGroupIndex.setStatus('mandatory')
vrptrPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrPortIndex.setStatus('mandatory')
vrptrPortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrptrPortAdminStatus.setStatus('mandatory')
vrptrPortAutoPartitionState = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notAutoPartitioned", 1), ("autoPartitioned", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrPortAutoPartitionState.setStatus('mandatory')
vrptrPortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("operational", 1), ("notOperational", 2), ("notPresent", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrPortOperStatus.setStatus('mandatory')
vrptrPortRptrId = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrPortRptrId.setStatus('mandatory')
vrptrPortLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("link", 1), ("noLink", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrPortLinkState.setStatus('mandatory')
vrptrPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("mbps-10", 2), ("mbps-100", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrPortSpeed.setStatus('mandatory')
vrptrPortSpeedSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("speed-select-auto", 1), ("speed-select-10", 2), ("speed-select-100", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrPortSpeedSelect.setStatus('mandatory')
vrptrPortDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("half", 2), ("full", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrPortDuplex.setStatus('mandatory')
vrptrPortDuplexSelect = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("duplex-select-auto", 1), ("duplex-select-half", 2), ("duplex-select-full", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrPortDuplexSelect.setStatus('mandatory')
vrptrPortPolarity = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("straight", 2), ("crossed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrPortPolarity.setStatus('mandatory')
vrptrInfoTable = MibTable((1, 3, 6, 1, 4, 1, 2338, 4, 1, 4, 1), )
if mibBuilder.loadTexts: vrptrInfoTable.setStatus('mandatory')
vrptrInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 4, 1, 4, 1, 1), ).setIndexNames((0, "VERTICAL-SNMP-REPEATER-MIB", "vrptrInfoId"))
if mibBuilder.loadTexts: vrptrInfoEntry.setStatus('mandatory')
vrptrInfoId = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrInfoId.setStatus('mandatory')
vrptrInfoRptrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("tenMb", 2), ("onehundredMbClassI", 3), ("onehundredMbClassII", 4), ("tenMbOrOnehundredMb", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrInfoRptrType.setStatus('mandatory')
vrptrInfoOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("ok", 2), ("failure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrInfoOperStatus.setStatus('mandatory')
vrptrInfoReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noReset", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vrptrInfoReset.setStatus('mandatory')
vrptrInfoPartitionedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 4, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrInfoPartitionedPorts.setStatus('mandatory')
vrptrInfoLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 1, 4, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrInfoLastChange.setStatus('mandatory')
vrptrMonitorPortTable = MibTable((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1), )
if mibBuilder.loadTexts: vrptrMonitorPortTable.setStatus('mandatory')
vrptrMonitorPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1), ).setIndexNames((0, "VERTICAL-SNMP-REPEATER-MIB", "vrptrMonitorPortGroupIndex"), (0, "VERTICAL-SNMP-REPEATER-MIB", "vrptrMonitorPortIndex"))
if mibBuilder.loadTexts: vrptrMonitorPortEntry.setStatus('mandatory')
vrptrMonitorPortGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortGroupIndex.setStatus('mandatory')
vrptrMonitorPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortIndex.setStatus('mandatory')
vrptrMonitorPortReadableFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortReadableFrames.setStatus('mandatory')
vrptrMonitorPortReadableOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0))).clone(namedValues=NamedValues(("notSupported", -1), ("supported", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortReadableOctets.setStatus('mandatory')
vrptrMonitorPortFCSErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0))).clone(namedValues=NamedValues(("notSupported", -1), ("supported", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortFCSErrors.setStatus('mandatory')
vrptrMonitorPortAlignmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0))).clone(namedValues=NamedValues(("notSupported", -1), ("supported", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortAlignmentErrors.setStatus('mandatory')
vrptrMonitorPortFrameTooLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0))).clone(namedValues=NamedValues(("notSupported", -1), ("supported", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortFrameTooLongs.setStatus('mandatory')
vrptrMonitorPortShortEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortShortEvents.setStatus('mandatory')
vrptrMonitorPortRunts = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0))).clone(namedValues=NamedValues(("notSupported", -1), ("supported", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortRunts.setStatus('mandatory')
vrptrMonitorPortCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0))).clone(namedValues=NamedValues(("notSupported", -1), ("supported", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortCollisions.setStatus('mandatory')
vrptrMonitorPortLateEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortLateEvents.setStatus('mandatory')
vrptrMonitorPortVeryLongEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortVeryLongEvents.setStatus('mandatory')
vrptrMonitorPortDataRateMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0))).clone(namedValues=NamedValues(("notSupported", -1), ("supported", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortDataRateMismatches.setStatus('mandatory')
vrptrMonitorPortAutoPartitions = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortAutoPartitions.setStatus('mandatory')
vrptrMonitorPortTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortTotalErrors.setStatus('mandatory')
vrptrMonitorPortLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 16), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortLastChange.setStatus('mandatory')
vrptrMonitorPortSentFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortSentFrames.setStatus('mandatory')
vrptrMonitorPortSentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortSentOctets.setStatus('mandatory')
vrptrMonitorPortDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortDroppedFrames.setStatus('mandatory')
vrptrMonitorPortOtherErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortOtherErrors.setStatus('mandatory')
vrptrMonitor100PortTable = MibTable((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 2), )
if mibBuilder.loadTexts: vrptrMonitor100PortTable.setStatus('mandatory')
vrptrMonitor100PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 2, 1), ).setIndexNames((0, "VERTICAL-SNMP-REPEATER-MIB", "vrptrMonitorPortGroupIndex"), (0, "VERTICAL-SNMP-REPEATER-MIB", "vrptrMonitorPortIndex"))
if mibBuilder.loadTexts: vrptrMonitor100PortEntry.setStatus('mandatory')
vrptrMonitorPortIsolates = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortIsolates.setStatus('mandatory')
vrptrMonitorPortSymbolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortSymbolErrors.setStatus('mandatory')
vrptrMonitorPortUpper32Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortUpper32Octets.setStatus('mandatory')
vrptrMonitorPortUpper32SentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonitorPortUpper32SentOctets.setStatus('mandatory')
vrptrMonTable = MibTable((1, 3, 6, 1, 4, 1, 2338, 4, 2, 4, 1), )
if mibBuilder.loadTexts: vrptrMonTable.setStatus('mandatory')
vrptrMonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 4, 2, 4, 1, 1), ).setIndexNames((0, "VERTICAL-SNMP-REPEATER-MIB", "vrptrInfoId"))
if mibBuilder.loadTexts: vrptrMonEntry.setStatus('mandatory')
vrptrMonTxCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0))).clone(namedValues=NamedValues(("notSupported", -1), ("supported", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonTxCollisions.setStatus('mandatory')
vrptrMonTotalFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonTotalFrames.setStatus('mandatory')
vrptrMonTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonTotalErrors.setStatus('mandatory')
vrptrMonTotalOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(-1, 0))).clone(namedValues=NamedValues(("notSupported", -1), ("supported", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonTotalOctets.setStatus('mandatory')
vrptrMon100Table = MibTable((1, 3, 6, 1, 4, 1, 2338, 4, 2, 4, 2), )
if mibBuilder.loadTexts: vrptrMon100Table.setStatus('mandatory')
vrptrMon100Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 4, 2, 4, 2, 1), ).setIndexNames((0, "VERTICAL-SNMP-REPEATER-MIB", "vrptrInfoId"))
if mibBuilder.loadTexts: vrptrMon100Entry.setStatus('mandatory')
vrptrMonUpper32TotalOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 4, 2, 4, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vrptrMonUpper32TotalOctets.setStatus('mandatory')
mibBuilder.exportSymbols("VERTICAL-SNMP-REPEATER-MIB", vrptrInfoRptrType=vrptrInfoRptrType, vrptrGroupSlotNumber=vrptrGroupSlotNumber, vrptrGroupNetworkAdapterNumber=vrptrGroupNetworkAdapterNumber, vrptrMonitorPortReadableOctets=vrptrMonitorPortReadableOctets, vrptrMonTxCollisions=vrptrMonTxCollisions, vrptrMonitorPortOtherErrors=vrptrMonitorPortOtherErrors, vrptrMonitorPortTotalErrors=vrptrMonitorPortTotalErrors, vrptrMonitorPortTable=vrptrMonitorPortTable, vrptrInfoLastChange=vrptrInfoLastChange, vrptrMonitorPortDataRateMismatches=vrptrMonitorPortDataRateMismatches, vrptrMonitorPortSymbolErrors=vrptrMonitorPortSymbolErrors, vrptrPortDuplex=vrptrPortDuplex, vrptrMonTotalErrors=vrptrMonTotalErrors, vrptrPortOperStatus=vrptrPortOperStatus, vrptrGroupEntry=vrptrGroupEntry, vrptrMonitorPortLastChange=vrptrMonitorPortLastChange, vrptrMon100Entry=vrptrMon100Entry, vrptrMonitorPortCollisions=vrptrMonitorPortCollisions, vrptrMonitorPackage=vrptrMonitorPackage, vrptrPortDuplexSelect=vrptrPortDuplexSelect, vrptrMonitorPortFrameTooLongs=vrptrMonitorPortFrameTooLongs, vrptrPortSpeed=vrptrPortSpeed, MacAddress=MacAddress, vrptrMonitorPortAutoPartitions=vrptrMonitorPortAutoPartitions, vrptrInfoReset=vrptrInfoReset, vrptrMonitorPortEntry=vrptrMonitorPortEntry, vrptrGroupExternalPortCapacity=vrptrGroupExternalPortCapacity, vrptrGroupOperStatus=vrptrGroupOperStatus, vrptrPortGroupIndex=vrptrPortGroupIndex, vrptrGroupLedStatus=vrptrGroupLedStatus, vrptrPortEntry=vrptrPortEntry, vrptrMonitorPortLateEvents=vrptrMonitorPortLateEvents, vrptrGroupIndex=vrptrGroupIndex, vrptrMonitorPortIndex=vrptrMonitorPortIndex, vrptrPortPolarity=vrptrPortPolarity, vrptrPortLinkState=vrptrPortLinkState, vrptrGroupInfo=vrptrGroupInfo, vrptrPortSpeedSelect=vrptrPortSpeedSelect, vrptrMonTotalFrames=vrptrMonTotalFrames, vrptrGroupBroadcastDomainNumber=vrptrGroupBroadcastDomainNumber, vrptrInfoOperStatus=vrptrInfoOperStatus, vrptrMonitorPortIsolates=vrptrMonitorPortIsolates, vrptrInfoEntry=vrptrInfoEntry, vrptrMonitorPortSentOctets=vrptrMonitorPortSentOctets, vrptrPortTable=vrptrPortTable, vrptrMon100Table=vrptrMon100Table, vrptrMonTotalOctets=vrptrMonTotalOctets, vrptrMonitorPortReadableFrames=vrptrMonitorPortReadableFrames, vrptrGroupObjectID=vrptrGroupObjectID, vrptrPortAutoPartitionState=vrptrPortAutoPartitionState, vrptrMonitorPortRunts=vrptrMonitorPortRunts, vrptrPortAdminStatus=vrptrPortAdminStatus, vrptrMonEntry=vrptrMonEntry, vrptrMonitorPortUpper32Octets=vrptrMonitorPortUpper32Octets, vrptrMonUpper32TotalOctets=vrptrMonUpper32TotalOctets, vrptrPortIndex=vrptrPortIndex, vrptrBasicPackage=vrptrBasicPackage, vsnmpDot3RptrMgt=vsnmpDot3RptrMgt, vrptrPortRptrId=vrptrPortRptrId, vrptrInfoId=vrptrInfoId, vrptrMonitorPortUpper32SentOctets=vrptrMonitorPortUpper32SentOctets, vrptrMonitorPortAlignmentErrors=vrptrMonitorPortAlignmentErrors, vrptrMonitorAllRptrInfo=vrptrMonitorAllRptrInfo, vrptrMonitorPortInfo=vrptrMonitorPortInfo, vrptrGroupPortCapacity=vrptrGroupPortCapacity, vrptrMonitorPortFCSErrors=vrptrMonitorPortFCSErrors, vrptrMonTable=vrptrMonTable, vrptrAllRptrInfo=vrptrAllRptrInfo, vrptrPortInfo=vrptrPortInfo, vrptrMonitor100PortTable=vrptrMonitor100PortTable, vrptrInfoPartitionedPorts=vrptrInfoPartitionedPorts, vrptrGroupTable=vrptrGroupTable, vrptrMonitorPortDroppedFrames=vrptrMonitorPortDroppedFrames, vrptrMonitorPortSentFrames=vrptrMonitorPortSentFrames, vrptrInfoTable=vrptrInfoTable, vrptrMonitorPortVeryLongEvents=vrptrMonitorPortVeryLongEvents, vrptrMonitorPortGroupIndex=vrptrMonitorPortGroupIndex, vrptrMonitor100PortEntry=vrptrMonitor100PortEntry, vrptrMonitorPortShortEvents=vrptrMonitorPortShortEvents)
