#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-AtmMpeMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-AtmMpeMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:19:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
Unsigned32, DisplayString, InterfaceIndex, Integer32, Counter32, StorageType, RowStatus = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Unsigned32", "DisplayString", "InterfaceIndex", "Integer32", "Counter32", "StorageType", "RowStatus")
Link, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "Link")
mscComponents, mscPassportMIBs = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscComponents", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Counter64, ModuleIdentity, Counter32, TimeTicks, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, iso, Integer32, IpAddress, Bits, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "ModuleIdentity", "Counter32", "TimeTicks", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "iso", "Integer32", "IpAddress", "Bits", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
atmMpeMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 65))
mscAtmMpe = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118))
mscAtmMpeRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 1), )
if mibBuilder.loadTexts: mscAtmMpeRowStatusTable.setStatus('mandatory')
mscAtmMpeRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmMpeMIB", "mscAtmMpeIndex"))
if mibBuilder.loadTexts: mscAtmMpeRowStatusEntry.setStatus('mandatory')
mscAtmMpeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmMpeRowStatus.setStatus('mandatory')
mscAtmMpeComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeComponentName.setStatus('mandatory')
mscAtmMpeStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeStorageType.setStatus('mandatory')
mscAtmMpeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: mscAtmMpeIndex.setStatus('mandatory')
mscAtmMpeCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 10), )
if mibBuilder.loadTexts: mscAtmMpeCidDataTable.setStatus('mandatory')
mscAtmMpeCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmMpeMIB", "mscAtmMpeIndex"))
if mibBuilder.loadTexts: mscAtmMpeCidDataEntry.setStatus('mandatory')
mscAtmMpeCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmMpeCustomerIdentifier.setStatus('mandatory')
mscAtmMpeIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 11), )
if mibBuilder.loadTexts: mscAtmMpeIfEntryTable.setStatus('mandatory')
mscAtmMpeIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmMpeMIB", "mscAtmMpeIndex"))
if mibBuilder.loadTexts: mscAtmMpeIfEntryEntry.setStatus('mandatory')
mscAtmMpeIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmMpeIfAdminStatus.setStatus('mandatory')
mscAtmMpeIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 11, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeIfIndex.setStatus('mandatory')
mscAtmMpeProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 12), )
if mibBuilder.loadTexts: mscAtmMpeProvTable.setStatus('mandatory')
mscAtmMpeProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmMpeMIB", "mscAtmMpeIndex"))
if mibBuilder.loadTexts: mscAtmMpeProvEntry.setStatus('mandatory')
mscAtmMpeMaxTransmissionUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(256, 9188)).clone(9188)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmMpeMaxTransmissionUnit.setStatus('mandatory')
mscAtmMpeEncapType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("llcEncap", 1), ("ipVcEncap", 2), ("ipxVcEncap", 3))).clone('llcEncap')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmMpeEncapType.setStatus('mandatory')
mscAtmMpeIlsForwarder = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 12, 1, 3), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmMpeIlsForwarder.setStatus('mandatory')
mscAtmMpeMediaProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 13), )
if mibBuilder.loadTexts: mscAtmMpeMediaProvTable.setStatus('mandatory')
mscAtmMpeMediaProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmMpeMIB", "mscAtmMpeIndex"))
if mibBuilder.loadTexts: mscAtmMpeMediaProvEntry.setStatus('mandatory')
mscAtmMpeLinkToProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 13, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmMpeLinkToProtocolPort.setStatus('mandatory')
mscAtmMpeStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 14), )
if mibBuilder.loadTexts: mscAtmMpeStateTable.setStatus('mandatory')
mscAtmMpeStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmMpeMIB", "mscAtmMpeIndex"))
if mibBuilder.loadTexts: mscAtmMpeStateEntry.setStatus('mandatory')
mscAtmMpeAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeAdminState.setStatus('mandatory')
mscAtmMpeOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeOperationalState.setStatus('mandatory')
mscAtmMpeUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeUsageState.setStatus('mandatory')
mscAtmMpeOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 15), )
if mibBuilder.loadTexts: mscAtmMpeOperStatusTable.setStatus('mandatory')
mscAtmMpeOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 15, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmMpeMIB", "mscAtmMpeIndex"))
if mibBuilder.loadTexts: mscAtmMpeOperStatusEntry.setStatus('mandatory')
mscAtmMpeSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeSnmpOperStatus.setStatus('mandatory')
mscAtmMpeAc = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2))
mscAtmMpeAcRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 1), )
if mibBuilder.loadTexts: mscAtmMpeAcRowStatusTable.setStatus('mandatory')
mscAtmMpeAcRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmMpeMIB", "mscAtmMpeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmMpeMIB", "mscAtmMpeAcIndex"))
if mibBuilder.loadTexts: mscAtmMpeAcRowStatusEntry.setStatus('mandatory')
mscAtmMpeAcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmMpeAcRowStatus.setStatus('mandatory')
mscAtmMpeAcComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeAcComponentName.setStatus('mandatory')
mscAtmMpeAcStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeAcStorageType.setStatus('mandatory')
mscAtmMpeAcIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: mscAtmMpeAcIndex.setStatus('mandatory')
mscAtmMpeAcProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 10), )
if mibBuilder.loadTexts: mscAtmMpeAcProvTable.setStatus('mandatory')
mscAtmMpeAcProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmMpeMIB", "mscAtmMpeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmMpeMIB", "mscAtmMpeAcIndex"))
if mibBuilder.loadTexts: mscAtmMpeAcProvEntry.setStatus('mandatory')
mscAtmMpeAcAtmConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmMpeAcAtmConnection.setStatus('mandatory')
mscAtmMpeAcIpCoS = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmMpeAcIpCoS.setStatus('mandatory')
mscAtmMpeAcStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 11), )
if mibBuilder.loadTexts: mscAtmMpeAcStateTable.setStatus('mandatory')
mscAtmMpeAcStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmMpeMIB", "mscAtmMpeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmMpeMIB", "mscAtmMpeAcIndex"))
if mibBuilder.loadTexts: mscAtmMpeAcStateEntry.setStatus('mandatory')
mscAtmMpeAcAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeAcAdminState.setStatus('mandatory')
mscAtmMpeAcOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeAcOperationalState.setStatus('mandatory')
mscAtmMpeAcUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeAcUsageState.setStatus('mandatory')
mscAtmMpeAcOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 12), )
if mibBuilder.loadTexts: mscAtmMpeAcOperTable.setStatus('mandatory')
mscAtmMpeAcOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmMpeMIB", "mscAtmMpeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmMpeMIB", "mscAtmMpeAcIndex"))
if mibBuilder.loadTexts: mscAtmMpeAcOperEntry.setStatus('mandatory')
mscAtmMpeAcSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeAcSpeed.setStatus('mandatory')
mscAtmMpeAcStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 13), )
if mibBuilder.loadTexts: mscAtmMpeAcStatsTable.setStatus('mandatory')
mscAtmMpeAcStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmMpeMIB", "mscAtmMpeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmMpeMIB", "mscAtmMpeAcIndex"))
if mibBuilder.loadTexts: mscAtmMpeAcStatsEntry.setStatus('mandatory')
mscAtmMpeAcOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeAcOutPackets.setStatus('mandatory')
mscAtmMpeAcOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeAcOutOctets.setStatus('mandatory')
mscAtmMpeAcOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeAcOutDiscards.setStatus('mandatory')
mscAtmMpeAcInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeAcInPackets.setStatus('mandatory')
mscAtmMpeAcInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeAcInOctets.setStatus('mandatory')
mscAtmMpeAcInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeAcInUnknownProtos.setStatus('mandatory')
mscAtmMpeAcInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 118, 2, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmMpeAcInErrors.setStatus('mandatory')
atmMpeGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 65, 1))
atmMpeGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 65, 1, 1))
atmMpeGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 65, 1, 1, 3))
atmMpeGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 65, 1, 1, 3, 2))
atmMpeCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 65, 3))
atmMpeCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 65, 3, 1))
atmMpeCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 65, 3, 1, 3))
atmMpeCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 65, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-AtmMpeMIB", mscAtmMpeAcIpCoS=mscAtmMpeAcIpCoS, mscAtmMpeIfIndex=mscAtmMpeIfIndex, mscAtmMpeAcOperEntry=mscAtmMpeAcOperEntry, mscAtmMpeAdminState=mscAtmMpeAdminState, mscAtmMpeIfEntryEntry=mscAtmMpeIfEntryEntry, mscAtmMpeIlsForwarder=mscAtmMpeIlsForwarder, mscAtmMpeAcRowStatus=mscAtmMpeAcRowStatus, atmMpeGroup=atmMpeGroup, mscAtmMpeStateEntry=mscAtmMpeStateEntry, mscAtmMpeIfEntryTable=mscAtmMpeIfEntryTable, mscAtmMpeAcOutDiscards=mscAtmMpeAcOutDiscards, mscAtmMpeLinkToProtocolPort=mscAtmMpeLinkToProtocolPort, mscAtmMpeAcSpeed=mscAtmMpeAcSpeed, mscAtmMpeRowStatusEntry=mscAtmMpeRowStatusEntry, mscAtmMpeMaxTransmissionUnit=mscAtmMpeMaxTransmissionUnit, atmMpeCapabilities=atmMpeCapabilities, mscAtmMpeProvEntry=mscAtmMpeProvEntry, mscAtmMpeAcStatsTable=mscAtmMpeAcStatsTable, mscAtmMpeAcRowStatusEntry=mscAtmMpeAcRowStatusEntry, mscAtmMpeAcOutPackets=mscAtmMpeAcOutPackets, mscAtmMpeAcIndex=mscAtmMpeAcIndex, mscAtmMpeMediaProvEntry=mscAtmMpeMediaProvEntry, mscAtmMpeAcAtmConnection=mscAtmMpeAcAtmConnection, mscAtmMpeAcInPackets=mscAtmMpeAcInPackets, mscAtmMpeAcInOctets=mscAtmMpeAcInOctets, atmMpeMIB=atmMpeMIB, mscAtmMpeIndex=mscAtmMpeIndex, mscAtmMpeCustomerIdentifier=mscAtmMpeCustomerIdentifier, atmMpeGroupCA=atmMpeGroupCA, atmMpeCapabilitiesCA=atmMpeCapabilitiesCA, mscAtmMpeAcStateEntry=mscAtmMpeAcStateEntry, mscAtmMpeOperStatusTable=mscAtmMpeOperStatusTable, atmMpeGroupCA02A=atmMpeGroupCA02A, mscAtmMpeEncapType=mscAtmMpeEncapType, mscAtmMpeAcStorageType=mscAtmMpeAcStorageType, mscAtmMpeAc=mscAtmMpeAc, mscAtmMpeOperStatusEntry=mscAtmMpeOperStatusEntry, mscAtmMpeCidDataEntry=mscAtmMpeCidDataEntry, mscAtmMpeProvTable=mscAtmMpeProvTable, mscAtmMpeOperationalState=mscAtmMpeOperationalState, mscAtmMpeComponentName=mscAtmMpeComponentName, mscAtmMpeStorageType=mscAtmMpeStorageType, mscAtmMpeStateTable=mscAtmMpeStateTable, mscAtmMpeAcOperationalState=mscAtmMpeAcOperationalState, mscAtmMpeRowStatus=mscAtmMpeRowStatus, mscAtmMpeAcStateTable=mscAtmMpeAcStateTable, mscAtmMpeAcOutOctets=mscAtmMpeAcOutOctets, mscAtmMpeAcInErrors=mscAtmMpeAcInErrors, mscAtmMpeSnmpOperStatus=mscAtmMpeSnmpOperStatus, atmMpeCapabilitiesCA02A=atmMpeCapabilitiesCA02A, mscAtmMpeRowStatusTable=mscAtmMpeRowStatusTable, mscAtmMpeUsageState=mscAtmMpeUsageState, mscAtmMpeAcInUnknownProtos=mscAtmMpeAcInUnknownProtos, mscAtmMpe=mscAtmMpe, mscAtmMpeCidDataTable=mscAtmMpeCidDataTable, mscAtmMpeAcComponentName=mscAtmMpeAcComponentName, mscAtmMpeAcOperTable=mscAtmMpeAcOperTable, mscAtmMpeAcUsageState=mscAtmMpeAcUsageState, mscAtmMpeAcStatsEntry=mscAtmMpeAcStatsEntry, mscAtmMpeMediaProvTable=mscAtmMpeMediaProvTable, mscAtmMpeAcProvEntry=mscAtmMpeAcProvEntry, atmMpeGroupCA02=atmMpeGroupCA02, atmMpeCapabilitiesCA02=atmMpeCapabilitiesCA02, mscAtmMpeIfAdminStatus=mscAtmMpeIfAdminStatus, mscAtmMpeAcRowStatusTable=mscAtmMpeAcRowStatusTable, mscAtmMpeAcAdminState=mscAtmMpeAcAdminState, mscAtmMpeAcProvTable=mscAtmMpeAcProvTable)
