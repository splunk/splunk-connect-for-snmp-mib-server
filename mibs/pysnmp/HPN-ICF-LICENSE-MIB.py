#
# PySNMP MIB module HPN-ICF-LICENSE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-LICENSE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:27:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
PhysicalIndex, PhysicalIndexOrZero = mibBuilder.importSymbols("ENTITY-MIB", "PhysicalIndex", "PhysicalIndexOrZero")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Counter64, MibIdentifier, ModuleIdentity, Integer32, Unsigned32, ObjectIdentity, Counter32, NotificationType, TimeTicks, Gauge32, IpAddress, iso, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "MibIdentifier", "ModuleIdentity", "Integer32", "Unsigned32", "ObjectIdentity", "Counter32", "NotificationType", "TimeTicks", "Gauge32", "IpAddress", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
RowStatus, DateAndTime, DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DateAndTime", "DisplayString", "TextualConvention", "TruthValue")
hpnicfLicense = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145))
hpnicfLicense.setRevisions(('2013-09-18 10:00',))
if mibBuilder.loadTexts: hpnicfLicense.setLastUpdated('201309181000Z')
if mibBuilder.loadTexts: hpnicfLicense.setOrganization('')
hpnicfLicenseScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 1))
hpnicfLicenseTables = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2))
hpnicfLicenseNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 3))
hpnicfLicenseNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfLicenseNotifyEnable.setStatus('current')
hpnicfLicenseOpEntryMaxNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfLicenseOpEntryMaxNum.setStatus('current')
hpnicfLicenseNextFreeOpIndex = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseNextFreeOpIndex.setStatus('current')
hpnicfLicenseDevInfoTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 1), )
if mibBuilder.loadTexts: hpnicfLicenseDevInfoTable.setStatus('current')
hpnicfLicenseDevInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-LICENSE-MIB", "hpnicfLicensePhysicalIndex"))
if mibBuilder.loadTexts: hpnicfLicenseDevInfoEntry.setStatus('current')
hpnicfLicensePhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 1, 1, 1), PhysicalIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfLicensePhysicalIndex.setStatus('current')
hpnicfLicenseSN = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseSN.setStatus('current')
hpnicfLicenseDeviceIDType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalid", 1), ("keyString", 2), ("file", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseDeviceIDType.setStatus('current')
hpnicfLicenseDeviceID = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseDeviceID.setStatus('current')
hpnicfLicenseHardwareInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 1, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseHardwareInfo.setStatus('current')
hpnicfLicenseMaxNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseMaxNum.setStatus('current')
hpnicfLicenseUsedNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseUsedNum.setStatus('current')
hpnicfLicenseRecyclableNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseRecyclableNum.setStatus('current')
hpnicfLicenseInstallType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("invalid", 1), ("installInChassis", 2), ("installInSlot", 3), ("installInCPU", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseInstallType.setStatus('current')
hpnicfLicenseFileStoragePath = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 1, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseFileStoragePath.setStatus('current')
hpnicfLicenseGeneralTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2), )
if mibBuilder.loadTexts: hpnicfLicenseGeneralTable.setStatus('current')
hpnicfLicenseGeneralEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-LICENSE-MIB", "hpnicfLicensePhysicalIndex"), (0, "HPN-ICF-LICENSE-MIB", "hpnicfLicenseIndex"))
if mibBuilder.loadTexts: hpnicfLicenseGeneralEntry.setStatus('current')
hpnicfLicenseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfLicenseIndex.setStatus('current')
hpnicfLicenseFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseFeature.setStatus('current')
hpnicfLicenseProductDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseProductDescr.setStatus('current')
hpnicfLicenseFileDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseFileDescr.setStatus('current')
hpnicfLicenseState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("invalid", 1), ("inuse", 2), ("usable", 3), ("expired", 4), ("uninstalled", 5), ("unusable", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseState.setStatus('current')
hpnicfLicenseActivationFile = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseActivationFile.setStatus('current')
hpnicfLicenseActivationKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseActivationKey.setStatus('current')
hpnicfLicenseLicenseKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseLicenseKey.setStatus('current')
hpnicfLicenseUninstActivationFile = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseUninstActivationFile.setStatus('current')
hpnicfLicenseUninstActivationKey = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseUninstActivationKey.setStatus('current')
hpnicfLicenseType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 1), ("permanent", 2), ("daysRestricted", 3), ("trialDaysRestricted", 4), ("dateRestricted", 5), ("trialDateRestricted", 6), ("countRestricted", 7), ("trialCountRestricted", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseType.setStatus('current')
hpnicfLicenseInstalledTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseInstalledTime.setStatus('current')
hpnicfLicenseUninstalledTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1, 13), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseUninstalledTime.setStatus('current')
hpnicfLicenseDaysLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseDaysLeft.setStatus('current')
hpnicfLicenseValidityStart = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1, 15), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseValidityStart.setStatus('current')
hpnicfLicenseValidityEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1, 16), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseValidityEnd.setStatus('current')
hpnicfLicenseExpiredDays = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseExpiredDays.setStatus('current')
hpnicfLicenseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 2, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseCount.setStatus('current')
hpnicfLicenseFeatureTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 3), )
if mibBuilder.loadTexts: hpnicfLicenseFeatureTable.setStatus('current')
hpnicfLicenseFeatureEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 3, 1), ).setIndexNames((0, "HPN-ICF-LICENSE-MIB", "hpnicfLicensePhysicalIndex"), (1, "HPN-ICF-LICENSE-MIB", "hpnicfLicenseFeatureName"))
if mibBuilder.loadTexts: hpnicfLicenseFeatureEntry.setStatus('current')
hpnicfLicenseFeatureName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 3, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseFeatureName.setStatus('current')
hpnicfLicenseFeatureState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notLicensed", 1), ("trialLicense", 2), ("formalLicense", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseFeatureState.setStatus('current')
hpnicfLicenseOpTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 4), )
if mibBuilder.loadTexts: hpnicfLicenseOpTable.setStatus('current')
hpnicfLicenseOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 4, 1), ).setIndexNames((0, "HPN-ICF-LICENSE-MIB", "hpnicfLicenseOpIndex"))
if mibBuilder.loadTexts: hpnicfLicenseOpEntry.setStatus('current')
hpnicfLicenseOpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 4, 1, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfLicenseOpIndex.setStatus('current')
hpnicfLicenseOpPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 4, 1, 2), PhysicalIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfLicenseOpPhysicalIndex.setStatus('current')
hpnicfLicenseOpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("compress", 1), ("delete", 2), ("installActivationFile", 3), ("installActivationKey", 4), ("installLicenseKey", 5), ("uninstallActivationFile", 6), ("uninstallActivationKey", 7), ("uninstallLicenseKey", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfLicenseOpType.setStatus('current')
hpnicfLicenseOpString = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 4, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfLicenseOpString.setStatus('current')
hpnicfLicenseOpNotifyEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 4, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfLicenseOpNotifyEnable.setStatus('current')
hpnicfLicenseOpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfLicenseOpRowStatus.setStatus('current')
hpnicfLicenseOpState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("opInProgress", 1), ("opSuccessful", 2), ("opFailed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseOpState.setStatus('current')
hpnicfLicenseOpFailedReason = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 4, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseOpFailedReason.setStatus('current')
hpnicfLicenseOpEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 2, 4, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfLicenseOpEndTime.setStatus('current')
hpnicfLicenseNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 3, 0))
hpnicfLicenseOpCompletion = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 3, 0, 1)).setObjects(("HPN-ICF-LICENSE-MIB", "hpnicfLicenseOpIndex"), ("HPN-ICF-LICENSE-MIB", "hpnicfLicenseOpPhysicalIndex"), ("HPN-ICF-LICENSE-MIB", "hpnicfLicenseOpType"), ("HPN-ICF-LICENSE-MIB", "hpnicfLicenseOpString"), ("HPN-ICF-LICENSE-MIB", "hpnicfLicenseOpState"), ("HPN-ICF-LICENSE-MIB", "hpnicfLicenseOpFailedReason"))
if mibBuilder.loadTexts: hpnicfLicenseOpCompletion.setStatus('current')
hpnicfLicenseActivationFileLost = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 3, 0, 2)).setObjects(("HPN-ICF-LICENSE-MIB", "hpnicfLicensePhysicalIndex"), ("HPN-ICF-LICENSE-MIB", "hpnicfLicenseActivationFile"))
if mibBuilder.loadTexts: hpnicfLicenseActivationFileLost.setStatus('current')
hpnicfLicenseActivationFileRestored = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 3, 0, 3)).setObjects(("HPN-ICF-LICENSE-MIB", "hpnicfLicensePhysicalIndex"), ("HPN-ICF-LICENSE-MIB", "hpnicfLicenseActivationFile"))
if mibBuilder.loadTexts: hpnicfLicenseActivationFileRestored.setStatus('current')
hpnicfLicenseExpired = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 3, 0, 4)).setObjects(("HPN-ICF-LICENSE-MIB", "hpnicfLicenseFeatureName"), ("HPN-ICF-LICENSE-MIB", "hpnicfLicenseFeatureState"))
if mibBuilder.loadTexts: hpnicfLicenseExpired.setStatus('current')
hpnicfLicenseExpireWarning = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 3, 0, 5)).setObjects(("HPN-ICF-LICENSE-MIB", "hpnicfLicenseFeatureName"), ("HPN-ICF-LICENSE-MIB", "hpnicfLicenseFeatureState"), ("HPN-ICF-LICENSE-MIB", "hpnicfLicenseBindValidityPeriodRemaining"))
if mibBuilder.loadTexts: hpnicfLicenseExpireWarning.setStatus('current')
hpnicfLicenseNotificationBindings = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 3, 1))
hpnicfLicenseBindValidityPeriodRemaining = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 145, 3, 1, 1), Unsigned32()).setUnits('days').setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfLicenseBindValidityPeriodRemaining.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-LICENSE-MIB", hpnicfLicenseOpType=hpnicfLicenseOpType, hpnicfLicenseMaxNum=hpnicfLicenseMaxNum, hpnicfLicensePhysicalIndex=hpnicfLicensePhysicalIndex, hpnicfLicenseGeneralEntry=hpnicfLicenseGeneralEntry, hpnicfLicenseInstallType=hpnicfLicenseInstallType, hpnicfLicenseFeatureName=hpnicfLicenseFeatureName, hpnicfLicenseOpRowStatus=hpnicfLicenseOpRowStatus, hpnicfLicenseActivationFile=hpnicfLicenseActivationFile, hpnicfLicenseOpString=hpnicfLicenseOpString, hpnicfLicense=hpnicfLicense, hpnicfLicenseUsedNum=hpnicfLicenseUsedNum, hpnicfLicenseExpiredDays=hpnicfLicenseExpiredDays, hpnicfLicenseActivationFileRestored=hpnicfLicenseActivationFileRestored, hpnicfLicenseLicenseKey=hpnicfLicenseLicenseKey, hpnicfLicenseActivationFileLost=hpnicfLicenseActivationFileLost, hpnicfLicenseNotifications=hpnicfLicenseNotifications, hpnicfLicenseOpEntryMaxNum=hpnicfLicenseOpEntryMaxNum, hpnicfLicenseValidityStart=hpnicfLicenseValidityStart, hpnicfLicenseDeviceID=hpnicfLicenseDeviceID, hpnicfLicenseIndex=hpnicfLicenseIndex, hpnicfLicenseProductDescr=hpnicfLicenseProductDescr, hpnicfLicenseOpCompletion=hpnicfLicenseOpCompletion, hpnicfLicenseHardwareInfo=hpnicfLicenseHardwareInfo, hpnicfLicenseState=hpnicfLicenseState, hpnicfLicenseCount=hpnicfLicenseCount, hpnicfLicenseDeviceIDType=hpnicfLicenseDeviceIDType, hpnicfLicenseDevInfoEntry=hpnicfLicenseDevInfoEntry, hpnicfLicenseNextFreeOpIndex=hpnicfLicenseNextFreeOpIndex, hpnicfLicenseNotificationBindings=hpnicfLicenseNotificationBindings, hpnicfLicenseOpFailedReason=hpnicfLicenseOpFailedReason, hpnicfLicenseSN=hpnicfLicenseSN, hpnicfLicenseOpEntry=hpnicfLicenseOpEntry, hpnicfLicenseNotifyEnable=hpnicfLicenseNotifyEnable, hpnicfLicenseOpState=hpnicfLicenseOpState, hpnicfLicenseFeatureTable=hpnicfLicenseFeatureTable, hpnicfLicenseOpEndTime=hpnicfLicenseOpEndTime, hpnicfLicenseTables=hpnicfLicenseTables, hpnicfLicenseOpNotifyEnable=hpnicfLicenseOpNotifyEnable, hpnicfLicenseActivationKey=hpnicfLicenseActivationKey, hpnicfLicenseFeatureEntry=hpnicfLicenseFeatureEntry, hpnicfLicenseOpIndex=hpnicfLicenseOpIndex, hpnicfLicenseType=hpnicfLicenseType, hpnicfLicenseScalarObjects=hpnicfLicenseScalarObjects, hpnicfLicenseFileStoragePath=hpnicfLicenseFileStoragePath, hpnicfLicenseDevInfoTable=hpnicfLicenseDevInfoTable, hpnicfLicenseFeature=hpnicfLicenseFeature, hpnicfLicenseFileDescr=hpnicfLicenseFileDescr, hpnicfLicenseDaysLeft=hpnicfLicenseDaysLeft, hpnicfLicenseValidityEnd=hpnicfLicenseValidityEnd, hpnicfLicenseFeatureState=hpnicfLicenseFeatureState, hpnicfLicenseGeneralTable=hpnicfLicenseGeneralTable, hpnicfLicenseExpired=hpnicfLicenseExpired, hpnicfLicenseExpireWarning=hpnicfLicenseExpireWarning, hpnicfLicenseUninstActivationFile=hpnicfLicenseUninstActivationFile, hpnicfLicenseRecyclableNum=hpnicfLicenseRecyclableNum, hpnicfLicenseUninstActivationKey=hpnicfLicenseUninstActivationKey, hpnicfLicenseNotificationPrefix=hpnicfLicenseNotificationPrefix, hpnicfLicenseUninstalledTime=hpnicfLicenseUninstalledTime, hpnicfLicenseOpPhysicalIndex=hpnicfLicenseOpPhysicalIndex, hpnicfLicenseOpTable=hpnicfLicenseOpTable, hpnicfLicenseBindValidityPeriodRemaining=hpnicfLicenseBindValidityPeriodRemaining, hpnicfLicenseInstalledTime=hpnicfLicenseInstalledTime, PYSNMP_MODULE_ID=hpnicfLicense)
