#
# PySNMP MIB module HM2-PLATFORM-MULTICAST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HM2-PLATFORM-MULTICAST-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:19:07 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
hm2PlatformMibs, HmEnabledStatus = mibBuilder.importSymbols("HM2-TC-MIB", "hm2PlatformMibs", "HmEnabledStatus")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressPrefixLength, InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressPrefixLength", "InetAddress", "InetAddressType")
mgmdHostCacheAddress, mgmdHostCacheAddressType, mgmdHostInterfaceQuerierType, mgmdHostCacheIfIndex, mgmdHostInterfaceIfIndex = mibBuilder.importSymbols("MGMD-STD-MIB", "mgmdHostCacheAddress", "mgmdHostCacheAddressType", "mgmdHostInterfaceQuerierType", "mgmdHostCacheIfIndex", "mgmdHostInterfaceIfIndex")
pimBsrCandidateBSREntry, = mibBuilder.importSymbols("PIM-BSR-MIB", "pimBsrCandidateBSREntry")
PimGroupMappingOriginType, = mibBuilder.importSymbols("PIM-STD-MIB", "PimGroupMappingOriginType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ModuleIdentity, Bits, Counter64, NotificationType, Gauge32, IpAddress, MibIdentifier, Integer32, ObjectIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ModuleIdentity", "Bits", "Counter64", "NotificationType", "Gauge32", "IpAddress", "MibIdentifier", "Integer32", "ObjectIdentity", "Counter32")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
hm2PlatformMulticast = ModuleIdentity((1, 3, 6, 1, 4, 1, 248, 12, 4))
hm2PlatformMulticast.setRevisions(('2013-07-25 00:00',))
if mibBuilder.loadTexts: hm2PlatformMulticast.setLastUpdated('201307250000Z')
if mibBuilder.loadTexts: hm2PlatformMulticast.setOrganization('Hirschmann Automation and Control GmbH')
hm2AgentMulticastIGMPConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 12, 4, 1))
hm2AgentMulticastIGMPAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 4, 1, 1), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2AgentMulticastIGMPAdminMode.setStatus('current')
hm2AgentMulticastIGMPProxyOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 4, 1, 249), HmEnabledStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentMulticastIGMPProxyOperStatus.setStatus('current')
hm2AgentMulticastPIMSMConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 12, 4, 3))
hm2AgentMulticastPIMSMAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 4, 3, 1), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2AgentMulticastPIMSMAdminMode.setStatus('current')
hm2AgentMulticastPIMSMGroupMappingTable = MibTable((1, 3, 6, 1, 4, 1, 248, 12, 4, 3, 249), )
if mibBuilder.loadTexts: hm2AgentMulticastPIMSMGroupMappingTable.setStatus('current')
hm2AgentMulticastPIMSMGroupMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 12, 4, 3, 249, 1), ).setIndexNames((0, "HM2-PLATFORM-MULTICAST-MIB", "hm2AgentMulticastPIMSMGroupMappingGrpAddrType"), (0, "HM2-PLATFORM-MULTICAST-MIB", "hm2AgentMulticastPIMSMGroupMappingGrpAddr"))
if mibBuilder.loadTexts: hm2AgentMulticastPIMSMGroupMappingEntry.setStatus('current')
hm2AgentMulticastPIMSMGroupMappingGrpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 3, 249, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hm2AgentMulticastPIMSMGroupMappingGrpAddrType.setStatus('current')
hm2AgentMulticastPIMSMGroupMappingGrpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 3, 249, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), )))
if mibBuilder.loadTexts: hm2AgentMulticastPIMSMGroupMappingGrpAddr.setStatus('current')
hm2AgentMulticastPIMSMGroupMappingRPAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 3, 249, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentMulticastPIMSMGroupMappingRPAddrType.setStatus('current')
hm2AgentMulticastPIMSMGroupMappingRPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 3, 249, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentMulticastPIMSMGroupMappingRPAddr.setStatus('current')
hm2AgentMulticastPIMSMGroupMappingOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 3, 249, 1, 5), PimGroupMappingOriginType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentMulticastPIMSMGroupMappingOrigin.setStatus('current')
hm2AgentMulticastPIMSMGroupMappingGrpPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 3, 249, 1, 6), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(4, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentMulticastPIMSMGroupMappingGrpPrefixLen.setStatus('current')
hm2AgentMulticastPIMSMGroupMappingExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 3, 249, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentMulticastPIMSMGroupMappingExpiryTime.setStatus('current')
hm2AgentMulticastPIMDMConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 12, 4, 4))
hm2AgentMulticastPIMDMAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 4, 4, 1), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2AgentMulticastPIMDMAdminMode.setStatus('current')
hm2AgentMulticastPIMDMPruneAssertHoldtime = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 4, 4, 248), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 64800)).clone(210)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2AgentMulticastPIMDMPruneAssertHoldtime.setStatus('current')
hm2AgentMulticastRoutingConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 12, 4, 5))
hm2AgentMulticastRoutingAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 4, 5, 1), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2AgentMulticastRoutingAdminMode.setStatus('current')
hm2AgentMulticastSoftwareDSCP = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 4, 5, 248), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 64)).clone(48)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2AgentMulticastSoftwareDSCP.setStatus('current')
hm2AgentMulticastDVMRPConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 12, 4, 6))
hm2AgentMulticastDVMRPAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 4, 6, 1), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2AgentMulticastDVMRPAdminMode.setStatus('current')
hm2AgentMulticastDVMRPRouteExpiryTime = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 4, 6, 248), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200)).clone(120)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2AgentMulticastDVMRPRouteExpiryTime.setStatus('current')
hm2AgentSnmpTrapFlagsConfigGroupMulticast = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 12, 4, 7))
hm2AgentSnmpDVMRPTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 4, 7, 1), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2AgentSnmpDVMRPTrapFlag.setStatus('current')
hm2AgentSnmpPIMTrapFlag = MibScalar((1, 3, 6, 1, 4, 1, 248, 12, 4, 7, 2), HmEnabledStatus().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2AgentSnmpPIMTrapFlag.setStatus('current')
hm2AgentIpStaticMRouteTable = MibTable((1, 3, 6, 1, 4, 1, 248, 12, 4, 8), )
if mibBuilder.loadTexts: hm2AgentIpStaticMRouteTable.setStatus('current')
hm2AgentIpStaticMRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 12, 4, 8, 1), ).setIndexNames((0, "HM2-PLATFORM-MULTICAST-MIB", "hm2AgentIpStaticMRouteSrcAddressType"), (0, "HM2-PLATFORM-MULTICAST-MIB", "hm2AgentIpStaticMRouteSrcIpAddr"), (0, "HM2-PLATFORM-MULTICAST-MIB", "hm2AgentIpStaticMRouteSrcNetMask"))
if mibBuilder.loadTexts: hm2AgentIpStaticMRouteEntry.setStatus('current')
hm2AgentIpStaticMRouteSrcAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 8, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hm2AgentIpStaticMRouteSrcAddressType.setStatus('current')
hm2AgentIpStaticMRouteSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 8, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: hm2AgentIpStaticMRouteSrcIpAddr.setStatus('current')
hm2AgentIpStaticMRouteSrcNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: hm2AgentIpStaticMRouteSrcNetMask.setStatus('current')
hm2AgentIpStaticMRouteRpfIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 8, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentIpStaticMRouteRpfIpAddr.setStatus('deprecated')
hm2AgentIpStaticMRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 8, 1, 5), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentIpStaticMRouteIfIndex.setStatus('current')
hm2AgentIpStaticMRoutePreference = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentIpStaticMRoutePreference.setStatus('current')
hm2AgentIpStaticMRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 8, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentIpStaticMRouteStatus.setStatus('current')
hm2AgentIpStaticMRouteExtRpfIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 8, 1, 248), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentIpStaticMRouteExtRpfIpAddrType.setStatus('current')
hm2AgentIpStaticMRouteExtRpfIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 8, 1, 249), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hm2AgentIpStaticMRouteExtRpfIpAddr.setStatus('current')
hm2AgentPIMBsrCandidateConfTable = MibTable((1, 3, 6, 1, 4, 1, 248, 12, 4, 3, 4), )
if mibBuilder.loadTexts: hm2AgentPIMBsrCandidateConfTable.setStatus('current')
hm2AgentPIMBsrCandidateConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 12, 4, 3, 4, 1), )
pimBsrCandidateBSREntry.registerAugmentions(("HM2-PLATFORM-MULTICAST-MIB", "hm2AgentPIMBsrCandidateConfEntry"))
hm2AgentPIMBsrCandidateConfEntry.setIndexNames(*pimBsrCandidateBSREntry.getIndexNames())
if mibBuilder.loadTexts: hm2AgentPIMBsrCandidateConfEntry.setStatus('current')
pimBsrCandidateBSRAdvInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 3, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16383)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pimBsrCandidateBSRAdvInterval.setStatus('current')
hm2AgentMulticastMgmdExtConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 12, 4, 250))
hm2AgentMulticastMgmdExtTable = MibTable((1, 3, 6, 1, 4, 1, 248, 12, 4, 250, 10), )
if mibBuilder.loadTexts: hm2AgentMulticastMgmdExtTable.setStatus('current')
hm2AgentMulticastMgmdExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 12, 4, 250, 10, 1), ).setIndexNames((0, "MGMD-STD-MIB", "mgmdHostInterfaceIfIndex"), (0, "MGMD-STD-MIB", "mgmdHostInterfaceQuerierType"))
if mibBuilder.loadTexts: hm2AgentMulticastMgmdExtEntry.setStatus('current')
hm2AgentMulticastMgmdUnsolicitRprtInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 250, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 260)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2AgentMulticastMgmdUnsolicitRprtInterval.setStatus('current')
hm2AgentMulticastMgmdNumberOfGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 250, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentMulticastMgmdNumberOfGroups.setStatus('current')
hm2AgentMulticastMgmdHostCacheExtGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 12, 4, 251))
hm2AgentMulticastMgmdHostCacheExtTable = MibTable((1, 3, 6, 1, 4, 1, 248, 12, 4, 251, 10), )
if mibBuilder.loadTexts: hm2AgentMulticastMgmdHostCacheExtTable.setStatus('current')
hm2AgentMulticastMgmdHostCacheExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 12, 4, 251, 10, 1), ).setIndexNames((0, "MGMD-STD-MIB", "mgmdHostCacheAddressType"), (0, "MGMD-STD-MIB", "mgmdHostCacheAddress"), (0, "MGMD-STD-MIB", "mgmdHostCacheIfIndex"))
if mibBuilder.loadTexts: hm2AgentMulticastMgmdHostCacheExtEntry.setStatus('current')
hm2AgentMulticastMgmdHostStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 12, 4, 251, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("non-member", 1), ("delay-member", 2), ("idle-member", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hm2AgentMulticastMgmdHostStatus.setStatus('current')
hm2AgentMulticastSNMPExtensionGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 12, 4, 260))
hm2AgentMulticastProtocolEnableErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 4, 260, 1))
if mibBuilder.loadTexts: hm2AgentMulticastProtocolEnableErrorReturn.setStatus('current')
hm2AgentMulticastNullGroupErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 4, 260, 2))
if mibBuilder.loadTexts: hm2AgentMulticastNullGroupErrorReturn.setStatus('current')
hm2AgentMulticastBoundaryRangeEntriesErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 4, 260, 3))
if mibBuilder.loadTexts: hm2AgentMulticastBoundaryRangeEntriesErrorReturn.setStatus('current')
hm2AgentMulticastHostEntriesErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 4, 260, 4))
if mibBuilder.loadTexts: hm2AgentMulticastHostEntriesErrorReturn.setStatus('current')
hm2AgentMgmdHostInvalidEntryErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 4, 260, 5))
if mibBuilder.loadTexts: hm2AgentMgmdHostInvalidEntryErrorReturn.setStatus('current')
hm2AgentMulticastProtocolDeInitErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 4, 260, 6))
if mibBuilder.loadTexts: hm2AgentMulticastProtocolDeInitErrorReturn.setStatus('current')
hm2AgentMulticastLocalAddressErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 4, 260, 7))
if mibBuilder.loadTexts: hm2AgentMulticastLocalAddressErrorReturn.setStatus('current')
hm2AgentMulticastCandRPErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 4, 260, 8))
if mibBuilder.loadTexts: hm2AgentMulticastCandRPErrorReturn.setStatus('current')
hm2AgentMulticastUnicastValidationErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 4, 260, 9))
if mibBuilder.loadTexts: hm2AgentMulticastUnicastValidationErrorReturn.setStatus('current')
hm2AgentMulticastGroupValidationErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 4, 260, 10))
if mibBuilder.loadTexts: hm2AgentMulticastGroupValidationErrorReturn.setStatus('current')
hm2AgentMulticastSSMValidationErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 4, 260, 11))
if mibBuilder.loadTexts: hm2AgentMulticastSSMValidationErrorReturn.setStatus('current')
hm2AgentMulticastStaticSourceErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 4, 260, 12))
if mibBuilder.loadTexts: hm2AgentMulticastStaticSourceErrorReturn.setStatus('current')
hm2AgentMulticastStaticRPFErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 4, 260, 13))
if mibBuilder.loadTexts: hm2AgentMulticastStaticRPFErrorReturn.setStatus('current')
hm2AgentMulticastStaticHostErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 4, 260, 14))
if mibBuilder.loadTexts: hm2AgentMulticastStaticHostErrorReturn.setStatus('current')
hm2AgentMulticastCandRPPrimaryErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 4, 260, 15))
if mibBuilder.loadTexts: hm2AgentMulticastCandRPPrimaryErrorReturn.setStatus('current')
hm2AgentMulticastCandBSRPrimaryErrorReturn = ObjectIdentity((1, 3, 6, 1, 4, 1, 248, 12, 4, 260, 16))
if mibBuilder.loadTexts: hm2AgentMulticastCandBSRPrimaryErrorReturn.setStatus('current')
mibBuilder.exportSymbols("HM2-PLATFORM-MULTICAST-MIB", hm2AgentMulticastDVMRPRouteExpiryTime=hm2AgentMulticastDVMRPRouteExpiryTime, hm2AgentMulticastMgmdExtEntry=hm2AgentMulticastMgmdExtEntry, hm2AgentMulticastPIMSMGroupMappingGrpAddr=hm2AgentMulticastPIMSMGroupMappingGrpAddr, hm2AgentMulticastMgmdHostCacheExtTable=hm2AgentMulticastMgmdHostCacheExtTable, hm2AgentMulticastProtocolEnableErrorReturn=hm2AgentMulticastProtocolEnableErrorReturn, hm2AgentIpStaticMRouteSrcAddressType=hm2AgentIpStaticMRouteSrcAddressType, hm2AgentMulticastMgmdHostCacheExtGroup=hm2AgentMulticastMgmdHostCacheExtGroup, PYSNMP_MODULE_ID=hm2PlatformMulticast, hm2AgentMulticastCandRPPrimaryErrorReturn=hm2AgentMulticastCandRPPrimaryErrorReturn, hm2AgentIpStaticMRouteTable=hm2AgentIpStaticMRouteTable, hm2AgentMulticastPIMSMGroupMappingTable=hm2AgentMulticastPIMSMGroupMappingTable, hm2AgentSnmpTrapFlagsConfigGroupMulticast=hm2AgentSnmpTrapFlagsConfigGroupMulticast, hm2AgentIpStaticMRouteRpfIpAddr=hm2AgentIpStaticMRouteRpfIpAddr, hm2AgentMulticastStaticSourceErrorReturn=hm2AgentMulticastStaticSourceErrorReturn, hm2AgentIpStaticMRouteExtRpfIpAddrType=hm2AgentIpStaticMRouteExtRpfIpAddrType, hm2AgentMulticastIGMPProxyOperStatus=hm2AgentMulticastIGMPProxyOperStatus, hm2AgentMulticastMgmdExtConfigGroup=hm2AgentMulticastMgmdExtConfigGroup, hm2PlatformMulticast=hm2PlatformMulticast, hm2AgentPIMBsrCandidateConfTable=hm2AgentPIMBsrCandidateConfTable, hm2AgentPIMBsrCandidateConfEntry=hm2AgentPIMBsrCandidateConfEntry, hm2AgentIpStaticMRouteExtRpfIpAddr=hm2AgentIpStaticMRouteExtRpfIpAddr, hm2AgentMulticastMgmdExtTable=hm2AgentMulticastMgmdExtTable, hm2AgentSnmpPIMTrapFlag=hm2AgentSnmpPIMTrapFlag, hm2AgentMulticastSNMPExtensionGroup=hm2AgentMulticastSNMPExtensionGroup, hm2AgentMgmdHostInvalidEntryErrorReturn=hm2AgentMgmdHostInvalidEntryErrorReturn, hm2AgentMulticastMgmdUnsolicitRprtInterval=hm2AgentMulticastMgmdUnsolicitRprtInterval, hm2AgentMulticastPIMSMGroupMappingExpiryTime=hm2AgentMulticastPIMSMGroupMappingExpiryTime, hm2AgentMulticastProtocolDeInitErrorReturn=hm2AgentMulticastProtocolDeInitErrorReturn, hm2AgentIpStaticMRouteSrcIpAddr=hm2AgentIpStaticMRouteSrcIpAddr, hm2AgentMulticastPIMSMGroupMappingGrpAddrType=hm2AgentMulticastPIMSMGroupMappingGrpAddrType, hm2AgentMulticastSoftwareDSCP=hm2AgentMulticastSoftwareDSCP, hm2AgentMulticastMgmdHostStatus=hm2AgentMulticastMgmdHostStatus, hm2AgentMulticastBoundaryRangeEntriesErrorReturn=hm2AgentMulticastBoundaryRangeEntriesErrorReturn, hm2AgentMulticastPIMSMConfigGroup=hm2AgentMulticastPIMSMConfigGroup, hm2AgentIpStaticMRouteEntry=hm2AgentIpStaticMRouteEntry, hm2AgentMulticastIGMPAdminMode=hm2AgentMulticastIGMPAdminMode, hm2AgentMulticastLocalAddressErrorReturn=hm2AgentMulticastLocalAddressErrorReturn, hm2AgentMulticastPIMSMGroupMappingRPAddrType=hm2AgentMulticastPIMSMGroupMappingRPAddrType, hm2AgentMulticastUnicastValidationErrorReturn=hm2AgentMulticastUnicastValidationErrorReturn, hm2AgentMulticastStaticHostErrorReturn=hm2AgentMulticastStaticHostErrorReturn, hm2AgentMulticastPIMDMConfigGroup=hm2AgentMulticastPIMDMConfigGroup, hm2AgentIpStaticMRouteSrcNetMask=hm2AgentIpStaticMRouteSrcNetMask, hm2AgentIpStaticMRoutePreference=hm2AgentIpStaticMRoutePreference, hm2AgentSnmpDVMRPTrapFlag=hm2AgentSnmpDVMRPTrapFlag, hm2AgentMulticastPIMSMGroupMappingGrpPrefixLen=hm2AgentMulticastPIMSMGroupMappingGrpPrefixLen, hm2AgentMulticastMgmdHostCacheExtEntry=hm2AgentMulticastMgmdHostCacheExtEntry, hm2AgentMulticastCandBSRPrimaryErrorReturn=hm2AgentMulticastCandBSRPrimaryErrorReturn, hm2AgentMulticastPIMSMGroupMappingEntry=hm2AgentMulticastPIMSMGroupMappingEntry, hm2AgentMulticastIGMPConfigGroup=hm2AgentMulticastIGMPConfigGroup, hm2AgentMulticastRoutingConfigGroup=hm2AgentMulticastRoutingConfigGroup, hm2AgentMulticastMgmdNumberOfGroups=hm2AgentMulticastMgmdNumberOfGroups, hm2AgentMulticastPIMSMGroupMappingOrigin=hm2AgentMulticastPIMSMGroupMappingOrigin, hm2AgentMulticastHostEntriesErrorReturn=hm2AgentMulticastHostEntriesErrorReturn, hm2AgentMulticastPIMDMPruneAssertHoldtime=hm2AgentMulticastPIMDMPruneAssertHoldtime, hm2AgentMulticastPIMDMAdminMode=hm2AgentMulticastPIMDMAdminMode, hm2AgentMulticastPIMSMAdminMode=hm2AgentMulticastPIMSMAdminMode, hm2AgentMulticastRoutingAdminMode=hm2AgentMulticastRoutingAdminMode, hm2AgentMulticastCandRPErrorReturn=hm2AgentMulticastCandRPErrorReturn, hm2AgentMulticastGroupValidationErrorReturn=hm2AgentMulticastGroupValidationErrorReturn, hm2AgentMulticastPIMSMGroupMappingRPAddr=hm2AgentMulticastPIMSMGroupMappingRPAddr, hm2AgentIpStaticMRouteIfIndex=hm2AgentIpStaticMRouteIfIndex, hm2AgentMulticastDVMRPAdminMode=hm2AgentMulticastDVMRPAdminMode, hm2AgentIpStaticMRouteStatus=hm2AgentIpStaticMRouteStatus, pimBsrCandidateBSRAdvInterval=pimBsrCandidateBSRAdvInterval, hm2AgentMulticastSSMValidationErrorReturn=hm2AgentMulticastSSMValidationErrorReturn, hm2AgentMulticastDVMRPConfigGroup=hm2AgentMulticastDVMRPConfigGroup, hm2AgentMulticastStaticRPFErrorReturn=hm2AgentMulticastStaticRPFErrorReturn, hm2AgentMulticastNullGroupErrorReturn=hm2AgentMulticastNullGroupErrorReturn)
