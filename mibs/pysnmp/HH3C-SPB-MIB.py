#
# PySNMP MIB module HH3C-SPB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-SPB-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:16:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
IEEE8021SpbmSPsourceId, = mibBuilder.importSymbols("IEEE8021-SPB-MIB", "IEEE8021SpbmSPsourceId")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
VlanIdOrNone, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIdOrNone")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, MibIdentifier, ObjectIdentity, Gauge32, Counter64, Integer32, iso, Unsigned32, ModuleIdentity, TimeTicks, IpAddress, Bits, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibIdentifier", "ObjectIdentity", "Gauge32", "Counter64", "Integer32", "iso", "Unsigned32", "ModuleIdentity", "TimeTicks", "IpAddress", "Bits", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "MacAddress", "DisplayString")
hh3cSpb = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 128))
hh3cSpb.setRevisions(('2012-11-22 00:00',))
if mibBuilder.loadTexts: hh3cSpb.setLastUpdated('201211220000Z')
if mibBuilder.loadTexts: hh3cSpb.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3cSpbObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1))
hh3cSpbSysObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 1))
hh3cSpbSysStatus = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cSpbSysStatus.setStatus('current')
hh3cSpbMulticastBVlanStatus = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cSpbMulticastBVlanStatus.setStatus('current')
hh3cSpbConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 2))
hh3cSpbIfTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 2, 1), )
if mibBuilder.loadTexts: hh3cSpbIfTable.setStatus('current')
hh3cSpbIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hh3cSpbIfEntry.setStatus('current')
hh3cSpbIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cSpbIfStatus.setStatus('current')
hh3cSpbSrvTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 2, 2), )
if mibBuilder.loadTexts: hh3cSpbSrvTable.setStatus('current')
hh3cSpbSrvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 2, 2, 1), ).setIndexNames((0, "HH3C-SPB-MIB", "hh3cSpbSrvTableEntryTopIx"), (0, "HH3C-SPB-MIB", "hh3cSpbSrvTableEntryIsid"))
if mibBuilder.loadTexts: hh3cSpbSrvEntry.setStatus('current')
hh3cSpbSrvTableEntryTopIx = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 2, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hh3cSpbSrvTableEntryTopIx.setStatus('current')
hh3cSpbSrvTableEntryIsid = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(255, 16777215)))
if mibBuilder.loadTexts: hh3cSpbSrvTableEntryIsid.setStatus('current')
hh3cSpbSrvTableEntryBaseVid = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 2, 2, 1, 3), VlanIdOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cSpbSrvTableEntryBaseVid.setStatus('current')
hh3cSpbSrvTableEntryMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("headEnd", 1), ("tandem", 2))).clone('headEnd')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cSpbSrvTableEntryMode.setStatus('current')
hh3cSpbTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 3))
hh3cSpbTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 3, 0))
hh3cSpbTrapsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 3, 1))
hh3cSpbSPSourceConflictTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 3, 0, 1)).setObjects(("HH3C-SPB-MIB", "hh3cSpbConflictSysID"), ("HH3C-SPB-MIB", "hh3cSpbConflictSPSourceID"))
if mibBuilder.loadTexts: hh3cSpbSPSourceConflictTrap.setStatus('current')
hh3cSpbBMacConflictTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 3, 0, 2)).setObjects(("HH3C-SPB-MIB", "hh3cSpbConflictSysID"), ("HH3C-SPB-MIB", "hh3cSpbConflictBMac"))
if mibBuilder.loadTexts: hh3cSpbBMacConflictTrap.setStatus('current')
hh3cSpbConflictSysID = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 3, 1, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cSpbConflictSysID.setStatus('current')
hh3cSpbConflictSPSourceID = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 3, 1, 2), IEEE8021SpbmSPsourceId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cSpbConflictSPSourceID.setStatus('current')
hh3cSpbConflictBMac = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 128, 1, 3, 1, 3), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cSpbConflictBMac.setStatus('current')
mibBuilder.exportSymbols("HH3C-SPB-MIB", hh3cSpbSPSourceConflictTrap=hh3cSpbSPSourceConflictTrap, hh3cSpbSrvTableEntryBaseVid=hh3cSpbSrvTableEntryBaseVid, hh3cSpbTrapsObjects=hh3cSpbTrapsObjects, hh3cSpb=hh3cSpb, hh3cSpbObjects=hh3cSpbObjects, hh3cSpbConflictBMac=hh3cSpbConflictBMac, hh3cSpbIfEntry=hh3cSpbIfEntry, hh3cSpbBMacConflictTrap=hh3cSpbBMacConflictTrap, hh3cSpbSrvTable=hh3cSpbSrvTable, hh3cSpbIfStatus=hh3cSpbIfStatus, hh3cSpbSysStatus=hh3cSpbSysStatus, hh3cSpbTrap=hh3cSpbTrap, hh3cSpbSrvTableEntryTopIx=hh3cSpbSrvTableEntryTopIx, hh3cSpbSrvTableEntryIsid=hh3cSpbSrvTableEntryIsid, PYSNMP_MODULE_ID=hh3cSpb, hh3cSpbConfig=hh3cSpbConfig, hh3cSpbConflictSPSourceID=hh3cSpbConflictSPSourceID, hh3cSpbSysObjects=hh3cSpbSysObjects, hh3cSpbSrvTableEntryMode=hh3cSpbSrvTableEntryMode, hh3cSpbMulticastBVlanStatus=hh3cSpbMulticastBVlanStatus, hh3cSpbSrvEntry=hh3cSpbSrvEntry, hh3cSpbConflictSysID=hh3cSpbConflictSysID, hh3cSpbIfTable=hh3cSpbIfTable, hh3cSpbTraps=hh3cSpbTraps)
