#
# PySNMP MIB module Dell-LBD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Dell-LBD-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:41:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
rnd, = mibBuilder.importSymbols("Dell-MIB", "rnd")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, MibIdentifier, Counter32, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ObjectIdentity, TimeTicks, Integer32, NotificationType, IpAddress, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "Counter32", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ObjectIdentity", "TimeTicks", "Integer32", "NotificationType", "IpAddress", "ModuleIdentity", "Gauge32")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
rlLbd = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 127))
rlLbd.setRevisions(('2007-11-07 00:00',))
if mibBuilder.loadTexts: rlLbd.setLastUpdated('200711070000Z')
if mibBuilder.loadTexts: rlLbd.setOrganization('Dell')
rlLbdEnable = MibScalar((1, 3, 6, 1, 4, 1, 89, 127, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlLbdEnable.setStatus('current')
rlLbdDetectionInterval = MibScalar((1, 3, 6, 1, 4, 1, 89, 127, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 60))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlLbdDetectionInterval.setStatus('current')
rlLbdMode = MibScalar((1, 3, 6, 1, 4, 1, 89, 127, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("source-mac-addr", 1), ("base-mac-addr", 2), ("broadcast-mac-addr", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlLbdMode.setStatus('current')
rlLbdPortTable = MibTable((1, 3, 6, 1, 4, 1, 89, 127, 4), )
if mibBuilder.loadTexts: rlLbdPortTable.setStatus('current')
rlLbdPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 127, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: rlLbdPortEntry.setStatus('current')
rlLbdPortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 127, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rlLbdPortAdminStatus.setStatus('current')
rlLbdPortOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 127, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2), ("loopDetected", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: rlLbdPortOperStatus.setStatus('current')
mibBuilder.exportSymbols("Dell-LBD-MIB", rlLbdPortEntry=rlLbdPortEntry, rlLbd=rlLbd, rlLbdDetectionInterval=rlLbdDetectionInterval, rlLbdMode=rlLbdMode, rlLbdEnable=rlLbdEnable, PYSNMP_MODULE_ID=rlLbd, rlLbdPortTable=rlLbdPortTable, rlLbdPortAdminStatus=rlLbdPortAdminStatus, rlLbdPortOperStatus=rlLbdPortOperStatus)
