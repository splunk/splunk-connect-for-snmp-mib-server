#
# PySNMP MIB module HP-ICF-TUNNELED-NODE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-TUNNELED-NODE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:23:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
IpAddress, Bits, Counter32, NotificationType, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, MibIdentifier, ObjectIdentity, Unsigned32, Counter64, Gauge32, Integer32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Bits", "Counter32", "NotificationType", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "MibIdentifier", "ObjectIdentity", "Unsigned32", "Counter64", "Gauge32", "Integer32", "iso")
TextualConvention, DisplayString, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "TruthValue")
hpicfTunneledNode = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128))
hpicfTunneledNode.setRevisions(('2016-12-06 00:00', '2016-08-05 00:00', '2016-02-11 00:00',))
if mibBuilder.loadTexts: hpicfTunneledNode.setLastUpdated('201612060000Z')
if mibBuilder.loadTexts: hpicfTunneledNode.setOrganization('HPE')
hpicfTunneledNodeObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1))
hpicfTunneledNodeConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 2))
hpicfTunneledNodeConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1))
hpicfTunneledNodeTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 1), )
if mibBuilder.loadTexts: hpicfTunneledNodeTable.setStatus('current')
hpicfTunneledNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 1, 1), ).setIndexNames((0, "HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodeIndex"))
if mibBuilder.loadTexts: hpicfTunneledNodeEntry.setStatus('current')
hpicfTunneledNodeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hpicfTunneledNodeIndex.setStatus('current')
hpicfTunneledNodeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 1, 1, 2), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfTunneledNodeEnable.setStatus('current')
hpicfTunneledNodePrimaryAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 1, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfTunneledNodePrimaryAddrType.setStatus('current')
hpicfTunneledNodePrimaryAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 1, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfTunneledNodePrimaryAddr.setStatus('current')
hpicfTunneledNodeBackupAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 1, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfTunneledNodeBackupAddrType.setStatus('current')
hpicfTunneledNodeBackupAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 1, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfTunneledNodeBackupAddr.setStatus('current')
hpicfTunneledNodeTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 1, 1, 7), Unsigned32().clone(8)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfTunneledNodeTimeout.setStatus('current')
hpicfTunneledNodeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfTunneledNodeRowStatus.setStatus('current')
hpicfTunneledNodeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("portbased", 1), ("rolebased", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfTunneledNodeMode.setStatus('current')
hpicfTunneledNodePortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 2), )
if mibBuilder.loadTexts: hpicfTunneledNodePortConfigTable.setStatus('current')
hpicfTunneledNodePortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpicfTunneledNodePortConfigEntry.setStatus('current')
hpicfTunneledNodePortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 2, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfTunneledNodePortRowStatus.setStatus('current')
hpicfTunneledNodeFallbackLclSw = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 2, 1, 2), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfTunneledNodeFallbackLclSw.setStatus('current')
hpicfTunneledNodeClearStats = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfTunneledNodeClearStats.setStatus('current')
hpicfTunneledNodePapiTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 4), )
if mibBuilder.loadTexts: hpicfTunneledNodePapiTable.setStatus('current')
hpicfTunneledNodePapiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 4, 1), ).setIndexNames((0, "HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodePapiAuthMode"))
if mibBuilder.loadTexts: hpicfTunneledNodePapiEntry.setStatus('current')
hpicfTunneledNodePapiAuthMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("md5", 2))))
if mibBuilder.loadTexts: hpicfTunneledNodePapiAuthMode.setStatus('current')
hpicfTunneledNodePapiKeyValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfTunneledNodePapiKeyValue.setStatus('current')
hpicfTunneledNodePapiKeyEncr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfTunneledNodePapiKeyEncr.setStatus('current')
hpicfTunneledNodePapiRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 1, 1, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfTunneledNodePapiRowStatus.setStatus('current')
hpicfTunneledNodeCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 2, 1))
hpicfTunneledNodeGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 2, 2))
hpicfTunneledNodeCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 2, 1, 1)).setObjects(("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodeGroup"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodePortGroup"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodePapiGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfTunneledNodeCompliance = hpicfTunneledNodeCompliance.setStatus('deprecated')
hpicfTunneledNodeCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 2, 1, 2)).setObjects(("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodeGroup1"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodePortGroup"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodePapiGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfTunneledNodeCompliance1 = hpicfTunneledNodeCompliance1.setStatus('current')
hpicfTunneledNodeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 2, 2, 1)).setObjects(("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodeEnable"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodePrimaryAddrType"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodePrimaryAddr"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodeBackupAddrType"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodeBackupAddr"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodeTimeout"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodeRowStatus"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodeClearStats"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfTunneledNodeGroup = hpicfTunneledNodeGroup.setStatus('deprecated')
hpicfTunneledNodePortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 2, 2, 2)).setObjects(("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodePortRowStatus"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodeFallbackLclSw"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfTunneledNodePortGroup = hpicfTunneledNodePortGroup.setStatus('current')
hpicfTunneledNodePapiGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 2, 2, 3)).setObjects(("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodePapiKeyValue"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodePapiKeyEncr"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodePapiRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfTunneledNodePapiGroup = hpicfTunneledNodePapiGroup.setStatus('current')
hpicfTunneledNodeGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 128, 2, 2, 4)).setObjects(("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodeEnable"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodePrimaryAddrType"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodePrimaryAddr"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodeBackupAddrType"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodeBackupAddr"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodeTimeout"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodeRowStatus"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodeClearStats"), ("HP-ICF-TUNNELED-NODE-MIB", "hpicfTunneledNodeMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfTunneledNodeGroup1 = hpicfTunneledNodeGroup1.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-TUNNELED-NODE-MIB", hpicfTunneledNodePapiEntry=hpicfTunneledNodePapiEntry, hpicfTunneledNodeBackupAddrType=hpicfTunneledNodeBackupAddrType, hpicfTunneledNodeEntry=hpicfTunneledNodeEntry, hpicfTunneledNodePapiTable=hpicfTunneledNodePapiTable, hpicfTunneledNodePortGroup=hpicfTunneledNodePortGroup, hpicfTunneledNodePortConfigEntry=hpicfTunneledNodePortConfigEntry, hpicfTunneledNode=hpicfTunneledNode, hpicfTunneledNodeFallbackLclSw=hpicfTunneledNodeFallbackLclSw, hpicfTunneledNodePortRowStatus=hpicfTunneledNodePortRowStatus, hpicfTunneledNodeClearStats=hpicfTunneledNodeClearStats, hpicfTunneledNodeCompliance=hpicfTunneledNodeCompliance, hpicfTunneledNodePapiGroup=hpicfTunneledNodePapiGroup, hpicfTunneledNodeEnable=hpicfTunneledNodeEnable, hpicfTunneledNodeRowStatus=hpicfTunneledNodeRowStatus, hpicfTunneledNodeObjects=hpicfTunneledNodeObjects, hpicfTunneledNodePapiKeyValue=hpicfTunneledNodePapiKeyValue, hpicfTunneledNodeMode=hpicfTunneledNodeMode, hpicfTunneledNodeCompliance1=hpicfTunneledNodeCompliance1, hpicfTunneledNodePrimaryAddr=hpicfTunneledNodePrimaryAddr, hpicfTunneledNodePapiKeyEncr=hpicfTunneledNodePapiKeyEncr, PYSNMP_MODULE_ID=hpicfTunneledNode, hpicfTunneledNodeConfig=hpicfTunneledNodeConfig, hpicfTunneledNodeGroups=hpicfTunneledNodeGroups, hpicfTunneledNodeTimeout=hpicfTunneledNodeTimeout, hpicfTunneledNodeGroup=hpicfTunneledNodeGroup, hpicfTunneledNodePapiAuthMode=hpicfTunneledNodePapiAuthMode, hpicfTunneledNodeIndex=hpicfTunneledNodeIndex, hpicfTunneledNodeTable=hpicfTunneledNodeTable, hpicfTunneledNodePrimaryAddrType=hpicfTunneledNodePrimaryAddrType, hpicfTunneledNodePapiRowStatus=hpicfTunneledNodePapiRowStatus, hpicfTunneledNodeGroup1=hpicfTunneledNodeGroup1, hpicfTunneledNodeCompliances=hpicfTunneledNodeCompliances, hpicfTunneledNodeConformance=hpicfTunneledNodeConformance, hpicfTunneledNodePortConfigTable=hpicfTunneledNodePortConfigTable, hpicfTunneledNodeBackupAddr=hpicfTunneledNodeBackupAddr)
