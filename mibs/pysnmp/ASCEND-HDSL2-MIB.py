#
# PySNMP MIB module ASCEND-HDSL2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-HDSL2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:10:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
wanTypeHdsl2, = mibBuilder.importSymbols("ASCEND-WAN-MIB", "wanTypeHdsl2")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Counter64, NotificationType, ObjectIdentity, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, TimeTicks, iso, Gauge32, Bits, Unsigned32, IpAddress, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Counter64", "NotificationType", "ObjectIdentity", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "TimeTicks", "iso", "Gauge32", "Bits", "Unsigned32", "IpAddress", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hdsl2LineStatusTable = MibTable((1, 3, 6, 1, 4, 1, 529, 4, 12, 1), )
if mibBuilder.loadTexts: hdsl2LineStatusTable.setStatus('mandatory')
hdsl2LineStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 4, 12, 1, 1), ).setIndexNames((0, "ASCEND-HDSL2-MIB", "hdsl2StatusIfEntryIndex"))
if mibBuilder.loadTexts: hdsl2LineStatusEntry.setStatus('mandatory')
hdsl2StatusIfEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatusIfEntryIndex.setStatus('mandatory')
hdsl2StatusShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatusShelfIndex.setStatus('mandatory')
hdsl2StatusSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatusSlotIndex.setStatus('mandatory')
hdsl2StatusLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatusLineIndex.setStatus('mandatory')
hdsl2StatusUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("coe", 2), ("cpe", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatusUnitType.setStatus('mandatory')
hdsl2StatusLineState = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("other", 1), ("configure", 2), ("deactivate", 3), ("deactive-lost", 4), ("start-up", 5), ("pend-port-up", 6), ("up", 7), ("pend-deactivate", 8), ("out-of-service", 9), ("analog-loopback", 10), ("digital-loopback", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatusLineState.setStatus('mandatory')
hdsl2StatusOpRate = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1552000))).clone(namedValues=NamedValues(("m1552000", 1552000)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2StatusOpRate.setStatus('mandatory')
hdsl2StatusVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatusVendorId.setStatus('mandatory')
hdsl2StatusMajorFirmWareVer = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatusMajorFirmWareVer.setStatus('mandatory')
hdsl2StatusMinorFirmWareVer = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatusMinorFirmWareVer.setStatus('mandatory')
hdsl2StatusHardWareVer = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatusHardWareVer.setStatus('mandatory')
hdsl2LineStatisticTable = MibTable((1, 3, 6, 1, 4, 1, 529, 4, 12, 2), )
if mibBuilder.loadTexts: hdsl2LineStatisticTable.setStatus('mandatory')
hdsl2LineStatisticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1), ).setIndexNames((0, "ASCEND-HDSL2-MIB", "hdsl2StatIfEntryIndex"))
if mibBuilder.loadTexts: hdsl2LineStatisticEntry.setStatus('mandatory')
hdsl2StatIfEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatIfEntryIndex.setStatus('mandatory')
hdsl2StatShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatShelfIndex.setStatus('mandatory')
hdsl2StatSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatSlotIndex.setStatus('mandatory')
hdsl2StatLineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatLineIndex.setStatus('mandatory')
hdsl2StatConnUpDays = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatConnUpDays.setStatus('mandatory')
hdsl2StatConnUpHours = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatConnUpHours.setStatus('mandatory')
hdsl2StatConnUpMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatConnUpMinutes.setStatus('mandatory')
hdsl2StatRxSignalPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatRxSignalPresent.setStatus('mandatory')
hdsl2StatLineQualityDb = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatLineQualityDb.setStatus('mandatory')
hdsl2StatUpDwnCntr = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatUpDwnCntr.setStatus('mandatory')
hdsl2StatLineSelfTest = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 1, 2, 3))).clone(namedValues=NamedValues(("other", 4), ("selfTestFailed", 1), ("localLoopBackFailed", 2), ("passed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatLineSelfTest.setStatus('mandatory')
hdsl2StatTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatTxPower.setStatus('mandatory')
hdsl2StatFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatFramerCrcErrors.setStatus('mandatory')
hdsl2StatFramerSyncStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatFramerSyncStatus.setStatus('mandatory')
hdsl2StatFramerLosdCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatFramerLosdCnt.setStatus('mandatory')
hdsl2StatFramerSegaCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatFramerSegaCnt.setStatus('mandatory')
hdsl2StatFramerSegdCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatFramerSegdCnt.setStatus('mandatory')
hdsl2StatFramerRxHecErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatFramerRxHecErrors.setStatus('mandatory')
hdsl2StatBertTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("one-minute", 1), ("two-minutes", 2), ("three-minutes", 3), ("four-minutes", 4), ("five-minutes", 5), ("ten-minutes", 6), ("fifteen-minutes", 7), ("twenty-minutes", 8), ("thirty-minutes", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2StatBertTimer.setStatus('mandatory')
hdsl2StatBertEna = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2StatBertEna.setStatus('mandatory')
hdsl2StatBertState = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("stopped", 2), ("start-up", 3), ("waiting", 4), ("pend-active", 5), ("bert-los", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatBertState.setStatus('mandatory')
hdsl2StatBertErrorCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 4, 12, 2, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2StatBertErrorCounter.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-HDSL2-MIB", hdsl2StatusMajorFirmWareVer=hdsl2StatusMajorFirmWareVer, hdsl2StatLineSelfTest=hdsl2StatLineSelfTest, hdsl2StatusHardWareVer=hdsl2StatusHardWareVer, hdsl2StatFramerCrcErrors=hdsl2StatFramerCrcErrors, hdsl2StatFramerSyncStatus=hdsl2StatFramerSyncStatus, hdsl2StatusOpRate=hdsl2StatusOpRate, hdsl2LineStatusEntry=hdsl2LineStatusEntry, hdsl2StatusUnitType=hdsl2StatusUnitType, hdsl2StatLineIndex=hdsl2StatLineIndex, hdsl2StatFramerSegaCnt=hdsl2StatFramerSegaCnt, hdsl2StatusVendorId=hdsl2StatusVendorId, hdsl2StatConnUpHours=hdsl2StatConnUpHours, hdsl2StatConnUpMinutes=hdsl2StatConnUpMinutes, hdsl2StatFramerLosdCnt=hdsl2StatFramerLosdCnt, hdsl2StatBertTimer=hdsl2StatBertTimer, hdsl2StatLineQualityDb=hdsl2StatLineQualityDb, hdsl2StatBertErrorCounter=hdsl2StatBertErrorCounter, hdsl2StatBertEna=hdsl2StatBertEna, hdsl2StatUpDwnCntr=hdsl2StatUpDwnCntr, hdsl2StatusLineIndex=hdsl2StatusLineIndex, hdsl2StatusShelfIndex=hdsl2StatusShelfIndex, hdsl2StatusSlotIndex=hdsl2StatusSlotIndex, hdsl2LineStatusTable=hdsl2LineStatusTable, hdsl2StatTxPower=hdsl2StatTxPower, hdsl2StatConnUpDays=hdsl2StatConnUpDays, hdsl2StatIfEntryIndex=hdsl2StatIfEntryIndex, hdsl2StatShelfIndex=hdsl2StatShelfIndex, hdsl2StatusIfEntryIndex=hdsl2StatusIfEntryIndex, hdsl2StatusLineState=hdsl2StatusLineState, hdsl2StatusMinorFirmWareVer=hdsl2StatusMinorFirmWareVer, hdsl2LineStatisticTable=hdsl2LineStatisticTable, hdsl2StatRxSignalPresent=hdsl2StatRxSignalPresent, hdsl2StatFramerSegdCnt=hdsl2StatFramerSegdCnt, hdsl2StatFramerRxHecErrors=hdsl2StatFramerRxHecErrors, hdsl2LineStatisticEntry=hdsl2LineStatisticEntry, hdsl2StatBertState=hdsl2StatBertState, hdsl2StatSlotIndex=hdsl2StatSlotIndex)
