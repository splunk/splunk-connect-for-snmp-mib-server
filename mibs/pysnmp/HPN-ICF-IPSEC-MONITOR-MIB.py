#
# PySNMP MIB module HPN-ICF-IPSEC-MONITOR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-IPSEC-MONITOR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:27:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
NotificationType, Unsigned32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, iso, ModuleIdentity, Gauge32, Counter32, Bits, TimeTicks, Counter64, MibIdentifier, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "iso", "ModuleIdentity", "Gauge32", "Counter32", "Bits", "TimeTicks", "Counter64", "MibIdentifier", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hpnicfIPSecMonitor = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7))
if mibBuilder.loadTexts: hpnicfIPSecMonitor.setLastUpdated('200410260000Z')
if mibBuilder.loadTexts: hpnicfIPSecMonitor.setOrganization('')
class HpnicfDiffHellmanGrp(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 5, 14, 2147483647))
    namedValues = NamedValues(("none", 0), ("modp768", 1), ("modp1024", 2), ("modp1536", 5), ("modp2048", 14), ("invalidGroup", 2147483647))

class HpnicfEncapMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))
    namedValues = NamedValues(("tunnel", 1), ("transport", 2), ("invalidMode", 2147483647))

class HpnicfEncryptAlgo(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 2147483647))
    namedValues = NamedValues(("none", 0), ("desCbc", 1), ("ideaCbc", 2), ("blowfishCbc", 3), ("rc5R16B64Cbc", 4), ("tripledesCbc", 5), ("castCbc", 6), ("aesCbc", 7), ("nsaCbc", 8), ("aesCbc128", 9), ("aesCbc192", 10), ("aesCbc256", 11), ("invalidAlg", 2147483647))

class HpnicfAuthAlgo(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 2147483647))
    namedValues = NamedValues(("none", 0), ("md5", 1), ("sha", 2), ("invalidAlg", 2147483647))

class HpnicfSaProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("reserved", 0), ("isakmp", 1), ("ah", 2), ("esp", 3), ("ipcomp", 4))

class HpnicfTrapStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

class HpnicfIPSecIDType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("reserved", 0), ("ipv4Addr", 1), ("fqdn", 2), ("userFqdn", 3), ("ipv4AddrSubnet", 4), ("ipv6Addr", 5), ("ipv6AddrSubnet", 6), ("ipv4AddrRange", 7), ("ipv6AddrRange", 8), ("derAsn1Dn", 9), ("derAsn1Gn", 10), ("keyId", 11))

class HpnicfTrafficType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("ipv4Addr", 1), ("ipv4AddrSubnet", 4), ("ipv6Addr", 5), ("ipv6AddrSubnet", 6), ("ipv4AddrRange", 7), ("ipv6AddrRange", 8))

class HpnicfIPSecNegoType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))
    namedValues = NamedValues(("ike", 1), ("manual", 2), ("invalidType", 2147483647))

class HpnicfIPSecTunnelState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("active", 1), ("timeout", 2))

hpnicfIPSecObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1))
hpnicfIPSecTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1), )
if mibBuilder.loadTexts: hpnicfIPSecTunnelTable.setStatus('current')
hpnicfIPSecTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunIfIndex"), (0, "HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunEntryIndex"), (0, "HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunIndex"))
if mibBuilder.loadTexts: hpnicfIPSecTunnelEntry.setStatus('current')
hpnicfIPSecTunIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfIPSecTunIfIndex.setStatus('current')
hpnicfIPSecTunEntryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfIPSecTunEntryIndex.setStatus('current')
hpnicfIPSecTunIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfIPSecTunIndex.setStatus('current')
hpnicfIPSecTunIKETunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunIKETunnelIndex.setStatus('current')
hpnicfIPSecTunLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunLocalAddr.setStatus('current')
hpnicfIPSecTunRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunRemoteAddr.setStatus('current')
hpnicfIPSecTunKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 7), HpnicfIPSecNegoType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunKeyType.setStatus('current')
hpnicfIPSecTunEncapMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 8), HpnicfEncapMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunEncapMode.setStatus('current')
hpnicfIPSecTunInitiator = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 2147483647))).clone(namedValues=NamedValues(("local", 1), ("remote", 2), ("none", 2147483647)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunInitiator.setStatus('current')
hpnicfIPSecTunLifeSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunLifeSize.setStatus('current')
hpnicfIPSecTunLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunLifeTime.setStatus('current')
hpnicfIPSecTunRemainTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunRemainTime.setStatus('current')
hpnicfIPSecTunActiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunActiveTime.setStatus('current')
hpnicfIPSecTunRemainSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunRemainSize.setStatus('current')
hpnicfIPSecTunTotalRefreshes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunTotalRefreshes.setStatus('current')
hpnicfIPSecTunCurrentSaInstances = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunCurrentSaInstances.setStatus('current')
hpnicfIPSecTunInSaEncryptAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 17), HpnicfEncryptAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunInSaEncryptAlgo.setStatus('current')
hpnicfIPSecTunInSaAhAuthAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 18), HpnicfAuthAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunInSaAhAuthAlgo.setStatus('current')
hpnicfIPSecTunInSaEspAuthAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 19), HpnicfAuthAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunInSaEspAuthAlgo.setStatus('current')
hpnicfIPSecTunDiffHellmanGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 20), HpnicfDiffHellmanGrp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunDiffHellmanGrp.setStatus('current')
hpnicfIPSecTunOutSaEncryptAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 21), HpnicfEncryptAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunOutSaEncryptAlgo.setStatus('current')
hpnicfIPSecTunOutSaAhAuthAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 22), HpnicfAuthAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunOutSaAhAuthAlgo.setStatus('current')
hpnicfIPSecTunOutSaEspAuthAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 23), HpnicfAuthAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunOutSaEspAuthAlgo.setStatus('current')
hpnicfIPSecTunPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunPolicyName.setStatus('current')
hpnicfIPSecTunPolicyNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunPolicyNum.setStatus('current')
hpnicfIPSecTunStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("initial", 1), ("ready", 2), ("rekeyed", 3), ("closed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunStatus.setStatus('current')
hpnicfIPSecTunnelStatTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2), )
if mibBuilder.loadTexts: hpnicfIPSecTunnelStatTable.setStatus('current')
hpnicfIPSecTunnelStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunIfIndex"), (0, "HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunEntryIndex"), (0, "HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunIndex"))
if mibBuilder.loadTexts: hpnicfIPSecTunnelStatEntry.setStatus('current')
hpnicfIPSecTunInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunInOctets.setStatus('current')
hpnicfIPSecTunInDecompOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunInDecompOctets.setStatus('current')
hpnicfIPSecTunInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunInPkts.setStatus('current')
hpnicfIPSecTunInDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunInDropPkts.setStatus('current')
hpnicfIPSecTunInReplayDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunInReplayDropPkts.setStatus('current')
hpnicfIPSecTunInAuthFails = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunInAuthFails.setStatus('current')
hpnicfIPSecTunInDecryptFails = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunInDecryptFails.setStatus('current')
hpnicfIPSecTunOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunOutOctets.setStatus('current')
hpnicfIPSecTunOutUncompOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunOutUncompOctets.setStatus('current')
hpnicfIPSecTunOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunOutPkts.setStatus('current')
hpnicfIPSecTunOutDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunOutDropPkts.setStatus('current')
hpnicfIPSecTunOutEncryptFails = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunOutEncryptFails.setStatus('current')
hpnicfIPSecTunNoMemoryDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunNoMemoryDropPkts.setStatus('current')
hpnicfIPSecTunQueueFullDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunQueueFullDropPkts.setStatus('current')
hpnicfIPSecTunInvalidLenDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunInvalidLenDropPkts.setStatus('current')
hpnicfIPSecTunTooLongDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunTooLongDropPkts.setStatus('current')
hpnicfIPSecTunInvalidSaDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTunInvalidSaDropPkts.setStatus('current')
hpnicfIPSecSaTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 3), )
if mibBuilder.loadTexts: hpnicfIPSecSaTable.setStatus('current')
hpnicfIPSecSaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 3, 1), ).setIndexNames((0, "HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunIfIndex"), (0, "HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunEntryIndex"), (0, "HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunIndex"), (0, "HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecSaIndex"))
if mibBuilder.loadTexts: hpnicfIPSecSaEntry.setStatus('current')
hpnicfIPSecSaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfIPSecSaIndex.setStatus('current')
hpnicfIPSecSaDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("in", 1), ("out", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecSaDirection.setStatus('current')
hpnicfIPSecSaValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecSaValue.setStatus('current')
hpnicfIPSecSaProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 3, 1, 4), HpnicfSaProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecSaProtocol.setStatus('current')
hpnicfIPSecSaEncryptAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 3, 1, 5), HpnicfEncryptAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecSaEncryptAlgo.setStatus('current')
hpnicfIPSecSaAuthAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 3, 1, 6), HpnicfAuthAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecSaAuthAlgo.setStatus('current')
hpnicfIPSecSaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("expiring", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecSaStatus.setStatus('current')
hpnicfIPSecTrafficTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 4), )
if mibBuilder.loadTexts: hpnicfIPSecTrafficTable.setStatus('current')
hpnicfIPSecTrafficEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 4, 1), ).setIndexNames((0, "HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunIfIndex"), (0, "HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunEntryIndex"), (0, "HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunIndex"))
if mibBuilder.loadTexts: hpnicfIPSecTrafficEntry.setStatus('current')
hpnicfIPSecTrafficLocalType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 4, 1, 1), HpnicfTrafficType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTrafficLocalType.setStatus('current')
hpnicfIPSecTrafficLocalAddr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTrafficLocalAddr1.setStatus('current')
hpnicfIPSecTrafficLocalAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTrafficLocalAddr2.setStatus('current')
hpnicfIPSecTrafficLocalProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTrafficLocalProtocol.setStatus('current')
hpnicfIPSecTrafficLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTrafficLocalPort.setStatus('current')
hpnicfIPSecTrafficRemoteType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 4, 1, 6), HpnicfTrafficType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTrafficRemoteType.setStatus('current')
hpnicfIPSecTrafficRemoteAddr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 4, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTrafficRemoteAddr1.setStatus('current')
hpnicfIPSecTrafficRemoteAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 4, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTrafficRemoteAddr2.setStatus('current')
hpnicfIPSecTrafficRemoteProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTrafficRemoteProtocol.setStatus('current')
hpnicfIPSecTrafficRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecTrafficRemotePort.setStatus('current')
hpnicfIPSecGlobalStats = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5))
hpnicfIPSecGlobalActiveTunnels = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalActiveTunnels.setStatus('current')
hpnicfIPSecGlobalActiveSas = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalActiveSas.setStatus('current')
hpnicfIPSecGlobalInOctets = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalInOctets.setStatus('current')
hpnicfIPSecGlobalInDecompOctets = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalInDecompOctets.setStatus('current')
hpnicfIPSecGlobalInPkts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalInPkts.setStatus('current')
hpnicfIPSecGlobalInDrops = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalInDrops.setStatus('current')
hpnicfIPSecGlobalInReplayDrops = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalInReplayDrops.setStatus('current')
hpnicfIPSecGlobalInAuthFails = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalInAuthFails.setStatus('current')
hpnicfIPSecGlobalInDecryptFails = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalInDecryptFails.setStatus('current')
hpnicfIPSecGlobalOutOctets = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalOutOctets.setStatus('current')
hpnicfIPSecGlobalOutUncompOctets = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalOutUncompOctets.setStatus('current')
hpnicfIPSecGlobalOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalOutPkts.setStatus('current')
hpnicfIPSecGlobalOutDrops = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalOutDrops.setStatus('current')
hpnicfIPSecGlobalOutEncryptFails = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalOutEncryptFails.setStatus('current')
hpnicfIPSecGlobalNoMemoryDropPkts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalNoMemoryDropPkts.setStatus('current')
hpnicfIPSecGlobalNoFindSaDropPkts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalNoFindSaDropPkts.setStatus('current')
hpnicfIPSecGlobalQueueFullDropPkts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalQueueFullDropPkts.setStatus('current')
hpnicfIPSecGlobalInvalidLenDropPkts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalInvalidLenDropPkts.setStatus('current')
hpnicfIPSecGlobalTooLongDropPkts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalTooLongDropPkts.setStatus('current')
hpnicfIPSecGlobalInvalidSaDropPkts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 5, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIPSecGlobalInvalidSaDropPkts.setStatus('current')
hpnicfIPSecTrapObject = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 6))
hpnicfIPSecPolicyName = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 6, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfIPSecPolicyName.setStatus('current')
hpnicfIPSecPolicySeqNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 6, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfIPSecPolicySeqNum.setStatus('current')
hpnicfIPSecPolicySize = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 6, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfIPSecPolicySize.setStatus('current')
hpnicfIPSecSpiValue = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 6, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfIPSecSpiValue.setStatus('current')
hpnicfIPSecTrapCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 7))
hpnicfIPSecTrapGlobalCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 7, 1), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIPSecTrapGlobalCntl.setStatus('current')
hpnicfIPSecTunnelStartTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 7, 2), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIPSecTunnelStartTrapCntl.setStatus('current')
hpnicfIPSecTunnelStopTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 7, 3), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIPSecTunnelStopTrapCntl.setStatus('current')
hpnicfIPSecNoSaTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 7, 4), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIPSecNoSaTrapCntl.setStatus('current')
hpnicfIPSecAuthFailureTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 7, 5), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIPSecAuthFailureTrapCntl.setStatus('current')
hpnicfIPSecEncryFailureTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 7, 6), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIPSecEncryFailureTrapCntl.setStatus('current')
hpnicfIPSecDecryFailureTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 7, 7), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIPSecDecryFailureTrapCntl.setStatus('current')
hpnicfIPSecInvalidSaTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 7, 8), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIPSecInvalidSaTrapCntl.setStatus('current')
hpnicfIPSecPolicyAddTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 7, 9), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIPSecPolicyAddTrapCntl.setStatus('current')
hpnicfIPSecPolicyDelTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 7, 10), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIPSecPolicyDelTrapCntl.setStatus('current')
hpnicfIPSecPolicyAttachTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 7, 11), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIPSecPolicyAttachTrapCntl.setStatus('current')
hpnicfIPSecPolicyDetachTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 7, 12), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIPSecPolicyDetachTrapCntl.setStatus('current')
hpnicfIPSecTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 8))
hpnicfIPSecNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 8, 1))
hpnicfIPSecTunnelStart = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 8, 1, 1)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunLocalAddr"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunRemoteAddr"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunLifeTime"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunLifeSize"))
if mibBuilder.loadTexts: hpnicfIPSecTunnelStart.setStatus('current')
hpnicfIPSecTunnelStop = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 8, 1, 2)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunLocalAddr"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunRemoteAddr"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunActiveTime"))
if mibBuilder.loadTexts: hpnicfIPSecTunnelStop.setStatus('current')
hpnicfIPSecNoSaFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 8, 1, 3)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunLocalAddr"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunRemoteAddr"))
if mibBuilder.loadTexts: hpnicfIPSecNoSaFailure.setStatus('current')
hpnicfIPSecAuthFailFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 8, 1, 4)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunLocalAddr"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunRemoteAddr"))
if mibBuilder.loadTexts: hpnicfIPSecAuthFailFailure.setStatus('current')
hpnicfIPSecEncryFailFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 8, 1, 5)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunLocalAddr"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunRemoteAddr"))
if mibBuilder.loadTexts: hpnicfIPSecEncryFailFailure.setStatus('current')
hpnicfIPSecDecryFailFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 8, 1, 6)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunLocalAddr"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunRemoteAddr"))
if mibBuilder.loadTexts: hpnicfIPSecDecryFailFailure.setStatus('current')
hpnicfIPSecInvalidSaFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 8, 1, 7)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunLocalAddr"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunRemoteAddr"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecSpiValue"))
if mibBuilder.loadTexts: hpnicfIPSecInvalidSaFailure.setStatus('current')
hpnicfIPSecPolicyAdd = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 8, 1, 8)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicyName"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicySeqNum"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicySize"))
if mibBuilder.loadTexts: hpnicfIPSecPolicyAdd.setStatus('current')
hpnicfIPSecPolicyDel = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 8, 1, 9)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicyName"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicySeqNum"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicySize"))
if mibBuilder.loadTexts: hpnicfIPSecPolicyDel.setStatus('current')
hpnicfIPSecPolicyAttach = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 8, 1, 10)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicyName"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicySize"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfIPSecPolicyAttach.setStatus('current')
hpnicfIPSecPolicyDetach = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 1, 8, 1, 11)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicyName"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicySize"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfIPSecPolicyDetach.setStatus('current')
hpnicfIPSecConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 2))
hpnicfIPSecCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 2, 1))
hpnicfIPSecGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 2, 2))
hpnicfIPSecCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 2, 1, 1)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunnelTableGroup"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunnelStatGroup"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecSaGroup"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTrafficTableGroup"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalStatsGroup"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTrapObjectGroup"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTrapCntlGroup"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTrapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfIPSecCompliance = hpnicfIPSecCompliance.setStatus('current')
hpnicfIPSecTunnelTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 2, 2, 1)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunIKETunnelIndex"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunLocalAddr"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunRemoteAddr"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunKeyType"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunEncapMode"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunInitiator"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunLifeSize"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunLifeTime"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunRemainTime"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunActiveTime"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunRemainSize"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunTotalRefreshes"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunCurrentSaInstances"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunInSaEncryptAlgo"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunInSaAhAuthAlgo"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunInSaEspAuthAlgo"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunDiffHellmanGrp"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunOutSaEncryptAlgo"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunOutSaAhAuthAlgo"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunOutSaEspAuthAlgo"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunPolicyName"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunPolicyNum"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfIPSecTunnelTableGroup = hpnicfIPSecTunnelTableGroup.setStatus('current')
hpnicfIPSecTunnelStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 2, 2, 2)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunInOctets"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunInDecompOctets"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunInPkts"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunInDropPkts"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunInReplayDropPkts"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunInAuthFails"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunInDecryptFails"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunOutOctets"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunOutUncompOctets"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunOutPkts"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunOutDropPkts"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunOutEncryptFails"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunNoMemoryDropPkts"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunQueueFullDropPkts"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunInvalidLenDropPkts"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunTooLongDropPkts"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunInvalidSaDropPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfIPSecTunnelStatGroup = hpnicfIPSecTunnelStatGroup.setStatus('current')
hpnicfIPSecSaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 2, 2, 3)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecSaDirection"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecSaValue"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecSaProtocol"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecSaEncryptAlgo"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecSaAuthAlgo"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecSaStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfIPSecSaGroup = hpnicfIPSecSaGroup.setStatus('current')
hpnicfIPSecTrafficTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 2, 2, 4)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTrafficLocalType"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTrafficLocalAddr1"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTrafficLocalAddr2"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTrafficLocalProtocol"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTrafficLocalPort"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTrafficRemoteType"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTrafficRemoteAddr1"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTrafficRemoteAddr2"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTrafficRemoteProtocol"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTrafficRemotePort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfIPSecTrafficTableGroup = hpnicfIPSecTrafficTableGroup.setStatus('current')
hpnicfIPSecGlobalStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 2, 2, 5)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalActiveTunnels"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalActiveSas"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalInOctets"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalInDecompOctets"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalInPkts"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalInDrops"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalInReplayDrops"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalInAuthFails"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalInDecryptFails"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalOutOctets"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalOutUncompOctets"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalOutPkts"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalOutDrops"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalOutEncryptFails"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalNoMemoryDropPkts"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalNoFindSaDropPkts"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalQueueFullDropPkts"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalInvalidLenDropPkts"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalTooLongDropPkts"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecGlobalInvalidSaDropPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfIPSecGlobalStatsGroup = hpnicfIPSecGlobalStatsGroup.setStatus('current')
hpnicfIPSecTrapObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 2, 2, 6)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicyName"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicySeqNum"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicySize"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecSpiValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfIPSecTrapObjectGroup = hpnicfIPSecTrapObjectGroup.setStatus('current')
hpnicfIPSecTrapCntlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 2, 2, 7)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTrapGlobalCntl"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunnelStartTrapCntl"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunnelStopTrapCntl"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecNoSaTrapCntl"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecAuthFailureTrapCntl"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecEncryFailureTrapCntl"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecDecryFailureTrapCntl"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecInvalidSaTrapCntl"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicyAddTrapCntl"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicyDelTrapCntl"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicyAttachTrapCntl"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicyDetachTrapCntl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfIPSecTrapCntlGroup = hpnicfIPSecTrapCntlGroup.setStatus('current')
hpnicfIPSecTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 7, 2, 2, 8)).setObjects(("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunnelStart"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecTunnelStop"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecNoSaFailure"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecAuthFailFailure"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecEncryFailFailure"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecDecryFailFailure"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecInvalidSaFailure"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicyAdd"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicyDel"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicyAttach"), ("HPN-ICF-IPSEC-MONITOR-MIB", "hpnicfIPSecPolicyDetach"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfIPSecTrapGroup = hpnicfIPSecTrapGroup.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-IPSEC-MONITOR-MIB", hpnicfIPSecTunInDropPkts=hpnicfIPSecTunInDropPkts, hpnicfIPSecTrafficLocalAddr1=hpnicfIPSecTrafficLocalAddr1, HpnicfEncapMode=HpnicfEncapMode, hpnicfIPSecGlobalActiveSas=hpnicfIPSecGlobalActiveSas, hpnicfIPSecAuthFailFailure=hpnicfIPSecAuthFailFailure, hpnicfIPSecTunnelTableGroup=hpnicfIPSecTunnelTableGroup, hpnicfIPSecTrapObject=hpnicfIPSecTrapObject, hpnicfIPSecGroups=hpnicfIPSecGroups, HpnicfIPSecIDType=HpnicfIPSecIDType, hpnicfIPSecTunOutPkts=hpnicfIPSecTunOutPkts, hpnicfIPSecTunnelTable=hpnicfIPSecTunnelTable, HpnicfDiffHellmanGrp=HpnicfDiffHellmanGrp, hpnicfIPSecTunLifeTime=hpnicfIPSecTunLifeTime, hpnicfIPSecTrafficLocalType=hpnicfIPSecTrafficLocalType, hpnicfIPSecObjects=hpnicfIPSecObjects, hpnicfIPSecTunOutEncryptFails=hpnicfIPSecTunOutEncryptFails, hpnicfIPSecTunStatus=hpnicfIPSecTunStatus, hpnicfIPSecPolicySeqNum=hpnicfIPSecPolicySeqNum, hpnicfIPSecEncryFailureTrapCntl=hpnicfIPSecEncryFailureTrapCntl, hpnicfIPSecTunInSaEncryptAlgo=hpnicfIPSecTunInSaEncryptAlgo, hpnicfIPSecNotifications=hpnicfIPSecNotifications, hpnicfIPSecTunInOctets=hpnicfIPSecTunInOctets, hpnicfIPSecGlobalQueueFullDropPkts=hpnicfIPSecGlobalQueueFullDropPkts, hpnicfIPSecSaIndex=hpnicfIPSecSaIndex, hpnicfIPSecTrafficRemoteType=hpnicfIPSecTrafficRemoteType, hpnicfIPSecPolicyDel=hpnicfIPSecPolicyDel, hpnicfIPSecTrapCntlGroup=hpnicfIPSecTrapCntlGroup, hpnicfIPSecAuthFailureTrapCntl=hpnicfIPSecAuthFailureTrapCntl, HpnicfAuthAlgo=HpnicfAuthAlgo, hpnicfIPSecTunInvalidSaDropPkts=hpnicfIPSecTunInvalidSaDropPkts, hpnicfIPSecGlobalOutDrops=hpnicfIPSecGlobalOutDrops, hpnicfIPSecTrafficLocalPort=hpnicfIPSecTrafficLocalPort, HpnicfIPSecNegoType=HpnicfIPSecNegoType, hpnicfIPSecTunOutSaEncryptAlgo=hpnicfIPSecTunOutSaEncryptAlgo, hpnicfIPSecTrafficLocalAddr2=hpnicfIPSecTrafficLocalAddr2, hpnicfIPSecInvalidSaTrapCntl=hpnicfIPSecInvalidSaTrapCntl, hpnicfIPSecTunTooLongDropPkts=hpnicfIPSecTunTooLongDropPkts, hpnicfIPSecGlobalOutPkts=hpnicfIPSecGlobalOutPkts, hpnicfIPSecTunRemainTime=hpnicfIPSecTunRemainTime, HpnicfIPSecTunnelState=HpnicfIPSecTunnelState, hpnicfIPSecTunEncapMode=hpnicfIPSecTunEncapMode, hpnicfIPSecTunPolicyNum=hpnicfIPSecTunPolicyNum, hpnicfIPSecTunTotalRefreshes=hpnicfIPSecTunTotalRefreshes, hpnicfIPSecPolicyAdd=hpnicfIPSecPolicyAdd, hpnicfIPSecGlobalOutEncryptFails=hpnicfIPSecGlobalOutEncryptFails, hpnicfIPSecTunOutSaAhAuthAlgo=hpnicfIPSecTunOutSaAhAuthAlgo, hpnicfIPSecTunnelStatEntry=hpnicfIPSecTunnelStatEntry, hpnicfIPSecTrafficEntry=hpnicfIPSecTrafficEntry, hpnicfIPSecTunActiveTime=hpnicfIPSecTunActiveTime, hpnicfIPSecGlobalNoMemoryDropPkts=hpnicfIPSecGlobalNoMemoryDropPkts, hpnicfIPSecSaProtocol=hpnicfIPSecSaProtocol, hpnicfIPSecPolicySize=hpnicfIPSecPolicySize, PYSNMP_MODULE_ID=hpnicfIPSecMonitor, hpnicfIPSecTunnelStartTrapCntl=hpnicfIPSecTunnelStartTrapCntl, hpnicfIPSecSpiValue=hpnicfIPSecSpiValue, hpnicfIPSecTrafficTable=hpnicfIPSecTrafficTable, hpnicfIPSecSaAuthAlgo=hpnicfIPSecSaAuthAlgo, hpnicfIPSecTrafficRemotePort=hpnicfIPSecTrafficRemotePort, hpnicfIPSecTrapCntl=hpnicfIPSecTrapCntl, hpnicfIPSecTunDiffHellmanGrp=hpnicfIPSecTunDiffHellmanGrp, hpnicfIPSecGlobalNoFindSaDropPkts=hpnicfIPSecGlobalNoFindSaDropPkts, hpnicfIPSecTunCurrentSaInstances=hpnicfIPSecTunCurrentSaInstances, hpnicfIPSecGlobalOutOctets=hpnicfIPSecGlobalOutOctets, hpnicfIPSecTunRemainSize=hpnicfIPSecTunRemainSize, hpnicfIPSecTunRemoteAddr=hpnicfIPSecTunRemoteAddr, hpnicfIPSecTunOutOctets=hpnicfIPSecTunOutOctets, hpnicfIPSecTunInDecryptFails=hpnicfIPSecTunInDecryptFails, hpnicfIPSecTunLifeSize=hpnicfIPSecTunLifeSize, hpnicfIPSecGlobalInAuthFails=hpnicfIPSecGlobalInAuthFails, hpnicfIPSecTunKeyType=hpnicfIPSecTunKeyType, hpnicfIPSecTunOutUncompOctets=hpnicfIPSecTunOutUncompOctets, hpnicfIPSecGlobalOutUncompOctets=hpnicfIPSecGlobalOutUncompOctets, hpnicfIPSecDecryFailureTrapCntl=hpnicfIPSecDecryFailureTrapCntl, hpnicfIPSecGlobalInDrops=hpnicfIPSecGlobalInDrops, hpnicfIPSecCompliances=hpnicfIPSecCompliances, hpnicfIPSecTunIfIndex=hpnicfIPSecTunIfIndex, HpnicfTrapStatus=HpnicfTrapStatus, hpnicfIPSecTunInReplayDropPkts=hpnicfIPSecTunInReplayDropPkts, hpnicfIPSecTunInitiator=hpnicfIPSecTunInitiator, hpnicfIPSecTrapGroup=hpnicfIPSecTrapGroup, hpnicfIPSecTunnelStart=hpnicfIPSecTunnelStart, hpnicfIPSecTunInAuthFails=hpnicfIPSecTunInAuthFails, hpnicfIPSecGlobalInvalidLenDropPkts=hpnicfIPSecGlobalInvalidLenDropPkts, hpnicfIPSecConformance=hpnicfIPSecConformance, hpnicfIPSecTunInvalidLenDropPkts=hpnicfIPSecTunInvalidLenDropPkts, hpnicfIPSecTrafficRemoteProtocol=hpnicfIPSecTrafficRemoteProtocol, hpnicfIPSecTunEntryIndex=hpnicfIPSecTunEntryIndex, hpnicfIPSecCompliance=hpnicfIPSecCompliance, hpnicfIPSecMonitor=hpnicfIPSecMonitor, HpnicfSaProtocol=HpnicfSaProtocol, hpnicfIPSecTunPolicyName=hpnicfIPSecTunPolicyName, HpnicfEncryptAlgo=HpnicfEncryptAlgo, hpnicfIPSecGlobalActiveTunnels=hpnicfIPSecGlobalActiveTunnels, hpnicfIPSecPolicyDelTrapCntl=hpnicfIPSecPolicyDelTrapCntl, hpnicfIPSecInvalidSaFailure=hpnicfIPSecInvalidSaFailure, hpnicfIPSecTrapObjectGroup=hpnicfIPSecTrapObjectGroup, hpnicfIPSecTunInDecompOctets=hpnicfIPSecTunInDecompOctets, hpnicfIPSecGlobalTooLongDropPkts=hpnicfIPSecGlobalTooLongDropPkts, hpnicfIPSecGlobalInvalidSaDropPkts=hpnicfIPSecGlobalInvalidSaDropPkts, hpnicfIPSecGlobalInDecompOctets=hpnicfIPSecGlobalInDecompOctets, hpnicfIPSecTrafficRemoteAddr1=hpnicfIPSecTrafficRemoteAddr1, hpnicfIPSecPolicyAttachTrapCntl=hpnicfIPSecPolicyAttachTrapCntl, hpnicfIPSecTunnelEntry=hpnicfIPSecTunnelEntry, hpnicfIPSecNoSaTrapCntl=hpnicfIPSecNoSaTrapCntl, hpnicfIPSecTunIKETunnelIndex=hpnicfIPSecTunIKETunnelIndex, hpnicfIPSecTunnelStopTrapCntl=hpnicfIPSecTunnelStopTrapCntl, hpnicfIPSecTunInSaAhAuthAlgo=hpnicfIPSecTunInSaAhAuthAlgo, hpnicfIPSecGlobalStats=hpnicfIPSecGlobalStats, HpnicfTrafficType=HpnicfTrafficType, hpnicfIPSecTunNoMemoryDropPkts=hpnicfIPSecTunNoMemoryDropPkts, hpnicfIPSecSaStatus=hpnicfIPSecSaStatus, hpnicfIPSecGlobalInPkts=hpnicfIPSecGlobalInPkts, hpnicfIPSecTunInPkts=hpnicfIPSecTunInPkts, hpnicfIPSecTunIndex=hpnicfIPSecTunIndex, hpnicfIPSecTunInSaEspAuthAlgo=hpnicfIPSecTunInSaEspAuthAlgo, hpnicfIPSecSaTable=hpnicfIPSecSaTable, hpnicfIPSecTunOutDropPkts=hpnicfIPSecTunOutDropPkts, hpnicfIPSecDecryFailFailure=hpnicfIPSecDecryFailFailure, hpnicfIPSecSaEncryptAlgo=hpnicfIPSecSaEncryptAlgo, hpnicfIPSecEncryFailFailure=hpnicfIPSecEncryFailFailure, hpnicfIPSecNoSaFailure=hpnicfIPSecNoSaFailure, hpnicfIPSecPolicyAttach=hpnicfIPSecPolicyAttach, hpnicfIPSecGlobalInOctets=hpnicfIPSecGlobalInOctets, hpnicfIPSecTunnelStatGroup=hpnicfIPSecTunnelStatGroup, hpnicfIPSecGlobalStatsGroup=hpnicfIPSecGlobalStatsGroup, hpnicfIPSecTunLocalAddr=hpnicfIPSecTunLocalAddr, hpnicfIPSecTunQueueFullDropPkts=hpnicfIPSecTunQueueFullDropPkts, hpnicfIPSecTrap=hpnicfIPSecTrap, hpnicfIPSecGlobalInReplayDrops=hpnicfIPSecGlobalInReplayDrops, hpnicfIPSecPolicyDetachTrapCntl=hpnicfIPSecPolicyDetachTrapCntl, hpnicfIPSecTunnelStatTable=hpnicfIPSecTunnelStatTable, hpnicfIPSecTrapGlobalCntl=hpnicfIPSecTrapGlobalCntl, hpnicfIPSecSaValue=hpnicfIPSecSaValue, hpnicfIPSecTunOutSaEspAuthAlgo=hpnicfIPSecTunOutSaEspAuthAlgo, hpnicfIPSecTrafficRemoteAddr2=hpnicfIPSecTrafficRemoteAddr2, hpnicfIPSecGlobalInDecryptFails=hpnicfIPSecGlobalInDecryptFails, hpnicfIPSecTunnelStop=hpnicfIPSecTunnelStop, hpnicfIPSecSaDirection=hpnicfIPSecSaDirection, hpnicfIPSecTrafficLocalProtocol=hpnicfIPSecTrafficLocalProtocol, hpnicfIPSecTrafficTableGroup=hpnicfIPSecTrafficTableGroup, hpnicfIPSecPolicyDetach=hpnicfIPSecPolicyDetach, hpnicfIPSecPolicyName=hpnicfIPSecPolicyName, hpnicfIPSecPolicyAddTrapCntl=hpnicfIPSecPolicyAddTrapCntl, hpnicfIPSecSaEntry=hpnicfIPSecSaEntry, hpnicfIPSecSaGroup=hpnicfIPSecSaGroup)
