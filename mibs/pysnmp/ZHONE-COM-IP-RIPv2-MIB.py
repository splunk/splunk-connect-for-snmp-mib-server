#
# PySNMP MIB module ZHONE-COM-IP-RIPv2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZHONE-COM-IP-RIPv2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:40:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, MibIdentifier, Integer32, ModuleIdentity, Counter32, IpAddress, ObjectIdentity, Gauge32, NotificationType, Bits, iso, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "Integer32", "ModuleIdentity", "Counter32", "IpAddress", "ObjectIdentity", "Gauge32", "NotificationType", "Bits", "iso", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
rdIndex, = mibBuilder.importSymbols("ZHONE-COM-IP-RD-MIB", "rdIndex")
zhoneModules, zhoneIp = mibBuilder.importSymbols("Zhone", "zhoneModules", "zhoneIp")
comIpRip2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 6, 52))
comIpRip2.setRevisions(('2001-09-12 13:18', '2000-10-12 17:08', '2000-10-02 08:05', '2000-09-12 10:20',))
if mibBuilder.loadTexts: comIpRip2.setLastUpdated('200109121318Z')
if mibBuilder.loadTexts: comIpRip2.setOrganization('Zhone Technologies, Inc.')
class RipAuthKey(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 16)

rip2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2))
if mibBuilder.loadTexts: rip2.setStatus('current')
zhRip2GlobalTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 1), )
if mibBuilder.loadTexts: zhRip2GlobalTable.setStatus('current')
zhRip2GlobalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 1, 1), ).setIndexNames((0, "ZHONE-COM-IP-RD-MIB", "rdIndex"))
if mibBuilder.loadTexts: zhRip2GlobalEntry.setStatus('current')
zhRip2GlobalRouteChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhRip2GlobalRouteChanges.setStatus('current')
zhRip2GlobalQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhRip2GlobalQueries.setStatus('current')
zhRip2GlobalAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhRip2GlobalAdminState.setStatus('current')
zhRip2GlobalUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 1, 1, 4), Unsigned32().clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhRip2GlobalUpdateTime.setStatus('current')
zhRip2IfStatTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 2), )
if mibBuilder.loadTexts: zhRip2IfStatTable.setStatus('current')
zhRip2IfStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 2, 1), ).setIndexNames((0, "ZHONE-COM-IP-RD-MIB", "rdIndex"), (0, "ZHONE-COM-IP-RIPv2-MIB", "zhRip2IfStatAddress"))
if mibBuilder.loadTexts: zhRip2IfStatEntry.setStatus('current')
zhRip2IfStatAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 2, 1, 1), IpAddress())
if mibBuilder.loadTexts: zhRip2IfStatAddress.setStatus('current')
zhRip2IfStatRcvBadPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhRip2IfStatRcvBadPackets.setStatus('current')
zhRip2IfStatRcvBadRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhRip2IfStatRcvBadRoutes.setStatus('current')
zhRip2IfStatSentUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhRip2IfStatSentUpdates.setStatus('current')
zhRip2IfConfTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 3), )
if mibBuilder.loadTexts: zhRip2IfConfTable.setStatus('current')
zhRip2IfConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 3, 1), ).setIndexNames((0, "ZHONE-COM-IP-RD-MIB", "rdIndex"), (0, "ZHONE-COM-IP-RIPv2-MIB", "zhRip2IfConfAddress"))
if mibBuilder.loadTexts: zhRip2IfConfEntry.setStatus('current')
zhRip2IfConfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 3, 1, 1), IpAddress())
if mibBuilder.loadTexts: zhRip2IfConfAddress.setStatus('current')
zhRip2IfConfAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAuthentication", 1), ("simplePassword", 2), ("md5", 3))).clone('noAuthentication')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhRip2IfConfAuthType.setStatus('current')
zhRip2IfConfAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 3, 1, 3), RipAuthKey()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhRip2IfConfAuthKey.setStatus('current')
zhRip2IfConfSend = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("doNotSend", 1), ("ripVersion1", 2), ("rip1Compatible", 3), ("ripVersion2", 4), ("ripV1Demand", 5), ("ripV2Demand", 6))).clone('rip1Compatible')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhRip2IfConfSend.setStatus('current')
zhRip2IfConfReceive = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("rip1", 1), ("rip2", 2), ("rip1OrRip2", 3), ("doNotReceive", 4))).clone('rip1OrRip2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhRip2IfConfReceive.setStatus('current')
zhRip2IfConfDefaultMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhRip2IfConfDefaultMetric.setStatus('current')
zhRip2IfConfSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 3, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhRip2IfConfSrcAddress.setStatus('current')
zhRip2IfConfStaticRouteAdvertisement = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("low", 2), ("high", 3), ("both", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhRip2IfConfStaticRouteAdvertisement.setStatus('current')
zhRip2IfConfPoison = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zhRip2IfConfPoison.setStatus('current')
zhRip2PeerTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 4), )
if mibBuilder.loadTexts: zhRip2PeerTable.setStatus('current')
zhRip2PeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 4, 1), ).setIndexNames((0, "ZHONE-COM-IP-RD-MIB", "rdIndex"), (0, "ZHONE-COM-IP-RIPv2-MIB", "zhRip2PeerAddress"))
if mibBuilder.loadTexts: zhRip2PeerEntry.setStatus('current')
zhRip2PeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 4, 1, 1), IpAddress())
if mibBuilder.loadTexts: zhRip2PeerAddress.setStatus('current')
zhRip2PeerLastUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 4, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhRip2PeerLastUpdate.setStatus('current')
zhRip2PeerVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhRip2PeerVersion.setStatus('current')
zhRip2PeerRcvBadPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhRip2PeerRcvBadPackets.setStatus('current')
zhRip2PeerRcvBadRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 4, 1, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zhRip2PeerRcvBadRoutes.setStatus('current')
mibBuilder.exportSymbols("ZHONE-COM-IP-RIPv2-MIB", comIpRip2=comIpRip2, zhRip2GlobalUpdateTime=zhRip2GlobalUpdateTime, zhRip2IfStatSentUpdates=zhRip2IfStatSentUpdates, zhRip2PeerTable=zhRip2PeerTable, zhRip2IfConfStaticRouteAdvertisement=zhRip2IfConfStaticRouteAdvertisement, zhRip2IfConfTable=zhRip2IfConfTable, zhRip2PeerAddress=zhRip2PeerAddress, zhRip2GlobalAdminState=zhRip2GlobalAdminState, zhRip2IfConfSrcAddress=zhRip2IfConfSrcAddress, zhRip2IfConfAuthKey=zhRip2IfConfAuthKey, PYSNMP_MODULE_ID=comIpRip2, zhRip2PeerRcvBadPackets=zhRip2PeerRcvBadPackets, zhRip2IfConfSend=zhRip2IfConfSend, zhRip2GlobalQueries=zhRip2GlobalQueries, zhRip2PeerRcvBadRoutes=zhRip2PeerRcvBadRoutes, zhRip2IfConfAddress=zhRip2IfConfAddress, zhRip2IfStatEntry=zhRip2IfStatEntry, zhRip2GlobalRouteChanges=zhRip2GlobalRouteChanges, zhRip2IfStatAddress=zhRip2IfStatAddress, zhRip2PeerEntry=zhRip2PeerEntry, zhRip2IfStatRcvBadRoutes=zhRip2IfStatRcvBadRoutes, zhRip2IfConfAuthType=zhRip2IfConfAuthType, zhRip2IfConfDefaultMetric=zhRip2IfConfDefaultMetric, zhRip2PeerLastUpdate=zhRip2PeerLastUpdate, zhRip2PeerVersion=zhRip2PeerVersion, zhRip2GlobalTable=zhRip2GlobalTable, zhRip2IfConfPoison=zhRip2IfConfPoison, RipAuthKey=RipAuthKey, zhRip2IfStatRcvBadPackets=zhRip2IfStatRcvBadPackets, zhRip2IfStatTable=zhRip2IfStatTable, zhRip2IfConfEntry=zhRip2IfConfEntry, zhRip2GlobalEntry=zhRip2GlobalEntry, zhRip2IfConfReceive=zhRip2IfConfReceive, rip2=rip2)
