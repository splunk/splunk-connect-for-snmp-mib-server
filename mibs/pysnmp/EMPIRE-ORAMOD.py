#
# PySNMP MIB module EMPIRE-ORAMOD (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EMPIRE-ORAMOD
# Produced by pysmi-0.3.4 at Mon Apr 29 18:48:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, Integer32, ObjectIdentity, MibIdentifier, Counter32, Counter64, enterprises, NotificationType, NotificationType, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Gauge32, iso, Bits, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Integer32", "ObjectIdentity", "MibIdentifier", "Counter32", "Counter64", "enterprises", "NotificationType", "NotificationType", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Gauge32", "iso", "Bits", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
empire = MibIdentifier((1, 3, 6, 1, 4, 1, 546))
applications = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16))
oracledb = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4))
oramodTtlFootprt = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 12))
oramodCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 10))
oramodDbCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1))
oramodCfgDf = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2))
oramodCfgLf = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 3))
oramodCfgSga = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 4))
oramodPerf = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11))
oramodFootprint = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1))
oramodMetrics = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2))
oramodSGA = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3))
oramodRedoLogBuf = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 4))
oramodRollBack = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 5))
oramodWaits = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 6))
oramodExpSql = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 7))
oramodTblsp = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 8))
oramodLocks = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9))
oramodBackups = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 10))
oramodArchive = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 11))
oramodFootprt = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1))
oramodFFootprt = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 2))
oramodSgaDddAgg = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 1))
oramodSgaDlci = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 2))
oramodLock = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 1))
oramodLatch = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 2))
oramodBackup = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 10, 1))
oramodArcDest = MibIdentifier((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 11, 1))
oraModVersion = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oraModVersion.setStatus('mandatory')
oraModMode = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fullMode", 1), ("restrictedMode", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oraModMode.setStatus('mandatory')
oraFlag = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oraFlag.setStatus('mandatory')
oramodTtlCPUTIME = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 12, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTtlCPUTIME.setStatus('mandatory')
oramodTtlPERCENTCPU = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 12, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTtlPERCENTCPU.setStatus('mandatory')
oramodTtlMEMSIZE = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 12, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTtlMEMSIZE.setStatus('mandatory')
oramodTtlRSS = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 12, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTtlRSS.setStatus('mandatory')
oramodTtlPERCENTMEM = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 12, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTtlPERCENTMEM.setStatus('mandatory')
oramodTtlTHREADS = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 12, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTtlTHREADS.setStatus('mandatory')
oramodTtlINBLKS = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 12, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTtlINBLKS.setStatus('mandatory')
oramodTtlOUTBLKS = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 12, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTtlOUTBLKS.setStatus('mandatory')
oramodTtlMSGSSENT = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 12, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTtlMSGSSENT.setStatus('mandatory')
oramodTtlMSGSRCVD = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 12, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTtlMSGSRCVD.setStatus('mandatory')
oramodTtlSYSCALLS = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 12, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTtlSYSCALLS.setStatus('mandatory')
oramodTtlMINORPGFLTS = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 12, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTtlMINORPGFLTS.setStatus('mandatory')
oramodTtlMAJORPGFLTS = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 12, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTtlMAJORPGFLTS.setStatus('mandatory')
oramodTtlNUMSWAPS = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 12, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTtlNUMSWAPS.setStatus('mandatory')
oramodTtlVOLCNTX = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 12, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTtlVOLCNTX.setStatus('mandatory')
oramodTtlINVOLCNTX = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 12, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTtlINVOLCNTX.setStatus('mandatory')
oramodTtlDISKSIZE = MibScalar((1, 3, 6, 1, 4, 1, 546, 16, 4, 12, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTtlDISKSIZE.setStatus('mandatory')
oramodDbCfgTable = MibTable((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1), )
if mibBuilder.loadTexts: oramodDbCfgTable.setStatus('mandatory')
oramodDbCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1), ).setIndexNames((0, "EMPIRE-ORAMOD", "oramodDbCfgSIDINDX"))
if mibBuilder.loadTexts: oramodDbCfgEntry.setStatus('mandatory')
oramodDbCfgSIDINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgSIDINDX.setStatus('mandatory')
oramodDbCfgSID = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgSID.setStatus('mandatory')
oramodDbCfgVERSION = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgVERSION.setStatus('mandatory')
oramodDbCfgHOME = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgHOME.setStatus('mandatory')
oramodDbCfgBASE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgBASE.setStatus('mandatory')
oramodDbCfgID = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgID.setStatus('mandatory')
oramodDbCfgCRTDT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgCRTDT.setStatus('mandatory')
oramodDbCfgLOGMODE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgLOGMODE.setStatus('mandatory')
oramodDbCfgCTRLFILETYPE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgCTRLFILETYPE.setStatus('mandatory')
oramodDbCfgOPENMODE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgOPENMODE.setStatus('mandatory')
oramodDbCfgMAXPROCESS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgMAXPROCESS.setStatus('mandatory')
oramodDbCfgMAXSESSION = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgMAXSESSION.setStatus('mandatory')
oramodDbCfgTIMEDSTATISTICS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgTIMEDSTATISTICS.setStatus('mandatory')
oramodDbCfgCPUCNT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgCPUCNT.setStatus('mandatory')
oramodDbCfgSHAREDPOOLSIZE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgSHAREDPOOLSIZE.setStatus('mandatory')
oramodDbCfgSHAREDPOOLRSSIZE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgSHAREDPOOLRSSIZE.setStatus('mandatory')
oramodDbCfgLARGEPOOLSIZE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgLARGEPOOLSIZE.setStatus('mandatory')
oramodDbCfgJAVAPOOLSIZE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgJAVAPOOLSIZE.setStatus('mandatory')
oramodDbCfgCNTRLFILES = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgCNTRLFILES.setStatus('mandatory')
oramodDbCfgDBBLKBUFF = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgDBBLKBUFF.setStatus('mandatory')
oramodDbCfgDBBLKSIZE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgDBBLKSIZE.setStatus('mandatory')
oramodDbCfgCKPTINTRVL = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgCKPTINTRVL.setStatus('mandatory')
oramodDbCfgDBFILES = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgDBFILES.setStatus('mandatory')
oramodDbCfgSORTAREASIZE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgSORTAREASIZE.setStatus('mandatory')
oramodDbCfgOPENCURSORS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgOPENCURSORS.setStatus('mandatory')
oramodDbCfgTRNSACTNS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgTRNSACTNS.setStatus('mandatory')
oramodDbCfgTRNSACTNSPERSEG = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgTRNSACTNSPERSEG.setStatus('mandatory')
oramodDbCfgMAXROLLSEG = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 1, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodDbCfgMAXROLLSEG.setStatus('mandatory')
oramodCfgDfTable = MibTable((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1), )
if mibBuilder.loadTexts: oramodCfgDfTable.setStatus('mandatory')
oramodCfgDfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1), ).setIndexNames((0, "EMPIRE-ORAMOD", "oramodCfgDfSIDINDX"), (0, "EMPIRE-ORAMOD", "oramodCfgDfFILENUM"))
if mibBuilder.loadTexts: oramodCfgDfEntry.setStatus('mandatory')
oramodCfgDfSIDINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgDfSIDINDX.setStatus('mandatory')
oramodCfgDfFILENUM = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgDfFILENUM.setStatus('mandatory')
oramodCfgDfSTATUS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgDfSTATUS.setStatus('mandatory')
oramodCfgDfENABLED = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgDfENABLED.setStatus('mandatory')
oramodCfgDfUNRCVRBLECHG = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgDfUNRCVRBLECHG.setStatus('mandatory')
oramodCfgDfUNRCVRBLETIME = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgDfUNRCVRBLETIME.setStatus('mandatory')
oramodCfgDfKBYTES = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgDfKBYTES.setStatus('mandatory')
oramodCfgDfCRTKBYTES = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgDfCRTKBYTES.setStatus('mandatory')
oramodCfgDfFNAME = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgDfFNAME.setStatus('mandatory')
oramodCfgDfCRTTIME = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgDfCRTTIME.setStatus('mandatory')
oramodCfgDfTBLESPACENUM = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgDfTBLESPACENUM.setStatus('mandatory')
oramodCfgDfTBLESPACERFILENUM = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgDfTBLESPACERFILENUM.setStatus('mandatory')
oramodCfgDfBLOCKS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgDfBLOCKS.setStatus('mandatory')
oramodCfgDfBLOCKSIZE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgDfBLOCKSIZE.setStatus('mandatory')
oramodCfgDfERROR = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgDfERROR.setStatus('mandatory')
oramodCfgDfRECOVER = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgDfRECOVER.setStatus('mandatory')
oramodCfgDfRSTLOGSCHGNUM = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgDfRSTLOGSCHGNUM.setStatus('mandatory')
oramodCfgDfRSTLOGSTIME = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 2, 1, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgDfRSTLOGSTIME.setStatus('mandatory')
oramodCfgLfTable = MibTable((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 3, 1), )
if mibBuilder.loadTexts: oramodCfgLfTable.setStatus('mandatory')
oramodCfgLfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 3, 1, 1), ).setIndexNames((0, "EMPIRE-ORAMOD", "oramodCfgLfSIDINDX"), (0, "EMPIRE-ORAMOD", "oramodCfgLfMEMBERINDX"))
if mibBuilder.loadTexts: oramodCfgLfEntry.setStatus('mandatory')
oramodCfgLfSIDINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgLfSIDINDX.setStatus('mandatory')
oramodCfgLfMEMBERINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147482647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgLfMEMBERINDX.setStatus('mandatory')
oramodCfgLfGROUPNUM = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147482647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgLfGROUPNUM.setStatus('mandatory')
oramodCfgLfSTATUS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 3, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgLfSTATUS.setStatus('mandatory')
oramodCfgLfMEMBER = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 3, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgLfMEMBER.setStatus('mandatory')
oramodCfgSgaTable = MibTable((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 4, 1), )
if mibBuilder.loadTexts: oramodCfgSgaTable.setStatus('mandatory')
oramodCfgSgaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 4, 1, 1), ).setIndexNames((0, "EMPIRE-ORAMOD", "oramodCfgSgaSIDINDX"))
if mibBuilder.loadTexts: oramodCfgSgaEntry.setStatus('mandatory')
oramodCfgSgaSIDINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgSgaSIDINDX.setStatus('mandatory')
oramodCfgSgaTOTALMEMALLOC = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147482647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgSgaTOTALMEMALLOC.setStatus('mandatory')
oramodCfgSgaFIXEDSGA = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgSgaFIXEDSGA.setStatus('mandatory')
oramodCfgSgaVARIABLE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgSgaVARIABLE.setStatus('mandatory')
oramodCfgSgaDBBUFF = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgSgaDBBUFF.setStatus('mandatory')
oramodCfgSgaREDOBUFF = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 10, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodCfgSgaREDOBUFF.setStatus('mandatory')
oramodFootprtTable = MibTable((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1), )
if mibBuilder.loadTexts: oramodFootprtTable.setStatus('mandatory')
oramodFootprtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1), ).setIndexNames((0, "EMPIRE-ORAMOD", "oramodFootprtSIDINDX"))
if mibBuilder.loadTexts: oramodFootprtEntry.setStatus('mandatory')
oramodFootprtSIDINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtSIDINDX.setStatus('mandatory')
oramodFootprtCPUTIME = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtCPUTIME.setStatus('mandatory')
oramodFootprtPERCENTCPU = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtPERCENTCPU.setStatus('mandatory')
oramodFootprtMEMSIZE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtMEMSIZE.setStatus('mandatory')
oramodFootprtRSS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtRSS.setStatus('mandatory')
oramodFootprtPERCENTMEM = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtPERCENTMEM.setStatus('mandatory')
oramodFootprtTHREADS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtTHREADS.setStatus('mandatory')
oramodFootprtINBLKS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtINBLKS.setStatus('mandatory')
oramodFootprtOUTBLKS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtOUTBLKS.setStatus('mandatory')
oramodFootprtMSGSSENT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtMSGSSENT.setStatus('mandatory')
oramodFootprtMSGSRCVD = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtMSGSRCVD.setStatus('mandatory')
oramodFootprtSYSCALLS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtSYSCALLS.setStatus('mandatory')
oramodFootprtMINORPGFLTS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtMINORPGFLTS.setStatus('mandatory')
oramodFootprtMAJORPGFLTS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtMAJORPGFLTS.setStatus('mandatory')
oramodFootprtNUMSWAPS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtNUMSWAPS.setStatus('mandatory')
oramodFootprtVOLCNTX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtVOLCNTX.setStatus('mandatory')
oramodFootprtINVOLCNTX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtINVOLCNTX.setStatus('mandatory')
oramodFootprtHOMESIZE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtHOMESIZE.setStatus('mandatory')
oramodFootprtDBDISKSIZE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtDBDISKSIZE.setStatus('mandatory')
oramodFootprtLASTUPDATE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 1, 1, 1, 20), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFootprtLASTUPDATE.setStatus('mandatory')
oramodFFootprtTable = MibTable((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 2, 1), )
if mibBuilder.loadTexts: oramodFFootprtTable.setStatus('mandatory')
oramodFFootprtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 2, 1, 1), ).setIndexNames((0, "EMPIRE-ORAMOD", "oramodFFootprtSIDINDX"), (0, "EMPIRE-ORAMOD", "oramodFFootprtFILEINDX"))
if mibBuilder.loadTexts: oramodFFootprtEntry.setStatus('mandatory')
oramodFFootprtSIDINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFFootprtSIDINDX.setStatus('mandatory')
oramodFFootprtFILEINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFFootprtFILEINDX.setStatus('mandatory')
oramodFFootprtFILETYPE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFFootprtFILETYPE.setStatus('mandatory')
oramodFFootprtFILENAME = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFFootprtFILENAME.setStatus('mandatory')
oramodFFootprtCRTTS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 2, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFFootprtCRTTS.setStatus('mandatory')
oramodFFootprtCRTKBYTES = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFFootprtCRTKBYTES.setStatus('mandatory')
oramodFFootprtKBYTES = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFFootprtKBYTES.setStatus('mandatory')
oramodFFootprtBLOCKS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFFootprtBLOCKS.setStatus('mandatory')
oramodFFootprtSTATUS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 2, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFFootprtSTATUS.setStatus('mandatory')
oramodFFootprtRECOVER = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 2, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFFootprtRECOVER.setStatus('mandatory')
oramodFFootprtAVGIOTIM = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 1, 2, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodFFootprtAVGIOTIM.setStatus('mandatory')
oramodMetricsTable = MibTable((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1), )
if mibBuilder.loadTexts: oramodMetricsTable.setStatus('mandatory')
oramodMetricsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1), ).setIndexNames((0, "EMPIRE-ORAMOD", "oramodMetricsSIDINDX"))
if mibBuilder.loadTexts: oramodMetricsEntry.setStatus('mandatory')
oramodMetricsSIDINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsSIDINDX.setStatus('mandatory')
oramodMetricsBCPT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsBCPT.setStatus('mandatory')
oramodMetricsBGR = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsBGR.setStatus('mandatory')
oramodMetricsBVPT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsBVPT.setStatus('mandatory')
oramodMetricsCHR = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsCHR.setStatus('mandatory')
oramodMetricsCR = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsCR.setStatus('mandatory')
oramodMetricsCPT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsCPT.setStatus('mandatory')
oramodMetricsCBR = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsCBR.setStatus('mandatory')
oramodMetricsCCR = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsCCR.setStatus('mandatory')
oramodMetricsCRR = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsCRR.setStatus('mandatory')
oramodMetricsLCM = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsLCM.setStatus('mandatory')
oramodMetricsRTUC = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsRTUC.setStatus('mandatory')
oramodMetricsRLSW = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsRLSW.setStatus('mandatory')
oramodMetricsRSR = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsRSR.setStatus('mandatory')
oramodMetricsSOR = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsSOR.setStatus('mandatory')
oramodMetricsTRR = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsTRR.setStatus('mandatory')
oramodMetricsUCR = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsUCR.setStatus('mandatory')
oramodMetricsUCPP = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsUCPP.setStatus('mandatory')
oramodMetricsURR = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsURR.setStatus('mandatory')
oramodMetricsSGALCE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsSGALCE.setStatus('mandatory')
oramodMetricsSGADDCE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsSGADDCE.setStatus('mandatory')
oramodMetricsDBTOTALRW = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsDBTOTALRW.setStatus('mandatory')
oramodMetricsDBBLKCHG = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsDBBLKCHG.setStatus('mandatory')
oramodMetricsDBBLKGET = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsDBBLKGET.setStatus('mandatory')
oramodMetricsDBCNSTGET = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsDBCNSTGET.setStatus('mandatory')
oramodMetricsDBPHYSREAD = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsDBPHYSREAD.setStatus('mandatory')
oramodMetricsDBSORTDISK = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsDBSORTDISK.setStatus('mandatory')
oramodMetricsDBSORTMEM = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsDBSORTMEM.setStatus('mandatory')
oramodMetricsBLKFREEWAIT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsBLKFREEWAIT.setStatus('mandatory')
oramodMetricsMTHRDQUEUEWAIT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsMTHRDQUEUEWAIT.setStatus('mandatory')
oramodMetricsSESSHIWTRMEM = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsSESSHIWTRMEM.setStatus('mandatory')
oramodMetricsSESSCURRMEM = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsSESSCURRMEM.setStatus('mandatory')
oramodMetricsSESSHIWTR = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsSESSHIWTR.setStatus('mandatory')
oramodMetricsSESSCURRENT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsSESSCURRENT.setStatus('mandatory')
oramodMetricsUSERCOMMITS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsUSERCOMMITS.setStatus('mandatory')
oramodMetricsUSERROLLBACK = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsUSERROLLBACK.setStatus('mandatory')
oramodMetricsUSERCALLS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsUSERCALLS.setStatus('mandatory')
oramodMetricsDBPHYSWRTS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsDBPHYSWRTS.setStatus('mandatory')
oramodMetricsTBLSCANROWS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsTBLSCANROWS.setStatus('mandatory')
oramodMetricsTBLFTCHROWID = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsTBLFTCHROWID.setStatus('mandatory')
oramodMetricsTBLFTCHCROW = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsTBLFTCHCROW.setStatus('mandatory')
oramodMetricsRECRSVCALLS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsRECRSVCALLS.setStatus('mandatory')
oramodMetricsCNSTCHGS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsCNSTCHGS.setStatus('mandatory')
oramodMetricsPARSECNT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsPARSECNT.setStatus('mandatory')
oramodMetricsCPUTM = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsCPUTM.setStatus('mandatory')
oramodMetricsLOGFILESWTCH = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsLOGFILESWTCH.setStatus('mandatory')
oramodMetricsARCHIVER = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 47), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsARCHIVER.setStatus('mandatory')
oramodMetricsDATABASESTATUS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 48), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsDATABASESTATUS.setStatus('mandatory')
oramodMetricsSHUTDOWNPENDING = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 49), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsSHUTDOWNPENDING.setStatus('mandatory')
oramodMetricsLASTUPDATE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 2, 1, 1, 50), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodMetricsLASTUPDATE.setStatus('mandatory')
oramodSgaDddAggTable = MibTable((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 1, 1), )
if mibBuilder.loadTexts: oramodSgaDddAggTable.setStatus('mandatory')
oramodSgaDddAggEntry = MibTableRow((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 1, 1, 1), ).setIndexNames((0, "EMPIRE-ORAMOD", "oramodSGAAGGSIDINDX"))
if mibBuilder.loadTexts: oramodSgaDddAggEntry.setStatus('mandatory')
oramodSGAAGGSIDINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGAAGGSIDINDX.setStatus('mandatory')
oramodSGAAGGCNT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGAAGGCNT.setStatus('mandatory')
oramodSGAAGGUSGE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGAAGGUSGE.setStatus('mandatory')
oramodSGAAGGFIX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGAAGGFIX.setStatus('mandatory')
oramodSGAAGGGET = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGAAGGGET.setStatus('mandatory')
oramodSGAAGGGETMISS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGAAGGGETMISS.setStatus('mandatory')
oramodSGAAGGSCAN = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGAAGGSCAN.setStatus('mandatory')
oramodSGAAGGSCANMISS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGAAGGSCANMISS.setStatus('mandatory')
oramodSGAAGGSCANCPLT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGAAGGSCANCPLT.setStatus('mandatory')
oramodSGAAGGMODS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGAAGGMODS.setStatus('mandatory')
oramodSGAAGGFLUSH = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGAAGGFLUSH.setStatus('mandatory')
oramodSgaDlciTable = MibTable((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 2, 1), )
if mibBuilder.loadTexts: oramodSgaDlciTable.setStatus('mandatory')
oramodSgaDlciEntry = MibTableRow((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 2, 1, 1), ).setIndexNames((0, "EMPIRE-ORAMOD", "oramodSGADLCISIDINDX"), (0, "EMPIRE-ORAMOD", "oramodSGADLCIINDX"))
if mibBuilder.loadTexts: oramodSgaDlciEntry.setStatus('mandatory')
oramodSGADLCISIDINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGADLCISIDINDX.setStatus('mandatory')
oramodSGADLCIINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGADLCIINDX.setStatus('mandatory')
oramodSGADLCINAME = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGADLCINAME.setStatus('mandatory')
oramodSGADLCIGET = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGADLCIGET.setStatus('mandatory')
oramodSGADLCIGETHIT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGADLCIGETHIT.setStatus('mandatory')
oramodSGADLCIGETHITRT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 2, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGADLCIGETHITRT.setStatus('mandatory')
oramodSGADLCIPIN = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGADLCIPIN.setStatus('mandatory')
oramodSGADLCIPINHIT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGADLCIPINHIT.setStatus('mandatory')
oramodSGADLCIPINHITRT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 2, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGADLCIPINHITRT.setStatus('mandatory')
oramodSGADLCIRELOAD = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGADLCIRELOAD.setStatus('mandatory')
oramodSGADLCIINVALID = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 3, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodSGADLCIINVALID.setStatus('mandatory')
oramodRedoLogBufTable = MibTable((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 4, 1), )
if mibBuilder.loadTexts: oramodRedoLogBufTable.setStatus('mandatory')
oramodRedoLogBufEntry = MibTableRow((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 4, 1, 1), ).setIndexNames((0, "EMPIRE-ORAMOD", "oramodREDOSIDINDX"))
if mibBuilder.loadTexts: oramodRedoLogBufEntry.setStatus('mandatory')
oramodREDOSIDINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodREDOSIDINDX.setStatus('mandatory')
oramodREDOBLKWRT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 4, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodREDOBLKWRT.setStatus('mandatory')
oramodREDOENTRIES = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodREDOENTRIES.setStatus('mandatory')
oramodREDOSIZE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 4, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodREDOSIZE.setStatus('mandatory')
oramodREDOSPACERQST = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodREDOSPACERQST.setStatus('mandatory')
oramodREDOSPACEWAIT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 4, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodREDOSPACEWAIT.setStatus('mandatory')
oramodREDOSYNCHWRT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 4, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodREDOSYNCHWRT.setStatus('mandatory')
oramodREDOSYNCHTM = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 4, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodREDOSYNCHTM.setStatus('mandatory')
oramodREDOWASTAGE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 4, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodREDOWASTAGE.setStatus('mandatory')
oramodREDORETRIES = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodREDORETRIES.setStatus('mandatory')
oramodREDOLASTUPDATE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 4, 1, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodREDOLASTUPDATE.setStatus('mandatory')
oramodRollBackTable = MibTable((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 5, 1), )
if mibBuilder.loadTexts: oramodRollBackTable.setStatus('mandatory')
oramodRollBackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 5, 1, 1), ).setIndexNames((0, "EMPIRE-ORAMOD", "oramodRollBackSIDINDX"), (0, "EMPIRE-ORAMOD", "oramodRollBackSEGINDX"))
if mibBuilder.loadTexts: oramodRollBackEntry.setStatus('mandatory')
oramodRollBackSIDINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodRollBackSIDINDX.setStatus('mandatory')
oramodRollBackSEGINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodRollBackSEGINDX.setStatus('mandatory')
oramodRollBackSEGNAME = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 5, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodRollBackSEGNAME.setStatus('mandatory')
oramodRollBackEXTENTS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 5, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodRollBackEXTENTS.setStatus('mandatory')
oramodRollBackRSSIZE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 5, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodRollBackRSSIZE.setStatus('mandatory')
oramodRollBackWRITES = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 5, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodRollBackWRITES.setStatus('mandatory')
oramodRollBackGETS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 5, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodRollBackGETS.setStatus('mandatory')
oramodRollBackWAITS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 5, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodRollBackWAITS.setStatus('mandatory')
oramodRollBackOPTSIZE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 5, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodRollBackOPTSIZE.setStatus('mandatory')
oramodRollBackSHRINKS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 5, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodRollBackSHRINKS.setStatus('mandatory')
oramodRollBackWRAPS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 5, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodRollBackWRAPS.setStatus('mandatory')
oramodRollBackEXTENDS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 5, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodRollBackEXTENDS.setStatus('mandatory')
oramodRollBackAVESHRINK = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 5, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodRollBackAVESHRINK.setStatus('mandatory')
oramodRollBackAVEACTIVE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 5, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodRollBackAVEACTIVE.setStatus('mandatory')
oramodRollBackSTATUS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 5, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodRollBackSTATUS.setStatus('mandatory')
oramodWaitsTable = MibTable((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 6, 1), )
if mibBuilder.loadTexts: oramodWaitsTable.setStatus('mandatory')
oramodWaitsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 6, 1, 1), ).setIndexNames((0, "EMPIRE-ORAMOD", "oramodWaitsSIDINDX"), (0, "EMPIRE-ORAMOD", "oramodWaitsEVENTINDX"))
if mibBuilder.loadTexts: oramodWaitsEntry.setStatus('mandatory')
oramodWaitsSIDINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodWaitsSIDINDX.setStatus('mandatory')
oramodWaitsEVENTINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodWaitsEVENTINDX.setStatus('mandatory')
oramodWaitsEVENT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 6, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodWaitsEVENT.setStatus('mandatory')
oramodWaitsTOTALWAITS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 6, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodWaitsTOTALWAITS.setStatus('mandatory')
oramodWaitsTOTALTIMOUT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 6, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodWaitsTOTALTIMOUT.setStatus('mandatory')
oramodWaitsTIMEWAITED = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 6, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodWaitsTIMEWAITED.setStatus('mandatory')
oramodWaitsAVGWAIT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 6, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodWaitsAVGWAIT.setStatus('mandatory')
oramodExpSqlTable = MibTable((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 7, 1), )
if mibBuilder.loadTexts: oramodExpSqlTable.setStatus('mandatory')
oramodExpSqlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 7, 1, 1), ).setIndexNames((0, "EMPIRE-ORAMOD", "oramodExpSqlSIDINDX"), (0, "EMPIRE-ORAMOD", "oramodExpSqlSQLINDX"))
if mibBuilder.loadTexts: oramodExpSqlEntry.setStatus('mandatory')
oramodExpSqlSIDINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodExpSqlSIDINDX.setStatus('mandatory')
oramodExpSqlSQLINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodExpSqlSQLINDX.setStatus('mandatory')
oramodExpSqlEXECUTION = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 7, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodExpSqlEXECUTION.setStatus('mandatory')
oramodExpSqlDISKREAD = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 7, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodExpSqlDISKREAD.setStatus('mandatory')
oramodExpSqlPARSECNT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 7, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodExpSqlPARSECNT.setStatus('mandatory')
oramodExpSqlBUFFGETS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 7, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodExpSqlBUFFGETS.setStatus('mandatory')
oramodExpSqlSORTS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 7, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodExpSqlSORTS.setStatus('mandatory')
oramodExpSqlSQL = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 7, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodExpSqlSQL.setStatus('mandatory')
oramodTblspTable = MibTable((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 8, 1), )
if mibBuilder.loadTexts: oramodTblspTable.setStatus('mandatory')
oramodTblspEntry = MibTableRow((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 8, 1, 1), ).setIndexNames((0, "EMPIRE-ORAMOD", "oramodTblspSIDINDX"), (0, "EMPIRE-ORAMOD", "oramodTblspTBLSPINDX"))
if mibBuilder.loadTexts: oramodTblspEntry.setStatus('mandatory')
oramodTblspSIDINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTblspSIDINDX.setStatus('mandatory')
oramodTblspTBLSPINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTblspTBLSPINDX.setStatus('mandatory')
oramodTblspTBLSPNAME = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 8, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTblspTBLSPNAME.setStatus('mandatory')
oramodTblspFILENAME = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 8, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTblspFILENAME.setStatus('mandatory')
oramodTblspEXTENTS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 8, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTblspEXTENTS.setStatus('mandatory')
oramodTblspLRGEXTENT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 8, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTblspLRGEXTENT.setStatus('mandatory')
oramodTblspSMEXTENT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 8, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTblspSMEXTENT.setStatus('mandatory')
oramodTblspINCREMENTBY = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 8, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTblspINCREMENTBY.setStatus('mandatory')
oramodTblspBYTESCOALSD = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 8, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTblspBYTESCOALSD.setStatus('mandatory')
oramodTblspBYTESFREE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 8, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodTblspBYTESFREE.setStatus('mandatory')
oramodLockTable = MibTable((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 1, 1), )
if mibBuilder.loadTexts: oramodLockTable.setStatus('mandatory')
oramodLockEntry = MibTableRow((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 1, 1, 1), ).setIndexNames((0, "EMPIRE-ORAMOD", "oramodLockSIDINDX"), (0, "EMPIRE-ORAMOD", "oramodLockUSERINDX"))
if mibBuilder.loadTexts: oramodLockEntry.setStatus('mandatory')
oramodLockSIDINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLockSIDINDX.setStatus('mandatory')
oramodLockUSERINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLockUSERINDX.setStatus('mandatory')
oramodLockUSERNAME = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLockUSERNAME.setStatus('mandatory')
oramodLockOBJECT = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLockOBJECT.setStatus('mandatory')
oramodLockTYPE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLockTYPE.setStatus('mandatory')
oramodLockMODE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLockMODE.setStatus('mandatory')
oramodLockCTIME = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 1, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLockCTIME.setStatus('mandatory')
oramodLockBLOCK = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLockBLOCK.setStatus('mandatory')
oramodLatchTable = MibTable((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 2, 1), )
if mibBuilder.loadTexts: oramodLatchTable.setStatus('mandatory')
oramodLatchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 2, 1, 1), ).setIndexNames((0, "EMPIRE-ORAMOD", "oramodLatchSIDINDX"), (0, "EMPIRE-ORAMOD", "oramodLatchLATCHINDX"))
if mibBuilder.loadTexts: oramodLatchEntry.setStatus('mandatory')
oramodLatchSIDINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLatchSIDINDX.setStatus('mandatory')
oramodLatchLATCHINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLatchLATCHINDX.setStatus('mandatory')
oramodLatchLATCHNUM = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLatchLATCHNUM.setStatus('mandatory')
oramodLatchLATCHNAME = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLatchLATCHNAME.setStatus('mandatory')
oramodLatchGETS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLatchGETS.setStatus('mandatory')
oramodLatchMISSES = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLatchMISSES.setStatus('mandatory')
oramodLatchSLEEPS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLatchSLEEPS.setStatus('mandatory')
oramodLatchIMDGETS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLatchIMDGETS.setStatus('mandatory')
oramodLatchIMDMISSES = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLatchIMDMISSES.setStatus('mandatory')
oramodLatchWAITSHOLDING = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLatchWAITSHOLDING.setStatus('mandatory')
oramodLatchSPINGETS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 9, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodLatchSPINGETS.setStatus('mandatory')
oramodBackupTable = MibTable((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 10, 1, 1), )
if mibBuilder.loadTexts: oramodBackupTable.setStatus('mandatory')
oramodBackupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 10, 1, 1, 1), ).setIndexNames((0, "EMPIRE-ORAMOD", "oramodBackupSIDINDX"), (0, "EMPIRE-ORAMOD", "oramodBackupFILENUM"))
if mibBuilder.loadTexts: oramodBackupEntry.setStatus('mandatory')
oramodBackupSIDINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 10, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodBackupSIDINDX.setStatus('mandatory')
oramodBackupFILENUM = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 10, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodBackupFILENUM.setStatus('mandatory')
oramodBackupSTATUS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 10, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodBackupSTATUS.setStatus('mandatory')
oramodBackupCHANGENUM = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 10, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodBackupCHANGENUM.setStatus('mandatory')
oramodBackupDATE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 10, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodBackupDATE.setStatus('mandatory')
oramodArcDestTable = MibTable((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 11, 1, 1), )
if mibBuilder.loadTexts: oramodArcDestTable.setStatus('mandatory')
oramodArcDestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 11, 1, 1, 1), ).setIndexNames((0, "EMPIRE-ORAMOD", "oramodArcDestSIDINDX"), (0, "EMPIRE-ORAMOD", "oramodArcDestARCINDX"))
if mibBuilder.loadTexts: oramodArcDestEntry.setStatus('mandatory')
oramodArcDestSIDINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 11, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodArcDestSIDINDX.setStatus('mandatory')
oramodArcDestARCINDX = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 11, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodArcDestARCINDX.setStatus('mandatory')
oramodArcDestARCMODE = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 11, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodArcDestARCMODE.setStatus('mandatory')
oramodArcDestSTATUS = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 11, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodArcDestSTATUS.setStatus('mandatory')
oramodArcDestDEST = MibTableColumn((1, 3, 6, 1, 4, 1, 546, 16, 4, 11, 11, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oramodArcDestDEST.setStatus('mandatory')
mibBuilder.exportSymbols("EMPIRE-ORAMOD", oramodREDOWASTAGE=oramodREDOWASTAGE, oramodExpSqlSIDINDX=oramodExpSqlSIDINDX, oramodSGADLCIGETHIT=oramodSGADLCIGETHIT, oramodTtlNUMSWAPS=oramodTtlNUMSWAPS, oramodMetricsEntry=oramodMetricsEntry, oramodFootprtSYSCALLS=oramodFootprtSYSCALLS, oramodFootprtDBDISKSIZE=oramodFootprtDBDISKSIZE, oramodExpSqlDISKREAD=oramodExpSqlDISKREAD, oramodMetricsRTUC=oramodMetricsRTUC, oramodSgaDddAggEntry=oramodSgaDddAggEntry, oramodMetricsPARSECNT=oramodMetricsPARSECNT, oramodFFootprtRECOVER=oramodFFootprtRECOVER, oramodRollBackEXTENTS=oramodRollBackEXTENTS, oramodREDOSIZE=oramodREDOSIZE, oramodCfgLfMEMBER=oramodCfgLfMEMBER, oramodREDOSPACERQST=oramodREDOSPACERQST, oramodMetrics=oramodMetrics, oramodFFootprtSTATUS=oramodFFootprtSTATUS, oramodSGADLCIGETHITRT=oramodSGADLCIGETHITRT, oramodWaitsTOTALWAITS=oramodWaitsTOTALWAITS, oramodCfgDfEntry=oramodCfgDfEntry, oramodMetricsSESSCURRENT=oramodMetricsSESSCURRENT, oramodSGAAGGGETMISS=oramodSGAAGGGETMISS, oramodMetricsBVPT=oramodMetricsBVPT, oramodDbCfgTRNSACTNS=oramodDbCfgTRNSACTNS, oramodSGADLCIPINHIT=oramodSGADLCIPINHIT, oraModMode=oraModMode, oramodTtlMAJORPGFLTS=oramodTtlMAJORPGFLTS, oramodFootprtCPUTIME=oramodFootprtCPUTIME, oramodSGAAGGFLUSH=oramodSGAAGGFLUSH, oramodCfgDfCRTTIME=oramodCfgDfCRTTIME, oramodDbCfg=oramodDbCfg, oramodRollBackWRAPS=oramodRollBackWRAPS, oramodMetricsSESSHIWTR=oramodMetricsSESSHIWTR, oramodTtlFootprt=oramodTtlFootprt, oramodFootprtVOLCNTX=oramodFootprtVOLCNTX, oramodMetricsSGADDCE=oramodMetricsSGADDCE, oramodREDOLASTUPDATE=oramodREDOLASTUPDATE, oramodTblspSIDINDX=oramodTblspSIDINDX, oramodTblspEXTENTS=oramodTblspEXTENTS, oramodLockTYPE=oramodLockTYPE, oramodSGAAGGSCAN=oramodSGAAGGSCAN, oramodExpSqlTable=oramodExpSqlTable, oramodMetricsUSERCOMMITS=oramodMetricsUSERCOMMITS, oramodFFootprtFILENAME=oramodFFootprtFILENAME, oramodFootprt=oramodFootprt, oramodCfgDfTBLESPACERFILENUM=oramodCfgDfTBLESPACERFILENUM, oramodMetricsUSERCALLS=oramodMetricsUSERCALLS, oramodTtlMEMSIZE=oramodTtlMEMSIZE, oramodFootprtMSGSRCVD=oramodFootprtMSGSRCVD, oramodFootprint=oramodFootprint, oramodFFootprt=oramodFFootprt, oramodFootprtPERCENTMEM=oramodFootprtPERCENTMEM, oramodLatchSIDINDX=oramodLatchSIDINDX, oramodMetricsDBSORTDISK=oramodMetricsDBSORTDISK, oramodArcDestSTATUS=oramodArcDestSTATUS, oramodSGADLCIPIN=oramodSGADLCIPIN, oramodFootprtINBLKS=oramodFootprtINBLKS, oramodExpSqlEntry=oramodExpSqlEntry, oramodCfgSgaVARIABLE=oramodCfgSgaVARIABLE, oramodMetricsMTHRDQUEUEWAIT=oramodMetricsMTHRDQUEUEWAIT, oramodMetricsDATABASESTATUS=oramodMetricsDATABASESTATUS, oramodDbCfgHOME=oramodDbCfgHOME, oramodMetricsLASTUPDATE=oramodMetricsLASTUPDATE, oramodCfgDfUNRCVRBLETIME=oramodCfgDfUNRCVRBLETIME, oramodMetricsSESSHIWTRMEM=oramodMetricsSESSHIWTRMEM, oramodTblspBYTESCOALSD=oramodTblspBYTESCOALSD, oramodLock=oramodLock, oramodMetricsLCM=oramodMetricsLCM, oramodREDOSIDINDX=oramodREDOSIDINDX, oramodCfgDfUNRCVRBLECHG=oramodCfgDfUNRCVRBLECHG, oramodFootprtSIDINDX=oramodFootprtSIDINDX, oramodFFootprtFILETYPE=oramodFFootprtFILETYPE, oramodWaitsEVENT=oramodWaitsEVENT, oramodDbCfgLARGEPOOLSIZE=oramodDbCfgLARGEPOOLSIZE, oramodCfgDfRSTLOGSCHGNUM=oramodCfgDfRSTLOGSCHGNUM, oramodFootprtLASTUPDATE=oramodFootprtLASTUPDATE, oramodMetricsLOGFILESWTCH=oramodMetricsLOGFILESWTCH, oramodTblspTBLSPNAME=oramodTblspTBLSPNAME, oramodRollBackAVESHRINK=oramodRollBackAVESHRINK, oramodFFootprtTable=oramodFFootprtTable, oramodBackupSIDINDX=oramodBackupSIDINDX, oramodExpSqlSORTS=oramodExpSqlSORTS, oramodFootprtTHREADS=oramodFootprtTHREADS, oramodCfgDfTable=oramodCfgDfTable, oramodBackups=oramodBackups, oramodDbCfgMAXROLLSEG=oramodDbCfgMAXROLLSEG, oramodCfgDf=oramodCfgDf, oramodMetricsSOR=oramodMetricsSOR, oramodCfgDfENABLED=oramodCfgDfENABLED, oramodLatchLATCHINDX=oramodLatchLATCHINDX, oramodDbCfgMAXSESSION=oramodDbCfgMAXSESSION, oramodLatchIMDGETS=oramodLatchIMDGETS, oramodRollBackWAITS=oramodRollBackWAITS, oramodMetricsCNSTCHGS=oramodMetricsCNSTCHGS, applications=applications, oramodDbCfgTable=oramodDbCfgTable, oramodFootprtTable=oramodFootprtTable, oramodDbCfgDBFILES=oramodDbCfgDBFILES, oramodMetricsCPT=oramodMetricsCPT, oramodTtlINBLKS=oramodTtlINBLKS, oramodRollBackRSSIZE=oramodRollBackRSSIZE, oramodMetricsURR=oramodMetricsURR, oramodBackupTable=oramodBackupTable, oramodSGADLCIGET=oramodSGADLCIGET, oramodRollBack=oramodRollBack, oramodREDORETRIES=oramodREDORETRIES, oramodLatchSLEEPS=oramodLatchSLEEPS, oramodCfgDfRSTLOGSTIME=oramodCfgDfRSTLOGSTIME, oramodCfgDfCRTKBYTES=oramodCfgDfCRTKBYTES, oramodCfgLfEntry=oramodCfgLfEntry, oramodMetricsDBPHYSREAD=oramodMetricsDBPHYSREAD, oramodTblspEntry=oramodTblspEntry, oramodSgaDddAggTable=oramodSgaDddAggTable, oramodTblspINCREMENTBY=oramodTblspINCREMENTBY, oramodWaitsTOTALTIMOUT=oramodWaitsTOTALTIMOUT, oramodCfgDfSTATUS=oramodCfgDfSTATUS, oramodMetricsCHR=oramodMetricsCHR, oramodLockCTIME=oramodLockCTIME, oramodSGA=oramodSGA, oramodDbCfgCKPTINTRVL=oramodDbCfgCKPTINTRVL, oramodPerf=oramodPerf, oramodTblspTable=oramodTblspTable, oramodCfgSgaREDOBUFF=oramodCfgSgaREDOBUFF, oramodMetricsCPUTM=oramodMetricsCPUTM, oramodFootprtHOMESIZE=oramodFootprtHOMESIZE, oramodCfgDfSIDINDX=oramodCfgDfSIDINDX, oramodTtlMSGSRCVD=oramodTtlMSGSRCVD, oramodTtlOUTBLKS=oramodTtlOUTBLKS, oramodDbCfgSHAREDPOOLRSSIZE=oramodDbCfgSHAREDPOOLRSSIZE, oramodLatchEntry=oramodLatchEntry, oramodRollBackWRITES=oramodRollBackWRITES, oramodLatchLATCHNAME=oramodLatchLATCHNAME, oramodFFootprtBLOCKS=oramodFFootprtBLOCKS, oramodDbCfgCRTDT=oramodDbCfgCRTDT, oramodDbCfgTRNSACTNSPERSEG=oramodDbCfgTRNSACTNSPERSEG, oramodArcDest=oramodArcDest, oramodCfgSgaEntry=oramodCfgSgaEntry, oramodLockBLOCK=oramodLockBLOCK, oramodMetricsBCPT=oramodMetricsBCPT, oramodLockMODE=oramodLockMODE, oramodDbCfgSID=oramodDbCfgSID, oramodWaitsTIMEWAITED=oramodWaitsTIMEWAITED, oramodFootprtMEMSIZE=oramodFootprtMEMSIZE, oramodFootprtPERCENTCPU=oramodFootprtPERCENTCPU, oramodWaitsAVGWAIT=oramodWaitsAVGWAIT, oramodExpSqlSQLINDX=oramodExpSqlSQLINDX, oramodSGADLCIRELOAD=oramodSGADLCIRELOAD, oramodCfgDfBLOCKS=oramodCfgDfBLOCKS, oramodLockUSERINDX=oramodLockUSERINDX, oramodExpSqlPARSECNT=oramodExpSqlPARSECNT, oramodLatchIMDMISSES=oramodLatchIMDMISSES, oramodBackupCHANGENUM=oramodBackupCHANGENUM, oramodCfgLfGROUPNUM=oramodCfgLfGROUPNUM, oramodDbCfgCPUCNT=oramodDbCfgCPUCNT, oramodRollBackAVEACTIVE=oramodRollBackAVEACTIVE, oramodTtlMSGSSENT=oramodTtlMSGSSENT, oraFlag=oraFlag, oramodMetricsTBLFTCHROWID=oramodMetricsTBLFTCHROWID, oramodDbCfgJAVAPOOLSIZE=oramodDbCfgJAVAPOOLSIZE, oramodCfgLf=oramodCfgLf, oramodLocks=oramodLocks, oramodExpSqlSQL=oramodExpSqlSQL, oramodMetricsDBPHYSWRTS=oramodMetricsDBPHYSWRTS, oraModVersion=oraModVersion, oramodRollBackSIDINDX=oramodRollBackSIDINDX, oramodREDOSYNCHWRT=oramodREDOSYNCHWRT, oramodFootprtRSS=oramodFootprtRSS, oramodMetricsRSR=oramodMetricsRSR, oramodMetricsCRR=oramodMetricsCRR, oramodFFootprtCRTKBYTES=oramodFFootprtCRTKBYTES, oramodArcDestTable=oramodArcDestTable, oramodDbCfgSORTAREASIZE=oramodDbCfgSORTAREASIZE, oramodCfgDfERROR=oramodCfgDfERROR, oramodDbCfgCTRLFILETYPE=oramodDbCfgCTRLFILETYPE, oramodSGAAGGMODS=oramodSGAAGGMODS, oramodLockSIDINDX=oramodLockSIDINDX, oramodRollBackEXTENDS=oramodRollBackEXTENDS, oramodArcDestEntry=oramodArcDestEntry, oramodWaitsTable=oramodWaitsTable, oramodCfgSgaTable=oramodCfgSgaTable, oramodRollBackSEGINDX=oramodRollBackSEGINDX, oramodMetricsUCPP=oramodMetricsUCPP, oramodFootprtMINORPGFLTS=oramodFootprtMINORPGFLTS, oramodDbCfgDBBLKBUFF=oramodDbCfgDBBLKBUFF, oramodArcDestARCINDX=oramodArcDestARCINDX, oramodTblspFILENAME=oramodTblspFILENAME, oramodSGADLCIPINHITRT=oramodSGADLCIPINHITRT, oramodTtlDISKSIZE=oramodTtlDISKSIZE, oramodRollBackSEGNAME=oramodRollBackSEGNAME, oramodDbCfgCNTRLFILES=oramodDbCfgCNTRLFILES, oramodFFootprtEntry=oramodFFootprtEntry, oramodMetricsTable=oramodMetricsTable, oramodFFootprtFILEINDX=oramodFFootprtFILEINDX, oramodDbCfgSIDINDX=oramodDbCfgSIDINDX, oramodMetricsUCR=oramodMetricsUCR, oramodRedoLogBuf=oramodRedoLogBuf, oramodSGAAGGGET=oramodSGAAGGGET, oramodTtlVOLCNTX=oramodTtlVOLCNTX, oramodMetricsARCHIVER=oramodMetricsARCHIVER, oramodFootprtMSGSSENT=oramodFootprtMSGSSENT, oramodCfgDfTBLESPACENUM=oramodCfgDfTBLESPACENUM, oramodCfgDfBLOCKSIZE=oramodCfgDfBLOCKSIZE, oramodFootprtMAJORPGFLTS=oramodFootprtMAJORPGFLTS, oramodMetricsCR=oramodMetricsCR, oramodLockEntry=oramodLockEntry, oramodArcDestARCMODE=oramodArcDestARCMODE, oramodLatchSPINGETS=oramodLatchSPINGETS, oramodWaitsSIDINDX=oramodWaitsSIDINDX, oramodRedoLogBufTable=oramodRedoLogBufTable, oramodTtlTHREADS=oramodTtlTHREADS, oramodLockUSERNAME=oramodLockUSERNAME, oramodBackupFILENUM=oramodBackupFILENUM, oramodDbCfgDBBLKSIZE=oramodDbCfgDBBLKSIZE, oramodRollBackSTATUS=oramodRollBackSTATUS, oramodCfgDfKBYTES=oramodCfgDfKBYTES, oramodSGADLCIINDX=oramodSGADLCIINDX, oramodMetricsSHUTDOWNPENDING=oramodMetricsSHUTDOWNPENDING, oramodMetricsDBBLKCHG=oramodMetricsDBBLKCHG, oramodDbCfgBASE=oramodDbCfgBASE, oramodMetricsDBCNSTGET=oramodMetricsDBCNSTGET, oramodDbCfgID=oramodDbCfgID, oramodFootprtOUTBLKS=oramodFootprtOUTBLKS, oramodMetricsDBTOTALRW=oramodMetricsDBTOTALRW, oramodMetricsTRR=oramodMetricsTRR, oramodBackupSTATUS=oramodBackupSTATUS, oramodFFootprtAVGIOTIM=oramodFFootprtAVGIOTIM, oramodSgaDlciEntry=oramodSgaDlciEntry, oramodLatchLATCHNUM=oramodLatchLATCHNUM, oramodDbCfgOPENMODE=oramodDbCfgOPENMODE, oramodSGADLCIINVALID=oramodSGADLCIINVALID, oramodMetricsDBBLKGET=oramodMetricsDBBLKGET, oramodDbCfgTIMEDSTATISTICS=oramodDbCfgTIMEDSTATISTICS, oramodMetricsBGR=oramodMetricsBGR, oramodCfgDfFILENUM=oramodCfgDfFILENUM, oramodMetricsSIDINDX=oramodMetricsSIDINDX, oramodTblspTBLSPINDX=oramodTblspTBLSPINDX, oramodExpSqlBUFFGETS=oramodExpSqlBUFFGETS, oramodMetricsSESSCURRMEM=oramodMetricsSESSCURRMEM, oramodMetricsTBLSCANROWS=oramodMetricsTBLSCANROWS, oramodExpSqlEXECUTION=oramodExpSqlEXECUTION, oramodSgaDlci=oramodSgaDlci, oramodSgaDddAgg=oramodSgaDddAgg, oramodCfgDfFNAME=oramodCfgDfFNAME, oramodLatchMISSES=oramodLatchMISSES, oramodLatchTable=oramodLatchTable, oramodCfgSgaTOTALMEMALLOC=oramodCfgSgaTOTALMEMALLOC, oramodBackupEntry=oramodBackupEntry, oramodTtlCPUTIME=oramodTtlCPUTIME, oramodCfgLfSIDINDX=oramodCfgLfSIDINDX, oramodMetricsRLSW=oramodMetricsRLSW, oramodCfgLfMEMBERINDX=oramodCfgLfMEMBERINDX, oramodSGADLCINAME=oramodSGADLCINAME, oramodCfgSgaFIXEDSGA=oramodCfgSgaFIXEDSGA)
mibBuilder.exportSymbols("EMPIRE-ORAMOD", oramodWaitsEntry=oramodWaitsEntry, oramodMetricsTBLFTCHCROW=oramodMetricsTBLFTCHCROW, oramodFootprtEntry=oramodFootprtEntry, oramodCfgLfSTATUS=oramodCfgLfSTATUS, oramodREDOBLKWRT=oramodREDOBLKWRT, oramodSGADLCISIDINDX=oramodSGADLCISIDINDX, oramodRollBackTable=oramodRollBackTable, oramodFFootprtCRTTS=oramodFFootprtCRTTS, oramodExpSql=oramodExpSql, oramodRollBackSHRINKS=oramodRollBackSHRINKS, oramodMetricsSGALCE=oramodMetricsSGALCE, oramodLockTable=oramodLockTable, oramodMetricsUSERROLLBACK=oramodMetricsUSERROLLBACK, oramodMetricsDBSORTMEM=oramodMetricsDBSORTMEM, oramodSGAAGGFIX=oramodSGAAGGFIX, oramodSGAAGGSCANCPLT=oramodSGAAGGSCANCPLT, oramodTblsp=oramodTblsp, oramodMetricsRECRSVCALLS=oramodMetricsRECRSVCALLS, oramodRedoLogBufEntry=oramodRedoLogBufEntry, oramodCfg=oramodCfg, oramodCfgLfTable=oramodCfgLfTable, oramodArcDestDEST=oramodArcDestDEST, oramodMetricsCBR=oramodMetricsCBR, oramodSGAAGGSCANMISS=oramodSGAAGGSCANMISS, oramodTblspSMEXTENT=oramodTblspSMEXTENT, oramodREDOENTRIES=oramodREDOENTRIES, oramodTtlRSS=oramodTtlRSS, oramodCfgSgaDBBUFF=oramodCfgSgaDBBUFF, oramodTblspBYTESFREE=oramodTblspBYTESFREE, oramodArcDestSIDINDX=oramodArcDestSIDINDX, oramodBackupDATE=oramodBackupDATE, oramodCfgSgaSIDINDX=oramodCfgSgaSIDINDX, oramodCfgDfRECOVER=oramodCfgDfRECOVER, oramodSGAAGGCNT=oramodSGAAGGCNT, oramodDbCfgEntry=oramodDbCfgEntry, oramodTtlSYSCALLS=oramodTtlSYSCALLS, oramodTtlPERCENTCPU=oramodTtlPERCENTCPU, oramodRollBackGETS=oramodRollBackGETS, oramodBackup=oramodBackup, oramodTtlINVOLCNTX=oramodTtlINVOLCNTX, oramodLatchWAITSHOLDING=oramodLatchWAITSHOLDING, oramodDbCfgOPENCURSORS=oramodDbCfgOPENCURSORS, oramodREDOSPACEWAIT=oramodREDOSPACEWAIT, oramodREDOSYNCHTM=oramodREDOSYNCHTM, oramodFootprtNUMSWAPS=oramodFootprtNUMSWAPS, oramodTtlPERCENTMEM=oramodTtlPERCENTMEM, oramodFFootprtKBYTES=oramodFFootprtKBYTES, oramodFootprtINVOLCNTX=oramodFootprtINVOLCNTX, oramodDbCfgLOGMODE=oramodDbCfgLOGMODE, oramodSGAAGGSIDINDX=oramodSGAAGGSIDINDX, oramodFFootprtSIDINDX=oramodFFootprtSIDINDX, oramodTblspLRGEXTENT=oramodTblspLRGEXTENT, oramodWaits=oramodWaits, oramodArchive=oramodArchive, oramodMetricsCCR=oramodMetricsCCR, oramodDbCfgVERSION=oramodDbCfgVERSION, oracledb=oracledb, oramodSgaDlciTable=oramodSgaDlciTable, oramodMetricsBLKFREEWAIT=oramodMetricsBLKFREEWAIT, oramodLockOBJECT=oramodLockOBJECT, oramodDbCfgMAXPROCESS=oramodDbCfgMAXPROCESS, oramodLatch=oramodLatch, oramodLatchGETS=oramodLatchGETS, oramodSGAAGGUSGE=oramodSGAAGGUSGE, empire=empire, oramodTtlMINORPGFLTS=oramodTtlMINORPGFLTS, oramodRollBackOPTSIZE=oramodRollBackOPTSIZE, oramodRollBackEntry=oramodRollBackEntry, oramodDbCfgSHAREDPOOLSIZE=oramodDbCfgSHAREDPOOLSIZE, oramodWaitsEVENTINDX=oramodWaitsEVENTINDX, oramodCfgSga=oramodCfgSga)
