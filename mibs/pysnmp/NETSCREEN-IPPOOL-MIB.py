#
# PySNMP MIB module NETSCREEN-IPPOOL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-IPPOOL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
netscreenVpnMibModule, netscreenVpn = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenVpnMibModule", "netscreenVpn")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Bits, Counter32, IpAddress, MibIdentifier, Integer32, Unsigned32, Gauge32, Counter64, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, TimeTicks, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Bits", "Counter32", "IpAddress", "MibIdentifier", "Integer32", "Unsigned32", "Gauge32", "Counter64", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "TimeTicks", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
netscreenIppoolMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 4, 0, 9))
netscreenIppoolMibModule.setRevisions(('2004-05-03 00:00', '2004-03-03 00:00', '2003-11-13 00:00', '2001-09-28 00:00', '2000-08-27 00:00',))
if mibBuilder.loadTexts: netscreenIppoolMibModule.setLastUpdated('200405032022Z')
if mibBuilder.loadTexts: netscreenIppoolMibModule.setOrganization('Juniper Networks, Inc.')
nsVpnIpPool = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 4, 9))
nsVpnIpPoolTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 4, 9, 1), )
if mibBuilder.loadTexts: nsVpnIpPoolTable.setStatus('current')
nsVpnIpPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 4, 9, 1, 1), ).setIndexNames((0, "NETSCREEN-IPPOOL-MIB", "nsVpnIpPoolIndex"))
if mibBuilder.loadTexts: nsVpnIpPoolEntry.setStatus('current')
nsVpnIpPoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIpPoolIndex.setStatus('current')
nsVpnIpPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 9, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIpPoolName.setStatus('current')
nsVpnIpPoolStartIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 9, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIpPoolStartIp.setStatus('current')
nsVpnIpPoolEndIp = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 9, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIpPoolEndIp.setStatus('current')
nsVpnIpPoolIpUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 4, 9, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsVpnIpPoolIpUsed.setStatus('current')
mibBuilder.exportSymbols("NETSCREEN-IPPOOL-MIB", nsVpnIpPoolIpUsed=nsVpnIpPoolIpUsed, netscreenIppoolMibModule=netscreenIppoolMibModule, nsVpnIpPoolIndex=nsVpnIpPoolIndex, nsVpnIpPoolTable=nsVpnIpPoolTable, PYSNMP_MODULE_ID=netscreenIppoolMibModule, nsVpnIpPoolEntry=nsVpnIpPoolEntry, nsVpnIpPoolEndIp=nsVpnIpPoolEndIp, nsVpnIpPoolName=nsVpnIpPoolName, nsVpnIpPool=nsVpnIpPool, nsVpnIpPoolStartIp=nsVpnIpPoolStartIp)
