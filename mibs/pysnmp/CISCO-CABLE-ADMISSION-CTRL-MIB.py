#
# PySNMP MIB module CISCO-CABLE-ADMISSION-CTRL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-CABLE-ADMISSION-CTRL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:34:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
entPhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex")
InterfaceIndexOrZero, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "ifIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Bits, MibIdentifier, ModuleIdentity, NotificationType, Counter32, iso, Integer32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter64, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Bits", "MibIdentifier", "ModuleIdentity", "NotificationType", "Counter32", "iso", "Integer32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter64", "IpAddress", "Unsigned32")
TimeStamp, VariablePointer, StorageType, RowStatus, DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "VariablePointer", "StorageType", "RowStatus", "DisplayString", "TextualConvention", "TruthValue")
ciscoCableAdmCtrlMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 450))
ciscoCableAdmCtrlMIB.setRevisions(('2006-10-25 00:00', '2005-05-04 00:00',))
if mibBuilder.loadTexts: ciscoCableAdmCtrlMIB.setLastUpdated('200610250000Z')
if mibBuilder.loadTexts: ciscoCableAdmCtrlMIB.setOrganization('Cisco Systems, Inc.')
ciscoCableAdmCtrlMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 450, 0))
ciscoCableAdmCtrlMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 450, 1))
ciscoCableAdmCtrlMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 450, 2))
ccacObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 1))
ccacConfigObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2))
ccacStatObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3))
ccacEventHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 4))
class Percent(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 100)

class NonZeroPercent(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 100)

class TenthPercent(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 1000)

class CcacSchedulingType(TextualConvention, Integer32):
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("undefined", 1), ("bestEffort", 2), ("nonRealTimePollingService", 3), ("realTimePollingService", 4), ("unsolictedGrantServiceWithAD", 5), ("unsolictedGrantService", 6))

class CcacApplicationBucketType(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 64)

class QoSServiceClassNameOrNull(TextualConvention, OctetString):
    reference = 'SP-RFIv1.1-I05-000714, Appendix C.2.2.3.4'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 15)

class CcacMonitoredEvent(TextualConvention, Bits):
    reference = 'SP-RFIv1.1-I05-000714, Appendix C.2.2.3.3 SP-RFIv2.0-IO2-020617, Section 11.2.'
    status = 'current'
    namedValues = NamedValues(("dynamicSvcFlow", 0), ("cmRegistration", 1))

class CcacSysRscMonitoredType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("cpu5Sec", 1), ("cpu1Min", 2), ("procMem", 3), ("ioMem", 4), ("totalMem", 5))

class CcacDSTrafficMonitoredType(TextualConvention, Integer32):
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("voice", 1), ("data", 2))

ccacNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccacNotifyEnable.setStatus('current')
ccacEventMonitoring = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 1, 2), CcacMonitoredEvent()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccacEventMonitoring.setStatus('current')
ccacSysRscConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 1), )
if mibBuilder.loadTexts: ccacSysRscConfigTable.setStatus('current')
ccacSysRscConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscConfigResourceType"))
if mibBuilder.loadTexts: ccacSysRscConfigEntry.setStatus('current')
ccacSysRscConfigResourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 1, 1, 1), CcacSysRscMonitoredType())
if mibBuilder.loadTexts: ccacSysRscConfigResourceType.setStatus('current')
ccacSysRscConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacSysRscConfigStatus.setStatus('current')
ccacSysRscConfigMinorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 1, 1, 3), NonZeroPercent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacSysRscConfigMinorThreshold.setStatus('current')
ccacSysRscConfigMajorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 1, 1, 4), NonZeroPercent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacSysRscConfigMajorThreshold.setStatus('current')
ccacSysRscConfigCritThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 1, 1, 5), NonZeroPercent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacSysRscConfigCritThreshold.setStatus('current')
ccacUsConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 2), )
if mibBuilder.loadTexts: ccacUsConfigTable.setStatus('deprecated')
ccacUsConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsConfigIfIndex"), (0, "CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsConfigSchedType"), (0, "CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsConfigServiceClassName"))
if mibBuilder.loadTexts: ccacUsConfigEntry.setStatus('deprecated')
ccacUsConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 2, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: ccacUsConfigIfIndex.setStatus('deprecated')
ccacUsConfigSchedType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 2, 1, 2), CcacSchedulingType())
if mibBuilder.loadTexts: ccacUsConfigSchedType.setStatus('deprecated')
ccacUsConfigServiceClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 2, 1, 3), QoSServiceClassNameOrNull())
if mibBuilder.loadTexts: ccacUsConfigServiceClassName.setStatus('deprecated')
ccacUsConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacUsConfigStatus.setStatus('deprecated')
ccacUsConfigMinorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 2, 1, 5), NonZeroPercent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacUsConfigMinorThreshold.setStatus('deprecated')
ccacUsConfigMajorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 2, 1, 6), NonZeroPercent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacUsConfigMajorThreshold.setStatus('deprecated')
ccacUsConfigExclusivePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 2, 1, 7), NonZeroPercent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacUsConfigExclusivePercent.setStatus('deprecated')
ccacUsConfigNonExclusivePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 2, 1, 8), Percent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacUsConfigNonExclusivePercent.setStatus('deprecated')
ccacDsConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 3), )
if mibBuilder.loadTexts: ccacDsConfigTable.setStatus('deprecated')
ccacDsConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsConfigIfIndex"), (0, "CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsConfigTrafficType"))
if mibBuilder.loadTexts: ccacDsConfigEntry.setStatus('deprecated')
ccacDsConfigIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 3, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: ccacDsConfigIfIndex.setStatus('deprecated')
ccacDsConfigTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 3, 1, 2), CcacDSTrafficMonitoredType())
if mibBuilder.loadTexts: ccacDsConfigTrafficType.setStatus('deprecated')
ccacDsConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacDsConfigStatus.setStatus('deprecated')
ccacDsConfigMinorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 3, 1, 4), NonZeroPercent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacDsConfigMinorThreshold.setStatus('deprecated')
ccacDsConfigMajorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 3, 1, 5), NonZeroPercent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacDsConfigMajorThreshold.setStatus('deprecated')
ccacDsConfigExclusivePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 3, 1, 6), NonZeroPercent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacDsConfigExclusivePercent.setStatus('deprecated')
ccacDsConfigNonExclusivePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 3, 1, 7), Percent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacDsConfigNonExclusivePercent.setStatus('deprecated')
ccacUsConfigRevTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 4), )
if mibBuilder.loadTexts: ccacUsConfigRevTable.setStatus('current')
ccacUsConfigRevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 4, 1), ).setIndexNames((0, "CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsConfigRevIfIndex"), (0, "CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsConfigRevAppBucketIndex"))
if mibBuilder.loadTexts: ccacUsConfigRevEntry.setStatus('current')
ccacUsConfigRevIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 4, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: ccacUsConfigRevIfIndex.setStatus('current')
ccacUsConfigRevAppBucketIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 4, 1, 2), CcacApplicationBucketType())
if mibBuilder.loadTexts: ccacUsConfigRevAppBucketIndex.setStatus('current')
ccacUsConfigRevAppBucketName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 4, 1, 3), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacUsConfigRevAppBucketName.setStatus('current')
ccacUsConfigRevMinorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 4, 1, 4), NonZeroPercent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacUsConfigRevMinorThreshold.setStatus('current')
ccacUsConfigRevMajorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 4, 1, 5), NonZeroPercent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacUsConfigRevMajorThreshold.setStatus('current')
ccacUsConfigRevExclusivePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 4, 1, 6), NonZeroPercent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacUsConfigRevExclusivePercent.setStatus('current')
ccacUsConfigRevNonExclusivePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 4, 1, 7), Percent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacUsConfigRevNonExclusivePercent.setStatus('current')
ccacUsConfigRevStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 4, 1, 8), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacUsConfigRevStorageType.setStatus('current')
ccacUsConfigRevStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 4, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacUsConfigRevStatus.setStatus('current')
ccacDsConfigRevTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 5), )
if mibBuilder.loadTexts: ccacDsConfigRevTable.setStatus('current')
ccacDsConfigRevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 5, 1), ).setIndexNames((0, "CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsConfigRevIfIndex"), (0, "CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsConfigRevAppBucketIndex"))
if mibBuilder.loadTexts: ccacDsConfigRevEntry.setStatus('current')
ccacDsConfigRevIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 5, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: ccacDsConfigRevIfIndex.setStatus('current')
ccacDsConfigRevAppBucketIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 5, 1, 2), CcacApplicationBucketType())
if mibBuilder.loadTexts: ccacDsConfigRevAppBucketIndex.setStatus('current')
ccacDsConfigRevAppBucketName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 5, 1, 3), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacDsConfigRevAppBucketName.setStatus('current')
ccacDsConfigRevMinorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 5, 1, 4), NonZeroPercent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacDsConfigRevMinorThreshold.setStatus('current')
ccacDsConfigRevMajorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 5, 1, 5), NonZeroPercent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacDsConfigRevMajorThreshold.setStatus('current')
ccacDsConfigRevExclusivePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 5, 1, 6), NonZeroPercent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacDsConfigRevExclusivePercent.setStatus('current')
ccacDsConfigRevNonExclusivePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 5, 1, 7), Percent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacDsConfigRevNonExclusivePercent.setStatus('current')
ccacDsConfigRevStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 5, 1, 8), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacDsConfigRevStorageType.setStatus('current')
ccacDsConfigRevStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 2, 5, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccacDsConfigRevStatus.setStatus('current')
ccacSysRscTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 1), )
if mibBuilder.loadTexts: ccacSysRscTable.setStatus('current')
ccacSysRscEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscType"))
if mibBuilder.loadTexts: ccacSysRscEntry.setStatus('current')
ccacSysRscType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 1, 1, 1), CcacSysRscMonitoredType())
if mibBuilder.loadTexts: ccacSysRscType.setStatus('current')
ccacSysRscUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 1, 1, 2), Percent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacSysRscUtilization.setStatus('current')
ccacSysRscMinorCrosses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacSysRscMinorCrosses.setStatus('current')
ccacSysRscMajorCrosses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacSysRscMajorCrosses.setStatus('current')
ccacSysRscCriticalCrosses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacSysRscCriticalCrosses.setStatus('current')
ccacSysRscCountersDscTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 1, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacSysRscCountersDscTime.setStatus('current')
ccacUsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 2), )
if mibBuilder.loadTexts: ccacUsTable.setStatus('deprecated')
ccacUsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsSchedType"), (0, "CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsServiceClassName"))
if mibBuilder.loadTexts: ccacUsEntry.setStatus('deprecated')
ccacUsSchedType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 2, 1, 1), CcacSchedulingType())
if mibBuilder.loadTexts: ccacUsSchedType.setStatus('deprecated')
ccacUsServiceClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 2, 1, 2), QoSServiceClassNameOrNull())
if mibBuilder.loadTexts: ccacUsServiceClassName.setStatus('deprecated')
ccacUsUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 2, 1, 3), Percent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacUsUtilization.setStatus('deprecated')
ccacUsMinorCrosses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacUsMinorCrosses.setStatus('deprecated')
ccacUsMajorCrosses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacUsMajorCrosses.setStatus('deprecated')
ccacUsExclusiveCrosses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacUsExclusiveCrosses.setStatus('deprecated')
ccacUsCountersDscTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 2, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacUsCountersDscTime.setStatus('deprecated')
ccacDsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 3), )
if mibBuilder.loadTexts: ccacDsTable.setStatus('deprecated')
ccacDsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsTrafficType"))
if mibBuilder.loadTexts: ccacDsEntry.setStatus('deprecated')
ccacDsTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 3, 1, 1), CcacDSTrafficMonitoredType())
if mibBuilder.loadTexts: ccacDsTrafficType.setStatus('deprecated')
ccacDsUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 3, 1, 2), Percent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacDsUtilization.setStatus('deprecated')
ccacDsMinorCrosses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacDsMinorCrosses.setStatus('deprecated')
ccacDsMajorCrosses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacDsMajorCrosses.setStatus('deprecated')
ccacDsExclusiveCrosses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacDsExclusiveCrosses.setStatus('deprecated')
ccacDsCountersDscTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 3, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacDsCountersDscTime.setStatus('deprecated')
ccacUsRevTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 4), )
if mibBuilder.loadTexts: ccacUsRevTable.setStatus('current')
ccacUsRevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsRevAppBucketIndex"))
if mibBuilder.loadTexts: ccacUsRevEntry.setStatus('current')
ccacUsRevAppBucketIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 4, 1, 1), CcacApplicationBucketType())
if mibBuilder.loadTexts: ccacUsRevAppBucketIndex.setStatus('current')
ccacUsRevUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 4, 1, 2), TenthPercent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacUsRevUtilization.setStatus('current')
ccacUsRevMinorCrosses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacUsRevMinorCrosses.setStatus('current')
ccacUsRevMajorCrosses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacUsRevMajorCrosses.setStatus('current')
ccacUsRevExclusiveCrosses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacUsRevExclusiveCrosses.setStatus('current')
ccacUsRevCountersDscTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 4, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacUsRevCountersDscTime.setStatus('current')
ccacDsRevTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 5), )
if mibBuilder.loadTexts: ccacDsRevTable.setStatus('current')
ccacDsRevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsRevAppBucketIndex"))
if mibBuilder.loadTexts: ccacDsRevEntry.setStatus('current')
ccacDsRevAppBucketIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 5, 1, 1), CcacApplicationBucketType())
if mibBuilder.loadTexts: ccacDsRevAppBucketIndex.setStatus('current')
ccacDsRevUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 5, 1, 2), TenthPercent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacDsRevUtilization.setStatus('current')
ccacDsRevMinorCrosses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacDsRevMinorCrosses.setStatus('current')
ccacDsRevMajorCrosses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacDsRevMajorCrosses.setStatus('current')
ccacDsRevExclusiveCrosses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacDsRevExclusiveCrosses.setStatus('current')
ccacDsRevCountersDscTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 3, 5, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacDsRevCountersDscTime.setStatus('current')
ccacEventHistTableSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 4, 1), Unsigned32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccacEventHistTableSize.setStatus('current')
ccacEventHistLastIndex = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 4, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacEventHistLastIndex.setStatus('current')
ccacEventHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 4, 3), )
if mibBuilder.loadTexts: ccacEventHistoryTable.setStatus('current')
ccacEventHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 4, 3, 1), ).setIndexNames((0, "CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacEventHistoryIndex"))
if mibBuilder.loadTexts: ccacEventHistoryEntry.setStatus('current')
ccacEventHistoryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 4, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ccacEventHistoryIndex.setStatus('current')
ccacEventThreshObjectInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 4, 3, 1, 2), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacEventThreshObjectInstance.setStatus('current')
ccacEventTypeChecked = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 4, 3, 1, 3), CcacMonitoredEvent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacEventTypeChecked.setStatus('current')
ccacEventResourceUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 4, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacEventResourceUtilization.setStatus('current')
ccacEventThreshCrosses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 4, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacEventThreshCrosses.setStatus('current')
ccacEventTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 450, 1, 4, 3, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccacEventTimeStamp.setStatus('current')
ccacNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 450, 0, 1)).setObjects(("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacEventThreshObjectInstance"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacEventTypeChecked"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacEventResourceUtilization"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacEventThreshCrosses"))
if mibBuilder.loadTexts: ccacNotification.setStatus('current')
ciscoCableAdmCtrlCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 450, 2, 1))
ciscoCableAdmCtrlMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 450, 2, 2))
ciscoCableAdmCtrlCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 450, 2, 1, 1)).setObjects(("CISCO-CABLE-ADMISSION-CTRL-MIB", "ciscoCableAdmCtrlConfigGroup"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ciscoCableAdmCtrlStatGroup"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ciscoCableAdmCtrlEventHistGroup"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ciscoCableAdmCtrlNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCableAdmCtrlCompliance = ciscoCableAdmCtrlCompliance.setStatus('deprecated')
ciscoCableAdmCtrlComplianceRev = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 450, 2, 1, 2)).setObjects(("CISCO-CABLE-ADMISSION-CTRL-MIB", "ciscoCableAdmCtrlConfigGroupRev1"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ciscoCableAdmCtrlStatGroupRev1"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ciscoCableAdmCtrlEventHistGroup"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ciscoCableAdmCtrlNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCableAdmCtrlComplianceRev = ciscoCableAdmCtrlComplianceRev.setStatus('current')
ciscoCableAdmCtrlConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 450, 2, 2, 1)).setObjects(("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacNotifyEnable"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacEventMonitoring"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscConfigStatus"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscConfigMinorThreshold"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscConfigMajorThreshold"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscConfigCritThreshold"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsConfigStatus"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsConfigMinorThreshold"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsConfigMajorThreshold"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsConfigExclusivePercent"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsConfigNonExclusivePercent"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsConfigStatus"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsConfigMinorThreshold"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsConfigMajorThreshold"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsConfigExclusivePercent"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsConfigNonExclusivePercent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCableAdmCtrlConfigGroup = ciscoCableAdmCtrlConfigGroup.setStatus('deprecated')
ciscoCableAdmCtrlStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 450, 2, 2, 2)).setObjects(("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscUtilization"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscMinorCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscMajorCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscCountersDscTime"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscCriticalCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsUtilization"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsMinorCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsMajorCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsExclusiveCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsCountersDscTime"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsUtilization"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsMinorCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsMajorCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsExclusiveCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsCountersDscTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCableAdmCtrlStatGroup = ciscoCableAdmCtrlStatGroup.setStatus('deprecated')
ciscoCableAdmCtrlEventHistGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 450, 2, 2, 3)).setObjects(("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacEventHistTableSize"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacEventHistLastIndex"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacEventThreshObjectInstance"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacEventTypeChecked"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacEventResourceUtilization"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacEventThreshCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacEventTimeStamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCableAdmCtrlEventHistGroup = ciscoCableAdmCtrlEventHistGroup.setStatus('current')
ciscoCableAdmCtrlNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 450, 2, 2, 4)).setObjects(("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCableAdmCtrlNotifGroup = ciscoCableAdmCtrlNotifGroup.setStatus('current')
ciscoCableAdmCtrlConfigGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 450, 2, 2, 5)).setObjects(("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacNotifyEnable"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacEventMonitoring"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscConfigStatus"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscConfigMinorThreshold"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscConfigMajorThreshold"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscConfigCritThreshold"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsConfigRevAppBucketName"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsConfigRevStatus"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsConfigRevMinorThreshold"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsConfigRevMajorThreshold"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsConfigRevExclusivePercent"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsConfigRevNonExclusivePercent"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsConfigRevStorageType"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsConfigRevStatus"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsConfigRevMinorThreshold"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsConfigRevMajorThreshold"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsConfigRevExclusivePercent"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsConfigRevNonExclusivePercent"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsConfigRevAppBucketName"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsConfigRevStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCableAdmCtrlConfigGroupRev1 = ciscoCableAdmCtrlConfigGroupRev1.setStatus('current')
ciscoCableAdmCtrlStatGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 450, 2, 2, 6)).setObjects(("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscUtilization"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscMinorCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscMajorCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscCountersDscTime"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacSysRscCriticalCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsRevUtilization"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsRevMinorCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsRevMajorCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsRevExclusiveCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacUsRevCountersDscTime"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsRevUtilization"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsRevMinorCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsRevMajorCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsRevExclusiveCrosses"), ("CISCO-CABLE-ADMISSION-CTRL-MIB", "ccacDsRevCountersDscTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCableAdmCtrlStatGroupRev1 = ciscoCableAdmCtrlStatGroupRev1.setStatus('current')
mibBuilder.exportSymbols("CISCO-CABLE-ADMISSION-CTRL-MIB", ccacDsConfigRevEntry=ccacDsConfigRevEntry, ccacDsConfigRevAppBucketIndex=ccacDsConfigRevAppBucketIndex, ccacStatObjects=ccacStatObjects, CcacDSTrafficMonitoredType=CcacDSTrafficMonitoredType, ccacDsRevUtilization=ccacDsRevUtilization, ccacUsRevUtilization=ccacUsRevUtilization, ccacDsRevExclusiveCrosses=ccacDsRevExclusiveCrosses, ccacDsRevEntry=ccacDsRevEntry, ccacDsCountersDscTime=ccacDsCountersDscTime, ccacUsRevMajorCrosses=ccacUsRevMajorCrosses, ccacDsMajorCrosses=ccacDsMajorCrosses, ccacUsConfigMajorThreshold=ccacUsConfigMajorThreshold, ciscoCableAdmCtrlMIBConform=ciscoCableAdmCtrlMIBConform, ccacUsRevAppBucketIndex=ccacUsRevAppBucketIndex, ccacUsMinorCrosses=ccacUsMinorCrosses, ciscoCableAdmCtrlConfigGroupRev1=ciscoCableAdmCtrlConfigGroupRev1, ciscoCableAdmCtrlEventHistGroup=ciscoCableAdmCtrlEventHistGroup, ccacUsConfigRevStatus=ccacUsConfigRevStatus, ccacDsConfigRevNonExclusivePercent=ccacDsConfigRevNonExclusivePercent, ccacDsEntry=ccacDsEntry, ccacSysRscEntry=ccacSysRscEntry, ccacDsConfigTrafficType=ccacDsConfigTrafficType, ccacSysRscConfigMajorThreshold=ccacSysRscConfigMajorThreshold, ccacDsConfigRevMajorThreshold=ccacDsConfigRevMajorThreshold, ccacDsRevMajorCrosses=ccacDsRevMajorCrosses, ccacNotification=ccacNotification, ccacDsRevMinorCrosses=ccacDsRevMinorCrosses, ciscoCableAdmCtrlStatGroup=ciscoCableAdmCtrlStatGroup, ccacSysRscConfigStatus=ccacSysRscConfigStatus, ccacNotifyEnable=ccacNotifyEnable, ciscoCableAdmCtrlMIBGroups=ciscoCableAdmCtrlMIBGroups, ccacSysRscType=ccacSysRscType, CcacApplicationBucketType=CcacApplicationBucketType, ccacUsConfigRevAppBucketIndex=ccacUsConfigRevAppBucketIndex, ccacDsConfigMinorThreshold=ccacDsConfigMinorThreshold, ccacSysRscConfigResourceType=ccacSysRscConfigResourceType, ccacEventHistLastIndex=ccacEventHistLastIndex, ccacDsConfigNonExclusivePercent=ccacDsConfigNonExclusivePercent, ccacUsConfigRevIfIndex=ccacUsConfigRevIfIndex, ccacDsRevTable=ccacDsRevTable, ccacDsUtilization=ccacDsUtilization, CcacMonitoredEvent=CcacMonitoredEvent, Percent=Percent, ccacUsConfigIfIndex=ccacUsConfigIfIndex, ccacEventMonitoring=ccacEventMonitoring, ccacSysRscConfigMinorThreshold=ccacSysRscConfigMinorThreshold, ccacUsServiceClassName=ccacUsServiceClassName, ccacSysRscConfigTable=ccacSysRscConfigTable, ccacSysRscMinorCrosses=ccacSysRscMinorCrosses, ccacDsMinorCrosses=ccacDsMinorCrosses, ccacDsConfigEntry=ccacDsConfigEntry, ciscoCableAdmCtrlMIBObjects=ciscoCableAdmCtrlMIBObjects, ccacUsConfigRevTable=ccacUsConfigRevTable, ccacDsTable=ccacDsTable, ccacUsConfigRevMinorThreshold=ccacUsConfigRevMinorThreshold, ccacUsCountersDscTime=ccacUsCountersDscTime, ccacDsConfigStatus=ccacDsConfigStatus, ccacEventThreshCrosses=ccacEventThreshCrosses, ccacDsConfigRevTable=ccacDsConfigRevTable, ccacDsConfigMajorThreshold=ccacDsConfigMajorThreshold, CcacSysRscMonitoredType=CcacSysRscMonitoredType, ccacUsConfigMinorThreshold=ccacUsConfigMinorThreshold, ciscoCableAdmCtrlConfigGroup=ciscoCableAdmCtrlConfigGroup, ciscoCableAdmCtrlStatGroupRev1=ciscoCableAdmCtrlStatGroupRev1, ccacDsConfigRevAppBucketName=ccacDsConfigRevAppBucketName, ccacDsConfigRevExclusivePercent=ccacDsConfigRevExclusivePercent, ccacEventHistoryIndex=ccacEventHistoryIndex, ccacUsTable=ccacUsTable, ciscoCableAdmCtrlMIBNotifs=ciscoCableAdmCtrlMIBNotifs, ccacSysRscMajorCrosses=ccacSysRscMajorCrosses, ccacDsRevCountersDscTime=ccacDsRevCountersDscTime, ciscoCableAdmCtrlCompliance=ciscoCableAdmCtrlCompliance, ccacEventResourceUtilization=ccacEventResourceUtilization, ccacUsConfigRevEntry=ccacUsConfigRevEntry, NonZeroPercent=NonZeroPercent, ciscoCableAdmCtrlCompliances=ciscoCableAdmCtrlCompliances, ccacDsConfigRevStorageType=ccacDsConfigRevStorageType, ccacUsRevMinorCrosses=ccacUsRevMinorCrosses, ccacUsExclusiveCrosses=ccacUsExclusiveCrosses, ccacUsMajorCrosses=ccacUsMajorCrosses, ccacSysRscCriticalCrosses=ccacSysRscCriticalCrosses, ccacUsRevExclusiveCrosses=ccacUsRevExclusiveCrosses, ccacSysRscConfigCritThreshold=ccacSysRscConfigCritThreshold, ccacDsConfigRevIfIndex=ccacDsConfigRevIfIndex, ccacUsUtilization=ccacUsUtilization, PYSNMP_MODULE_ID=ciscoCableAdmCtrlMIB, ccacUsSchedType=ccacUsSchedType, ciscoCableAdmCtrlNotifGroup=ciscoCableAdmCtrlNotifGroup, ccacUsRevEntry=ccacUsRevEntry, ccacUsEntry=ccacUsEntry, ccacEventThreshObjectInstance=ccacEventThreshObjectInstance, ccacSysRscConfigEntry=ccacSysRscConfigEntry, ccacUsConfigServiceClassName=ccacUsConfigServiceClassName, ccacUsConfigRevAppBucketName=ccacUsConfigRevAppBucketName, ccacDsConfigExclusivePercent=ccacDsConfigExclusivePercent, ccacUsConfigRevNonExclusivePercent=ccacUsConfigRevNonExclusivePercent, ccacDsConfigRevStatus=ccacDsConfigRevStatus, ccacUsConfigRevMajorThreshold=ccacUsConfigRevMajorThreshold, ccacUsConfigRevExclusivePercent=ccacUsConfigRevExclusivePercent, ccacEventHistoryEntry=ccacEventHistoryEntry, ccacSysRscTable=ccacSysRscTable, ccacDsConfigRevMinorThreshold=ccacDsConfigRevMinorThreshold, ciscoCableAdmCtrlComplianceRev=ciscoCableAdmCtrlComplianceRev, ccacUsConfigExclusivePercent=ccacUsConfigExclusivePercent, ccacEventHistory=ccacEventHistory, QoSServiceClassNameOrNull=QoSServiceClassNameOrNull, ccacEventTimeStamp=ccacEventTimeStamp, ccacUsConfigTable=ccacUsConfigTable, ccacDsExclusiveCrosses=ccacDsExclusiveCrosses, ccacUsConfigStatus=ccacUsConfigStatus, ccacDsConfigTable=ccacDsConfigTable, ccacEventHistTableSize=ccacEventHistTableSize, ccacUsConfigEntry=ccacUsConfigEntry, ccacDsConfigIfIndex=ccacDsConfigIfIndex, ccacDsTrafficType=ccacDsTrafficType, CcacSchedulingType=CcacSchedulingType, ccacUsConfigSchedType=ccacUsConfigSchedType, ccacSysRscUtilization=ccacSysRscUtilization, ccacEventHistoryTable=ccacEventHistoryTable, ccacUsConfigNonExclusivePercent=ccacUsConfigNonExclusivePercent, ciscoCableAdmCtrlMIB=ciscoCableAdmCtrlMIB, ccacConfigObjects=ccacConfigObjects, ccacUsRevTable=ccacUsRevTable, ccacObjects=ccacObjects, ccacDsRevAppBucketIndex=ccacDsRevAppBucketIndex, ccacUsRevCountersDscTime=ccacUsRevCountersDscTime, ccacEventTypeChecked=ccacEventTypeChecked, ccacSysRscCountersDscTime=ccacSysRscCountersDscTime, ccacUsConfigRevStorageType=ccacUsConfigRevStorageType, TenthPercent=TenthPercent)
