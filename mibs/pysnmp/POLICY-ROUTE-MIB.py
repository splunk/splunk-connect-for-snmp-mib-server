#
# PySNMP MIB module POLICY-ROUTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/POLICY-ROUTE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:32:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, ObjectIdentity, TimeTicks, ModuleIdentity, IpAddress, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, iso, Unsigned32, MibIdentifier, Integer32, Bits, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ObjectIdentity", "TimeTicks", "ModuleIdentity", "IpAddress", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "iso", "Unsigned32", "MibIdentifier", "Integer32", "Bits", "NotificationType")
RowStatus, TextualConvention, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "MacAddress", "DisplayString")
swPolicyRouteMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 32))
if mibBuilder.loadTexts: swPolicyRouteMIB.setLastUpdated('0703270000Z')
if mibBuilder.loadTexts: swPolicyRouteMIB.setOrganization('D-Link Corp.')
swPolicyRouteCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 32, 1))
swPolicyRouteInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 32, 2))
swPolicyRouteMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 32, 3))
swPolicyRouteTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 32, 3, 1), )
if mibBuilder.loadTexts: swPolicyRouteTable.setStatus('current')
swPolicyRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 32, 3, 1, 1), ).setIndexNames((0, "POLICY-ROUTE-MIB", "swPolicyRouteName"))
if mibBuilder.loadTexts: swPolicyRouteEntry.setStatus('current')
swPolicyRouteName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 32, 3, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPolicyRouteName.setStatus('current')
swPolicyRouteProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 32, 3, 1, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swPolicyRouteProfileId.setStatus('current')
swPolicyRouteAccessId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 32, 3, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swPolicyRouteAccessId.setStatus('current')
swPolicyRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 32, 3, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swPolicyRouteNextHop.setStatus('current')
swPolicyRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 32, 3, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swPolicyRouteRowStatus.setStatus('current')
mibBuilder.exportSymbols("POLICY-ROUTE-MIB", swPolicyRouteTable=swPolicyRouteTable, swPolicyRouteProfileId=swPolicyRouteProfileId, PYSNMP_MODULE_ID=swPolicyRouteMIB, swPolicyRouteAccessId=swPolicyRouteAccessId, swPolicyRouteEntry=swPolicyRouteEntry, swPolicyRouteNextHop=swPolicyRouteNextHop, swPolicyRouteName=swPolicyRouteName, swPolicyRouteCtrl=swPolicyRouteCtrl, swPolicyRouteMIB=swPolicyRouteMIB, swPolicyRouteMgmt=swPolicyRouteMgmt, swPolicyRouteRowStatus=swPolicyRouteRowStatus, swPolicyRouteInfo=swPolicyRouteInfo)
