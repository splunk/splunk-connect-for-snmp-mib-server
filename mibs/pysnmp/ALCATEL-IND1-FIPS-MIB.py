#
# PySNMP MIB module ALCATEL-IND1-FIPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-FIPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:02:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
softentIND1Fips, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1Fips")
MultiChassisId, = mibBuilder.importSymbols("ALCATEL-IND1-MULTI-CHASSIS-MIB", "MultiChassisId")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
ifIndex, InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndexOrZero", "InterfaceIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Gauge32, Counter64, TimeTicks, IpAddress, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, ModuleIdentity, MibIdentifier, ObjectIdentity, Unsigned32, Counter32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "TimeTicks", "IpAddress", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "ModuleIdentity", "MibIdentifier", "ObjectIdentity", "Unsigned32", "Counter32", "Integer32")
DateAndTime, TimeStamp, DisplayString, TextualConvention, MacAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TimeStamp", "DisplayString", "TextualConvention", "MacAddress", "RowStatus")
alcatelIND1FipsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1))
if mibBuilder.loadTexts: alcatelIND1FipsMIB.setLastUpdated('201210160000Z')
if mibBuilder.loadTexts: alcatelIND1FipsMIB.setOrganization('Alcatel-Lucent, Enterprise Solutions Division')
class FipsFCMAP(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 3)
    fixedLength = 3

class Fcid(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 3)
    fixedLength = 3

class Wwpn(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class Wwnn(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

alcatelIND1FipsMIBNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 0))
if mibBuilder.loadTexts: alcatelIND1FipsMIBNotifications.setStatus('current')
alcatelIND1FipsMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1))
if mibBuilder.loadTexts: alcatelIND1FipsMIBObjects.setStatus('current')
alcatelIND1FipsMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2))
if mibBuilder.loadTexts: alcatelIND1FipsMIBConformance.setStatus('current')
alcatelIND1FipsMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1FipsMIBGroups.setStatus('current')
alcatelIND1FipsMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1FipsMIBCompliances.setStatus('current')
alaFipsInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 1))
alaFipsConfigFilterResourceLimit = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFipsConfigFilterResourceLimit.setStatus('current')
alaFipsConfigFIPSAdmin = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFipsConfigFIPSAdmin.setStatus('current')
alaFipsConfigAddressMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fpma", 1), ("spma", 2))).clone('fpma')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFipsConfigAddressMode.setStatus('current')
alaFipsConfigPriorityOne = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFipsConfigPriorityOne.setStatus('current')
alaFipsConfigPriorityTwo = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFipsConfigPriorityTwo.setStatus('current')
alaFipsTotalNumFilterResource = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 1, 6), Unsigned32().clone(256)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsTotalNumFilterResource.setStatus('current')
alaFipsUsedNumFilterResource = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsUsedNumFilterResource.setStatus('current')
alaFipsConfigStatsClear = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFipsConfigStatsClear.setStatus('current')
alaFipsConfigPrioProtection = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFipsConfigPrioProtection.setStatus('current')
alaFipsConfigPriorityProtectionAction = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("drop", 1), ("remark", 2))).clone('drop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFipsConfigPriorityProtectionAction.setStatus('current')
alaFipsConfigPriorityProtectionRemarkVal = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFipsConfigPriorityProtectionRemarkVal.setStatus('current')
alaFipsConfigHouseKeepingTimePeriod = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 1, 12), Unsigned32().clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFipsConfigHouseKeepingTimePeriod.setStatus('current')
alaFipsConfigSWReinsertStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFipsConfigSWReinsertStatus.setStatus('current')
alaFipsConfigSessClear = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("all", 1), ("npiv", 2), ("reverseNpiv", 3), ("eTunnel", 4), ("fips", 5), ("npivPending", 6), ("none", 7))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFipsConfigSessClear.setStatus('current')
alaFipsVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 2))
alaFipsVlanTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 2, 1), )
if mibBuilder.loadTexts: alaFipsVlanTable.setStatus('current')
alaFipsVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 2, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsVlanId"))
if mibBuilder.loadTexts: alaFipsVlanEntry.setStatus('current')
alaFipsVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaFipsVlanId.setStatus('current')
alaFipsVlanFCMap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 2, 1, 1, 2), FipsFCMAP().clone(hexValue="000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsVlanFCMap.setStatus('current')
alaFipsVlanStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsVlanStatsClear.setStatus('current')
alaFipsVlanStatsFnreClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("all", 1), ("fips", 2), ("npiv", 3), ("reverseNpiv", 4), ("eTunnel", 5), ("none", 6))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsVlanStatsFnreClear.setStatus('current')
alaFipsVlanEnodeStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 3))
alaFipsVlanEnodeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 3, 1), )
if mibBuilder.loadTexts: alaFipsVlanEnodeStatsTable.setStatus('current')
alaFipsVlanEnodeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 3, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsVlanEnodeStatsVlanId"))
if mibBuilder.loadTexts: alaFipsVlanEnodeStatsEntry.setStatus('current')
alaFipsVlanEnodeStatsVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaFipsVlanEnodeStatsVlanId.setStatus('current')
alaFipsVlanEnodeStatsSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanEnodeStatsSessions.setStatus('current')
alaFipsVlanEnodeStatsMds = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanEnodeStatsMds.setStatus('current')
alaFipsVlanEnodeStatsUds = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanEnodeStatsUds.setStatus('current')
alaFipsVlanEnodeStatsFlogi = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanEnodeStatsFlogi.setStatus('current')
alaFipsVlanEnodeStatsFdisc = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanEnodeStatsFdisc.setStatus('current')
alaFipsVlanEnodeStatsLogo = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanEnodeStatsLogo.setStatus('current')
alaFipsVlanEnodeStatsEka = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanEnodeStatsEka.setStatus('current')
alaFipsVlanEnodeStatsVnka = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanEnodeStatsVnka.setStatus('current')
alaFipsVlanEnodeStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 3, 1, 1, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFipsVlanEnodeStatsClear.setStatus('current')
alaFipsVlanFcfStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 4))
alaFipsVlanFcfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 4, 1), )
if mibBuilder.loadTexts: alaFipsVlanFcfStatsTable.setStatus('current')
alaFipsVlanFcfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 4, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsVlanFcfStatsVlanId"))
if mibBuilder.loadTexts: alaFipsVlanFcfStatsEntry.setStatus('current')
alaFipsVlanFcfStatsVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaFipsVlanFcfStatsVlanId.setStatus('current')
alaFipsVlanFcfStatsSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 4, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanFcfStatsSessions.setStatus('current')
alaFipsVlanFcfStatsMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanFcfStatsMda.setStatus('current')
alaFipsVlanFcfStatsUda = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanFcfStatsUda.setStatus('current')
alaFipsVlanFcfStatsFlogiAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanFcfStatsFlogiAcc.setStatus('current')
alaFipsVlanFcfStatsFlogiRjt = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 4, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanFcfStatsFlogiRjt.setStatus('current')
alaFipsVlanFcfStatsFdiscRjt = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 4, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanFcfStatsFdiscRjt.setStatus('current')
alaFipsVlanFcfStatsLogoAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 4, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanFcfStatsLogoAcc.setStatus('current')
alaFipsVlanFcfStatsLogoRjt = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 4, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanFcfStatsLogoRjt.setStatus('current')
alaFipsVlanFcfStatsCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanFcfStatsCvl.setStatus('current')
alaFipsVlanFcfStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 4, 1, 1, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFipsVlanFcfStatsClear.setStatus('current')
alaFipsVlanFcfStatsFdiscAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 4, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanFcfStatsFdiscAcc.setStatus('current')
alaFipsIntf = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 5))
alaFipsIntfTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 5, 1), )
if mibBuilder.loadTexts: alaFipsIntfTable.setStatus('current')
alaFipsIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 5, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsIntfIfIndex"))
if mibBuilder.loadTexts: alaFipsIntfEntry.setStatus('current')
alaFipsIntfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 5, 1, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: alaFipsIntfIfIndex.setStatus('current')
alaFipsIntfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfOperStatus.setStatus('current')
alaFipsIntfPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("edge", 1), ("enode", 2), ("fcf", 3), ("mixed", 4), ("trusted", 5), ("ve", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsIntfPortRole.setStatus('current')
alaFipsIntfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 5, 1, 1, 4), RowStatus().clone('notReady')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsIntfRowStatus.setStatus('current')
alaFipsIntfStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 5, 1, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsIntfStatsClear.setStatus('current')
alaFipsIntfStatsFnreClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("all", 1), ("fips", 2), ("npiv", 3), ("reverseNpiv", 4), ("eTunnel", 5), ("none", 6))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsIntfStatsFnreClear.setStatus('current')
alaFipsIntfEnodeStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 6))
alaFipsIntfEnodeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 6, 1), )
if mibBuilder.loadTexts: alaFipsIntfEnodeStatsTable.setStatus('current')
alaFipsIntfEnodeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 6, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsIntfEnodeStatsIfIndex"))
if mibBuilder.loadTexts: alaFipsIntfEnodeStatsEntry.setStatus('current')
alaFipsIntfEnodeStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 6, 1, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: alaFipsIntfEnodeStatsIfIndex.setStatus('current')
alaFipsIntfEnodeStatsSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 6, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfEnodeStatsSessions.setStatus('current')
alaFipsIntfEnodeStatsMds = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 6, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfEnodeStatsMds.setStatus('current')
alaFipsIntfEnodeStatsUds = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 6, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfEnodeStatsUds.setStatus('current')
alaFipsIntfEnodeStatsFlogi = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 6, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfEnodeStatsFlogi.setStatus('current')
alaFipsIntfEnodeStatsFdisc = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 6, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfEnodeStatsFdisc.setStatus('current')
alaFipsIntfEnodeStatsLogo = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 6, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfEnodeStatsLogo.setStatus('current')
alaFipsIntfEnodeStatsEka = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 6, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfEnodeStatsEka.setStatus('current')
alaFipsIntfEnodeStatsVnka = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 6, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfEnodeStatsVnka.setStatus('current')
alaFipsIntfEnodeStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 6, 1, 1, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFipsIntfEnodeStatsClear.setStatus('current')
alaFipsIntfFcfStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 7))
alaFipsIntfFcfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 7, 1), )
if mibBuilder.loadTexts: alaFipsIntfFcfStatsTable.setStatus('current')
alaFipsIntfFcfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 7, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsIntfFcfStatsIfIndex"))
if mibBuilder.loadTexts: alaFipsIntfFcfStatsEntry.setStatus('current')
alaFipsIntfFcfStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 7, 1, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: alaFipsIntfFcfStatsIfIndex.setStatus('current')
alaFipsIntfFcfStatsSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 7, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfFcfStatsSessions.setStatus('current')
alaFipsIntfFcfStatsMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 7, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfFcfStatsMda.setStatus('current')
alaFipsIntfFcfStatsUda = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 7, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfFcfStatsUda.setStatus('current')
alaFipsIntfFcfStatsFlogiAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 7, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfFcfStatsFlogiAcc.setStatus('current')
alaFipsIntfFcfStatsFdiscRjt = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 7, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfFcfStatsFdiscRjt.setStatus('current')
alaFipsIntfFcfStatsFlogiRjt = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 7, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfFcfStatsFlogiRjt.setStatus('current')
alaFipsIntfFcfStatsLogoAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 7, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfFcfStatsLogoAcc.setStatus('current')
alaFipsIntfFcfStatsLogoRjt = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 7, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfFcfStatsLogoRjt.setStatus('current')
alaFipsIntfFcfStatsCvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 7, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfFcfStatsCvl.setStatus('current')
alaFipsIntfFcfStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 7, 1, 1, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFipsIntfFcfStatsClear.setStatus('current')
alaFipsIntfFcfStatsFdiscAcc = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 7, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfFcfStatsFdiscAcc.setStatus('current')
alaFipsFcf = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 8))
alaFipsFcfTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 8, 1), )
if mibBuilder.loadTexts: alaFipsFcfTable.setStatus('current')
alaFipsFcfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 8, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsFcfMAC"), (0, "ALCATEL-IND1-FIPS-MIB", "alaFipsFcfVlan"))
if mibBuilder.loadTexts: alaFipsFcfEntry.setStatus('current')
alaFipsFcfMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 8, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: alaFipsFcfMAC.setStatus('current')
alaFipsFcfVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaFipsFcfVlan.setStatus('current')
alaFipsFcfIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 8, 1, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsFcfIntf.setStatus('current')
alaFipsFcfSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 8, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsFcfSessions.setStatus('current')
alaFipsFcfConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 8, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fpma", 1), ("spma", 2))).clone('fpma')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsFcfConfigType.setStatus('current')
alaFipsFcfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 8, 1, 1, 6), RowStatus().clone('notReady')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsFcfRowStatus.setStatus('current')
alaFipsFcfAvailForLogin = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 8, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsFcfAvailForLogin.setStatus('current')
alaFipsFcfMaxFcoeFrmSizeVerified = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 8, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsFcfMaxFcoeFrmSizeVerified.setStatus('current')
alaFipsFcfPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 8, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsFcfPriority.setStatus('current')
alaFipsFcfType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 8, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dynamic", 1), ("static", 2), ("npiv", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsFcfType.setStatus('current')
alaFipsSession = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 9))
alaFipsSessionTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 9, 1), )
if mibBuilder.loadTexts: alaFipsSessionTable.setStatus('current')
alaFipsSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 9, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsSessionEnodeMAC"), (0, "ALCATEL-IND1-FIPS-MIB", "alaFipsSessionVNMAC"), (0, "ALCATEL-IND1-FIPS-MIB", "alaFipsSessionVlanId"))
if mibBuilder.loadTexts: alaFipsSessionEntry.setStatus('current')
alaFipsSessionEnodeMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 9, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: alaFipsSessionEnodeMAC.setStatus('current')
alaFipsSessionVNMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 9, 1, 1, 2), MacAddress())
if mibBuilder.loadTexts: alaFipsSessionVNMAC.setStatus('current')
alaFipsSessionVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaFipsSessionVlanId.setStatus('current')
alaFipsSessionIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 9, 1, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsSessionIfIndex.setStatus('current')
alaFipsSessionFCFMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 9, 1, 1, 5), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsSessionFCFMAC.setStatus('current')
alaFipsSessionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 9, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pending", 1), ("created", 2))).clone('pending')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsSessionStatus.setStatus('current')
alaFipsSessionLoginTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 9, 1, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsSessionLoginTime.setStatus('current')
alaFipsSessionLoginTimeDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 9, 1, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsSessionLoginTimeDate.setStatus('current')
alaFipsResourceThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 0, 1)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsFilterResourceUsage"))
if mibBuilder.loadTexts: alaFipsResourceThresholdReached.setStatus('current')
alaFipsNotificationObj = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 10))
alaFipsFilterResourceUsage = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 10, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaFipsFilterResourceUsage.setStatus('current')
alaFcVsan = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 11))
alaFcVsanTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 11, 1), )
if mibBuilder.loadTexts: alaFcVsanTable.setStatus('current')
alaFcVsanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 11, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFcVsanNumber"))
if mibBuilder.loadTexts: alaFcVsanEntry.setStatus('current')
alaFcVsanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaFcVsanNumber.setStatus('current')
alaFcVsanDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 11, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFcVsanDescription.setStatus('current')
alaFcVsanAdmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 11, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFcVsanAdmStatus.setStatus('current')
alaFcVsanOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcVsanOperStatus.setStatus('current')
alaFcVsanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 11, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFcVsanRowStatus.setStatus('current')
alaFcVfpa = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 12))
alaFcVfpaTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 12, 1), )
if mibBuilder.loadTexts: alaFcVfpaTable.setStatus('current')
alaFcVfpaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 12, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFcVfpaVsanNumber"), (0, "ALCATEL-IND1-FIPS-MIB", "alaFcVfpaIfIndex"))
if mibBuilder.loadTexts: alaFcVfpaEntry.setStatus('current')
alaFcVfpaVsanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaFcVfpaVsanNumber.setStatus('current')
alaFcVfpaIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 12, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1001, 4294967295)))
if mibBuilder.loadTexts: alaFcVfpaIfIndex.setStatus('current')
alaFcVfpaState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1), ("inactive", 2))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcVfpaState.setStatus('current')
alaFcVfpaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 12, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFcVfpaRowStatus.setStatus('current')
alaFcIntf = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 13))
alaFcIntfTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 13, 1), )
if mibBuilder.loadTexts: alaFcIntfTable.setStatus('current')
alaFcIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 13, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFcIntfIfIndex"))
if mibBuilder.loadTexts: alaFcIntfEntry.setStatus('current')
alaFcIntfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 13, 1, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: alaFcIntfIfIndex.setStatus('current')
alaFcIntfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 13, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfOperStatus.setStatus('current')
alaFcIntfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("np", 1), ("f", 2), ("te", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFcIntfMode.setStatus('current')
alaFcIntfBbScN = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 13, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFcIntfBbScN.setStatus('current')
alaFcIntfClassOfService = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 13, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("class2", 1), ("class3", 2), ("classF", 3), ("class3andF", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfClassOfService.setStatus('current')
alaFcIntfFcid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 13, 1, 1, 6), Fcid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfFcid.setStatus('current')
alaFcIntfWwpn = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 13, 1, 1, 7), Wwpn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfWwpn.setStatus('current')
alaFcIntfLoginState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 13, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("flogiSent", 2), ("elpSent", 3), ("sessionClearing", 4), ("down", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfLoginState.setStatus('current')
alaFcIntfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 13, 1, 1, 9), RowStatus().clone('notReady')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFcIntfRowStatus.setStatus('current')
alaFcIntfStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 13, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("none", 2))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFcIntfStatsClear.setStatus('current')
alaFcNpivStaticLoadBalance = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 14))
alaFcNpivStaticLoadBalanceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 14, 1), )
if mibBuilder.loadTexts: alaFcNpivStaticLoadBalanceTable.setStatus('current')
alaFcNpivStaticLoadBalanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 14, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFcNpivStaticLoadBalanceFcIfIndex"), (0, "ALCATEL-IND1-FIPS-MIB", "alaFcNpivStaticLoadBalanceEthIfIndex"))
if mibBuilder.loadTexts: alaFcNpivStaticLoadBalanceEntry.setStatus('current')
alaFcNpivStaticLoadBalanceFcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 14, 1, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: alaFcNpivStaticLoadBalanceFcIfIndex.setStatus('current')
alaFcNpivStaticLoadBalanceEthIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 14, 1, 1, 2), InterfaceIndexOrZero())
if mibBuilder.loadTexts: alaFcNpivStaticLoadBalanceEthIfIndex.setStatus('current')
alaFcNpivStaticLoadBalanceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 14, 1, 1, 3), RowStatus().clone('notReady')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFcNpivStaticLoadBalanceRowStatus.setStatus('current')
alaFcNode = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 15))
alaFcNodeTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 15, 1), )
if mibBuilder.loadTexts: alaFcNodeTable.setStatus('current')
alaFcNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 15, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFcNodeIfIndex"), (0, "ALCATEL-IND1-FIPS-MIB", "alaFcNodeWwpn"))
if mibBuilder.loadTexts: alaFcNodeEntry.setStatus('current')
alaFcNodeIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 15, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaFcNodeIfIndex.setStatus('current')
alaFcNodeWwpn = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 15, 1, 1, 2), Wwpn())
if mibBuilder.loadTexts: alaFcNodeWwpn.setStatus('current')
alaFcNodeVsanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 15, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcNodeVsanNumber.setStatus('current')
alaFcNodeVlanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 15, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcNodeVlanNumber.setStatus('current')
alaFcNodeFcid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 15, 1, 1, 5), Fcid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcNodeFcid.setStatus('current')
alaFcNodeWwnn = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 15, 1, 1, 6), Wwnn()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcNodeWwnn.setStatus('current')
alaFcSess = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 16))
alaFcSessTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 16, 1), )
if mibBuilder.loadTexts: alaFcSessTable.setStatus('current')
alaFcSessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 16, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFcSessIfIndex"), (0, "ALCATEL-IND1-FIPS-MIB", "alaFcSessWwpn"))
if mibBuilder.loadTexts: alaFcSessEntry.setStatus('current')
alaFcSessIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 16, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaFcSessIfIndex.setStatus('current')
alaFcSessWwpn = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 16, 1, 1, 2), Wwpn())
if mibBuilder.loadTexts: alaFcSessWwpn.setStatus('current')
alaFcSessVsanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 16, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcSessVsanNumber.setStatus('current')
alaFcSessStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 16, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pending", 1), ("success", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcSessStatus.setStatus('current')
alaFcSessIntfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 16, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("np", 1), ("f", 2), ("te", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcSessIntfMode.setStatus('current')
alaFcSessFcid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 16, 1, 1, 6), Fcid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcSessFcid.setStatus('current')
alaFcSessType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 16, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fdisc", 1), ("flogi", 2), ("elp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcSessType.setStatus('current')
alaFcSessTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 16, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcSessTunnelId.setStatus('current')
alaFcIntfNpivStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 17))
alaFcIntfNpivStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 17, 1), )
if mibBuilder.loadTexts: alaFcIntfNpivStatsTable.setStatus('current')
alaFcIntfNpivStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 17, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFcIntfNpivStatsIfIndex"))
if mibBuilder.loadTexts: alaFcIntfNpivStatsEntry.setStatus('current')
alaFcIntfNpivStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 17, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaFcIntfNpivStatsIfIndex.setStatus('current')
alaFcIntfNpivStatsTxFlogis = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 17, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfNpivStatsTxFlogis.setStatus('current')
alaFcIntfNpivStatsTxFdiscs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 17, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfNpivStatsTxFdiscs.setStatus('current')
alaFcIntfNpivStatsRxLsAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 17, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfNpivStatsRxLsAccs.setStatus('current')
alaFcIntfNpivStatsRxFlogos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 17, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfNpivStatsRxFlogos.setStatus('current')
alaFcIntfNpivStatsRxFlogiLsRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 17, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfNpivStatsRxFlogiLsRjts.setStatus('current')
alaFcIntfNpivStatsRxFdiscLsRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 17, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfNpivStatsRxFdiscLsRjts.setStatus('current')
alaFcIntfNpivStatsTxFlogos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 17, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfNpivStatsTxFlogos.setStatus('current')
alaFcIntfNpivStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 17, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("none", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFcIntfNpivStatsClear.setStatus('current')
alaFcVsanNpivStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 18))
alaFcVsanNpivStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 18, 1), )
if mibBuilder.loadTexts: alaFcVsanNpivStatsTable.setStatus('current')
alaFcVsanNpivStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 18, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFcVsanNpivStatsVsan"))
if mibBuilder.loadTexts: alaFcVsanNpivStatsEntry.setStatus('current')
alaFcVsanNpivStatsVsan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 18, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaFcVsanNpivStatsVsan.setStatus('current')
alaFcVsanNpivStatsTxFlogis = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 18, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcVsanNpivStatsTxFlogis.setStatus('current')
alaFcVsanNpivStatsTxFdiscs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 18, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcVsanNpivStatsTxFdiscs.setStatus('current')
alaFcVsanNpivStatsRxLsAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 18, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcVsanNpivStatsRxLsAccs.setStatus('current')
alaFcVsanNpivStatsRxFlogos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 18, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcVsanNpivStatsRxFlogos.setStatus('current')
alaFcVsanNpivStatsRxFlogiLsRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 18, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcVsanNpivStatsRxFlogiLsRjts.setStatus('current')
alaFcVsanNpivStatsRxFdiscLsRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 18, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcVsanNpivStatsRxFdiscLsRjts.setStatus('current')
alaFcVsanNpivStatsTxFlogos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 18, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcVsanNpivStatsTxFlogos.setStatus('current')
alaFcIntfRnpivStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 19))
alaFcIntfRnpivStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 19, 1), )
if mibBuilder.loadTexts: alaFcIntfRnpivStatsTable.setStatus('current')
alaFcIntfRnpivStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 19, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFcIntfRnpivStatsIfIndex"))
if mibBuilder.loadTexts: alaFcIntfRnpivStatsEntry.setStatus('current')
alaFcIntfRnpivStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 19, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaFcIntfRnpivStatsIfIndex.setStatus('current')
alaFcIntfRnpivStatsRxFlogis = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 19, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfRnpivStatsRxFlogis.setStatus('current')
alaFcIntfRnpivStatsRxFdiscs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 19, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfRnpivStatsRxFdiscs.setStatus('current')
alaFcIntfRnpivStatsTxFlogiLsAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 19, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfRnpivStatsTxFlogiLsAccs.setStatus('current')
alaFcIntfRnpivStatsTxFdiscLsAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 19, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfRnpivStatsTxFdiscLsAccs.setStatus('current')
alaFcIntfRnpivStatsTxFlogos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 19, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfRnpivStatsTxFlogos.setStatus('current')
alaFcIntfRnpivStatsTxFlogiLsRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 19, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfRnpivStatsTxFlogiLsRjts.setStatus('current')
alaFcIntfRnpivStatsTxFdiscLsRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 19, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfRnpivStatsTxFdiscLsRjts.setStatus('current')
alaFcIntfRnpivStatsRxFlogos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 19, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfRnpivStatsRxFlogos.setStatus('current')
alaFcIntfRnpivStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 19, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("none", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFcIntfRnpivStatsClear.setStatus('current')
alaFcVsanRnpivStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 20))
alaFcVsanRnpivStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 20, 1), )
if mibBuilder.loadTexts: alaFcVsanRnpivStatsTable.setStatus('current')
alaFcVsanRnpivStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 20, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFcVsanRnpivStatsVsan"))
if mibBuilder.loadTexts: alaFcVsanRnpivStatsEntry.setStatus('current')
alaFcVsanRnpivStatsVsan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 20, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaFcVsanRnpivStatsVsan.setStatus('current')
alaFcVsanRnpivStatsRxFlogis = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 20, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcVsanRnpivStatsRxFlogis.setStatus('current')
alaFcVsanRnpivStatsRxFdiscs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 20, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcVsanRnpivStatsRxFdiscs.setStatus('current')
alaFcVsanRnpivStatsTxFlogiLsAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 20, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcVsanRnpivStatsTxFlogiLsAccs.setStatus('current')
alaFcVsanRnpivStatsTxFdiscLsAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 20, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcVsanRnpivStatsTxFdiscLsAccs.setStatus('current')
alaFcVsanRnpivStatsTxFlogos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 20, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcVsanRnpivStatsTxFlogos.setStatus('current')
alaFcVsanRnpivStatsTxFlogiLsRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 20, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcVsanRnpivStatsTxFlogiLsRjts.setStatus('current')
alaFcVsanRnpivStatsTxFdiscLsRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 20, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcVsanRnpivStatsTxFdiscLsRjts.setStatus('current')
alaFcVsanRnpivStatsRxFlogos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 20, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcVsanRnpivStatsRxFlogos.setStatus('current')
alaFcInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 21))
alaFcConfigSessClear = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 21, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("all", 1), ("npiv", 2), ("reverseNpiv", 3), ("eTunnel", 4), ("none", 5))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFcConfigSessClear.setStatus('current')
alaFcConfigStatsClear = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 21, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("all", 1), ("npiv", 2), ("reverseNpiv", 3), ("eTunnel", 4), ("none", 5))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFcConfigStatsClear.setStatus('current')
alaFcConfigNpivLoadBalance = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 21, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("default", 1), ("dynamicReorder", 2), ("enodeBased", 3))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFcConfigNpivLoadBalance.setStatus('current')
alaFcConfigWwnn = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 21, 4), Wwnn()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFcConfigWwnn.setStatus('current')
alaFipsVlanNpivDiscStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 22))
alaFipsVlanNpivDiscStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 22, 1), )
if mibBuilder.loadTexts: alaFipsVlanNpivDiscStatsTable.setStatus('current')
alaFipsVlanNpivDiscStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 22, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivDiscStatsVlanId"))
if mibBuilder.loadTexts: alaFipsVlanNpivDiscStatsEntry.setStatus('current')
alaFipsVlanNpivDiscStatsVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 22, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaFipsVlanNpivDiscStatsVlanId.setStatus('current')
alaFipsVlanNpivDiscStatsRxVlanDiscRqs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 22, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanNpivDiscStatsRxVlanDiscRqs.setStatus('current')
alaFipsVlanNpivDiscStatsTxVlanDiscResps = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 22, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanNpivDiscStatsTxVlanDiscResps.setStatus('current')
alaFipsVlanNpivDiscStatsRxMdss = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 22, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanNpivDiscStatsRxMdss.setStatus('current')
alaFipsVlanNpivDiscStatsRxUdss = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 22, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanNpivDiscStatsRxUdss.setStatus('current')
alaFipsVlanNpivDiscStatsTxMdas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 22, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanNpivDiscStatsTxMdas.setStatus('current')
alaFipsVlanNpivDiscStatsTxUdas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 22, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanNpivDiscStatsTxUdas.setStatus('current')
alaFipsIntfNpivDiscStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 23))
alaFipsIntfNpivDiscStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 23, 1), )
if mibBuilder.loadTexts: alaFipsIntfNpivDiscStatsTable.setStatus('current')
alaFipsIntfNpivDiscStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 23, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivDiscStatsIfIndex"))
if mibBuilder.loadTexts: alaFipsIntfNpivDiscStatsEntry.setStatus('current')
alaFipsIntfNpivDiscStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 23, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaFipsIntfNpivDiscStatsIfIndex.setStatus('current')
alaFipsIntfNpivDiscStatsRxVlanDiscRqs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 23, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfNpivDiscStatsRxVlanDiscRqs.setStatus('current')
alaFipsIntfNpivDiscStatsTxVlanDiscResps = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 23, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfNpivDiscStatsTxVlanDiscResps.setStatus('current')
alaFipsIntfNpivDiscStatsRxMdss = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 23, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfNpivDiscStatsRxMdss.setStatus('current')
alaFipsIntfNpivDiscStatsRxUdss = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 23, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfNpivDiscStatsRxUdss.setStatus('current')
alaFipsIntfNpivDiscStatsTxMdas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 23, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfNpivDiscStatsTxMdas.setStatus('current')
alaFipsIntfNpivDiscStatsTxUdas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 23, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfNpivDiscStatsTxUdas.setStatus('current')
alaFipsVlanNpivLoginStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 24))
alaFipsVlanNpivLoginStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 24, 1), )
if mibBuilder.loadTexts: alaFipsVlanNpivLoginStatsTable.setStatus('current')
alaFipsVlanNpivLoginStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 24, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivLoginStatsVlanId"))
if mibBuilder.loadTexts: alaFipsVlanNpivLoginStatsEntry.setStatus('current')
alaFipsVlanNpivLoginStatsVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 24, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaFipsVlanNpivLoginStatsVlanId.setStatus('current')
alaFipsVlanNpivLoginStatsRxFlogis = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 24, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanNpivLoginStatsRxFlogis.setStatus('current')
alaFipsVlanNpivLoginStatsRxFdiscs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 24, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanNpivLoginStatsRxFdiscs.setStatus('current')
alaFipsVlanNpivLoginStatsTxFlogiAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 24, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanNpivLoginStatsTxFlogiAccs.setStatus('current')
alaFipsVlanNpivLoginStatsTxFlogiLsRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 24, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanNpivLoginStatsTxFlogiLsRjts.setStatus('current')
alaFipsVlanNpivLoginStatsTxFdiscLsRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 24, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanNpivLoginStatsTxFdiscLsRjts.setStatus('current')
alaFipsVlanNpivLoginStatsRxLogos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 24, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanNpivLoginStatsRxLogos.setStatus('current')
alaFipsVlanNpivLoginStatsTxCvls = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 24, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanNpivLoginStatsTxCvls.setStatus('current')
alaFipsVlanNpivLoginStatsRxEkas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 24, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanNpivLoginStatsRxEkas.setStatus('current')
alaFipsVlanNpivLoginStatsRxVnkas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 24, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanNpivLoginStatsRxVnkas.setStatus('current')
alaFipsVlanNpivLoginStatsTxFDiscAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 24, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanNpivLoginStatsTxFDiscAccs.setStatus('current')
alaFipsVlanNpivLoginStatsTxFlogoAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 24, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanNpivLoginStatsTxFlogoAccs.setStatus('current')
alaFipsVlanNpivLoginStatsTxFLogoLsRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 24, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanNpivLoginStatsTxFLogoLsRjts.setStatus('current')
alaFipsIntfNpivLoginStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 25))
alaFipsIntfNpivLoginStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 25, 1), )
if mibBuilder.loadTexts: alaFipsIntfNpivLoginStatsTable.setStatus('current')
alaFipsIntfNpivLoginStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 25, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivLoginStatsIfIndex"))
if mibBuilder.loadTexts: alaFipsIntfNpivLoginStatsEntry.setStatus('current')
alaFipsIntfNpivLoginStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 25, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaFipsIntfNpivLoginStatsIfIndex.setStatus('current')
alaFipsIntfNpivLoginStatsRxFlogis = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 25, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfNpivLoginStatsRxFlogis.setStatus('current')
alaFipsIntfNpivLoginStatsRxFdiscs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 25, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfNpivLoginStatsRxFdiscs.setStatus('current')
alaFipsIntfNpivLoginStatsTxFlogiAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 25, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfNpivLoginStatsTxFlogiAccs.setStatus('current')
alaFipsIntfNpivLoginStatsTxFlogiLsRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 25, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfNpivLoginStatsTxFlogiLsRjts.setStatus('current')
alaFipsIntfNpivLoginStatsTxFdiscLsRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 25, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfNpivLoginStatsTxFdiscLsRjts.setStatus('current')
alaFipsIntfNpivLoginStatsRxLogos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 25, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfNpivLoginStatsRxLogos.setStatus('current')
alaFipsIntfNpivLoginStatsTxCvls = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 25, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfNpivLoginStatsTxCvls.setStatus('current')
alaFipsIntfNpivLoginStatsRxEkas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 25, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfNpivLoginStatsRxEkas.setStatus('current')
alaFipsIntfNpivLoginStatsRxVnkas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 25, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfNpivLoginStatsRxVnkas.setStatus('current')
alaFipsIntfNpivLoginStatsTxFDiscAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 25, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfNpivLoginStatsTxFDiscAccs.setStatus('current')
alaFipsIntfNpivLoginStatsTxFlogoAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 25, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfNpivLoginStatsTxFlogoAccs.setStatus('current')
alaFipsIntfNpivLoginStatsTxFLogoLsRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 25, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfNpivLoginStatsTxFLogoLsRjts.setStatus('current')
alaFipsVlanRnpivDiscStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 26))
alaFipsVlanRnpivDiscStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 26, 1), )
if mibBuilder.loadTexts: alaFipsVlanRnpivDiscStatsTable.setStatus('current')
alaFipsVlanRnpivDiscStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 26, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsVlanRnpivDiscStatsVlanId"))
if mibBuilder.loadTexts: alaFipsVlanRnpivDiscStatsEntry.setStatus('current')
alaFipsVlanRnpivDiscStatsVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 26, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaFipsVlanRnpivDiscStatsVlanId.setStatus('current')
alaFipsVlanRnpivDiscStatsRxMdas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 26, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanRnpivDiscStatsRxMdas.setStatus('current')
alaFipsVlanRnpivDiscStatsRxUdas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 26, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanRnpivDiscStatsRxUdas.setStatus('current')
alaFipsVlanRnpivDiscStatsTxMdss = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 26, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanRnpivDiscStatsTxMdss.setStatus('current')
alaFipsVlanRnpivDiscStatsTxUdss = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 26, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanRnpivDiscStatsTxUdss.setStatus('current')
alaFipsIntfRnpivDiscStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 27))
alaFipsIntfRnpivDiscStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 27, 1), )
if mibBuilder.loadTexts: alaFipsIntfRnpivDiscStatsTable.setStatus('current')
alaFipsIntfRnpivDiscStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 27, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsIntfRnpivDiscStatsIfIndex"))
if mibBuilder.loadTexts: alaFipsIntfRnpivDiscStatsEntry.setStatus('current')
alaFipsIntfRnpivDiscStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 27, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaFipsIntfRnpivDiscStatsIfIndex.setStatus('current')
alaFipsIntfRnpivDiscStatsRxMdas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 27, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfRnpivDiscStatsRxMdas.setStatus('current')
alaFipsIntfRnpivDiscStatsRxUdas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 27, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfRnpivDiscStatsRxUdas.setStatus('current')
alaFipsIntfRnpivDiscStatsTxMdss = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 27, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfRnpivDiscStatsTxMdss.setStatus('current')
alaFipsIntfRnpivDiscStatsTxUdss = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 27, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfRnpivDiscStatsTxUdss.setStatus('current')
alaFipsVlanRnpivLoginStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 28))
alaFipsVlanRnpivLoginStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 28, 1), )
if mibBuilder.loadTexts: alaFipsVlanRnpivLoginStatsTable.setStatus('current')
alaFipsVlanRnpivLoginStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 28, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsVlanRnpivLoginStatsVlanId"))
if mibBuilder.loadTexts: alaFipsVlanRnpivLoginStatsEntry.setStatus('current')
alaFipsVlanRnpivLoginStatsVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 28, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaFipsVlanRnpivLoginStatsVlanId.setStatus('current')
alaFipsVlanRnpivLoginStatsTxFlogis = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 28, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanRnpivLoginStatsTxFlogis.setStatus('current')
alaFipsVlanRnpivLoginStatsTxFdiscs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 28, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanRnpivLoginStatsTxFdiscs.setStatus('current')
alaFipsVlanRnpivLoginStatsRxLsAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 28, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanRnpivLoginStatsRxLsAccs.setStatus('current')
alaFipsVlanRnpivLoginStatsRxFlogiLsRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 28, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanRnpivLoginStatsRxFlogiLsRjts.setStatus('current')
alaFipsVlanRnpivLoginStatsRxFdiscLsRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 28, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanRnpivLoginStatsRxFdiscLsRjts.setStatus('current')
alaFipsVlanRnpivLoginStatsRxCvls = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 28, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanRnpivLoginStatsRxCvls.setStatus('current')
alaFipsVlanRnpivLoginStatsTxLogos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 28, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanRnpivLoginStatsTxLogos.setStatus('current')
alaFipsVlanRnpivLoginStatsTxVnkas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 28, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanRnpivLoginStatsTxVnkas.setStatus('current')
alaFipsVlanRnpivLoginStatsTxEkas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 28, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsVlanRnpivLoginStatsTxEkas.setStatus('current')
alaFipsIntfRnpivLoginStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 29))
alaFipsIntfRnpivLoginStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 29, 1), )
if mibBuilder.loadTexts: alaFipsIntfRnpivLoginStatsTable.setStatus('current')
alaFipsIntfRnpivLoginStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 29, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsIntfRnpivLoginStatsIfIndex"))
if mibBuilder.loadTexts: alaFipsIntfRnpivLoginStatsEntry.setStatus('current')
alaFipsIntfRnpivLoginStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 29, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaFipsIntfRnpivLoginStatsIfIndex.setStatus('current')
alaFipsIntfRnpivLoginStatsTxFlogis = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 29, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfRnpivLoginStatsTxFlogis.setStatus('current')
alaFipsIntfRnpivLoginStatsTxFdiscs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 29, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfRnpivLoginStatsTxFdiscs.setStatus('current')
alaFipsIntfRnpivLoginStatsRxLsAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 29, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfRnpivLoginStatsRxLsAccs.setStatus('current')
alaFipsIntfRnpivLoginStatsRxFlogiLsRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 29, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfRnpivLoginStatsRxFlogiLsRjts.setStatus('current')
alaFipsIntfRnpivLoginStatsRxFdiscLsRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 29, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfRnpivLoginStatsRxFdiscLsRjts.setStatus('current')
alaFipsIntfRnpivLoginStatsRxCvls = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 29, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfRnpivLoginStatsRxCvls.setStatus('current')
alaFipsIntfRnpivLoginStatsTxLogos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 29, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfRnpivLoginStatsTxLogos.setStatus('current')
alaFipsIntfRnpivLoginStatsTxVnkas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 29, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfRnpivLoginStatsTxVnkas.setStatus('current')
alaFipsIntfRnpivLoginStatsTxEkas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 29, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsIntfRnpivLoginStatsTxEkas.setStatus('current')
alaFipsEtunnelVePortStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30))
alaFipsEtunnelVePortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1), )
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsTable.setStatus('current')
alaFipsEtunnelVePortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsTunnelId"))
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsEntry.setStatus('current')
alaFipsEtunnelVePortStatsTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsTunnelId.setStatus('current')
alaFipsEtunnelVePortStatsRxMdss = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsRxMdss.setStatus('current')
alaFipsEtunnelVePortStatsRxUdss = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsRxUdss.setStatus('current')
alaFipsEtunnelVePortStatsRxMdas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsRxMdas.setStatus('current')
alaFipsEtunnelVePortStatsRxUdas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsRxUdas.setStatus('current')
alaFipsEtunnelVePortStatsRxElpReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsRxElpReqs.setStatus('current')
alaFipsEtunnelVePortStatsRxSwAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsRxSwAccs.setStatus('current')
alaFipsEtunnelVePortStatsRxSwRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsRxSwRjts.setStatus('current')
alaFipsEtunnelVePortStatsRxCvls = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsRxCvls.setStatus('current')
alaFipsEtunnelVePortStatsTxMdss = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsTxMdss.setStatus('current')
alaFipsEtunnelVePortStatsTxUdss = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsTxUdss.setStatus('current')
alaFipsEtunnelVePortStatsTxMdas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsTxMdas.setStatus('current')
alaFipsEtunnelVePortStatsTxUdas = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsTxUdas.setStatus('current')
alaFipsEtunnelVePortStatsTxElpReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsTxElpReqs.setStatus('current')
alaFipsEtunnelVePortStatsTxSwAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsTxSwAccs.setStatus('current')
alaFipsEtunnelVePortStatsTxSwRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsTxSwRjts.setStatus('current')
alaFipsEtunnelVePortStatsTxCvls = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsTxCvls.setStatus('current')
alaFipsEtunnelVePortStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 30, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("none", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFipsEtunnelVePortStatsClear.setStatus('current')
alaFipsEtunnelTePortStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 31))
alaFipsEtunnelTePortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 31, 1), )
if mibBuilder.loadTexts: alaFipsEtunnelTePortStatsTable.setStatus('current')
alaFipsEtunnelTePortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 31, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelTePortStatsTunnelId"))
if mibBuilder.loadTexts: alaFipsEtunnelTePortStatsEntry.setStatus('current')
alaFipsEtunnelTePortStatsTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 31, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaFipsEtunnelTePortStatsTunnelId.setStatus('current')
alaFipsEtunnelTePortStatsRxElpReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 31, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelTePortStatsRxElpReqs.setStatus('current')
alaFipsEtunnelTePortStatsRxSwAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 31, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelTePortStatsRxSwAccs.setStatus('current')
alaFipsEtunnelTePortStatsRxSwRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 31, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelTePortStatsRxSwRjts.setStatus('current')
alaFipsEtunnelTePortStatsTxElpReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 31, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelTePortStatsTxElpReqs.setStatus('current')
alaFipsEtunnelTePortStatsTxSwAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 31, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelTePortStatsTxSwAccs.setStatus('current')
alaFipsEtunnelTePortStatsTxSwRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 31, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelTePortStatsTxSwRjts.setStatus('current')
alaFipsEtunnelTePortStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 31, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("none", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaFipsEtunnelTePortStatsClear.setStatus('current')
alaFipsVsanVlanMap = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 32))
alaFipsVsanVlanMapTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 32, 1), )
if mibBuilder.loadTexts: alaFipsVsanVlanMapTable.setStatus('current')
alaFipsVsanVlanMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 32, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsVsanVlanMapVsanNumber"))
if mibBuilder.loadTexts: alaFipsVsanVlanMapEntry.setStatus('current')
alaFipsVsanVlanMapVsanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 32, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaFipsVsanVlanMapVsanNumber.setStatus('current')
alaFipsVsanVlanMapVlanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 32, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsVsanVlanMapVlanNumber.setStatus('current')
alaFipsVsanVlanMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 32, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsVsanVlanMapRowStatus.setStatus('current')
alaFipsDiscAdvt = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 33))
alaFipsDiscAdvtTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 33, 1), )
if mibBuilder.loadTexts: alaFipsDiscAdvtTable.setStatus('current')
alaFipsDiscAdvtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 33, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsDiscAdvtVlanId"))
if mibBuilder.loadTexts: alaFipsDiscAdvtEntry.setStatus('current')
alaFipsDiscAdvtVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 33, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaFipsDiscAdvtVlanId.setStatus('current')
alaFipsDiscAdvtAbit = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 33, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsDiscAdvtAbit.setStatus('current')
alaFipsDiscAdvtFkaAdvPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 33, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 90)).clone(8)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsDiscAdvtFkaAdvPeriod.setStatus('current')
alaFipsDiscAdvtPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 33, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(128)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsDiscAdvtPriority.setStatus('current')
alaFipsDiscAdvtUdsRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 33, 1, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsDiscAdvtUdsRetries.setStatus('current')
alaFipsDiscAdvtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 33, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsDiscAdvtRowStatus.setStatus('current')
alaFipsEtunnel = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 34))
alaFipsEtunnelTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 34, 1), )
if mibBuilder.loadTexts: alaFipsEtunnelTable.setStatus('current')
alaFipsEtunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 34, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelId"))
if mibBuilder.loadTexts: alaFipsEtunnelEntry.setStatus('current')
alaFipsEtunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 34, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaFipsEtunnelId.setStatus('current')
alaFipsEtunnelVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 34, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsEtunnelVlanId.setStatus('current')
alaFipsEtunnelIfIndexOne = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 34, 1, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsEtunnelIfIndexOne.setStatus('current')
alaFipsEtunnelIfIndexTwo = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 34, 1, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsEtunnelIfIndexTwo.setStatus('current')
alaFipsEtunnelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 34, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsEtunnelRowStatus.setStatus('current')
alaFipsEtunnelStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 34, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("none", 2))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsEtunnelStatsClear.setStatus('current')
alaFipsNpivSession = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 35))
alaFipsNpivSessionTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 35, 1), )
if mibBuilder.loadTexts: alaFipsNpivSessionTable.setStatus('current')
alaFipsNpivSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 35, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsNpivSessionEnodeMAC"), (0, "ALCATEL-IND1-FIPS-MIB", "alaFipsNpivSessionVNMAC"), (0, "ALCATEL-IND1-FIPS-MIB", "alaFipsNpivSessionVlanId"))
if mibBuilder.loadTexts: alaFipsNpivSessionEntry.setStatus('current')
alaFipsNpivSessionEnodeMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 35, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: alaFipsNpivSessionEnodeMAC.setStatus('current')
alaFipsNpivSessionVNMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 35, 1, 1, 2), MacAddress())
if mibBuilder.loadTexts: alaFipsNpivSessionVNMAC.setStatus('current')
alaFipsNpivSessionVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 35, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094)))
if mibBuilder.loadTexts: alaFipsNpivSessionVlanId.setStatus('current')
alaFipsNpivSessionInIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 35, 1, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsNpivSessionInIfIndex.setStatus('current')
alaFipsNpivSessionOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 35, 1, 1, 5), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsNpivSessionOutIfIndex.setStatus('current')
alaFipsNpivSessionFCFMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 35, 1, 1, 6), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsNpivSessionFCFMAC.setStatus('current')
alaFipsNpivSessionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 35, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pending", 1), ("created", 2))).clone('pending')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsNpivSessionStatus.setStatus('current')
alaFipsNpivSessionLoginTimeDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 35, 1, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsNpivSessionLoginTimeDate.setStatus('current')
alaFipsRnpivSession = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 36))
alaFipsRnpivSessionTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 36, 1), )
if mibBuilder.loadTexts: alaFipsRnpivSessionTable.setStatus('current')
alaFipsRnpivSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 36, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsRnpivSessionFcid"), (0, "ALCATEL-IND1-FIPS-MIB", "alaFipsRnpivSessionVsanId"))
if mibBuilder.loadTexts: alaFipsRnpivSessionEntry.setStatus('current')
alaFipsRnpivSessionFcid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 36, 1, 1, 1), Fcid())
if mibBuilder.loadTexts: alaFipsRnpivSessionFcid.setStatus('current')
alaFipsRnpivSessionVsanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 36, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaFipsRnpivSessionVsanId.setStatus('current')
alaFipsRnpivSessionVNMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 36, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsRnpivSessionVNMAC.setStatus('current')
alaFipsRnpivSessionVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 36, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsRnpivSessionVlanId.setStatus('current')
alaFipsRnpivSessionInIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 36, 1, 1, 5), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsRnpivSessionInIfIndex.setStatus('current')
alaFipsRnpivSessionOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 36, 1, 1, 6), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsRnpivSessionOutIfIndex.setStatus('current')
alaFipsRnpivSessionFCFMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 36, 1, 1, 7), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsRnpivSessionFCFMAC.setStatus('current')
alaFipsRnpivSessionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 36, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pending", 1), ("created", 2))).clone('pending')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsRnpivSessionStatus.setStatus('current')
alaFipsRnpivSessionLoginTimeDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 36, 1, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsRnpivSessionLoginTimeDate.setStatus('current')
alaFipsEtunnelSession = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 37))
alaFipsEtunnelSessionTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 37, 1), )
if mibBuilder.loadTexts: alaFipsEtunnelSessionTable.setStatus('current')
alaFipsEtunnelSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 37, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelSessionTunnelId"))
if mibBuilder.loadTexts: alaFipsEtunnelSessionEntry.setStatus('current')
alaFipsEtunnelSessionTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 37, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaFipsEtunnelSessionTunnelId.setStatus('current')
alaFipsEtunnelSessionVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 37, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelSessionVlanId.setStatus('current')
alaFipsEtunnelSessionInIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 37, 1, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelSessionInIfIndex.setStatus('current')
alaFipsEtunnelSessionOutIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 37, 1, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelSessionOutIfIndex.setStatus('current')
alaFipsEtunnelSessionFCFMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 37, 1, 1, 5), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaFipsEtunnelSessionFCFMAC.setStatus('current')
alaFipsEtunnelSessionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 37, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pending", 1), ("created", 2))).clone('pending')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelSessionStatus.setStatus('current')
alaFipsEtunnelSessionLoginTimeDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 37, 1, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelSessionLoginTimeDate.setStatus('current')
alaFipsEtunnelSessionPairMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 37, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("teToVe", 1), ("te-to-te", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFipsEtunnelSessionPairMode.setStatus('current')
alaFcNpivLoadBalSess = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 38))
alaFcNpivLoadBalSessTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 38, 1), )
if mibBuilder.loadTexts: alaFcNpivLoadBalSessTable.setStatus('current')
alaFcNpivLoadBalSessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 38, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFcNpivLoadBalSessIfIndex"))
if mibBuilder.loadTexts: alaFcNpivLoadBalSessEntry.setStatus('current')
alaFcNpivLoadBalSessIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 38, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaFcNpivLoadBalSessIfIndex.setStatus('current')
alaFcNpivLoadBalSessCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 38, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcNpivLoadBalSessCount.setStatus('current')
alaFcIntfEtunnelStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 39))
alaFcIntfEtunnelStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 39, 1), )
if mibBuilder.loadTexts: alaFcIntfEtunnelStatsTable.setStatus('current')
alaFcIntfEtunnelStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 39, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-FIPS-MIB", "alaFcIntfEtunnelStatsIfIndex"))
if mibBuilder.loadTexts: alaFcIntfEtunnelStatsEntry.setStatus('current')
alaFcIntfEtunnelStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 39, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaFcIntfEtunnelStatsIfIndex.setStatus('current')
alaFcIntfEtunnelStatsTunnelId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 39, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfEtunnelStatsTunnelId.setStatus('current')
alaFcIntfEtunnelStatsRxElpReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 39, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfEtunnelStatsRxElpReqs.setStatus('current')
alaFcIntfEtunnelStatsRxSwAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 39, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfEtunnelStatsRxSwAccs.setStatus('current')
alaFcIntfEtunnelStatsRxSwRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 39, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfEtunnelStatsRxSwRjts.setStatus('current')
alaFcIntfEtunnelStatsTxElpReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 39, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfEtunnelStatsTxElpReqs.setStatus('current')
alaFcIntfEtunnelStatsTxSwAccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 39, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfEtunnelStatsTxSwAccs.setStatus('current')
alaFcIntfEtunnelStatsTxSwRjts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 1, 39, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaFcIntfEtunnelStatsTxSwRjts.setStatus('current')
alcatelIND1FipsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsInfoGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanEnodeStatsGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanFcfStatsGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfEnodeStatsGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfFcfStatsGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsFcfGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsSessionGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsNotificationGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsNotificationObjectGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVfpaGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFcNpivStaticLoadBalanceGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFcNodeGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFcSessGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfNpivStatsGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanNpivStatsGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfRnpivStatsGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanRnpivStatsGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFcInfoGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivDiscStatsGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivDiscStatsGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivLoginStatsGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivLoginStatsGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanRnpivDiscStatsGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfRnpivDiscStatsGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanRnpivLoginStatsGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfRnpivLoginStatsGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelTePortStatsGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVsanVlanMapGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsDiscAdvtGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsNpivSessionGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsRnpivSessionGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelSessionGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFcNpivLoadBalSessGroup"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfEtunnelStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1FipsMIBCompliance = alcatelIND1FipsMIBCompliance.setStatus('current')
alaFipsInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsConfigFilterResourceLimit"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsConfigFIPSAdmin"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsConfigAddressMode"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsConfigPriorityOne"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsConfigPriorityTwo"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsTotalNumFilterResource"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsUsedNumFilterResource"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsConfigStatsClear"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsConfigPrioProtection"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsConfigPriorityProtectionAction"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsConfigPriorityProtectionRemarkVal"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsConfigHouseKeepingTimePeriod"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsConfigSWReinsertStatus"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsConfigSessClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsInfoGroup = alaFipsInfoGroup.setStatus('current')
alaFipsVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanFCMap"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanStatsClear"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanStatsFnreClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsVlanGroup = alaFipsVlanGroup.setStatus('current')
alaFipsVlanEnodeStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanEnodeStatsSessions"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanEnodeStatsMds"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanEnodeStatsUds"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanEnodeStatsFlogi"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanEnodeStatsFdisc"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanEnodeStatsLogo"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanEnodeStatsEka"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanEnodeStatsVnka"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanEnodeStatsClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsVlanEnodeStatsGroup = alaFipsVlanEnodeStatsGroup.setStatus('current')
alaFipsVlanFcfStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanFcfStatsSessions"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanFcfStatsMda"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanFcfStatsUda"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanFcfStatsFlogiAcc"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanFcfStatsFlogiRjt"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanFcfStatsFdiscRjt"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanFcfStatsLogoAcc"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanFcfStatsLogoRjt"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanFcfStatsCvl"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanFcfStatsClear"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanFcfStatsFdiscAcc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsVlanFcfStatsGroup = alaFipsVlanFcfStatsGroup.setStatus('current')
alaFipsIntfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfOperStatus"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfPortRole"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfRowStatus"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfStatsClear"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfStatsFnreClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsIntfGroup = alaFipsIntfGroup.setStatus('current')
alaFipsIntfEnodeStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfEnodeStatsSessions"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfEnodeStatsMds"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfEnodeStatsUds"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfEnodeStatsFlogi"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfEnodeStatsFdisc"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfEnodeStatsLogo"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfEnodeStatsEka"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfEnodeStatsVnka"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfEnodeStatsClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsIntfEnodeStatsGroup = alaFipsIntfEnodeStatsGroup.setStatus('current')
alaFipsIntfFcfStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 7)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfFcfStatsSessions"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfFcfStatsMda"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfFcfStatsUda"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfFcfStatsFlogiAcc"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfFcfStatsFlogiRjt"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfFcfStatsFdiscRjt"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfFcfStatsLogoAcc"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfFcfStatsLogoRjt"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfFcfStatsCvl"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfFcfStatsClear"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfFcfStatsFdiscAcc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsIntfFcfStatsGroup = alaFipsIntfFcfStatsGroup.setStatus('current')
alaFipsFcfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 8)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsFcfIntf"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsFcfSessions"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsFcfConfigType"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsFcfRowStatus"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsFcfAvailForLogin"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsFcfMaxFcoeFrmSizeVerified"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsFcfPriority"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsFcfType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsFcfGroup = alaFipsFcfGroup.setStatus('current')
alaFipsSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 9)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsSessionIfIndex"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsSessionFCFMAC"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsSessionStatus"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsSessionLoginTime"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsSessionLoginTimeDate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsSessionGroup = alaFipsSessionGroup.setStatus('current')
alaFipsNotificationObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 10)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsFilterResourceUsage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsNotificationObjectGroup = alaFipsNotificationObjectGroup.setStatus('current')
alaFipsNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 11)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsResourceThresholdReached"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsNotificationGroup = alaFipsNotificationGroup.setStatus('current')
alaFcVsanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 12)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFcVsanDescription"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanAdmStatus"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanOperStatus"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFcVsanGroup = alaFcVsanGroup.setStatus('current')
alaFcVfpaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 13)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFcVfpaState"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVfpaRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFcVfpaGroup = alaFcVfpaGroup.setStatus('current')
alaFcIntfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 14)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFcIntfOperStatus"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfMode"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfBbScN"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfClassOfService"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfFcid"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfWwpn"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfLoginState"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfRowStatus"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfStatsClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFcIntfGroup = alaFcIntfGroup.setStatus('current')
alaFcNpivStaticLoadBalanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 15)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFcNpivStaticLoadBalanceRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFcNpivStaticLoadBalanceGroup = alaFcNpivStaticLoadBalanceGroup.setStatus('current')
alaFcNodeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 16)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFcNodeVsanNumber"), ("ALCATEL-IND1-FIPS-MIB", "alaFcNodeVlanNumber"), ("ALCATEL-IND1-FIPS-MIB", "alaFcNodeFcid"), ("ALCATEL-IND1-FIPS-MIB", "alaFcNodeWwnn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFcNodeGroup = alaFcNodeGroup.setStatus('current')
alaFcSessGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 17)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFcSessVsanNumber"), ("ALCATEL-IND1-FIPS-MIB", "alaFcSessStatus"), ("ALCATEL-IND1-FIPS-MIB", "alaFcSessIntfMode"), ("ALCATEL-IND1-FIPS-MIB", "alaFcSessFcid"), ("ALCATEL-IND1-FIPS-MIB", "alaFcSessType"), ("ALCATEL-IND1-FIPS-MIB", "alaFcSessTunnelId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFcSessGroup = alaFcSessGroup.setStatus('current')
alaFcIntfNpivStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 18)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFcIntfNpivStatsTxFlogis"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfNpivStatsTxFdiscs"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfNpivStatsRxLsAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfNpivStatsRxFlogos"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfNpivStatsRxFlogiLsRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfNpivStatsRxFdiscLsRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfNpivStatsTxFlogos"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfNpivStatsClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFcIntfNpivStatsGroup = alaFcIntfNpivStatsGroup.setStatus('current')
alaFcVsanNpivStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 19)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFcVsanNpivStatsTxFlogis"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanNpivStatsTxFdiscs"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanNpivStatsRxLsAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanNpivStatsRxFlogos"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanNpivStatsRxFlogiLsRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanNpivStatsRxFdiscLsRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanNpivStatsTxFlogos"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFcVsanNpivStatsGroup = alaFcVsanNpivStatsGroup.setStatus('current')
alaFcIntfRnpivStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 20)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFcIntfRnpivStatsRxFlogis"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfRnpivStatsRxFdiscs"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfRnpivStatsTxFlogiLsAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfRnpivStatsTxFdiscLsAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfRnpivStatsTxFlogos"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfRnpivStatsTxFlogiLsRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfRnpivStatsTxFdiscLsRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfRnpivStatsRxFlogos"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfRnpivStatsClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFcIntfRnpivStatsGroup = alaFcIntfRnpivStatsGroup.setStatus('current')
alaFcVsanRnpivStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 21)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFcVsanRnpivStatsRxFlogis"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanRnpivStatsRxFdiscs"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanRnpivStatsTxFlogiLsAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanRnpivStatsTxFdiscLsAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanRnpivStatsTxFlogos"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanRnpivStatsTxFlogiLsRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanRnpivStatsTxFdiscLsRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFcVsanRnpivStatsRxFlogos"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFcVsanRnpivStatsGroup = alaFcVsanRnpivStatsGroup.setStatus('current')
alaFcInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 22)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFcConfigSessClear"), ("ALCATEL-IND1-FIPS-MIB", "alaFcConfigStatsClear"), ("ALCATEL-IND1-FIPS-MIB", "alaFcConfigNpivLoadBalance"), ("ALCATEL-IND1-FIPS-MIB", "alaFcConfigWwnn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFcInfoGroup = alaFcInfoGroup.setStatus('current')
alaFipsVlanNpivDiscStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 23)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivDiscStatsRxVlanDiscRqs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivDiscStatsTxVlanDiscResps"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivDiscStatsRxMdss"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivDiscStatsRxUdss"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivDiscStatsTxMdas"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivDiscStatsTxUdas"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsVlanNpivDiscStatsGroup = alaFipsVlanNpivDiscStatsGroup.setStatus('current')
alaFipsIntfNpivDiscStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 24)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivDiscStatsRxVlanDiscRqs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivDiscStatsTxVlanDiscResps"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivDiscStatsRxMdss"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivDiscStatsRxUdss"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivDiscStatsTxMdas"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivDiscStatsTxUdas"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsIntfNpivDiscStatsGroup = alaFipsIntfNpivDiscStatsGroup.setStatus('current')
alaFipsVlanNpivLoginStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 25)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivLoginStatsRxFlogis"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivLoginStatsRxFdiscs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivLoginStatsTxFlogiAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivLoginStatsTxFlogiLsRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivLoginStatsTxFdiscLsRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivLoginStatsRxLogos"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivLoginStatsTxCvls"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivLoginStatsRxEkas"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivLoginStatsRxVnkas"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivLoginStatsTxFDiscAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivLoginStatsTxFlogoAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanNpivLoginStatsTxFLogoLsRjts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsVlanNpivLoginStatsGroup = alaFipsVlanNpivLoginStatsGroup.setStatus('current')
alaFipsIntfNpivLoginStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 26)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivLoginStatsRxFlogis"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivLoginStatsRxFdiscs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivLoginStatsTxFlogiAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivLoginStatsTxFlogiLsRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivLoginStatsTxFdiscLsRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivLoginStatsRxLogos"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivLoginStatsTxCvls"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivLoginStatsRxEkas"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivLoginStatsRxVnkas"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivLoginStatsTxFDiscAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivLoginStatsTxFlogoAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfNpivLoginStatsTxFLogoLsRjts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsIntfNpivLoginStatsGroup = alaFipsIntfNpivLoginStatsGroup.setStatus('current')
alaFipsVlanRnpivDiscStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 27)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanRnpivDiscStatsRxMdas"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanRnpivDiscStatsRxUdas"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanRnpivDiscStatsTxMdss"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanRnpivDiscStatsTxUdss"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsVlanRnpivDiscStatsGroup = alaFipsVlanRnpivDiscStatsGroup.setStatus('current')
alaFipsIntfRnpivDiscStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 28)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfRnpivDiscStatsRxMdas"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfRnpivDiscStatsRxUdas"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfRnpivDiscStatsTxMdss"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfRnpivDiscStatsTxUdss"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsIntfRnpivDiscStatsGroup = alaFipsIntfRnpivDiscStatsGroup.setStatus('current')
alaFipsVlanRnpivLoginStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 29)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanRnpivLoginStatsTxFlogis"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanRnpivLoginStatsTxFdiscs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanRnpivLoginStatsRxLsAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanRnpivLoginStatsRxFlogiLsRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanRnpivLoginStatsRxFdiscLsRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanRnpivLoginStatsRxCvls"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanRnpivLoginStatsTxLogos"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanRnpivLoginStatsTxVnkas"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVlanRnpivLoginStatsTxEkas"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsVlanRnpivLoginStatsGroup = alaFipsVlanRnpivLoginStatsGroup.setStatus('current')
alaFipsIntfRnpivLoginStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 30)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfRnpivLoginStatsTxFlogis"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfRnpivLoginStatsTxFdiscs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfRnpivLoginStatsRxLsAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfRnpivLoginStatsRxFlogiLsRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfRnpivLoginStatsRxFdiscLsRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfRnpivLoginStatsRxCvls"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfRnpivLoginStatsTxLogos"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfRnpivLoginStatsTxVnkas"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsIntfRnpivLoginStatsTxEkas"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsIntfRnpivLoginStatsGroup = alaFipsIntfRnpivLoginStatsGroup.setStatus('current')
alaFipsEtunnelVePortStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 31)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsRxMdss"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsRxUdss"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsRxMdas"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsRxUdas"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsRxElpReqs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsRxSwAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsRxSwRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsRxCvls"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsTxMdss"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsTxUdss"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsTxMdas"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsTxUdas"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsTxElpReqs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsTxSwAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsTxSwRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsTxCvls"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVePortStatsClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsEtunnelVePortStatsGroup = alaFipsEtunnelVePortStatsGroup.setStatus('current')
alaFipsEtunnelTePortStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 32)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelTePortStatsRxElpReqs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelTePortStatsRxSwAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelTePortStatsRxSwRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelTePortStatsTxElpReqs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelTePortStatsTxSwAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelTePortStatsTxSwRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelTePortStatsClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsEtunnelTePortStatsGroup = alaFipsEtunnelTePortStatsGroup.setStatus('current')
alaFipsVsanVlanMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 33)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsVsanVlanMapVlanNumber"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsVsanVlanMapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsVsanVlanMapGroup = alaFipsVsanVlanMapGroup.setStatus('current')
alaFipsDiscAdvtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 34)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsDiscAdvtAbit"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsDiscAdvtFkaAdvPeriod"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsDiscAdvtPriority"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsDiscAdvtUdsRetries"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsDiscAdvtRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsDiscAdvtGroup = alaFipsDiscAdvtGroup.setStatus('current')
alaFipsEtunnelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 35)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelVlanId"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelIfIndexOne"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelIfIndexTwo"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelRowStatus"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelStatsClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsEtunnelGroup = alaFipsEtunnelGroup.setStatus('current')
alaFipsNpivSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 36)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsNpivSessionInIfIndex"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsNpivSessionOutIfIndex"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsNpivSessionFCFMAC"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsNpivSessionStatus"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsNpivSessionLoginTimeDate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsNpivSessionGroup = alaFipsNpivSessionGroup.setStatus('current')
alaFipsRnpivSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 37)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsRnpivSessionVNMAC"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsRnpivSessionVlanId"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsRnpivSessionInIfIndex"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsRnpivSessionOutIfIndex"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsRnpivSessionFCFMAC"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsRnpivSessionStatus"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsRnpivSessionLoginTimeDate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsRnpivSessionGroup = alaFipsRnpivSessionGroup.setStatus('current')
alaFipsEtunnelSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 38)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelSessionVlanId"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelSessionInIfIndex"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelSessionOutIfIndex"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelSessionFCFMAC"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelSessionStatus"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelSessionLoginTimeDate"), ("ALCATEL-IND1-FIPS-MIB", "alaFipsEtunnelSessionPairMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFipsEtunnelSessionGroup = alaFipsEtunnelSessionGroup.setStatus('current')
alaFcNpivLoadBalSessGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 39)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFcNpivLoadBalSessCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFcNpivLoadBalSessGroup = alaFcNpivLoadBalSessGroup.setStatus('current')
alaFcIntfEtunnelStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 74, 1, 2, 1, 40)).setObjects(("ALCATEL-IND1-FIPS-MIB", "alaFcIntfEtunnelStatsTunnelId"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfEtunnelStatsRxElpReqs"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfEtunnelStatsRxSwAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfEtunnelStatsRxSwRjts"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfEtunnelStatsTxElpReqs"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfEtunnelStatsTxSwAccs"), ("ALCATEL-IND1-FIPS-MIB", "alaFcIntfEtunnelStatsTxSwRjts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaFcIntfEtunnelStatsGroup = alaFcIntfEtunnelStatsGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-FIPS-MIB", alaFcIntfClassOfService=alaFcIntfClassOfService, alaFipsIntfRnpivDiscStatsIfIndex=alaFipsIntfRnpivDiscStatsIfIndex, alaFipsIntfEnodeStatsLogo=alaFipsIntfEnodeStatsLogo, alaFipsSessionIfIndex=alaFipsSessionIfIndex, alaFcIntfRnpivStatsClear=alaFcIntfRnpivStatsClear, alaFipsIntfRnpivLoginStatsTxVnkas=alaFipsIntfRnpivLoginStatsTxVnkas, alaFipsIntfIfIndex=alaFipsIntfIfIndex, alaFcVsanRnpivStatsVsan=alaFcVsanRnpivStatsVsan, alaFipsIntfRnpivLoginStatsGroup=alaFipsIntfRnpivLoginStatsGroup, alaFipsDiscAdvtVlanId=alaFipsDiscAdvtVlanId, alaFcNpivLoadBalSessTable=alaFcNpivLoadBalSessTable, alaFipsVlanNpivLoginStatsRxVnkas=alaFipsVlanNpivLoginStatsRxVnkas, alaFipsConfigFilterResourceLimit=alaFipsConfigFilterResourceLimit, alaFipsVlanNpivDiscStatsTxUdas=alaFipsVlanNpivDiscStatsTxUdas, alaFipsVlanRnpivLoginStatsTxVnkas=alaFipsVlanRnpivLoginStatsTxVnkas, alaFipsRnpivSessionEntry=alaFipsRnpivSessionEntry, alaFcVsanNpivStatsEntry=alaFcVsanNpivStatsEntry, alaFipsVlanGroup=alaFipsVlanGroup, alaFipsIntfRnpivLoginStatsRxCvls=alaFipsIntfRnpivLoginStatsRxCvls, alaFcIntfRnpivStatsEntry=alaFcIntfRnpivStatsEntry, alaFipsEtunnelRowStatus=alaFipsEtunnelRowStatus, alaFipsVlanStatsClear=alaFipsVlanStatsClear, alaFipsIntfRowStatus=alaFipsIntfRowStatus, alaFipsVlanNpivLoginStatsRxFdiscs=alaFipsVlanNpivLoginStatsRxFdiscs, alaFipsFcfPriority=alaFipsFcfPriority, alaFipsVlanEnodeStatsGroup=alaFipsVlanEnodeStatsGroup, alaFipsEtunnelTePortStatsTxElpReqs=alaFipsEtunnelTePortStatsTxElpReqs, alaFcSessIfIndex=alaFcSessIfIndex, alaFipsVlanEnodeStatsUds=alaFipsVlanEnodeStatsUds, alaFcIntfStatsClear=alaFcIntfStatsClear, alaFipsVlanNpivDiscStatsRxVlanDiscRqs=alaFipsVlanNpivDiscStatsRxVlanDiscRqs, alaFipsDiscAdvtTable=alaFipsDiscAdvtTable, alaFipsIntfRnpivDiscStatsEntry=alaFipsIntfRnpivDiscStatsEntry, alaFcVsanNpivStatsRxFlogos=alaFcVsanNpivStatsRxFlogos, alaFipsVsanVlanMapGroup=alaFipsVsanVlanMapGroup, alaFipsNpivSessionVlanId=alaFipsNpivSessionVlanId, alaFipsIntfFcfStatsLogoRjt=alaFipsIntfFcfStatsLogoRjt, alaFipsVlanStatsFnreClear=alaFipsVlanStatsFnreClear, alaFipsDiscAdvtUdsRetries=alaFipsDiscAdvtUdsRetries, alaFipsEtunnelVePortStatsRxElpReqs=alaFipsEtunnelVePortStatsRxElpReqs, alaFipsRnpivSessionFcid=alaFipsRnpivSessionFcid, alaFipsVlanNpivLoginStatsEntry=alaFipsVlanNpivLoginStatsEntry, alaFipsConfigStatsClear=alaFipsConfigStatsClear, alaFipsVlanNpivDiscStatsRxMdss=alaFipsVlanNpivDiscStatsRxMdss, alaFipsIntfRnpivLoginStatsTxFlogis=alaFipsIntfRnpivLoginStatsTxFlogis, alaFipsIntfRnpivLoginStatsRxFdiscLsRjts=alaFipsIntfRnpivLoginStatsRxFdiscLsRjts, alaFipsIntfNpivDiscStatsTxUdas=alaFipsIntfNpivDiscStatsTxUdas, alaFipsVlanEnodeStatsFdisc=alaFipsVlanEnodeStatsFdisc, alaFcIntfEtunnelStatsGroup=alaFcIntfEtunnelStatsGroup, alaFcConfigWwnn=alaFcConfigWwnn, alcatelIND1FipsMIBGroups=alcatelIND1FipsMIBGroups, alaFipsIntfNpivLoginStatsTxFLogoLsRjts=alaFipsIntfNpivLoginStatsTxFLogoLsRjts, alaFipsNpivSessionOutIfIndex=alaFipsNpivSessionOutIfIndex, alaFipsEtunnelVePortStatsRxMdas=alaFipsEtunnelVePortStatsRxMdas, alcatelIND1FipsMIB=alcatelIND1FipsMIB, alaFipsVsanVlanMapRowStatus=alaFipsVsanVlanMapRowStatus, alaFipsVlanNpivDiscStatsEntry=alaFipsVlanNpivDiscStatsEntry, alaFipsNpivSessionInIfIndex=alaFipsNpivSessionInIfIndex, alaFipsIntfNpivDiscStatsTxMdas=alaFipsIntfNpivDiscStatsTxMdas, alaFcIntfRnpivStatsTxFlogiLsRjts=alaFcIntfRnpivStatsTxFlogiLsRjts, alaFipsIntfEnodeStats=alaFipsIntfEnodeStats, alaFcIntfNpivStatsTxFlogos=alaFcIntfNpivStatsTxFlogos, alaFcIntfEtunnelStatsIfIndex=alaFcIntfEtunnelStatsIfIndex, alcatelIND1FipsMIBObjects=alcatelIND1FipsMIBObjects, alaFcIntfEtunnelStatsRxSwRjts=alaFcIntfEtunnelStatsRxSwRjts, alaFipsEtunnelVePortStatsGroup=alaFipsEtunnelVePortStatsGroup, alaFipsNpivSessionGroup=alaFipsNpivSessionGroup, alaFcIntfNpivStatsGroup=alaFcIntfNpivStatsGroup, alaFipsFcfAvailForLogin=alaFipsFcfAvailForLogin, alaFcNodeEntry=alaFcNodeEntry, alaFipsVlanNpivLoginStatsTxFDiscAccs=alaFipsVlanNpivLoginStatsTxFDiscAccs, alaFipsIntfEnodeStatsMds=alaFipsIntfEnodeStatsMds, alaFipsRnpivSessionVNMAC=alaFipsRnpivSessionVNMAC, alaFipsEtunnelVePortStatsClear=alaFipsEtunnelVePortStatsClear, alaFcVfpaVsanNumber=alaFcVfpaVsanNumber, alaFcIntfNpivStatsRxFlogiLsRjts=alaFcIntfNpivStatsRxFlogiLsRjts, alaFipsRnpivSession=alaFipsRnpivSession, alaFipsIntfEnodeStatsSessions=alaFipsIntfEnodeStatsSessions, alaFipsVlanNpivDiscStatsRxUdss=alaFipsVlanNpivDiscStatsRxUdss, alaFcVsanRnpivStatsRxFdiscs=alaFcVsanRnpivStatsRxFdiscs, alaFcNodeIfIndex=alaFcNodeIfIndex, alaFipsRnpivSessionOutIfIndex=alaFipsRnpivSessionOutIfIndex, alaFipsRnpivSessionVlanId=alaFipsRnpivSessionVlanId, alaFipsIntfFcfStatsEntry=alaFipsIntfFcfStatsEntry, alaFcVsanNpivStatsGroup=alaFcVsanNpivStatsGroup, alaFcNode=alaFcNode, alaFipsIntfNpivDiscStatsEntry=alaFipsIntfNpivDiscStatsEntry, alaFipsVlanRnpivLoginStatsRxFlogiLsRjts=alaFipsVlanRnpivLoginStatsRxFlogiLsRjts, alaFipsVlanNpivLoginStatsRxLogos=alaFipsVlanNpivLoginStatsRxLogos, alaFipsNpivSession=alaFipsNpivSession, alaFipsIntfNpivLoginStatsTxFlogiLsRjts=alaFipsIntfNpivLoginStatsTxFlogiLsRjts, alaFipsVlanEnodeStatsClear=alaFipsVlanEnodeStatsClear, alaFipsFcfTable=alaFipsFcfTable, alaFcIntfRnpivStatsRxFlogis=alaFcIntfRnpivStatsRxFlogis, alaFipsVlanFcfStatsEntry=alaFipsVlanFcfStatsEntry, alaFipsNpivSessionLoginTimeDate=alaFipsNpivSessionLoginTimeDate, alaFipsSessionLoginTime=alaFipsSessionLoginTime, alaFipsIntfRnpivDiscStatsTable=alaFipsIntfRnpivDiscStatsTable, alaFipsEtunnelSessionLoginTimeDate=alaFipsEtunnelSessionLoginTimeDate, alaFipsVlanEnodeStatsEka=alaFipsVlanEnodeStatsEka, alaFipsSessionEntry=alaFipsSessionEntry, alcatelIND1FipsMIBCompliances=alcatelIND1FipsMIBCompliances, alaFcInfoGroup=alaFcInfoGroup, alaFipsVlanEnodeStatsLogo=alaFipsVlanEnodeStatsLogo, alaFipsNpivSessionEntry=alaFipsNpivSessionEntry, alaFipsIntfNpivDiscStats=alaFipsIntfNpivDiscStats, alaFcInfo=alaFcInfo, alaFipsVlanRnpivLoginStatsTxFlogis=alaFipsVlanRnpivLoginStatsTxFlogis, alaFipsVlanTable=alaFipsVlanTable, alaFcVsanRnpivStatsRxFlogos=alaFcVsanRnpivStatsRxFlogos, alaFipsConfigAddressMode=alaFipsConfigAddressMode, alaFipsInfoGroup=alaFipsInfoGroup, alaFipsNpivSessionEnodeMAC=alaFipsNpivSessionEnodeMAC, alaFcVsanNpivStatsTxFlogos=alaFcVsanNpivStatsTxFlogos, alaFcIntfOperStatus=alaFcIntfOperStatus, alaFipsIntfRnpivDiscStats=alaFipsIntfRnpivDiscStats, alaFcSessIntfMode=alaFcSessIntfMode, alaFipsEtunnelVePortStatsEntry=alaFipsEtunnelVePortStatsEntry, alaFipsIntfNpivDiscStatsTxVlanDiscResps=alaFipsIntfNpivDiscStatsTxVlanDiscResps, alaFipsVlanRnpivLoginStatsEntry=alaFipsVlanRnpivLoginStatsEntry, alaFcIntfRnpivStatsTxFdiscLsRjts=alaFcIntfRnpivStatsTxFdiscLsRjts, alaFcIntfBbScN=alaFcIntfBbScN, alaFipsVlanNpivLoginStatsGroup=alaFipsVlanNpivLoginStatsGroup, alaFipsIntf=alaFipsIntf, Fcid=Fcid, alaFipsIntfEnodeStatsTable=alaFipsIntfEnodeStatsTable, alaFipsVlanNpivLoginStatsTxFlogoAccs=alaFipsVlanNpivLoginStatsTxFlogoAccs, alaFipsEtunnelVePortStatsRxCvls=alaFipsEtunnelVePortStatsRxCvls, alaFipsIntfFcfStatsFlogiAcc=alaFipsIntfFcfStatsFlogiAcc, alaFipsVlanRnpivLoginStatsVlanId=alaFipsVlanRnpivLoginStatsVlanId, alaFcVsanRowStatus=alaFcVsanRowStatus, alaFipsIntfNpivLoginStatsTable=alaFipsIntfNpivLoginStatsTable, alaFcIntfEtunnelStatsEntry=alaFcIntfEtunnelStatsEntry, alaFipsIntfNpivLoginStatsTxCvls=alaFipsIntfNpivLoginStatsTxCvls, alaFipsIntfNpivLoginStatsTxFdiscLsRjts=alaFipsIntfNpivLoginStatsTxFdiscLsRjts, alaFipsEtunnelIfIndexOne=alaFipsEtunnelIfIndexOne, alaFcVfpaIfIndex=alaFcVfpaIfIndex, alaFipsIntfFcfStatsCvl=alaFipsIntfFcfStatsCvl, alaFipsEtunnelVePortStatsTxMdss=alaFipsEtunnelVePortStatsTxMdss, alaFipsEtunnelVePortStatsTable=alaFipsEtunnelVePortStatsTable, alaFipsVlanFcfStatsCvl=alaFipsVlanFcfStatsCvl, alaFipsIntfStatsFnreClear=alaFipsIntfStatsFnreClear, alaFipsVsanVlanMapEntry=alaFipsVsanVlanMapEntry, alaFipsInfo=alaFipsInfo, alaFipsVlanNpivLoginStatsTable=alaFipsVlanNpivLoginStatsTable, alaFipsEtunnelTePortStatsRxElpReqs=alaFipsEtunnelTePortStatsRxElpReqs, alaFipsVlanNpivLoginStatsRxEkas=alaFipsVlanNpivLoginStatsRxEkas, alaFcNodeWwnn=alaFcNodeWwnn, alaFcIntfEtunnelStatsRxElpReqs=alaFcIntfEtunnelStatsRxElpReqs, alaFipsConfigPriorityProtectionAction=alaFipsConfigPriorityProtectionAction, alaFcVfpa=alaFcVfpa, alaFipsEtunnelTePortStatsGroup=alaFipsEtunnelTePortStatsGroup, alaFipsVlanEnodeStatsFlogi=alaFipsVlanEnodeStatsFlogi, alaFipsEtunnelVePortStatsTxMdas=alaFipsEtunnelVePortStatsTxMdas, alaFipsFcfConfigType=alaFipsFcfConfigType, alaFipsVsanVlanMapTable=alaFipsVsanVlanMapTable, alaFipsIntfFcfStatsUda=alaFipsIntfFcfStatsUda, alaFcVsanRnpivStats=alaFcVsanRnpivStats, alaFcIntfMode=alaFcIntfMode, alaFcIntfRnpivStats=alaFcIntfRnpivStats, alaFipsIntfFcfStatsClear=alaFipsIntfFcfStatsClear, alaFipsEtunnelVePortStatsRxUdss=alaFipsEtunnelVePortStatsRxUdss, alaFcConfigSessClear=alaFcConfigSessClear, alaFipsIntfNpivLoginStatsRxFlogis=alaFipsIntfNpivLoginStatsRxFlogis, alcatelIND1FipsMIBNotifications=alcatelIND1FipsMIBNotifications, alaFipsSessionFCFMAC=alaFipsSessionFCFMAC, alaFcNpivStaticLoadBalanceRowStatus=alaFcNpivStaticLoadBalanceRowStatus, alaFipsDiscAdvtPriority=alaFipsDiscAdvtPriority, alaFipsVlanRnpivLoginStatsTxLogos=alaFipsVlanRnpivLoginStatsTxLogos, alaFipsVlanRnpivLoginStatsTxFdiscs=alaFipsVlanRnpivLoginStatsTxFdiscs, alaFipsIntfFcfStatsFdiscAcc=alaFipsIntfFcfStatsFdiscAcc, alaFipsConfigHouseKeepingTimePeriod=alaFipsConfigHouseKeepingTimePeriod, alaFcIntfIfIndex=alaFcIntfIfIndex, alaFcVsanNpivStatsRxFlogiLsRjts=alaFcVsanNpivStatsRxFlogiLsRjts, alaFipsIntfNpivDiscStatsIfIndex=alaFipsIntfNpivDiscStatsIfIndex, alaFipsVlanRnpivDiscStats=alaFipsVlanRnpivDiscStats, alcatelIND1FipsMIBConformance=alcatelIND1FipsMIBConformance, alaFipsIntfNpivLoginStatsTxFDiscAccs=alaFipsIntfNpivLoginStatsTxFDiscAccs, alaFcNpivStaticLoadBalanceGroup=alaFcNpivStaticLoadBalanceGroup, alaFipsIntfEnodeStatsEntry=alaFipsIntfEnodeStatsEntry, alaFcVsanRnpivStatsGroup=alaFcVsanRnpivStatsGroup, alaFipsSessionGroup=alaFipsSessionGroup, alaFcConfigNpivLoadBalance=alaFcConfigNpivLoadBalance, alaFipsEtunnelTePortStatsClear=alaFipsEtunnelTePortStatsClear, alaFipsIntfNpivLoginStatsRxFdiscs=alaFipsIntfNpivLoginStatsRxFdiscs, alaFipsEtunnelVePortStatsTxSwRjts=alaFipsEtunnelVePortStatsTxSwRjts, alaFipsIntfEntry=alaFipsIntfEntry, alaFipsIntfNpivLoginStatsIfIndex=alaFipsIntfNpivLoginStatsIfIndex, alaFipsIntfRnpivLoginStatsRxLsAccs=alaFipsIntfRnpivLoginStatsRxLsAccs, alaFipsIntfNpivLoginStatsRxLogos=alaFipsIntfNpivLoginStatsRxLogos, alaFipsVlanFcfStatsMda=alaFipsVlanFcfStatsMda, alaFcNodeWwpn=alaFcNodeWwpn, alaFipsConfigPriorityOne=alaFipsConfigPriorityOne, alaFipsDiscAdvtFkaAdvPeriod=alaFipsDiscAdvtFkaAdvPeriod, alaFipsNotificationObj=alaFipsNotificationObj, alaFcIntfRnpivStatsIfIndex=alaFcIntfRnpivStatsIfIndex, alaFipsRnpivSessionVsanId=alaFipsRnpivSessionVsanId, alaFcVsanRnpivStatsTxFlogos=alaFcVsanRnpivStatsTxFlogos, alaFipsEtunnelTePortStats=alaFipsEtunnelTePortStats, alaFipsVlanRnpivDiscStatsGroup=alaFipsVlanRnpivDiscStatsGroup, alaFipsDiscAdvtEntry=alaFipsDiscAdvtEntry, alaFipsResourceThresholdReached=alaFipsResourceThresholdReached, alaFipsVlanNpivDiscStatsGroup=alaFipsVlanNpivDiscStatsGroup, alaFipsIntfNpivLoginStatsEntry=alaFipsIntfNpivLoginStatsEntry, alaFipsVlanEnodeStatsTable=alaFipsVlanEnodeStatsTable, alaFipsIntfRnpivDiscStatsRxUdas=alaFipsIntfRnpivDiscStatsRxUdas, alaFipsIntfPortRole=alaFipsIntfPortRole, alaFcIntfNpivStatsTxFlogis=alaFcIntfNpivStatsTxFlogis, alaFcNpivLoadBalSessCount=alaFcNpivLoadBalSessCount, alaFcIntf=alaFcIntf, alaFipsNpivSessionTable=alaFipsNpivSessionTable, alaFcIntfEtunnelStatsTable=alaFcIntfEtunnelStatsTable, alaFipsVlanId=alaFipsVlanId, alaFipsSessionEnodeMAC=alaFipsSessionEnodeMAC, alaFcNpivLoadBalSessIfIndex=alaFcNpivLoadBalSessIfIndex, alaFcVsanDescription=alaFcVsanDescription, alaFipsNotificationObjectGroup=alaFipsNotificationObjectGroup, alaFipsEtunnelVePortStatsRxUdas=alaFipsEtunnelVePortStatsRxUdas, alaFipsIntfFcfStatsFlogiRjt=alaFipsIntfFcfStatsFlogiRjt, alaFipsVlanEnodeStatsSessions=alaFipsVlanEnodeStatsSessions, alaFipsVlanRnpivDiscStatsVlanId=alaFipsVlanRnpivDiscStatsVlanId, alaFipsEtunnelId=alaFipsEtunnelId, alaFcVsanAdmStatus=alaFcVsanAdmStatus, alaFipsEtunnelTePortStatsRxSwRjts=alaFipsEtunnelTePortStatsRxSwRjts, alaFipsEtunnelVePortStatsTxUdas=alaFipsEtunnelVePortStatsTxUdas, alaFipsEtunnelEntry=alaFipsEtunnelEntry, alaFcIntfNpivStatsRxLsAccs=alaFcIntfNpivStatsRxLsAccs, alaFipsVsanVlanMap=alaFipsVsanVlanMap, alaFipsIntfNpivDiscStatsGroup=alaFipsIntfNpivDiscStatsGroup, alaFipsIntfNpivDiscStatsRxVlanDiscRqs=alaFipsIntfNpivDiscStatsRxVlanDiscRqs, alaFipsVlanFcfStatsTable=alaFipsVlanFcfStatsTable, alaFipsEtunnelSessionInIfIndex=alaFipsEtunnelSessionInIfIndex, alaFipsVlanFcfStatsSessions=alaFipsVlanFcfStatsSessions, alaFcVsanRnpivStatsTxFlogiLsAccs=alaFcVsanRnpivStatsTxFlogiLsAccs, alaFipsEtunnelSession=alaFipsEtunnelSession, alaFipsVlanRnpivLoginStatsTxEkas=alaFipsVlanRnpivLoginStatsTxEkas, alaFipsEtunnelIfIndexTwo=alaFipsEtunnelIfIndexTwo, alaFipsFcfType=alaFipsFcfType, alaFipsFcfRowStatus=alaFipsFcfRowStatus, alaFcVfpaTable=alaFcVfpaTable, alaFcNpivStaticLoadBalanceTable=alaFcNpivStaticLoadBalanceTable, alaFcIntfNpivStatsEntry=alaFcIntfNpivStatsEntry, alaFipsEtunnelGroup=alaFipsEtunnelGroup, alaFipsEtunnelTePortStatsTable=alaFipsEtunnelTePortStatsTable, Wwpn=Wwpn, alaFipsRnpivSessionLoginTimeDate=alaFipsRnpivSessionLoginTimeDate, alaFipsEtunnelVePortStatsRxMdss=alaFipsEtunnelVePortStatsRxMdss, alaFipsIntfFcfStatsGroup=alaFipsIntfFcfStatsGroup, alaFipsIntfNpivDiscStatsTable=alaFipsIntfNpivDiscStatsTable, alaFipsConfigSWReinsertStatus=alaFipsConfigSWReinsertStatus, alaFipsIntfEnodeStatsEka=alaFipsIntfEnodeStatsEka, alaFipsVlanEnodeStatsEntry=alaFipsVlanEnodeStatsEntry, alaFipsVlanEnodeStats=alaFipsVlanEnodeStats, alaFipsIntfRnpivLoginStatsIfIndex=alaFipsIntfRnpivLoginStatsIfIndex)
mibBuilder.exportSymbols("ALCATEL-IND1-FIPS-MIB", alaFipsVlanRnpivDiscStatsTable=alaFipsVlanRnpivDiscStatsTable, alaFipsEtunnel=alaFipsEtunnel, alaFcConfigStatsClear=alaFcConfigStatsClear, alaFipsEtunnelVlanId=alaFipsEtunnelVlanId, alaFcSessTunnelId=alaFcSessTunnelId, alaFcVsanNpivStats=alaFcVsanNpivStats, alaFipsIntfRnpivLoginStatsTxEkas=alaFipsIntfRnpivLoginStatsTxEkas, alaFipsVlanRnpivDiscStatsEntry=alaFipsVlanRnpivDiscStatsEntry, alaFipsIntfFcfStatsIfIndex=alaFipsIntfFcfStatsIfIndex, alaFipsSession=alaFipsSession, alaFipsIntfNpivLoginStatsRxEkas=alaFipsIntfNpivLoginStatsRxEkas, alaFcVsanNpivStatsTable=alaFcVsanNpivStatsTable, alaFipsEtunnelSessionVlanId=alaFipsEtunnelSessionVlanId, alaFipsFcfMaxFcoeFrmSizeVerified=alaFipsFcfMaxFcoeFrmSizeVerified, alaFipsVlanFcfStatsFlogiAcc=alaFipsVlanFcfStatsFlogiAcc, alaFipsVlanNpivDiscStatsTxVlanDiscResps=alaFipsVlanNpivDiscStatsTxVlanDiscResps, alaFipsFcfEntry=alaFipsFcfEntry, alaFipsVlanRnpivLoginStatsRxCvls=alaFipsVlanRnpivLoginStatsRxCvls, alaFcNpivLoadBalSess=alaFcNpivLoadBalSess, alaFipsEtunnelVePortStats=alaFipsEtunnelVePortStats, alaFcVsanOperStatus=alaFcVsanOperStatus, alaFcSess=alaFcSess, alaFcIntfEtunnelStatsTxSwRjts=alaFcIntfEtunnelStatsTxSwRjts, alaFipsConfigFIPSAdmin=alaFipsConfigFIPSAdmin, alaFcIntfNpivStatsTxFdiscs=alaFcIntfNpivStatsTxFdiscs, FipsFCMAP=FipsFCMAP, alaFipsConfigSessClear=alaFipsConfigSessClear, alaFcVsanRnpivStatsEntry=alaFcVsanRnpivStatsEntry, alaFipsVlanFcfStatsFlogiRjt=alaFipsVlanFcfStatsFlogiRjt, alaFcVsan=alaFcVsan, alaFcNpivStaticLoadBalanceFcIfIndex=alaFcNpivStaticLoadBalanceFcIfIndex, alaFcIntfNpivStats=alaFcIntfNpivStats, alaFcVfpaState=alaFcVfpaState, alaFcIntfNpivStatsTable=alaFcIntfNpivStatsTable, alaFipsIntfTable=alaFipsIntfTable, alaFipsEtunnelSessionFCFMAC=alaFipsEtunnelSessionFCFMAC, alaFcIntfRnpivStatsTxFlogos=alaFcIntfRnpivStatsTxFlogos, alaFipsVlanRnpivDiscStatsRxMdas=alaFipsVlanRnpivDiscStatsRxMdas, alaFipsIntfNpivLoginStats=alaFipsIntfNpivLoginStats, alaFcNpivStaticLoadBalance=alaFcNpivStaticLoadBalance, alaFipsIntfOperStatus=alaFipsIntfOperStatus, alaFcVsanTable=alaFcVsanTable, alaFipsIntfEnodeStatsFdisc=alaFipsIntfEnodeStatsFdisc, alaFipsIntfNpivLoginStatsTxFlogoAccs=alaFipsIntfNpivLoginStatsTxFlogoAccs, alaFipsSessionTable=alaFipsSessionTable, alaFipsFcfSessions=alaFipsFcfSessions, alaFipsFcfMAC=alaFipsFcfMAC, alaFipsEtunnelSessionTunnelId=alaFipsEtunnelSessionTunnelId, alaFcVsanNpivStatsRxFdiscLsRjts=alaFcVsanNpivStatsRxFdiscLsRjts, alaFipsVlanEnodeStatsMds=alaFipsVlanEnodeStatsMds, alaFcVsanNpivStatsTxFlogis=alaFcVsanNpivStatsTxFlogis, alaFipsVlanNpivLoginStatsTxCvls=alaFipsVlanNpivLoginStatsTxCvls, alaFipsVlanRnpivLoginStats=alaFipsVlanRnpivLoginStats, alaFipsIntfEnodeStatsClear=alaFipsIntfEnodeStatsClear, alaFipsVlanFcfStatsFdiscAcc=alaFipsVlanFcfStatsFdiscAcc, alaFipsRnpivSessionGroup=alaFipsRnpivSessionGroup, alaFipsEtunnelVePortStatsRxSwAccs=alaFipsEtunnelVePortStatsRxSwAccs, alaFipsIntfFcfStatsLogoAcc=alaFipsIntfFcfStatsLogoAcc, alaFcVfpaGroup=alaFcVfpaGroup, alaFipsEtunnelSessionPairMode=alaFipsEtunnelSessionPairMode, alaFipsFcf=alaFipsFcf, alaFipsIntfRnpivLoginStatsTxLogos=alaFipsIntfRnpivLoginStatsTxLogos, alaFcNpivStaticLoadBalanceEntry=alaFcNpivStaticLoadBalanceEntry, alaFipsIntfStatsClear=alaFipsIntfStatsClear, alaFcIntfNpivStatsClear=alaFcIntfNpivStatsClear, alaFipsVlanRnpivLoginStatsTable=alaFipsVlanRnpivLoginStatsTable, alaFipsVsanVlanMapVsanNumber=alaFipsVsanVlanMapVsanNumber, alaFcIntfFcid=alaFcIntfFcid, alaFcVsanRnpivStatsTxFlogiLsRjts=alaFcVsanRnpivStatsTxFlogiLsRjts, alaFipsEtunnelTable=alaFipsEtunnelTable, alaFipsEtunnelTePortStatsTunnelId=alaFipsEtunnelTePortStatsTunnelId, alaFcSessType=alaFcSessType, alaFipsFilterResourceUsage=alaFipsFilterResourceUsage, alaFcVfpaEntry=alaFcVfpaEntry, alaFipsVlanEnodeStatsVnka=alaFipsVlanEnodeStatsVnka, alaFipsVlanFcfStatsLogoRjt=alaFipsVlanFcfStatsLogoRjt, alaFipsFcfIntf=alaFipsFcfIntf, alaFipsEtunnelVePortStatsTxSwAccs=alaFipsEtunnelVePortStatsTxSwAccs, alaFipsVlanNpivLoginStatsTxFdiscLsRjts=alaFipsVlanNpivLoginStatsTxFdiscLsRjts, alaFipsVlan=alaFipsVlan, alaFipsVlanFCMap=alaFipsVlanFCMap, alaFipsDiscAdvtGroup=alaFipsDiscAdvtGroup, alaFipsVlanRnpivDiscStatsRxUdas=alaFipsVlanRnpivDiscStatsRxUdas, alaFipsRnpivSessionInIfIndex=alaFipsRnpivSessionInIfIndex, alaFipsIntfNpivLoginStatsGroup=alaFipsIntfNpivLoginStatsGroup, alaFipsConfigPrioProtection=alaFipsConfigPrioProtection, alaFipsRnpivSessionStatus=alaFipsRnpivSessionStatus, alaFipsIntfRnpivDiscStatsRxMdas=alaFipsIntfRnpivDiscStatsRxMdas, alaFipsSessionVlanId=alaFipsSessionVlanId, alaFcSessStatus=alaFcSessStatus, alaFipsRnpivSessionTable=alaFipsRnpivSessionTable, alaFipsIntfEnodeStatsFlogi=alaFipsIntfEnodeStatsFlogi, alaFipsVlanFcfStatsLogoAcc=alaFipsVlanFcfStatsLogoAcc, alaFipsIntfRnpivLoginStatsTable=alaFipsIntfRnpivLoginStatsTable, alaFcNodeTable=alaFcNodeTable, alaFipsNpivSessionStatus=alaFipsNpivSessionStatus, alaFcVsanEntry=alaFcVsanEntry, alaFipsIntfRnpivLoginStatsRxFlogiLsRjts=alaFipsIntfRnpivLoginStatsRxFlogiLsRjts, alaFipsVsanVlanMapVlanNumber=alaFipsVsanVlanMapVlanNumber, alaFipsTotalNumFilterResource=alaFipsTotalNumFilterResource, alcatelIND1FipsMIBCompliance=alcatelIND1FipsMIBCompliance, alaFcIntfRnpivStatsRxFdiscs=alaFcIntfRnpivStatsRxFdiscs, alaFcVsanNpivStatsTxFdiscs=alaFcVsanNpivStatsTxFdiscs, PYSNMP_MODULE_ID=alcatelIND1FipsMIB, alaFipsVlanFcfStats=alaFipsVlanFcfStats, alaFipsSessionLoginTimeDate=alaFipsSessionLoginTimeDate, alaFcSessWwpn=alaFcSessWwpn, alaFipsEtunnelVePortStatsTxElpReqs=alaFipsEtunnelVePortStatsTxElpReqs, alaFcSessGroup=alaFcSessGroup, alaFipsVlanFcfStatsVlanId=alaFipsVlanFcfStatsVlanId, alaFcSessEntry=alaFcSessEntry, alaFcVsanNpivStatsRxLsAccs=alaFcVsanNpivStatsRxLsAccs, alaFipsEtunnelVePortStatsTxCvls=alaFipsEtunnelVePortStatsTxCvls, alaFcNodeFcid=alaFcNodeFcid, alaFipsEtunnelTePortStatsTxSwAccs=alaFipsEtunnelTePortStatsTxSwAccs, alaFcNpivLoadBalSessGroup=alaFcNpivLoadBalSessGroup, alaFipsFcfVlan=alaFipsFcfVlan, alaFipsIntfRnpivDiscStatsTxUdss=alaFipsIntfRnpivDiscStatsTxUdss, alaFipsEtunnelSessionTable=alaFipsEtunnelSessionTable, alaFipsConfigPriorityTwo=alaFipsConfigPriorityTwo, alaFcIntfRnpivStatsTxFlogiLsAccs=alaFcIntfRnpivStatsTxFlogiLsAccs, alaFipsEtunnelSessionStatus=alaFipsEtunnelSessionStatus, alaFcVsanRnpivStatsTxFdiscLsAccs=alaFcVsanRnpivStatsTxFdiscLsAccs, alaFipsEtunnelVePortStatsTxUdss=alaFipsEtunnelVePortStatsTxUdss, alaFcIntfEtunnelStatsTxElpReqs=alaFcIntfEtunnelStatsTxElpReqs, alaFipsVlanNpivDiscStatsVlanId=alaFipsVlanNpivDiscStatsVlanId, alaFcVsanRnpivStatsTxFdiscLsRjts=alaFcVsanRnpivStatsTxFdiscLsRjts, alaFipsVlanNpivDiscStatsTxMdas=alaFipsVlanNpivDiscStatsTxMdas, alaFipsVlanRnpivLoginStatsRxLsAccs=alaFipsVlanRnpivLoginStatsRxLsAccs, alaFipsIntfRnpivLoginStats=alaFipsIntfRnpivLoginStats, alaFipsConfigPriorityProtectionRemarkVal=alaFipsConfigPriorityProtectionRemarkVal, alaFcIntfEtunnelStats=alaFcIntfEtunnelStats, alaFcVsanNpivStatsVsan=alaFcVsanNpivStatsVsan, alaFipsNotificationGroup=alaFipsNotificationGroup, alaFipsVlanFcfStatsClear=alaFipsVlanFcfStatsClear, alaFipsEtunnelSessionOutIfIndex=alaFipsEtunnelSessionOutIfIndex, alaFipsVlanNpivLoginStatsVlanId=alaFipsVlanNpivLoginStatsVlanId, alaFipsIntfEnodeStatsGroup=alaFipsIntfEnodeStatsGroup, alaFipsVlanRnpivLoginStatsRxFdiscLsRjts=alaFipsVlanRnpivLoginStatsRxFdiscLsRjts, alaFipsUsedNumFilterResource=alaFipsUsedNumFilterResource, alaFipsIntfFcfStatsSessions=alaFipsIntfFcfStatsSessions, alaFcIntfRnpivStatsTable=alaFcIntfRnpivStatsTable, alaFcIntfNpivStatsRxFdiscLsRjts=alaFcIntfNpivStatsRxFdiscLsRjts, alaFipsIntfNpivDiscStatsRxUdss=alaFipsIntfNpivDiscStatsRxUdss, alaFcNpivLoadBalSessEntry=alaFcNpivLoadBalSessEntry, alaFipsIntfEnodeStatsUds=alaFipsIntfEnodeStatsUds, alaFipsIntfRnpivDiscStatsGroup=alaFipsIntfRnpivDiscStatsGroup, alaFipsIntfNpivLoginStatsRxVnkas=alaFipsIntfNpivLoginStatsRxVnkas, alaFipsEtunnelSessionEntry=alaFipsEtunnelSessionEntry, alaFcIntfRowStatus=alaFcIntfRowStatus, alaFipsIntfGroup=alaFipsIntfGroup, alaFipsVlanRnpivDiscStatsTxMdss=alaFipsVlanRnpivDiscStatsTxMdss, alaFipsIntfRnpivLoginStatsEntry=alaFipsIntfRnpivLoginStatsEntry, alaFipsDiscAdvt=alaFipsDiscAdvt, alaFcIntfNpivStatsRxFlogos=alaFcIntfNpivStatsRxFlogos, alaFcSessTable=alaFcSessTable, alaFcIntfWwpn=alaFcIntfWwpn, alaFcVsanRnpivStatsRxFlogis=alaFcVsanRnpivStatsRxFlogis, alaFipsIntfNpivDiscStatsRxMdss=alaFipsIntfNpivDiscStatsRxMdss, alaFcIntfEntry=alaFcIntfEntry, alaFipsNpivSessionFCFMAC=alaFipsNpivSessionFCFMAC, alaFipsIntfNpivLoginStatsTxFlogiAccs=alaFipsIntfNpivLoginStatsTxFlogiAccs, alaFcIntfEtunnelStatsTxSwAccs=alaFcIntfEtunnelStatsTxSwAccs, alaFcVfpaRowStatus=alaFcVfpaRowStatus, alaFcIntfRnpivStatsTxFdiscLsAccs=alaFcIntfRnpivStatsTxFdiscLsAccs, alaFipsIntfFcfStatsTable=alaFipsIntfFcfStatsTable, alaFcIntfTable=alaFcIntfTable, alaFipsEtunnelVePortStatsTunnelId=alaFipsEtunnelVePortStatsTunnelId, alaFipsDiscAdvtRowStatus=alaFipsDiscAdvtRowStatus, alaFipsIntfEnodeStatsIfIndex=alaFipsIntfEnodeStatsIfIndex, alaFcIntfRnpivStatsRxFlogos=alaFcIntfRnpivStatsRxFlogos, alaFipsVlanFcfStatsUda=alaFipsVlanFcfStatsUda, alaFcNpivStaticLoadBalanceEthIfIndex=alaFcNpivStaticLoadBalanceEthIfIndex, alaFipsIntfEnodeStatsVnka=alaFipsIntfEnodeStatsVnka, alaFipsVlanNpivLoginStatsRxFlogis=alaFipsVlanNpivLoginStatsRxFlogis, alaFipsVlanNpivLoginStatsTxFLogoLsRjts=alaFipsVlanNpivLoginStatsTxFLogoLsRjts, alaFipsVlanRnpivDiscStatsTxUdss=alaFipsVlanRnpivDiscStatsTxUdss, alaFcNodeVlanNumber=alaFcNodeVlanNumber, alaFcVsanNumber=alaFcVsanNumber, alaFipsVlanNpivDiscStats=alaFipsVlanNpivDiscStats, alaFipsEtunnelSessionGroup=alaFipsEtunnelSessionGroup, alaFipsIntfRnpivLoginStatsTxFdiscs=alaFipsIntfRnpivLoginStatsTxFdiscs, alaFipsEtunnelTePortStatsTxSwRjts=alaFipsEtunnelTePortStatsTxSwRjts, alaFipsVlanEnodeStatsVlanId=alaFipsVlanEnodeStatsVlanId, Wwnn=Wwnn, alaFipsSessionVNMAC=alaFipsSessionVNMAC, alaFipsNpivSessionVNMAC=alaFipsNpivSessionVNMAC, alaFipsIntfRnpivDiscStatsTxMdss=alaFipsIntfRnpivDiscStatsTxMdss, alaFipsIntfFcfStatsMda=alaFipsIntfFcfStatsMda, alaFcIntfGroup=alaFcIntfGroup, alaFcIntfLoginState=alaFcIntfLoginState, alaFcVsanGroup=alaFcVsanGroup, alaFipsSessionStatus=alaFipsSessionStatus, alaFipsIntfFcfStats=alaFipsIntfFcfStats, alaFcSessVsanNumber=alaFcSessVsanNumber, alaFipsVlanRnpivLoginStatsGroup=alaFipsVlanRnpivLoginStatsGroup, alaFcSessFcid=alaFcSessFcid, alaFipsVlanNpivLoginStats=alaFipsVlanNpivLoginStats, alaFcIntfEtunnelStatsTunnelId=alaFcIntfEtunnelStatsTunnelId, alaFipsEtunnelTePortStatsRxSwAccs=alaFipsEtunnelTePortStatsRxSwAccs, alaFipsVlanFcfStatsGroup=alaFipsVlanFcfStatsGroup, alaFcNodeGroup=alaFcNodeGroup, alaFipsDiscAdvtAbit=alaFipsDiscAdvtAbit, alaFcIntfRnpivStatsGroup=alaFcIntfRnpivStatsGroup, alaFcIntfNpivStatsIfIndex=alaFcIntfNpivStatsIfIndex, alaFcNodeVsanNumber=alaFcNodeVsanNumber, alaFcIntfEtunnelStatsRxSwAccs=alaFcIntfEtunnelStatsRxSwAccs, alaFipsEtunnelStatsClear=alaFipsEtunnelStatsClear, alaFipsVlanNpivLoginStatsTxFlogiLsRjts=alaFipsVlanNpivLoginStatsTxFlogiLsRjts, alaFipsFcfGroup=alaFipsFcfGroup, alaFipsVlanFcfStatsFdiscRjt=alaFipsVlanFcfStatsFdiscRjt, alaFipsEtunnelTePortStatsEntry=alaFipsEtunnelTePortStatsEntry, alaFipsVlanEntry=alaFipsVlanEntry, alaFipsIntfFcfStatsFdiscRjt=alaFipsIntfFcfStatsFdiscRjt, alaFipsRnpivSessionFCFMAC=alaFipsRnpivSessionFCFMAC, alaFipsEtunnelVePortStatsRxSwRjts=alaFipsEtunnelVePortStatsRxSwRjts, alaFipsVlanNpivDiscStatsTable=alaFipsVlanNpivDiscStatsTable, alaFipsVlanNpivLoginStatsTxFlogiAccs=alaFipsVlanNpivLoginStatsTxFlogiAccs, alaFcVsanRnpivStatsTable=alaFcVsanRnpivStatsTable)
