#
# PySNMP MIB module Juniper-IPV6-PROFILE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Juniper-IPV6-PROFILE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:52:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
InetAddressIPv6, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv6")
Ipv6AddressPrefix, = mibBuilder.importSymbols("IPV6-TC", "Ipv6AddressPrefix")
juniMibs, = mibBuilder.importSymbols("Juniper-MIBs", "juniMibs")
JuniSetMap, JuniEnable, JuniName = mibBuilder.importSymbols("Juniper-TC", "JuniSetMap", "JuniEnable", "JuniName")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter32, Bits, TimeTicks, IpAddress, Gauge32, iso, Unsigned32, NotificationType, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, ObjectIdentity, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Bits", "TimeTicks", "IpAddress", "Gauge32", "iso", "Unsigned32", "NotificationType", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "ObjectIdentity", "Counter64", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
juniIpv6ProfileMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68))
juniIpv6ProfileMIB.setRevisions(('2007-07-19 18:19', '2003-09-29 17:58',))
if mibBuilder.loadTexts: juniIpv6ProfileMIB.setLastUpdated('200707191819Z')
if mibBuilder.loadTexts: juniIpv6ProfileMIB.setOrganization('Juniper Networks')
juniIpv6ProfileObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1))
juniIpv6Profile = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1))
juniIpv6ProfileTable = MibTable((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1), )
if mibBuilder.loadTexts: juniIpv6ProfileTable.setStatus('current')
juniIpv6ProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1), ).setIndexNames((0, "Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileId"))
if mibBuilder.loadTexts: juniIpv6ProfileEntry.setStatus('current')
juniIpv6ProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: juniIpv6ProfileId.setStatus('current')
juniIpv6ProfileSetMap = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 2), JuniSetMap()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileSetMap.setStatus('current')
juniIpv6ProfileRouterName = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 3), JuniName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileRouterName.setStatus('current')
juniIpv6ProfileIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 4), InetAddressIPv6().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileIpv6Addr.setStatus('current')
juniIpv6ProfileIpv6MaskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileIpv6MaskLen.setStatus('current')
juniIpv6ProfileMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1280, 10240), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileMtu.setStatus('current')
juniIpv6ProfileSrcAddrValidEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 7), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileSrcAddrValidEnable.setStatus('current')
juniIpv6ProfileInheritNumString = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileInheritNumString.setStatus('current')
juniIpv6ProfileNdEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 9), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileNdEnabled.setStatus('current')
juniIpv6ProfileNdManagedConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 10), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileNdManagedConfig.setStatus('current')
juniIpv6ProfileNdOtherConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 11), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileNdOtherConfig.setStatus('current')
juniIpv6ProfileNdSuppressRa = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 12), JuniEnable().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileNdSuppressRa.setStatus('current')
juniIpv6ProfileNdRaInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 1800)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileNdRaInterval.setStatus('current')
juniIpv6ProfileNdRaLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1800)).clone(1800)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileNdRaLifeTime.setStatus('current')
juniIpv6ProfileNdReachableTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileNdReachableTime.setStatus('current')
juniIpv6ProfileNdPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 16), Ipv6AddressPrefix()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileNdPrefix.setStatus('current')
juniIpv6ProfileNdPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileNdPrefixLength.setStatus('current')
juniIpv6ProfileNdPrefixOnLinkFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 18), JuniEnable().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileNdPrefixOnLinkFlag.setStatus('current')
juniIpv6ProfileNdPrefixAutonomousFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 19), JuniEnable().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileNdPrefixAutonomousFlag.setStatus('current')
juniIpv6ProfileNdPrefixPreferredLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 20), Integer32().clone(604800)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileNdPrefixPreferredLifetime.setStatus('current')
juniIpv6ProfileNdPrefixValidLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 1, 1, 1, 1, 21), Integer32().clone(2592000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juniIpv6ProfileNdPrefixValidLifetime.setStatus('current')
juniIpv6ProfileMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 4))
juniIpv6ProfileMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 4, 1))
juniIpv6ProfileMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 4, 2))
juniIpv6ProfileCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 4, 1, 1)).setObjects(("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpv6ProfileCompliance = juniIpv6ProfileCompliance.setStatus('obsolete')
juniIpv6ProfileCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 4, 1, 2)).setObjects(("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpv6ProfileCompliance1 = juniIpv6ProfileCompliance1.setStatus('current')
juniIpv6ProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 4, 2, 1)).setObjects(("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileSetMap"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileRouterName"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileIpv6Addr"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileIpv6MaskLen"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileMtu"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileSrcAddrValidEnable"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileInheritNumString"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpv6ProfileGroup = juniIpv6ProfileGroup.setStatus('obsolete')
juniIpv6ProfileGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 4874, 2, 2, 68, 4, 2, 2)).setObjects(("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileSetMap"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileRouterName"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileIpv6Addr"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileIpv6MaskLen"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileMtu"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileSrcAddrValidEnable"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileInheritNumString"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileNdEnabled"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileNdManagedConfig"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileNdOtherConfig"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileNdSuppressRa"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileNdRaInterval"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileNdRaLifeTime"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileNdReachableTime"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileNdPrefix"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileNdPrefixLength"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileNdPrefixOnLinkFlag"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileNdPrefixAutonomousFlag"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileNdPrefixPreferredLifetime"), ("Juniper-IPV6-PROFILE-MIB", "juniIpv6ProfileNdPrefixValidLifetime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    juniIpv6ProfileGroup1 = juniIpv6ProfileGroup1.setStatus('current')
mibBuilder.exportSymbols("Juniper-IPV6-PROFILE-MIB", juniIpv6ProfileMIB=juniIpv6ProfileMIB, juniIpv6ProfileNdPrefixLength=juniIpv6ProfileNdPrefixLength, juniIpv6ProfileId=juniIpv6ProfileId, juniIpv6ProfileIpv6Addr=juniIpv6ProfileIpv6Addr, juniIpv6ProfileNdManagedConfig=juniIpv6ProfileNdManagedConfig, juniIpv6ProfileNdRaInterval=juniIpv6ProfileNdRaInterval, juniIpv6ProfileInheritNumString=juniIpv6ProfileInheritNumString, juniIpv6ProfileRouterName=juniIpv6ProfileRouterName, juniIpv6ProfileNdSuppressRa=juniIpv6ProfileNdSuppressRa, PYSNMP_MODULE_ID=juniIpv6ProfileMIB, juniIpv6ProfileIpv6MaskLen=juniIpv6ProfileIpv6MaskLen, juniIpv6ProfileCompliance=juniIpv6ProfileCompliance, juniIpv6ProfileGroup=juniIpv6ProfileGroup, juniIpv6ProfileSetMap=juniIpv6ProfileSetMap, juniIpv6ProfileNdOtherConfig=juniIpv6ProfileNdOtherConfig, juniIpv6ProfileMtu=juniIpv6ProfileMtu, juniIpv6ProfileMIBGroups=juniIpv6ProfileMIBGroups, juniIpv6ProfileObjects=juniIpv6ProfileObjects, juniIpv6ProfileGroup1=juniIpv6ProfileGroup1, juniIpv6ProfileNdPrefix=juniIpv6ProfileNdPrefix, juniIpv6ProfileEntry=juniIpv6ProfileEntry, juniIpv6ProfileNdEnabled=juniIpv6ProfileNdEnabled, juniIpv6ProfileNdPrefixValidLifetime=juniIpv6ProfileNdPrefixValidLifetime, juniIpv6ProfileTable=juniIpv6ProfileTable, juniIpv6ProfileNdRaLifeTime=juniIpv6ProfileNdRaLifeTime, juniIpv6ProfileNdPrefixAutonomousFlag=juniIpv6ProfileNdPrefixAutonomousFlag, juniIpv6ProfileMIBCompliances=juniIpv6ProfileMIBCompliances, juniIpv6ProfileSrcAddrValidEnable=juniIpv6ProfileSrcAddrValidEnable, juniIpv6ProfileCompliance1=juniIpv6ProfileCompliance1, juniIpv6ProfileNdReachableTime=juniIpv6ProfileNdReachableTime, juniIpv6ProfileNdPrefixOnLinkFlag=juniIpv6ProfileNdPrefixOnLinkFlag, juniIpv6ProfileNdPrefixPreferredLifetime=juniIpv6ProfileNdPrefixPreferredLifetime, juniIpv6ProfileMIBConformance=juniIpv6ProfileMIBConformance, juniIpv6Profile=juniIpv6Profile)
