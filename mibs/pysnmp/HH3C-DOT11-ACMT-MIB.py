#
# PySNMP MIB module HH3C-DOT11-ACMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-DOT11-ACMT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:13:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
Hh3cDot11ObjectIDType, Hh3cDot11MACModeType, hh3cDot11, Hh3cDot11TunnelSecSchemType = mibBuilder.importSymbols("HH3C-DOT11-REF-MIB", "Hh3cDot11ObjectIDType", "Hh3cDot11MACModeType", "hh3cDot11", "Hh3cDot11TunnelSecSchemType")
IANAifType, = mibBuilder.importSymbols("IANAifType-MIB", "IANAifType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Counter32, Gauge32, Integer32, Counter64, ObjectIdentity, MibIdentifier, NotificationType, Unsigned32, iso, IpAddress, Bits, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "Gauge32", "Integer32", "Counter64", "ObjectIdentity", "MibIdentifier", "NotificationType", "Unsigned32", "iso", "IpAddress", "Bits", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hh3cDot11ACMT = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1))
hh3cDot11ACMT.setRevisions(('2010-08-04 18:00', '2009-08-07 18:00', '2009-07-29 18:00', '2009-05-07 20:00', '2008-07-09 18:00', '2007-12-21 18:00', '2007-06-19 18:00', '2007-04-27 20:00', '2006-05-10 19:00',))
if mibBuilder.loadTexts: hh3cDot11ACMT.setLastUpdated('201008041800Z')
if mibBuilder.loadTexts: hh3cDot11ACMT.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
hh3cDot11ACObjectGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1))
hh3cDot11ACObject = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 1))
hh3cDot11ACLoadInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 2))
hh3cDot11WLANAssocStatisInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 3))
hh3cDot11ACBASInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 4))
hh3cDot11ACStaUserSecAuthStatis = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 5))
hh3cDot11CAPWAPTunnelGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 2))
hh3cDot11ACMtNotifyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 3))
hh3cDot11CurrentACMACMode = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 1, 1), Hh3cDot11MACModeType().clone('split')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11CurrentACMACMode.setStatus('current')
hh3cDot11MaxAPNumPermitted = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11MaxAPNumPermitted.setStatus('current')
hh3cDot11MaxStationNumPermitted = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11MaxStationNumPermitted.setStatus('current')
hh3cDot11APConnectCount = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11APConnectCount.setStatus('current')
hh3cDot11StationConnectCount = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11StationConnectCount.setStatus('current')
hh3cDot11ACIFLoadInfoTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 2, 3), )
if mibBuilder.loadTexts: hh3cDot11ACIFLoadInfoTable.setStatus('current')
hh3cDot11ACIFLoadInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 2, 3, 1), ).setIndexNames((0, "HH3C-DOT11-ACMT-MIB", "hh3cDot11ACIfIndex"))
if mibBuilder.loadTexts: hh3cDot11ACIFLoadInfoEntry.setStatus('current')
hh3cDot11ACIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 2, 3, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11ACIfIndex.setStatus('current')
hh3cDot11ACIfApNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11ACIfApNum.setStatus('current')
hh3cDot11ACIfStaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11ACIfStaNum.setStatus('current')
hh3cDot11ACIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 2, 3, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11ACIfName.setStatus('current')
hh3cDot11MasterAPCount = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11MasterAPCount.setStatus('current')
hh3cDot11SlaveAPCount = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11SlaveAPCount.setStatus('current')
hh3cDot11ConnectAutoAPCount = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11ConnectAutoAPCount.setStatus('current')
hh3cDot11PersistentAPCount = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11PersistentAPCount.setStatus('current')
hh3cDot11AcUploadFrameCnt = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 2, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11AcUploadFrameCnt.setStatus('current')
hh3cDot11AcDownloadFrameCnt = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 2, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11AcDownloadFrameCnt.setStatus('current')
hh3cDot11AcUploadFrameBytes = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 2, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11AcUploadFrameBytes.setStatus('current')
hh3cDot11AcDownloadFrameBytes = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 2, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11AcDownloadFrameBytes.setStatus('current')
hh3cDot11StationAssocSum = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11StationAssocSum.setStatus('current')
hh3cDot11StationAssocFailSum = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11StationAssocFailSum.setStatus('current')
hh3cDot11StationReassocSum = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11StationReassocSum.setStatus('current')
hh3cDot11StationAssocRejectedSum = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11StationAssocRejectedSum.setStatus('current')
hh3cDot11StationExDeAuthenSum = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11StationExDeAuthenSum.setStatus('current')
hh3cDot11StationCurAssocSum = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11StationCurAssocSum.setStatus('current')
hh3cDot11ACBASSysObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 4, 1))
hh3cDot11ACBASTableObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 4, 2))
hh3cDot11ACBASIfTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 4, 2, 3), )
if mibBuilder.loadTexts: hh3cDot11ACBASIfTable.setStatus('current')
hh3cDot11ACBASIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 4, 2, 3, 1), ).setIndexNames((0, "HH3C-DOT11-ACMT-MIB", "hh3cDot11ACBASIfIndex"))
if mibBuilder.loadTexts: hh3cDot11ACBASIfEntry.setStatus('current')
hh3cDot11ACBASIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 4, 2, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cDot11ACBASIfIndex.setStatus('current')
hh3cDot11ACBASIfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 4, 2, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11ACBASIfDescr.setStatus('current')
hh3cDot11ACBASIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 4, 2, 3, 1, 3), IANAifType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11ACBASIfType.setStatus('current')
hh3cDot11ACStaUserAuthCurNumber = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11ACStaUserAuthCurNumber.setStatus('current')
hh3cDot11ACStaUserConnFailCnt = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 5, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11ACStaUserConnFailCnt.setStatus('current')
hh3cDot11ACStaUserAuthReqCnt = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 5, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11ACStaUserAuthReqCnt.setStatus('current')
hh3cDot11ACStaUserAuthSuccCnt = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 5, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11ACStaUserAuthSuccCnt.setStatus('current')
hh3cDot11ACStaUserAuthFailCnt = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 1, 5, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11ACStaUserAuthFailCnt.setStatus('current')
hh3cDot11CAPWAPTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 2, 1), )
if mibBuilder.loadTexts: hh3cDot11CAPWAPTunnelTable.setStatus('current')
hh3cDot11CAPWAPTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 2, 1, 1), ).setIndexNames((0, "HH3C-DOT11-ACMT-MIB", "hh3cDot11CurrTunnelAPID"))
if mibBuilder.loadTexts: hh3cDot11CAPWAPTunnelEntry.setStatus('current')
hh3cDot11CurrTunnelAPID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 2, 1, 1, 1), Hh3cDot11ObjectIDType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11CurrTunnelAPID.setStatus('current')
hh3cDot11CtrlTunnelCurrSec = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 2, 1, 1, 2), Hh3cDot11TunnelSecSchemType().clone('cleartxt')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11CtrlTunnelCurrSec.setStatus('current')
hh3cDot11CtrlTunnelUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 2, 1, 1, 3), Integer32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11CtrlTunnelUpTime.setStatus('current')
hh3cDot11DataTunnelCurrSec = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 2, 1, 1, 4), Hh3cDot11TunnelSecSchemType().clone('cleartxt')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11DataTunnelCurrSec.setStatus('current')
hh3cDot11DataTunnelUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 2, 1, 1, 5), Integer32()).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11DataTunnelUpTime.setStatus('current')
hh3cDot11CtrlTunnelUpTimeTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 2, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cDot11CtrlTunnelUpTimeTicks.setStatus('current')
hh3cDot11ACMtTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 3, 0))
hh3cDot11ACMtTunnelSetupTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 3, 0, 1)).setObjects(("HH3C-DOT11-ACMT-MIB", "hh3cDot11CurrTunnelAPID"), ("HH3C-DOT11-ACMT-MIB", "hh3cDot11ACMtTrapTunlUpInfo"), ("HH3C-DOT11-ACMT-MIB", "hh3cDot11ACMtTrapTnlAPName"), ("HH3C-DOT11-ACMT-MIB", "hh3cDot11ACMtTrapTnlAPIPAddr"), ("HH3C-DOT11-ACMT-MIB", "hh3cDot11ACMtTrapAPIPv6Addr"))
if mibBuilder.loadTexts: hh3cDot11ACMtTunnelSetupTrap.setStatus('current')
hh3cDot11ACMtTunnelDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 3, 0, 2)).setObjects(("HH3C-DOT11-ACMT-MIB", "hh3cDot11CurrTunnelAPID"), ("HH3C-DOT11-ACMT-MIB", "hh3cDot11ACMtTrapTunlDwnInfo"), ("HH3C-DOT11-ACMT-MIB", "hh3cDot11ACMtTrapTnlAPName"), ("HH3C-DOT11-ACMT-MIB", "hh3cDot11ACMtTrapTnlAPIPAddr"), ("HH3C-DOT11-ACMT-MIB", "hh3cDot11ACMtTrapAPIPv6Addr"), ("HH3C-DOT11-ACMT-MIB", "hh3cDot11ACMtTrapTunlDwnCount"))
if mibBuilder.loadTexts: hh3cDot11ACMtTunnelDownTrap.setStatus('current')
hh3cDot11ACMtBackupSwtTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 3, 0, 3)).setObjects(("HH3C-DOT11-ACMT-MIB", "hh3cDot11ACMtTrapBackupSwitchInfo"))
if mibBuilder.loadTexts: hh3cDot11ACMtBackupSwtTrap.setStatus('current')
hh3cDot11ACLoadBalanceTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 3, 0, 4)).setObjects(("HH3C-DOT11-ACMT-MIB", "hh3cDot11LoadBalanceType"), ("HH3C-DOT11-ACMT-MIB", "hh3cDot11LoadBalanceThreshold"))
if mibBuilder.loadTexts: hh3cDot11ACLoadBalanceTrap.setStatus('current')
hh3cDot11ACStaFullTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 3, 0, 5)).setObjects(("HH3C-DOT11-ACMT-MIB", "hh3cDot11ACMaxStaNum"))
if mibBuilder.loadTexts: hh3cDot11ACStaFullTrap.setStatus('current')
hh3cDot11ACMtTrapVarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 3, 1))
hh3cDot11ACMtTrapTunlDwnInfo = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("tunnelTimeout", 1), ("keyUpdateFailure", 2), ("apReset", 3), ("apCrash", 4), ("apDeleted", 5), ("apCfgChange", 6)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11ACMtTrapTunlDwnInfo.setStatus('current')
hh3cDot11ACMtTrapTunlUpInfo = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("up", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11ACMtTrapTunlUpInfo.setStatus('current')
hh3cDot11ACMtTrapBackupSwitchInfo = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("masterToSlave", 1), ("slaveToMaster", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11ACMtTrapBackupSwitchInfo.setStatus('current')
hh3cDot11ACMtTrapTnlAPName = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 3, 1, 4), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11ACMtTrapTnlAPName.setStatus('current')
hh3cDot11ACMtTrapTnlAPIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 3, 1, 5), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11ACMtTrapTnlAPIPAddr.setStatus('current')
hh3cDot11LoadBalanceType = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("traffic", 1), ("session", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11LoadBalanceType.setStatus('current')
hh3cDot11LoadBalanceThreshold = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 3, 1, 7), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11LoadBalanceThreshold.setStatus('current')
hh3cDot11ACMtTrapAPIPv6Addr = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 3, 1, 8), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11ACMtTrapAPIPv6Addr.setStatus('current')
hh3cDot11ACMtTrapTunlDwnCount = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 3, 1, 9), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11ACMtTrapTunlDwnCount.setStatus('current')
hh3cDot11ACMaxStaNum = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 75, 1, 3, 1, 10), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cDot11ACMaxStaNum.setStatus('current')
mibBuilder.exportSymbols("HH3C-DOT11-ACMT-MIB", hh3cDot11DataTunnelCurrSec=hh3cDot11DataTunnelCurrSec, hh3cDot11CAPWAPTunnelGroup=hh3cDot11CAPWAPTunnelGroup, hh3cDot11ACBASInfo=hh3cDot11ACBASInfo, hh3cDot11ACBASIfDescr=hh3cDot11ACBASIfDescr, hh3cDot11SlaveAPCount=hh3cDot11SlaveAPCount, hh3cDot11CAPWAPTunnelTable=hh3cDot11CAPWAPTunnelTable, hh3cDot11StationConnectCount=hh3cDot11StationConnectCount, hh3cDot11ACStaFullTrap=hh3cDot11ACStaFullTrap, hh3cDot11LoadBalanceThreshold=hh3cDot11LoadBalanceThreshold, hh3cDot11ACStaUserAuthFailCnt=hh3cDot11ACStaUserAuthFailCnt, hh3cDot11ACLoadInfo=hh3cDot11ACLoadInfo, hh3cDot11ACStaUserConnFailCnt=hh3cDot11ACStaUserConnFailCnt, hh3cDot11ACMtTrapTnlAPIPAddr=hh3cDot11ACMtTrapTnlAPIPAddr, hh3cDot11ACIfName=hh3cDot11ACIfName, hh3cDot11CtrlTunnelCurrSec=hh3cDot11CtrlTunnelCurrSec, hh3cDot11ACBASIfIndex=hh3cDot11ACBASIfIndex, hh3cDot11ConnectAutoAPCount=hh3cDot11ConnectAutoAPCount, hh3cDot11ACIFLoadInfoEntry=hh3cDot11ACIFLoadInfoEntry, hh3cDot11CtrlTunnelUpTime=hh3cDot11CtrlTunnelUpTime, PYSNMP_MODULE_ID=hh3cDot11ACMT, hh3cDot11ACStaUserAuthCurNumber=hh3cDot11ACStaUserAuthCurNumber, hh3cDot11AcUploadFrameCnt=hh3cDot11AcUploadFrameCnt, hh3cDot11MasterAPCount=hh3cDot11MasterAPCount, hh3cDot11CurrTunnelAPID=hh3cDot11CurrTunnelAPID, hh3cDot11CtrlTunnelUpTimeTicks=hh3cDot11CtrlTunnelUpTimeTicks, hh3cDot11StationAssocRejectedSum=hh3cDot11StationAssocRejectedSum, hh3cDot11ACMtTrapTunlDwnInfo=hh3cDot11ACMtTrapTunlDwnInfo, hh3cDot11WLANAssocStatisInfo=hh3cDot11WLANAssocStatisInfo, hh3cDot11ACMT=hh3cDot11ACMT, hh3cDot11MaxAPNumPermitted=hh3cDot11MaxAPNumPermitted, hh3cDot11ACIFLoadInfoTable=hh3cDot11ACIFLoadInfoTable, hh3cDot11PersistentAPCount=hh3cDot11PersistentAPCount, hh3cDot11StationReassocSum=hh3cDot11StationReassocSum, hh3cDot11ACBASIfTable=hh3cDot11ACBASIfTable, hh3cDot11ACBASTableObjects=hh3cDot11ACBASTableObjects, hh3cDot11StationCurAssocSum=hh3cDot11StationCurAssocSum, hh3cDot11ACMtTrapBackupSwitchInfo=hh3cDot11ACMtTrapBackupSwitchInfo, hh3cDot11ACStaUserAuthReqCnt=hh3cDot11ACStaUserAuthReqCnt, hh3cDot11ACStaUserSecAuthStatis=hh3cDot11ACStaUserSecAuthStatis, hh3cDot11ACMtTrapVarObjects=hh3cDot11ACMtTrapVarObjects, hh3cDot11AcUploadFrameBytes=hh3cDot11AcUploadFrameBytes, hh3cDot11ACMtTrapTunlDwnCount=hh3cDot11ACMtTrapTunlDwnCount, hh3cDot11ACMaxStaNum=hh3cDot11ACMaxStaNum, hh3cDot11CurrentACMACMode=hh3cDot11CurrentACMACMode, hh3cDot11ACMtTraps=hh3cDot11ACMtTraps, hh3cDot11ACObjectGroup=hh3cDot11ACObjectGroup, hh3cDot11ACStaUserAuthSuccCnt=hh3cDot11ACStaUserAuthSuccCnt, hh3cDot11DataTunnelUpTime=hh3cDot11DataTunnelUpTime, hh3cDot11ACMtTrapTunlUpInfo=hh3cDot11ACMtTrapTunlUpInfo, hh3cDot11ACObject=hh3cDot11ACObject, hh3cDot11MaxStationNumPermitted=hh3cDot11MaxStationNumPermitted, hh3cDot11CAPWAPTunnelEntry=hh3cDot11CAPWAPTunnelEntry, hh3cDot11StationExDeAuthenSum=hh3cDot11StationExDeAuthenSum, hh3cDot11ACIfStaNum=hh3cDot11ACIfStaNum, hh3cDot11ACMtTrapTnlAPName=hh3cDot11ACMtTrapTnlAPName, hh3cDot11StationAssocSum=hh3cDot11StationAssocSum, hh3cDot11ACMtTunnelDownTrap=hh3cDot11ACMtTunnelDownTrap, hh3cDot11ACIfApNum=hh3cDot11ACIfApNum, hh3cDot11ACMtTunnelSetupTrap=hh3cDot11ACMtTunnelSetupTrap, hh3cDot11ACBASSysObjects=hh3cDot11ACBASSysObjects, hh3cDot11ACMtTrapAPIPv6Addr=hh3cDot11ACMtTrapAPIPv6Addr, hh3cDot11APConnectCount=hh3cDot11APConnectCount, hh3cDot11ACMtBackupSwtTrap=hh3cDot11ACMtBackupSwtTrap, hh3cDot11ACLoadBalanceTrap=hh3cDot11ACLoadBalanceTrap, hh3cDot11AcDownloadFrameBytes=hh3cDot11AcDownloadFrameBytes, hh3cDot11AcDownloadFrameCnt=hh3cDot11AcDownloadFrameCnt, hh3cDot11ACBASIfEntry=hh3cDot11ACBASIfEntry, hh3cDot11ACMtNotifyGroup=hh3cDot11ACMtNotifyGroup, hh3cDot11StationAssocFailSum=hh3cDot11StationAssocFailSum, hh3cDot11ACBASIfType=hh3cDot11ACBASIfType, hh3cDot11LoadBalanceType=hh3cDot11LoadBalanceType, hh3cDot11ACIfIndex=hh3cDot11ACIfIndex)
