#
# PySNMP MIB module PERIBIT-COMMON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PERIBIT-COMMON-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:31:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
pnCommonMib, pnModules = mibBuilder.importSymbols("PERIBIT-GLOBAL-REG", "pnCommonMib", "pnModules")
TcChassisType, = mibBuilder.importSymbols("PERIBIT-GLOBAL-TC", "TcChassisType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, Integer32, NotificationType, ModuleIdentity, iso, ObjectIdentity, Counter32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Gauge32, Bits, TimeTicks, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Integer32", "NotificationType", "ModuleIdentity", "iso", "ObjectIdentity", "Counter32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Gauge32", "Bits", "TimeTicks", "MibIdentifier")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
pnCommonMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 1, 3))
pnCommonMibModule.setRevisions(('2003-09-30 08:45', '2003-04-01 00:00', '2003-03-10 00:00', '2002-06-03 00:00', '2002-03-27 00:00', '2002-02-22 00:00', '2002-01-23 00:00', '2002-01-17 00:00', '2001-08-07 00:00',))
if mibBuilder.loadTexts: pnCommonMibModule.setLastUpdated('200206030000Z')
if mibBuilder.loadTexts: pnCommonMibModule.setOrganization('Peribit Networks, Inc')
pnCommonConfMib = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 1, 1))
if mibBuilder.loadTexts: pnCommonConfMib.setStatus('current')
pnCommonObjs = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 1, 2))
if mibBuilder.loadTexts: pnCommonObjs.setStatus('current')
pnCommonEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3))
if mibBuilder.loadTexts: pnCommonEvents.setStatus('current')
pnSys = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 1, 2, 1))
if mibBuilder.loadTexts: pnSys.setStatus('current')
pnChassis = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 1, 2, 2))
if mibBuilder.loadTexts: pnChassis.setStatus('current')
pnSysSwVersion = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnSysSwVersion.setStatus('current')
pnSysHwVersion = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnSysHwVersion.setStatus('current')
pnSysSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnSysSerialNumber.setStatus('current')
pnSysTimeZoneOffset = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnSysTimeZoneOffset.setStatus('current')
pnSysDaylightSaving = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 1, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnSysDaylightSaving.setStatus('current')
pnChassisType = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 1, 2, 2, 1), TcChassisType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pnChassisType.setStatus('current')
pnCommonEventObjs = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 1))
if mibBuilder.loadTexts: pnCommonEventObjs.setStatus('current')
pnCommonEventEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2))
if mibBuilder.loadTexts: pnCommonEventEvents.setStatus('current')
pnCommonEventEventsV2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2, 0))
if mibBuilder.loadTexts: pnCommonEventEventsV2.setStatus('current')
pnCommonEventDescr = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 1, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: pnCommonEventDescr.setStatus('current')
pnCommonEventInFailSafeMode = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2, 0, 1))
if mibBuilder.loadTexts: pnCommonEventInFailSafeMode.setStatus('current')
pnCommonEventPowerSupplyFailure = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2, 0, 2))
if mibBuilder.loadTexts: pnCommonEventPowerSupplyFailure.setStatus('current')
pnCommonEventPowerSupplyOk = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2, 0, 3))
if mibBuilder.loadTexts: pnCommonEventPowerSupplyOk.setStatus('current')
pnCommonEventLicenseExpired = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2, 0, 4)).setObjects(("PERIBIT-COMMON-MIB", "pnCommonEventDescr"))
if mibBuilder.loadTexts: pnCommonEventLicenseExpired.setStatus('current')
pnCommonEventThruputLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2, 0, 5)).setObjects(("PERIBIT-COMMON-MIB", "pnCommonEventDescr"))
if mibBuilder.loadTexts: pnCommonEventThruputLimitExceeded.setStatus('current')
pnCommonEventLicenseWillExpire = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2, 0, 6)).setObjects(("PERIBIT-COMMON-MIB", "pnCommonEventDescr"))
if mibBuilder.loadTexts: pnCommonEventLicenseWillExpire.setStatus('current')
pnCommonEventLoginFailure = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2, 0, 7)).setObjects(("PERIBIT-COMMON-MIB", "pnCommonEventDescr"))
if mibBuilder.loadTexts: pnCommonEventLoginFailure.setStatus('current')
pnCommonEventFaultTolerantPassThrough = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2, 0, 8)).setObjects(("PERIBIT-COMMON-MIB", "pnCommonEventDescr"))
if mibBuilder.loadTexts: pnCommonEventFaultTolerantPassThrough.setStatus('current')
pnCommonEventFanFailure = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2, 0, 9)).setObjects(("PERIBIT-COMMON-MIB", "pnCommonEventDescr"))
if mibBuilder.loadTexts: pnCommonEventFanFailure.setStatus('current')
pnCommonEventFanSpeedVariation = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2, 0, 10)).setObjects(("PERIBIT-COMMON-MIB", "pnCommonEventDescr"))
if mibBuilder.loadTexts: pnCommonEventFanSpeedVariation.setStatus('current')
pnCommonEventFanOk = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2, 0, 11)).setObjects(("PERIBIT-COMMON-MIB", "pnCommonEventDescr"))
if mibBuilder.loadTexts: pnCommonEventFanOk.setStatus('current')
pnCommonEventInterfaceSpeedMismatch = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2, 0, 12)).setObjects(("PERIBIT-COMMON-MIB", "pnCommonEventDescr"))
if mibBuilder.loadTexts: pnCommonEventInterfaceSpeedMismatch.setStatus('current')
pnCommonEventInterfaceSpeedOk = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2, 0, 13)).setObjects(("PERIBIT-COMMON-MIB", "pnCommonEventDescr"))
if mibBuilder.loadTexts: pnCommonEventInterfaceSpeedOk.setStatus('current')
pnCommonEventInterfaceDuplexMismatch = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2, 0, 14)).setObjects(("PERIBIT-COMMON-MIB", "pnCommonEventDescr"))
if mibBuilder.loadTexts: pnCommonEventInterfaceDuplexMismatch.setStatus('current')
pnCommonEventIpsecSecurityAssociationAdded = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2, 0, 15)).setObjects(("PERIBIT-COMMON-MIB", "pnCommonEventDescr"))
if mibBuilder.loadTexts: pnCommonEventIpsecSecurityAssociationAdded.setStatus('current')
pnCommonEventIpsecSecurityAssociationExpired = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2, 0, 16)).setObjects(("PERIBIT-COMMON-MIB", "pnCommonEventDescr"))
if mibBuilder.loadTexts: pnCommonEventIpsecSecurityAssociationExpired.setStatus('current')
pnCommonEventIpsecSecurityAssociationDeleted = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 1, 3, 2, 0, 17)).setObjects(("PERIBIT-COMMON-MIB", "pnCommonEventDescr"))
if mibBuilder.loadTexts: pnCommonEventIpsecSecurityAssociationDeleted.setStatus('current')
mibBuilder.exportSymbols("PERIBIT-COMMON-MIB", pnCommonEventObjs=pnCommonEventObjs, pnCommonEventPowerSupplyOk=pnCommonEventPowerSupplyOk, pnSysSwVersion=pnSysSwVersion, pnCommonEventFanFailure=pnCommonEventFanFailure, pnCommonEventIpsecSecurityAssociationAdded=pnCommonEventIpsecSecurityAssociationAdded, pnSys=pnSys, pnCommonEventInterfaceDuplexMismatch=pnCommonEventInterfaceDuplexMismatch, pnCommonEventLicenseWillExpire=pnCommonEventLicenseWillExpire, pnCommonEvents=pnCommonEvents, pnCommonEventInterfaceSpeedMismatch=pnCommonEventInterfaceSpeedMismatch, pnCommonEventInterfaceSpeedOk=pnCommonEventInterfaceSpeedOk, pnChassisType=pnChassisType, pnCommonEventLoginFailure=pnCommonEventLoginFailure, pnCommonEventInFailSafeMode=pnCommonEventInFailSafeMode, pnCommonEventIpsecSecurityAssociationDeleted=pnCommonEventIpsecSecurityAssociationDeleted, pnCommonMibModule=pnCommonMibModule, pnCommonEventEvents=pnCommonEventEvents, pnCommonEventThruputLimitExceeded=pnCommonEventThruputLimitExceeded, pnSysSerialNumber=pnSysSerialNumber, pnCommonEventLicenseExpired=pnCommonEventLicenseExpired, pnSysDaylightSaving=pnSysDaylightSaving, pnCommonEventFanSpeedVariation=pnCommonEventFanSpeedVariation, pnSysTimeZoneOffset=pnSysTimeZoneOffset, pnCommonEventFaultTolerantPassThrough=pnCommonEventFaultTolerantPassThrough, pnCommonEventEventsV2=pnCommonEventEventsV2, pnCommonEventIpsecSecurityAssociationExpired=pnCommonEventIpsecSecurityAssociationExpired, pnCommonObjs=pnCommonObjs, pnChassis=pnChassis, pnCommonEventDescr=pnCommonEventDescr, pnCommonEventFanOk=pnCommonEventFanOk, pnSysHwVersion=pnSysHwVersion, PYSNMP_MODULE_ID=pnCommonMibModule, pnCommonEventPowerSupplyFailure=pnCommonEventPowerSupplyFailure, pnCommonConfMib=pnCommonConfMib)
