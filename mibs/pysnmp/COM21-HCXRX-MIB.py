#
# PySNMP MIB module COM21-HCXRX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/COM21-HCXRX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:10:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
com21, com21Hcx, com21Traps = mibBuilder.importSymbols("COM21-HCX-MIB", "com21", "com21Hcx", "com21Traps")
hcxEventLogTime, hcxAlmSeverity = mibBuilder.importSymbols("COM21-HCXALM-MIB", "hcxEventLogTime", "hcxAlmSeverity")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, IpAddress, TimeTicks, Unsigned32, Integer32, iso, NotificationType, ObjectIdentity, MibIdentifier, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Counter32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "IpAddress", "TimeTicks", "Unsigned32", "Integer32", "iso", "NotificationType", "ObjectIdentity", "MibIdentifier", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Counter32", "Gauge32")
TextualConvention, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress")
com21HcxRx = ModuleIdentity((1, 3, 6, 1, 4, 1, 1141, 2, 30))
if mibBuilder.loadTexts: com21HcxRx.setLastUpdated('9701080000Z')
if mibBuilder.loadTexts: com21HcxRx.setOrganization('Com21, Inc.')
com21HcxUpstrmPortGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 2, 31))
com21HcxUpstrmStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 2, 32))
com21HcxUpstrmUnitGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 2, 33))
com21HcxVciStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 2, 34))
com21HcxRpmIPortGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 2, 35))
com21HcxRpmStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 2, 36))
com21HcxRfAnalysisGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1141, 2, 37))
class UpstrmFreqKhz(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(5000, 40000)

class PrimServiceState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("is", 1), ("oos", 2))

class RfAnalysisdBmv(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(-58, -5)

com21HcxUpstrmUnitTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 2, 33, 1), )
if mibBuilder.loadTexts: com21HcxUpstrmUnitTable.setStatus('current')
com21HcxUpstrmUnitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 2, 33, 1, 1), ).setIndexNames((0, "COM21-HCXRX-MIB", "hcxUpstreamShelfId"), (0, "COM21-HCXRX-MIB", "hcxUpstreamSlotId"))
if mibBuilder.loadTexts: com21HcxUpstrmUnitEntry.setStatus('current')
hcxUpstreamShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 33, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpstreamShelfId.setStatus('current')
hcxUpstreamSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 33, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpstreamSlotId.setStatus('current')
hcxUpstreamHardwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 33, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpstreamHardwareVersion.setStatus('current')
hcxUpstreamBootVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 33, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpstreamBootVersion.setStatus('current')
hcxUpstreamUnitPrimServState = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 33, 1, 1, 5), PrimServiceState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpstreamUnitPrimServState.setStatus('current')
hcxUpstreamUnitPrimStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 30)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxUpstreamShelfId"), ("COM21-HCXRX-MIB", "hcxUpstreamSlotId"), ("COM21-HCXRX-MIB", "hcxUpstreamUnitPrimServState"))
if mibBuilder.loadTexts: hcxUpstreamUnitPrimStateChange.setStatus('current')
hcxUpstreamUnitSecServState = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 33, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpstreamUnitSecServState.setStatus('current')
hcxUpstreamUnitSecStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 31)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxUpstreamShelfId"), ("COM21-HCXRX-MIB", "hcxUpstreamSlotId"), ("COM21-HCXRX-MIB", "hcxUpstreamUnitSecServState"))
if mibBuilder.loadTexts: hcxUpstreamUnitSecStateChange.setStatus('current')
hcxUpstreamUnitConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 33, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2000, 2001, 2002))).clone(namedValues=NamedValues(("offline", 2000), ("online", 2001), ("test", 2002)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxUpstreamUnitConfigState.setStatus('current')
hcxUpstreamUnitRestartAction = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 33, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("restart", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxUpstreamUnitRestartAction.setStatus('current')
hcxUpstreamGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 33, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxUpstreamGroupId.setStatus('current')
hcxAcquisitionEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 33, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxAcquisitionEnable.setStatus('current')
hcxUpDiagTestAction = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 33, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("execute", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxUpDiagTestAction.setStatus('current')
hcxUpDiagTestComplete = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 32)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxUpstreamShelfId"), ("COM21-HCXRX-MIB", "hcxUpstreamSlotId"), ("COM21-HCXRX-MIB", "hcxUpDiagTestResult"))
if mibBuilder.loadTexts: hcxUpDiagTestComplete.setStatus('current')
hcxUpDiagTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 33, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inprogress", 1), ("success", 2), ("failure", 3), ("invalidState", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpDiagTestResult.setStatus('current')
hcxUpTestStatusLed = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 33, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpTestStatusLed.setStatus('current')
hcxUpTestStatusLedChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 33)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxUpstreamShelfId"), ("COM21-HCXRX-MIB", "hcxUpstreamSlotId"), ("COM21-HCXRX-MIB", "hcxUpTestStatusLed"))
if mibBuilder.loadTexts: hcxUpTestStatusLedChange.setStatus('current')
hcxUpFaultStatusLed = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 33, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpFaultStatusLed.setStatus('current')
hcxUpFaultStatusLedChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 34)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxUpstreamShelfId"), ("COM21-HCXRX-MIB", "hcxUpstreamSlotId"), ("COM21-HCXRX-MIB", "hcxUpFaultStatusLed"))
if mibBuilder.loadTexts: hcxUpFaultStatusLedChange.setStatus('current')
hcxUpOperationFailure = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 35)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxUpstreamShelfId"), ("COM21-HCXRX-MIB", "hcxUpstreamSlotId"))
if mibBuilder.loadTexts: hcxUpOperationFailure.setStatus('current')
hcxUpstreamSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 33, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpstreamSerialNumber.setStatus('current')
com21HcxUpstrmPortTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1), )
if mibBuilder.loadTexts: com21HcxUpstrmPortTable.setStatus('current')
com21HcxUpstrmPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1, 1), ).setIndexNames((0, "COM21-HCXRX-MIB", "hcxUpstrmPortShelfId"), (0, "COM21-HCXRX-MIB", "hcxUpstrmPortSlotId"), (0, "COM21-HCXRX-MIB", "hcxUpstreamPortId"))
if mibBuilder.loadTexts: com21HcxUpstrmPortEntry.setStatus('current')
hcxUpstrmPortShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpstrmPortShelfId.setStatus('current')
hcxUpstrmPortSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpstrmPortSlotId.setStatus('current')
hcxUpstreamPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpstreamPortId.setStatus('current')
hcxRecvFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1, 1, 4), UpstrmFreqKhz()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxRecvFrequency.setStatus('current')
hcxRecvPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-15, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxRecvPower.setStatus('current')
hcxUpstrmAggrStuCbrRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpstrmAggrStuCbrRate.setStatus('current')
hcxUpstrmAggrStuMinRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpstrmAggrStuMinRate.setStatus('current')
hcxUpstrmAggrStuMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpstrmAggrStuMaxRate.setStatus('current')
hcxRxFreqHop = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 82)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxUpstrmPortShelfId"), ("COM21-HCXRX-MIB", "hcxUpstrmPortSlotId"), ("COM21-HCXRX-MIB", "hcxUpstreamPortId"), ("COM21-HCXRX-MIB", "hcxUpstrmActiveFreq"))
if mibBuilder.loadTexts: hcxRxFreqHop.setStatus('current')
hcxUpstrmFreqHopping = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxUpstrmFreqHopping.setStatus('current')
hcxUpstrmAltFreqA = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 40000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxUpstrmAltFreqA.setStatus('current')
hcxUpstrmAltFreqB = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 40000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxUpstrmAltFreqB.setStatus('current')
hcxUpstrmActiveFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1, 1, 12), UpstrmFreqKhz()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpstrmActiveFreq.setStatus('current')
hcxUpstrmRpmControl = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("enable4Port", 2), ("enable8Port", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxUpstrmRpmControl.setStatus('current')
hcxRpmInvalidPhyConfig = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 87)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxUpstrmPortShelfId"), ("COM21-HCXRX-MIB", "hcxUpstrmPortSlotId"), ("COM21-HCXRX-MIB", "hcxUpstreamPortId"))
if mibBuilder.loadTexts: hcxRpmInvalidPhyConfig.setStatus('current')
hcxRpmInvalidConfClear = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 88)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxUpstrmPortShelfId"), ("COM21-HCXRX-MIB", "hcxUpstrmPortSlotId"), ("COM21-HCXRX-MIB", "hcxUpstreamPortId"))
if mibBuilder.loadTexts: hcxRpmInvalidConfClear.setStatus('current')
hcxRpmTimingFault = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 89)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxUpstrmPortShelfId"), ("COM21-HCXRX-MIB", "hcxUpstrmPortSlotId"), ("COM21-HCXRX-MIB", "hcxUpstreamPortId"))
if mibBuilder.loadTexts: hcxRpmTimingFault.setStatus('current')
hcxRpmTimingFaultClear = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 130)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxUpstrmPortShelfId"), ("COM21-HCXRX-MIB", "hcxUpstrmPortSlotId"), ("COM21-HCXRX-MIB", "hcxUpstreamPortId"))
if mibBuilder.loadTexts: hcxRpmTimingFaultClear.setStatus('current')
hcxRpmLinkError = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 131)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxUpstrmPortShelfId"), ("COM21-HCXRX-MIB", "hcxUpstrmPortSlotId"), ("COM21-HCXRX-MIB", "hcxUpstreamPortId"))
if mibBuilder.loadTexts: hcxRpmLinkError.setStatus('current')
hcxRpmLinkErrClear = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 132)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxUpstrmPortShelfId"), ("COM21-HCXRX-MIB", "hcxUpstrmPortSlotId"), ("COM21-HCXRX-MIB", "hcxUpstreamPortId"))
if mibBuilder.loadTexts: hcxRpmLinkErrClear.setStatus('current')
hcxUpstrmRpmPrimServState = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1, 1, 14), PrimServiceState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpstrmRpmPrimServState.setStatus('current')
hcxUpstrmRpmPrimStateChange = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 133)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxUpstrmPortShelfId"), ("COM21-HCXRX-MIB", "hcxUpstrmPortSlotId"), ("COM21-HCXRX-MIB", "hcxUpstreamPortId"), ("COM21-HCXRX-MIB", "hcxUpstrmRpmPrimServState"))
if mibBuilder.loadTexts: hcxUpstrmRpmPrimStateChange.setStatus('current')
hcxUpstrmRpmSecServState = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpstrmRpmSecServState.setStatus('current')
hcxUpstrmRpmConnType = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unconnected", 1), ("master", 2), ("slave", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpstrmRpmConnType.setStatus('current')
hcxUpstrmAggrStuVoiceRate = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 31, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxUpstrmAggrStuVoiceRate.setStatus('current')
com21HcxUpstrmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1), )
if mibBuilder.loadTexts: com21HcxUpstrmStatsTable.setStatus('current')
com21HcxUpstrmStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1), ).setIndexNames((0, "COM21-HCXRX-MIB", "hcxStatsUpstreamShelfId"), (0, "COM21-HCXRX-MIB", "hcxStatsUpstreamSlotId"), (0, "COM21-HCXRX-MIB", "hcxStatsUpstreamPortId"))
if mibBuilder.loadTexts: com21HcxUpstrmStatsEntry.setStatus('current')
hcxStatsUpstreamShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsUpstreamShelfId.setStatus('current')
hcxStatsUpstreamSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsUpstreamSlotId.setStatus('current')
hcxStatsUpstreamPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsUpstreamPortId.setStatus('current')
hcxPortCurrMinRxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortCurrMinRxCells.setStatus('current')
hcxPortCurrMinRxNullCells = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortCurrMinRxNullCells.setStatus('current')
hcxPortCurrMinUncorrFecHecCells = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortCurrMinUncorrFecHecCells.setStatus('current')
hcxPortCurrMinCorrectedFec = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortCurrMinCorrectedFec.setStatus('current')
hcxPortCurrMinOverSubPeriods = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortCurrMinOverSubPeriods.setStatus('current')
hcxPortPrevMinRxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortPrevMinRxCells.setStatus('current')
hcxPortPrevMinRxNullCells = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortPrevMinRxNullCells.setStatus('current')
hcxPortPrevMinUncorrFecHecCells = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortPrevMinUncorrFecHecCells.setStatus('current')
hcxPortPrevMinCorrectedFec = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortPrevMinCorrectedFec.setStatus('current')
hcxPortPrevMinOverSubPeriods = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortPrevMinOverSubPeriods.setStatus('current')
hcxPortUpstreamUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortUpstreamUtil.setStatus('current')
hcxPortCurrMeanNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortCurrMeanNoise.setStatus('current')
hcxPortPrevMeanNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortPrevMeanNoise.setStatus('current')
hcxPortCorrFecRatioThres = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxPortCorrFecRatioThres.setStatus('current')
hcxCorrFecRatioThres = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 80)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxStatsUpstreamShelfId"), ("COM21-HCXRX-MIB", "hcxStatsUpstreamSlotId"), ("COM21-HCXRX-MIB", "hcxStatsUpstreamPortId"), ("COM21-HCXRX-MIB", "hcxPortCorrFecRatioThres"))
if mibBuilder.loadTexts: hcxCorrFecRatioThres.setStatus('current')
hcxPortCellErrRatioThres = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxPortCellErrRatioThres.setStatus('current')
hcxCellErrRatioThres = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 81)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxStatsUpstreamShelfId"), ("COM21-HCXRX-MIB", "hcxStatsUpstreamSlotId"), ("COM21-HCXRX-MIB", "hcxStatsUpstreamPortId"), ("COM21-HCXRX-MIB", "hcxPortCellErrRatioThres"))
if mibBuilder.loadTexts: hcxCellErrRatioThres.setStatus('current')
hcxPortRatioThresPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxPortRatioThresPeriod.setStatus('current')
hcxPortMinErrRatioCells = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 2500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxPortMinErrRatioCells.setStatus('current')
hcxPortCnrThres = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(7, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxPortCnrThres.setStatus('current')
hcxCnrThres = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 83)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxStatsUpstreamShelfId"), ("COM21-HCXRX-MIB", "hcxStatsUpstreamSlotId"), ("COM21-HCXRX-MIB", "hcxStatsUpstreamPortId"), ("COM21-HCXRX-MIB", "hcxPortCnrThres"))
if mibBuilder.loadTexts: hcxCnrThres.setStatus('current')
hcxPortCurrMinNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortCurrMinNoise.setStatus('current')
hcxPortCurrMaxNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortCurrMaxNoise.setStatus('current')
hcxPortPrevMinNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortPrevMinNoise.setStatus('current')
hcxPortPrevMaxNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortPrevMaxNoise.setStatus('current')
hcxPortRealTimeMeanNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortRealTimeMeanNoise.setStatus('current')
hcxPortRealTimeMinNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortRealTimeMinNoise.setStatus('current')
hcxPortRealTimeMaxNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxPortRealTimeMaxNoise.setStatus('current')
hcxPortClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 32, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxPortClearStats.setStatus('current')
com21HcxVciStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 2, 34, 1), )
if mibBuilder.loadTexts: com21HcxVciStatsTable.setStatus('current')
com21HcxVciStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 2, 34, 1, 1), ).setIndexNames((0, "COM21-HCXRX-MIB", "hcxStuStatsMacAddr"))
if mibBuilder.loadTexts: com21HcxVciStatsEntry.setStatus('current')
hcxStuStatsMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 34, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStuStatsMacAddr.setStatus('current')
hcxStatsCurrMinRxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 34, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsCurrMinRxCells.setStatus('current')
hcxStatsCurrMinRxNullCells = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 34, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsCurrMinRxNullCells.setStatus('current')
hcxStatsCurrMinUncorFecHec = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 34, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsCurrMinUncorFecHec.setStatus('current')
hcxStatsCurrMinUncorFecThres = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 34, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxStatsCurrMinUncorFecThres.setStatus('current')
hcxUncorFecHecMinThres = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 37)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxStuStatsMacAddr"), ("COM21-HCXRX-MIB", "hcxStatsCurrMinUncorFecThres"), ("COM21-HCXRX-MIB", "hcxStatsCurrMinUncorFecHec"))
if mibBuilder.loadTexts: hcxUncorFecHecMinThres.setStatus('current')
hcxStatsCurrMinCorrectedFec = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 34, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsCurrMinCorrectedFec.setStatus('current')
hcxStatsCurrMinCorFecThres = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 34, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxStatsCurrMinCorFecThres.setStatus('current')
hcxCorrectedFecMinThres = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 38)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxStuStatsMacAddr"), ("COM21-HCXRX-MIB", "hcxStatsCurrMinCorFecThres"), ("COM21-HCXRX-MIB", "hcxStatsCurrMinCorrectedFec"))
if mibBuilder.loadTexts: hcxCorrectedFecMinThres.setStatus('current')
hcxStatsPrevMinRxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 34, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsPrevMinRxCells.setStatus('current')
hcxStatsPrevMinRxNullCells = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 34, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsPrevMinRxNullCells.setStatus('current')
hcxStatsPrevMinUncorFecHec = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 34, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsPrevMinUncorFecHec.setStatus('current')
hcxStatsPrevMinCorrectedFec = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 34, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsPrevMinCorrectedFec.setStatus('current')
hcxStatsCurrMinMeanSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 34, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsCurrMinMeanSignal.setStatus('current')
hcxStatsPrevMinMeanSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 34, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsPrevMinMeanSignal.setStatus('current')
hcxStatsClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 34, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxStatsClearStats.setStatus('current')
com21HcxRpmIPortTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 2, 35, 1), )
if mibBuilder.loadTexts: com21HcxRpmIPortTable.setStatus('current')
com21HcxRpmIPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 2, 35, 1, 1), ).setIndexNames((0, "COM21-HCXRX-MIB", "hcxRpmIPortShelfId"), (0, "COM21-HCXRX-MIB", "hcxRpmIPortSlotId"), (0, "COM21-HCXRX-MIB", "hcxRpmRxPortId"), (0, "COM21-HCXRX-MIB", "hcxRpmIPortId"))
if mibBuilder.loadTexts: com21HcxRpmIPortEntry.setStatus('current')
hcxRpmIPortShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 35, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmIPortShelfId.setStatus('current')
hcxRpmIPortSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 35, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmIPortSlotId.setStatus('current')
hcxRpmRxPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 35, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmRxPortId.setStatus('current')
hcxRpmIPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 35, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmIPortId.setStatus('current')
hcxRpmIPortRecvPower = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 35, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-15, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxRpmIPortRecvPower.setStatus('current')
hcxRpmIPortConfigState = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 35, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxRpmIPortConfigState.setStatus('current')
hcxRpmIPortContSchedType = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 35, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("roundRobinOperation", 1), ("simultaneousOperation", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxRpmIPortContSchedType.setStatus('current')
com21HcxRpmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1), )
if mibBuilder.loadTexts: com21HcxRpmStatsTable.setStatus('current')
com21HcxRpmStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1), ).setIndexNames((0, "COM21-HCXRX-MIB", "hcxStatsRpmShelfId"), (0, "COM21-HCXRX-MIB", "hcxStatsRpmSlotId"), (0, "COM21-HCXRX-MIB", "hcxStatsRxPortId"), (0, "COM21-HCXRX-MIB", "hcxStatsRpmIPortId"))
if mibBuilder.loadTexts: com21HcxRpmStatsEntry.setStatus('current')
hcxStatsRpmShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsRpmShelfId.setStatus('current')
hcxStatsRpmSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsRpmSlotId.setStatus('current')
hcxStatsRxPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsRxPortId.setStatus('current')
hcxStatsRpmIPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxStatsRpmIPortId.setStatus('current')
hcxRpmCurrMinRxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmCurrMinRxCells.setStatus('current')
hcxRpmCurrMinRxNullCells = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmCurrMinRxNullCells.setStatus('current')
hcxRpmCurrMinUncorFecHecCells = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmCurrMinUncorFecHecCells.setStatus('current')
hcxRpmCurrMinCorrectedFec = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmCurrMinCorrectedFec.setStatus('current')
hcxRpmCurrMeanNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmCurrMeanNoise.setStatus('current')
hcxRpmCurrMinNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmCurrMinNoise.setStatus('current')
hcxRpmCurrMaxNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmCurrMaxNoise.setStatus('current')
hcxRpmRealTimeMeanNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmRealTimeMeanNoise.setStatus('current')
hcxRpmRealTimeMinNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmRealTimeMinNoise.setStatus('current')
hcxRpmRealTimeMaxNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmRealTimeMaxNoise.setStatus('current')
hcxRpmPrevMinRxCells = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmPrevMinRxCells.setStatus('current')
hcxRpmPrevMinRxNullCells = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmPrevMinRxNullCells.setStatus('current')
hcxRpmPrevMinUncorFecHecCells = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmPrevMinUncorFecHecCells.setStatus('current')
hcxRpmPrevMinCorrectedFec = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmPrevMinCorrectedFec.setStatus('current')
hcxRpmPrevMeanNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmPrevMeanNoise.setStatus('current')
hcxRpmPrevMinNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmPrevMinNoise.setStatus('current')
hcxRpmPrevMaxNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRpmPrevMaxNoise.setStatus('current')
hcxRpmCorrFecRatioThres = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxRpmCorrFecRatioThres.setStatus('current')
hcxRpmFecRatioThres = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 84)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxStatsRpmShelfId"), ("COM21-HCXRX-MIB", "hcxStatsRpmSlotId"), ("COM21-HCXRX-MIB", "hcxStatsRxPortId"), ("COM21-HCXRX-MIB", "hcxStatsRpmIPortId"), ("COM21-HCXRX-MIB", "hcxRpmCorrFecRatioThres"))
if mibBuilder.loadTexts: hcxRpmFecRatioThres.setStatus('current')
hcxRpmCellErrRatioThres = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxRpmCellErrRatioThres.setStatus('current')
hcxRpmCellErrRatioThresTrap = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 85)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxStatsRpmShelfId"), ("COM21-HCXRX-MIB", "hcxStatsRpmSlotId"), ("COM21-HCXRX-MIB", "hcxStatsRxPortId"), ("COM21-HCXRX-MIB", "hcxStatsRpmIPortId"), ("COM21-HCXRX-MIB", "hcxRpmCellErrRatioThres"))
if mibBuilder.loadTexts: hcxRpmCellErrRatioThresTrap.setStatus('current')
hcxRpmRatioThresPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxRpmRatioThresPeriod.setStatus('current')
hcxRpmMinErrRatioCells = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 2500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxRpmMinErrRatioCells.setStatus('current')
hcxRpmCnrThres = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(7, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxRpmCnrThres.setStatus('current')
hcxRpmCnrThresTrap = NotificationType((1, 3, 6, 1, 4, 1, 1141, 4, 86)).setObjects(("COM21-HCXALM-MIB", "hcxAlmSeverity"), ("COM21-HCXALM-MIB", "hcxEventLogTime"), ("COM21-HCXRX-MIB", "hcxStatsRpmShelfId"), ("COM21-HCXRX-MIB", "hcxStatsRpmSlotId"), ("COM21-HCXRX-MIB", "hcxStatsRxPortId"), ("COM21-HCXRX-MIB", "hcxStatsRpmIPortId"), ("COM21-HCXRX-MIB", "hcxRpmCnrThres"))
if mibBuilder.loadTexts: hcxRpmCnrThresTrap.setStatus('current')
hcxRpmClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 36, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxRpmClearStats.setStatus('current')
com21HcxRfAnalysisTable = MibTable((1, 3, 6, 1, 4, 1, 1141, 2, 37, 1), )
if mibBuilder.loadTexts: com21HcxRfAnalysisTable.setStatus('current')
com21HcxRfAnalysisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1141, 2, 37, 1, 1), ).setIndexNames((0, "COM21-HCXRX-MIB", "hcxRfAnalysisShelfId"), (0, "COM21-HCXRX-MIB", "hcxRfAnalysisSlotId"), (0, "COM21-HCXRX-MIB", "hcxRfAnalysisPortId"), (0, "COM21-HCXRX-MIB", "hcxRfAnalysisRpmPortId"))
if mibBuilder.loadTexts: com21HcxRfAnalysisEntry.setStatus('current')
hcxRfAnalysisShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 37, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRfAnalysisShelfId.setStatus('current')
hcxRfAnalysisSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 37, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRfAnalysisSlotId.setStatus('current')
hcxRfAnalysisPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 37, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRfAnalysisPortId.setStatus('current')
hcxRfAnalysisRpmPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 37, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRfAnalysisRpmPortId.setStatus('current')
hcxRfAnalysisControl = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 37, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxRfAnalysisControl.setStatus('current')
hcxRfAnalysisPoint1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 37, 1, 1, 6), RfAnalysisdBmv()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxRfAnalysisPoint1.setStatus('current')
hcxRfAnalysisPoint2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 37, 1, 1, 7), RfAnalysisdBmv()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxRfAnalysisPoint2.setStatus('current')
hcxRfAnalysisPoint3 = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 37, 1, 1, 8), RfAnalysisdBmv()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxRfAnalysisPoint3.setStatus('current')
hcxRfAnalysisPoint4 = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 37, 1, 1, 9), RfAnalysisdBmv()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxRfAnalysisPoint4.setStatus('current')
hcxRfAnalysisBin1Count = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 37, 1, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRfAnalysisBin1Count.setStatus('current')
hcxRfAnalysisBin2Count = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 37, 1, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRfAnalysisBin2Count.setStatus('current')
hcxRfAnalysisBin3Count = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 37, 1, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcxRfAnalysisBin3Count.setStatus('current')
hcxRfAnalysisClearCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1141, 2, 37, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nil", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hcxRfAnalysisClearCount.setStatus('current')
mibBuilder.exportSymbols("COM21-HCXRX-MIB", hcxRpmCurrMinUncorFecHecCells=hcxRpmCurrMinUncorFecHecCells, hcxUpstreamSerialNumber=hcxUpstreamSerialNumber, RfAnalysisdBmv=RfAnalysisdBmv, hcxStuStatsMacAddr=hcxStuStatsMacAddr, hcxRxFreqHop=hcxRxFreqHop, hcxRpmCurrMaxNoise=hcxRpmCurrMaxNoise, hcxStatsCurrMinRxNullCells=hcxStatsCurrMinRxNullCells, hcxStatsRxPortId=hcxStatsRxPortId, com21HcxRpmIPortTable=com21HcxRpmIPortTable, hcxPortCurrMaxNoise=hcxPortCurrMaxNoise, hcxUpstreamBootVersion=hcxUpstreamBootVersion, com21HcxUpstrmPortEntry=com21HcxUpstrmPortEntry, hcxPortCellErrRatioThres=hcxPortCellErrRatioThres, hcxRpmLinkError=hcxRpmLinkError, hcxPortRealTimeMeanNoise=hcxPortRealTimeMeanNoise, hcxUpDiagTestResult=hcxUpDiagTestResult, hcxRfAnalysisShelfId=hcxRfAnalysisShelfId, hcxUpDiagTestAction=hcxUpDiagTestAction, hcxUpstreamUnitPrimStateChange=hcxUpstreamUnitPrimStateChange, hcxRfAnalysisPoint2=hcxRfAnalysisPoint2, hcxStatsPrevMinCorrectedFec=hcxStatsPrevMinCorrectedFec, hcxRpmCurrMinCorrectedFec=hcxRpmCurrMinCorrectedFec, hcxRpmInvalidConfClear=hcxRpmInvalidConfClear, hcxStatsRpmIPortId=hcxStatsRpmIPortId, hcxRpmCnrThres=hcxRpmCnrThres, hcxStatsRpmShelfId=hcxStatsRpmShelfId, hcxPortCurrMinCorrectedFec=hcxPortCurrMinCorrectedFec, UpstrmFreqKhz=UpstrmFreqKhz, hcxUpstrmRpmControl=hcxUpstrmRpmControl, hcxUpstrmFreqHopping=hcxUpstrmFreqHopping, hcxRpmFecRatioThres=hcxRpmFecRatioThres, hcxRpmIPortRecvPower=hcxRpmIPortRecvPower, hcxStatsPrevMinUncorFecHec=hcxStatsPrevMinUncorFecHec, hcxUpstreamUnitSecStateChange=hcxUpstreamUnitSecStateChange, hcxRpmMinErrRatioCells=hcxRpmMinErrRatioCells, hcxPortCurrMeanNoise=hcxPortCurrMeanNoise, hcxUpstrmAggrStuMinRate=hcxUpstrmAggrStuMinRate, hcxCnrThres=hcxCnrThres, hcxRfAnalysisBin1Count=hcxRfAnalysisBin1Count, hcxUpTestStatusLed=hcxUpTestStatusLed, hcxUpstreamShelfId=hcxUpstreamShelfId, com21HcxUpstrmPortGroup=com21HcxUpstrmPortGroup, hcxUpstrmAggrStuVoiceRate=hcxUpstrmAggrStuVoiceRate, PYSNMP_MODULE_ID=com21HcxRx, hcxRpmTimingFault=hcxRpmTimingFault, hcxCorrectedFecMinThres=hcxCorrectedFecMinThres, com21HcxRpmIPortGroup=com21HcxRpmIPortGroup, hcxStatsPrevMinMeanSignal=hcxStatsPrevMinMeanSignal, hcxRpmCurrMinRxCells=hcxRpmCurrMinRxCells, hcxRpmPrevMinCorrectedFec=hcxRpmPrevMinCorrectedFec, hcxUpDiagTestComplete=hcxUpDiagTestComplete, hcxStatsClearStats=hcxStatsClearStats, hcxUpstreamUnitRestartAction=hcxUpstreamUnitRestartAction, hcxRpmIPortId=hcxRpmIPortId, hcxStatsPrevMinRxNullCells=hcxStatsPrevMinRxNullCells, hcxRpmCurrMinNoise=hcxRpmCurrMinNoise, hcxPortRealTimeMinNoise=hcxPortRealTimeMinNoise, hcxRpmCurrMinRxNullCells=hcxRpmCurrMinRxNullCells, hcxRpmTimingFaultClear=hcxRpmTimingFaultClear, hcxStatsCurrMinCorFecThres=hcxStatsCurrMinCorFecThres, com21HcxUpstrmUnitGroup=com21HcxUpstrmUnitGroup, com21HcxUpstrmUnitEntry=com21HcxUpstrmUnitEntry, hcxRfAnalysisRpmPortId=hcxRfAnalysisRpmPortId, hcxUpstrmAggrStuCbrRate=hcxUpstrmAggrStuCbrRate, hcxStatsUpstreamSlotId=hcxStatsUpstreamSlotId, PrimServiceState=PrimServiceState, hcxPortCorrFecRatioThres=hcxPortCorrFecRatioThres, hcxRpmInvalidPhyConfig=hcxRpmInvalidPhyConfig, hcxPortCurrMinRxNullCells=hcxPortCurrMinRxNullCells, hcxRpmIPortShelfId=hcxRpmIPortShelfId, hcxUpstrmRpmPrimStateChange=hcxUpstrmRpmPrimStateChange, hcxRpmRealTimeMeanNoise=hcxRpmRealTimeMeanNoise, hcxStatsCurrMinUncorFecThres=hcxStatsCurrMinUncorFecThres, hcxStatsCurrMinCorrectedFec=hcxStatsCurrMinCorrectedFec, hcxRpmCellErrRatioThres=hcxRpmCellErrRatioThres, hcxPortPrevMinRxCells=hcxPortPrevMinRxCells, hcxRpmRealTimeMaxNoise=hcxRpmRealTimeMaxNoise, hcxUpstreamPortId=hcxUpstreamPortId, com21HcxRfAnalysisEntry=com21HcxRfAnalysisEntry, hcxRpmPrevMinRxNullCells=hcxRpmPrevMinRxNullCells, com21HcxRfAnalysisTable=com21HcxRfAnalysisTable, hcxRpmPrevMaxNoise=hcxRpmPrevMaxNoise, com21HcxRfAnalysisGroup=com21HcxRfAnalysisGroup, hcxAcquisitionEnable=hcxAcquisitionEnable, com21HcxUpstrmStatsGroup=com21HcxUpstrmStatsGroup, hcxUpstrmAltFreqB=hcxUpstrmAltFreqB, hcxUpFaultStatusLed=hcxUpFaultStatusLed, hcxRpmCorrFecRatioThres=hcxRpmCorrFecRatioThres, hcxRfAnalysisBin2Count=hcxRfAnalysisBin2Count, hcxRpmRxPortId=hcxRpmRxPortId, hcxPortCurrMinRxCells=hcxPortCurrMinRxCells, hcxPortPrevMinUncorrFecHecCells=hcxPortPrevMinUncorrFecHecCells, hcxPortPrevMaxNoise=hcxPortPrevMaxNoise, com21HcxRpmStatsEntry=com21HcxRpmStatsEntry, com21HcxVciStatsTable=com21HcxVciStatsTable, hcxRpmPrevMinRxCells=hcxRpmPrevMinRxCells, hcxPortUpstreamUtil=hcxPortUpstreamUtil, hcxStatsCurrMinMeanSignal=hcxStatsCurrMinMeanSignal, hcxPortRatioThresPeriod=hcxPortRatioThresPeriod, hcxPortPrevMinNoise=hcxPortPrevMinNoise, hcxPortPrevMeanNoise=hcxPortPrevMeanNoise, hcxUpstreamUnitPrimServState=hcxUpstreamUnitPrimServState, hcxUpstreamHardwareVersion=hcxUpstreamHardwareVersion, hcxRecvFrequency=hcxRecvFrequency, hcxUpOperationFailure=hcxUpOperationFailure, hcxRfAnalysisPoint4=hcxRfAnalysisPoint4, com21HcxUpstrmUnitTable=com21HcxUpstrmUnitTable, hcxRfAnalysisSlotId=hcxRfAnalysisSlotId, hcxRfAnalysisBin3Count=hcxRfAnalysisBin3Count, hcxPortPrevMinRxNullCells=hcxPortPrevMinRxNullCells, hcxRpmCellErrRatioThresTrap=hcxRpmCellErrRatioThresTrap, com21HcxRpmStatsGroup=com21HcxRpmStatsGroup, hcxPortPrevMinOverSubPeriods=hcxPortPrevMinOverSubPeriods, hcxUncorFecHecMinThres=hcxUncorFecHecMinThres, hcxRpmIPortSlotId=hcxRpmIPortSlotId, hcxRfAnalysisPoint3=hcxRfAnalysisPoint3, hcxRpmRealTimeMinNoise=hcxRpmRealTimeMinNoise, hcxRpmCnrThresTrap=hcxRpmCnrThresTrap, hcxUpstrmRpmConnType=hcxUpstrmRpmConnType, hcxRpmPrevMinNoise=hcxRpmPrevMinNoise, hcxPortCurrMinNoise=hcxPortCurrMinNoise, com21HcxRpmIPortEntry=com21HcxRpmIPortEntry, hcxUpstrmAltFreqA=hcxUpstrmAltFreqA, hcxStatsRpmSlotId=hcxStatsRpmSlotId, hcxPortCurrMinUncorrFecHecCells=hcxPortCurrMinUncorrFecHecCells, hcxRecvPower=hcxRecvPower, hcxPortClearStats=hcxPortClearStats, hcxUpstrmRpmSecServState=hcxUpstrmRpmSecServState, com21HcxVciStatsGroup=com21HcxVciStatsGroup, hcxStatsCurrMinRxCells=hcxStatsCurrMinRxCells, hcxStatsCurrMinUncorFecHec=hcxStatsCurrMinUncorFecHec, hcxPortCnrThres=hcxPortCnrThres, hcxCorrFecRatioThres=hcxCorrFecRatioThres, com21HcxUpstrmStatsTable=com21HcxUpstrmStatsTable, hcxRfAnalysisPortId=hcxRfAnalysisPortId, hcxRfAnalysisClearCount=hcxRfAnalysisClearCount, com21HcxUpstrmPortTable=com21HcxUpstrmPortTable, hcxRpmCurrMeanNoise=hcxRpmCurrMeanNoise, hcxUpstrmPortSlotId=hcxUpstrmPortSlotId, hcxRpmLinkErrClear=hcxRpmLinkErrClear, hcxUpstreamUnitSecServState=hcxUpstreamUnitSecServState, hcxRfAnalysisControl=hcxRfAnalysisControl, com21HcxUpstrmStatsEntry=com21HcxUpstrmStatsEntry, hcxPortMinErrRatioCells=hcxPortMinErrRatioCells, hcxUpstreamGroupId=hcxUpstreamGroupId, hcxRpmPrevMinUncorFecHecCells=hcxRpmPrevMinUncorFecHecCells, hcxCellErrRatioThres=hcxCellErrRatioThres, hcxRpmPrevMeanNoise=hcxRpmPrevMeanNoise, hcxRfAnalysisPoint1=hcxRfAnalysisPoint1, com21HcxVciStatsEntry=com21HcxVciStatsEntry, hcxUpTestStatusLedChange=hcxUpTestStatusLedChange, hcxUpstreamUnitConfigState=hcxUpstreamUnitConfigState, hcxUpstreamSlotId=hcxUpstreamSlotId, hcxStatsUpstreamPortId=hcxStatsUpstreamPortId, hcxRpmIPortConfigState=hcxRpmIPortConfigState, com21HcxRpmStatsTable=com21HcxRpmStatsTable, hcxPortCurrMinOverSubPeriods=hcxPortCurrMinOverSubPeriods, hcxPortPrevMinCorrectedFec=hcxPortPrevMinCorrectedFec, hcxUpFaultStatusLedChange=hcxUpFaultStatusLedChange, com21HcxRx=com21HcxRx, hcxUpstrmPortShelfId=hcxUpstrmPortShelfId, hcxUpstrmActiveFreq=hcxUpstrmActiveFreq, hcxPortRealTimeMaxNoise=hcxPortRealTimeMaxNoise, hcxRpmIPortContSchedType=hcxRpmIPortContSchedType, hcxRpmClearStats=hcxRpmClearStats, hcxStatsUpstreamShelfId=hcxStatsUpstreamShelfId, hcxRpmRatioThresPeriod=hcxRpmRatioThresPeriod, hcxUpstrmRpmPrimServState=hcxUpstrmRpmPrimServState, hcxUpstrmAggrStuMaxRate=hcxUpstrmAggrStuMaxRate, hcxStatsPrevMinRxCells=hcxStatsPrevMinRxCells)
