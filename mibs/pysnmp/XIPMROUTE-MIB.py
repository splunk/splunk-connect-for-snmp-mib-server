#
# PySNMP MIB module XIPMROUTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XIPMROUTE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:37:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ModuleIdentity, Bits, NotificationType, Counter64, Unsigned32, MibIdentifier, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, experimental, TimeTicks, iso, Gauge32, ObjectIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Bits", "NotificationType", "Counter64", "Unsigned32", "MibIdentifier", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "experimental", "TimeTicks", "iso", "Gauge32", "ObjectIdentity", "IpAddress")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
xediaMibs, = mibBuilder.importSymbols("XEDIA-REG", "xediaMibs")
xipMRouteMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 838, 3, 29))
if mibBuilder.loadTexts: xipMRouteMIB.setLastUpdated('9903120000Z')
if mibBuilder.loadTexts: xipMRouteMIB.setOrganization('Xedia Corp.')
xipMRouteMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 29, 1))
xipMRoute = MibIdentifier((1, 3, 6, 1, 4, 1, 838, 3, 29, 1, 1))
xipMRouteInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 838, 3, 29, 1, 1, 1), )
if mibBuilder.loadTexts: xipMRouteInterfaceTable.setStatus('current')
xipMRouteInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 838, 3, 29, 1, 1, 1, 1), ).setIndexNames((0, "XIPMROUTE-MIB", "xipMRouteInterfaceIfIndex"))
if mibBuilder.loadTexts: xipMRouteInterfaceEntry.setStatus('current')
xipMRouteInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 29, 1, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: xipMRouteInterfaceIfIndex.setStatus('current')
xipMRouteInterfaceProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 29, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 4, 9))).clone(namedValues=NamedValues(("none", 0), ("dvmrp", 4), ("pimDenseMode", 9))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xipMRouteInterfaceProtocol.setStatus('current')
xipMRouteInterfaceAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 29, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xipMRouteInterfaceAdminStatus.setStatus('current')
xipMRouteInterfaceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 838, 3, 29, 1, 1, 1, 1, 4), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xipMRouteInterfaceAddress.setStatus('current')
mibBuilder.exportSymbols("XIPMROUTE-MIB", xipMRouteInterfaceTable=xipMRouteInterfaceTable, xipMRouteMIB=xipMRouteMIB, xipMRouteInterfaceEntry=xipMRouteInterfaceEntry, PYSNMP_MODULE_ID=xipMRouteMIB, xipMRouteInterfaceAdminStatus=xipMRouteInterfaceAdminStatus, xipMRouteInterfaceProtocol=xipMRouteInterfaceProtocol, xipMRouteInterfaceAddress=xipMRouteInterfaceAddress, xipMRouteMIBObjects=xipMRouteMIBObjects, xipMRouteInterfaceIfIndex=xipMRouteInterfaceIfIndex, xipMRoute=xipMRoute)
