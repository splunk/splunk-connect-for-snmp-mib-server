#
# PySNMP MIB module OPTIX-SONET-TU-MIB-V2 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OPTIX-SONET-TU-MIB-V2
# Produced by pysmi-0.3.4 at Mon Apr 29 20:26:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
optixProvisionSonet, = mibBuilder.importSymbols("OPTIX-OID-MIB", "optixProvisionSonet")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
ObjectIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, NotificationType, iso, TimeTicks, Unsigned32, Integer32, ModuleIdentity, MibIdentifier, Counter64, Gauge32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "NotificationType", "iso", "TimeTicks", "Unsigned32", "Integer32", "ModuleIdentity", "MibIdentifier", "Counter64", "Gauge32", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
optixsonetFacilityMgt = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2))
if mibBuilder.loadTexts: optixsonetFacilityMgt.setLastUpdated('200605232008Z')
if mibBuilder.loadTexts: optixsonetFacilityMgt.setOrganization('Your organization')
class LpbkType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 255))
    namedValues = NamedValues(("terminal", 1), ("facility", 2), ("crs", 3), ("ds1feac", 4), ("ds3feac", 5), ("fac2ni", 6), ("noloop", 255))

class IntfType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 10, 12, 13, 17, 65, 100, 254))
    namedValues = NamedValues(("ds1-asyn-vt1", 1), ("ds3-asyn-sts1", 10), ("ec", 12), ("ds3-tmux-ds1", 13), ("ds3-srv-ds1", 17), ("uas", 65), ("mix", 100), ("invalid", 254))

ds3PortAttribTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 1), )
if mibBuilder.loadTexts: ds3PortAttribTable.setStatus('current')
ds3PortAttribEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 1, 1), ).setIndexNames((0, "OPTIX-SONET-TU-MIB-V2", "ds3PortIndexSlotId"), (0, "OPTIX-SONET-TU-MIB-V2", "ds3PortIndexPortId"))
if mibBuilder.loadTexts: ds3PortAttribEntry.setStatus('current')
ds3PortIndexSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 1, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3PortIndexSlotId.setStatus('current')
ds3PortIndexPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3PortIndexPortId.setStatus('current')
ds3PortAttribReq = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 254))).clone(namedValues=NamedValues(("high", 1), ("low", 2), ("invalid", 254)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds3PortAttribReq.setStatus('current')
ds3PortAttribLbo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds3PortAttribLbo.setStatus('current')
ds3PortAttribLineCde = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 254))).clone(namedValues=NamedValues(("b3zs", 3), ("invalid", 254)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3PortAttribLineCde.setStatus('current')
ds3PortAttribFmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 255))).clone(namedValues=NamedValues(("cbit", 3), ("m23", 4), ("unframed", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds3PortAttribFmt.setStatus('current')
ds3PortAttribTACC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds3PortAttribTACC.setStatus('current')
ds3PortAttribLof2ais = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 254))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("invalid", 254)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds3PortAttribLof2ais.setStatus('current')
ds3PortAttribSvtimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds3PortAttribSvtimer.setStatus('current')
ds3PortAttribPST = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds3PortAttribPST.setStatus('current')
ds3PortAttribSST = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds3PortAttribSST.setStatus('current')
ds3LoopbackStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 1, 1, 12), LpbkType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds3LoopbackStatus.setStatus('current')
ds3LoopbackTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 1, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds3LoopbackTimeout.setStatus('current')
ds3RemoteALWFELPBK = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 254))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("invalid", 254)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds3RemoteALWFELPBK.setStatus('current')
ds1PortAttribTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 2), )
if mibBuilder.loadTexts: ds1PortAttribTable.setStatus('current')
ds1PortAttribEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 2, 1), ).setIndexNames((0, "OPTIX-SONET-TU-MIB-V2", "ds1PortIndexSlotId"), (0, "OPTIX-SONET-TU-MIB-V2", "ds1PortIndexPortId"), (0, "OPTIX-SONET-TU-MIB-V2", "ds1PortIndexPath"))
if mibBuilder.loadTexts: ds1PortAttribEntry.setStatus('current')
ds1PortIndexSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 2, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1PortIndexSlotId.setStatus('current')
ds1PortIndexPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1PortIndexPortId.setStatus('current')
ds1PortIndexPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1PortIndexPath.setStatus('current')
ds1PortAttribLbo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1PortAttribLbo.setStatus('current')
ds1PortAttribLineCde = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 254))).clone(namedValues=NamedValues(("b8zs", 1), ("ami", 2), ("invalid", 254)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1PortAttribLineCde.setStatus('current')
ds1PortAttribFmt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 255))).clone(namedValues=NamedValues(("sf", 1), ("esf", 2), ("unframed", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1PortAttribFmt.setStatus('current')
ds1PortAttribTACC = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1PortAttribTACC.setStatus('current')
ds1PortAttribLof2ais = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 254))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("invalid", 254)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1PortAttribLof2ais.setStatus('current')
ds1PortAttribSvtimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1PortAttribSvtimer.setStatus('current')
ds1PortAttribPST = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1PortAttribPST.setStatus('current')
ds1PortAttribSST = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 2, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1PortAttribSST.setStatus('current')
ds1LoopbackStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 2, 1, 12), LpbkType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1LoopbackStatus.setStatus('current')
ds1LoopbackTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ds1LoopbackTimeout.setStatus('current')
ds1RemoteALWFELPBK = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 254))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("invalid", 254)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1RemoteALWFELPBK.setStatus('current')
ds1PortLpbkAutomaticTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 2, 1, 15), Gauge32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ds1PortLpbkAutomaticTime.setStatus('current')
portTypeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 3), )
if mibBuilder.loadTexts: portTypeTable.setStatus('current')
portTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 3, 1), ).setIndexNames((0, "OPTIX-SONET-TU-MIB-V2", "portIndexSlotId"), (0, "OPTIX-SONET-TU-MIB-V2", "portIndexPortId"))
if mibBuilder.loadTexts: portTypeEntry.setStatus('current')
portIndexSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 3, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portIndexSlotId.setStatus('current')
portIndexPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portIndexPortId.setStatus('current')
portType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 3, 1, 3), IntfType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portType.setStatus('current')
optixsonetFacilityMgtConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 4))
optixsonetFacilityMgtGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 4, 1))
currentObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 4, 1, 1)).setObjects(("OPTIX-SONET-TU-MIB-V2", "ds3PortIndexSlotId"), ("OPTIX-SONET-TU-MIB-V2", "ds3PortIndexPortId"), ("OPTIX-SONET-TU-MIB-V2", "ds3PortAttribReq"), ("OPTIX-SONET-TU-MIB-V2", "ds3PortAttribLbo"), ("OPTIX-SONET-TU-MIB-V2", "ds3PortAttribLineCde"), ("OPTIX-SONET-TU-MIB-V2", "ds3PortAttribFmt"), ("OPTIX-SONET-TU-MIB-V2", "ds3PortAttribTACC"), ("OPTIX-SONET-TU-MIB-V2", "ds3PortAttribLof2ais"), ("OPTIX-SONET-TU-MIB-V2", "ds3PortAttribSvtimer"), ("OPTIX-SONET-TU-MIB-V2", "ds3PortAttribPST"), ("OPTIX-SONET-TU-MIB-V2", "ds3PortAttribSST"), ("OPTIX-SONET-TU-MIB-V2", "ds3LoopbackStatus"), ("OPTIX-SONET-TU-MIB-V2", "ds3LoopbackTimeout"), ("OPTIX-SONET-TU-MIB-V2", "ds3RemoteALWFELPBK"), ("OPTIX-SONET-TU-MIB-V2", "ds1PortIndexSlotId"), ("OPTIX-SONET-TU-MIB-V2", "ds1PortIndexPortId"), ("OPTIX-SONET-TU-MIB-V2", "ds1PortIndexPath"), ("OPTIX-SONET-TU-MIB-V2", "ds1PortAttribLbo"), ("OPTIX-SONET-TU-MIB-V2", "ds1PortAttribLineCde"), ("OPTIX-SONET-TU-MIB-V2", "ds1PortAttribFmt"), ("OPTIX-SONET-TU-MIB-V2", "ds1PortAttribTACC"), ("OPTIX-SONET-TU-MIB-V2", "ds1PortAttribLof2ais"), ("OPTIX-SONET-TU-MIB-V2", "ds1PortAttribSvtimer"), ("OPTIX-SONET-TU-MIB-V2", "ds1PortAttribPST"), ("OPTIX-SONET-TU-MIB-V2", "ds1PortAttribSST"), ("OPTIX-SONET-TU-MIB-V2", "ds1LoopbackStatus"), ("OPTIX-SONET-TU-MIB-V2", "ds1LoopbackTimeout"), ("OPTIX-SONET-TU-MIB-V2", "ds1RemoteALWFELPBK"), ("OPTIX-SONET-TU-MIB-V2", "ds1PortLpbkAutomaticTime"), ("OPTIX-SONET-TU-MIB-V2", "portIndexSlotId"), ("OPTIX-SONET-TU-MIB-V2", "portIndexPortId"), ("OPTIX-SONET-TU-MIB-V2", "portType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    currentObjectGroup = currentObjectGroup.setStatus('current')
optixsonetFacilityMgtCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 4, 2))
basicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 20, 2, 4, 2, 1)).setObjects(("OPTIX-SONET-TU-MIB-V2", "currentObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    basicCompliance = basicCompliance.setStatus('current')
mibBuilder.exportSymbols("OPTIX-SONET-TU-MIB-V2", ds1PortAttribPST=ds1PortAttribPST, ds1PortAttribSST=ds1PortAttribSST, ds1RemoteALWFELPBK=ds1RemoteALWFELPBK, ds1PortAttribEntry=ds1PortAttribEntry, ds1LoopbackTimeout=ds1LoopbackTimeout, optixsonetFacilityMgtConformance=optixsonetFacilityMgtConformance, portTypeEntry=portTypeEntry, ds1PortAttribLof2ais=ds1PortAttribLof2ais, ds1PortIndexSlotId=ds1PortIndexSlotId, ds1PortAttribLbo=ds1PortAttribLbo, ds3PortAttribLof2ais=ds3PortAttribLof2ais, optixsonetFacilityMgtCompliances=optixsonetFacilityMgtCompliances, ds1PortAttribTACC=ds1PortAttribTACC, ds3PortIndexPortId=ds3PortIndexPortId, ds3PortAttribTACC=ds3PortAttribTACC, ds1PortAttribTable=ds1PortAttribTable, portType=portType, ds3PortAttribSvtimer=ds3PortAttribSvtimer, ds3PortAttribSST=ds3PortAttribSST, portTypeTable=portTypeTable, ds1PortAttribLineCde=ds1PortAttribLineCde, ds3PortAttribLbo=ds3PortAttribLbo, ds1PortAttribSvtimer=ds1PortAttribSvtimer, ds3PortAttribReq=ds3PortAttribReq, ds3PortAttribEntry=ds3PortAttribEntry, ds1PortIndexPortId=ds1PortIndexPortId, IntfType=IntfType, currentObjectGroup=currentObjectGroup, ds1PortAttribFmt=ds1PortAttribFmt, ds3PortAttribPST=ds3PortAttribPST, ds3LoopbackTimeout=ds3LoopbackTimeout, ds3PortAttribFmt=ds3PortAttribFmt, PYSNMP_MODULE_ID=optixsonetFacilityMgt, ds1PortLpbkAutomaticTime=ds1PortLpbkAutomaticTime, optixsonetFacilityMgtGroups=optixsonetFacilityMgtGroups, basicCompliance=basicCompliance, ds3RemoteALWFELPBK=ds3RemoteALWFELPBK, ds3PortAttribLineCde=ds3PortAttribLineCde, optixsonetFacilityMgt=optixsonetFacilityMgt, ds3PortAttribTable=ds3PortAttribTable, ds3LoopbackStatus=ds3LoopbackStatus, portIndexSlotId=portIndexSlotId, ds1LoopbackStatus=ds1LoopbackStatus, ds1PortIndexPath=ds1PortIndexPath, LpbkType=LpbkType, portIndexPortId=portIndexPortId, ds3PortIndexSlotId=ds3PortIndexSlotId)
