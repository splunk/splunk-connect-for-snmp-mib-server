#
# PySNMP MIB module JUNIPER-EXPERIMENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-EXPERIMENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:20:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
juniperMIB, = mibBuilder.importSymbols("JUNIPER-SMI", "juniperMIB")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Unsigned32, Integer32, TimeTicks, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, MibIdentifier, ObjectIdentity, Counter64, iso, Bits, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "Integer32", "TimeTicks", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "MibIdentifier", "ObjectIdentity", "Counter64", "iso", "Bits", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
jnxExperiment = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 5))
jnxExperiment.setRevisions(('2003-04-17 01:00', '2005-09-01 00:00', '2007-01-08 00:00',))
if mibBuilder.loadTexts: jnxExperiment.setLastUpdated('200701080000Z')
if mibBuilder.loadTexts: jnxExperiment.setOrganization('Juniper Networks, Inc.')
jnxBgpM2Experiment = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 5, 1))
if mibBuilder.loadTexts: jnxBgpM2Experiment.setStatus('current')
jnxLdapExperiment = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 5, 2))
if mibBuilder.loadTexts: jnxLdapExperiment.setStatus('current')
jnxBfdExperiment = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 5, 3))
if mibBuilder.loadTexts: jnxBfdExperiment.setStatus('current')
jnxOspfv3Experiment = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 5, 4))
if mibBuilder.loadTexts: jnxOspfv3Experiment.setStatus('current')
jnxExampleMibRoot = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 5, 5))
if mibBuilder.loadTexts: jnxExampleMibRoot.setStatus('current')
jnxInternalMibRoot = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 5, 6))
if mibBuilder.loadTexts: jnxInternalMibRoot.setStatus('current')
jnxP2mpExperiment = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 5, 7))
if mibBuilder.loadTexts: jnxP2mpExperiment.setStatus('current')
jnxL2L3VpnMcastExperiment = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 5, 11))
if mibBuilder.loadTexts: jnxL2L3VpnMcastExperiment.setStatus('current')
jnxMvpnExperiment = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 5, 12))
if mibBuilder.loadTexts: jnxMvpnExperiment.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-EXPERIMENT-MIB", jnxExampleMibRoot=jnxExampleMibRoot, jnxL2L3VpnMcastExperiment=jnxL2L3VpnMcastExperiment, jnxLdapExperiment=jnxLdapExperiment, jnxBfdExperiment=jnxBfdExperiment, PYSNMP_MODULE_ID=jnxExperiment, jnxInternalMibRoot=jnxInternalMibRoot, jnxExperiment=jnxExperiment, jnxOspfv3Experiment=jnxOspfv3Experiment, jnxP2mpExperiment=jnxP2mpExperiment, jnxBgpM2Experiment=jnxBgpM2Experiment, jnxMvpnExperiment=jnxMvpnExperiment)
