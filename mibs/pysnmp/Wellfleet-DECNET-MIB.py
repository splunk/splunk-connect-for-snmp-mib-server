#
# PySNMP MIB module Wellfleet-DECNET-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-DECNET-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:33:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, NotificationType, ObjectIdentity, Counter64, iso, MibIdentifier, Counter32, Gauge32, Unsigned32, IpAddress, Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Opaque = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "NotificationType", "ObjectIdentity", "Counter64", "iso", "MibIdentifier", "Counter32", "Gauge32", "Unsigned32", "IpAddress", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Opaque")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
wfDecGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfDecGroup")
wfivRouteGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1))
wfivRouteCreateDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteCreateDelete.setStatus('mandatory')
wfivRouteEnableDisable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteEnableDisable.setStatus('mandatory')
wfivRouteState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 3, 2, 1))).clone(namedValues=NamedValues(("notpresent", 4), ("initializing", 3), ("down", 2), ("up", 1))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivRouteState.setStatus('mandatory')
wfivRouteBroadcastRouteTimer = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteBroadcastRouteTimer.setStatus('mandatory')
wfivRouteRoutingVers = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivRouteRoutingVers.setStatus('mandatory')
wfivRouteMaxAddr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023)).clone(1023)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteMaxAddr.setStatus('mandatory')
wfivRouteMaxBdcastNonRouters = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteMaxBdcastNonRouters.setStatus('mandatory')
wfivRouteMaxBdcastRouters = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023)).clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteMaxBdcastRouters.setStatus('mandatory')
wfivRouteMaxCircuits = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteMaxCircuits.setStatus('mandatory')
wfivRouteMaxCost = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1022)).clone(1022)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteMaxCost.setStatus('mandatory')
wfivRouteMaxHops = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteMaxHops.setStatus('mandatory')
wfivRouteMaxVisits = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)).clone(63)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteMaxVisits.setStatus('mandatory')
wfivRouteAreaMaxCost = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1022)).clone(1022)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteAreaMaxCost.setStatus('mandatory')
wfivRouteAreaMaxHops = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteAreaMaxHops.setStatus('mandatory')
wfivRouteMaxArea = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63)).clone(63)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteMaxArea.setStatus('mandatory')
wfivRouteType = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 5))).clone(namedValues=NamedValues(("area", 3), ("routingiv", 4), ("nonroutingiv", 5))).clone('area')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteType.setStatus('mandatory')
wfivRouteNumAdjs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivRouteNumAdjs.setStatus('mandatory')
wfivRouteNumLvl1Rts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivRouteNumLvl1Rts.setStatus('mandatory')
wfivRouteNumAreas = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivRouteNumAreas.setStatus('mandatory')
wfivRouteLevel1Area = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivRouteLevel1Area.setStatus('mandatory')
wfivTriggeredUpdates = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivTriggeredUpdates.setStatus('mandatory')
wfivTriggeredInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivTriggeredInterval.setStatus('mandatory')
wfivCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2), )
if mibBuilder.loadTexts: wfivCircuitTable.setStatus('mandatory')
wfivCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1), ).setIndexNames((0, "Wellfleet-DECNET-MIB", "wfivCircuitID"))
if mibBuilder.loadTexts: wfivCircuitEntry.setStatus('mandatory')
wfivCircuitCreateDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitCreateDelete.setStatus('mandatory')
wfivCircuitEnableDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitEnableDisable.setStatus('mandatory')
wfivCircuitCommonState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 3, 2, 1))).clone(namedValues=NamedValues(("notpresent", 4), ("initializing", 3), ("down", 2), ("up", 1))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCommonState.setStatus('mandatory')
wfivCircuitArea = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitArea.setStatus('mandatory')
wfivCircuitNodeid = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitNodeid.setStatus('mandatory')
wfivCircuitNodeAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitNodeAddr.setStatus('mandatory')
wfivCircuitID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitID.setStatus('mandatory')
wfivCircuitCommonType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4, 6, 15, 100, 101, 102, 103, 104))).clone(namedValues=NamedValues(("sync", 1), ("x25", 4), ("ethernet", 6), ("fddi", 15), ("smds", 100), ("fr", 101), ("atm", 102), ("ring", 103), ("ppp", 104)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCommonType.setStatus('mandatory')
wfivCircuitExecCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitExecCost.setStatus('mandatory')
wfivCircuitExecHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitExecHelloTimer.setStatus('mandatory')
wfivCircuitDesigRouterNodeAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitDesigRouterNodeAddr.setStatus('mandatory')
wfivCircuitMaxRouters = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 33)).clone(33)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitMaxRouters.setStatus('mandatory')
wfivCircuitRouterPri = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitRouterPri.setStatus('mandatory')
wfivCircuitCountAgedPktLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountAgedPktLoss.setStatus('mandatory')
wfivCircuitCountNodeUnrPktLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountNodeUnrPktLoss.setStatus('mandatory')
wfivCircuitCountOutRngePktLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountOutRngePktLoss.setStatus('mandatory')
wfivCircuitCountOverSzePktLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountOverSzePktLoss.setStatus('mandatory')
wfivCircuitCountPacketFmtErr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountPacketFmtErr.setStatus('mandatory')
wfivCircuitCountPtlRteUpdtLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountPtlRteUpdtLoss.setStatus('mandatory')
wfivCircuitCountTransitPksRecd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountTransitPksRecd.setStatus('mandatory')
wfivCircuitCountTransitPkSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountTransitPkSent.setStatus('mandatory')
wfivCircuitCountRtHelloSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountRtHelloSent.setStatus('mandatory')
wfivCircuitCountRtHelloRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountRtHelloRcvd.setStatus('mandatory')
wfivCircuitCountHelloSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountHelloSent.setStatus('mandatory')
wfivCircuitCountHelloRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountHelloRcvd.setStatus('mandatory')
wfivCircuitCountL1UpdSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountL1UpdSent.setStatus('mandatory')
wfivCircuitCountL1UpdRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountL1UpdRcvd.setStatus('mandatory')
wfivCircuitCountAreaUpdSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountAreaUpdSent.setStatus('mandatory')
wfivCircuitCountAreaUpdRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountAreaUpdRcvd.setStatus('mandatory')
wfivCircuitCountDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitCountDropped.setStatus('mandatory')
wfivCircuitAllEndnodesMac = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 31), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitAllEndnodesMac.setStatus('mandatory')
wfivCircuitAllRoutersMac = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 32), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitAllRoutersMac.setStatus('mandatory')
wfivCircuitAllAreaRoutersMac = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 33), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitAllAreaRoutersMac.setStatus('mandatory')
wfivCircuitHelloEnableDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitHelloEnableDisable.setStatus('mandatory')
wfivCircuitRtHelloEnableDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitRtHelloEnableDisable.setStatus('mandatory')
wfivCircuitL1UpdateEnableDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitL1UpdateEnableDisable.setStatus('mandatory')
wfivCircuitAllEndnodesMacInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 37), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitAllEndnodesMacInUse.setStatus('mandatory')
wfivCircuitAllRoutersMacInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 38), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitAllRoutersMacInUse.setStatus('mandatory')
wfivCircuitAllAreaRoutersMacInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 39), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivCircuitAllAreaRoutersMacInUse.setStatus('mandatory')
wfivCircuitL2UpdateDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitL2UpdateDisable.setStatus('mandatory')
wfivCircuitLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 2, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level2", 1), ("only", 2))).clone('level2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivCircuitLevel.setStatus('mandatory')
wfivLevel1RouteTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3), )
if mibBuilder.loadTexts: wfivLevel1RouteTable.setStatus('mandatory')
wfivLevel1RouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3, 1), ).setIndexNames((0, "Wellfleet-DECNET-MIB", "wfivLevel1AreaId"), (0, "Wellfleet-DECNET-MIB", "wfivLevel1NodeId"))
if mibBuilder.loadTexts: wfivLevel1RouteEntry.setStatus('mandatory')
wfivLevel1AreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivLevel1AreaId.setStatus('mandatory')
wfivLevel1NodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivLevel1NodeId.setStatus('mandatory')
wfivLevel1RouteNodeAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivLevel1RouteNodeAddr.setStatus('mandatory')
wfivLevel1RouteCircuitID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivLevel1RouteCircuitID.setStatus('mandatory')
wfivLevel1RouteCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivLevel1RouteCost.setStatus('mandatory')
wfivLevel1RouteHops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivLevel1RouteHops.setStatus('mandatory')
wfivLevel1RouteNextNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivLevel1RouteNextNode.setStatus('mandatory')
wfivLevel1RouteDynamic = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamic", 1), ("static", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivLevel1RouteDynamic.setStatus('mandatory')
wfivAreaTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 4), )
if mibBuilder.loadTexts: wfivAreaTable.setStatus('mandatory')
wfivAreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 4, 1), ).setIndexNames((0, "Wellfleet-DECNET-MIB", "wfivAreaNum"))
if mibBuilder.loadTexts: wfivAreaEntry.setStatus('mandatory')
wfivAreaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAreaNum.setStatus('mandatory')
wfivAreaState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5))).clone(namedValues=NamedValues(("reachable", 4), ("unreachable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAreaState.setStatus('mandatory')
wfivAreaCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAreaCost.setStatus('mandatory')
wfivAreaHops = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAreaHops.setStatus('mandatory')
wfivAreaCircuitID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAreaCircuitID.setStatus('mandatory')
wfivAreaNextNode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 4, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAreaNextNode.setStatus('mandatory')
wfivAreaRouteDynamic = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dynamic", 1), ("static", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivAreaRouteDynamic.setStatus('mandatory')
wfivAdjTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5), )
if mibBuilder.loadTexts: wfivAdjTable.setStatus('mandatory')
wfivAdjEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1), ).setIndexNames((0, "Wellfleet-DECNET-MIB", "wfivAdjIndex"))
if mibBuilder.loadTexts: wfivAdjEntry.setStatus('mandatory')
wfivAdjIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAdjIndex.setStatus('mandatory')
wfivAdjNodeAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAdjNodeAddr.setStatus('mandatory')
wfivAdjBlockSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAdjBlockSize.setStatus('mandatory')
wfivAdjListenTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAdjListenTimer.setStatus('mandatory')
wfivAdjCircuitID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAdjCircuitID.setStatus('mandatory')
wfivAdjType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAdjType.setStatus('mandatory')
wfivAdjState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("init", 1), ("up", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAdjState.setStatus('mandatory')
wfivAdjPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAdjPriority.setStatus('mandatory')
wfivAdjClass = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 5, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAdjClass.setStatus('mandatory')
wfivTrafficFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6), )
if mibBuilder.loadTexts: wfivTrafficFilterTable.setStatus('mandatory')
wfivTrafficFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1), ).setIndexNames((0, "Wellfleet-DECNET-MIB", "wfivTrafficFilterCircuit"), (0, "Wellfleet-DECNET-MIB", "wfivTrafficFilterRuleNumber"), (0, "Wellfleet-DECNET-MIB", "wfivTrafficFilterFragment"))
if mibBuilder.loadTexts: wfivTrafficFilterEntry.setStatus('mandatory')
wfivTrafficFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivTrafficFilterCreate.setStatus('mandatory')
wfivTrafficFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivTrafficFilterEnable.setStatus('mandatory')
wfivTrafficFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivTrafficFilterStatus.setStatus('mandatory')
wfivTrafficFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivTrafficFilterCounter.setStatus('mandatory')
wfivTrafficFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 5), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivTrafficFilterDefinition.setStatus('mandatory')
wfivTrafficFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivTrafficFilterReserved.setStatus('mandatory')
wfivTrafficFilterCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivTrafficFilterCircuit.setStatus('mandatory')
wfivTrafficFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivTrafficFilterRuleNumber.setStatus('mandatory')
wfivTrafficFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivTrafficFilterFragment.setStatus('mandatory')
wfivTrafficFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 6, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivTrafficFilterName.setStatus('mandatory')
wfivStaticAdjTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7), )
if mibBuilder.loadTexts: wfivStaticAdjTable.setStatus('mandatory')
wfivStaticAdjEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1), ).setIndexNames((0, "Wellfleet-DECNET-MIB", "wfivStaticAdjCircuitID"), (0, "Wellfleet-DECNET-MIB", "wfivStaticAdjArea"), (0, "Wellfleet-DECNET-MIB", "wfivStaticAdjNodeid"))
if mibBuilder.loadTexts: wfivStaticAdjEntry.setStatus('mandatory')
wfivStaticAdjCreateDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2))).clone('create')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivStaticAdjCreateDelete.setStatus('mandatory')
wfivStaticAdjEnableDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivStaticAdjEnableDisable.setStatus('mandatory')
wfivStaticAdjArea = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivStaticAdjArea.setStatus('mandatory')
wfivStaticAdjNodeid = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivStaticAdjNodeid.setStatus('mandatory')
wfivStaticAdjCircuitID = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivStaticAdjCircuitID.setStatus('mandatory')
wfivStaticAdjNodeAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivStaticAdjNodeAddr.setStatus('mandatory')
wfivStaticAdjType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 5))).clone(namedValues=NamedValues(("area", 3), ("routingiv", 4), ("nonroutingiv", 5))).clone('area')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivStaticAdjType.setStatus('mandatory')
wfivStaticAdjPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivStaticAdjPriority.setStatus('mandatory')
wfivStaticAdjDestMACAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 7, 1, 9), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivStaticAdjDestMACAddr.setStatus('mandatory')
wfivStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 8), )
if mibBuilder.loadTexts: wfivStaticRouteTable.setStatus('mandatory')
wfivStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 8, 1), ).setIndexNames((0, "Wellfleet-DECNET-MIB", "wfivStaticRouteAreaId"), (0, "Wellfleet-DECNET-MIB", "wfivStaticRouteNodeId"), (0, "Wellfleet-DECNET-MIB", "wfivStaticRouteNextHopAreaId"), (0, "Wellfleet-DECNET-MIB", "wfivStaticRouteNextHopNodeId"))
if mibBuilder.loadTexts: wfivStaticRouteEntry.setStatus('mandatory')
wfivStaticRouteDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivStaticRouteDelete.setStatus('mandatory')
wfivStaticRouteDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivStaticRouteDisable.setStatus('mandatory')
wfivStaticRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("l1", 1), ("l2", 2))).clone('l2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivStaticRouteType.setStatus('mandatory')
wfivStaticRouteAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 8, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivStaticRouteAreaId.setStatus('mandatory')
wfivStaticRouteNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 8, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivStaticRouteNodeId.setStatus('mandatory')
wfivStaticRouteCost = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfivStaticRouteCost.setStatus('mandatory')
wfivStaticRouteNextHopAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 8, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivStaticRouteNextHopAreaId.setStatus('mandatory')
wfivStaticRouteNextHopNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 8, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivStaticRouteNextHopNodeId.setStatus('mandatory')
wfivDecnetTrans = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 9))
wfivDecnetTransPhase5Pkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 9, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivDecnetTransPhase5Pkts.setStatus('mandatory')
wfivDecnetTransMtuFail = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 9, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivDecnetTransMtuFail.setStatus('mandatory')
wfivDecnetTransUnrFail = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 9, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivDecnetTransUnrFail.setStatus('mandatory')
wfivDecnetTransNumPhase5Es = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 9, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivDecnetTransNumPhase5Es.setStatus('mandatory')
wfivAggrStats = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 10))
wfivAggrInPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAggrInPkts.setStatus('mandatory')
wfivAggrOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAggrOutPkts.setStatus('mandatory')
wfivAggrFormatErrs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 10, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAggrFormatErrs.setStatus('mandatory')
wfivAggrDestUnreachables = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 10, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAggrDestUnreachables.setStatus('mandatory')
wfivAggrRangeErrs = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 10, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAggrRangeErrs.setStatus('mandatory')
wfivAggrOversizedPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAggrOversizedPkts.setStatus('mandatory')
wfivAggrAgedPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 10, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAggrAgedPkts.setStatus('mandatory')
wfivAggrFwdPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 2, 10, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfivAggrFwdPkts.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-DECNET-MIB", wfivAggrDestUnreachables=wfivAggrDestUnreachables, wfivCircuitL1UpdateEnableDisable=wfivCircuitL1UpdateEnableDisable, wfivAreaNextNode=wfivAreaNextNode, wfivCircuitCountNodeUnrPktLoss=wfivCircuitCountNodeUnrPktLoss, wfivCircuitAllAreaRoutersMacInUse=wfivCircuitAllAreaRoutersMacInUse, wfivCircuitCountDropped=wfivCircuitCountDropped, wfivLevel1RouteCircuitID=wfivLevel1RouteCircuitID, wfivAggrOutPkts=wfivAggrOutPkts, wfivTrafficFilterStatus=wfivTrafficFilterStatus, wfivAdjIndex=wfivAdjIndex, wfivCircuitEnableDisable=wfivCircuitEnableDisable, wfivLevel1RouteNextNode=wfivLevel1RouteNextNode, wfivAggrFormatErrs=wfivAggrFormatErrs, wfivCircuitNodeid=wfivCircuitNodeid, wfivCircuitCountRtHelloRcvd=wfivCircuitCountRtHelloRcvd, wfivRouteType=wfivRouteType, wfivStaticAdjTable=wfivStaticAdjTable, wfivCircuitMaxRouters=wfivCircuitMaxRouters, wfivLevel1NodeId=wfivLevel1NodeId, wfivTrafficFilterFragment=wfivTrafficFilterFragment, wfivRouteRoutingVers=wfivRouteRoutingVers, wfivAdjNodeAddr=wfivAdjNodeAddr, wfivAreaCost=wfivAreaCost, wfivRouteLevel1Area=wfivRouteLevel1Area, wfivAdjEntry=wfivAdjEntry, wfivCircuitCreateDelete=wfivCircuitCreateDelete, wfivTrafficFilterDefinition=wfivTrafficFilterDefinition, wfivRouteMaxBdcastNonRouters=wfivRouteMaxBdcastNonRouters, wfivAggrAgedPkts=wfivAggrAgedPkts, wfivLevel1RouteNodeAddr=wfivLevel1RouteNodeAddr, wfivStaticAdjCircuitID=wfivStaticAdjCircuitID, wfivDecnetTransUnrFail=wfivDecnetTransUnrFail, wfivAreaEntry=wfivAreaEntry, wfivRouteBroadcastRouteTimer=wfivRouteBroadcastRouteTimer, wfivCircuitAllAreaRoutersMac=wfivCircuitAllAreaRoutersMac, wfivRouteCreateDelete=wfivRouteCreateDelete, wfivRouteNumLvl1Rts=wfivRouteNumLvl1Rts, wfivAdjClass=wfivAdjClass, wfivTrafficFilterReserved=wfivTrafficFilterReserved, wfivStaticRouteNodeId=wfivStaticRouteNodeId, wfivStaticAdjArea=wfivStaticAdjArea, wfivAggrRangeErrs=wfivAggrRangeErrs, wfivRouteState=wfivRouteState, wfivCircuitCountTransitPksRecd=wfivCircuitCountTransitPksRecd, wfivCircuitCommonState=wfivCircuitCommonState, wfivStaticRouteAreaId=wfivStaticRouteAreaId, wfivAreaNum=wfivAreaNum, wfivAggrInPkts=wfivAggrInPkts, wfivCircuitCountAreaUpdRcvd=wfivCircuitCountAreaUpdRcvd, wfivCircuitExecCost=wfivCircuitExecCost, wfivRouteGroup=wfivRouteGroup, wfivAdjType=wfivAdjType, wfivCircuitID=wfivCircuitID, wfivCircuitCountL1UpdSent=wfivCircuitCountL1UpdSent, wfivAreaCircuitID=wfivAreaCircuitID, wfivStaticRouteDisable=wfivStaticRouteDisable, wfivRouteMaxAddr=wfivRouteMaxAddr, wfivStaticAdjPriority=wfivStaticAdjPriority, wfivAdjListenTimer=wfivAdjListenTimer, wfivLevel1RouteCost=wfivLevel1RouteCost, wfivCircuitRouterPri=wfivCircuitRouterPri, wfivRouteMaxHops=wfivRouteMaxHops, wfivTrafficFilterRuleNumber=wfivTrafficFilterRuleNumber, wfivStaticAdjEnableDisable=wfivStaticAdjEnableDisable, wfivCircuitAllEndnodesMac=wfivCircuitAllEndnodesMac, wfivCircuitRtHelloEnableDisable=wfivCircuitRtHelloEnableDisable, wfivCircuitDesigRouterNodeAddr=wfivCircuitDesigRouterNodeAddr, wfivAreaState=wfivAreaState, wfivCircuitAllEndnodesMacInUse=wfivCircuitAllEndnodesMacInUse, wfivAdjBlockSize=wfivAdjBlockSize, wfivRouteMaxVisits=wfivRouteMaxVisits, wfivCircuitCountAreaUpdSent=wfivCircuitCountAreaUpdSent, wfivLevel1RouteDynamic=wfivLevel1RouteDynamic, wfivTrafficFilterCircuit=wfivTrafficFilterCircuit, wfivStaticRouteTable=wfivStaticRouteTable, wfivAggrStats=wfivAggrStats, wfivStaticAdjCreateDelete=wfivStaticAdjCreateDelete, wfivAdjPriority=wfivAdjPriority, wfivTrafficFilterCreate=wfivTrafficFilterCreate, wfivLevel1RouteHops=wfivLevel1RouteHops, wfivRouteMaxBdcastRouters=wfivRouteMaxBdcastRouters, wfivRouteMaxCost=wfivRouteMaxCost, wfivCircuitLevel=wfivCircuitLevel, wfivAdjState=wfivAdjState, wfivTriggeredUpdates=wfivTriggeredUpdates, wfivStaticRouteDelete=wfivStaticRouteDelete, wfivLevel1RouteTable=wfivLevel1RouteTable, wfivAreaTable=wfivAreaTable, wfivStaticAdjNodeAddr=wfivStaticAdjNodeAddr, wfivCircuitAllRoutersMacInUse=wfivCircuitAllRoutersMacInUse, wfivStaticRouteType=wfivStaticRouteType, wfivCircuitCountOverSzePktLoss=wfivCircuitCountOverSzePktLoss, wfivTriggeredInterval=wfivTriggeredInterval, wfivAggrOversizedPkts=wfivAggrOversizedPkts, wfivCircuitNodeAddr=wfivCircuitNodeAddr, wfivLevel1AreaId=wfivLevel1AreaId, wfivStaticRouteNextHopAreaId=wfivStaticRouteNextHopAreaId, wfivCircuitCountL1UpdRcvd=wfivCircuitCountL1UpdRcvd, wfivLevel1RouteEntry=wfivLevel1RouteEntry, wfivTrafficFilterEntry=wfivTrafficFilterEntry, wfivCircuitEntry=wfivCircuitEntry, wfivTrafficFilterName=wfivTrafficFilterName, wfivCircuitHelloEnableDisable=wfivCircuitHelloEnableDisable, wfivCircuitCountTransitPkSent=wfivCircuitCountTransitPkSent, wfivTrafficFilterCounter=wfivTrafficFilterCounter, wfivStaticAdjType=wfivStaticAdjType, wfivCircuitCountOutRngePktLoss=wfivCircuitCountOutRngePktLoss, wfivStaticAdjNodeid=wfivStaticAdjNodeid, wfivStaticRouteNextHopNodeId=wfivStaticRouteNextHopNodeId, wfivRouteAreaMaxCost=wfivRouteAreaMaxCost, wfivRouteNumAdjs=wfivRouteNumAdjs, wfivCircuitArea=wfivCircuitArea, wfivCircuitCountPtlRteUpdtLoss=wfivCircuitCountPtlRteUpdtLoss, wfivCircuitCountRtHelloSent=wfivCircuitCountRtHelloSent, wfivAdjTable=wfivAdjTable, wfivRouteMaxCircuits=wfivRouteMaxCircuits, wfivCircuitCountPacketFmtErr=wfivCircuitCountPacketFmtErr, wfivAggrFwdPkts=wfivAggrFwdPkts, wfivCircuitTable=wfivCircuitTable, wfivStaticRouteCost=wfivStaticRouteCost, wfivDecnetTransPhase5Pkts=wfivDecnetTransPhase5Pkts, wfivDecnetTransNumPhase5Es=wfivDecnetTransNumPhase5Es, wfivCircuitExecHelloTimer=wfivCircuitExecHelloTimer, wfivCircuitCommonType=wfivCircuitCommonType, wfivStaticAdjEntry=wfivStaticAdjEntry, wfivRouteAreaMaxHops=wfivRouteAreaMaxHops, wfivTrafficFilterTable=wfivTrafficFilterTable, wfivStaticAdjDestMACAddr=wfivStaticAdjDestMACAddr, wfivCircuitCountHelloRcvd=wfivCircuitCountHelloRcvd, wfivCircuitCountHelloSent=wfivCircuitCountHelloSent, wfivCircuitAllRoutersMac=wfivCircuitAllRoutersMac, wfivRouteNumAreas=wfivRouteNumAreas, wfivAreaRouteDynamic=wfivAreaRouteDynamic, wfivAdjCircuitID=wfivAdjCircuitID, wfivDecnetTrans=wfivDecnetTrans, wfivRouteEnableDisable=wfivRouteEnableDisable, wfivDecnetTransMtuFail=wfivDecnetTransMtuFail, wfivCircuitCountAgedPktLoss=wfivCircuitCountAgedPktLoss, wfivAreaHops=wfivAreaHops, wfivRouteMaxArea=wfivRouteMaxArea, wfivStaticRouteEntry=wfivStaticRouteEntry, wfivCircuitL2UpdateDisable=wfivCircuitL2UpdateDisable, wfivTrafficFilterEnable=wfivTrafficFilterEnable)
