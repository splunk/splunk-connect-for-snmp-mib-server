#
# PySNMP MIB module Wellfleet-CONSOLE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-CONSOLE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:33:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, Counter64, Unsigned32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, MibIdentifier, Gauge32, Counter32, iso, TimeTicks, IpAddress, ObjectIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter64", "Unsigned32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "MibIdentifier", "Gauge32", "Counter32", "iso", "TimeTicks", "IpAddress", "ObjectIdentity", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfServices, wfSerialPortGroup = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfServices", "wfSerialPortGroup")
wfConsole = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1))
wfBaudRate = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 1), Integer32().clone(9600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBaudRate.setStatus('obsolete')
wfDataBits = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 2), Integer32().clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfDataBits.setStatus('obsolete')
wfParity = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("odd", 2), ("even", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfParity.setStatus('obsolete')
wfStopBits = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("s1bit", 1), ("s15bit", 2), ("s2bit", 3))).clone('s1bit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfStopBits.setStatus('obsolete')
wfModemEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfModemEnable.setStatus('obsolete')
wfLinesPerScreen = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 6), Integer32().clone(24)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLinesPerScreen.setStatus('obsolete')
wfMoreEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfMoreEnable.setStatus('obsolete')
wfPrompt = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPrompt.setStatus('obsolete')
wfLoginTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLoginTimeOut.setStatus('obsolete')
wfPasswordTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfPasswordTimeOut.setStatus('obsolete')
wfCommandTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfCommandTimeOut.setStatus('obsolete')
wfLoginRetries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfLoginRetries.setStatus('obsolete')
wfTotalLogins = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTotalLogins.setStatus('obsolete')
wfUserLoginErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfUserLoginErrors.setStatus('obsolete')
wfManagerLoginErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfManagerLoginErrors.setStatus('obsolete')
wfOtherLoginErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfOtherLoginErrors.setStatus('obsolete')
wfTtyFrameErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTtyFrameErrors.setStatus('obsolete')
wfTtyOverrunErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTtyOverrunErrors.setStatus('obsolete')
wfTtyParityErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTtyParityErrors.setStatus('obsolete')
wfTtyInfifoErrors = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfTtyInfifoErrors.setStatus('obsolete')
wfSerialPortTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1), )
if mibBuilder.loadTexts: wfSerialPortTable.setStatus('mandatory')
wfSerialPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1), ).setIndexNames((0, "Wellfleet-CONSOLE-MIB", "wfSerialPortNumber"))
if mibBuilder.loadTexts: wfSerialPortEntry.setStatus('mandatory')
wfSerialPortDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortDelete.setStatus('mandatory')
wfSerialPortDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortDisable.setStatus('mandatory')
wfSerialPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSerialPortState.setStatus('mandatory')
wfSerialPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSerialPortNumber.setStatus('mandatory')
wfSerialPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSerialPortName.setStatus('mandatory')
wfSerialPortSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSerialPortSlot.setStatus('mandatory')
wfSerialPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ti", 1), ("printer", 2), ("rtelnet", 3))).clone('ti')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortType.setStatus('mandatory')
wfSerialPortBaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 8), Integer32().clone(9600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortBaudRate.setStatus('mandatory')
wfSerialPortDataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 9), Integer32().clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortDataBits.setStatus('mandatory')
wfSerialPortParity = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("odd", 2), ("even", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortParity.setStatus('mandatory')
wfSerialPortStopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("s1bit", 1), ("s15bit", 2), ("s2bit", 3))).clone('s1bit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortStopBits.setStatus('mandatory')
wfSerialPortModemEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortModemEnable.setStatus('mandatory')
wfSerialPortLinesPerScreen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 13), Integer32().clone(24)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortLinesPerScreen.setStatus('mandatory')
wfSerialPortMoreEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortMoreEnable.setStatus('mandatory')
wfSerialPortPrompt = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortPrompt.setStatus('mandatory')
wfSerialPortLoginTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortLoginTimeOut.setStatus('mandatory')
wfSerialPortPasswordTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortPasswordTimeOut.setStatus('mandatory')
wfSerialPortCommandTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortCommandTimeOut.setStatus('mandatory')
wfSerialPortLoginRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortLoginRetries.setStatus('mandatory')
wfSerialPortTotalLogins = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSerialPortTotalLogins.setStatus('mandatory')
wfSerialPortUserLoginErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSerialPortUserLoginErrors.setStatus('mandatory')
wfSerialPortManagerLoginErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSerialPortManagerLoginErrors.setStatus('mandatory')
wfSerialPortOtherLoginErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSerialPortOtherLoginErrors.setStatus('mandatory')
wfSerialPortTtyFrameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSerialPortTtyFrameErrors.setStatus('mandatory')
wfSerialPortTtyOverrunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSerialPortTtyOverrunErrors.setStatus('mandatory')
wfSerialPortTtyParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSerialPortTtyParityErrors.setStatus('mandatory')
wfSerialPortTtyInfifoErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSerialPortTtyInfifoErrors.setStatus('mandatory')
wfSerialPortInitialSearchPath = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 28), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortInitialSearchPath.setStatus('obsolete')
wfSerialPortManagerAutoScript = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 29), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortManagerAutoScript.setStatus('mandatory')
wfSerialPortUserAutoScript = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortUserAutoScript.setStatus('mandatory')
wfSerialPortUserAbortLogoutDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortUserAbortLogoutDisable.setStatus('mandatory')
wfSerialPortHistoryDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 40)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortHistoryDepth.setStatus('mandatory')
wfSerialPortAutoSaveNumFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortAutoSaveNumFiles.setStatus('mandatory')
wfSerialPortAutoSaveVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 34), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortAutoSaveVolume.setStatus('mandatory')
wfSerialPortModemIdSwRev = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 79))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSerialPortModemIdSwRev.setStatus('mandatory')
wfSerialPortModemIdHwRev = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 79))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSerialPortModemIdHwRev.setStatus('mandatory')
wfSerialPortModemLineState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("onHook", 2), ("offHook", 3), ("connected", 4), ("busiedOut", 5), ("reset", 6))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSerialPortModemLineState.setStatus('mandatory')
wfSerialPortModemCfgFactoryDefaults = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortModemCfgFactoryDefaults.setStatus('mandatory')
wfSerialPortModemCfgInitString = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 39), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortModemCfgInitString.setStatus('mandatory')
wfSerialPortModemCfgDefaultString = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 40), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSerialPortModemCfgDefaultString.setStatus('mandatory')
wfSerialPortModemCfgResultCodeString = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 41), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSerialPortModemCfgResultCodeString.setStatus('mandatory')
wfSerialPortModemCfgState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cfgIdle", 1), ("cfgInProgress", 2), ("cfgResponseReturned", 3))).clone('cfgIdle')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortModemCfgState.setStatus('mandatory')
wfSerialPortModemCfgCountry = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("northAmerica", 1), ("japan", 2), ("uk", 3), ("germany", 4))).clone('northAmerica')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfSerialPortModemCfgCountry.setStatus('mandatory')
wfSerialPortModemInitState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 3, 2, 11, 1, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 5, 8))).clone(namedValues=NamedValues(("startup", 1), ("getInfo", 3), ("setDefaults", 4), ("initialization", 5), ("initComplete", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfSerialPortModemInitState.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-CONSOLE-MIB", wfPrompt=wfPrompt, wfSerialPortModemIdHwRev=wfSerialPortModemIdHwRev, wfSerialPortModemCfgInitString=wfSerialPortModemCfgInitString, wfTtyInfifoErrors=wfTtyInfifoErrors, wfSerialPortTtyFrameErrors=wfSerialPortTtyFrameErrors, wfSerialPortMoreEnable=wfSerialPortMoreEnable, wfUserLoginErrors=wfUserLoginErrors, wfSerialPortAutoSaveVolume=wfSerialPortAutoSaveVolume, wfTtyFrameErrors=wfTtyFrameErrors, wfSerialPortAutoSaveNumFiles=wfSerialPortAutoSaveNumFiles, wfDataBits=wfDataBits, wfSerialPortTtyInfifoErrors=wfSerialPortTtyInfifoErrors, wfSerialPortCommandTimeOut=wfSerialPortCommandTimeOut, wfSerialPortEntry=wfSerialPortEntry, wfSerialPortType=wfSerialPortType, wfSerialPortModemEnable=wfSerialPortModemEnable, wfConsole=wfConsole, wfSerialPortDisable=wfSerialPortDisable, wfManagerLoginErrors=wfManagerLoginErrors, wfSerialPortTotalLogins=wfSerialPortTotalLogins, wfSerialPortModemIdSwRev=wfSerialPortModemIdSwRev, wfSerialPortState=wfSerialPortState, wfSerialPortPrompt=wfSerialPortPrompt, wfSerialPortModemLineState=wfSerialPortModemLineState, wfSerialPortModemCfgCountry=wfSerialPortModemCfgCountry, wfSerialPortDelete=wfSerialPortDelete, wfSerialPortTtyParityErrors=wfSerialPortTtyParityErrors, wfOtherLoginErrors=wfOtherLoginErrors, wfSerialPortModemCfgFactoryDefaults=wfSerialPortModemCfgFactoryDefaults, wfLoginRetries=wfLoginRetries, wfPasswordTimeOut=wfPasswordTimeOut, wfSerialPortPasswordTimeOut=wfSerialPortPasswordTimeOut, wfModemEnable=wfModemEnable, wfTtyParityErrors=wfTtyParityErrors, wfSerialPortSlot=wfSerialPortSlot, wfSerialPortModemCfgResultCodeString=wfSerialPortModemCfgResultCodeString, wfSerialPortNumber=wfSerialPortNumber, wfSerialPortDataBits=wfSerialPortDataBits, wfSerialPortOtherLoginErrors=wfSerialPortOtherLoginErrors, wfSerialPortManagerAutoScript=wfSerialPortManagerAutoScript, wfMoreEnable=wfMoreEnable, wfSerialPortModemInitState=wfSerialPortModemInitState, wfSerialPortTtyOverrunErrors=wfSerialPortTtyOverrunErrors, wfSerialPortParity=wfSerialPortParity, wfLoginTimeOut=wfLoginTimeOut, wfStopBits=wfStopBits, wfSerialPortManagerLoginErrors=wfSerialPortManagerLoginErrors, wfTotalLogins=wfTotalLogins, wfBaudRate=wfBaudRate, wfSerialPortTable=wfSerialPortTable, wfSerialPortBaudRate=wfSerialPortBaudRate, wfSerialPortUserAbortLogoutDisable=wfSerialPortUserAbortLogoutDisable, wfSerialPortUserLoginErrors=wfSerialPortUserLoginErrors, wfParity=wfParity, wfSerialPortHistoryDepth=wfSerialPortHistoryDepth, wfSerialPortLoginTimeOut=wfSerialPortLoginTimeOut, wfSerialPortLoginRetries=wfSerialPortLoginRetries, wfSerialPortStopBits=wfSerialPortStopBits, wfLinesPerScreen=wfLinesPerScreen, wfTtyOverrunErrors=wfTtyOverrunErrors, wfSerialPortModemCfgState=wfSerialPortModemCfgState, wfSerialPortName=wfSerialPortName, wfSerialPortModemCfgDefaultString=wfSerialPortModemCfgDefaultString, wfSerialPortLinesPerScreen=wfSerialPortLinesPerScreen, wfSerialPortUserAutoScript=wfSerialPortUserAutoScript, wfCommandTimeOut=wfCommandTimeOut, wfSerialPortInitialSearchPath=wfSerialPortInitialSearchPath)
