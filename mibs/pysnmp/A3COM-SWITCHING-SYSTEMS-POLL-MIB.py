#
# PySNMP MIB module A3COM-SWITCHING-SYSTEMS-POLL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-SWITCHING-SYSTEMS-POLL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:53:38 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, ModuleIdentity, Counter64, ObjectIdentity, TimeTicks, Bits, Integer32, Unsigned32, iso, NotificationType, Counter32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, IpAddress, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ModuleIdentity", "Counter64", "ObjectIdentity", "TimeTicks", "Bits", "Integer32", "Unsigned32", "iso", "NotificationType", "Counter32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "IpAddress", "enterprises")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
a3Com = MibIdentifier((1, 3, 6, 1, 4, 1, 43))
switchingSystemsMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 29))
a3ComSwitchingSystemsMib = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 29, 4))
a3ComPoll = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 29, 4, 22))
a3ComPollTable = MibTable((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1), )
if mibBuilder.loadTexts: a3ComPollTable.setStatus('mandatory')
a3ComPollEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1), ).setIndexNames((0, "A3COM-SWITCHING-SYSTEMS-POLL-MIB", "a3ComPollIndex"))
if mibBuilder.loadTexts: a3ComPollEntry.setStatus('mandatory')
a3ComPollIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComPollIndex.setStatus('mandatory')
a3ComPollAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComPollAddress.setStatus('mandatory')
a3ComPollAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("ip", 2), ("ipdotted", 3), ("ipname", 4), ("ipx", 5), ("appletalk", 6))).clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComPollAddressType.setStatus('mandatory')
a3ComPollCount = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9999)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComPollCount.setStatus('mandatory')
a3ComPollAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComPollAttempts.setStatus('mandatory')
a3ComPollRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5400)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComPollRate.setStatus('mandatory')
a3ComPollResponseTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComPollResponseTimeOut.setStatus('mandatory')
a3ComPollPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComPollPacketSize.setStatus('mandatory')
a3ComPollSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComPollSourceAddress.setStatus('mandatory')
a3ComPollMinRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComPollMinRoundTripTime.setStatus('mandatory')
a3ComPollAvgRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComPollAvgRoundTripTime.setStatus('mandatory')
a3ComPollMaxRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComPollMaxRoundTripTime.setStatus('mandatory')
a3ComPollFramesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComPollFramesSent.setStatus('mandatory')
a3ComPollFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComPollFramesReceived.setStatus('mandatory')
a3ComPollInformation = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComPollInformation.setStatus('mandatory')
a3ComPollOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComPollOwner.setStatus('mandatory')
a3ComPollReport = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("idle", 1), ("busy", 2), ("badArgument", 3), ("noResource", 4), ("nameLookupFailed", 5), ("hostAlive", 6), ("hostUnreachable", 7), ("hostNotResponding", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComPollReport.setStatus('mandatory')
a3ComPollAction = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noop", 1), ("activate", 2), ("deactivate", 3), ("reset", 4), ("destroy", 5))).clone('noop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComPollAction.setStatus('mandatory')
a3ComPollNextFreeIndex = MibScalar((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComPollNextFreeIndex.setStatus('mandatory')
a3ComPollTableInformation = MibScalar((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComPollTableInformation.setStatus('mandatory')
a3ComPollTableActionAll = MibScalar((1, 3, 6, 1, 4, 1, 43, 29, 4, 22, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noop", 1), ("activate", 2), ("deactivate", 3), ("reset", 4), ("destroy", 5))).clone('noop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3ComPollTableActionAll.setStatus('mandatory')
a3ComPollResponseReceived = NotificationType((1, 3, 6, 1, 4, 1, 43, 29, 4) + (0,61)).setObjects(("A3COM-SWITCHING-SYSTEMS-POLL-MIB", "a3ComPollAddress"), ("A3COM-SWITCHING-SYSTEMS-POLL-MIB", "a3ComPollAddressType"), ("A3COM-SWITCHING-SYSTEMS-POLL-MIB", "a3ComPollAttempts"), ("A3COM-SWITCHING-SYSTEMS-POLL-MIB", "a3ComPollRate"), ("A3COM-SWITCHING-SYSTEMS-POLL-MIB", "a3ComPollFramesSent"), ("A3COM-SWITCHING-SYSTEMS-POLL-MIB", "a3ComPollFramesReceived"))
a3ComPollResponseNotReceived = NotificationType((1, 3, 6, 1, 4, 1, 43, 29, 4) + (0,62)).setObjects(("A3COM-SWITCHING-SYSTEMS-POLL-MIB", "a3ComPollAddress"), ("A3COM-SWITCHING-SYSTEMS-POLL-MIB", "a3ComPollAddressType"), ("A3COM-SWITCHING-SYSTEMS-POLL-MIB", "a3ComPollAttempts"), ("A3COM-SWITCHING-SYSTEMS-POLL-MIB", "a3ComPollRate"), ("A3COM-SWITCHING-SYSTEMS-POLL-MIB", "a3ComPollFramesSent"), ("A3COM-SWITCHING-SYSTEMS-POLL-MIB", "a3ComPollFramesReceived"))
mibBuilder.exportSymbols("A3COM-SWITCHING-SYSTEMS-POLL-MIB", switchingSystemsMibs=switchingSystemsMibs, a3ComPollAttempts=a3ComPollAttempts, a3ComPollAvgRoundTripTime=a3ComPollAvgRoundTripTime, a3ComPollInformation=a3ComPollInformation, a3ComPollResponseNotReceived=a3ComPollResponseNotReceived, a3ComPoll=a3ComPoll, a3ComPollRate=a3ComPollRate, a3ComPollTableActionAll=a3ComPollTableActionAll, a3ComPollFramesReceived=a3ComPollFramesReceived, a3ComPollIndex=a3ComPollIndex, a3ComPollEntry=a3ComPollEntry, a3ComPollMaxRoundTripTime=a3ComPollMaxRoundTripTime, a3ComPollFramesSent=a3ComPollFramesSent, a3ComPollAction=a3ComPollAction, a3ComPollResponseTimeOut=a3ComPollResponseTimeOut, a3ComPollAddress=a3ComPollAddress, a3ComSwitchingSystemsMib=a3ComSwitchingSystemsMib, a3ComPollResponseReceived=a3ComPollResponseReceived, a3ComPollReport=a3ComPollReport, a3ComPollMinRoundTripTime=a3ComPollMinRoundTripTime, a3ComPollPacketSize=a3ComPollPacketSize, a3Com=a3Com, a3ComPollTable=a3ComPollTable, a3ComPollTableInformation=a3ComPollTableInformation, a3ComPollOwner=a3ComPollOwner, a3ComPollNextFreeIndex=a3ComPollNextFreeIndex, a3ComPollSourceAddress=a3ComPollSourceAddress, a3ComPollAddressType=a3ComPollAddressType, a3ComPollCount=a3ComPollCount)
