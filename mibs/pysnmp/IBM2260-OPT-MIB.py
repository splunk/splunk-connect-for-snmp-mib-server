#
# PySNMP MIB module IBM2260-OPT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IBM2260-OPT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:39:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Counter32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64, Bits, NotificationType, Gauge32, ModuleIdentity, Unsigned32, ObjectIdentity, TimeTicks, enterprises, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64", "Bits", "NotificationType", "Gauge32", "ModuleIdentity", "Unsigned32", "ObjectIdentity", "TimeTicks", "enterprises", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
codex = MibIdentifier((1, 3, 6, 1, 4, 1, 449))
cdxProductSpecific = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2))
cdx6500 = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1))
cdx6500Configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2))
cdx6500CfgProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1))
cdx6500PCTPortProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1))
cdx6500PCTStationProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3))
cdx6500Statistics = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3))
cdx6500StatProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1))
cdx6500PSTPortProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1))
cdx6500PSTStationProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 3))
cdx6500Controls = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 4))
class DisplayString(OctetString):
    pass

cdx6500PPCTIBM2260PortTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 20), )
if mibBuilder.loadTexts: cdx6500PPCTIBM2260PortTable.setStatus('mandatory')
cdx6500PPCTIBM2260PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 20, 1), ).setIndexNames((0, "IBM2260-OPT-MIB", "cdx6500IBM2260CfgPortNumber"))
if mibBuilder.loadTexts: cdx6500PPCTIBM2260PortEntry.setStatus('mandatory')
cdx6500IBM2260CfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 54))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260CfgPortNumber.setStatus('mandatory')
cdx6500IBM2260CfgPadType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tpad", 1), ("hpad", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260CfgPadType.setStatus('mandatory')
cdx6500IBM2260CfgPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 20, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 8, 13, 14, 15, 16, 99))).clone(namedValues=NamedValues(("speed1200", 4), ("speed1800", 8), ("speed2400", 13), ("speed4800", 14), ("speed9600", 15), ("speed19200", 16), ("speed7200", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260CfgPortSpeed.setStatus('mandatory')
cdx6500IBM2260CfgConnType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 20, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 16))).clone(namedValues=NamedValues(("simp", 1), ("simpa", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260CfgConnType.setStatus('mandatory')
cdx6500IBM2260CfgNumDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 20, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260CfgNumDevice.setStatus('mandatory')
cdx6500IBM2260CfgServiceTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 20, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260CfgServiceTimer.setStatus('mandatory')
cdx6500IBM2260CfgThreshCtr = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 20, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260CfgThreshCtr.setStatus('mandatory')
cdx6500IBM2260CfgRespTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 20, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260CfgRespTimeout.setStatus('mandatory')
cdx6500IBM2260CfgPortSubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 20, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260CfgPortSubAddr.setStatus('mandatory')
cdx6500IBM2260CfgPortOpt = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 20, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260CfgPortOpt.setStatus('mandatory')
cdx6500IBM2260CfgRestConnDest = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 20, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260CfgRestConnDest.setStatus('mandatory')
cdx6500IBM2260CfgBillRec = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 20, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260CfgBillRec.setStatus('mandatory')
cdx6500IBM2260CfgElectricalInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 20, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("v24", 1), ("v35", 2), ("v36", 3), ("x21", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260CfgElectricalInterfaceType.setStatus('mandatory')
cdx6500IBM2260CfgV24ElectricalInterfaceOption = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 20, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ri", 1), ("tm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260CfgV24ElectricalInterfaceOption.setStatus('mandatory')
cdx6500IBM2260CfgHighSpeedElectricalInterfaceOption = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 20, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("xover", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260CfgHighSpeedElectricalInterfaceOption.setStatus('mandatory')
cdx6500PPSTIBM2260PortTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19), )
if mibBuilder.loadTexts: cdx6500PPSTIBM2260PortTable.setStatus('mandatory')
cdx6500PPSTIBM2260PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1), ).setIndexNames((0, "IBM2260-OPT-MIB", "cdx6500IBM2260StatPortNumber"))
if mibBuilder.loadTexts: cdx6500PPSTIBM2260PortEntry.setStatus('mandatory')
cdx6500IBM2260StatPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 54))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatPortNumber.setStatus('mandatory')
cdx6500IBM2260StatPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatPortStatus.setStatus('mandatory')
cdx6500IBM2260StatPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatPortState.setStatus('mandatory')
cdx6500IBM2260StatPortSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("speed1200", 1), ("speed1800", 2), ("speed2400", 3), ("speed4800", 4), ("speed7200", 5), ("speed9600", 6), ("speed19200", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatPortSpeed.setStatus('mandatory')
cdx6500IBM2260StatPortUtilin = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatPortUtilin.setStatus('mandatory')
cdx6500IBM2260StatPortUtilOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatPortUtilOut.setStatus('mandatory')
cdx6500IBM2260StatParityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatParityErrors.setStatus('mandatory')
cdx6500IBM2260StatOverrunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatOverrunErrors.setStatus('mandatory')
cdx6500IBM2260StatFramingErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatFramingErrors.setStatus('mandatory')
cdx6500IBM2260StatBCCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatBCCErrors.setStatus('mandatory')
cdx6500IBM2260StatNoResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatNoResponse.setStatus('mandatory')
cdx6500IBM2260StatCharInTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatCharInTotal.setStatus('mandatory')
cdx6500IBM2260StatCharOutTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatCharOutTotal.setStatus('mandatory')
cdx6500IBM2260StatCharInSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatCharInSecond.setStatus('mandatory')
cdx6500IBM2260StatCharOutSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatCharOutSecond.setStatus('mandatory')
cdx6500IBM2260StatPosAckIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatPosAckIn.setStatus('mandatory')
cdx6500IBM2260StatPosAckOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatPosAckOut.setStatus('mandatory')
cdx6500IBM2260StatNegAckIn = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatNegAckIn.setStatus('mandatory')
cdx6500IBM2260StatNegAckOut = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatNegAckOut.setStatus('mandatory')
cdx6500IBM2260StatMsgRetran = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 19, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260StatMsgRetran.setStatus('mandatory')
cdx6500SPCTIBM2260StationTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 6), )
if mibBuilder.loadTexts: cdx6500SPCTIBM2260StationTable.setStatus('mandatory')
cdx6500SPCTIBM2260StationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 6, 1), ).setIndexNames((0, "IBM2260-OPT-MIB", "cdx6500IBM2260sCfgPortNum"), (0, "IBM2260-OPT-MIB", "cdx6500IBM2260sCfgStationNum"))
if mibBuilder.loadTexts: cdx6500SPCTIBM2260StationEntry.setStatus('mandatory')
cdx6500IBM2260sCfgPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 54))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260sCfgPortNum.setStatus('mandatory')
cdx6500IBM2260sCfgStationNum = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260sCfgStationNum.setStatus('mandatory')
cdx6500IBM2260sType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("single", 1), ("group", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260sType.setStatus('mandatory')
cdx6500IBM2260sStationAddr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 6, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260sStationAddr1.setStatus('mandatory')
cdx6500IBM2260sStationAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 6, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260sStationAddr2.setStatus('mandatory')
cdx6500IBM2260sCallMnem = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 6, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260sCallMnem.setStatus('mandatory')
cdx6500IBM2260sStationEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 3, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500IBM2260sStationEnable.setStatus('mandatory')
mibBuilder.exportSymbols("IBM2260-OPT-MIB", cdx6500IBM2260StatPortUtilin=cdx6500IBM2260StatPortUtilin, cdx6500IBM2260CfgHighSpeedElectricalInterfaceOption=cdx6500IBM2260CfgHighSpeedElectricalInterfaceOption, cdx6500IBM2260StatCharInSecond=cdx6500IBM2260StatCharInSecond, cdx6500IBM2260StatPortState=cdx6500IBM2260StatPortState, cdx6500IBM2260sStationEnable=cdx6500IBM2260sStationEnable, cdx6500IBM2260StatCharOutTotal=cdx6500IBM2260StatCharOutTotal, cdx6500PPCTIBM2260PortTable=cdx6500PPCTIBM2260PortTable, cdx6500IBM2260sCfgStationNum=cdx6500IBM2260sCfgStationNum, cdx6500IBM2260StatPosAckIn=cdx6500IBM2260StatPosAckIn, cdx6500IBM2260CfgServiceTimer=cdx6500IBM2260CfgServiceTimer, cdx6500Statistics=cdx6500Statistics, cdx6500IBM2260StatNegAckIn=cdx6500IBM2260StatNegAckIn, cdx6500IBM2260sStationAddr1=cdx6500IBM2260sStationAddr1, cdx6500PCTStationProtocolGroup=cdx6500PCTStationProtocolGroup, cdx6500IBM2260CfgBillRec=cdx6500IBM2260CfgBillRec, cdx6500IBM2260StatPortSpeed=cdx6500IBM2260StatPortSpeed, cdx6500IBM2260CfgPadType=cdx6500IBM2260CfgPadType, cdx6500CfgProtocolGroup=cdx6500CfgProtocolGroup, cdx6500IBM2260CfgRespTimeout=cdx6500IBM2260CfgRespTimeout, cdx6500IBM2260CfgThreshCtr=cdx6500IBM2260CfgThreshCtr, cdx6500IBM2260StatFramingErrors=cdx6500IBM2260StatFramingErrors, cdxProductSpecific=cdxProductSpecific, cdx6500IBM2260StatCharInTotal=cdx6500IBM2260StatCharInTotal, cdx6500IBM2260CfgPortSubAddr=cdx6500IBM2260CfgPortSubAddr, cdx6500IBM2260CfgRestConnDest=cdx6500IBM2260CfgRestConnDest, cdx6500IBM2260sCallMnem=cdx6500IBM2260sCallMnem, cdx6500IBM2260sCfgPortNum=cdx6500IBM2260sCfgPortNum, cdx6500PPSTIBM2260PortTable=cdx6500PPSTIBM2260PortTable, cdx6500Controls=cdx6500Controls, cdx6500IBM2260StatParityErrors=cdx6500IBM2260StatParityErrors, cdx6500IBM2260StatPosAckOut=cdx6500IBM2260StatPosAckOut, cdx6500PPSTIBM2260PortEntry=cdx6500PPSTIBM2260PortEntry, cdx6500StatProtocolGroup=cdx6500StatProtocolGroup, cdx6500IBM2260StatPortUtilOut=cdx6500IBM2260StatPortUtilOut, cdx6500IBM2260StatOverrunErrors=cdx6500IBM2260StatOverrunErrors, cdx6500IBM2260StatCharOutSecond=cdx6500IBM2260StatCharOutSecond, cdx6500SPCTIBM2260StationEntry=cdx6500SPCTIBM2260StationEntry, cdx6500IBM2260StatPortStatus=cdx6500IBM2260StatPortStatus, cdx6500IBM2260CfgPortSpeed=cdx6500IBM2260CfgPortSpeed, codex=codex, cdx6500IBM2260StatNegAckOut=cdx6500IBM2260StatNegAckOut, cdx6500PPCTIBM2260PortEntry=cdx6500PPCTIBM2260PortEntry, cdx6500IBM2260CfgElectricalInterfaceType=cdx6500IBM2260CfgElectricalInterfaceType, cdx6500PSTStationProtocolGroup=cdx6500PSTStationProtocolGroup, DisplayString=DisplayString, cdx6500IBM2260StatBCCErrors=cdx6500IBM2260StatBCCErrors, cdx6500IBM2260CfgNumDevice=cdx6500IBM2260CfgNumDevice, cdx6500IBM2260sType=cdx6500IBM2260sType, cdx6500IBM2260StatMsgRetran=cdx6500IBM2260StatMsgRetran, cdx6500IBM2260sStationAddr2=cdx6500IBM2260sStationAddr2, cdx6500IBM2260StatPortNumber=cdx6500IBM2260StatPortNumber, cdx6500IBM2260CfgPortNumber=cdx6500IBM2260CfgPortNumber, cdx6500IBM2260CfgV24ElectricalInterfaceOption=cdx6500IBM2260CfgV24ElectricalInterfaceOption, cdx6500PCTPortProtocolGroup=cdx6500PCTPortProtocolGroup, cdx6500IBM2260CfgPortOpt=cdx6500IBM2260CfgPortOpt, cdx6500IBM2260StatNoResponse=cdx6500IBM2260StatNoResponse, cdx6500Configuration=cdx6500Configuration, cdx6500PSTPortProtocolGroup=cdx6500PSTPortProtocolGroup, cdx6500=cdx6500, cdx6500IBM2260CfgConnType=cdx6500IBM2260CfgConnType, cdx6500SPCTIBM2260StationTable=cdx6500SPCTIBM2260StationTable)
