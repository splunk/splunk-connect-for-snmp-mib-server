#
# PySNMP MIB module A3Com-System-r8-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3Com-System-r8-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:54:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
MacAddress, = mibBuilder.importSymbols("RFC1286-MIB", "MacAddress")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Bits, MibIdentifier, enterprises, Integer32, Gauge32, ModuleIdentity, Counter64, iso, ObjectIdentity, NotificationType, Unsigned32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Bits", "MibIdentifier", "enterprises", "Integer32", "Gauge32", "ModuleIdentity", "Counter64", "iso", "ObjectIdentity", "NotificationType", "Unsigned32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
a3Com = MibIdentifier((1, 3, 6, 1, 4, 1, 43))
brouterMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2))
a3ComSys = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 13))
a3ComSysID = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 13, 1))
a3ComChip = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 13, 2))
a3ComMem = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 13, 3))
a3ComBrd = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 13, 4))
a3ComAudit = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 13, 5))
a3ComTime = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 13, 6))
a3ComAccCtl = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 13, 7))
a3ComSysMisc = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 13, 8))
a3ComFW = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 13, 9))
a3ComBoot = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 13, 10))
a3ComLastBoot = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 13, 11))
a3ComFileMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 13, 12))
a3ComFileList = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 9))
a3ComFmCksum = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 10))
a3ComFileInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 11))
a3ComRecovery = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 2, 13, 13))
class RowStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6))

a3sysVersion = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysVersion.setStatus('mandatory')
a3sysPlatformDescr = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysPlatformDescr.setStatus('mandatory')
a3sysPlatformID = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysPlatformID.setStatus('mandatory')
a3sysCallerID = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysCallerID.setStatus('mandatory')
a3sysChipTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 13, 2, 1), )
if mibBuilder.loadTexts: a3sysChipTable.setStatus('mandatory')
a3sysChipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 13, 2, 1, 1), ).setIndexNames((0, "A3Com-System-r8-MIB", "a3sysChipSlotIndex"), (0, "A3Com-System-r8-MIB", "a3sysChipIndex"))
if mibBuilder.loadTexts: a3sysChipEntry.setStatus('mandatory')
a3sysChipSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysChipSlotIndex.setStatus('mandatory')
a3sysChipIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysChipIndex.setStatus('mandatory')
a3sysChipName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysChipName.setStatus('mandatory')
a3sysChipDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysChipDescr.setStatus('mandatory')
a3sysMemTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 13, 3, 1), )
if mibBuilder.loadTexts: a3sysMemTable.setStatus('mandatory')
a3sysMemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 13, 3, 1, 1), ).setIndexNames((0, "A3Com-System-r8-MIB", "a3sysMemSlotIndex"), (0, "A3Com-System-r8-MIB", "a3sysMemIndex"))
if mibBuilder.loadTexts: a3sysMemEntry.setStatus('mandatory')
a3sysMemSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysMemSlotIndex.setStatus('mandatory')
a3sysMemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysMemIndex.setStatus('mandatory')
a3sysMemType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("ram-instruction", 2), ("ram-data", 3), ("ram-shared", 4), ("rom-fprom", 5), ("rom-eeprom", 6), ("ram-total", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysMemType.setStatus('mandatory')
a3sysMemStartAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysMemStartAdd.setStatus('mandatory')
a3sysMemSize = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysMemSize.setStatus('mandatory')
a3sysSlotNumber = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysSlotNumber.setStatus('mandatory')
a3sysBrdTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 13, 4, 2), )
if mibBuilder.loadTexts: a3sysBrdTable.setStatus('mandatory')
a3sysBrdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 13, 4, 2, 1), ).setIndexNames((0, "A3Com-System-r8-MIB", "a3sysSlotIndex"))
if mibBuilder.loadTexts: a3sysBrdEntry.setStatus('mandatory')
a3sysSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysSlotIndex.setStatus('mandatory')
a3sysBrdDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 4, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysBrdDescr.setStatus('mandatory')
a3sysBrdPathCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 4, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysBrdPathCapacity.setStatus('mandatory')
a3sysBrdOID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 4, 2, 1, 4), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysBrdOID.setStatus('mandatory')
a3sysBrdReset = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysBrdReset.setStatus('mandatory')
a3sysBrdFwVers = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 4, 2, 1, 6), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysBrdFwVers.setStatus('mandatory')
a3sysAuditTrailType = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("universal", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysAuditTrailType.setStatus('mandatory')
a3sysLogServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 5, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysLogServerAddress.setStatus('deprecated')
a3sysDate = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 6, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysDate.setStatus('mandatory')
a3sysDSTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-120, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysDSTime.setStatus('mandatory')
a3sysTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-720, 720))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysTimeZone.setStatus('mandatory')
a3sysRemoteAccess = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysRemoteAccess.setStatus('mandatory')
a3sysTelnetAccess = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysTelnetAccess.setStatus('mandatory')
a3sysConsoleAccess = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysConsoleAccess.setStatus('mandatory')
a3sysSNMPAccess = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enabledTraps", 1), ("enabledNoTraps", 2), ("disabledTraps", 3), ("disabledNoTraps", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysSNMPAccess.setStatus('mandatory')
a3sysSNMPCommTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 5), )
if mibBuilder.loadTexts: a3sysSNMPCommTable.setStatus('mandatory')
a3sysSNMPCommEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 5, 1), ).setIndexNames((0, "A3Com-System-r8-MIB", "a3sysSNMPCommString"))
if mibBuilder.loadTexts: a3sysSNMPCommEntry.setStatus('mandatory')
a3sysSNMPCommString = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysSNMPCommString.setStatus('mandatory')
a3sysSNMPCommAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("readOnly", 1), ("readWrite", 2))).clone('readOnly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysSNMPCommAccess.setStatus('mandatory')
a3sysSNMPCommTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("genericOnly", 1), ("authenOnly", 2), ("allTraps", 3), ("noTraps", 4))).clone('noTraps')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysSNMPCommTrap.setStatus('mandatory')
a3sysSNMPCommStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 5, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysSNMPCommStatus.setStatus('mandatory')
a3sysSNMPMgrTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 6), )
if mibBuilder.loadTexts: a3sysSNMPMgrTable.setStatus('mandatory')
a3sysSNMPMgrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 6, 1), ).setIndexNames((0, "A3Com-System-r8-MIB", "a3sysSNMPMgrCommString"), (0, "A3Com-System-r8-MIB", "a3sysSNMPMgrAddress"))
if mibBuilder.loadTexts: a3sysSNMPMgrEntry.setStatus('mandatory')
a3sysSNMPMgrCommString = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysSNMPMgrCommString.setStatus('mandatory')
a3sysSNMPMgrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 6, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysSNMPMgrAddress.setStatus('mandatory')
a3sysSNMPMgrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 6, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysSNMPMgrMask.setStatus('mandatory')
a3sysSNMPMgrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 6, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysSNMPMgrStatus.setStatus('mandatory')
a3sysTelnetMgrTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 7), )
if mibBuilder.loadTexts: a3sysTelnetMgrTable.setStatus('mandatory')
a3sysTelnetMgrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 7, 1), ).setIndexNames((0, "A3Com-System-r8-MIB", "a3sysTelnetMgrAddress"))
if mibBuilder.loadTexts: a3sysTelnetMgrEntry.setStatus('mandatory')
a3sysTelnetMgrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysTelnetMgrAddress.setStatus('mandatory')
a3sysTelnetMgrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 7, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysTelnetMgrStatus.setStatus('mandatory')
a3sysPasswordTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 8), )
if mibBuilder.loadTexts: a3sysPasswordTable.setStatus('mandatory')
a3sysPasswordEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 8, 1), ).setIndexNames((0, "A3Com-System-r8-MIB", "a3sysUserName"), (0, "A3Com-System-r8-MIB", "a3sysOldPassword"))
if mibBuilder.loadTexts: a3sysPasswordEntry.setStatus('mandatory')
a3sysPwStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysPwStatus.setStatus('mandatory')
a3sysUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysUserName.setStatus('mandatory')
a3sysUserLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("monitor", 1), ("secureMonitor", 2), ("manager", 3), ("specialist", 4), ("security", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUserLevel.setStatus('mandatory')
a3sysOldPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 8, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysOldPassword.setStatus('mandatory')
a3sysNewPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 8, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysNewPassword.setStatus('mandatory')
a3sysSnmpPasswordCtl = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 7, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysSnmpPasswordCtl.setStatus('mandatory')
a3sysNetMapTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysNetMapTime.setStatus('mandatory')
a3sysUIBinary = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 8, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUIBinary.setStatus('mandatory')
a3sysChangeTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 8, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysChangeTimestamp.setStatus('mandatory')
a3sysCpuUtil = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 8, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysCpuUtil.setStatus('mandatory')
a3sysCpuBrdMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 8, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysCpuBrdMacAddr.setStatus('mandatory')
a3sysExpMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 8, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysExpMacAddr.setStatus('mandatory')
a3sysVportTimestamp = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 8, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysVportTimestamp.setStatus('mandatory')
a3sysDefDrive = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 8, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("driveA", 1), ("driveB", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysDefDrive.setStatus('mandatory')
a3sysDefDriveType = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("floppy", 1), ("flash", 2), ("unknown", 3), ("noDrive", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysDefDriveType.setStatus('mandatory')
a3sysDriveStatus = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 8, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noDrives", 1), ("driveA", 2), ("driveB", 3), ("driveAB", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysDriveStatus.setStatus('mandatory')
a3sysBogusDhcpSvr = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 8, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysBogusDhcpSvr.setStatus('mandatory')
a3sysNb2EepromVers = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 8, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysNb2EepromVers.setStatus('mandatory')
a3sysX25Conns = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 8, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysX25Conns.setStatus('mandatory')
a3sysFwSerBaudCons = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("unknown", 1), ("bps110", 2), ("bps300", 3), ("bps600", 4), ("bps1200", 5), ("bps2400", 6), ("bps4800", 7), ("bps9600", 8), ("bps19200", 9), ("bps38400", 10), ("bps57600", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysFwSerBaudCons.setStatus('mandatory')
a3sysFwSerBaudAux = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknown", 1), ("bps110", 2), ("bps300", 3), ("bps600", 4), ("bps1200", 5), ("bps2400", 6), ("bps4800", 7), ("bps9600", 8), ("bps19200", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysFwSerBaudAux.setStatus('mandatory')
a3sysFwSelfTest = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 9, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("skip", 1), ("testOnce", 2), ("other", 3), ("loop", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysFwSelfTest.setStatus('mandatory')
a3sysReBoot = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("stdReboot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysReBoot.setStatus('mandatory')
a3sysTestBootTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysTestBootTime.setStatus('mandatory')
a3sysStartUpAction = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("monitor", 1), ("userListOnce", 2), ("userListForever", 3), ("local", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysStartUpAction.setStatus('mandatory')
a3sysTestRecoveryTimer = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysTestRecoveryTimer.setStatus('mandatory')
a3sysDirectedReBoots = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysDirectedReBoots.setStatus('mandatory')
a3sysExceptionReBoots = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysExceptionReBoots.setStatus('mandatory')
a3sysBootDump = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noDump", 1), ("monitor", 2), ("localDevice", 3), ("userList", 4), ("network", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysBootDump.setStatus('mandatory')
a3sysBootSources = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("primary", 1), ("primaryAndSecondary", 2), ("testWithPrimaryBackup", 3), ("secondary", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysBootSources.setStatus('mandatory')
a3sysUserBootListTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9), )
if mibBuilder.loadTexts: a3sysUserBootListTable.setStatus('mandatory')
a3sysUserBootListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1), ).setIndexNames((0, "A3Com-System-r8-MIB", "a3sysUblSource"))
if mibBuilder.loadTexts: a3sysUserBootListEntry.setStatus('mandatory')
a3sysUblSource = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2), ("test", 3), ("dump", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysUblSource.setStatus('mandatory')
a3sysUblDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("localMediaA", 1), ("localMediaB", 2), ("network", 3), ("monitor", 4), ("other", 5), ("auto", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblDevice.setStatus('mandatory')
a3sysUblFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblFileName.setStatus('mandatory')
a3sysUblNetFile = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblNetFile.setStatus('deprecated')
a3sysUblSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblSlot.setStatus('mandatory')
a3sysUblInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("interfaceA", 2), ("interfaceB", 3))).clone('interfaceA')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblInterface.setStatus('mandatory')
a3sysUblMaxRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblMaxRetries.setStatus('mandatory')
a3sysUblConfigFileDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bootDevice", 1), ("local", 2), ("network", 3), ("other", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblConfigFileDevice.setStatus('mandatory')
a3sysUblConfigFilePath = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblConfigFilePath.setStatus('mandatory')
a3sysUblConfigProt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fap", 1), ("ftp", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysUblConfigProt.setStatus('mandatory')
a3sysUblConfigUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblConfigUserName.setStatus('mandatory')
a3sysUblConfigPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblConfigPassword.setStatus('mandatory')
a3sysUblConfigAcct = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblConfigAcct.setStatus('mandatory')
a3sysUblMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("cpu-module", 1), ("io-module", 2), ("other", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblMacAddress.setStatus('mandatory')
a3sysUblCanonicalFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("canonical", 2), ("nonCanonical", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblCanonicalFlag.setStatus('mandatory')
a3sysUblRemoteProt = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notApplicable", 1), ("ppp", 2), ("frameRelay", 3), ("auto", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblRemoteProt.setStatus('mandatory')
a3sysUblBaudRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("unknown", 1), ("bps9600", 2), ("kbps19", 3), ("kbps38", 4), ("kbps56", 5), ("kbps64", 6), ("kbps128", 7), ("kbps256", 8), ("kbps448", 9), ("kbps1536", 10), ("kbps2048", 11), ("mbps4", 12), ("mbps16", 13)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblBaudRate.setStatus('mandatory')
a3sysUblClockSource = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("internal", 1), ("external", 2), ("unknown", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblClockSource.setStatus('mandatory')
a3sysUblConnectorType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("rs232", 2), ("v35", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblConnectorType.setStatus('mandatory')
a3sysUblWanAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblWanAddress.setStatus('mandatory')
a3sysUblClientIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 21), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblClientIpAddr.setStatus('mandatory')
a3sysUblServerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 22), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblServerIpAddr.setStatus('mandatory')
a3sysUblGwIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 23), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblGwIpAddr.setStatus('mandatory')
a3sysUblConfigFileIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 24), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblConfigFileIpAddr.setStatus('mandatory')
a3sysUblIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 25), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblIpMask.setStatus('mandatory')
a3sysUblAddressDiscovery = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("bootp", 2), ("configAddr", 3), ("bootpRarp", 4), ("rarp", 5), ("rarpBootp", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblAddressDiscovery.setStatus('mandatory')
a3sysUblPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 9, 1, 27), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysUblPassword.setStatus('mandatory')
a3sysIioBootTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 10), )
if mibBuilder.loadTexts: a3sysIioBootTable.setStatus('mandatory')
a3sysIioBootEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 10, 1), ).setIndexNames((0, "A3Com-System-r8-MIB", "a3sysIioBootSlot"))
if mibBuilder.loadTexts: a3sysIioBootEntry.setStatus('mandatory')
a3sysIioBootSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysIioBootSlot.setStatus('mandatory')
a3sysIioBootFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 10, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysIioBootFileName.setStatus('mandatory')
a3sysIioBootState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("empty", 1), ("up", 2), ("booting", 3), ("recovering", 4), ("dumping", 5), ("halted", 6), ("selfTestFail", 7), ("error", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysIioBootState.setStatus('mandatory')
a3sysIioBootTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 10, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysIioBootTime.setStatus('mandatory')
a3sysIioBootImage = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 10, 10, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysIioBootImage.setStatus('mandatory')
a3sysLastBootSource = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("primary", 1), ("secondary", 2), ("monitor", 3), ("test", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysLastBootSource.setStatus('mandatory')
a3sysLastBootError = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 11, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("unknownLocalAddress", 2), ("unknownServerAddress", 3), ("noServerResponse", 4), ("fileTransferFailed", 5), ("imageNotFound", 6), ("imageInvalid", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysLastBootError.setStatus('mandatory')
a3sysLastBootDate = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 11, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysLastBootDate.setStatus('mandatory')
a3sysLbConfigFileIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 11, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysLbConfigFileIpAddr.setStatus('mandatory')
a3sysLbGwIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 11, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysLbGwIpAddr.setStatus('mandatory')
a3sysLbIpMask = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 11, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysLbIpMask.setStatus('mandatory')
a3sysLbConfigDevice = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 11, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bootDevice", 1), ("local", 2), ("network", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysLbConfigDevice.setStatus('mandatory')
a3sysLbConfigFilePath = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 11, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysLbConfigFilePath.setStatus('mandatory')
a3sysLbConfigUserName = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 11, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysLbConfigUserName.setStatus('mandatory')
a3sysFmOperation = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("other", 1), ("copy", 2), ("do", 3), ("delete", 4), ("rename", 5), ("directory", 6), ("format", 7), ("copySystem", 8), ("checksum", 9), ("abortCopy", 10), ("makeDir", 11), ("rmDir", 12), ("getFileInfo", 13), ("ftpGet", 14), ("ftpPut", 15), ("cleanFlash", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysFmOperation.setStatus('mandatory')
a3sysFmSourceIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysFmSourceIpAddr.setStatus('mandatory')
a3sysFmSourceFile = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysFmSourceFile.setStatus('mandatory')
a3sysFmTargetIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysFmTargetIpAddr.setStatus('mandatory')
a3sysFmTargetFile = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysFmTargetFile.setStatus('mandatory')
a3sysFmStatus = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("inProgress", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysFmStatus.setStatus('mandatory')
a3sysFmTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysFmTimeStamp.setStatus('mandatory')
a3sysFmError = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19))).clone(namedValues=NamedValues(("none", 1), ("successful", 2), ("inProgress", 3), ("badSourceAddr", 4), ("badSourceFile", 5), ("badTargetAddr", 6), ("badTargetFile", 7), ("noResponse", 8), ("noFile", 9), ("noSpace", 10), ("noPermission", 11), ("writeError", 12), ("timeout", 13), ("badChecksum", 14), ("badOperation", 15), ("aborted", 16), ("other", 17), ("badDefaultDrv", 18), ("badTargetPort", 19)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysFmError.setStatus('mandatory')
a3sysDfTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 9, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysDfTime.setStatus('mandatory')
a3sysDfPath = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 9, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysDfPath.setStatus('mandatory')
a3sysDfTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 9, 3), )
if mibBuilder.loadTexts: a3sysDfTable.setStatus('mandatory')
a3sysDfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 9, 3, 1), ).setIndexNames((0, "A3Com-System-r8-MIB", "a3sysDfName"))
if mibBuilder.loadTexts: a3sysDfEntry.setStatus('mandatory')
a3sysDfName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 9, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysDfName.setStatus('mandatory')
a3sysDfDir = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 9, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("file", 1), ("directory", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysDfDir.setStatus('mandatory')
a3ComDfTotalSpace = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 9, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComDfTotalSpace.setStatus('mandatory')
a3ComDfAvailableSpace = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 9, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3ComDfAvailableSpace.setStatus('mandatory')
a3sysFmCksum = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 10, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysFmCksum.setStatus('mandatory')
a3sysFmCksumFile = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 10, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysFmCksumFile.setStatus('mandatory')
a3sysFmCksumTime = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 10, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysFmCksumTime.setStatus('mandatory')
a3sysFiName = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 11, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysFiName.setStatus('mandatory')
a3sysFiDate = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 11, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysFiDate.setStatus('mandatory')
a3sysFiTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 11, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysFiTimeStamp.setStatus('mandatory')
a3sysFmSize = MibScalar((1, 3, 6, 1, 4, 1, 43, 2, 13, 12, 11, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysFmSize.setStatus('mandatory')
a3sysIioRecoveryTable = MibTable((1, 3, 6, 1, 4, 1, 43, 2, 13, 13, 1), )
if mibBuilder.loadTexts: a3sysIioRecoveryTable.setStatus('mandatory')
a3sysIioRecoveryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 2, 13, 13, 1, 1), ).setIndexNames((0, "A3Com-System-r8-MIB", "a3sysIioRecoverySlot"))
if mibBuilder.loadTexts: a3sysIioRecoveryEntry.setStatus('mandatory')
a3sysIioRecoverySlot = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3sysIioRecoverySlot.setStatus('mandatory')
a3sysIioRecoveryProcedure = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 13, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("halt", 1), ("haltSystem", 2), ("reboot", 3), ("rebootSystem", 4), ("dumpAndReboot", 5), ("selectiveDumpAndReboot", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysIioRecoveryProcedure.setStatus('mandatory')
a3sysIioRecoverySelect = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 2, 13, 13, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a3sysIioRecoverySelect.setStatus('mandatory')
a3BogusDhcpSvr = NotificationType((1, 3, 6, 1, 4, 1, 43) + (0,100)).setObjects(("A3Com-System-r8-MIB", "a3sysBogusDhcpSvr"))
mibBuilder.exportSymbols("A3Com-System-r8-MIB", a3sysPlatformID=a3sysPlatformID, a3sysUserBootListTable=a3sysUserBootListTable, a3sysUblServerIpAddr=a3sysUblServerIpAddr, a3sysReBoot=a3sysReBoot, a3sysChipSlotIndex=a3sysChipSlotIndex, a3sysPlatformDescr=a3sysPlatformDescr, a3sysTelnetMgrAddress=a3sysTelnetMgrAddress, a3sysFmCksum=a3sysFmCksum, a3sysFmCksumFile=a3sysFmCksumFile, a3sysBogusDhcpSvr=a3sysBogusDhcpSvr, a3sysFiTimeStamp=a3sysFiTimeStamp, a3sysSNMPMgrCommString=a3sysSNMPMgrCommString, a3sysMemEntry=a3sysMemEntry, a3sysUblClientIpAddr=a3sysUblClientIpAddr, a3sysFwSerBaudCons=a3sysFwSerBaudCons, a3sysChipDescr=a3sysChipDescr, a3sysUserName=a3sysUserName, a3sysUblCanonicalFlag=a3sysUblCanonicalFlag, a3ComDfTotalSpace=a3ComDfTotalSpace, a3sysSNMPCommAccess=a3sysSNMPCommAccess, a3sysFmCksumTime=a3sysFmCksumTime, a3sysUblConfigUserName=a3sysUblConfigUserName, a3sysSNMPCommTrap=a3sysSNMPCommTrap, a3sysTelnetMgrStatus=a3sysTelnetMgrStatus, a3sysIioRecoverySelect=a3sysIioRecoverySelect, a3sysDfDir=a3sysDfDir, brouterMIB=brouterMIB, a3ComSysID=a3ComSysID, a3sysSlotIndex=a3sysSlotIndex, a3sysTelnetAccess=a3sysTelnetAccess, a3sysSNMPMgrEntry=a3sysSNMPMgrEntry, a3sysFmStatus=a3sysFmStatus, a3sysLbConfigFilePath=a3sysLbConfigFilePath, a3sysIioRecoverySlot=a3sysIioRecoverySlot, a3sysUblMaxRetries=a3sysUblMaxRetries, a3sysTelnetMgrEntry=a3sysTelnetMgrEntry, a3sysUblConfigFileIpAddr=a3sysUblConfigFileIpAddr, a3sysUblMacAddress=a3sysUblMacAddress, a3sysSnmpPasswordCtl=a3sysSnmpPasswordCtl, a3sysRemoteAccess=a3sysRemoteAccess, a3sysFmSize=a3sysFmSize, a3sysUblAddressDiscovery=a3sysUblAddressDiscovery, a3sysCpuBrdMacAddr=a3sysCpuBrdMacAddr, a3ComChip=a3ComChip, a3sysUblConfigFilePath=a3sysUblConfigFilePath, a3sysMemStartAdd=a3sysMemStartAdd, a3sysStartUpAction=a3sysStartUpAction, a3sysUserBootListEntry=a3sysUserBootListEntry, a3sysDfTable=a3sysDfTable, a3sysFmTimeStamp=a3sysFmTimeStamp, a3sysDfPath=a3sysDfPath, a3ComFmCksum=a3ComFmCksum, a3sysBrdDescr=a3sysBrdDescr, a3sysOldPassword=a3sysOldPassword, a3sysTimeZone=a3sysTimeZone, a3ComTime=a3ComTime, a3sysUblIpMask=a3sysUblIpMask, a3sysIioBootSlot=a3sysIioBootSlot, a3sysPwStatus=a3sysPwStatus, a3sysChipIndex=a3sysChipIndex, a3ComBoot=a3ComBoot, a3sysPasswordEntry=a3sysPasswordEntry, a3BogusDhcpSvr=a3BogusDhcpSvr, a3sysLastBootDate=a3sysLastBootDate, a3sysUblConfigAcct=a3sysUblConfigAcct, a3sysLbConfigUserName=a3sysLbConfigUserName, a3sysSNMPCommString=a3sysSNMPCommString, a3sysSNMPCommTable=a3sysSNMPCommTable, a3sysLbGwIpAddr=a3sysLbGwIpAddr, a3ComLastBoot=a3ComLastBoot, a3sysSNMPMgrTable=a3sysSNMPMgrTable, a3sysCpuUtil=a3sysCpuUtil, a3sysMemType=a3sysMemType, a3sysIioRecoveryProcedure=a3sysIioRecoveryProcedure, a3sysUblGwIpAddr=a3sysUblGwIpAddr, a3sysX25Conns=a3sysX25Conns, a3sysVportTimestamp=a3sysVportTimestamp, a3sysConsoleAccess=a3sysConsoleAccess, a3sysDfEntry=a3sysDfEntry, a3ComAccCtl=a3ComAccCtl, a3sysLbConfigFileIpAddr=a3sysLbConfigFileIpAddr, a3sysLastBootSource=a3sysLastBootSource, a3sysSNMPMgrStatus=a3sysSNMPMgrStatus, a3sysVersion=a3sysVersion, a3sysFmError=a3sysFmError, a3sysIioBootTable=a3sysIioBootTable, a3sysUblConfigPassword=a3sysUblConfigPassword, a3sysNb2EepromVers=a3sysNb2EepromVers, a3sysNewPassword=a3sysNewPassword, a3sysUblConfigFileDevice=a3sysUblConfigFileDevice, a3ComSysMisc=a3ComSysMisc, a3ComFW=a3ComFW, a3sysBrdTable=a3sysBrdTable, a3sysUIBinary=a3sysUIBinary, a3sysExpMacAddr=a3sysExpMacAddr, a3sysBootSources=a3sysBootSources, a3Com=a3Com, a3sysIioBootImage=a3sysIioBootImage, a3ComSys=a3ComSys, a3sysSNMPMgrMask=a3sysSNMPMgrMask, a3sysBrdOID=a3sysBrdOID, a3ComFileList=a3ComFileList, a3sysSNMPCommEntry=a3sysSNMPCommEntry, a3sysUblNetFile=a3sysUblNetFile, a3sysFmTargetFile=a3sysFmTargetFile, a3sysLbIpMask=a3sysLbIpMask, a3sysUblInterface=a3sysUblInterface, a3sysChangeTimestamp=a3sysChangeTimestamp, a3sysFwSerBaudAux=a3sysFwSerBaudAux, a3sysLbConfigDevice=a3sysLbConfigDevice, a3sysDfName=a3sysDfName, a3sysBrdEntry=a3sysBrdEntry, a3sysIioBootFileName=a3sysIioBootFileName, a3sysSNMPAccess=a3sysSNMPAccess, a3sysUblFileName=a3sysUblFileName, a3sysLastBootError=a3sysLastBootError, a3sysBrdReset=a3sysBrdReset, a3sysTestRecoveryTimer=a3sysTestRecoveryTimer, a3sysFmSourceFile=a3sysFmSourceFile, RowStatus=RowStatus, a3sysUblConnectorType=a3sysUblConnectorType, a3ComFileInfo=a3ComFileInfo, a3sysDriveStatus=a3sysDriveStatus, a3sysFiName=a3sysFiName, a3sysUblDevice=a3sysUblDevice, a3sysDfTime=a3sysDfTime, a3sysFwSelfTest=a3sysFwSelfTest, a3sysTestBootTime=a3sysTestBootTime, a3sysUblWanAddress=a3sysUblWanAddress, a3sysExceptionReBoots=a3sysExceptionReBoots, a3sysChipName=a3sysChipName, a3sysDefDrive=a3sysDefDrive, a3sysUblClockSource=a3sysUblClockSource, a3sysLogServerAddress=a3sysLogServerAddress, a3sysFmSourceIpAddr=a3sysFmSourceIpAddr, a3ComDfAvailableSpace=a3ComDfAvailableSpace, a3sysChipEntry=a3sysChipEntry, a3sysFmOperation=a3sysFmOperation, a3ComMem=a3ComMem, a3sysMemSlotIndex=a3sysMemSlotIndex, a3sysChipTable=a3sysChipTable, a3ComAudit=a3ComAudit, a3sysDate=a3sysDate, a3sysIioBootTime=a3sysIioBootTime, a3sysIioBootEntry=a3sysIioBootEntry, a3sysFiDate=a3sysFiDate, a3ComBrd=a3ComBrd, a3sysUblSource=a3sysUblSource, a3ComFileMgmt=a3ComFileMgmt, a3sysDefDriveType=a3sysDefDriveType, a3sysTelnetMgrTable=a3sysTelnetMgrTable, a3sysSNMPCommStatus=a3sysSNMPCommStatus, a3sysPasswordTable=a3sysPasswordTable, a3sysMemIndex=a3sysMemIndex, a3sysIioRecoveryTable=a3sysIioRecoveryTable, a3sysUblBaudRate=a3sysUblBaudRate, a3sysCallerID=a3sysCallerID, a3sysDSTime=a3sysDSTime, a3sysSNMPMgrAddress=a3sysSNMPMgrAddress, a3sysBrdPathCapacity=a3sysBrdPathCapacity, a3sysFmTargetIpAddr=a3sysFmTargetIpAddr, a3sysUblPassword=a3sysUblPassword, a3sysAuditTrailType=a3sysAuditTrailType, a3sysBootDump=a3sysBootDump, a3sysUblRemoteProt=a3sysUblRemoteProt, a3sysUblConfigProt=a3sysUblConfigProt, a3sysIioRecoveryEntry=a3sysIioRecoveryEntry, a3sysUblSlot=a3sysUblSlot, a3ComRecovery=a3ComRecovery, a3sysMemTable=a3sysMemTable, a3sysIioBootState=a3sysIioBootState, a3sysMemSize=a3sysMemSize, a3sysUserLevel=a3sysUserLevel, a3sysDirectedReBoots=a3sysDirectedReBoots, a3sysSlotNumber=a3sysSlotNumber, a3sysNetMapTime=a3sysNetMapTime, a3sysBrdFwVers=a3sysBrdFwVers)
