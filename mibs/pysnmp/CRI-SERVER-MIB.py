#
# PySNMP MIB module CRI-SERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CRI-SERVER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:12:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, iso, Unsigned32, TimeTicks, Gauge32, Counter64, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, NotificationType, NotificationType, MibIdentifier, Bits, enterprises, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "Unsigned32", "TimeTicks", "Gauge32", "Counter64", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "NotificationType", "NotificationType", "MibIdentifier", "Bits", "enterprises", "Integer32", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
sun = MibIdentifier((1, 3, 6, 1, 4, 1, 34))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 34, 2))
class DisplayString(OctetString):
    pass

class Boolean(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("true", 1), ("false", 2))

class YesNo(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("yes", 1), ("no", 2))

general = MibIdentifier((1, 3, 6, 1, 4, 1, 34, 2, 1))
platform = MibIdentifier((1, 3, 6, 1, 4, 1, 34, 2, 1, 1))
platformType = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ue10000", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: platformType.setStatus('mandatory')
platformName = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: platformName.setStatus('mandatory')
platformAmbientTemp = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: platformAmbientTemp.setStatus('mandatory')
platformReset = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: platformReset.setStatus('mandatory')
platformInterconnectClockFreq = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: platformInterconnectClockFreq.setStatus('mandatory')
platformProcClockFreq = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: platformProcClockFreq.setStatus('mandatory')
platformJtagClockFreq = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: platformJtagClockFreq.setStatus('mandatory')
platformTargetInterconnectClockFreq = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(40000000, 120000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: platformTargetInterconnectClockFreq.setStatus('mandatory')
platformTargetProcClockMultiple = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("two-to-one", 1), ("three-to-one", 2), ("three-to-two", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: platformTargetProcClockMultiple.setStatus('mandatory')
platformTargetJtagClockFreq = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2000000, 12000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: platformTargetJtagClockFreq.setStatus('mandatory')
platformMasterConBrd = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: platformMasterConBrd.setStatus('mandatory')
platformSysClkConBrd = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: platformSysClkConBrd.setStatus('mandatory')
conf = MibIdentifier((1, 3, 6, 1, 4, 1, 34, 2, 1, 2))
confNumDomain = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confNumDomain.setStatus('mandatory')
confNumSysBrd = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confNumSysBrd.setStatus('mandatory')
confNumProc = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confNumProc.setStatus('mandatory')
confNumConBrd = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confNumConBrd.setStatus('mandatory')
confNumCenterplane = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confNumCenterplane.setStatus('mandatory')
confNumSuppBrd = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confNumSuppBrd.setStatus('mandatory')
confNumIoCab = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confNumIoCab.setStatus('mandatory')
confNumFanTray = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confNumFanTray.setStatus('mandatory')
confNumBulkPower = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confNumBulkPower.setStatus('mandatory')
confNumSysBrdPower = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confNumSysBrdPower.setStatus('mandatory')
confSysBrdList = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confSysBrdList.setStatus('mandatory')
confProcList = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confProcList.setStatus('mandatory')
confConBrdList = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confConBrdList.setStatus('mandatory')
confCenterplaneList = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confCenterplaneList.setStatus('mandatory')
confSuppBrdList = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confSuppBrdList.setStatus('mandatory')
confIoCabList = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confIoCabList.setStatus('mandatory')
confFanTrayList = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confFanTrayList.setStatus('mandatory')
confBulkPowerList = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confBulkPowerList.setStatus('mandatory')
confSysBrdPowerList = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confSysBrdPowerList.setStatus('mandatory')
confMaxProcPerSysBrd = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confMaxProcPerSysBrd.setStatus('mandatory')
confMaxFanPerTray = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confMaxFanPerTray.setStatus('mandatory')
confMaxLEDPerFanTray = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confMaxLEDPerFanTray.setStatus('mandatory')
confMaxLEDPerBulkPower = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confMaxLEDPerBulkPower.setStatus('mandatory')
confMaxLEDPerSysBrd = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: confMaxLEDPerSysBrd.setStatus('mandatory')
confMemAddrMap = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 1, 2, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: confMemAddrMap.setStatus('mandatory')
domainTable = MibTable((1, 3, 6, 1, 4, 1, 34, 2, 1, 3), )
if mibBuilder.loadTexts: domainTable.setStatus('mandatory')
domainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34, 2, 1, 3, 1), ).setIndexNames((0, "CRI-SERVER-MIB", "domainIndex"))
if mibBuilder.loadTexts: domainEntry.setStatus('mandatory')
domainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: domainIndex.setStatus('mandatory')
domainName = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: domainName.setStatus('mandatory')
domainNumSysBrd = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: domainNumSysBrd.setStatus('mandatory')
domainSysBrdList = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: domainSysBrdList.setStatus('mandatory')
domainOSVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: domainOSVersion.setStatus('mandatory')
domainProcList = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: domainProcList.setStatus('mandatory')
domainBootProc = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: domainBootProc.setStatus('mandatory')
domainInterruptVector = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 3, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: domainInterruptVector.setStatus('mandatory')
domainSysBrdConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 3, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: domainSysBrdConfig.setStatus('mandatory')
domainProcConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 3, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: domainProcConfig.setStatus('mandatory')
domainABusConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 3, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: domainABusConfig.setStatus('mandatory')
domainDBusConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 3, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: domainDBusConfig.setStatus('mandatory')
sysBrdGenTable = MibTable((1, 3, 6, 1, 4, 1, 34, 2, 1, 4), )
if mibBuilder.loadTexts: sysBrdGenTable.setStatus('mandatory')
sysBrdGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34, 2, 1, 4, 1), ).setIndexNames((0, "CRI-SERVER-MIB", "sysBrdGenIndex"))
if mibBuilder.loadTexts: sysBrdGenEntry.setStatus('mandatory')
sysBrdGenIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdGenIndex.setStatus('mandatory')
sysBrdGenNum = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdGenNum.setStatus('mandatory')
sysBrdGenPower = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdGenPower.setStatus('mandatory')
sysBrdGenNumProc = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdGenNumProc.setStatus('mandatory')
sysBrdGenProcList = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdGenProcList.setStatus('mandatory')
sysBrdGenReset = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysBrdGenReset.setStatus('mandatory')
sysBrdGenPowerControl = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysBrdGenPowerControl.setStatus('mandatory')
procStateGenTable = MibTable((1, 3, 6, 1, 4, 1, 34, 2, 1, 5), )
if mibBuilder.loadTexts: procStateGenTable.setStatus('mandatory')
procStateGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34, 2, 1, 5, 1), ).setIndexNames((0, "CRI-SERVER-MIB", "procStateGenIndex"))
if mibBuilder.loadTexts: procStateGenEntry.setStatus('mandatory')
procStateGenIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: procStateGenIndex.setStatus('mandatory')
procStateGenNum = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: procStateGenNum.setStatus('mandatory')
procStateGenHeartbeat = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: procStateGenHeartbeat.setStatus('mandatory')
procStateGenPgmSignature = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("post", 1), ("download-helper", 2), ("obp", 3), ("os", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: procStateGenPgmSignature.setStatus('mandatory')
procStateGenPgmState = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("run", 1), ("exit", 2), ("prerun", 3), ("arbstop", 4), ("reset", 5), ("poweroff", 6), ("detached", 7), ("callback", 8), ("watchdog", 9), ("watchdog-sync", 10), ("offline", 11), ("booting", 12), ("unknown", 13), ("xir", 14), ("xir-sync", 15), ("sir", 16), ("sir-sync", 17), ("redmode", 18), ("redmode-sync", 19), ("quiesced", 20), ("quiesce-in-progress", 21), ("resume-in-progress", 22), ("none", 23)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: procStateGenPgmState.setStatus('mandatory')
procStateGenPgmSubState = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("exit-halt", 1), ("exit-environ", 2), ("exit-reboot", 3), ("exit-panic1", 4), ("exit-panic2", 5), ("exit-hung", 6), ("exit-watch", 7), ("exit-panic-reboot", 8), ("exit-watchdog-reboot", 9), ("exit-soft-init-reset", 10), ("exit-extern-init-reset", 11), ("exit-redmode-reboot", 12), ("exit-obp-reset", 13), ("exit-null", 14), ("unknown", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: procStateGenPgmSubState.setStatus('mandatory')
procStateGenTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: procStateGenTemp.setStatus('mandatory')
procCommGenTable = MibTable((1, 3, 6, 1, 4, 1, 34, 2, 1, 6), )
if mibBuilder.loadTexts: procCommGenTable.setStatus('mandatory')
procCommGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34, 2, 1, 6, 1), ).setIndexNames((0, "CRI-SERVER-MIB", "procCommGenIndex"))
if mibBuilder.loadTexts: procCommGenEntry.setStatus('mandatory')
procCommGenIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: procCommGenIndex.setStatus('mandatory')
procCommGenNum = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: procCommGenNum.setStatus('mandatory')
procCommGenSspMboxLen = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 6, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: procCommGenSspMboxLen.setStatus('mandatory')
procCommGenSspMboxFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: procCommGenSspMboxFlag.setStatus('mandatory')
procCommGenSspMboxCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("command-success", 1), ("goto-obp", 2), ("goto-panic", 3), ("environ", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: procCommGenSspMboxCmd.setStatus('mandatory')
procCommGenSspMboxData = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 6, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: procCommGenSspMboxData.setStatus('mandatory')
procCommGenHostMboxLen = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 6, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: procCommGenHostMboxLen.setStatus('mandatory')
procCommGenHostMboxFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: procCommGenHostMboxFlag.setStatus('mandatory')
procCommGenHostMboxCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("command-success", 1), ("goto-obp", 2), ("goto-panic", 3), ("environ", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: procCommGenHostMboxCmd.setStatus('mandatory')
procCommGenHostMboxData = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 6, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: procCommGenHostMboxData.setStatus('mandatory')
procCommGenObpMboxLen = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 6, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: procCommGenObpMboxLen.setStatus('mandatory')
procCommGenObpMboxFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 6, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: procCommGenObpMboxFlag.setStatus('mandatory')
procCommGenObpMboxCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 6, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("release-slave-cpu", 1), ("time-of-day", 2), ("get-eeprom-image", 3), ("put-eeprom-image", 4), ("invalidate-reboot-info", 5), ("move-cpu0", 6), ("get-ap-database-loc", 7), ("store-boot-path-info", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: procCommGenObpMboxCmd.setStatus('mandatory')
procCommGenObpMboxData = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 6, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(64, 64)).setFixedLength(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: procCommGenObpMboxData.setStatus('mandatory')
procCommGenCvcInputData = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 6, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1024, 1024)).setFixedLength(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: procCommGenCvcInputData.setStatus('mandatory')
procCommGenCvcOutputData = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 6, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1024, 1024)).setFixedLength(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: procCommGenCvcOutputData.setStatus('mandatory')
cbGenTable = MibTable((1, 3, 6, 1, 4, 1, 34, 2, 1, 7), )
if mibBuilder.loadTexts: cbGenTable.setStatus('mandatory')
cbGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34, 2, 1, 7, 1), ).setIndexNames((0, "CRI-SERVER-MIB", "cbGenIndex"))
if mibBuilder.loadTexts: cbGenEntry.setStatus('mandatory')
cbGenIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbGenIndex.setStatus('mandatory')
cbGenNum = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbGenNum.setStatus('mandatory')
cbGenPower = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbGenPower.setStatus('mandatory')
cbGenPowerControl = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("off", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cbGenPowerControl.setStatus('mandatory')
ioCabGenTable = MibTable((1, 3, 6, 1, 4, 1, 34, 2, 1, 8), )
if mibBuilder.loadTexts: ioCabGenTable.setStatus('mandatory')
ioCabGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34, 2, 1, 8, 1), ).setIndexNames((0, "CRI-SERVER-MIB", "ioCabGenIndex"))
if mibBuilder.loadTexts: ioCabGenEntry.setStatus('mandatory')
ioCabGenIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ioCabGenIndex.setStatus('mandatory')
ioCabGenNum = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ioCabGenNum.setStatus('mandatory')
ioCabGenPower = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ioCabGenPower.setStatus('mandatory')
fanTrayGenTable = MibTable((1, 3, 6, 1, 4, 1, 34, 2, 1, 10), )
if mibBuilder.loadTexts: fanTrayGenTable.setStatus('mandatory')
fanTrayGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34, 2, 1, 10, 1), ).setIndexNames((0, "CRI-SERVER-MIB", "fanTrayGenIndex"))
if mibBuilder.loadTexts: fanTrayGenEntry.setStatus('mandatory')
fanTrayGenIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanTrayGenIndex.setStatus('mandatory')
fanTrayGenNum = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanTrayGenNum.setStatus('mandatory')
fanTrayGenPower = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fanTrayGenPower.setStatus('mandatory')
fanGenTable = MibTable((1, 3, 6, 1, 4, 1, 34, 2, 1, 11), )
if mibBuilder.loadTexts: fanGenTable.setStatus('mandatory')
fanGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34, 2, 1, 11, 1), ).setIndexNames((0, "CRI-SERVER-MIB", "fanGenIndex"))
if mibBuilder.loadTexts: fanGenEntry.setStatus('mandatory')
fanGenIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 11, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanGenIndex.setStatus('mandatory')
fanGenTraySlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanGenTraySlotNum.setStatus('mandatory')
fanGenNum = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fanGenNum.setStatus('mandatory')
fanGenStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("fail", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fanGenStatus.setStatus('mandatory')
fanGenSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nominal", 1), ("fast", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fanGenSpeed.setStatus('mandatory')
fanGenPowerControl = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fanGenPowerControl.setStatus('mandatory')
suppBrdGenTable = MibTable((1, 3, 6, 1, 4, 1, 34, 2, 1, 13), )
if mibBuilder.loadTexts: suppBrdGenTable.setStatus('mandatory')
suppBrdGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34, 2, 1, 13, 1), ).setIndexNames((0, "CRI-SERVER-MIB", "suppBrdGenIndex"))
if mibBuilder.loadTexts: suppBrdGenEntry.setStatus('mandatory')
suppBrdGenIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 13, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: suppBrdGenIndex.setStatus('mandatory')
suppBrdGenNum = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 13, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: suppBrdGenNum.setStatus('mandatory')
suppBrdGenPower = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: suppBrdGenPower.setStatus('mandatory')
suppBrdGenPowerControl = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: suppBrdGenPowerControl.setStatus('mandatory')
bulkPowerGenTable = MibTable((1, 3, 6, 1, 4, 1, 34, 2, 1, 14), )
if mibBuilder.loadTexts: bulkPowerGenTable.setStatus('mandatory')
bulkPowerGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34, 2, 1, 14, 1), ).setIndexNames((0, "CRI-SERVER-MIB", "bulkPowerGenIndex"))
if mibBuilder.loadTexts: bulkPowerGenEntry.setStatus('mandatory')
bulkPowerGenIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bulkPowerGenIndex.setStatus('mandatory')
bulkPowerGenNum = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 14, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bulkPowerGenNum.setStatus('mandatory')
bulkPowerGenControl = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("off", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bulkPowerGenControl.setStatus('mandatory')
bulkPowerGenStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 1, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("fail", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bulkPowerGenStatus.setStatus('mandatory')
ue10000 = MibIdentifier((1, 3, 6, 1, 4, 1, 34, 2, 2))
sysBrdStarfireTable = MibTable((1, 3, 6, 1, 4, 1, 34, 2, 2, 1), )
if mibBuilder.loadTexts: sysBrdStarfireTable.setStatus('mandatory')
sysBrdStarfireEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1), ).setIndexNames((0, "CRI-SERVER-MIB", "sysBrdStarfireIndex"))
if mibBuilder.loadTexts: sysBrdStarfireEntry.setStatus('mandatory')
sysBrdStarfireIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfireIndex.setStatus('mandatory')
sysBrdStarfireNum = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfireNum.setStatus('mandatory')
sysBrdStarfireCIC0Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfireCIC0Temp.setStatus('mandatory')
sysBrdStarfireCIC1Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfireCIC1Temp.setStatus('mandatory')
sysBrdStarfireMCTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfireMCTemp.setStatus('mandatory')
sysBrdStarfireXDB2Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfireXDB2Temp.setStatus('mandatory')
sysBrdStarfireXDB3Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfireXDB3Temp.setStatus('mandatory')
sysBrdStarfirePROC0Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfirePROC0Temp.setStatus('mandatory')
sysBrdStarfirePROC1Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfirePROC1Temp.setStatus('mandatory')
sysBrdStarfirePROC2Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfirePROC2Temp.setStatus('mandatory')
sysBrdStarfirePROC3Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfirePROC3Temp.setStatus('mandatory')
sysBrdStarfire3p3VDCTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfire3p3VDCTemp.setStatus('mandatory')
sysBrdStarfireVDCCoreTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfireVDCCoreTemp.setStatus('mandatory')
sysBrdStarfire5VDCTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfire5VDCTemp.setStatus('mandatory')
sysBrdStarfire3p3VDC = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfire3p3VDC.setStatus('mandatory')
sysBrdStarfire5VDCHK = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfire5VDCHK.setStatus('mandatory')
sysBrdStarfire5VDC = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfire5VDC.setStatus('mandatory')
sysBrdStarfireVDCCore = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfireVDCCore.setStatus('mandatory')
sysBrdStarfire3p3VDCHK = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBrdStarfire3p3VDCHK.setStatus('mandatory')
cbStarfireTable = MibTable((1, 3, 6, 1, 4, 1, 34, 2, 2, 2), )
if mibBuilder.loadTexts: cbStarfireTable.setStatus('mandatory')
cbStarfireEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34, 2, 2, 2, 1), ).setIndexNames((0, "CRI-SERVER-MIB", "cbStarfireIndex"))
if mibBuilder.loadTexts: cbStarfireEntry.setStatus('mandatory')
cbStarfireIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbStarfireIndex.setStatus('mandatory')
cbStarfireNum = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbStarfireNum.setStatus('mandatory')
cbStarfireHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbStarfireHostName.setStatus('mandatory')
cbStarfire5VDCTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbStarfire5VDCTemp.setStatus('mandatory')
cbStarfire5VDCPerTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbStarfire5VDCPerTemp.setStatus('mandatory')
cbStarfire5VDCFanTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbStarfire5VDCFanTemp.setStatus('mandatory')
cbStarfireSen0Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbStarfireSen0Temp.setStatus('mandatory')
cbStarfireSen1Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbStarfireSen1Temp.setStatus('mandatory')
cbStarfireSen2Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbStarfireSen2Temp.setStatus('mandatory')
cbStarfire5VDC = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbStarfire5VDC.setStatus('mandatory')
cbStarfire5VDCHK = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbStarfire5VDCHK.setStatus('mandatory')
cbStarfire3p3VDCHK = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbStarfire3p3VDCHK.setStatus('mandatory')
cbStarfire5VDCPer = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbStarfire5VDCPer.setStatus('mandatory')
cbStarfire5VDCFan = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbStarfire5VDCFan.setStatus('mandatory')
centerplaneStarfireTable = MibTable((1, 3, 6, 1, 4, 1, 34, 2, 2, 3), )
if mibBuilder.loadTexts: centerplaneStarfireTable.setStatus('mandatory')
centerplaneStarfireEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34, 2, 2, 3, 1), ).setIndexNames((0, "CRI-SERVER-MIB", "centerplaneStarfireIndex"))
if mibBuilder.loadTexts: centerplaneStarfireEntry.setStatus('mandatory')
centerplaneStarfireIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: centerplaneStarfireIndex.setStatus('mandatory')
centerplaneStarfireNum = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: centerplaneStarfireNum.setStatus('mandatory')
centerplaneStarfireTemp0 = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: centerplaneStarfireTemp0.setStatus('mandatory')
centerplaneStarfireTemp1 = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: centerplaneStarfireTemp1.setStatus('mandatory')
centerplaneStarfireTemp2 = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: centerplaneStarfireTemp2.setStatus('mandatory')
centerplaneStarfireTemp3 = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: centerplaneStarfireTemp3.setStatus('mandatory')
centerplaneStarfireTemp4 = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: centerplaneStarfireTemp4.setStatus('mandatory')
centerplaneStarfireTemp5 = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: centerplaneStarfireTemp5.setStatus('mandatory')
centerplaneStarfireTemp6 = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 3, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: centerplaneStarfireTemp6.setStatus('mandatory')
centerplaneStarfireTemp7 = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 3, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: centerplaneStarfireTemp7.setStatus('mandatory')
centerplaneStarfireTemp8 = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: centerplaneStarfireTemp8.setStatus('mandatory')
centerplaneStarfireTemp9 = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: centerplaneStarfireTemp9.setStatus('mandatory')
suppBrdStarfireTable = MibTable((1, 3, 6, 1, 4, 1, 34, 2, 2, 4), )
if mibBuilder.loadTexts: suppBrdStarfireTable.setStatus('mandatory')
suppBrdStarfireEntry = MibTableRow((1, 3, 6, 1, 4, 1, 34, 2, 2, 4, 1), ).setIndexNames((0, "CRI-SERVER-MIB", "suppBrdStarfireIndex"))
if mibBuilder.loadTexts: suppBrdStarfireEntry.setStatus('mandatory')
suppBrdStarfireIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: suppBrdStarfireIndex.setStatus('mandatory')
suppBrdStarfireNum = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: suppBrdStarfireNum.setStatus('mandatory')
suppBrdStarfire3p3VDC1Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: suppBrdStarfire3p3VDC1Temp.setStatus('mandatory')
suppBrdStarfire3p3VDC2Temp = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: suppBrdStarfire3p3VDC2Temp.setStatus('mandatory')
suppBrdStarfire5VDCHK = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: suppBrdStarfire5VDCHK.setStatus('mandatory')
suppBrdStarfire3p3VDCHK = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: suppBrdStarfire3p3VDCHK.setStatus('mandatory')
suppBrdStarfire3p3VDC = MibTableColumn((1, 3, 6, 1, 4, 1, 34, 2, 2, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: suppBrdStarfire3p3VDC.setStatus('mandatory')
ssp = MibIdentifier((1, 3, 6, 1, 4, 1, 34, 2, 3))
sspPlatformApp = MibIdentifier((1, 3, 6, 1, 4, 1, 34, 2, 3, 1))
sspPlatformAppEddControl = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("start", 1), ("stop", 2), ("reconfig", 3), ("unknown", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sspPlatformAppEddControl.setStatus('mandatory')
sspPlatformAppEddState = MibScalar((1, 3, 6, 1, 4, 1, 34, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("started-monitoring", 1), ("stopped-monitoring", 2), ("unknown", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sspPlatformAppEddState.setStatus('mandatory')
domainChange = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,0)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "confNumDomain"), ("CRI-SERVER-MIB", "domainName"), ("CRI-SERVER-MIB", "domainNumSysBrd"), ("CRI-SERVER-MIB", "domainSysBrdList"), ("CRI-SERVER-MIB", "domainOSVersion"), ("CRI-SERVER-MIB", "platformType"), ("CRI-SERVER-MIB", "platformName"))
eddControl = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,1)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "sspPlatformAppEddControl"))
eddState = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,2)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "sspPlatformAppEddState"))
sysBrdTempNorm = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,3)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "sysBrdStarfireNum"), ("CRI-SERVER-MIB", "sysBrdStarfireCIC0Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireCIC1Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireMCTemp"), ("CRI-SERVER-MIB", "sysBrdStarfireXDB2Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireXDB3Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC0Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC1Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC2Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC3Temp"), ("CRI-SERVER-MIB", "sysBrdStarfire3p3VDCTemp"), ("CRI-SERVER-MIB", "sysBrdStarfireVDCCoreTemp"), ("CRI-SERVER-MIB", "sysBrdStarfire5VDCTemp"))
sysBrdTempHigh = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,4)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "sysBrdStarfireNum"), ("CRI-SERVER-MIB", "sysBrdStarfireCIC0Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireCIC1Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireMCTemp"), ("CRI-SERVER-MIB", "sysBrdStarfireXDB2Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireXDB3Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC0Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC1Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC2Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC3Temp"), ("CRI-SERVER-MIB", "sysBrdStarfire3p3VDCTemp"), ("CRI-SERVER-MIB", "sysBrdStarfireVDCCoreTemp"), ("CRI-SERVER-MIB", "sysBrdStarfire5VDCTemp"))
sysBrdTempWarn = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,5)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "sysBrdStarfireNum"), ("CRI-SERVER-MIB", "sysBrdStarfireCIC0Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireCIC1Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireMCTemp"), ("CRI-SERVER-MIB", "sysBrdStarfireXDB2Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireXDB3Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC0Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC1Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC2Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC3Temp"), ("CRI-SERVER-MIB", "sysBrdStarfire3p3VDCTemp"), ("CRI-SERVER-MIB", "sysBrdStarfireVDCCoreTemp"), ("CRI-SERVER-MIB", "sysBrdStarfire5VDCTemp"))
sysBrdTempMax = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,6)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "sysBrdStarfireNum"), ("CRI-SERVER-MIB", "sysBrdStarfireCIC0Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireCIC1Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireMCTemp"), ("CRI-SERVER-MIB", "sysBrdStarfireXDB2Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireXDB3Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC0Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC1Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC2Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC3Temp"), ("CRI-SERVER-MIB", "sysBrdStarfire3p3VDCTemp"), ("CRI-SERVER-MIB", "sysBrdStarfireVDCCoreTemp"), ("CRI-SERVER-MIB", "sysBrdStarfire5VDCTemp"))
sysBrdTemp911 = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,7)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "sysBrdStarfireNum"), ("CRI-SERVER-MIB", "sysBrdStarfireCIC0Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireCIC1Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireMCTemp"), ("CRI-SERVER-MIB", "sysBrdStarfireXDB2Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireXDB3Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC0Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC1Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC2Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC3Temp"), ("CRI-SERVER-MIB", "sysBrdStarfire3p3VDCTemp"), ("CRI-SERVER-MIB", "sysBrdStarfireVDCCoreTemp"), ("CRI-SERVER-MIB", "sysBrdStarfire5VDCTemp"))
sysBrdTempBad = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,8)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "sysBrdStarfireNum"), ("CRI-SERVER-MIB", "sysBrdStarfireCIC0Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireCIC1Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireMCTemp"), ("CRI-SERVER-MIB", "sysBrdStarfireXDB2Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireXDB3Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC0Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC1Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC2Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC3Temp"), ("CRI-SERVER-MIB", "sysBrdStarfire3p3VDCTemp"), ("CRI-SERVER-MIB", "sysBrdStarfireVDCCoreTemp"), ("CRI-SERVER-MIB", "sysBrdStarfire5VDCTemp"))
sysBrdTempChange = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,9)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "sysBrdStarfireNum"), ("CRI-SERVER-MIB", "sysBrdStarfireCIC0Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireCIC1Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireMCTemp"), ("CRI-SERVER-MIB", "sysBrdStarfireXDB2Temp"), ("CRI-SERVER-MIB", "sysBrdStarfireXDB3Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC0Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC1Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC2Temp"), ("CRI-SERVER-MIB", "sysBrdStarfirePROC3Temp"), ("CRI-SERVER-MIB", "sysBrdStarfire3p3VDCTemp"), ("CRI-SERVER-MIB", "sysBrdStarfireVDCCoreTemp"), ("CRI-SERVER-MIB", "sysBrdStarfire5VDCTemp"))
cbTempNorm = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,10)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "cbStarfireNum"), ("CRI-SERVER-MIB", "cbStarfire5VDCTemp"), ("CRI-SERVER-MIB", "cbStarfire5VDCPerTemp"), ("CRI-SERVER-MIB", "cbStarfire5VDCFanTemp"), ("CRI-SERVER-MIB", "cbStarfireSen0Temp"), ("CRI-SERVER-MIB", "cbStarfireSen1Temp"), ("CRI-SERVER-MIB", "cbStarfireSen2Temp"))
cbTempHigh = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,11)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "cbStarfireNum"), ("CRI-SERVER-MIB", "cbStarfire5VDCTemp"), ("CRI-SERVER-MIB", "cbStarfire5VDCPerTemp"), ("CRI-SERVER-MIB", "cbStarfire5VDCFanTemp"), ("CRI-SERVER-MIB", "cbStarfireSen0Temp"), ("CRI-SERVER-MIB", "cbStarfireSen1Temp"), ("CRI-SERVER-MIB", "cbStarfireSen2Temp"))
cbTempWarn = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,12)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "cbStarfireNum"), ("CRI-SERVER-MIB", "cbStarfire5VDCTemp"), ("CRI-SERVER-MIB", "cbStarfire5VDCPerTemp"), ("CRI-SERVER-MIB", "cbStarfire5VDCFanTemp"), ("CRI-SERVER-MIB", "cbStarfireSen0Temp"), ("CRI-SERVER-MIB", "cbStarfireSen1Temp"), ("CRI-SERVER-MIB", "cbStarfireSen2Temp"))
cbTempMax = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,13)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "cbStarfireNum"), ("CRI-SERVER-MIB", "cbStarfire5VDCTemp"), ("CRI-SERVER-MIB", "cbStarfire5VDCPerTemp"), ("CRI-SERVER-MIB", "cbStarfire5VDCFanTemp"), ("CRI-SERVER-MIB", "cbStarfireSen0Temp"), ("CRI-SERVER-MIB", "cbStarfireSen1Temp"), ("CRI-SERVER-MIB", "cbStarfireSen2Temp"))
cbTemp911 = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,14)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "cbStarfireNum"), ("CRI-SERVER-MIB", "cbStarfire5VDCTemp"), ("CRI-SERVER-MIB", "cbStarfire5VDCPerTemp"), ("CRI-SERVER-MIB", "cbStarfire5VDCFanTemp"), ("CRI-SERVER-MIB", "cbStarfireSen0Temp"), ("CRI-SERVER-MIB", "cbStarfireSen1Temp"), ("CRI-SERVER-MIB", "cbStarfireSen2Temp"))
cbTempBad = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,15)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "cbStarfireNum"), ("CRI-SERVER-MIB", "cbStarfire5VDCTemp"), ("CRI-SERVER-MIB", "cbStarfire5VDCPerTemp"), ("CRI-SERVER-MIB", "cbStarfire5VDCFanTemp"), ("CRI-SERVER-MIB", "cbStarfireSen0Temp"), ("CRI-SERVER-MIB", "cbStarfireSen1Temp"), ("CRI-SERVER-MIB", "cbStarfireSen2Temp"))
cbTempChange = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,16)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "cbStarfireNum"), ("CRI-SERVER-MIB", "cbStarfire5VDCTemp"), ("CRI-SERVER-MIB", "cbStarfire5VDCPerTemp"), ("CRI-SERVER-MIB", "cbStarfire5VDCFanTemp"), ("CRI-SERVER-MIB", "cbStarfireSen0Temp"), ("CRI-SERVER-MIB", "cbStarfireSen1Temp"), ("CRI-SERVER-MIB", "cbStarfireSen2Temp"))
centerplaneTempNorm = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,17)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "centerplaneStarfireNum"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp0"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp1"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp2"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp3"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp4"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp5"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp6"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp7"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp8"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp9"))
centerplaneTempHigh = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,18)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "centerplaneStarfireNum"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp0"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp1"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp2"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp3"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp4"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp5"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp6"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp7"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp8"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp9"))
centerplaneTempWarn = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,19)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "centerplaneStarfireNum"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp0"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp1"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp2"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp3"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp4"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp5"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp6"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp7"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp8"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp9"))
centerplaneTempMax = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,20)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "centerplaneStarfireNum"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp0"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp1"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp2"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp3"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp4"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp5"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp6"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp7"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp8"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp9"))
centerplaneTemp911 = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,21)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "centerplaneStarfireNum"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp0"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp1"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp2"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp3"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp4"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp5"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp6"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp7"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp8"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp9"))
centerplaneTempBad = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,22)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "centerplaneStarfireNum"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp0"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp1"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp2"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp3"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp4"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp5"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp6"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp7"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp8"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp9"))
centerplaneTempChange = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,23)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "centerplaneStarfireNum"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp0"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp1"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp2"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp3"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp4"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp5"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp6"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp7"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp8"), ("CRI-SERVER-MIB", "centerplaneStarfireTemp9"))
cbeConnected = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,24)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "platformMasterConBrd"), ("CRI-SERVER-MIB", "platformSysClkConBrd"))
cbeDisconnected = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,25)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "platformMasterConBrd"), ("CRI-SERVER-MIB", "platformSysClkConBrd"))
suppBrdTempNorm = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,26)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "suppBrdStarfireNum"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDC1Temp"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDC2Temp"))
suppBrdTempHigh = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,27)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "suppBrdStarfireNum"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDC1Temp"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDC2Temp"))
suppBrdTempWarn = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,28)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "suppBrdStarfireNum"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDC1Temp"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDC2Temp"))
suppBrdTempMax = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,29)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "suppBrdStarfireNum"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDC1Temp"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDC2Temp"))
suppBrdTemp911 = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,30)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "suppBrdStarfireNum"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDC1Temp"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDC2Temp"))
suppBrdTempBad = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,31)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "suppBrdStarfireNum"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDC1Temp"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDC2Temp"))
suppBrdTempChange = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,32)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "suppBrdStarfireNum"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDC1Temp"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDC2Temp"))
sysBrdVoltNorm = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,33)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "sysBrdStarfireNum"), ("CRI-SERVER-MIB", "sysBrdStarfire3p3VDC"), ("CRI-SERVER-MIB", "sysBrdStarfire5VDCHK"), ("CRI-SERVER-MIB", "sysBrdStarfire5VDC"), ("CRI-SERVER-MIB", "sysBrdStarfireVDCCore"), ("CRI-SERVER-MIB", "sysBrdStarfire3p3VDCHK"))
sysBrdVoltMax = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,34)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "sysBrdStarfireNum"), ("CRI-SERVER-MIB", "sysBrdStarfire3p3VDC"), ("CRI-SERVER-MIB", "sysBrdStarfire5VDCHK"), ("CRI-SERVER-MIB", "sysBrdStarfire5VDC"), ("CRI-SERVER-MIB", "sysBrdStarfireVDCCore"), ("CRI-SERVER-MIB", "sysBrdStarfire3p3VDCHK"))
sysBrdVoltMin = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,35)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "sysBrdStarfireNum"), ("CRI-SERVER-MIB", "sysBrdStarfire3p3VDC"), ("CRI-SERVER-MIB", "sysBrdStarfire5VDCHK"), ("CRI-SERVER-MIB", "sysBrdStarfire5VDC"), ("CRI-SERVER-MIB", "sysBrdStarfireVDCCore"), ("CRI-SERVER-MIB", "sysBrdStarfire3p3VDCHK"))
sysBrdVoltBad = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,36)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "sysBrdStarfireNum"), ("CRI-SERVER-MIB", "sysBrdStarfire3p3VDC"), ("CRI-SERVER-MIB", "sysBrdStarfire5VDCHK"), ("CRI-SERVER-MIB", "sysBrdStarfire5VDC"), ("CRI-SERVER-MIB", "sysBrdStarfireVDCCore"), ("CRI-SERVER-MIB", "sysBrdStarfire3p3VDCHK"))
sysBrdVoltChange = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,37)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "sysBrdStarfireNum"), ("CRI-SERVER-MIB", "sysBrdStarfire3p3VDC"), ("CRI-SERVER-MIB", "sysBrdStarfire5VDCHK"), ("CRI-SERVER-MIB", "sysBrdStarfire5VDC"), ("CRI-SERVER-MIB", "sysBrdStarfireVDCCore"), ("CRI-SERVER-MIB", "sysBrdStarfire3p3VDCHK"))
cbVoltNorm = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,38)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "cbStarfireNum"), ("CRI-SERVER-MIB", "cbStarfire5VDC"), ("CRI-SERVER-MIB", "cbStarfire5VDCHK"), ("CRI-SERVER-MIB", "cbStarfire3p3VDCHK"), ("CRI-SERVER-MIB", "cbStarfire5VDCPer"), ("CRI-SERVER-MIB", "cbStarfire5VDCFan"))
cbVoltMax = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,39)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "cbStarfireNum"), ("CRI-SERVER-MIB", "cbStarfire5VDC"), ("CRI-SERVER-MIB", "cbStarfire5VDCHK"), ("CRI-SERVER-MIB", "cbStarfire3p3VDCHK"), ("CRI-SERVER-MIB", "cbStarfire5VDCPer"), ("CRI-SERVER-MIB", "cbStarfire5VDCFan"))
cbVoltMin = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,40)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "cbStarfireNum"), ("CRI-SERVER-MIB", "cbStarfire5VDC"), ("CRI-SERVER-MIB", "cbStarfire5VDCHK"), ("CRI-SERVER-MIB", "cbStarfire3p3VDCHK"), ("CRI-SERVER-MIB", "cbStarfire5VDCPer"), ("CRI-SERVER-MIB", "cbStarfire5VDCFan"))
cbVoltBad = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,41)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "cbStarfireNum"), ("CRI-SERVER-MIB", "cbStarfire5VDC"), ("CRI-SERVER-MIB", "cbStarfire5VDCHK"), ("CRI-SERVER-MIB", "cbStarfire3p3VDCHK"), ("CRI-SERVER-MIB", "cbStarfire5VDCPer"), ("CRI-SERVER-MIB", "cbStarfire5VDCFan"))
cbVoltChange = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,42)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "cbStarfireNum"), ("CRI-SERVER-MIB", "cbStarfire5VDC"), ("CRI-SERVER-MIB", "cbStarfire5VDCHK"), ("CRI-SERVER-MIB", "cbStarfire3p3VDCHK"), ("CRI-SERVER-MIB", "cbStarfire5VDCPer"), ("CRI-SERVER-MIB", "cbStarfire5VDCFan"))
centerplaneVoltNorm = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,43)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "centerplaneStarfireNum"))
centerplaneVoltMax = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,44)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "centerplaneStarfireNum"))
centerplaneVoltMin = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,45)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "centerplaneStarfireNum"))
centerplaneVoltBad = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,46)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "centerplaneStarfireNum"))
centerplaneVoltChange = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,47)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "centerplaneStarfireNum"))
suppBrdVoltNorm = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,48)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "suppBrdStarfireNum"), ("CRI-SERVER-MIB", "suppBrdStarfire5VDCHK"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDCHK"))
suppBrdVoltMax = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,49)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "suppBrdStarfireNum"), ("CRI-SERVER-MIB", "suppBrdStarfire5VDCHK"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDCHK"))
suppBrdVoltMin = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,50)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "suppBrdStarfireNum"), ("CRI-SERVER-MIB", "suppBrdStarfire5VDCHK"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDCHK"))
suppBrdVoltBad = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,51)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "suppBrdStarfireNum"), ("CRI-SERVER-MIB", "suppBrdStarfire5VDCHK"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDCHK"))
suppBrdVoltChange = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,52)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "suppBrdStarfireNum"), ("CRI-SERVER-MIB", "suppBrdStarfire5VDCHK"), ("CRI-SERVER-MIB", "suppBrdStarfire3p3VDCHK"))
fanNorm = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,53)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "fanGenNum"), ("CRI-SERVER-MIB", "fanGenTraySlotNum"), ("CRI-SERVER-MIB", "fanGenStatus"))
fanFail = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,54)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "fanGenNum"), ("CRI-SERVER-MIB", "fanGenTraySlotNum"))
systemConfigurationChange = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,55)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "confSysBrdList"), ("CRI-SERVER-MIB", "confProcList"), ("CRI-SERVER-MIB", "confConBrdList"), ("CRI-SERVER-MIB", "confSuppBrdList"), ("CRI-SERVER-MIB", "confFanTrayList"), ("CRI-SERVER-MIB", "confBulkPowerList"))
arbitrationStop = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,56)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "domainName"))
recordStop = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,57)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "domainName"))
watchdog = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,58)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "domainName"))
environmentalShutdown = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,59)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "domainName"))
reboot = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,60)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "domainName"))
panic1 = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,61)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "domainName"))
panic2 = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,62)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "domainName"))
panicReboot = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,63)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "domainName"))
heartbeatFailure = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,64)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "domainName"))
signatureBlockChange = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,65)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "procStateGenNum"), ("CRI-SERVER-MIB", "procStateGenPgmSignature"), ("CRI-SERVER-MIB", "procStateGenPgmState"), ("CRI-SERVER-MIB", "procStateGenPgmSubState"))
sysbrdPowerOff = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,66)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "sysBrdGenNum"))
sysbrdPowerOn = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,67)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "sysBrdGenNum"))
suppbrdPowerOff = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,68)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "suppBrdGenNum"))
suppbrdPowerOn = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,69)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "suppBrdGenNum"))
bulkPowerNorm = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,70)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "bulkPowerGenNum"))
bulkPowerFail = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,71)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "bulkPowerGenNum"))
bootProcChange = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,72)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "domainName"), ("CRI-SERVER-MIB", "domainBootProc"), ("CRI-SERVER-MIB", "domainProcConfig"), ("CRI-SERVER-MIB", "domainABusConfig"), ("CRI-SERVER-MIB", "domainDBusConfig"))
sigObpBooting = NotificationType((1, 3, 6, 1, 4, 1, 34) + (0,73)).setObjects(("CRI-SERVER-MIB", "platformName"), ("CRI-SERVER-MIB", "procStateGenNum"), ("CRI-SERVER-MIB", "domainName"))
mibBuilder.exportSymbols("CRI-SERVER-MIB", reboot=reboot, ue10000=ue10000, procStateGenTable=procStateGenTable, procCommGenTable=procCommGenTable, cbGenPowerControl=cbGenPowerControl, domainSysBrdList=domainSysBrdList, cbGenIndex=cbGenIndex, cbStarfire5VDCFanTemp=cbStarfire5VDCFanTemp, cbTempMax=cbTempMax, confMaxLEDPerFanTray=confMaxLEDPerFanTray, procCommGenSspMboxData=procCommGenSspMboxData, bulkPowerGenNum=bulkPowerGenNum, bulkPowerGenIndex=bulkPowerGenIndex, suppBrdTempBad=suppBrdTempBad, centerplaneStarfireTemp6=centerplaneStarfireTemp6, centerplaneTemp911=centerplaneTemp911, platformReset=platformReset, suppBrdTempMax=suppBrdTempMax, suppBrdGenNum=suppBrdGenNum, procStateGenNum=procStateGenNum, suppBrdStarfire5VDCHK=suppBrdStarfire5VDCHK, confCenterplaneList=confCenterplaneList, cbStarfire5VDCPerTemp=cbStarfire5VDCPerTemp, centerplaneStarfireEntry=centerplaneStarfireEntry, sysBrdTempMax=sysBrdTempMax, suppBrdTempWarn=suppBrdTempWarn, sysBrdTempWarn=sysBrdTempWarn, cbTempChange=cbTempChange, suppBrdTempChange=suppBrdTempChange, platformType=platformType, panicReboot=panicReboot, platform=platform, sysBrdStarfireVDCCoreTemp=sysBrdStarfireVDCCoreTemp, confNumBulkPower=confNumBulkPower, bulkPowerNorm=bulkPowerNorm, confNumProc=confNumProc, platformTargetJtagClockFreq=platformTargetJtagClockFreq, sysBrdStarfireXDB3Temp=sysBrdStarfireXDB3Temp, procCommGenCvcOutputData=procCommGenCvcOutputData, bulkPowerGenStatus=bulkPowerGenStatus, domainDBusConfig=domainDBusConfig, sysBrdGenIndex=sysBrdGenIndex, sysbrdPowerOn=sysbrdPowerOn, cbGenPower=cbGenPower, domainOSVersion=domainOSVersion, centerplaneStarfireTable=centerplaneStarfireTable, procCommGenHostMboxFlag=procCommGenHostMboxFlag, centerplaneStarfireTemp8=centerplaneStarfireTemp8, fanGenIndex=fanGenIndex, cbVoltMax=cbVoltMax, centerplaneStarfireTemp4=centerplaneStarfireTemp4, suppBrdTempHigh=suppBrdTempHigh, centerplaneTempHigh=centerplaneTempHigh, fanGenTable=fanGenTable, suppBrdVoltMin=suppBrdVoltMin, sysBrdStarfire3p3VDCTemp=sysBrdStarfire3p3VDCTemp, platformJtagClockFreq=platformJtagClockFreq, platformSysClkConBrd=platformSysClkConBrd, eddControl=eddControl, centerplaneTempBad=centerplaneTempBad, centerplaneStarfireIndex=centerplaneStarfireIndex, ioCabGenNum=ioCabGenNum, sysBrdStarfireEntry=sysBrdStarfireEntry, fanGenNum=fanGenNum, panic1=panic1, systemConfigurationChange=systemConfigurationChange, cbStarfire5VDCHK=cbStarfire5VDCHK, confFanTrayList=confFanTrayList, centerplaneStarfireTemp0=centerplaneStarfireTemp0, centerplaneVoltBad=centerplaneVoltBad, cbStarfireSen0Temp=cbStarfireSen0Temp, sysBrdStarfireCIC1Temp=sysBrdStarfireCIC1Temp, centerplaneStarfireTemp5=centerplaneStarfireTemp5, sysBrdVoltChange=sysBrdVoltChange, fanTrayGenPower=fanTrayGenPower, confBulkPowerList=confBulkPowerList, platformMasterConBrd=platformMasterConBrd, procCommGenSspMboxLen=procCommGenSspMboxLen, procCommGenCvcInputData=procCommGenCvcInputData, suppBrdGenEntry=suppBrdGenEntry, procCommGenObpMboxFlag=procCommGenObpMboxFlag, cbeDisconnected=cbeDisconnected, ioCabGenTable=ioCabGenTable, bulkPowerGenTable=bulkPowerGenTable, confNumSuppBrd=confNumSuppBrd, ioCabGenIndex=ioCabGenIndex, platformProcClockFreq=platformProcClockFreq, sysBrdStarfireCIC0Temp=sysBrdStarfireCIC0Temp, domainProcConfig=domainProcConfig, confMaxLEDPerSysBrd=confMaxLEDPerSysBrd, suppBrdStarfireNum=suppBrdStarfireNum, sysBrdStarfire3p3VDCHK=sysBrdStarfire3p3VDCHK, cbGenNum=cbGenNum, suppBrdStarfire3p3VDC=suppBrdStarfire3p3VDC, centerplaneTempMax=centerplaneTempMax, sysBrdGenProcList=sysBrdGenProcList, centerplaneStarfireTemp2=centerplaneStarfireTemp2, confSuppBrdList=confSuppBrdList, confNumSysBrd=confNumSysBrd, fanGenPowerControl=fanGenPowerControl, domainNumSysBrd=domainNumSysBrd, procCommGenSspMboxFlag=procCommGenSspMboxFlag, confIoCabList=confIoCabList, confNumCenterplane=confNumCenterplane, suppBrdGenPower=suppBrdGenPower, cbStarfireEntry=cbStarfireEntry, eddState=eddState, sysBrdTempNorm=sysBrdTempNorm, cbTemp911=cbTemp911, domainABusConfig=domainABusConfig, domainChange=domainChange, cbStarfireSen2Temp=cbStarfireSen2Temp, cbVoltBad=cbVoltBad, suppBrdStarfire3p3VDCHK=suppBrdStarfire3p3VDCHK, cbTempHigh=cbTempHigh, centerplaneStarfireNum=centerplaneStarfireNum, centerplaneTempWarn=centerplaneTempWarn, sysBrdStarfire3p3VDC=sysBrdStarfire3p3VDC, fanTrayGenEntry=fanTrayGenEntry, panic2=panic2, platformTargetInterconnectClockFreq=platformTargetInterconnectClockFreq, products=products, domainEntry=domainEntry, confMaxLEDPerBulkPower=confMaxLEDPerBulkPower, suppBrdVoltBad=suppBrdVoltBad, confMaxFanPerTray=confMaxFanPerTray, suppBrdGenTable=suppBrdGenTable, confMemAddrMap=confMemAddrMap, suppBrdVoltChange=suppBrdVoltChange, procCommGenNum=procCommGenNum, cbeConnected=cbeConnected, ssp=ssp, sysBrdGenNumProc=sysBrdGenNumProc, suppBrdVoltNorm=suppBrdVoltNorm, sspPlatformAppEddControl=sspPlatformAppEddControl, fanGenTraySlotNum=fanGenTraySlotNum, suppBrdStarfireEntry=suppBrdStarfireEntry, suppbrdPowerOff=suppbrdPowerOff, procStateGenPgmSignature=procStateGenPgmSignature, fanFail=fanFail, sysBrdVoltMin=sysBrdVoltMin, sysBrdGenPower=sysBrdGenPower, procStateGenHeartbeat=procStateGenHeartbeat, procCommGenObpMboxData=procCommGenObpMboxData, sspPlatformApp=sspPlatformApp, DisplayString=DisplayString, YesNo=YesNo, procCommGenIndex=procCommGenIndex, sysBrdTempHigh=sysBrdTempHigh, domainProcList=domainProcList, sysBrdStarfire5VDCHK=sysBrdStarfire5VDCHK, centerplaneStarfireTemp1=centerplaneStarfireTemp1, sysBrdGenReset=sysBrdGenReset, cbStarfireNum=cbStarfireNum, confConBrdList=confConBrdList, sysBrdVoltNorm=sysBrdVoltNorm, suppBrdVoltMax=suppBrdVoltMax, sysbrdPowerOff=sysbrdPowerOff, cbVoltNorm=cbVoltNorm, sysBrdTempChange=sysBrdTempChange, sysBrdGenTable=sysBrdGenTable, cbStarfireHostName=cbStarfireHostName, cbTempWarn=cbTempWarn, sigObpBooting=sigObpBooting, sysBrdStarfirePROC2Temp=sysBrdStarfirePROC2Temp, centerplaneTempNorm=centerplaneTempNorm, cbVoltChange=cbVoltChange, bulkPowerFail=bulkPowerFail, centerplaneStarfireTemp9=centerplaneStarfireTemp9, suppBrdGenPowerControl=suppBrdGenPowerControl, platformAmbientTemp=platformAmbientTemp, suppBrdTempNorm=suppBrdTempNorm, bootProcChange=bootProcChange, sysBrdGenNum=sysBrdGenNum, sun=sun, platformInterconnectClockFreq=platformInterconnectClockFreq, domainName=domainName, procStateGenEntry=procStateGenEntry, procCommGenHostMboxLen=procCommGenHostMboxLen, fanTrayGenTable=fanTrayGenTable, procCommGenSspMboxCmd=procCommGenSspMboxCmd, suppBrdTemp911=suppBrdTemp911, sysBrdStarfireNum=sysBrdStarfireNum, sysBrdStarfirePROC1Temp=sysBrdStarfirePROC1Temp, procStateGenPgmSubState=procStateGenPgmSubState, centerplaneTempChange=centerplaneTempChange, confNumFanTray=confNumFanTray, domainBootProc=domainBootProc, procCommGenHostMboxData=procCommGenHostMboxData, sysBrdGenEntry=sysBrdGenEntry, procCommGenObpMboxCmd=procCommGenObpMboxCmd, arbitrationStop=arbitrationStop, fanGenEntry=fanGenEntry, general=general, suppbrdPowerOn=suppbrdPowerOn, domainInterruptVector=domainInterruptVector, sysBrdVoltMax=sysBrdVoltMax, fanGenStatus=fanGenStatus, sysBrdStarfireVDCCore=sysBrdStarfireVDCCore, signatureBlockChange=signatureBlockChange, sysBrdStarfireIndex=sysBrdStarfireIndex, ioCabGenPower=ioCabGenPower, cbTempBad=cbTempBad, sysBrdGenPowerControl=sysBrdGenPowerControl, confProcList=confProcList, procStateGenTemp=procStateGenTemp, centerplaneStarfireTemp7=centerplaneStarfireTemp7, suppBrdStarfire3p3VDC1Temp=suppBrdStarfire3p3VDC1Temp, cbVoltMin=cbVoltMin, fanTrayGenIndex=fanTrayGenIndex, sspPlatformAppEddState=sspPlatformAppEddState, centerplaneStarfireTemp3=centerplaneStarfireTemp3, cbGenTable=cbGenTable, suppBrdGenIndex=suppBrdGenIndex, procCommGenObpMboxLen=procCommGenObpMboxLen, sysBrdStarfireMCTemp=sysBrdStarfireMCTemp, bulkPowerGenControl=bulkPowerGenControl, confNumSysBrdPower=confNumSysBrdPower, watchdog=watchdog, sysBrdStarfire5VDC=sysBrdStarfire5VDC, heartbeatFailure=heartbeatFailure, platformName=platformName, confSysBrdPowerList=confSysBrdPowerList, fanTrayGenNum=fanTrayGenNum, cbStarfireIndex=cbStarfireIndex, cbTempNorm=cbTempNorm, centerplaneVoltNorm=centerplaneVoltNorm, centerplaneVoltChange=centerplaneVoltChange, sysBrdStarfirePROC3Temp=sysBrdStarfirePROC3Temp, domainIndex=domainIndex, bulkPowerGenEntry=bulkPowerGenEntry, cbStarfire5VDCTemp=cbStarfire5VDCTemp, sysBrdStarfirePROC0Temp=sysBrdStarfirePROC0Temp, conf=conf, confNumDomain=confNumDomain, confNumConBrd=confNumConBrd, sysBrdStarfireXDB2Temp=sysBrdStarfireXDB2Temp, procStateGenPgmState=procStateGenPgmState, ioCabGenEntry=ioCabGenEntry, sysBrdStarfire5VDCTemp=sysBrdStarfire5VDCTemp, suppBrdStarfireIndex=suppBrdStarfireIndex, sysBrdVoltBad=sysBrdVoltBad, confNumIoCab=confNumIoCab, centerplaneVoltMin=centerplaneVoltMin, environmentalShutdown=environmentalShutdown, fanGenSpeed=fanGenSpeed, suppBrdStarfireTable=suppBrdStarfireTable, domainSysBrdConfig=domainSysBrdConfig, cbGenEntry=cbGenEntry, Boolean=Boolean, confSysBrdList=confSysBrdList, suppBrdStarfire3p3VDC2Temp=suppBrdStarfire3p3VDC2Temp, cbStarfireSen1Temp=cbStarfireSen1Temp, sysBrdTemp911=sysBrdTemp911)
mibBuilder.exportSymbols("CRI-SERVER-MIB", sysBrdTempBad=sysBrdTempBad, fanNorm=fanNorm, procCommGenEntry=procCommGenEntry, cbStarfire5VDC=cbStarfire5VDC, centerplaneVoltMax=centerplaneVoltMax, recordStop=recordStop, procCommGenHostMboxCmd=procCommGenHostMboxCmd, platformTargetProcClockMultiple=platformTargetProcClockMultiple, sysBrdStarfireTable=sysBrdStarfireTable, cbStarfireTable=cbStarfireTable, cbStarfire3p3VDCHK=cbStarfire3p3VDCHK, cbStarfire5VDCPer=cbStarfire5VDCPer, confMaxProcPerSysBrd=confMaxProcPerSysBrd, domainTable=domainTable, procStateGenIndex=procStateGenIndex, cbStarfire5VDCFan=cbStarfire5VDCFan)
