#
# PySNMP MIB module AP-SYSTEM-BASIC (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AP-SYSTEM-BASIC
# Produced by pysmi-0.3.4 at Mon Apr 29 17:07:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ObjectIdentity, Counter32, Unsigned32, Counter64, NotificationType, enterprises, MibIdentifier, IpAddress, Bits, Integer32, ModuleIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ObjectIdentity", "Counter32", "Unsigned32", "Counter64", "NotificationType", "enterprises", "MibIdentifier", "IpAddress", "Bits", "Integer32", "ModuleIdentity", "Gauge32")
DisplayString, RowStatus, TextualConvention, TruthValue, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TruthValue", "MacAddress")
pepwave = MibIdentifier((1, 3, 6, 1, 4, 1, 27662))
productID = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200))
apMib = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1))
apGeneralMib = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1))
ap_system_basic_mib = ModuleIdentity((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1)).setLabel("ap-system-basic-mib")
if mibBuilder.loadTexts: ap_system_basic_mib.setLastUpdated('2011081900Z')
if mibBuilder.loadTexts: ap_system_basic_mib.setOrganization('PEPWAVE')
apSystemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 1))
apSystemBasicInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 1, 1))
apSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(14, 14)).setFixedLength(14)).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSerialNumber.setStatus('current')
apMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(14, 14)).setFixedLength(14)).setMaxAccess("readonly")
if mibBuilder.loadTexts: apMacAddress.setStatus('current')
apSoftwareVerstion = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apSoftwareVerstion.setStatus('current')
apTime = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apTime.setStatus('current')
apUpTime = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apUpTime.setStatus('current')
apStatus = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("running", 1), ("bootup", 2), ("activating", 3), ("firmwareUpgrading", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apStatus.setStatus('current')
apControllerStatus = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: apControllerStatus.setStatus('current')
apCurrentControllerIp = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 1, 1, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apCurrentControllerIp.setStatus('current')
apSystemConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2))
apSystemBasicConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 1))
apName = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apName.setStatus('current')
apLocation = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apLocation.setStatus('current')
apTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53))).clone(namedValues=NamedValues(("africa-cairo", 0), ("africa-kampala", 1), ("africa-lagos", 2), ("asia-china", 3), ("asia-hong-kong", 4), ("asia-jakarta", 5), ("asia-seoul", 6), ("asia-taiwan", 7), ("asia-tokyo", 8), ("europe-athens", 9), ("europe-berlin", 10), ("europe-dublin", 11), ("europe-moscow", 12), ("us-alaska", 13), ("us-aleutian", 14), ("us-arizona", 15), ("us-central", 16), ("us-eastern", 17), ("us-east-indiana", 18), ("us-hawaii", 19), ("us-indiana-starke", 20), ("us-michigan", 21), ("us-mountain", 22), ("us-pacific", 23), ("us-samoa", 24), ("gmt", 25), ("utc", 26), ("wet", 27), ("gmt-14", 28), ("gmt-13", 29), ("gmt-12", 30), ("gmt-11", 31), ("gmt-10", 32), ("gmt-9", 33), ("gmt-8", 34), ("gmt-7", 35), ("gmt-6", 36), ("gmt-5", 37), ("gmt-4", 38), ("gmt-3", 39), ("gmt-2", 40), ("gmt-1", 41), ("gmt-plus-1", 42), ("gmt-plus-2", 43), ("gmt-plus-3", 44), ("gmt-plus-4", 45), ("gmt-plus-5", 46), ("gmt-plus-6", 47), ("gmt-plus-7", 48), ("gmt-plus-8", 49), ("gmt-plus-9", 50), ("gmt-plus-10", 51), ("gmt-plus-11", 52), ("gmt-plus-12", 53)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apTimeZone.setStatus('current')
apControllerIp = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apControllerIp.setStatus('current')
apSystemDomain = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apSystemDomain.setStatus('current')
apNtpServer = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apNtpServer.setStatus('current')
apMode = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bridge", 0), ("router", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apMode.setStatus('current')
apEthSpeedDuplex = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 0), ("eth-10baseTx-HD", 1), ("eth-10baseTx-FD", 2), ("eth-100baseTx-HD", 3), ("eth-100baseTx-FD", 4), ("eth-1000baseTx-FD", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apEthSpeedDuplex.setStatus('current')
apVlan = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apVlan.setStatus('current')
apEthAdvertise = MibScalar((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apEthAdvertise.setStatus('current')
apSystemScheduleRebootConfigTable = MibTable((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 2), )
if mibBuilder.loadTexts: apSystemScheduleRebootConfigTable.setStatus('current')
apSystemScheduleRebootConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 2, 1), ).setIndexNames((0, "AP-SYSTEM-BASIC", "apScheduleRebootIndex"))
if mibBuilder.loadTexts: apSystemScheduleRebootConfigEntry.setStatus('current')
apScheduleRebootIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: apScheduleRebootIndex.setStatus('current')
apScheduleReboot = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apScheduleReboot.setStatus('current')
apScheduleRebootType = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("monthly", 0), ("weekly", 1), ("daily", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apScheduleRebootType.setStatus('current')
apScheduleRebootDom = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))).clone(namedValues=NamedValues(("na", 0), ("day-1", 1), ("day-2", 2), ("day-3", 3), ("day-4", 4), ("day-5", 5), ("day-6", 6), ("day-7", 7), ("day-8", 8), ("day-9", 9), ("day-10", 10), ("day-11", 11), ("day-12", 12), ("day-13", 13), ("day-14", 14), ("day-15", 15), ("day-16", 16), ("day-17", 17), ("day-18", 18), ("day-19", 19), ("day-20", 20), ("day-21", 21), ("day-22", 22), ("day-23", 23), ("day-24", 24), ("day-25", 25), ("day-26", 26), ("day-27", 27), ("day-28", 28), ("day-29", 29), ("day-30", 30), ("day-31", 31)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apScheduleRebootDom.setStatus('current')
apScheduleRebootDow = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("sunday", 0), ("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6), ("na", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apScheduleRebootDow.setStatus('current')
apScheduleRebootHr = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apScheduleRebootHr.setStatus('current')
apScheduleRebootMin = MibTableColumn((1, 3, 6, 1, 4, 1, 27662, 200, 1, 1, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 15, 30, 45))).clone(namedValues=NamedValues(("mins-0", 0), ("mins-15", 15), ("mins-30", 30), ("mins-45", 45)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: apScheduleRebootMin.setStatus('current')
mibBuilder.exportSymbols("AP-SYSTEM-BASIC", apScheduleRebootIndex=apScheduleRebootIndex, apScheduleRebootType=apScheduleRebootType, apSystemInfo=apSystemInfo, apMode=apMode, apCurrentControllerIp=apCurrentControllerIp, PYSNMP_MODULE_ID=ap_system_basic_mib, apVlan=apVlan, apLocation=apLocation, apScheduleRebootDow=apScheduleRebootDow, apEthAdvertise=apEthAdvertise, pepwave=pepwave, apSystemScheduleRebootConfigTable=apSystemScheduleRebootConfigTable, apControllerIp=apControllerIp, apSoftwareVerstion=apSoftwareVerstion, apControllerStatus=apControllerStatus, apNtpServer=apNtpServer, apName=apName, apSystemBasicConfig=apSystemBasicConfig, apScheduleRebootDom=apScheduleRebootDom, apSystemDomain=apSystemDomain, apSystemScheduleRebootConfigEntry=apSystemScheduleRebootConfigEntry, apSystemBasicInfo=apSystemBasicInfo, apMib=apMib, ap_system_basic_mib=ap_system_basic_mib, apUpTime=apUpTime, productID=productID, apStatus=apStatus, apGeneralMib=apGeneralMib, apTimeZone=apTimeZone, apEthSpeedDuplex=apEthSpeedDuplex, apScheduleRebootMin=apScheduleRebootMin, apMacAddress=apMacAddress, apSerialNumber=apSerialNumber, apScheduleReboot=apScheduleReboot, apScheduleRebootHr=apScheduleRebootHr, apTime=apTime, apSystemConfig=apSystemConfig)
