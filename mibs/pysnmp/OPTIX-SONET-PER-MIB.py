#
# PySNMP MIB module OPTIX-SONET-PER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OPTIX-SONET-PER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:26:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
optixCommonSonet, = mibBuilder.importSymbols("OPTIX-OID-MIB", "optixCommonSonet")
ValidflagType, MOD2Type, LocationType, DirectionType, PerformanceEventType = mibBuilder.importSymbols("OPTIX-SONET-TC-MIB", "ValidflagType", "MOD2Type", "LocationType", "DirectionType", "PerformanceEventType")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
TimeTicks, ObjectIdentity, ModuleIdentity, Bits, IpAddress, MibIdentifier, Counter64, Integer32, iso, NotificationType, Counter32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ObjectIdentity", "ModuleIdentity", "Bits", "IpAddress", "MibIdentifier", "Counter64", "Integer32", "iso", "NotificationType", "Counter32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32")
DateAndTime, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TextualConvention", "DisplayString")
optixSonetPerformance = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20))
optixSonetPerformance.setRevisions(('2006-02-25 00:00',))
if mibBuilder.loadTexts: optixSonetPerformance.setLastUpdated('200602250000Z')
if mibBuilder.loadTexts: optixSonetPerformance.setOrganization('Huawei Technologies co.,Ltd.')
pmData = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10))
per15mCurDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 10), )
if mibBuilder.loadTexts: per15mCurDataTable.setStatus('current')
per15mCurDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 10, 1), ).setIndexNames((0, "OPTIX-SONET-PER-MIB", "pm15mCurDataMOD2"), (0, "OPTIX-SONET-PER-MIB", "pm15mCurDataSlot"), (0, "OPTIX-SONET-PER-MIB", "pm15mCurDataPort"), (0, "OPTIX-SONET-PER-MIB", "pm15mCurDataPath"), (0, "OPTIX-SONET-PER-MIB", "pm15mCurDataVT"), (0, "OPTIX-SONET-PER-MIB", "pm15mCurDataName"), (0, "OPTIX-SONET-PER-MIB", "pm15mCurDataLocation"), (0, "OPTIX-SONET-PER-MIB", "pm15mCurDataDirection"))
if mibBuilder.loadTexts: per15mCurDataEntry.setStatus('current')
pm15mCurDataMOD2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 10, 1, 1), MOD2Type()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mCurDataMOD2.setStatus('current')
pm15mCurDataSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 10, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mCurDataSlot.setStatus('current')
pm15mCurDataPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 10, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mCurDataPort.setStatus('current')
pm15mCurDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 10, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mCurDataPath.setStatus('current')
pm15mCurDataVT = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 10, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mCurDataVT.setStatus('current')
pm15mCurDataName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 10, 1, 6), PerformanceEventType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mCurDataName.setStatus('current')
pm15mCurDataLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 10, 1, 7), LocationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mCurDataLocation.setStatus('current')
pm15mCurDataDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 10, 1, 8), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mCurDataDirection.setStatus('current')
pm15mCurDataMonVal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 10, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mCurDataMonVal.setStatus('current')
pm15mCurDataVldty = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 10, 1, 10), ValidflagType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mCurDataVldty.setStatus('current')
pm15mCurDataStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 10, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mCurDataStartTime.setStatus('current')
per15mHisDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 20), )
if mibBuilder.loadTexts: per15mHisDataTable.setStatus('current')
per15mHisDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 20, 1), ).setIndexNames((0, "OPTIX-SONET-PER-MIB", "pm15mHisDataMOD2"), (0, "OPTIX-SONET-PER-MIB", "pm15mHisDataSlot"), (0, "OPTIX-SONET-PER-MIB", "pm15mHisDataPort"), (0, "OPTIX-SONET-PER-MIB", "pm15mHisDataPath"), (0, "OPTIX-SONET-PER-MIB", "pm15mHisDataVT"), (0, "OPTIX-SONET-PER-MIB", "pm15mHisDataName"), (0, "OPTIX-SONET-PER-MIB", "pm15mHisDataLocation"), (0, "OPTIX-SONET-PER-MIB", "pm15mHisDataDirection"), (0, "OPTIX-SONET-PER-MIB", "pm15mHisDataInterval"))
if mibBuilder.loadTexts: per15mHisDataEntry.setStatus('current')
pm15mHisDataMOD2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 20, 1, 1), MOD2Type()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mHisDataMOD2.setStatus('current')
pm15mHisDataSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 20, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mHisDataSlot.setStatus('current')
pm15mHisDataPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 20, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mHisDataPort.setStatus('current')
pm15mHisDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 20, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mHisDataPath.setStatus('current')
pm15mHisDataVT = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 20, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mHisDataVT.setStatus('current')
pm15mHisDataName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 20, 1, 6), PerformanceEventType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mHisDataName.setStatus('current')
pm15mHisDataLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 20, 1, 7), LocationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mHisDataLocation.setStatus('current')
pm15mHisDataDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 20, 1, 8), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mHisDataDirection.setStatus('current')
pm15mHisDataInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 20, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mHisDataInterval.setStatus('current')
pm15mHisDataMonVal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 20, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mHisDataMonVal.setStatus('current')
pm15mHisDataVldty = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 20, 1, 11), ValidflagType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mHisDataVldty.setStatus('current')
pm15mHisDataStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 20, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm15mHisDataStartTime.setStatus('current')
per1dayCurDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 30), )
if mibBuilder.loadTexts: per1dayCurDataTable.setStatus('current')
per1dayCurDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 30, 1), ).setIndexNames((0, "OPTIX-SONET-PER-MIB", "pm1dayCurDataMOD2"), (0, "OPTIX-SONET-PER-MIB", "pm1dayCurDataSlot"), (0, "OPTIX-SONET-PER-MIB", "pm1dayCurDataPort"), (0, "OPTIX-SONET-PER-MIB", "pm1dayCurDataPath"), (0, "OPTIX-SONET-PER-MIB", "pm1dayCurDataVT"), (0, "OPTIX-SONET-PER-MIB", "pm1dayCurDataName"), (0, "OPTIX-SONET-PER-MIB", "pm1dayCurDataLocation"), (0, "OPTIX-SONET-PER-MIB", "pm1dayCurDataDirection"))
if mibBuilder.loadTexts: per1dayCurDataEntry.setStatus('current')
pm1dayCurDataMOD2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 30, 1, 1), MOD2Type()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayCurDataMOD2.setStatus('current')
pm1dayCurDataSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 30, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayCurDataSlot.setStatus('current')
pm1dayCurDataPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 30, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayCurDataPort.setStatus('current')
pm1dayCurDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 30, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayCurDataPath.setStatus('current')
pm1dayCurDataVT = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 30, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayCurDataVT.setStatus('current')
pm1dayCurDataName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 30, 1, 6), PerformanceEventType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayCurDataName.setStatus('current')
pm1dayCurDataLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 30, 1, 7), LocationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayCurDataLocation.setStatus('current')
pm1dayCurDataDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 30, 1, 8), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayCurDataDirection.setStatus('current')
pm1dayCurDataMonVal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 30, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayCurDataMonVal.setStatus('current')
pm1dayCurDataVldty = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 30, 1, 10), ValidflagType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayCurDataVldty.setStatus('current')
pm1dayCurDataStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 30, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayCurDataStartTime.setStatus('current')
per1dayHisDataTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 40), )
if mibBuilder.loadTexts: per1dayHisDataTable.setStatus('current')
per1dayHisDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 40, 1), ).setIndexNames((0, "OPTIX-SONET-PER-MIB", "pm1dayHisDataMOD2"), (0, "OPTIX-SONET-PER-MIB", "pm1dayHisDataSlot"), (0, "OPTIX-SONET-PER-MIB", "pm1dayHisDataPort"), (0, "OPTIX-SONET-PER-MIB", "pm1dayHisDataPath"), (0, "OPTIX-SONET-PER-MIB", "pm1dayHisDataVT"), (0, "OPTIX-SONET-PER-MIB", "pm1dayHisDataName"), (0, "OPTIX-SONET-PER-MIB", "pm1dayHisDataLocation"), (0, "OPTIX-SONET-PER-MIB", "pm1dayHisDataDirection"), (0, "OPTIX-SONET-PER-MIB", "pm1dayHisDataInterval"))
if mibBuilder.loadTexts: per1dayHisDataEntry.setStatus('current')
pm1dayHisDataMOD2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 40, 1, 1), MOD2Type()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayHisDataMOD2.setStatus('current')
pm1dayHisDataSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 40, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayHisDataSlot.setStatus('current')
pm1dayHisDataPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 40, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayHisDataPort.setStatus('current')
pm1dayHisDataPath = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 40, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayHisDataPath.setStatus('current')
pm1dayHisDataVT = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 40, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayHisDataVT.setStatus('current')
pm1dayHisDataName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 40, 1, 6), PerformanceEventType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayHisDataName.setStatus('current')
pm1dayHisDataLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 40, 1, 7), LocationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayHisDataLocation.setStatus('current')
pm1dayHisDataDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 40, 1, 8), DirectionType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayHisDataDirection.setStatus('current')
pm1dayHisDataInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 40, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayHisDataInterval.setStatus('current')
pm1dayHisDataMonVal = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 40, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayHisDataMonVal.setStatus('current')
pm1dayHisDataVldty = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 40, 1, 11), ValidflagType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayHisDataVldty.setStatus('current')
pm1dayHisDataStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 10, 40, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pm1dayHisDataStartTime.setStatus('current')
optixSonetPmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 20))
optixSonetPmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 20, 1))
optixSonetPmObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 20, 1, 1)).setObjects(("OPTIX-SONET-PER-MIB", "pm15mCurDataMOD2"), ("OPTIX-SONET-PER-MIB", "pm15mCurDataSlot"), ("OPTIX-SONET-PER-MIB", "pm15mCurDataPort"), ("OPTIX-SONET-PER-MIB", "pm15mCurDataPath"), ("OPTIX-SONET-PER-MIB", "pm15mCurDataVT"), ("OPTIX-SONET-PER-MIB", "pm15mCurDataName"), ("OPTIX-SONET-PER-MIB", "pm15mCurDataLocation"), ("OPTIX-SONET-PER-MIB", "pm15mCurDataDirection"), ("OPTIX-SONET-PER-MIB", "pm15mCurDataMonVal"), ("OPTIX-SONET-PER-MIB", "pm15mCurDataVldty"), ("OPTIX-SONET-PER-MIB", "pm15mCurDataStartTime"), ("OPTIX-SONET-PER-MIB", "pm15mHisDataMOD2"), ("OPTIX-SONET-PER-MIB", "pm15mHisDataSlot"), ("OPTIX-SONET-PER-MIB", "pm15mHisDataPort"), ("OPTIX-SONET-PER-MIB", "pm15mHisDataPath"), ("OPTIX-SONET-PER-MIB", "pm15mHisDataVT"), ("OPTIX-SONET-PER-MIB", "pm15mHisDataName"), ("OPTIX-SONET-PER-MIB", "pm15mHisDataLocation"), ("OPTIX-SONET-PER-MIB", "pm15mHisDataDirection"), ("OPTIX-SONET-PER-MIB", "pm15mHisDataInterval"), ("OPTIX-SONET-PER-MIB", "pm15mHisDataMonVal"), ("OPTIX-SONET-PER-MIB", "pm15mHisDataVldty"), ("OPTIX-SONET-PER-MIB", "pm15mHisDataStartTime"), ("OPTIX-SONET-PER-MIB", "pm1dayCurDataMOD2"), ("OPTIX-SONET-PER-MIB", "pm1dayCurDataSlot"), ("OPTIX-SONET-PER-MIB", "pm1dayCurDataPort"), ("OPTIX-SONET-PER-MIB", "pm1dayCurDataPath"), ("OPTIX-SONET-PER-MIB", "pm1dayCurDataVT"), ("OPTIX-SONET-PER-MIB", "pm1dayCurDataName"), ("OPTIX-SONET-PER-MIB", "pm1dayCurDataLocation"), ("OPTIX-SONET-PER-MIB", "pm1dayCurDataDirection"), ("OPTIX-SONET-PER-MIB", "pm1dayCurDataMonVal"), ("OPTIX-SONET-PER-MIB", "pm1dayCurDataVldty"), ("OPTIX-SONET-PER-MIB", "pm1dayCurDataStartTime"), ("OPTIX-SONET-PER-MIB", "pm1dayHisDataMOD2"), ("OPTIX-SONET-PER-MIB", "pm1dayHisDataSlot"), ("OPTIX-SONET-PER-MIB", "pm1dayHisDataPort"), ("OPTIX-SONET-PER-MIB", "pm1dayHisDataPath"), ("OPTIX-SONET-PER-MIB", "pm1dayHisDataVT"), ("OPTIX-SONET-PER-MIB", "pm1dayHisDataName"), ("OPTIX-SONET-PER-MIB", "pm1dayHisDataLocation"), ("OPTIX-SONET-PER-MIB", "pm1dayHisDataDirection"), ("OPTIX-SONET-PER-MIB", "pm1dayHisDataInterval"), ("OPTIX-SONET-PER-MIB", "pm1dayHisDataMonVal"), ("OPTIX-SONET-PER-MIB", "pm1dayHisDataVldty"), ("OPTIX-SONET-PER-MIB", "pm1dayHisDataStartTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    optixSonetPmObjectGroup = optixSonetPmObjectGroup.setStatus('current')
optixSonetPmCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 20, 2))
optixSonetPmBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 2, 25, 3, 20, 20, 20, 2, 1)).setObjects(("OPTIX-SONET-PER-MIB", "optixSonetPmObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    optixSonetPmBasicCompliance = optixSonetPmBasicCompliance.setStatus('current')
mibBuilder.exportSymbols("OPTIX-SONET-PER-MIB", per1dayHisDataTable=per1dayHisDataTable, per15mCurDataEntry=per15mCurDataEntry, pm15mCurDataStartTime=pm15mCurDataStartTime, pm15mHisDataMOD2=pm15mHisDataMOD2, pm15mCurDataSlot=pm15mCurDataSlot, pm1dayHisDataSlot=pm1dayHisDataSlot, per15mHisDataTable=per15mHisDataTable, pm15mHisDataStartTime=pm15mHisDataStartTime, pm15mHisDataLocation=pm15mHisDataLocation, pm15mHisDataMonVal=pm15mHisDataMonVal, pm15mCurDataVldty=pm15mCurDataVldty, pm1dayHisDataName=pm1dayHisDataName, pm1dayHisDataMonVal=pm1dayHisDataMonVal, optixSonetPmConformance=optixSonetPmConformance, optixSonetPmGroups=optixSonetPmGroups, pm1dayHisDataVT=pm1dayHisDataVT, pm1dayCurDataMonVal=pm1dayCurDataMonVal, PYSNMP_MODULE_ID=optixSonetPerformance, pm15mHisDataPath=pm15mHisDataPath, per15mHisDataEntry=per15mHisDataEntry, pm15mHisDataSlot=pm15mHisDataSlot, pm15mHisDataDirection=pm15mHisDataDirection, pm15mCurDataPath=pm15mCurDataPath, pm15mCurDataMonVal=pm15mCurDataMonVal, optixSonetPerformance=optixSonetPerformance, pm15mCurDataLocation=pm15mCurDataLocation, pm1dayCurDataStartTime=pm1dayCurDataStartTime, pm1dayCurDataName=pm1dayCurDataName, pm15mHisDataVldty=pm15mHisDataVldty, pm15mCurDataName=pm15mCurDataName, pm15mCurDataVT=pm15mCurDataVT, pm15mHisDataVT=pm15mHisDataVT, pm15mHisDataName=pm15mHisDataName, pm1dayCurDataMOD2=pm1dayCurDataMOD2, pmData=pmData, per1dayHisDataEntry=per1dayHisDataEntry, pm15mHisDataPort=pm15mHisDataPort, optixSonetPmObjectGroup=optixSonetPmObjectGroup, pm15mHisDataInterval=pm15mHisDataInterval, pm15mCurDataDirection=pm15mCurDataDirection, pm1dayHisDataInterval=pm1dayHisDataInterval, pm1dayCurDataVT=pm1dayCurDataVT, per15mCurDataTable=per15mCurDataTable, pm1dayHisDataVldty=pm1dayHisDataVldty, pm1dayCurDataSlot=pm1dayCurDataSlot, optixSonetPmCompliances=optixSonetPmCompliances, pm1dayHisDataDirection=pm1dayHisDataDirection, pm1dayCurDataDirection=pm1dayCurDataDirection, pm1dayHisDataStartTime=pm1dayHisDataStartTime, pm1dayCurDataPath=pm1dayCurDataPath, pm15mCurDataPort=pm15mCurDataPort, per1dayCurDataTable=per1dayCurDataTable, pm1dayCurDataVldty=pm1dayCurDataVldty, pm1dayHisDataMOD2=pm1dayHisDataMOD2, pm1dayHisDataLocation=pm1dayHisDataLocation, optixSonetPmBasicCompliance=optixSonetPmBasicCompliance, per1dayCurDataEntry=per1dayCurDataEntry, pm1dayHisDataPort=pm1dayHisDataPort, pm1dayHisDataPath=pm1dayHisDataPath, pm1dayCurDataPort=pm1dayCurDataPort, pm1dayCurDataLocation=pm1dayCurDataLocation, pm15mCurDataMOD2=pm15mCurDataMOD2)
