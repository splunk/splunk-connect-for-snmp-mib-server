#
# PySNMP MIB module JUNIPER-LSYSSP-POLICYWCNT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-LSYSSP-POLICYWCNT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:49:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
jnxLsysSpPolicywcnt, = mibBuilder.importSymbols("JUNIPER-LSYS-SECURITYPROFILE-MIB", "jnxLsysSpPolicywcnt")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, TimeTicks, ModuleIdentity, iso, Bits, Gauge32, IpAddress, NotificationType, Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Unsigned32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "TimeTicks", "ModuleIdentity", "iso", "Bits", "Gauge32", "IpAddress", "NotificationType", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Unsigned32", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
jnxLsysSpPolicywcntMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 4, 1))
if mibBuilder.loadTexts: jnxLsysSpPolicywcntMIB.setLastUpdated('201005191644Z')
if mibBuilder.loadTexts: jnxLsysSpPolicywcntMIB.setOrganization('Juniper Networks, Inc.')
jnxLsysSpPolicywcntObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 4, 1, 1))
jnxLsysSpPolicywcntSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 4, 1, 2))
jnxLsysSpPolicywcntTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 4, 1, 1, 1), )
if mibBuilder.loadTexts: jnxLsysSpPolicywcntTable.setStatus('current')
jnxLsysSpPolicywcntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 4, 1, 1, 1, 1), ).setIndexNames((1, "JUNIPER-LSYSSP-POLICYWCNT-MIB", "jnxLsysSpPolicywcntLsysName"))
if mibBuilder.loadTexts: jnxLsysSpPolicywcntEntry.setStatus('current')
jnxLsysSpPolicywcntLsysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 4, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: jnxLsysSpPolicywcntLsysName.setStatus('current')
jnxLsysSpPolicywcntProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 4, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicywcntProfileName.setStatus('current')
jnxLsysSpPolicywcntUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 4, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicywcntUsage.setStatus('current')
jnxLsysSpPolicywcntReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 4, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicywcntReserved.setStatus('current')
jnxLsysSpPolicywcntMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 4, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicywcntMaximum.setStatus('current')
jnxLsysSpPolicywcntUsedAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 4, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicywcntUsedAmount.setStatus('current')
jnxLsysSpPolicywcntMaxQuota = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 4, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicywcntMaxQuota.setStatus('current')
jnxLsysSpPolicywcntAvailableAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 4, 1, 2, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicywcntAvailableAmount.setStatus('current')
jnxLsysSpPolicywcntHeaviestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 4, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicywcntHeaviestUsage.setStatus('current')
jnxLsysSpPolicywcntHeaviestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 4, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicywcntHeaviestUser.setStatus('current')
jnxLsysSpPolicywcntLightestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 4, 1, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicywcntLightestUsage.setStatus('current')
jnxLsysSpPolicywcntLightestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 4, 1, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicywcntLightestUser.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-LSYSSP-POLICYWCNT-MIB", jnxLsysSpPolicywcntAvailableAmount=jnxLsysSpPolicywcntAvailableAmount, jnxLsysSpPolicywcntUsage=jnxLsysSpPolicywcntUsage, jnxLsysSpPolicywcntMaxQuota=jnxLsysSpPolicywcntMaxQuota, jnxLsysSpPolicywcntSummary=jnxLsysSpPolicywcntSummary, jnxLsysSpPolicywcntUsedAmount=jnxLsysSpPolicywcntUsedAmount, jnxLsysSpPolicywcntProfileName=jnxLsysSpPolicywcntProfileName, jnxLsysSpPolicywcntReserved=jnxLsysSpPolicywcntReserved, jnxLsysSpPolicywcntMIB=jnxLsysSpPolicywcntMIB, jnxLsysSpPolicywcntEntry=jnxLsysSpPolicywcntEntry, jnxLsysSpPolicywcntHeaviestUser=jnxLsysSpPolicywcntHeaviestUser, jnxLsysSpPolicywcntObjects=jnxLsysSpPolicywcntObjects, jnxLsysSpPolicywcntLightestUsage=jnxLsysSpPolicywcntLightestUsage, jnxLsysSpPolicywcntLightestUser=jnxLsysSpPolicywcntLightestUser, jnxLsysSpPolicywcntLsysName=jnxLsysSpPolicywcntLsysName, jnxLsysSpPolicywcntMaximum=jnxLsysSpPolicywcntMaximum, PYSNMP_MODULE_ID=jnxLsysSpPolicywcntMIB, jnxLsysSpPolicywcntHeaviestUsage=jnxLsysSpPolicywcntHeaviestUsage, jnxLsysSpPolicywcntTable=jnxLsysSpPolicywcntTable)
