#
# PySNMP MIB module HP-ICF-DOWNLOAD (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-DOWNLOAD
# Produced by pysmi-0.3.4 at Mon Apr 29 19:21:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
PhysicalIndex, = mibBuilder.importSymbols("ENTITY-MIB", "PhysicalIndex")
hpicfObjectModules, hpicfCommon = mibBuilder.importSymbols("HP-ICF-OID", "hpicfObjectModules", "hpicfCommon")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, Counter64, Gauge32, Unsigned32, iso, IpAddress, MibIdentifier, Counter32, NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Bits, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "Gauge32", "Unsigned32", "iso", "IpAddress", "MibIdentifier", "Counter32", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Bits", "ModuleIdentity")
TruthValue, TDomain, DisplayString, TAddress, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TDomain", "DisplayString", "TAddress", "RowStatus", "TextualConvention")
hpicfDownloadMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4))
hpicfDownloadMib.setRevisions(('2015-10-14 00:00', '2013-06-21 00:00', '2010-05-11 00:00', '2008-12-10 00:00', '2008-04-04 00:00', '2007-11-05 16:16', '2000-11-03 22:16', '1997-03-06 03:36', '1996-09-10 02:25', '1996-01-25 03:56', '1995-07-13 00:00', '1994-11-20 00:00', '1994-02-25 00:00',))
if mibBuilder.loadTexts: hpicfDownloadMib.setLastUpdated('201510140000Z')
if mibBuilder.loadTexts: hpicfDownloadMib.setOrganization('HP Networking')
hpicfDownload = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3))
hpicfDownloadTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 1), )
if mibBuilder.loadTexts: hpicfDownloadTable.setStatus('deprecated')
hpicfDownloadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 1, 1), ).setIndexNames((0, "HP-ICF-DOWNLOAD", "hpicfDownloadIndex"))
if mibBuilder.loadTexts: hpicfDownloadEntry.setStatus('deprecated')
hpicfDownloadIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("dlInstance", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDownloadIndex.setStatus('deprecated')
hpicfDownloadOwnerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 1, 1, 2), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDownloadOwnerAddress.setStatus('deprecated')
hpicfDownloadOwnerDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 1, 1, 3), TDomain()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDownloadOwnerDomain.setStatus('deprecated')
hpicfDownloadTAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 1, 1, 4), TAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfDownloadTAddress.setStatus('deprecated')
hpicfDownloadTDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 1, 1, 5), TDomain()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfDownloadTDomain.setStatus('deprecated')
hpicfDownloadFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfDownloadFilename.setStatus('deprecated')
hpicfDownloadResetType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noReset", 1), ("warmReset", 2), ("factoryReset", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfDownloadResetType.setStatus('deprecated')
hpicfDownloadErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("fileNotFound", 1), ("accessViolation", 2), ("diskFull", 3), ("illegalOperation", 4), ("unknownTID", 5), ("fileExists", 6), ("noSuchUser", 7), ("notDefined", 8), ("corruptFile", 9), ("noServer", 10), ("tftpTimeout", 11), ("hardwareError", 12), ("success", 13), ("aborted", 14), ("inProgress", 15), ("idle", 16), ("erasingEeprom", 17), ("incompleteFirmware", 18), ("requirePowerCycle", 19), ("cannotUpgrade", 20), ("cannotDowngrade", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDownloadErrorStatus.setStatus('deprecated')
hpicfDownloadErrorText = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDownloadErrorText.setStatus('deprecated')
hpicfDownloadStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfDownloadStatus.setStatus('deprecated')
hpicfDownloadPassesLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDownloadPassesLeft.setStatus('deprecated')
hpicfDownloadOctetCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDownloadOctetCount.setStatus('deprecated')
hpicfDownloadDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63)).clone('/os/primary')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfDownloadDestination.setStatus('deprecated')
hpicfDownloadLogMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDownloadLogMaxSize.setStatus('current')
hpicfDownloadLogSize = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDownloadLogSize.setStatus('current')
hpicfDownloadLogTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 4), )
if mibBuilder.loadTexts: hpicfDownloadLogTable.setStatus('current')
hpicfDownloadLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 4, 1), ).setIndexNames((0, "HP-ICF-DOWNLOAD", "hpicfDlLogIndex"))
if mibBuilder.loadTexts: hpicfDownloadLogEntry.setStatus('current')
hpicfDlLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDlLogIndex.setStatus('current')
hpicfDlLogOwnerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 4, 1, 2), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDlLogOwnerAddress.setStatus('current')
hpicfDlLogOwnerDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 4, 1, 3), TDomain()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDlLogOwnerDomain.setStatus('current')
hpicfDlLogTAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 4, 1, 4), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDlLogTAddress.setStatus('current')
hpicfDlLogTDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 4, 1, 5), TDomain()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDlLogTDomain.setStatus('current')
hpicfDlLogFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDlLogFilename.setStatus('current')
hpicfDlLogResetType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noReset", 1), ("warmReset", 2), ("factoryReset", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDlLogResetType.setStatus('current')
hpicfDlLogErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("fileNotFound", 1), ("accessViolation", 2), ("diskFull", 3), ("illegalOperation", 4), ("unknownTID", 5), ("fileExists", 6), ("noSuchUser", 7), ("notDefined", 8), ("corruptFile", 9), ("noServer", 10), ("tftpTimeout", 11), ("hardwareError", 12), ("success", 13), ("aborted", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDlLogErrorStatus.setStatus('current')
hpicfDlLogErrorText = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 4, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDlLogErrorText.setStatus('current')
hpicfDownloadTftpConfig = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDownloadTftpConfig.setStatus('deprecated')
hpicfDownloadTftpServerConfig = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDownloadTftpServerConfig.setStatus('current')
hpicfDownloadTftp6Config = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDownloadTftp6Config.setStatus('deprecated')
hpicfDownloadTftp6ServerConfig = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDownloadTftp6ServerConfig.setStatus('deprecated')
hpicfDownloadConfigFileUpdateEnabled = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDownloadConfigFileUpdateEnabled.setStatus('current')
hpicfDownloadAutoTftpTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 11), )
if mibBuilder.loadTexts: hpicfDownloadAutoTftpTable.setStatus('current')
hpicfDownloadAutoTftpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 11, 1), ).setIndexNames((0, "HP-ICF-DOWNLOAD", "hpicfDownloadAutoTftpIndex"))
if mibBuilder.loadTexts: hpicfDownloadAutoTftpEntry.setStatus('current')
hpicfDownloadAutoTftpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hpicfDownloadAutoTftpIndex.setStatus('current')
hpicfDownloadAutoTftpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 11, 1, 2), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDownloadAutoTftpAddressType.setStatus('current')
hpicfDownloadAutoTftpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 11, 1, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDownloadAutoTftpAddress.setStatus('current')
hpicfDownloadAutoTftpRemoteFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 11, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDownloadAutoTftpRemoteFilename.setStatus('current')
hpicfDownloadAutoTftpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDownloadAutoTftpAdminStatus.setStatus('current')
hpicfDownloadInetTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9), )
if mibBuilder.loadTexts: hpicfDownloadInetTable.setStatus('current')
hpicfDownloadInetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1), ).setIndexNames((0, "HP-ICF-DOWNLOAD", "hpicfDownloadInetIndex"))
if mibBuilder.loadTexts: hpicfDownloadInetEntry.setStatus('current')
hpicfDownloadInetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDownloadInetIndex.setStatus('current')
hpicfDownloadInetTAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 2), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDownloadInetTAddressType.setStatus('current')
hpicfDownloadInetTAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfDownloadInetTAddress.setStatus('current')
hpicfDownloadInetFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfDownloadInetFilename.setStatus('current')
hpicfDownloadInetOwnerAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 5), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDownloadInetOwnerAddressType.setStatus('current')
hpicfDownloadInetOwnerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDownloadInetOwnerAddress.setStatus('current')
hpicfDownloadInetSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDownloadInetSourcePort.setStatus('current')
hpicfDownloadInetDestinationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDownloadInetDestinationPort.setStatus('current')
hpicfDownloadInetFileTransferType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("usb", 1), ("tftp", 2), ("xmodem", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDownloadInetFileTransferType.setStatus('current')
hpicfDownloadInetResetType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noReset", 1), ("warmReset", 2), ("factoryReset", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfDownloadInetResetType.setStatus('current')
hpicfDownloadInetErrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("fileNotFound", 1), ("accessViolation", 2), ("diskFull", 3), ("illegalOperation", 4), ("unknownTID", 5), ("fileExists", 6), ("noSuchUser", 7), ("notDefined", 8), ("corruptFile", 9), ("noServer", 10), ("tftpTimeout", 11), ("hardwareError", 12), ("success", 13), ("aborted", 14), ("inProgress", 15), ("idle", 16), ("erasingEeprom", 17), ("incompleteFirmware", 18), ("requirePowerCycle", 19), ("cannotUpgrade", 20), ("cannotDowngrade", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDownloadInetErrorStatus.setStatus('current')
hpicfDownloadInetErrorText = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDownloadInetErrorText.setStatus('current')
hpicfDownloadInetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfDownloadInetStatus.setStatus('current')
hpicfDownloadInetPassesLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDownloadInetPassesLeft.setStatus('current')
hpicfDownloadInetOctetCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfDownloadInetOctetCount.setStatus('current')
hpicfDownloadInetDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63)).clone('/os/primary')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfDownloadInetDestination.setStatus('current')
hpicfDownloadInetOpType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ftget", 1), ("ftput", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDownloadInetOpType.setStatus('current')
hpicfDownloadInetFileType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("flash", 1), ("startUpConfig", 2), ("runningConfig", 3), ("config", 4), ("coreDump", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfDownloadInetFileType.setStatus('current')
hpicfDownloadInetFileModeType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unix", 1), ("pc", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfDownloadInetFileModeType.setStatus('current')
hpicfDownloadInetCoreDumpModule = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 9, 1, 20), PhysicalIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfDownloadInetCoreDumpModule.setStatus('current')
hpicfDownloadTftpClientConfig = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDownloadTftpClientConfig.setStatus('current')
hpicfDownloadTftpClientBlkSize = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 1, 3, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 8192)).clone(1416)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfDownloadTftpClientBlkSize.setStatus('current')
hpicfDownloadConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1))
hpicfDownloadCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 1))
hpicfDownloadGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 2))
hpicfDownloadCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 1, 1)).setObjects(("HP-ICF-DOWNLOAD", "hpicfDownloadGroup"), ("HP-ICF-DOWNLOAD", "hpicfDownloadLogGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDownloadCompliance = hpicfDownloadCompliance.setStatus('deprecated')
hpicfDownloadConfigCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 1, 2)).setObjects(("HP-ICF-DOWNLOAD", "hpicfDownloadConfigGroup"), ("HP-ICF-DOWNLOAD", "hpicfDownloadLogGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDownloadConfigCompliance = hpicfDownloadConfigCompliance.setStatus('deprecated')
hpicfDownloadConfigInetCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 1, 3)).setObjects(("HP-ICF-DOWNLOAD", "hpicfDownloadConfigInetGroup"), ("HP-ICF-DOWNLOAD", "hpicfDownloadLogGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDownloadConfigInetCompliance = hpicfDownloadConfigInetCompliance.setStatus('current')
hpicfDownloadAutoTftpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 1, 4)).setObjects(("HP-ICF-DOWNLOAD", "hpicfDownloadAutoTftpGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDownloadAutoTftpCompliance = hpicfDownloadAutoTftpCompliance.setStatus('current')
hpicfDownloadConfigInetCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 1, 5)).setObjects(("HP-ICF-DOWNLOAD", "hpicfDownloadConfigOtherGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDownloadConfigInetCompliance1 = hpicfDownloadConfigInetCompliance1.setStatus('deprecated')
hpicfDownloadConfigInetCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 1, 6)).setObjects(("HP-ICF-DOWNLOAD", "hpicfDownloadConfigOtherGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDownloadConfigInetCompliance2 = hpicfDownloadConfigInetCompliance2.setStatus('deprecated')
hpicfDownloadConfigInetCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 1, 7)).setObjects(("HP-ICF-DOWNLOAD", "hpicfDownloadConfigOtherGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDownloadConfigInetCompliance3 = hpicfDownloadConfigInetCompliance3.setStatus('current')
hpicfDownloadConfigInetCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 1, 8)).setObjects(("HP-ICF-DOWNLOAD", "hpicfDownloadConfigOtherGroup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDownloadConfigInetCompliance4 = hpicfDownloadConfigInetCompliance4.setStatus('current')
hpicfDownloadGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 2, 1)).setObjects(("HP-ICF-DOWNLOAD", "hpicfDownloadIndex"), ("HP-ICF-DOWNLOAD", "hpicfDownloadOwnerAddress"), ("HP-ICF-DOWNLOAD", "hpicfDownloadOwnerDomain"), ("HP-ICF-DOWNLOAD", "hpicfDownloadTAddress"), ("HP-ICF-DOWNLOAD", "hpicfDownloadTDomain"), ("HP-ICF-DOWNLOAD", "hpicfDownloadFilename"), ("HP-ICF-DOWNLOAD", "hpicfDownloadResetType"), ("HP-ICF-DOWNLOAD", "hpicfDownloadErrorStatus"), ("HP-ICF-DOWNLOAD", "hpicfDownloadErrorText"), ("HP-ICF-DOWNLOAD", "hpicfDownloadStatus"), ("HP-ICF-DOWNLOAD", "hpicfDownloadLogMaxSize"), ("HP-ICF-DOWNLOAD", "hpicfDownloadLogSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDownloadGroup = hpicfDownloadGroup.setStatus('deprecated')
hpicfDownloadLogGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 2, 2)).setObjects(("HP-ICF-DOWNLOAD", "hpicfDlLogIndex"), ("HP-ICF-DOWNLOAD", "hpicfDlLogOwnerAddress"), ("HP-ICF-DOWNLOAD", "hpicfDlLogOwnerDomain"), ("HP-ICF-DOWNLOAD", "hpicfDlLogTAddress"), ("HP-ICF-DOWNLOAD", "hpicfDlLogTDomain"), ("HP-ICF-DOWNLOAD", "hpicfDlLogFilename"), ("HP-ICF-DOWNLOAD", "hpicfDlLogResetType"), ("HP-ICF-DOWNLOAD", "hpicfDlLogErrorStatus"), ("HP-ICF-DOWNLOAD", "hpicfDlLogErrorText"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDownloadLogGroup = hpicfDownloadLogGroup.setStatus('current')
hpicfDownloadConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 2, 3)).setObjects(("HP-ICF-DOWNLOAD", "hpicfDownloadIndex"), ("HP-ICF-DOWNLOAD", "hpicfDownloadOwnerAddress"), ("HP-ICF-DOWNLOAD", "hpicfDownloadOwnerDomain"), ("HP-ICF-DOWNLOAD", "hpicfDownloadTAddress"), ("HP-ICF-DOWNLOAD", "hpicfDownloadTDomain"), ("HP-ICF-DOWNLOAD", "hpicfDownloadFilename"), ("HP-ICF-DOWNLOAD", "hpicfDownloadResetType"), ("HP-ICF-DOWNLOAD", "hpicfDownloadErrorStatus"), ("HP-ICF-DOWNLOAD", "hpicfDownloadErrorText"), ("HP-ICF-DOWNLOAD", "hpicfDownloadStatus"), ("HP-ICF-DOWNLOAD", "hpicfDownloadPassesLeft"), ("HP-ICF-DOWNLOAD", "hpicfDownloadOctetCount"), ("HP-ICF-DOWNLOAD", "hpicfDownloadDestination"), ("HP-ICF-DOWNLOAD", "hpicfDownloadLogMaxSize"), ("HP-ICF-DOWNLOAD", "hpicfDownloadLogSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDownloadConfigGroup = hpicfDownloadConfigGroup.setStatus('deprecated')
hpicfDownloadConfigInetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 2, 4)).setObjects(("HP-ICF-DOWNLOAD", "hpicfDownloadLogMaxSize"), ("HP-ICF-DOWNLOAD", "hpicfDownloadLogSize"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetIndex"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetTAddressType"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetTAddress"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetFilename"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetOwnerAddressType"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetOwnerAddress"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetSourcePort"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetDestinationPort"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetFileTransferType"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetResetType"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetErrorStatus"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetErrorText"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetStatus"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetPassesLeft"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetOctetCount"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetDestination"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetOpType"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetFileType"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetFileModeType"), ("HP-ICF-DOWNLOAD", "hpicfDownloadInetCoreDumpModule"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDownloadConfigInetGroup = hpicfDownloadConfigInetGroup.setStatus('current')
hpicfDownloadAutoTftpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 2, 5)).setObjects(("HP-ICF-DOWNLOAD", "hpicfDownloadAutoTftpAddressType"), ("HP-ICF-DOWNLOAD", "hpicfDownloadAutoTftpAddress"), ("HP-ICF-DOWNLOAD", "hpicfDownloadAutoTftpRemoteFilename"), ("HP-ICF-DOWNLOAD", "hpicfDownloadAutoTftpAdminStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDownloadAutoTftpGroup = hpicfDownloadAutoTftpGroup.setStatus('current')
hpicfDownloadConfigOtherGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 2, 6)).setObjects(("HP-ICF-DOWNLOAD", "hpicfDownloadAutoTftpAdminStatus"), ("HP-ICF-DOWNLOAD", "hpicfDownloadTftpConfig"), ("HP-ICF-DOWNLOAD", "hpicfDownloadTftpServerConfig"), ("HP-ICF-DOWNLOAD", "hpicfDownloadConfigFileUpdateEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDownloadConfigOtherGroup = hpicfDownloadConfigOtherGroup.setStatus('deprecated')
hpicfDownloadConfigOtherGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 2, 7)).setObjects(("HP-ICF-DOWNLOAD", "hpicfDownloadTftp6Config"), ("HP-ICF-DOWNLOAD", "hpicfDownloadTftp6ServerConfig"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDownloadConfigOtherGroup1 = hpicfDownloadConfigOtherGroup1.setStatus('deprecated')
hpicfDownloadConfigOtherGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 2, 8)).setObjects(("HP-ICF-DOWNLOAD", "hpicfDownloadAutoTftpAdminStatus"), ("HP-ICF-DOWNLOAD", "hpicfDownloadTftpClientConfig"), ("HP-ICF-DOWNLOAD", "hpicfDownloadTftpServerConfig"), ("HP-ICF-DOWNLOAD", "hpicfDownloadConfigFileUpdateEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDownloadConfigOtherGroup2 = hpicfDownloadConfigOtherGroup2.setStatus('current')
hpicfDownloadConfigOtherGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 10, 2, 4, 1, 2, 9)).setObjects(("HP-ICF-DOWNLOAD", "hpicfDownloadTftpClientBlkSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfDownloadConfigOtherGroup3 = hpicfDownloadConfigOtherGroup3.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-DOWNLOAD", hpicfDownloadGroups=hpicfDownloadGroups, hpicfDownloadInetDestination=hpicfDownloadInetDestination, hpicfDownloadInetCoreDumpModule=hpicfDownloadInetCoreDumpModule, hpicfDownloadInetIndex=hpicfDownloadInetIndex, hpicfDlLogOwnerAddress=hpicfDlLogOwnerAddress, hpicfDownloadInetFileTransferType=hpicfDownloadInetFileTransferType, hpicfDownloadCompliances=hpicfDownloadCompliances, hpicfDlLogTAddress=hpicfDlLogTAddress, hpicfDownloadInetTable=hpicfDownloadInetTable, hpicfDownloadInetStatus=hpicfDownloadInetStatus, hpicfDownloadInetOwnerAddressType=hpicfDownloadInetOwnerAddressType, hpicfDownloadTftp6Config=hpicfDownloadTftp6Config, hpicfDownloadOctetCount=hpicfDownloadOctetCount, hpicfDownloadLogTable=hpicfDownloadLogTable, hpicfDownloadInetFileType=hpicfDownloadInetFileType, hpicfDownloadConfigInetCompliance=hpicfDownloadConfigInetCompliance, hpicfDownloadAutoTftpEntry=hpicfDownloadAutoTftpEntry, hpicfDownloadTftpServerConfig=hpicfDownloadTftpServerConfig, PYSNMP_MODULE_ID=hpicfDownloadMib, hpicfDownloadInetOpType=hpicfDownloadInetOpType, hpicfDownloadAutoTftpAdminStatus=hpicfDownloadAutoTftpAdminStatus, hpicfDownloadConfigOtherGroup3=hpicfDownloadConfigOtherGroup3, hpicfDownloadDestination=hpicfDownloadDestination, hpicfDownloadGroup=hpicfDownloadGroup, hpicfDownloadConfigOtherGroup=hpicfDownloadConfigOtherGroup, hpicfDlLogResetType=hpicfDlLogResetType, hpicfDownloadConfigInetCompliance3=hpicfDownloadConfigInetCompliance3, hpicfDownloadInetTAddressType=hpicfDownloadInetTAddressType, hpicfDownloadConfigOtherGroup1=hpicfDownloadConfigOtherGroup1, hpicfDownloadIndex=hpicfDownloadIndex, hpicfDownloadOwnerDomain=hpicfDownloadOwnerDomain, hpicfDlLogFilename=hpicfDlLogFilename, hpicfDownloadInetFileModeType=hpicfDownloadInetFileModeType, hpicfDownloadConfigFileUpdateEnabled=hpicfDownloadConfigFileUpdateEnabled, hpicfDownloadLogMaxSize=hpicfDownloadLogMaxSize, hpicfDownloadPassesLeft=hpicfDownloadPassesLeft, hpicfDownloadStatus=hpicfDownloadStatus, hpicfDownloadLogEntry=hpicfDownloadLogEntry, hpicfDownloadErrorStatus=hpicfDownloadErrorStatus, hpicfDownloadConfigGroup=hpicfDownloadConfigGroup, hpicfDownloadConformance=hpicfDownloadConformance, hpicfDownloadAutoTftpAddressType=hpicfDownloadAutoTftpAddressType, hpicfDownloadInetEntry=hpicfDownloadInetEntry, hpicfDlLogErrorText=hpicfDlLogErrorText, hpicfDownloadInetFilename=hpicfDownloadInetFilename, hpicfDownloadAutoTftpIndex=hpicfDownloadAutoTftpIndex, hpicfDownloadAutoTftpCompliance=hpicfDownloadAutoTftpCompliance, hpicfDownloadInetErrorText=hpicfDownloadInetErrorText, hpicfDownloadEntry=hpicfDownloadEntry, hpicfDownloadCompliance=hpicfDownloadCompliance, hpicfDownloadInetTAddress=hpicfDownloadInetTAddress, hpicfDownloadAutoTftpRemoteFilename=hpicfDownloadAutoTftpRemoteFilename, hpicfDownloadMib=hpicfDownloadMib, hpicfDownloadTDomain=hpicfDownloadTDomain, hpicfDownloadLogSize=hpicfDownloadLogSize, hpicfDownloadInetResetType=hpicfDownloadInetResetType, hpicfDownloadAutoTftpTable=hpicfDownloadAutoTftpTable, hpicfDownloadAutoTftpAddress=hpicfDownloadAutoTftpAddress, hpicfDownloadTftpClientConfig=hpicfDownloadTftpClientConfig, hpicfDownloadConfigInetCompliance2=hpicfDownloadConfigInetCompliance2, hpicfDownloadConfigOtherGroup2=hpicfDownloadConfigOtherGroup2, hpicfDownloadTftpClientBlkSize=hpicfDownloadTftpClientBlkSize, hpicfDownloadErrorText=hpicfDownloadErrorText, hpicfDownload=hpicfDownload, hpicfDownloadInetSourcePort=hpicfDownloadInetSourcePort, hpicfDownloadInetOwnerAddress=hpicfDownloadInetOwnerAddress, hpicfDownloadConfigInetCompliance1=hpicfDownloadConfigInetCompliance1, hpicfDlLogOwnerDomain=hpicfDlLogOwnerDomain, hpicfDlLogErrorStatus=hpicfDlLogErrorStatus, hpicfDownloadAutoTftpGroup=hpicfDownloadAutoTftpGroup, hpicfDownloadTable=hpicfDownloadTable, hpicfDownloadInetDestinationPort=hpicfDownloadInetDestinationPort, hpicfDownloadLogGroup=hpicfDownloadLogGroup, hpicfDownloadInetPassesLeft=hpicfDownloadInetPassesLeft, hpicfDownloadConfigInetCompliance4=hpicfDownloadConfigInetCompliance4, hpicfDownloadTAddress=hpicfDownloadTAddress, hpicfDownloadTftp6ServerConfig=hpicfDownloadTftp6ServerConfig, hpicfDownloadResetType=hpicfDownloadResetType, hpicfDownloadInetErrorStatus=hpicfDownloadInetErrorStatus, hpicfDownloadTftpConfig=hpicfDownloadTftpConfig, hpicfDlLogIndex=hpicfDlLogIndex, hpicfDownloadInetOctetCount=hpicfDownloadInetOctetCount, hpicfDlLogTDomain=hpicfDlLogTDomain, hpicfDownloadFilename=hpicfDownloadFilename, hpicfDownloadConfigCompliance=hpicfDownloadConfigCompliance, hpicfDownloadConfigInetGroup=hpicfDownloadConfigInetGroup, hpicfDownloadOwnerAddress=hpicfDownloadOwnerAddress)
