#
# PySNMP MIB module CISCO-LWAPP-RF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-LWAPP-RF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:49:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
CLApIfType, = mibBuilder.importSymbols("CISCO-LWAPP-TC-MIB", "CLApIfType")
cLAPGroupName, = mibBuilder.importSymbols("CISCO-LWAPP-WLAN-MIB", "cLAPGroupName")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
NotificationType, Integer32, Counter32, Counter64, MibIdentifier, Bits, ModuleIdentity, Unsigned32, iso, TimeTicks, IpAddress, Gauge32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Integer32", "Counter32", "Counter64", "MibIdentifier", "Bits", "ModuleIdentity", "Unsigned32", "iso", "TimeTicks", "IpAddress", "Gauge32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
StorageType, TextualConvention, DisplayString, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "TextualConvention", "DisplayString", "RowStatus", "TruthValue")
ciscoLwappRFMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 778))
ciscoLwappRFMIB.setRevisions(('2012-04-27 00:00', '2012-01-27 00:00', '2011-11-01 00:00',))
if mibBuilder.loadTexts: ciscoLwappRFMIB.setLastUpdated('201111010000Z')
if mibBuilder.loadTexts: ciscoLwappRFMIB.setOrganization('Cisco Systems Inc.')
ciscoLwappRFMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 778, 0))
ciscoLwappRFMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 778, 1))
ciscoLwappRFMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 778, 2))
ciscoLwappRFConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1))
ciscoLwappRFGlobalObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 2))
class CiscoLwappRFApDataRates(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("disabled", 0), ("supported", 1), ("mandatoryRate", 2), ("notApplicable", 3))

cLAPGroupsRFProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 1), )
if mibBuilder.loadTexts: cLAPGroupsRFProfileTable.setStatus('current')
cLAPGroupsRFProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-WLAN-MIB", "cLAPGroupName"))
if mibBuilder.loadTexts: cLAPGroupsRFProfileEntry.setStatus('current')
cLAPGroups802dot11bgRFProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLAPGroups802dot11bgRFProfileName.setStatus('current')
cLAPGroups802dot11aRFProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLAPGroups802dot11aRFProfileName.setStatus('current')
cLRFProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2), )
if mibBuilder.loadTexts: cLRFProfileTable.setStatus('current')
cLRFProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-RF-MIB", "cLRFProfileName"))
if mibBuilder.loadTexts: cLRFProfileEntry.setStatus('current')
cLRFProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cLRFProfileName.setStatus('current')
cLRFProfileDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileDescr.setStatus('current')
cLRFProfileTransmitPowerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10, 30)).clone(-10)).setUnits('dbm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileTransmitPowerMin.setStatus('current')
cLRFProfileTransmitPowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10, 30)).clone(30)).setUnits('dbm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileTransmitPowerMax.setStatus('current')
cLRFProfileTransmitPowerThresholdV1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-80, -50)).clone(-70)).setUnits('dbm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileTransmitPowerThresholdV1.setStatus('current')
cLRFProfileTransmitPowerThresholdV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-80, -50)).clone(-67)).setUnits('dbm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileTransmitPowerThresholdV2.setStatus('current')
cLRFProfileDataRate1Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 7), CiscoLwappRFApDataRates().clone('mandatoryRate')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileDataRate1Mbps.setStatus('current')
cLRFProfileDataRate2Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 8), CiscoLwappRFApDataRates().clone('mandatoryRate')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileDataRate2Mbps.setStatus('current')
cLRFProfileDataRate5AndHalfMbps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 9), CiscoLwappRFApDataRates().clone('mandatoryRate')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileDataRate5AndHalfMbps.setStatus('current')
cLRFProfileDataRate11Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 10), CiscoLwappRFApDataRates().clone('mandatoryRate')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileDataRate11Mbps.setStatus('current')
cLRFProfileDataRate6Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 11), CiscoLwappRFApDataRates().clone('supported')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileDataRate6Mbps.setStatus('current')
cLRFProfileDataRate9Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 12), CiscoLwappRFApDataRates().clone('supported')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileDataRate9Mbps.setStatus('current')
cLRFProfileDataRate12Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 13), CiscoLwappRFApDataRates().clone('supported')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileDataRate12Mbps.setStatus('current')
cLRFProfileDataRate18Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 14), CiscoLwappRFApDataRates().clone('supported')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileDataRate18Mbps.setStatus('current')
cLRFProfileDataRate24Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 15), CiscoLwappRFApDataRates().clone('supported')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileDataRate24Mbps.setStatus('current')
cLRFProfileDataRate36Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 16), CiscoLwappRFApDataRates().clone('supported')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileDataRate36Mbps.setStatus('current')
cLRFProfileDataRate48Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 17), CiscoLwappRFApDataRates().clone('supported')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileDataRate48Mbps.setStatus('current')
cLRFProfileDataRate54Mbps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 18), CiscoLwappRFApDataRates().clone('supported')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileDataRate54Mbps.setStatus('current')
cLRFProfileRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 19), CLApIfType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileRadioType.setStatus('current')
cLRFProfileStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 20), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileStorageType.setStatus('current')
cLRFProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 21), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileRowStatus.setStatus('current')
cLRFProfileHighDensityMaxRadioClients = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 22), Unsigned32().clone(200)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileHighDensityMaxRadioClients.setStatus('current')
cLRFProfileBandSelectProbeResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 23), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileBandSelectProbeResponse.setStatus('current')
cLRFProfileBandSelectCycleCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 24), Unsigned32().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileBandSelectCycleCount.setStatus('current')
cLRFProfileBandSelectCycleThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 25), Unsigned32().clone(200)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileBandSelectCycleThreshold.setStatus('current')
cLRFProfileBandSelectExpireSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 26), Unsigned32().clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileBandSelectExpireSuppression.setStatus('current')
cLRFProfileBandSelectExpireDualBand = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 27), Unsigned32().clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileBandSelectExpireDualBand.setStatus('current')
cLRFProfileBandSelectClientRSSI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 28), Integer32().clone(-80)).setUnits('dbm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileBandSelectClientRSSI.setStatus('current')
cLRFProfileLoadBalancingWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 29), Unsigned32().clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileLoadBalancingWindowSize.setStatus('current')
cLRFProfileLoadBalancingDenialCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 30), Unsigned32().clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileLoadBalancingDenialCount.setStatus('current')
cLRFProfileCHDDataRSSIThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 31), Integer32().clone(-80)).setUnits('dbm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileCHDDataRSSIThreshold.setStatus('current')
cLRFProfileCHDVoiceRSSIThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 32), Integer32().clone(-80)).setUnits('dbm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileCHDVoiceRSSIThreshold.setStatus('current')
cLRFProfileCHDClientExceptionLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 33), Unsigned32().clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileCHDClientExceptionLevel.setStatus('current')
cLRFProfileCHDCoverageExceptionLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 34), Unsigned32().clone(25)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileCHDCoverageExceptionLevel.setStatus('current')
cLRFProfileMulticastDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 35), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileMulticastDataRate.setStatus('current')
cLRFProfile11nOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 36), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfile11nOnly.setStatus('current')
cLRFProfileHDClientTrapThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 37), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLRFProfileHDClientTrapThreshold.setStatus('current')
cLRFProfileInterferenceThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 38), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLRFProfileInterferenceThreshold.setStatus('current')
cLRFProfileNoiseThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 0))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLRFProfileNoiseThreshold.setStatus('current')
cLRFProfileUtilizationThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 40), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLRFProfileUtilizationThreshold.setStatus('current')
cLRFProfileDCAForeignContribution = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 41), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLRFProfileDCAForeignContribution.setStatus('current')
cLRFProfileDCAChannelWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("min", 1), ("medium", 2), ("max", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLRFProfileDCAChannelWidth.setStatus('current')
cLRFProfileDCAChannelList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 43), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLRFProfileDCAChannelList.setStatus('current')
cLRFProfileRxSopThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 2, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("auto", 0), ("low", 1), ("medium", 2), ("high", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLRFProfileRxSopThreshold.setStatus('current')
cLRFProfileOutOfBoxAPConfig = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 2, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLRFProfileOutOfBoxAPConfig.setStatus('current')
cLRFProfileMcsDataRateTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 3), )
if mibBuilder.loadTexts: cLRFProfileMcsDataRateTable.setStatus('current')
cLRFProfileMcsDataRateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-LWAPP-RF-MIB", "cLRFProfileMcsName"), (0, "CISCO-LWAPP-RF-MIB", "cLRFProfileMcsRate"))
if mibBuilder.loadTexts: cLRFProfileMcsDataRateEntry.setStatus('current')
cLRFProfileMcsName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 3, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cLRFProfileMcsName.setStatus('current')
cLRFProfileMcsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cLRFProfileMcsRate.setStatus('current')
cLRFProfileMcsRateSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 778, 1, 1, 3, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLRFProfileMcsRateSupport.setStatus('current')
ciscoLwappRFMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 778, 2, 1))
ciscoLwappRFMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 778, 2, 2))
ciscoLwappRFMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 778, 2, 1, 1)).setObjects(("CISCO-LWAPP-RF-MIB", "ciscoLwappRFConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappRFMIBCompliance = ciscoLwappRFMIBCompliance.setStatus('deprecated')
ciscoLwappRFMIBComplianceVer1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 778, 2, 1, 2)).setObjects(("CISCO-LWAPP-RF-MIB", "ciscoLwappRFConfigGroup"), ("CISCO-LWAPP-RF-MIB", "ciscoLwappRFConfigGroup1"), ("CISCO-LWAPP-RF-MIB", "ciscoLwappRFGlobalConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappRFMIBComplianceVer1 = ciscoLwappRFMIBComplianceVer1.setStatus('current')
ciscoLwappRFMIBComplianceVer2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 778, 2, 1, 3)).setObjects(("CISCO-LWAPP-RF-MIB", "ciscoLwappRFConfigGroup"), ("CISCO-LWAPP-RF-MIB", "ciscoLwappRFConfigGroup1"), ("CISCO-LWAPP-RF-MIB", "ciscoLwappRFGlobalConfigGroup"), ("CISCO-LWAPP-RF-MIB", "ciscoLwappRFConfigGroup2"), ("CISCO-LWAPP-RF-MIB", "ciscoLwappRFConfigGroup3"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappRFMIBComplianceVer2 = ciscoLwappRFMIBComplianceVer2.setStatus('current')
ciscoLwappRFConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 778, 2, 2, 1)).setObjects(("CISCO-LWAPP-RF-MIB", "cLAPGroups802dot11bgRFProfileName"), ("CISCO-LWAPP-RF-MIB", "cLAPGroups802dot11aRFProfileName"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDescr"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileTransmitPowerMin"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileTransmitPowerMax"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileTransmitPowerThresholdV1"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileTransmitPowerThresholdV2"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate1Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate2Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate5AndHalfMbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate11Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate6Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate9Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate12Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate18Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate24Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate36Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate48Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate54Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileRadioType"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileStorageType"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileRowStatus"), ("CISCO-LWAPP-RF-MIB", "cLRFProfile11nOnly"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappRFConfigGroup = ciscoLwappRFConfigGroup.setStatus('deprecated')
ciscoLwappRFConfigGroupVer1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 778, 2, 2, 2)).setObjects(("CISCO-LWAPP-RF-MIB", "cLAPGroups802dot11bgRFProfileName"), ("CISCO-LWAPP-RF-MIB", "cLAPGroups802dot11aRFProfileName"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDescr"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileTransmitPowerMin"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileTransmitPowerMax"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileTransmitPowerThresholdV1"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileTransmitPowerThresholdV2"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate1Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate2Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate5AndHalfMbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate11Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate6Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate9Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate12Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate18Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate24Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate36Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate48Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDataRate54Mbps"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileRadioType"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileStorageType"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileRowStatus"), ("CISCO-LWAPP-RF-MIB", "cLRFProfile11nOnly"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileMcsName"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileMcsRate"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileMcsRateSupport"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappRFConfigGroupVer1 = ciscoLwappRFConfigGroupVer1.setStatus('current')
ciscoLwappRFConfigGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 778, 2, 2, 5)).setObjects(("CISCO-LWAPP-RF-MIB", "cLRFProfileHighDensityMaxRadioClients"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileBandSelectProbeResponse"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileBandSelectCycleCount"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileBandSelectCycleThreshold"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileBandSelectExpireSuppression"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileBandSelectExpireDualBand"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileBandSelectClientRSSI"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileLoadBalancingWindowSize"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileLoadBalancingDenialCount"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileCHDDataRSSIThreshold"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileCHDVoiceRSSIThreshold"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileCHDClientExceptionLevel"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileCHDCoverageExceptionLevel"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileMulticastDataRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappRFConfigGroup1 = ciscoLwappRFConfigGroup1.setStatus('current')
ciscoLwappRFGlobalConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 778, 2, 2, 3)).setObjects(("CISCO-LWAPP-RF-MIB", "cLRFProfileOutOfBoxAPConfig"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappRFGlobalConfigGroup = ciscoLwappRFGlobalConfigGroup.setStatus('current')
ciscoLwappRFConfigGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 778, 2, 2, 4)).setObjects(("CISCO-LWAPP-RF-MIB", "cLRFProfileHDClientTrapThreshold"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileInterferenceThreshold"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileNoiseThreshold"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileUtilizationThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappRFConfigGroup2 = ciscoLwappRFConfigGroup2.setStatus('current')
ciscoLwappRFConfigGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 778, 2, 2, 6)).setObjects(("CISCO-LWAPP-RF-MIB", "cLRFProfileDCAForeignContribution"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDCAChannelWidth"), ("CISCO-LWAPP-RF-MIB", "cLRFProfileDCAChannelList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappRFConfigGroup3 = ciscoLwappRFConfigGroup3.setStatus('current')
ciscoLwappRFConfigGroup4 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 778, 2, 2, 7)).setObjects(("CISCO-LWAPP-RF-MIB", "cLRFProfileRxSopThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappRFConfigGroup4 = ciscoLwappRFConfigGroup4.setStatus('current')
mibBuilder.exportSymbols("CISCO-LWAPP-RF-MIB", ciscoLwappRFConfig=ciscoLwappRFConfig, cLRFProfileMcsDataRateTable=cLRFProfileMcsDataRateTable, ciscoLwappRFMIBCompliance=ciscoLwappRFMIBCompliance, cLRFProfileDataRate9Mbps=cLRFProfileDataRate9Mbps, ciscoLwappRFConfigGroupVer1=ciscoLwappRFConfigGroupVer1, ciscoLwappRFMIBGroups=ciscoLwappRFMIBGroups, cLRFProfileDCAForeignContribution=cLRFProfileDCAForeignContribution, cLRFProfileDataRate18Mbps=cLRFProfileDataRate18Mbps, cLRFProfileDescr=cLRFProfileDescr, cLRFProfileMcsName=cLRFProfileMcsName, ciscoLwappRFGlobalConfigGroup=ciscoLwappRFGlobalConfigGroup, cLRFProfileBandSelectCycleCount=cLRFProfileBandSelectCycleCount, cLAPGroupsRFProfileTable=cLAPGroupsRFProfileTable, PYSNMP_MODULE_ID=ciscoLwappRFMIB, cLRFProfileHDClientTrapThreshold=cLRFProfileHDClientTrapThreshold, cLAPGroups802dot11bgRFProfileName=cLAPGroups802dot11bgRFProfileName, cLRFProfileOutOfBoxAPConfig=cLRFProfileOutOfBoxAPConfig, cLRFProfileTransmitPowerMax=cLRFProfileTransmitPowerMax, cLRFProfileRowStatus=cLRFProfileRowStatus, cLRFProfileDataRate54Mbps=cLRFProfileDataRate54Mbps, cLRFProfileRadioType=cLRFProfileRadioType, cLRFProfileDataRate11Mbps=cLRFProfileDataRate11Mbps, cLRFProfileDataRate6Mbps=cLRFProfileDataRate6Mbps, cLRFProfileCHDDataRSSIThreshold=cLRFProfileCHDDataRSSIThreshold, cLRFProfileInterferenceThreshold=cLRFProfileInterferenceThreshold, cLRFProfileMcsDataRateEntry=cLRFProfileMcsDataRateEntry, cLRFProfileStorageType=cLRFProfileStorageType, cLRFProfileMcsRate=cLRFProfileMcsRate, cLRFProfileUtilizationThreshold=cLRFProfileUtilizationThreshold, ciscoLwappRFConfigGroup1=ciscoLwappRFConfigGroup1, cLRFProfileDataRate24Mbps=cLRFProfileDataRate24Mbps, cLRFProfileTable=cLRFProfileTable, cLRFProfileBandSelectExpireSuppression=cLRFProfileBandSelectExpireSuppression, ciscoLwappRFConfigGroup4=ciscoLwappRFConfigGroup4, cLRFProfileHighDensityMaxRadioClients=cLRFProfileHighDensityMaxRadioClients, ciscoLwappRFMIBComplianceVer2=ciscoLwappRFMIBComplianceVer2, cLAPGroupsRFProfileEntry=cLAPGroupsRFProfileEntry, cLRFProfileBandSelectClientRSSI=cLRFProfileBandSelectClientRSSI, ciscoLwappRFMIBNotifs=ciscoLwappRFMIBNotifs, ciscoLwappRFMIBObjects=ciscoLwappRFMIBObjects, cLRFProfileTransmitPowerThresholdV1=cLRFProfileTransmitPowerThresholdV1, cLRFProfileLoadBalancingDenialCount=cLRFProfileLoadBalancingDenialCount, cLRFProfileCHDClientExceptionLevel=cLRFProfileCHDClientExceptionLevel, cLRFProfileDCAChannelList=cLRFProfileDCAChannelList, ciscoLwappRFConfigGroup3=ciscoLwappRFConfigGroup3, cLRFProfileDataRate1Mbps=cLRFProfileDataRate1Mbps, cLRFProfileDataRate5AndHalfMbps=cLRFProfileDataRate5AndHalfMbps, CiscoLwappRFApDataRates=CiscoLwappRFApDataRates, cLRFProfileDataRate2Mbps=cLRFProfileDataRate2Mbps, cLRFProfileBandSelectProbeResponse=cLRFProfileBandSelectProbeResponse, cLRFProfileEntry=cLRFProfileEntry, cLRFProfileMcsRateSupport=cLRFProfileMcsRateSupport, ciscoLwappRFMIB=ciscoLwappRFMIB, ciscoLwappRFGlobalObjects=ciscoLwappRFGlobalObjects, cLRFProfileNoiseThreshold=cLRFProfileNoiseThreshold, cLRFProfileDCAChannelWidth=cLRFProfileDCAChannelWidth, cLRFProfileTransmitPowerMin=cLRFProfileTransmitPowerMin, cLRFProfileRxSopThreshold=cLRFProfileRxSopThreshold, cLRFProfileMulticastDataRate=cLRFProfileMulticastDataRate, ciscoLwappRFConfigGroup2=ciscoLwappRFConfigGroup2, cLRFProfileDataRate12Mbps=cLRFProfileDataRate12Mbps, cLRFProfileBandSelectExpireDualBand=cLRFProfileBandSelectExpireDualBand, cLRFProfileTransmitPowerThresholdV2=cLRFProfileTransmitPowerThresholdV2, cLRFProfileDataRate48Mbps=cLRFProfileDataRate48Mbps, cLRFProfile11nOnly=cLRFProfile11nOnly, cLRFProfileCHDCoverageExceptionLevel=cLRFProfileCHDCoverageExceptionLevel, ciscoLwappRFConfigGroup=ciscoLwappRFConfigGroup, cLAPGroups802dot11aRFProfileName=cLAPGroups802dot11aRFProfileName, ciscoLwappRFMIBComplianceVer1=ciscoLwappRFMIBComplianceVer1, cLRFProfileDataRate36Mbps=cLRFProfileDataRate36Mbps, ciscoLwappRFMIBConform=ciscoLwappRFMIBConform, cLRFProfileLoadBalancingWindowSize=cLRFProfileLoadBalancingWindowSize, ciscoLwappRFMIBCompliances=ciscoLwappRFMIBCompliances, cLRFProfileBandSelectCycleThreshold=cLRFProfileBandSelectCycleThreshold, cLRFProfileName=cLRFProfileName, cLRFProfileCHDVoiceRSSIThreshold=cLRFProfileCHDVoiceRSSIThreshold)
