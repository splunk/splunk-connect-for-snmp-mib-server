#
# PySNMP MIB module CX-IPX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CX-IPX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:16:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
cxIpx, = mibBuilder.importSymbols("CXProduct-SMI", "cxIpx")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, NotificationType, Gauge32, Integer32, iso, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, MibIdentifier, Counter32, TimeTicks, ObjectIdentity, Unsigned32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "NotificationType", "Gauge32", "Integer32", "iso", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "MibIdentifier", "Counter32", "TimeTicks", "ObjectIdentity", "Unsigned32", "IpAddress")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ipxStatsTable = MibTable((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2), )
if mibBuilder.loadTexts: ipxStatsTable.setStatus('mandatory')
ipxStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1), ).setIndexNames((0, "CX-IPX-MIB", "ipxSysIndex"))
if mibBuilder.loadTexts: ipxStatsEntry.setStatus('mandatory')
ipxSysIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysIndex.setStatus('mandatory')
ipxSysInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysInReceives.setStatus('mandatory')
ipxSysInHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysInHdrErrors.setStatus('mandatory')
ipxSysInFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysInFiltered.setStatus('mandatory')
ipxSysInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysInDiscards.setStatus('mandatory')
ipxSysForwPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysForwPackets.setStatus('mandatory')
ipxSysOutFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysOutFiltered.setStatus('mandatory')
ipxSysOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysOutDiscards.setStatus('mandatory')
ipxSysOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysOutPackets.setStatus('mandatory')
ipxSysResourceFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysResourceFailures.setStatus('mandatory')
ripsapSysRIPIncorrectPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripsapSysRIPIncorrectPackets.setStatus('mandatory')
ripsapSysSAPIncorrectPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripsapSysSAPIncorrectPackets.setStatus('mandatory')
ripsapCircRIPOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripsapCircRIPOutPackets.setStatus('mandatory')
ripsapCircRIPInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripsapCircRIPInPackets.setStatus('mandatory')
ripsapCircSAPOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripsapCircSAPOutPackets.setStatus('mandatory')
ripsapCircSAPInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ripsapCircSAPInPackets.setStatus('mandatory')
ipxSysWatchReq = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysWatchReq.setStatus('mandatory')
ipxSysWatchRsp = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysWatchRsp.setStatus('mandatory')
ipxSysSerRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 495, 2, 1, 6, 13, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysSerRcv.setStatus('mandatory')
mibBuilder.exportSymbols("CX-IPX-MIB", ipxSysInHdrErrors=ipxSysInHdrErrors, ipxSysInDiscards=ipxSysInDiscards, ipxSysOutPackets=ipxSysOutPackets, ipxSysInFiltered=ipxSysInFiltered, ripsapSysRIPIncorrectPackets=ripsapSysRIPIncorrectPackets, ipxStatsTable=ipxStatsTable, ipxSysOutDiscards=ipxSysOutDiscards, ripsapCircRIPInPackets=ripsapCircRIPInPackets, ripsapCircRIPOutPackets=ripsapCircRIPOutPackets, ipxSysWatchReq=ipxSysWatchReq, ipxStatsEntry=ipxStatsEntry, ipxSysResourceFailures=ipxSysResourceFailures, ripsapCircSAPInPackets=ripsapCircSAPInPackets, ripsapCircSAPOutPackets=ripsapCircSAPOutPackets, ipxSysInReceives=ipxSysInReceives, ripsapSysSAPIncorrectPackets=ripsapSysSAPIncorrectPackets, ipxSysOutFiltered=ipxSysOutFiltered, ipxSysWatchRsp=ipxSysWatchRsp, ipxSysIndex=ipxSysIndex, ipxSysForwPackets=ipxSysForwPackets, ipxSysSerRcv=ipxSysSerRcv)
