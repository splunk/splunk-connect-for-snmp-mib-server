#
# PySNMP MIB module RBN-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RBN-QOS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:44:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
rbnMgmt, = mibBuilder.importSymbols("RBN-SMI", "rbnMgmt")
rbnSubsActiveSessionId, rbnSubsActiveName = mibBuilder.importSymbols("RBN-SUBSCRIBER-ACTIVE-MIB", "rbnSubsActiveSessionId", "rbnSubsActiveName")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Integer32, NotificationType, MibIdentifier, ModuleIdentity, Counter64, ObjectIdentity, Unsigned32, iso, Counter32, TimeTicks, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "NotificationType", "MibIdentifier", "ModuleIdentity", "Counter64", "ObjectIdentity", "Unsigned32", "iso", "Counter32", "TimeTicks", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
rbnQosMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2352, 2, 22))
rbnQosMib.setRevisions(('2007-07-30 00:00', '2006-09-12 00:00', '2005-09-26 00:00', '2003-07-18 00:00', '2002-03-22 00:00',))
if mibBuilder.loadTexts: rbnQosMib.setLastUpdated('200707300000Z')
if mibBuilder.loadTexts: rbnQosMib.setOrganization('Redback Networks, Inc.')
rbnQosMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1))
rbnQosMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 22, 2))
class RbnQosPolicyType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("policing", 1), ("metering", 2), ("edrr", 3), ("mdrr", 4), ("pq", 5), ("atmwfq", 6), ("pwfq", 7))

class RbnQosClassId(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 8)

rbnQosInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 1), )
if mibBuilder.loadTexts: rbnQosInterfaceTable.setStatus('current')
rbnQosInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: rbnQosInterfaceEntry.setStatus('current')
rbnQosIfInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfInOctets.setStatus('current')
rbnQosIfHCInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfHCInOctets.setStatus('current')
rbnQosIfOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfOutOctets.setStatus('current')
rbnQosIfHCOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfHCOutOctets.setStatus('current')
rbnQosIfInDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfInDroppedOctets.setStatus('current')
rbnQosIfHCInDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfHCInDroppedOctets.setStatus('current')
rbnQosIfOutDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfOutDroppedOctets.setStatus('current')
rbnQosIfHCOutDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfHCOutDroppedOctets.setStatus('current')
rbnQosInterfaceQueueStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 2), )
if mibBuilder.loadTexts: rbnQosInterfaceQueueStatsTable.setStatus('current')
rbnQosInterfaceQueueStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "RBN-QOS-MIB", "rbnQosIfQueueId"))
if mibBuilder.loadTexts: rbnQosInterfaceQueueStatsEntry.setStatus('current')
rbnQosIfQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: rbnQosIfQueueId.setStatus('current')
rbnQosIfQueueOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfQueueOutOctets.setStatus('current')
rbnQosIfQueueOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfQueueOutPkts.setStatus('current')
rbnQosIfQueueWredDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfQueueWredDroppedOctets.setStatus('current')
rbnQosIfQueueWredDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfQueueWredDroppedPkts.setStatus('current')
rbnQosIfQueueTailDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfQueueTailDroppedOctets.setStatus('current')
rbnQosIfQueueTailDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfQueueTailDroppedPkts.setStatus('current')
rbnQosIfQueueHCOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfQueueHCOutOctets.setStatus('current')
rbnQosIfQueueHCOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfQueueHCOutPkts.setStatus('current')
rbnQosIfQueueHCWredDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfQueueHCWredDroppedOctets.setStatus('current')
rbnQosIfQueueHCWredDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfQueueHCWredDroppedPkts.setStatus('current')
rbnQosIfQueueHCTailDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfQueueHCTailDroppedOctets.setStatus('current')
rbnQosIfQueueHCTailDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfQueueHCTailDroppedPkts.setStatus('current')
rbnQosSubscriberQueueStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 3), )
if mibBuilder.loadTexts: rbnQosSubscriberQueueStatsTable.setStatus('current')
rbnQosSubscriberQueueStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 3, 1), ).setIndexNames((0, "RBN-SUBSCRIBER-ACTIVE-MIB", "rbnSubsActiveName"), (0, "RBN-SUBSCRIBER-ACTIVE-MIB", "rbnSubsActiveSessionId"), (0, "RBN-QOS-MIB", "rbnQosSubsQueueId"))
if mibBuilder.loadTexts: rbnQosSubscriberQueueStatsEntry.setStatus('current')
rbnQosSubsQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)))
if mibBuilder.loadTexts: rbnQosSubsQueueId.setStatus('current')
rbnQosSubsQueuePolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsQueuePolicyName.setStatus('current')
rbnQosSubsQueueOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsQueueOutOctets.setStatus('current')
rbnQosSubsQueueOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsQueueOutPkts.setStatus('current')
rbnQosSubsQueueWredDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsQueueWredDroppedOctets.setStatus('current')
rbnQosSubsQueueWredDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsQueueWredDroppedPkts.setStatus('current')
rbnQosSubsQueueTailDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsQueueTailDroppedOctets.setStatus('current')
rbnQosSubsQueueTailDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsQueueTailDroppedPkts.setStatus('current')
rbnQosSubsQueueHCOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsQueueHCOutOctets.setStatus('current')
rbnQosSubsQueueHCOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsQueueHCOutPkts.setStatus('current')
rbnQosSubsQueueHCWredDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsQueueHCWredDroppedOctets.setStatus('current')
rbnQosSubsQueueHCWredDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsQueueHCWredDroppedPkts.setStatus('current')
rbnQosSubsQueueHCTailDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsQueueHCTailDroppedOctets.setStatus('current')
rbnQosSubsQueueHCTailDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsQueueHCTailDroppedPkts.setStatus('current')
rbnQosIntfRLClassStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 4), )
if mibBuilder.loadTexts: rbnQosIntfRLClassStatsTable.setStatus('current')
rbnQosIntfRLClassStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "RBN-QOS-MIB", "rbnQosIfRLPolicyType"), (0, "RBN-QOS-MIB", "rbnQosIfRLClassId"))
if mibBuilder.loadTexts: rbnQosIntfRLClassStatsEntry.setStatus('current')
rbnQosIfRLPolicyType = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 4, 1, 1), RbnQosPolicyType())
if mibBuilder.loadTexts: rbnQosIfRLPolicyType.setStatus('current')
rbnQosIfRLClassId = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 4, 1, 2), RbnQosClassId())
if mibBuilder.loadTexts: rbnQosIfRLClassId.setStatus('current')
rbnQosIfRLPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 4, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfRLPolicyName.setStatus('current')
rbnQosIfRLClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 4, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfRLClassName.setStatus('current')
rbnQosIfRLClassConformOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfRLClassConformOctets.setStatus('current')
rbnQosIfRLClassConformPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfRLClassConformPkts.setStatus('current')
rbnQosIfRLClassConformDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfRLClassConformDroppedOctets.setStatus('current')
rbnQosIfRLClassConformDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfRLClassConformDroppedPkts.setStatus('current')
rbnQosIfRLClassExceedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfRLClassExceedOctets.setStatus('current')
rbnQosIfRLClassExceedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfRLClassExceedPkts.setStatus('current')
rbnQosIfRLClassExceedDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfRLClassExceedDroppedOctets.setStatus('current')
rbnQosIfRLClassExceedDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfRLClassExceedDroppedPkts.setStatus('current')
rbnQosIfRLClassViolateOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfRLClassViolateOctets.setStatus('current')
rbnQosIfRLClassViolatePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfRLClassViolatePkts.setStatus('current')
rbnQosIfRLClassViolateDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfRLClassViolateDroppedOctets.setStatus('current')
rbnQosIfRLClassViolateDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosIfRLClassViolateDroppedPkts.setStatus('current')
rbnQosSubscriberRLClassStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 5), )
if mibBuilder.loadTexts: rbnQosSubscriberRLClassStatsTable.setStatus('current')
rbnQosSubscriberRLClassStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 5, 1), ).setIndexNames((0, "RBN-SUBSCRIBER-ACTIVE-MIB", "rbnSubsActiveName"), (0, "RBN-SUBSCRIBER-ACTIVE-MIB", "rbnSubsActiveSessionId"), (0, "RBN-QOS-MIB", "rbnQosSubsRLPolicyType"), (0, "RBN-QOS-MIB", "rbnQosSubsRLClassId"))
if mibBuilder.loadTexts: rbnQosSubscriberRLClassStatsEntry.setStatus('current')
rbnQosSubsRLPolicyType = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 5, 1, 1), RbnQosPolicyType())
if mibBuilder.loadTexts: rbnQosSubsRLPolicyType.setStatus('current')
rbnQosSubsRLClassId = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 5, 1, 2), RbnQosClassId())
if mibBuilder.loadTexts: rbnQosSubsRLClassId.setStatus('current')
rbnQosSubsRLPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 5, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsRLPolicyName.setStatus('current')
rbnQosSubsRLClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 5, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsRLClassName.setStatus('current')
rbnQosSubsRLClassConformOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsRLClassConformOctets.setStatus('current')
rbnQosSubsRLClassConformPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsRLClassConformPkts.setStatus('current')
rbnQosSubsRLClassConformDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsRLClassConformDroppedOctets.setStatus('current')
rbnQosSubsRLClassConformDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsRLClassConformDroppedPkts.setStatus('current')
rbnQosSubsRLClassExceedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsRLClassExceedOctets.setStatus('current')
rbnQosSubsRLClassExceedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 5, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsRLClassExceedPkts.setStatus('current')
rbnQosSubsRLClassExceedDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 5, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsRLClassExceedDroppedOctets.setStatus('current')
rbnQosSubsRLClassExceedDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 5, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsRLClassExceedDroppedPkts.setStatus('current')
rbnQosSubsRLClassViolateOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 5, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsRLClassViolateOctets.setStatus('current')
rbnQosSubsRLClassViolatePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 5, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsRLClassViolatePkts.setStatus('current')
rbnQosSubsRLClassViolateDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 5, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsRLClassViolateDroppedOctets.setStatus('current')
rbnQosSubsRLClassViolateDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 5, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosSubsRLClassViolateDroppedPkts.setStatus('current')
rbnQosHierarchicalPolicyStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 6), )
if mibBuilder.loadTexts: rbnQosHierarchicalPolicyStatsTable.setStatus('current')
rbnQosHierarchicalPolicyStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "RBN-QOS-MIB", "rbnQosHierarchicalPolicyType"))
if mibBuilder.loadTexts: rbnQosHierarchicalPolicyStatsEntry.setStatus('current')
rbnQosHierarchicalPolicyType = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 6, 1, 1), RbnQosPolicyType())
if mibBuilder.loadTexts: rbnQosHierarchicalPolicyType.setStatus('current')
rbnQosHierarchicalPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 6, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosHierarchicalPolicyName.setStatus('current')
rbnQosHierarchicalPolicyDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosHierarchicalPolicyDroppedOctets.setStatus('current')
rbnQosHierarchicalPolicyDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosHierarchicalPolicyDroppedPkts.setStatus('current')
rbnQosHierarchicalPClassStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 7), )
if mibBuilder.loadTexts: rbnQosHierarchicalPClassStatsTable.setStatus('current')
rbnQosHierarchicalPClassStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "RBN-QOS-MIB", "rbnQosHierarchicalPolicyType"), (0, "RBN-QOS-MIB", "rbnQosHierarchicalPClassId"))
if mibBuilder.loadTexts: rbnQosHierarchicalPClassStatsEntry.setStatus('current')
rbnQosHierarchicalPClassId = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 7, 1, 1), RbnQosClassId())
if mibBuilder.loadTexts: rbnQosHierarchicalPClassId.setStatus('current')
rbnQosHierarchicalPClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 7, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 39))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosHierarchicalPClassName.setStatus('current')
rbnQosHierarchicalPClassDroppedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosHierarchicalPClassDroppedOctets.setStatus('current')
rbnQosHierarchicalPClassDroppedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2352, 2, 22, 1, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rbnQosHierarchicalPClassDroppedPkts.setStatus('current')
rbnQosCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 22, 2, 1))
rbnQosGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2352, 2, 22, 2, 2))
rbnQosCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2352, 2, 22, 2, 1, 1)).setObjects(("RBN-QOS-MIB", "rbnQosIfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnQosCompliance = rbnQosCompliance.setStatus('deprecated')
rbnQosCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 2352, 2, 22, 2, 1, 2)).setObjects(("RBN-QOS-MIB", "rbnQosIfGroup"), ("RBN-QOS-MIB", "rbnQosIfQueueGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnQosCompliance2 = rbnQosCompliance2.setStatus('current')
rbnQosCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 2352, 2, 22, 2, 1, 3)).setObjects(("RBN-QOS-MIB", "rbnQosIfGroup"), ("RBN-QOS-MIB", "rbnQosIfQueueGroup"), ("RBN-QOS-MIB", "rbnQosSubscriberQueueGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnQosCompliance3 = rbnQosCompliance3.setStatus('current')
rbnQosCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 2352, 2, 22, 2, 1, 4)).setObjects(("RBN-QOS-MIB", "rbnQosIfGroup"), ("RBN-QOS-MIB", "rbnQosIfQueueGroup"), ("RBN-QOS-MIB", "rbnQosSubscriberQueueGroup"), ("RBN-QOS-MIB", "rbnQosIfRLClassStatsGroup"), ("RBN-QOS-MIB", "rbnQosSubscriberRLClassStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnQosCompliance4 = rbnQosCompliance4.setStatus('current')
rbnQosCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 2352, 2, 22, 2, 1, 5)).setObjects(("RBN-QOS-MIB", "rbnQosIfGroup"), ("RBN-QOS-MIB", "rbnQosIfQueueGroup"), ("RBN-QOS-MIB", "rbnQosSubscriberQueueGroup"), ("RBN-QOS-MIB", "rbnQosIfRLClassStatsGroup"), ("RBN-QOS-MIB", "rbnQosSubscriberRLClassStatsGroup"), ("RBN-QOS-MIB", "rbnQosHierarchicalPolicyStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnQosCompliance5 = rbnQosCompliance5.setStatus('current')
rbnQosIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2352, 2, 22, 2, 2, 1)).setObjects(("RBN-QOS-MIB", "rbnQosIfInOctets"), ("RBN-QOS-MIB", "rbnQosIfHCInOctets"), ("RBN-QOS-MIB", "rbnQosIfOutOctets"), ("RBN-QOS-MIB", "rbnQosIfHCOutOctets"), ("RBN-QOS-MIB", "rbnQosIfInDroppedOctets"), ("RBN-QOS-MIB", "rbnQosIfHCInDroppedOctets"), ("RBN-QOS-MIB", "rbnQosIfOutDroppedOctets"), ("RBN-QOS-MIB", "rbnQosIfHCOutDroppedOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnQosIfGroup = rbnQosIfGroup.setStatus('current')
rbnQosIfQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2352, 2, 22, 2, 2, 2)).setObjects(("RBN-QOS-MIB", "rbnQosIfQueueOutOctets"), ("RBN-QOS-MIB", "rbnQosIfQueueHCOutOctets"), ("RBN-QOS-MIB", "rbnQosIfQueueOutPkts"), ("RBN-QOS-MIB", "rbnQosIfQueueHCOutPkts"), ("RBN-QOS-MIB", "rbnQosIfQueueWredDroppedOctets"), ("RBN-QOS-MIB", "rbnQosIfQueueHCWredDroppedOctets"), ("RBN-QOS-MIB", "rbnQosIfQueueWredDroppedPkts"), ("RBN-QOS-MIB", "rbnQosIfQueueHCWredDroppedPkts"), ("RBN-QOS-MIB", "rbnQosIfQueueTailDroppedOctets"), ("RBN-QOS-MIB", "rbnQosIfQueueHCTailDroppedOctets"), ("RBN-QOS-MIB", "rbnQosIfQueueTailDroppedPkts"), ("RBN-QOS-MIB", "rbnQosIfQueueHCTailDroppedPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnQosIfQueueGroup = rbnQosIfQueueGroup.setStatus('current')
rbnQosSubscriberQueueGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2352, 2, 22, 2, 2, 3)).setObjects(("RBN-QOS-MIB", "rbnQosSubsQueuePolicyName"), ("RBN-QOS-MIB", "rbnQosSubsQueueOutOctets"), ("RBN-QOS-MIB", "rbnQosSubsQueueOutPkts"), ("RBN-QOS-MIB", "rbnQosSubsQueueWredDroppedOctets"), ("RBN-QOS-MIB", "rbnQosSubsQueueWredDroppedPkts"), ("RBN-QOS-MIB", "rbnQosSubsQueueTailDroppedOctets"), ("RBN-QOS-MIB", "rbnQosSubsQueueTailDroppedPkts"), ("RBN-QOS-MIB", "rbnQosSubsQueueHCOutOctets"), ("RBN-QOS-MIB", "rbnQosSubsQueueHCOutPkts"), ("RBN-QOS-MIB", "rbnQosSubsQueueHCWredDroppedOctets"), ("RBN-QOS-MIB", "rbnQosSubsQueueHCWredDroppedPkts"), ("RBN-QOS-MIB", "rbnQosSubsQueueHCTailDroppedOctets"), ("RBN-QOS-MIB", "rbnQosSubsQueueHCTailDroppedPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnQosSubscriberQueueGroup = rbnQosSubscriberQueueGroup.setStatus('current')
rbnQosIfRLClassStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2352, 2, 22, 2, 2, 4)).setObjects(("RBN-QOS-MIB", "rbnQosIfRLPolicyName"), ("RBN-QOS-MIB", "rbnQosIfRLClassName"), ("RBN-QOS-MIB", "rbnQosIfRLClassConformOctets"), ("RBN-QOS-MIB", "rbnQosIfRLClassConformPkts"), ("RBN-QOS-MIB", "rbnQosIfRLClassConformDroppedOctets"), ("RBN-QOS-MIB", "rbnQosIfRLClassConformDroppedPkts"), ("RBN-QOS-MIB", "rbnQosIfRLClassExceedOctets"), ("RBN-QOS-MIB", "rbnQosIfRLClassExceedPkts"), ("RBN-QOS-MIB", "rbnQosIfRLClassExceedDroppedOctets"), ("RBN-QOS-MIB", "rbnQosIfRLClassExceedDroppedPkts"), ("RBN-QOS-MIB", "rbnQosIfRLClassViolateOctets"), ("RBN-QOS-MIB", "rbnQosIfRLClassViolatePkts"), ("RBN-QOS-MIB", "rbnQosIfRLClassViolateDroppedOctets"), ("RBN-QOS-MIB", "rbnQosIfRLClassViolateDroppedPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnQosIfRLClassStatsGroup = rbnQosIfRLClassStatsGroup.setStatus('current')
rbnQosSubscriberRLClassStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2352, 2, 22, 2, 2, 5)).setObjects(("RBN-QOS-MIB", "rbnQosSubsRLPolicyName"), ("RBN-QOS-MIB", "rbnQosSubsRLClassName"), ("RBN-QOS-MIB", "rbnQosSubsRLClassConformOctets"), ("RBN-QOS-MIB", "rbnQosSubsRLClassConformPkts"), ("RBN-QOS-MIB", "rbnQosSubsRLClassConformDroppedOctets"), ("RBN-QOS-MIB", "rbnQosSubsRLClassConformDroppedPkts"), ("RBN-QOS-MIB", "rbnQosSubsRLClassExceedOctets"), ("RBN-QOS-MIB", "rbnQosSubsRLClassExceedPkts"), ("RBN-QOS-MIB", "rbnQosSubsRLClassExceedDroppedOctets"), ("RBN-QOS-MIB", "rbnQosSubsRLClassExceedDroppedPkts"), ("RBN-QOS-MIB", "rbnQosSubsRLClassViolateOctets"), ("RBN-QOS-MIB", "rbnQosSubsRLClassViolatePkts"), ("RBN-QOS-MIB", "rbnQosSubsRLClassViolateDroppedOctets"), ("RBN-QOS-MIB", "rbnQosSubsRLClassViolateDroppedPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnQosSubscriberRLClassStatsGroup = rbnQosSubscriberRLClassStatsGroup.setStatus('current')
rbnQosHierarchicalPolicyStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2352, 2, 22, 2, 2, 6)).setObjects(("RBN-QOS-MIB", "rbnQosHierarchicalPolicyName"), ("RBN-QOS-MIB", "rbnQosHierarchicalPolicyDroppedOctets"), ("RBN-QOS-MIB", "rbnQosHierarchicalPolicyDroppedPkts"), ("RBN-QOS-MIB", "rbnQosHierarchicalPClassName"), ("RBN-QOS-MIB", "rbnQosHierarchicalPClassDroppedOctets"), ("RBN-QOS-MIB", "rbnQosHierarchicalPClassDroppedPkts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rbnQosHierarchicalPolicyStatsGroup = rbnQosHierarchicalPolicyStatsGroup.setStatus('current')
mibBuilder.exportSymbols("RBN-QOS-MIB", rbnQosIfRLClassViolatePkts=rbnQosIfRLClassViolatePkts, rbnQosSubsRLClassViolatePkts=rbnQosSubsRLClassViolatePkts, rbnQosSubscriberQueueGroup=rbnQosSubscriberQueueGroup, rbnQosMib=rbnQosMib, rbnQosIfQueueOutOctets=rbnQosIfQueueOutOctets, rbnQosSubscriberQueueStatsEntry=rbnQosSubscriberQueueStatsEntry, rbnQosSubsQueueOutPkts=rbnQosSubsQueueOutPkts, rbnQosIfRLPolicyName=rbnQosIfRLPolicyName, rbnQosSubsQueueHCOutOctets=rbnQosSubsQueueHCOutOctets, rbnQosHierarchicalPClassStatsTable=rbnQosHierarchicalPClassStatsTable, rbnQosCompliance2=rbnQosCompliance2, rbnQosCompliance=rbnQosCompliance, rbnQosIntfRLClassStatsEntry=rbnQosIntfRLClassStatsEntry, rbnQosIfInOctets=rbnQosIfInOctets, rbnQosIfOutDroppedOctets=rbnQosIfOutDroppedOctets, rbnQosSubsRLClassConformDroppedPkts=rbnQosSubsRLClassConformDroppedPkts, rbnQosSubsQueueHCWredDroppedPkts=rbnQosSubsQueueHCWredDroppedPkts, rbnQosIfHCInDroppedOctets=rbnQosIfHCInDroppedOctets, rbnQosSubsQueueHCTailDroppedPkts=rbnQosSubsQueueHCTailDroppedPkts, rbnQosIfRLClassId=rbnQosIfRLClassId, rbnQosIfRLClassConformPkts=rbnQosIfRLClassConformPkts, rbnQosIfOutOctets=rbnQosIfOutOctets, rbnQosHierarchicalPClassDroppedPkts=rbnQosHierarchicalPClassDroppedPkts, rbnQosIfQueueHCOutPkts=rbnQosIfQueueHCOutPkts, rbnQosSubsQueueTailDroppedPkts=rbnQosSubsQueueTailDroppedPkts, rbnQosIfRLClassName=rbnQosIfRLClassName, rbnQosCompliances=rbnQosCompliances, rbnQosSubsRLClassViolateDroppedPkts=rbnQosSubsRLClassViolateDroppedPkts, rbnQosSubscriberRLClassStatsGroup=rbnQosSubscriberRLClassStatsGroup, rbnQosIfQueueHCWredDroppedOctets=rbnQosIfQueueHCWredDroppedOctets, rbnQosIfQueueId=rbnQosIfQueueId, rbnQosSubsRLClassExceedDroppedOctets=rbnQosSubsRLClassExceedDroppedOctets, rbnQosSubsRLClassId=rbnQosSubsRLClassId, rbnQosSubsQueueHCOutPkts=rbnQosSubsQueueHCOutPkts, rbnQosIfRLClassStatsGroup=rbnQosIfRLClassStatsGroup, rbnQosHierarchicalPClassId=rbnQosHierarchicalPClassId, rbnQosIfQueueHCOutOctets=rbnQosIfQueueHCOutOctets, rbnQosSubsQueueOutOctets=rbnQosSubsQueueOutOctets, rbnQosIfGroup=rbnQosIfGroup, rbnQosSubsRLPolicyName=rbnQosSubsRLPolicyName, rbnQosSubsQueueTailDroppedOctets=rbnQosSubsQueueTailDroppedOctets, rbnQosIfQueueHCWredDroppedPkts=rbnQosIfQueueHCWredDroppedPkts, PYSNMP_MODULE_ID=rbnQosMib, rbnQosSubsRLPolicyType=rbnQosSubsRLPolicyType, rbnQosInterfaceTable=rbnQosInterfaceTable, rbnQosIfQueueHCTailDroppedOctets=rbnQosIfQueueHCTailDroppedOctets, rbnQosSubscriberRLClassStatsTable=rbnQosSubscriberRLClassStatsTable, rbnQosSubsRLClassExceedDroppedPkts=rbnQosSubsRLClassExceedDroppedPkts, rbnQosHierarchicalPolicyType=rbnQosHierarchicalPolicyType, RbnQosClassId=RbnQosClassId, rbnQosSubsRLClassExceedPkts=rbnQosSubsRLClassExceedPkts, rbnQosIfHCInOctets=rbnQosIfHCInOctets, rbnQosIfQueueTailDroppedOctets=rbnQosIfQueueTailDroppedOctets, rbnQosIfRLClassExceedDroppedOctets=rbnQosIfRLClassExceedDroppedOctets, rbnQosIfRLClassExceedPkts=rbnQosIfRLClassExceedPkts, rbnQosIfRLClassConformOctets=rbnQosIfRLClassConformOctets, rbnQosHierarchicalPolicyStatsEntry=rbnQosHierarchicalPolicyStatsEntry, rbnQosHierarchicalPClassName=rbnQosHierarchicalPClassName, rbnQosHierarchicalPClassDroppedOctets=rbnQosHierarchicalPClassDroppedOctets, rbnQosSubsRLClassConformPkts=rbnQosSubsRLClassConformPkts, rbnQosSubsQueueWredDroppedPkts=rbnQosSubsQueueWredDroppedPkts, rbnQosSubscriberRLClassStatsEntry=rbnQosSubscriberRLClassStatsEntry, rbnQosIfQueueHCTailDroppedPkts=rbnQosIfQueueHCTailDroppedPkts, rbnQosIfRLClassViolateDroppedOctets=rbnQosIfRLClassViolateDroppedOctets, rbnQosIfRLClassViolateDroppedPkts=rbnQosIfRLClassViolateDroppedPkts, rbnQosGroups=rbnQosGroups, rbnQosSubscriberQueueStatsTable=rbnQosSubscriberQueueStatsTable, rbnQosIfRLClassExceedDroppedPkts=rbnQosIfRLClassExceedDroppedPkts, rbnQosHierarchicalPolicyName=rbnQosHierarchicalPolicyName, rbnQosIfHCOutOctets=rbnQosIfHCOutOctets, rbnQosSubsRLClassConformOctets=rbnQosSubsRLClassConformOctets, RbnQosPolicyType=RbnQosPolicyType, rbnQosInterfaceEntry=rbnQosInterfaceEntry, rbnQosIfQueueTailDroppedPkts=rbnQosIfQueueTailDroppedPkts, rbnQosHierarchicalPolicyDroppedOctets=rbnQosHierarchicalPolicyDroppedOctets, rbnQosSubsRLClassViolateOctets=rbnQosSubsRLClassViolateOctets, rbnQosIfRLClassConformDroppedPkts=rbnQosIfRLClassConformDroppedPkts, rbnQosMibObjects=rbnQosMibObjects, rbnQosInterfaceQueueStatsEntry=rbnQosInterfaceQueueStatsEntry, rbnQosIfQueueGroup=rbnQosIfQueueGroup, rbnQosIfQueueWredDroppedOctets=rbnQosIfQueueWredDroppedOctets, rbnQosHierarchicalPolicyStatsGroup=rbnQosHierarchicalPolicyStatsGroup, rbnQosIfRLPolicyType=rbnQosIfRLPolicyType, rbnQosMibConformance=rbnQosMibConformance, rbnQosCompliance4=rbnQosCompliance4, rbnQosSubsRLClassConformDroppedOctets=rbnQosSubsRLClassConformDroppedOctets, rbnQosSubsQueueHCTailDroppedOctets=rbnQosSubsQueueHCTailDroppedOctets, rbnQosHierarchicalPolicyStatsTable=rbnQosHierarchicalPolicyStatsTable, rbnQosIfQueueWredDroppedPkts=rbnQosIfQueueWredDroppedPkts, rbnQosHierarchicalPClassStatsEntry=rbnQosHierarchicalPClassStatsEntry, rbnQosCompliance5=rbnQosCompliance5, rbnQosIfRLClassViolateOctets=rbnQosIfRLClassViolateOctets, rbnQosSubsQueueHCWredDroppedOctets=rbnQosSubsQueueHCWredDroppedOctets, rbnQosIfQueueOutPkts=rbnQosIfQueueOutPkts, rbnQosSubsRLClassViolateDroppedOctets=rbnQosSubsRLClassViolateDroppedOctets, rbnQosIfRLClassConformDroppedOctets=rbnQosIfRLClassConformDroppedOctets, rbnQosCompliance3=rbnQosCompliance3, rbnQosHierarchicalPolicyDroppedPkts=rbnQosHierarchicalPolicyDroppedPkts, rbnQosSubsRLClassExceedOctets=rbnQosSubsRLClassExceedOctets, rbnQosIfHCOutDroppedOctets=rbnQosIfHCOutDroppedOctets, rbnQosIfInDroppedOctets=rbnQosIfInDroppedOctets, rbnQosSubsQueueId=rbnQosSubsQueueId, rbnQosSubsQueueWredDroppedOctets=rbnQosSubsQueueWredDroppedOctets, rbnQosIntfRLClassStatsTable=rbnQosIntfRLClassStatsTable, rbnQosSubsQueuePolicyName=rbnQosSubsQueuePolicyName, rbnQosInterfaceQueueStatsTable=rbnQosInterfaceQueueStatsTable, rbnQosIfRLClassExceedOctets=rbnQosIfRLClassExceedOctets, rbnQosSubsRLClassName=rbnQosSubsRLClassName)
