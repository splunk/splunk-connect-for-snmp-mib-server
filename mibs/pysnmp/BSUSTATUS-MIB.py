#
# PySNMP MIB module BSUSTATUS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BSUSTATUS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:24:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
bsu, = mibBuilder.importSymbols("ANIROOT-MIB", "bsu")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
aniBsuWirelessPort, = mibBuilder.importSymbols("BSUWIRELESSIF-MIB", "aniBsuWirelessPort")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, Bits, Unsigned32, Counter32, Gauge32, TimeTicks, NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier, iso, ModuleIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Bits", "Unsigned32", "Counter32", "Gauge32", "TimeTicks", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier", "iso", "ModuleIdentity", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
aniBsuStatus = ModuleIdentity((1, 3, 6, 1, 4, 1, 4325, 3, 1))
if mibBuilder.loadTexts: aniBsuStatus.setLastUpdated('0209251510Z')
if mibBuilder.loadTexts: aniBsuStatus.setOrganization('Aperto Networks')
aniBsuStatusBootState = MibScalar((1, 3, 6, 1, 4, 1, 4325, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("starting", 1), ("dhcpc-req-sent", 2), ("configf-req-sent", 3), ("wait-for-tod", 4), ("wait-for-wss", 5), ("operational", 6), ("standby", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusBootState.setStatus('current')
aniBsuStatusSysUpTime = MibScalar((1, 3, 6, 1, 4, 1, 4325, 3, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 22))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusSysUpTime.setStatus('current')
aniBsuStatusNumPortsConf = MibScalar((1, 3, 6, 1, 4, 1, 4325, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusNumPortsConf.setStatus('current')
aniBsuStatusNumPortsPresent = MibScalar((1, 3, 6, 1, 4, 1, 4325, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusNumPortsPresent.setStatus('current')
aniBsuStatusSuCounts = MibScalar((1, 3, 6, 1, 4, 1, 4325, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6144))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusSuCounts.setStatus('current')
aniBsuStatusCellName = MibScalar((1, 3, 6, 1, 4, 1, 4325, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusCellName.setStatus('current')
aniBsuStatusCellRadius = MibScalar((1, 3, 6, 1, 4, 1, 4325, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000, 100000))).clone(namedValues=NamedValues(("radius10km", 10000), ("radius20km", 20000), ("radius30km", 30000), ("radius40km", 40000), ("radius50km", 50000), ("radius60km", 60000), ("radius70km", 70000), ("radius80km", 80000), ("radius90km", 90000), ("radius100km", 100000)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusCellRadius.setStatus('current')
aniBsuStatusSyncTimingRef = MibScalar((1, 3, 6, 1, 4, 1, 4325, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("internal", 1), ("external", 2), ("not-applicable", 3))).clone('internal')).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusSyncTimingRef.setStatus('current')
aniBsuStatusRipFlag = MibScalar((1, 3, 6, 1, 4, 1, 4325, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusRipFlag.setStatus('current')
aniBsuStatusMode = MibScalar((1, 3, 6, 1, 4, 1, 4325, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("router", 1), ("bridge", 2), ("vlan", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusMode.setStatus('current')
aniBsuStatusRadioTable = MibTable((1, 3, 6, 1, 4, 1, 4325, 3, 1, 11), )
if mibBuilder.loadTexts: aniBsuStatusRadioTable.setStatus('current')
aniBsuStatusRadioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4325, 3, 1, 11, 1), ).setIndexNames((0, "BSUWIRELESSIF-MIB", "aniBsuWirelessPort"))
if mibBuilder.loadTexts: aniBsuStatusRadioEntry.setStatus('current')
aniBsuStatusRadioSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 1, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusRadioSerialNum.setStatus('current')
aniBsuStatusRadioFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 1, 11, 1, 2), DisplayString()).setUnits('MHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusRadioFrequency.setStatus('current')
aniBsuStatusRadioBand = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 1, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 10, 4, 5, 6, 7, 8, 11, 12))).clone(namedValues=NamedValues(("unii-5-3GHz", 1), ("unii-5-8GHz", 2), ("general-5-8GHz", 3), ("ism-5-8GHz", 10), ("mmds-2-6GHz", 4), ("general-2-6GHz", 5), ("general-3-5GHz", 6), ("etsi-3-5GHz-50", 7), ("etsi-3-5GHz-100", 8), ("fdd-3-5GHz", 11), ("general-5-3GHz", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusRadioBand.setStatus('current')
aniBsuStatusRadioEepromRev = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 1, 11, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusRadioEepromRev.setStatus('current')
aniBsuStatusRadioVRFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 1, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("operational", 1), ("not-operational", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusRadioVRFlag.setStatus('current')
aniBsuStatusRadioSynth1Lock = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 1, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("not-locked", 1), ("locked", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusRadioSynth1Lock.setStatus('current')
aniBsuStatusRadioSynth2Lock = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 1, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("not-locked", 1), ("locked", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusRadioSynth2Lock.setStatus('current')
aniBsuStatusRadioTxGain = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 1, 11, 1, 8), DisplayString()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusRadioTxGain.setStatus('current')
aniBsuStatusRadioRxGain = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 1, 11, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 45))).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusRadioRxGain.setStatus('current')
aniBsuStatusRadioCurrentTxMaxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 1, 11, 1, 10), DisplayString()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusRadioCurrentTxMaxPower.setStatus('current')
aniBsuStatusRadioIfCableLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 1, 11, 1, 11), DisplayString()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuStatusRadioIfCableLoss.setStatus('current')
mibBuilder.exportSymbols("BSUSTATUS-MIB", aniBsuStatusBootState=aniBsuStatusBootState, aniBsuStatusSysUpTime=aniBsuStatusSysUpTime, aniBsuStatusSyncTimingRef=aniBsuStatusSyncTimingRef, aniBsuStatusRadioBand=aniBsuStatusRadioBand, aniBsuStatusRadioTxGain=aniBsuStatusRadioTxGain, PYSNMP_MODULE_ID=aniBsuStatus, aniBsuStatusRadioEntry=aniBsuStatusRadioEntry, aniBsuStatusRadioSynth2Lock=aniBsuStatusRadioSynth2Lock, aniBsuStatusMode=aniBsuStatusMode, aniBsuStatusRadioFrequency=aniBsuStatusRadioFrequency, aniBsuStatus=aniBsuStatus, aniBsuStatusRadioIfCableLoss=aniBsuStatusRadioIfCableLoss, aniBsuStatusRadioVRFlag=aniBsuStatusRadioVRFlag, aniBsuStatusSuCounts=aniBsuStatusSuCounts, aniBsuStatusRadioEepromRev=aniBsuStatusRadioEepromRev, aniBsuStatusNumPortsConf=aniBsuStatusNumPortsConf, aniBsuStatusRipFlag=aniBsuStatusRipFlag, aniBsuStatusRadioSerialNum=aniBsuStatusRadioSerialNum, aniBsuStatusRadioSynth1Lock=aniBsuStatusRadioSynth1Lock, aniBsuStatusRadioRxGain=aniBsuStatusRadioRxGain, aniBsuStatusRadioCurrentTxMaxPower=aniBsuStatusRadioCurrentTxMaxPower, aniBsuStatusCellRadius=aniBsuStatusCellRadius, aniBsuStatusRadioTable=aniBsuStatusRadioTable, aniBsuStatusNumPortsPresent=aniBsuStatusNumPortsPresent, aniBsuStatusCellName=aniBsuStatusCellName)
