#
# PySNMP MIB module CISCO-DIFFSERV-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-DIFFSERV-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:37:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
vsanIndex, = mibBuilder.importSymbols("CISCO-VSAN-MIB", "vsanIndex")
IndexIntegerNextFree, IndexInteger, diffServClfrEntry = mibBuilder.importSymbols("DIFFSERV-MIB", "IndexIntegerNextFree", "IndexInteger", "diffServClfrEntry")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Bits, iso, Integer32, Unsigned32, Gauge32, ModuleIdentity, TimeTicks, Counter32, IpAddress, Counter64, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "iso", "Integer32", "Unsigned32", "Gauge32", "ModuleIdentity", "TimeTicks", "Counter32", "IpAddress", "Counter64", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ObjectIdentity")
TruthValue, DisplayString, RowPointer, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowPointer", "RowStatus", "TextualConvention")
ciscoDiffServExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 381))
ciscoDiffServExtMIB.setRevisions(('2004-11-16 00:00', '2003-12-18 00:00', '2003-12-12 00:00', '2003-12-05 00:00',))
if mibBuilder.loadTexts: ciscoDiffServExtMIB.setLastUpdated('200411160000Z')
if mibBuilder.loadTexts: ciscoDiffServExtMIB.setOrganization('Cisco Systems Inc.')
ciscoDiffServExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 381, 1))
ciscoDiffServExtMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 381, 2))
cdsmConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1))
class CdsmDataDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("inbound", 1), ("outbound", 2))

class CdsmFcAddrAndMask(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(3, 3), ValueSizeConstraint(6, 6), ValueSizeConstraint(8, 8), )
cdsmDataPathTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 1), )
if mibBuilder.loadTexts: cdsmDataPathTable.setStatus('current')
cdsmDataPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-VSAN-MIB", "vsanIndex"), (0, "CISCO-DIFFSERV-EXT-MIB", "cdsmDataPathDirection"))
if mibBuilder.loadTexts: cdsmDataPathEntry.setStatus('current')
cdsmDataPathDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 1, 1, 1), CdsmDataDirection())
if mibBuilder.loadTexts: cdsmDataPathDirection.setStatus('current')
cdsmDataPathClfrStart = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 1, 1, 2), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmDataPathClfrStart.setStatus('current')
cdsmDataPathStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmDataPathStatus.setStatus('current')
cdsmClfrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 2), )
if mibBuilder.loadTexts: cdsmClfrTable.setStatus('current')
cdsmClfrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 2, 1), )
diffServClfrEntry.registerAugmentions(("CISCO-DIFFSERV-EXT-MIB", "cdsmClfrEntry"))
cdsmClfrEntry.setIndexNames(*diffServClfrEntry.getIndexNames())
if mibBuilder.loadTexts: cdsmClfrEntry.setStatus('current')
cdsmClfrName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmClfrName.setStatus('current')
cdsmClfrNextFreeElement = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 2, 1, 2), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsmClfrNextFreeElement.setStatus('current')
cdsmFCMultiFieldClfrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 3), )
if mibBuilder.loadTexts: cdsmFCMultiFieldClfrTable.setStatus('current')
cdsmFCMultiFieldClfrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldClfrId"))
if mibBuilder.loadTexts: cdsmFCMultiFieldClfrEntry.setStatus('current')
cdsmFCMultiFieldClfrId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 3, 1, 1), IndexInteger())
if mibBuilder.loadTexts: cdsmFCMultiFieldClfrId.setStatus('current')
cdsmFCMultiFieldClfrName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmFCMultiFieldClfrName.setStatus('current')
cdsmFCMultiFieldClfrMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 3, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmFCMultiFieldClfrMatch.setStatus('current')
cdsmFCMultiFieldClfrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmFCMultiFieldClfrStatus.setStatus('current')
cdsmFCMultiFieldClfrNextFreeStmt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 3, 1, 5), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsmFCMultiFieldClfrNextFreeStmt.setStatus('current')
cdsmFCMultiFieldMatchStmtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 4), )
if mibBuilder.loadTexts: cdsmFCMultiFieldMatchStmtTable.setStatus('current')
cdsmFCMultiFieldMatchStmtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldClfrId"), (0, "CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldMatchId"))
if mibBuilder.loadTexts: cdsmFCMultiFieldMatchStmtEntry.setStatus('current')
cdsmFCMultiFieldMatchId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: cdsmFCMultiFieldMatchId.setStatus('current')
cdsmFCMultiFieldMatchSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 4, 1, 2), CdsmFcAddrAndMask().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmFCMultiFieldMatchSrcAddr.setStatus('current')
cdsmFCMultiFieldMatchDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 4, 1, 3), CdsmFcAddrAndMask().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmFCMultiFieldMatchDstAddr.setStatus('current')
cdsmFCMultiFieldMatchIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 4, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmFCMultiFieldMatchIntf.setStatus('current')
cdsmFCMultiFieldMatchStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmFCMultiFieldMatchStatus.setStatus('current')
cdsmFCMultiFieldMatchWildCard = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 4, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmFCMultiFieldMatchWildCard.setStatus('current')
cdsmRateLimitTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 5), )
if mibBuilder.loadTexts: cdsmRateLimitTable.setStatus('current')
cdsmRateLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-DIFFSERV-EXT-MIB", "cdsmRateLimitId"))
if mibBuilder.loadTexts: cdsmRateLimitEntry.setStatus('current')
cdsmRateLimitId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 5, 1, 1), IndexInteger())
if mibBuilder.loadTexts: cdsmRateLimitId.setStatus('current')
cdsmRateLimitPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(100)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cdsmRateLimitPercent.setStatus('current')
cdsmSchedulerQTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 6), )
if mibBuilder.loadTexts: cdsmSchedulerQTable.setStatus('current')
cdsmSchedulerQEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 6, 1), ).setIndexNames((0, "CISCO-DIFFSERV-EXT-MIB", "cdsmSchedulerQNum"))
if mibBuilder.loadTexts: cdsmSchedulerQEntry.setStatus('current')
cdsmSchedulerQNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)))
if mibBuilder.loadTexts: cdsmSchedulerQNum.setStatus('current')
cdsmSchedulerQWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdsmSchedulerQWeight.setStatus('current')
cdsmChkSumTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 7), )
if mibBuilder.loadTexts: cdsmChkSumTable.setStatus('current')
cdsmChkSumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 7, 1), ).setIndexNames((0, "CISCO-VSAN-MIB", "vsanIndex"))
if mibBuilder.loadTexts: cdsmChkSumEntry.setStatus('current')
cdsmChkSumValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 381, 1, 1, 7, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdsmChkSumValue.setStatus('current')
ciscoDiffServExtMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 381, 2, 1))
ciscoDiffServExtMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 381, 2, 2))
ciscoDiffServExtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 381, 2, 1, 1)).setObjects(("CISCO-DIFFSERV-EXT-MIB", "ciscoDiffServExtGroup"), ("CISCO-DIFFSERV-EXT-MIB", "ciscoDiffServVsanGroup"), ("CISCO-DIFFSERV-EXT-MIB", "ciscoDiffServSchedQGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDiffServExtMIBCompliance = ciscoDiffServExtMIBCompliance.setStatus('deprecated')
ciscoDiffServExtMIBComplianceR1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 381, 2, 1, 2)).setObjects(("CISCO-DIFFSERV-EXT-MIB", "ciscoDiffServExtGroup1"), ("CISCO-DIFFSERV-EXT-MIB", "ciscoDiffServVsanGroup"), ("CISCO-DIFFSERV-EXT-MIB", "ciscoDiffServSchedQGroup"), ("CISCO-DIFFSERV-EXT-MIB", "ciscoDiffServChkSumGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDiffServExtMIBComplianceR1 = ciscoDiffServExtMIBComplianceR1.setStatus('deprecated')
ciscoDiffServExtMIBComplianceR2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 381, 2, 1, 3)).setObjects(("CISCO-DIFFSERV-EXT-MIB", "ciscoDiffServExtGroup2"), ("CISCO-DIFFSERV-EXT-MIB", "ciscoDiffServVsanGroup"), ("CISCO-DIFFSERV-EXT-MIB", "ciscoDiffServSchedQGroup"), ("CISCO-DIFFSERV-EXT-MIB", "ciscoDiffServChkSumGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDiffServExtMIBComplianceR2 = ciscoDiffServExtMIBComplianceR2.setStatus('current')
ciscoDiffServVsanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 381, 2, 2, 1)).setObjects(("CISCO-DIFFSERV-EXT-MIB", "cdsmDataPathClfrStart"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmDataPathStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDiffServVsanGroup = ciscoDiffServVsanGroup.setStatus('current')
ciscoDiffServExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 381, 2, 2, 2)).setObjects(("CISCO-DIFFSERV-EXT-MIB", "cdsmClfrName"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldClfrName"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldClfrMatch"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldClfrStatus"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldMatchSrcAddr"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldMatchDstAddr"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldMatchIntf"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldMatchStatus"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmRateLimitPercent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDiffServExtGroup = ciscoDiffServExtGroup.setStatus('deprecated')
ciscoDiffServSchedQGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 381, 2, 2, 3)).setObjects(("CISCO-DIFFSERV-EXT-MIB", "cdsmSchedulerQWeight"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDiffServSchedQGroup = ciscoDiffServSchedQGroup.setStatus('current')
ciscoDiffServExtGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 381, 2, 2, 4)).setObjects(("CISCO-DIFFSERV-EXT-MIB", "cdsmClfrName"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldClfrName"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldClfrMatch"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldClfrStatus"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldMatchSrcAddr"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldMatchDstAddr"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldMatchIntf"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldMatchStatus"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldMatchWildCard"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmRateLimitPercent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDiffServExtGroup1 = ciscoDiffServExtGroup1.setStatus('deprecated')
ciscoDiffServChkSumGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 381, 2, 2, 5)).setObjects(("CISCO-DIFFSERV-EXT-MIB", "cdsmChkSumValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDiffServChkSumGroup = ciscoDiffServChkSumGroup.setStatus('current')
ciscoDiffServExtGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 381, 2, 2, 6)).setObjects(("CISCO-DIFFSERV-EXT-MIB", "cdsmClfrName"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmClfrNextFreeElement"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldClfrName"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldClfrMatch"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldClfrStatus"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldClfrNextFreeStmt"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldMatchSrcAddr"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldMatchDstAddr"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldMatchIntf"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldMatchStatus"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmFCMultiFieldMatchWildCard"), ("CISCO-DIFFSERV-EXT-MIB", "cdsmRateLimitPercent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoDiffServExtGroup2 = ciscoDiffServExtGroup2.setStatus('current')
mibBuilder.exportSymbols("CISCO-DIFFSERV-EXT-MIB", cdsmDataPathClfrStart=cdsmDataPathClfrStart, cdsmRateLimitPercent=cdsmRateLimitPercent, cdsmSchedulerQWeight=cdsmSchedulerQWeight, cdsmFCMultiFieldMatchDstAddr=cdsmFCMultiFieldMatchDstAddr, cdsmClfrName=cdsmClfrName, cdsmFCMultiFieldMatchStatus=cdsmFCMultiFieldMatchStatus, ciscoDiffServExtMIBComplianceR2=ciscoDiffServExtMIBComplianceR2, ciscoDiffServExtMIBConform=ciscoDiffServExtMIBConform, cdsmFCMultiFieldClfrNextFreeStmt=cdsmFCMultiFieldClfrNextFreeStmt, ciscoDiffServExtMIBObjects=ciscoDiffServExtMIBObjects, cdsmFCMultiFieldClfrId=cdsmFCMultiFieldClfrId, cdsmFCMultiFieldClfrTable=cdsmFCMultiFieldClfrTable, cdsmChkSumEntry=cdsmChkSumEntry, ciscoDiffServExtGroup=ciscoDiffServExtGroup, cdsmFCMultiFieldMatchIntf=cdsmFCMultiFieldMatchIntf, cdsmFCMultiFieldMatchStmtTable=cdsmFCMultiFieldMatchStmtTable, cdsmFCMultiFieldClfrMatch=cdsmFCMultiFieldClfrMatch, cdsmDataPathTable=cdsmDataPathTable, cdsmRateLimitTable=cdsmRateLimitTable, ciscoDiffServVsanGroup=ciscoDiffServVsanGroup, cdsmChkSumValue=cdsmChkSumValue, ciscoDiffServSchedQGroup=ciscoDiffServSchedQGroup, cdsmFCMultiFieldMatchId=cdsmFCMultiFieldMatchId, cdsmSchedulerQTable=cdsmSchedulerQTable, cdsmFCMultiFieldMatchStmtEntry=cdsmFCMultiFieldMatchStmtEntry, ciscoDiffServExtMIBCompliance=ciscoDiffServExtMIBCompliance, cdsmClfrTable=cdsmClfrTable, cdsmDataPathEntry=cdsmDataPathEntry, cdsmFCMultiFieldMatchWildCard=cdsmFCMultiFieldMatchWildCard, ciscoDiffServExtGroup1=ciscoDiffServExtGroup1, cdsmSchedulerQNum=cdsmSchedulerQNum, ciscoDiffServExtMIB=ciscoDiffServExtMIB, ciscoDiffServExtMIBCompliances=ciscoDiffServExtMIBCompliances, cdsmClfrNextFreeElement=cdsmClfrNextFreeElement, cdsmFCMultiFieldMatchSrcAddr=cdsmFCMultiFieldMatchSrcAddr, cdsmFCMultiFieldClfrStatus=cdsmFCMultiFieldClfrStatus, cdsmDataPathDirection=cdsmDataPathDirection, cdsmChkSumTable=cdsmChkSumTable, cdsmDataPathStatus=cdsmDataPathStatus, cdsmConfiguration=cdsmConfiguration, cdsmFCMultiFieldClfrName=cdsmFCMultiFieldClfrName, cdsmRateLimitEntry=cdsmRateLimitEntry, cdsmRateLimitId=cdsmRateLimitId, ciscoDiffServExtGroup2=ciscoDiffServExtGroup2, ciscoDiffServExtMIBComplianceR1=ciscoDiffServExtMIBComplianceR1, ciscoDiffServChkSumGroup=ciscoDiffServChkSumGroup, CdsmDataDirection=CdsmDataDirection, CdsmFcAddrAndMask=CdsmFcAddrAndMask, cdsmClfrEntry=cdsmClfrEntry, PYSNMP_MODULE_ID=ciscoDiffServExtMIB, cdsmSchedulerQEntry=cdsmSchedulerQEntry, ciscoDiffServExtMIBGroups=ciscoDiffServExtMIBGroups, cdsmFCMultiFieldClfrEntry=cdsmFCMultiFieldClfrEntry)
