#
# PySNMP MIB module TIMETRA-ATM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIMETRA-ATM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:09:31 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
aal5VccEntry, atmVplEntry, atmInterfaceDs3PlcpAlarmState, atmInterfaceTCAlarmState, atmVclVpi, atmInterfaceConfEntry, atmVplVpi, atmInterfaceConfVccs, atmVclVci, atmInterfaceMaxActiveVpiBits, atmInterfaceCurrentMaxVpiBits, atmInterfaceMaxActiveVciBits, atmInterfaceConfVpcs, atmInterfaceTCEntry, atmInterfaceCurrentMaxVciBits, atmVclEntry = mibBuilder.importSymbols("ATM-MIB", "aal5VccEntry", "atmVplEntry", "atmInterfaceDs3PlcpAlarmState", "atmInterfaceTCAlarmState", "atmVclVpi", "atmInterfaceConfEntry", "atmVplVpi", "atmInterfaceConfVccs", "atmVclVci", "atmInterfaceMaxActiveVpiBits", "atmInterfaceCurrentMaxVpiBits", "atmInterfaceMaxActiveVciBits", "atmInterfaceConfVpcs", "atmInterfaceTCEntry", "atmInterfaceCurrentMaxVciBits", "atmVclEntry")
AtmVorXOperStatus, AtmConnCastType, AtmVorXLastChange, AtmVpIdentifier, AtmVorXAdminStatus, AtmConnKind, AtmTrafficDescrParamIndex, AtmVcIdentifier = mibBuilder.importSymbols("ATM-TC-MIB", "AtmVorXOperStatus", "AtmConnCastType", "AtmVorXLastChange", "AtmVpIdentifier", "AtmVorXAdminStatus", "AtmConnKind", "AtmTrafficDescrParamIndex", "AtmVcIdentifier")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
TimeTicks, MibIdentifier, Unsigned32, Integer32, Counter64, ModuleIdentity, ObjectIdentity, Gauge32, IpAddress, NotificationType, iso, Counter32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "Unsigned32", "Integer32", "Counter64", "ModuleIdentity", "ObjectIdentity", "Gauge32", "IpAddress", "NotificationType", "iso", "Counter32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention, RowStatus, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus", "TimeStamp")
tmnxChassisIndex, tmnxCardSlotNum, tmnxMDASlotNum = mibBuilder.importSymbols("TIMETRA-CHASSIS-MIB", "tmnxChassisIndex", "tmnxCardSlotNum", "tmnxMDASlotNum")
tmnxConnProfId, = mibBuilder.importSymbols("TIMETRA-CONN-PROF-MIB", "tmnxConnProfId")
timetraSRMIBModules, tmnxSRObjs, tmnxSRNotifyPrefix, tmnxSRConfs = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "timetraSRMIBModules", "tmnxSRObjs", "tmnxSRNotifyPrefix", "tmnxSRConfs")
timetraATMMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 1, 3, 27))
timetraATMMIBModule.setRevisions(('1911-02-01 00:00', '1909-02-28 00:00', '1906-03-16 00:00', '1905-08-31 00:00', '1905-01-24 00:00', '1903-10-28 00:00',))
if mibBuilder.loadTexts: timetraATMMIBModule.setLastUpdated('201102010000Z')
if mibBuilder.loadTexts: timetraATMMIBModule.setOrganization('Alcatel-Lucent')
tAtmObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27))
tAtmMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27))
tAtmMdaObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 1))
tAtmIntfObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2))
tAtmVclObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3))
tAal5VccObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 4))
tAtmTrafficDescObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 5))
tAtmVplObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6))
tAtmVtlObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7))
tAtmCellVclObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 8))
tAtmSystemObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 9))
tAtmIlmiLinkObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10))
tAtmTCSublayerObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 11))
tAtmCpObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12))
tmnxAtmNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 27))
tAtmNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 27, 0))
class AtmConnectionOwner(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("sap", 1), ("ilmi", 2))

class AtmOamStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("up", 1), ("eteAis", 2), ("eteRdi", 3), ("eteAisLoc", 4))

class AtmIlmiStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("undefined", 0), ("ok", 1), ("vpiOrVciRangeConflict", 2))

class AtmLlid(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(16, 16)
    fixedLength = 16

class AtmIlmiLinkUniType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("undefined", 0), ("public", 1), ("private", 2))

class AtmIlmiLinkDeviceType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("undefined", 0), ("user", 1), ("node", 2))

class AtmIlmiLinkVersion(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("undefined", 0), ("version3point1", 1), ("version4point0", 2), ("version3point0", 3))

class AtmIlmiLinkImeType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("userside", 1), ("networkside", 2))

tAtmMdaInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 1, 1), )
if mibBuilder.loadTexts: tAtmMdaInfoTable.setStatus('obsolete')
tAtmMdaInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 1, 1, 1), ).setIndexNames((0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-CHASSIS-MIB", "tmnxCardSlotNum"), (0, "TIMETRA-CHASSIS-MIB", "tmnxMDASlotNum"))
if mibBuilder.loadTexts: tAtmMdaInfoEntry.setStatus('obsolete')
tAtmMdaMaxSupportedVpcs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmMdaMaxSupportedVpcs.setStatus('obsolete')
tAtmMdaMaxSupportedVccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmMdaMaxSupportedVccs.setStatus('obsolete')
tAtmMdaConfiguredVpcs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmMdaConfiguredVpcs.setStatus('obsolete')
tAtmMdaConfiguredVccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmMdaConfiguredVccs.setStatus('obsolete')
tAtmIntfConfTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1), )
if mibBuilder.loadTexts: tAtmIntfConfTable.setStatus('current')
tAtmIntfConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1, 1), )
atmInterfaceConfEntry.registerAugmentions(("TIMETRA-ATM-MIB", "tAtmIntfConfEntry"))
tAtmIntfConfEntry.setIndexNames(*atmInterfaceConfEntry.getIndexNames())
if mibBuilder.loadTexts: tAtmIntfConfEntry.setStatus('current')
tAtmIntfCurrentMaxVpcs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfCurrentMaxVpcs.setStatus('current')
tAtmIntfCurrentMaxVccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfCurrentMaxVccs.setStatus('current')
tAtmIntfTotalIngrCbrBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfTotalIngrCbrBandwidth.setStatus('current')
tAtmIntfTotalIngrRtVbrBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfTotalIngrRtVbrBandwidth.setStatus('current')
tAtmIntfTotalIngrNrtVbrBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfTotalIngrNrtVbrBandwidth.setStatus('current')
tAtmIntfTotalIngrUbrBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfTotalIngrUbrBandwidth.setStatus('current')
tAtmIntfTotalEgrCbrBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfTotalEgrCbrBandwidth.setStatus('current')
tAtmIntfTotalEgrRtVbrBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfTotalEgrRtVbrBandwidth.setStatus('current')
tAtmIntfTotalEgrNrtVbrBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfTotalEgrNrtVbrBandwidth.setStatus('current')
tAtmIntfTotalEgrUbrBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfTotalEgrUbrBandwidth.setStatus('current')
tAtmIntfBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfBandwidth.setStatus('current')
tAtmIntfShapedBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfShapedBandwidth.setStatus('current')
tAtmIntfLastUnknVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1, 1, 13), AtmVpIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfLastUnknVpi.setStatus('current')
tAtmIntfLastUnknVci = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1, 1, 14), AtmVcIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfLastUnknVci.setStatus('current')
tAtmIntfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("lowerLayerDown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfOperStatus.setStatus('current')
tAtmIntfConfVtcs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfConfVtcs.setStatus('current')
tAtmIntfConfIfcs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfConfIfcs.setStatus('current')
tAtmIntfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 2), )
if mibBuilder.loadTexts: tAtmIntfStatsTable.setStatus('current')
tAtmIntfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: tAtmIntfStatsEntry.setStatus('current')
tAtmIntfStatsTotalCellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfStatsTotalCellsRxd.setStatus('current')
tAtmIntfStatsTotalCellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfStatsTotalCellsTxd.setStatus('current')
tAtmIntfStatsTotalBytesRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfStatsTotalBytesRxd.setStatus('current')
tAtmIntfStatsTotalBytesTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfStatsTotalBytesTxd.setStatus('current')
tAtmIntfStatsTotalUnknCellsDrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfStatsTotalUnknCellsDrp.setStatus('current')
tAtmIntfStatsTotalHecErr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfStatsTotalHecErr.setStatus('obsolete')
tAtmIntfStatsTotalHecErrFixed = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfStatsTotalHecErrFixed.setStatus('obsolete')
tAtmIntfAal5StatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 3), )
if mibBuilder.loadTexts: tAtmIntfAal5StatsTable.setStatus('current')
tAtmIntfAal5StatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: tAtmIntfAal5StatsEntry.setStatus('current')
tAtmIntfAal5StatsTotalPktsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfAal5StatsTotalPktsRxd.setStatus('current')
tAtmIntfAal5StatsTotalPktsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfAal5StatsTotalPktsTxd.setStatus('current')
tAtmIntfAal5StatsTotalPktsDrpRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfAal5StatsTotalPktsDrpRxd.setStatus('current')
tAtmIntfAal5StatsTotalPktsDrpTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfAal5StatsTotalPktsDrpTxd.setStatus('current')
tAtmIntfAal5StatsTotalCrc32Err = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIntfAal5StatsTotalCrc32Err.setStatus('current')
tAtmIfcInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 4), )
if mibBuilder.loadTexts: tAtmIfcInfoTable.setStatus('current')
tAtmIfcInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: tAtmIfcInfoEntry.setStatus('current')
tAtmIfcAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 4, 1, 1), AtmVorXAdminStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcAdminStatus.setStatus('current')
tAtmIfcOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 4, 1, 2), AtmVorXOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcOperStatus.setStatus('current')
tAtmIfcLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 4, 1, 3), AtmVorXLastChange()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcLastChange.setStatus('current')
tAtmIfcReceiveTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 4, 1, 4), AtmTrafficDescrParamIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcReceiveTrafficDescrIndex.setStatus('current')
tAtmIfcTransmitTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 4, 1, 5), AtmTrafficDescrParamIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcTransmitTrafficDescrIndex.setStatus('current')
tAtmIfcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 4, 1, 6), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcRowStatus.setStatus('current')
tAtmIfcCastType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 4, 1, 7), AtmConnCastType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcCastType.setStatus('current')
tAtmIfcConnKind = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 4, 1, 8), AtmConnKind()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcConnKind.setStatus('current')
tAtmIfcInfoOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 4, 1, 9), AtmConnectionOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcInfoOwner.setStatus('current')
tAtmIfcStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 5), )
if mibBuilder.loadTexts: tAtmIfcStatisticsTable.setStatus('current')
tAtmIfcStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: tAtmIfcStatisticsEntry.setStatus('current')
tAtmIfcStatsTotalCellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcStatsTotalCellsRxd.setStatus('current')
tAtmIfcStatsTotalClp0CellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcStatsTotalClp0CellsRxd.setStatus('current')
tAtmIfcStatsTotalCellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcStatsTotalCellsTxd.setStatus('current')
tAtmIfcStatsTotalClp0CellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcStatsTotalClp0CellsTxd.setStatus('current')
tAtmIfcStatsTotalBytesRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcStatsTotalBytesRxd.setStatus('current')
tAtmIfcStatsTotalBytesTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcStatsTotalBytesTxd.setStatus('current')
tAtmIfcStatsDrpCellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcStatsDrpCellsRxd.setStatus('current')
tAtmIfcStatsDrpClp0CellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcStatsDrpClp0CellsRxd.setStatus('current')
tAtmIfcStatsDrpClp0CellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcStatsDrpClp0CellsTxd.setStatus('current')
tAtmIfcStatsTagCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 2, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIfcStatsTagCells.setStatus('current')
tAtmVclInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 1), )
if mibBuilder.loadTexts: tAtmVclInfoTable.setStatus('current')
tAtmVclInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 1, 1), )
atmVclEntry.registerAugmentions(("TIMETRA-ATM-MIB", "tAtmVclInfoEntry"))
tAtmVclInfoEntry.setIndexNames(*atmVclEntry.getIndexNames())
if mibBuilder.loadTexts: tAtmVclInfoEntry.setStatus('current')
tAtmVclInfoOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 1, 1, 1), AtmConnectionOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVclInfoOwner.setStatus('current')
tAtmVclInfoOamStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 1, 1, 2), AtmOamStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVclInfoOamStatus.setStatus('current')
tAtmVclInfoIlmiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 1, 1, 3), AtmIlmiStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVclInfoIlmiStatus.setStatus('current')
tAtmVclInfoRxTrafficDescrIdOvr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 1, 1, 4), AtmTrafficDescrParamIndex().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1000), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVclInfoRxTrafficDescrIdOvr.setStatus('current')
tAtmVclInfoTxTrafficDescrIdOvr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 1, 1, 5), AtmTrafficDescrParamIndex().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1000), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVclInfoTxTrafficDescrIdOvr.setStatus('current')
tAtmVclStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 2), )
if mibBuilder.loadTexts: tAtmVclStatisticsTable.setStatus('current')
tAtmVclStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVclVpi"), (0, "ATM-MIB", "atmVclVci"))
if mibBuilder.loadTexts: tAtmVclStatisticsEntry.setStatus('current')
tAtmVclStatsTotalCellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVclStatsTotalCellsRxd.setStatus('current')
tAtmVclStatsTotalCellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVclStatsTotalCellsTxd.setStatus('current')
tAtmVclStatsTotalBytesRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVclStatsTotalBytesRxd.setStatus('current')
tAtmVclStatsTotalBytesTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVclStatsTotalBytesTxd.setStatus('current')
tAtmOamVclStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 3), )
if mibBuilder.loadTexts: tAtmOamVclStatisticsTable.setStatus('current')
tAtmOamVclStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 3, 1), )
atmVclEntry.registerAugmentions(("TIMETRA-ATM-MIB", "tAtmOamVclStatisticsEntry"))
tAtmOamVclStatisticsEntry.setIndexNames(*atmVclEntry.getIndexNames())
if mibBuilder.loadTexts: tAtmOamVclStatisticsEntry.setStatus('current')
tAtmOamVclStatsAISCellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmOamVclStatsAISCellsTxd.setStatus('current')
tAtmOamVclStatsRDICellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmOamVclStatsRDICellsTxd.setStatus('current')
tAtmOamVclStatsLoopbackCellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmOamVclStatsLoopbackCellsTxd.setStatus('current')
tAtmOamVclStatsAISCellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmOamVclStatsAISCellsRxd.setStatus('current')
tAtmOamVclStatsRDICellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmOamVclStatsRDICellsRxd.setStatus('current')
tAtmOamVclStatsLoopbackCellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmOamVclStatsLoopbackCellsRxd.setStatus('current')
tAtmOamVclStatsCrc10Err = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmOamVclStatsCrc10Err.setStatus('current')
tAtmOamVclStatsOtherCellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 3, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmOamVclStatsOtherCellsRxd.setStatus('current')
tAal5VccStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 4, 1), )
if mibBuilder.loadTexts: tAal5VccStatisticsTable.setStatus('current')
tAal5VccStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 4, 1, 1), )
aal5VccEntry.registerAugmentions(("TIMETRA-ATM-MIB", "tAal5VccStatisticsEntry"))
tAal5VccStatisticsEntry.setIndexNames(*aal5VccEntry.getIndexNames())
if mibBuilder.loadTexts: tAal5VccStatisticsEntry.setStatus('current')
tAal5VccStatsPacketsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 4, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAal5VccStatsPacketsRxd.setStatus('current')
tAal5VccStatsPacketsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 4, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAal5VccStatsPacketsTxd.setStatus('current')
tAal5VccStatsDrpPacketsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 4, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAal5VccStatsDrpPacketsRxd.setStatus('current')
tAal5VccStatsDrpPacketsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 4, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAal5VccStatsDrpPacketsTxd.setStatus('current')
tAtmCellVclStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 8, 1), )
if mibBuilder.loadTexts: tAtmCellVclStatisticsTable.setStatus('current')
tAtmCellVclStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 8, 1, 1), )
atmVclEntry.registerAugmentions(("TIMETRA-ATM-MIB", "tAtmCellVclStatisticsEntry"))
tAtmCellVclStatisticsEntry.setIndexNames(*atmVclEntry.getIndexNames())
if mibBuilder.loadTexts: tAtmCellVclStatisticsEntry.setStatus('current')
tAtmCellVclStatsClp0CellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 8, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCellVclStatsClp0CellsRxd.setStatus('current')
tAtmCellVclStatsClp0CellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 8, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCellVclStatsClp0CellsTxd.setStatus('current')
tAtmCellVclStatsDrpCellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 8, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCellVclStatsDrpCellsRxd.setStatus('current')
tAtmCellVclStatsDrpClp0CellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 8, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCellVclStatsDrpClp0CellsRxd.setStatus('current')
tAtmCellVclStatsDrpClp0CellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 8, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCellVclStatsDrpClp0CellsTxd.setStatus('current')
tAtmCellVclStatsTagCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 8, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCellVclStatsTagCells.setStatus('current')
tAtmVplInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 1), )
if mibBuilder.loadTexts: tAtmVplInfoTable.setStatus('current')
tAtmVplInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 1, 1), )
atmVplEntry.registerAugmentions(("TIMETRA-ATM-MIB", "tAtmVplInfoEntry"))
tAtmVplInfoEntry.setIndexNames(*atmVplEntry.getIndexNames())
if mibBuilder.loadTexts: tAtmVplInfoEntry.setStatus('current')
tAtmVplInfoOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 1, 1, 1), AtmConnectionOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVplInfoOwner.setStatus('current')
tAtmVplInfoOamStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 1, 1, 2), AtmOamStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVplInfoOamStatus.setStatus('current')
tAtmVplInfoIlmiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 1, 1, 3), AtmIlmiStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVplInfoIlmiStatus.setStatus('current')
tAtmVplStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 2), )
if mibBuilder.loadTexts: tAtmVplStatisticsTable.setStatus('current')
tAtmVplStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"))
if mibBuilder.loadTexts: tAtmVplStatisticsEntry.setStatus('current')
tAtmVplStatsTotalCellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVplStatsTotalCellsRxd.setStatus('current')
tAtmVplStatsTotalClp0CellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVplStatsTotalClp0CellsRxd.setStatus('current')
tAtmVplStatsTotalCellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVplStatsTotalCellsTxd.setStatus('current')
tAtmVplStatsTotalClp0CellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVplStatsTotalClp0CellsTxd.setStatus('current')
tAtmVplStatsTotalBytesRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVplStatsTotalBytesRxd.setStatus('current')
tAtmVplStatsTotalBytesTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVplStatsTotalBytesTxd.setStatus('current')
tAtmVplStatsDrpCellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVplStatsDrpCellsRxd.setStatus('current')
tAtmVplStatsDrpClp0CellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVplStatsDrpClp0CellsRxd.setStatus('current')
tAtmVplStatsDrpClp0CellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVplStatsDrpClp0CellsTxd.setStatus('current')
tAtmVplStatsTagCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVplStatsTagCells.setStatus('current')
tAtmOamVplStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 3), )
if mibBuilder.loadTexts: tAtmOamVplStatisticsTable.setStatus('current')
tAtmOamVplStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVplVpi"))
if mibBuilder.loadTexts: tAtmOamVplStatisticsEntry.setStatus('current')
tAtmOamVplStatsAISCellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmOamVplStatsAISCellsTxd.setStatus('current')
tAtmOamVplStatsRDICellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmOamVplStatsRDICellsTxd.setStatus('current')
tAtmOamVplStatsLoopbackCellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmOamVplStatsLoopbackCellsTxd.setStatus('current')
tAtmOamVplStatsAISCellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmOamVplStatsAISCellsRxd.setStatus('current')
tAtmOamVplStatsRDICellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmOamVplStatsRDICellsRxd.setStatus('current')
tAtmOamVplStatsLoopbackCellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmOamVplStatsLoopbackCellsRxd.setStatus('current')
tAtmOamVplStatsCrc10Errors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmOamVplStatsCrc10Errors.setStatus('current')
tAtmOamVplStatsOtherCellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 6, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmOamVplStatsOtherCellsRxd.setStatus('current')
tAtmVtlInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 1), )
if mibBuilder.loadTexts: tAtmVtlInfoTable.setStatus('current')
tAtmVtlInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "TIMETRA-ATM-MIB", "tAtmVtlStartVpi"), (0, "TIMETRA-ATM-MIB", "tAtmVtlEndVpi"))
if mibBuilder.loadTexts: tAtmVtlInfoEntry.setStatus('current')
tAtmVtlStartVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 1, 1, 1), AtmVpIdentifier())
if mibBuilder.loadTexts: tAtmVtlStartVpi.setStatus('current')
tAtmVtlEndVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 1, 1, 2), AtmVpIdentifier())
if mibBuilder.loadTexts: tAtmVtlEndVpi.setStatus('current')
tAtmVtlAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 1, 1, 3), AtmVorXAdminStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlAdminStatus.setStatus('current')
tAtmVtlOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 1, 1, 4), AtmVorXOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlOperStatus.setStatus('current')
tAtmVtlLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 1, 1, 5), AtmVorXLastChange()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlLastChange.setStatus('current')
tAtmVtlReceiveTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 1, 1, 6), AtmTrafficDescrParamIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlReceiveTrafficDescrIndex.setStatus('current')
tAtmVtlTransmitTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 1, 1, 7), AtmTrafficDescrParamIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlTransmitTrafficDescrIndex.setStatus('current')
tAtmVtlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 1, 1, 8), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlRowStatus.setStatus('current')
tAtmVtlCastType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 1, 1, 9), AtmConnCastType().clone('p2p')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlCastType.setStatus('current')
tAtmVtlConnKind = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 1, 1, 10), AtmConnKind()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlConnKind.setStatus('current')
tAtmVtlInfoOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 1, 1, 11), AtmConnectionOwner()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlInfoOwner.setStatus('current')
tAtmVtlStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 2), )
if mibBuilder.loadTexts: tAtmVtlStatisticsTable.setStatus('current')
tAtmVtlStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "TIMETRA-ATM-MIB", "tAtmVtlStartVpi"), (0, "TIMETRA-ATM-MIB", "tAtmVtlEndVpi"))
if mibBuilder.loadTexts: tAtmVtlStatisticsEntry.setStatus('current')
tAtmVtlStatsTotalCellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlStatsTotalCellsRxd.setStatus('current')
tAtmVtlStatsTotalClp0CellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlStatsTotalClp0CellsRxd.setStatus('current')
tAtmVtlStatsTotalCellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlStatsTotalCellsTxd.setStatus('current')
tAtmVtlStatsTotalClp0CellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlStatsTotalClp0CellsTxd.setStatus('current')
tAtmVtlStatsTotalBytesRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlStatsTotalBytesRxd.setStatus('current')
tAtmVtlStatsTotalBytesTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlStatsTotalBytesTxd.setStatus('current')
tAtmVtlStatsDrpCellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlStatsDrpCellsRxd.setStatus('current')
tAtmVtlStatsDrpClp0CellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlStatsDrpClp0CellsRxd.setStatus('current')
tAtmVtlStatsDrpClp0CellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlStatsDrpClp0CellsTxd.setStatus('current')
tAtmVtlStatsTagCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 7, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmVtlStatsTagCells.setStatus('current')
tAtmSysLlid = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 9, 1), AtmLlid().clone(hexValue="01000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmSysLlid.setStatus('current')
tAtmSysOamRetryUp = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 9, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmSysOamRetryUp.setStatus('current')
tAtmSysOamRetryDown = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 9, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmSysOamRetryDown.setStatus('current')
tAtmSysOamLoopbackPeriod = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 9, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 40)).clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmSysOamLoopbackPeriod.setStatus('current')
tAtmIlmiLinkTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1), )
if mibBuilder.loadTexts: tAtmIlmiLinkTable.setStatus('current')
tAtmIlmiLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: tAtmIlmiLinkEntry.setStatus('current')
tAtmIlmiLinkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmIlmiLinkRowStatus.setStatus('current')
tAtmIlmiLinkLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkLastChanged.setStatus('current')
tAtmIlmiLinkAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmIlmiLinkAdminStatus.setStatus('current')
tAtmIlmiLinkOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkOperStatus.setStatus('current')
tAtmIlmiLinkVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 5), AtmVpIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmIlmiLinkVpi.setStatus('current')
tAtmIlmiLinkVci = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 6), AtmVcIdentifier().clone(16)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmIlmiLinkVci.setStatus('current')
tAtmIlmiLinkFsmState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("stopped", 1), ("linkFailing", 2), ("establishing", 3), ("configuring", 4), ("retrievingNetworkPrefixes", 5), ("registeringNetworkPrefixes", 6), ("retrievingAddresses", 7), ("registeringAddresses", 8), ("verifying", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkFsmState.setStatus('current')
tAtmIlmiLinkReceiveTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 8), AtmTrafficDescrParamIndex().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmIlmiLinkReceiveTrafficDescrIndex.setStatus('current')
tAtmIlmiLinkTransmitTrafficDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 9), AtmTrafficDescrParamIndex().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmIlmiLinkTransmitTrafficDescrIndex.setStatus('current')
tAtmIlmiLinkEstablishConPollIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmIlmiLinkEstablishConPollIntvl.setStatus('current')
tAtmIlmiLinkCheckConPollIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmIlmiLinkCheckConPollIntvl.setStatus('current')
tAtmIlmiLinkConPollInactFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmIlmiLinkConPollInactFactor.setStatus('current')
tAtmIlmiLinkUniType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 13), AtmIlmiLinkUniType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkUniType.setStatus('current')
tAtmIlmiLinkDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 14), AtmIlmiLinkDeviceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkDeviceType.setStatus('current')
tAtmIlmiLinkVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 15), AtmIlmiLinkVersion().clone('version4point0')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmIlmiLinkVersion.setStatus('current')
tAtmIlmiLinkImeType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 16), AtmIlmiLinkImeType().clone('userside')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tAtmIlmiLinkImeType.setStatus('current')
tAtmIlmiLinkNegotiatedVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 17), AtmIlmiLinkVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkNegotiatedVersion.setStatus('current')
tAtmIlmiLinkNegotiatedImeType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 18), AtmIlmiLinkImeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkNegotiatedImeType.setStatus('current')
tAtmIlmiLinkNeighborIfIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkNeighborIfIdentifier.setStatus('current')
tAtmIlmiLinkNeighborSystemIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="00000000000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkNeighborSystemIdentifier.setStatus('current')
tAtmIlmiLinkNeighborUniType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 21), AtmIlmiLinkUniType().clone('undefined')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkNeighborUniType.setStatus('current')
tAtmIlmiLinkNeighborDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 22), AtmIlmiLinkDeviceType().clone('undefined')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkNeighborDeviceType.setStatus('current')
tAtmIlmiLinkNeighborVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 23), AtmIlmiLinkVersion().clone('undefined')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkNeighborVersion.setStatus('current')
tAtmIlmiLinkNeighborMaxVpcs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkNeighborMaxVpcs.setStatus('current')
tAtmIlmiLinkNeighborMaxVccs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkNeighborMaxVccs.setStatus('current')
tAtmIlmiLinkNeighborMaxVpiBits = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkNeighborMaxVpiBits.setStatus('current')
tAtmIlmiLinkNeighborMaxVciBits = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkNeighborMaxVciBits.setStatus('current')
tAtmIlmiLinkStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2), )
if mibBuilder.loadTexts: tAtmIlmiLinkStatisticsTable.setStatus('current')
tAtmIlmiLinkStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: tAtmIlmiLinkStatisticsEntry.setStatus('current')
tAtmIlmiLinkOutPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkOutPdus.setStatus('current')
tAtmIlmiLinkOutGetRequestPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkOutGetRequestPdus.setStatus('current')
tAtmIlmiLinkOutGetNextRequestPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkOutGetNextRequestPdus.setStatus('current')
tAtmIlmiLinkOutSetRequestPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkOutSetRequestPdus.setStatus('current')
tAtmIlmiLinkOutGetResponsePdus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkOutGetResponsePdus.setStatus('current')
tAtmIlmiLinkOutTrapPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkOutTrapPdus.setStatus('current')
tAtmIlmiLinkOutTooBigErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkOutTooBigErrors.setStatus('current')
tAtmIlmiLinkOutNoSuchNameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkOutNoSuchNameErrors.setStatus('current')
tAtmIlmiLinkOutBadValueErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkOutBadValueErrors.setStatus('current')
tAtmIlmiLinkOutReadOnlyErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkOutReadOnlyErrors.setStatus('current')
tAtmIlmiLinkOutGeneralErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkOutGeneralErrors.setStatus('current')
tAtmIlmiLinkInPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkInPdus.setStatus('current')
tAtmIlmiLinkInGetRequestPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkInGetRequestPdus.setStatus('current')
tAtmIlmiLinkInGetNextRequestPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkInGetNextRequestPdus.setStatus('current')
tAtmIlmiLinkInSetRequestPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkInSetRequestPdus.setStatus('current')
tAtmIlmiLinkInGetResponsePdus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkInGetResponsePdus.setStatus('current')
tAtmIlmiLinkInTrapPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkInTrapPdus.setStatus('current')
tAtmIlmiLinkInTooBigErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkInTooBigErrors.setStatus('current')
tAtmIlmiLinkInNoSuchNameErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkInNoSuchNameErrors.setStatus('current')
tAtmIlmiLinkInBadValueErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkInBadValueErrors.setStatus('current')
tAtmIlmiLinkInReadOnlyErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkInReadOnlyErrors.setStatus('current')
tAtmIlmiLinkInGeneralErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkInGeneralErrors.setStatus('current')
tAtmIlmiLinkInInvalidSnmpVersionPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkInInvalidSnmpVersionPdus.setStatus('current')
tAtmIlmiLinkInInvalidSnmpCommunityStringPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkInInvalidSnmpCommunityStringPdus.setStatus('current')
tAtmIlmiLinkInInvalidSnmpFormatPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 10, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmIlmiLinkInInvalidSnmpFormatPdus.setStatus('current')
tAtmTCSublayerTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 11, 1), )
if mibBuilder.loadTexts: tAtmTCSublayerTable.setStatus('current')
tAtmTCSublayerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 11, 1, 1), )
atmInterfaceTCEntry.registerAugmentions(("TIMETRA-ATM-MIB", "tAtmTCSublayerEntry"))
tAtmTCSublayerEntry.setIndexNames(*atmInterfaceTCEntry.getIndexNames())
if mibBuilder.loadTexts: tAtmTCSublayerEntry.setStatus('current')
tAtmTCSublayerHecErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 11, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmTCSublayerHecErrors.setStatus('current')
tAtmTCSublayerHecErrorsFixed = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 11, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmTCSublayerHecErrorsFixed.setStatus('current')
tAtmCpStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12, 1), )
if mibBuilder.loadTexts: tAtmCpStatisticsTable.setStatus('current')
tAtmCpStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "TIMETRA-CONN-PROF-MIB", "tmnxConnProfId"))
if mibBuilder.loadTexts: tAtmCpStatisticsEntry.setStatus('current')
tAtmCpStatsTotalCellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12, 1, 1, 1), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCpStatsTotalCellsRxd.setStatus('current')
tAtmCpStatsTotalCellsRxdLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12, 1, 1, 2), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCpStatsTotalCellsRxdLo.setStatus('current')
tAtmCpStatsTotalCellsRxdHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12, 1, 1, 3), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCpStatsTotalCellsRxdHi.setStatus('current')
tAtmCpStatsTotalCellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12, 1, 1, 4), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCpStatsTotalCellsTxd.setStatus('current')
tAtmCpStatsTotalCellsTxdLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12, 1, 1, 5), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCpStatsTotalCellsTxdLo.setStatus('current')
tAtmCpStatsTotalCellsTxdHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12, 1, 1, 6), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCpStatsTotalCellsTxdHi.setStatus('current')
tAtmCpStatsClp0CellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12, 1, 1, 7), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCpStatsClp0CellsRxd.setStatus('current')
tAtmCpStatsClp0CellsRxdLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12, 1, 1, 8), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCpStatsClp0CellsRxdLo.setStatus('current')
tAtmCpStatsClp0CellsRxdHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12, 1, 1, 9), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCpStatsClp0CellsRxdHi.setStatus('current')
tAtmCpStatsClp0CellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12, 1, 1, 10), Counter64()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCpStatsClp0CellsTxd.setStatus('current')
tAtmCpStatsClp0CellsTxdLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12, 1, 1, 11), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCpStatsClp0CellsTxdLo.setStatus('current')
tAtmCpStatsClp0CellsTxdHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12, 1, 1, 12), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCpStatsClp0CellsTxdHi.setStatus('current')
tAtmCpStatsDrpCellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12, 1, 1, 13), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCpStatsDrpCellsRxd.setStatus('current')
tAtmCpStatsDrpClp0CellsRxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12, 1, 1, 14), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCpStatsDrpClp0CellsRxd.setStatus('current')
tAtmCpStatsDrpClp0CellsTxd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12, 1, 1, 15), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCpStatsDrpClp0CellsTxd.setStatus('current')
tAtmCpStatsTagCells = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 27, 12, 1, 1, 16), Counter32()).setUnits('cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: tAtmCpStatsTagCells.setStatus('current')
tAtmTcSubLayerDown = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 27, 0, 1)).setObjects(("ATM-MIB", "atmInterfaceTCAlarmState"))
if mibBuilder.loadTexts: tAtmTcSubLayerDown.setStatus('current')
tAtmTcSubLayerClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 27, 0, 2)).setObjects(("ATM-MIB", "atmInterfaceTCAlarmState"))
if mibBuilder.loadTexts: tAtmTcSubLayerClear.setStatus('current')
tAtmPlcpSubLayerDown = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 27, 0, 3)).setObjects(("ATM-MIB", "atmInterfaceDs3PlcpAlarmState"))
if mibBuilder.loadTexts: tAtmPlcpSubLayerDown.setStatus('current')
tAtmPlcpSubLayerClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 27, 0, 4)).setObjects(("ATM-MIB", "atmInterfaceDs3PlcpAlarmState"))
if mibBuilder.loadTexts: tAtmPlcpSubLayerClear.setStatus('current')
tAtmEpOutOfPeerVpiOrVciRange = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 27, 0, 5)).setObjects(("ATM-MIB", "atmInterfaceCurrentMaxVpiBits"), ("ATM-MIB", "atmInterfaceCurrentMaxVciBits"), ("ATM-MIB", "atmInterfaceMaxActiveVpiBits"), ("ATM-MIB", "atmInterfaceMaxActiveVciBits"))
if mibBuilder.loadTexts: tAtmEpOutOfPeerVpiOrVciRange.setStatus('current')
tAtmMaxPeerVccsExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 27, 0, 6)).setObjects(("TIMETRA-ATM-MIB", "tAtmIntfCurrentMaxVccs"), ("ATM-MIB", "atmInterfaceConfVccs"))
if mibBuilder.loadTexts: tAtmMaxPeerVccsExceeded.setStatus('current')
tAtmMaxPeerVpcsExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 27, 0, 7)).setObjects(("TIMETRA-ATM-MIB", "tAtmIntfCurrentMaxVpcs"), ("ATM-MIB", "atmInterfaceConfVpcs"))
if mibBuilder.loadTexts: tAtmMaxPeerVpcsExceeded.setStatus('current')
tAtmIlmiLinkStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 27, 0, 8)).setObjects(("TIMETRA-ATM-MIB", "tAtmIlmiLinkAdminStatus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkOperStatus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkVpi"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkVci"))
if mibBuilder.loadTexts: tAtmIlmiLinkStatusChange.setStatus('current')
tmnxAtmMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 1))
tmnxAtmMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2))
tAtmMIBV4v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 1, 3)).setObjects(("TIMETRA-ATM-MIB", "tmnxAtmIntfConfV4v0Group"), ("TIMETRA-ATM-MIB", "tmnxAtmIntfStatsV4v0Group"), ("TIMETRA-ATM-MIB", "tmnxAtmIfcInfoGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmVclInfoGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmVclStatisticsGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmAal5VccStatisticsGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmCellVclStatisticsGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmVplInfoGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmVplStatisticsGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmVtlInfoGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmVtlStatisticsGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmIfcStatisticsGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmSysConfV4v0Group"), ("TIMETRA-ATM-MIB", "tmnxAtmIlmiLinkGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmIlmiStatisticsGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmTCSublayerGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmNotificationsR4r0Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tAtmMIBV4v0Compliance = tAtmMIBV4v0Compliance.setStatus('obsolete')
tAtmMIBV9v0Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 1, 4)).setObjects(("TIMETRA-ATM-MIB", "tmnxAtmIntfConfV4v0Group"), ("TIMETRA-ATM-MIB", "tmnxAtmIntfStatsV4v0Group"), ("TIMETRA-ATM-MIB", "tmnxAtmIfcInfoGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmVclInfoGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmVclInfoGroupV9v0"), ("TIMETRA-ATM-MIB", "tmnxAtmVclStatisticsGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmAal5VccStatisticsGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmCellVclStatisticsGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmVplInfoGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmVplStatisticsGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmVtlInfoGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmVtlStatisticsGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmIfcStatisticsGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmSysConfV4v0Group"), ("TIMETRA-ATM-MIB", "tmnxAtmIlmiLinkGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmIlmiStatisticsGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmTCSublayerGroup"), ("TIMETRA-ATM-MIB", "tmnxAtmNotificationsR4r0Group"), ("TIMETRA-ATM-MIB", "tmnxAtmCpStatisticsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tAtmMIBV9v0Compliance = tAtmMIBV9v0Compliance.setStatus('current')
tmnxAtmVclInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 6)).setObjects(("TIMETRA-ATM-MIB", "tAtmVclInfoOwner"), ("TIMETRA-ATM-MIB", "tAtmVclInfoOamStatus"), ("TIMETRA-ATM-MIB", "tAtmVclInfoIlmiStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmVclInfoGroup = tmnxAtmVclInfoGroup.setStatus('current')
tmnxAtmVclStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 7)).setObjects(("TIMETRA-ATM-MIB", "tAtmVclStatsTotalCellsRxd"), ("TIMETRA-ATM-MIB", "tAtmVclStatsTotalCellsTxd"), ("TIMETRA-ATM-MIB", "tAtmVclStatsTotalBytesTxd"), ("TIMETRA-ATM-MIB", "tAtmVclStatsTotalBytesRxd"), ("TIMETRA-ATM-MIB", "tAtmOamVclStatsAISCellsTxd"), ("TIMETRA-ATM-MIB", "tAtmOamVclStatsRDICellsTxd"), ("TIMETRA-ATM-MIB", "tAtmOamVclStatsLoopbackCellsTxd"), ("TIMETRA-ATM-MIB", "tAtmOamVclStatsAISCellsRxd"), ("TIMETRA-ATM-MIB", "tAtmOamVclStatsRDICellsRxd"), ("TIMETRA-ATM-MIB", "tAtmOamVclStatsLoopbackCellsRxd"), ("TIMETRA-ATM-MIB", "tAtmOamVclStatsCrc10Err"), ("TIMETRA-ATM-MIB", "tAtmOamVclStatsOtherCellsRxd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmVclStatisticsGroup = tmnxAtmVclStatisticsGroup.setStatus('current')
tmnxAtmAal5VccStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 8)).setObjects(("TIMETRA-ATM-MIB", "tAal5VccStatsPacketsRxd"), ("TIMETRA-ATM-MIB", "tAal5VccStatsPacketsTxd"), ("TIMETRA-ATM-MIB", "tAal5VccStatsDrpPacketsRxd"), ("TIMETRA-ATM-MIB", "tAal5VccStatsDrpPacketsTxd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmAal5VccStatisticsGroup = tmnxAtmAal5VccStatisticsGroup.setStatus('current')
tmnxAtmCellVclStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 9)).setObjects(("TIMETRA-ATM-MIB", "tAtmCellVclStatsClp0CellsRxd"), ("TIMETRA-ATM-MIB", "tAtmCellVclStatsClp0CellsTxd"), ("TIMETRA-ATM-MIB", "tAtmCellVclStatsDrpCellsRxd"), ("TIMETRA-ATM-MIB", "tAtmCellVclStatsDrpClp0CellsRxd"), ("TIMETRA-ATM-MIB", "tAtmCellVclStatsDrpClp0CellsTxd"), ("TIMETRA-ATM-MIB", "tAtmCellVclStatsTagCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmCellVclStatisticsGroup = tmnxAtmCellVclStatisticsGroup.setStatus('current')
tmnxAtmVplInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 11)).setObjects(("TIMETRA-ATM-MIB", "tAtmVplInfoOwner"), ("TIMETRA-ATM-MIB", "tAtmVplInfoOamStatus"), ("TIMETRA-ATM-MIB", "tAtmVplInfoIlmiStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmVplInfoGroup = tmnxAtmVplInfoGroup.setStatus('current')
tmnxAtmVplStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 12)).setObjects(("TIMETRA-ATM-MIB", "tAtmVplStatsTotalCellsRxd"), ("TIMETRA-ATM-MIB", "tAtmVplStatsTotalClp0CellsRxd"), ("TIMETRA-ATM-MIB", "tAtmVplStatsTotalCellsTxd"), ("TIMETRA-ATM-MIB", "tAtmVplStatsTotalClp0CellsTxd"), ("TIMETRA-ATM-MIB", "tAtmVplStatsTotalBytesTxd"), ("TIMETRA-ATM-MIB", "tAtmVplStatsTotalBytesRxd"), ("TIMETRA-ATM-MIB", "tAtmVplStatsDrpCellsRxd"), ("TIMETRA-ATM-MIB", "tAtmVplStatsDrpClp0CellsRxd"), ("TIMETRA-ATM-MIB", "tAtmVplStatsDrpClp0CellsTxd"), ("TIMETRA-ATM-MIB", "tAtmVplStatsTagCells"), ("TIMETRA-ATM-MIB", "tAtmOamVplStatsAISCellsTxd"), ("TIMETRA-ATM-MIB", "tAtmOamVplStatsRDICellsTxd"), ("TIMETRA-ATM-MIB", "tAtmOamVplStatsLoopbackCellsTxd"), ("TIMETRA-ATM-MIB", "tAtmOamVplStatsAISCellsRxd"), ("TIMETRA-ATM-MIB", "tAtmOamVplStatsRDICellsRxd"), ("TIMETRA-ATM-MIB", "tAtmOamVplStatsLoopbackCellsRxd"), ("TIMETRA-ATM-MIB", "tAtmOamVplStatsCrc10Errors"), ("TIMETRA-ATM-MIB", "tAtmOamVplStatsOtherCellsRxd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmVplStatisticsGroup = tmnxAtmVplStatisticsGroup.setStatus('current')
tmnxAtmVtlInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 13)).setObjects(("TIMETRA-ATM-MIB", "tAtmVtlAdminStatus"), ("TIMETRA-ATM-MIB", "tAtmVtlOperStatus"), ("TIMETRA-ATM-MIB", "tAtmVtlLastChange"), ("TIMETRA-ATM-MIB", "tAtmVtlReceiveTrafficDescrIndex"), ("TIMETRA-ATM-MIB", "tAtmVtlTransmitTrafficDescrIndex"), ("TIMETRA-ATM-MIB", "tAtmVtlRowStatus"), ("TIMETRA-ATM-MIB", "tAtmVtlCastType"), ("TIMETRA-ATM-MIB", "tAtmVtlConnKind"), ("TIMETRA-ATM-MIB", "tAtmVtlInfoOwner"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmVtlInfoGroup = tmnxAtmVtlInfoGroup.setStatus('current')
tmnxAtmVtlStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 14)).setObjects(("TIMETRA-ATM-MIB", "tAtmVtlStatsTotalCellsRxd"), ("TIMETRA-ATM-MIB", "tAtmVtlStatsTotalClp0CellsRxd"), ("TIMETRA-ATM-MIB", "tAtmVtlStatsTotalCellsTxd"), ("TIMETRA-ATM-MIB", "tAtmVtlStatsTotalClp0CellsTxd"), ("TIMETRA-ATM-MIB", "tAtmVtlStatsTotalBytesTxd"), ("TIMETRA-ATM-MIB", "tAtmVtlStatsTotalBytesRxd"), ("TIMETRA-ATM-MIB", "tAtmVtlStatsDrpCellsRxd"), ("TIMETRA-ATM-MIB", "tAtmVtlStatsDrpClp0CellsRxd"), ("TIMETRA-ATM-MIB", "tAtmVtlStatsDrpClp0CellsTxd"), ("TIMETRA-ATM-MIB", "tAtmVtlStatsTagCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmVtlStatisticsGroup = tmnxAtmVtlStatisticsGroup.setStatus('current')
tmnxAtmIfcInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 15)).setObjects(("TIMETRA-ATM-MIB", "tAtmIfcAdminStatus"), ("TIMETRA-ATM-MIB", "tAtmIfcOperStatus"), ("TIMETRA-ATM-MIB", "tAtmIfcLastChange"), ("TIMETRA-ATM-MIB", "tAtmIfcReceiveTrafficDescrIndex"), ("TIMETRA-ATM-MIB", "tAtmIfcTransmitTrafficDescrIndex"), ("TIMETRA-ATM-MIB", "tAtmIfcRowStatus"), ("TIMETRA-ATM-MIB", "tAtmIfcCastType"), ("TIMETRA-ATM-MIB", "tAtmIfcConnKind"), ("TIMETRA-ATM-MIB", "tAtmIfcInfoOwner"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmIfcInfoGroup = tmnxAtmIfcInfoGroup.setStatus('current')
tmnxAtmIfcStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 16)).setObjects(("TIMETRA-ATM-MIB", "tAtmIfcStatsTotalCellsRxd"), ("TIMETRA-ATM-MIB", "tAtmIfcStatsTotalClp0CellsRxd"), ("TIMETRA-ATM-MIB", "tAtmIfcStatsTotalCellsTxd"), ("TIMETRA-ATM-MIB", "tAtmIfcStatsTotalClp0CellsTxd"), ("TIMETRA-ATM-MIB", "tAtmIfcStatsTotalBytesTxd"), ("TIMETRA-ATM-MIB", "tAtmIfcStatsTotalBytesRxd"), ("TIMETRA-ATM-MIB", "tAtmIfcStatsDrpCellsRxd"), ("TIMETRA-ATM-MIB", "tAtmIfcStatsDrpClp0CellsRxd"), ("TIMETRA-ATM-MIB", "tAtmIfcStatsDrpClp0CellsTxd"), ("TIMETRA-ATM-MIB", "tAtmIfcStatsTagCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmIfcStatisticsGroup = tmnxAtmIfcStatisticsGroup.setStatus('current')
tmnxAtmObsoleteV3v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 17)).setObjects(("TIMETRA-ATM-MIB", "tAtmMdaMaxSupportedVpcs"), ("TIMETRA-ATM-MIB", "tAtmMdaMaxSupportedVccs"), ("TIMETRA-ATM-MIB", "tAtmMdaConfiguredVpcs"), ("TIMETRA-ATM-MIB", "tAtmMdaConfiguredVccs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmObsoleteV3v0Group = tmnxAtmObsoleteV3v0Group.setStatus('current')
tmnxAtmIlmiLinkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 20)).setObjects(("TIMETRA-ATM-MIB", "tAtmIlmiLinkRowStatus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkLastChanged"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkAdminStatus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkOperStatus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkVpi"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkVci"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkFsmState"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkReceiveTrafficDescrIndex"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkTransmitTrafficDescrIndex"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkEstablishConPollIntvl"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkCheckConPollIntvl"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkConPollInactFactor"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkUniType"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkDeviceType"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkVersion"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkImeType"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkNegotiatedVersion"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkNegotiatedImeType"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkNeighborIfIdentifier"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkNeighborSystemIdentifier"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkNeighborUniType"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkNeighborDeviceType"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkNeighborVersion"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkNeighborMaxVpcs"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkNeighborMaxVccs"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkNeighborMaxVpiBits"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkNeighborMaxVciBits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmIlmiLinkGroup = tmnxAtmIlmiLinkGroup.setStatus('current')
tmnxAtmIlmiStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 21)).setObjects(("TIMETRA-ATM-MIB", "tAtmIlmiLinkOutPdus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkOutGetRequestPdus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkOutGetNextRequestPdus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkOutSetRequestPdus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkOutGetResponsePdus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkOutTrapPdus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkOutTooBigErrors"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkOutNoSuchNameErrors"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkOutBadValueErrors"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkOutReadOnlyErrors"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkOutGeneralErrors"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkInPdus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkInGetRequestPdus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkInGetNextRequestPdus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkInSetRequestPdus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkInGetResponsePdus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkInTrapPdus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkInTooBigErrors"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkInNoSuchNameErrors"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkInBadValueErrors"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkInReadOnlyErrors"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkInGeneralErrors"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkInInvalidSnmpVersionPdus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkInInvalidSnmpCommunityStringPdus"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkInInvalidSnmpFormatPdus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmIlmiStatisticsGroup = tmnxAtmIlmiStatisticsGroup.setStatus('current')
tmnxAtmNotificationsR4r0Group = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 22)).setObjects(("TIMETRA-ATM-MIB", "tAtmTcSubLayerDown"), ("TIMETRA-ATM-MIB", "tAtmTcSubLayerClear"), ("TIMETRA-ATM-MIB", "tAtmPlcpSubLayerDown"), ("TIMETRA-ATM-MIB", "tAtmPlcpSubLayerClear"), ("TIMETRA-ATM-MIB", "tAtmEpOutOfPeerVpiOrVciRange"), ("TIMETRA-ATM-MIB", "tAtmMaxPeerVccsExceeded"), ("TIMETRA-ATM-MIB", "tAtmMaxPeerVpcsExceeded"), ("TIMETRA-ATM-MIB", "tAtmIlmiLinkStatusChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmNotificationsR4r0Group = tmnxAtmNotificationsR4r0Group.setStatus('current')
tmnxAtmIntfConfV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 23)).setObjects(("TIMETRA-ATM-MIB", "tAtmIntfCurrentMaxVpcs"), ("TIMETRA-ATM-MIB", "tAtmIntfCurrentMaxVccs"), ("TIMETRA-ATM-MIB", "tAtmIntfTotalIngrCbrBandwidth"), ("TIMETRA-ATM-MIB", "tAtmIntfTotalIngrRtVbrBandwidth"), ("TIMETRA-ATM-MIB", "tAtmIntfTotalIngrNrtVbrBandwidth"), ("TIMETRA-ATM-MIB", "tAtmIntfTotalIngrUbrBandwidth"), ("TIMETRA-ATM-MIB", "tAtmIntfTotalEgrCbrBandwidth"), ("TIMETRA-ATM-MIB", "tAtmIntfTotalEgrRtVbrBandwidth"), ("TIMETRA-ATM-MIB", "tAtmIntfTotalEgrNrtVbrBandwidth"), ("TIMETRA-ATM-MIB", "tAtmIntfTotalEgrUbrBandwidth"), ("TIMETRA-ATM-MIB", "tAtmIntfBandwidth"), ("TIMETRA-ATM-MIB", "tAtmIntfShapedBandwidth"), ("TIMETRA-ATM-MIB", "tAtmIntfLastUnknVpi"), ("TIMETRA-ATM-MIB", "tAtmIntfLastUnknVci"), ("TIMETRA-ATM-MIB", "tAtmIntfOperStatus"), ("TIMETRA-ATM-MIB", "tAtmIntfConfVtcs"), ("TIMETRA-ATM-MIB", "tAtmIntfConfIfcs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmIntfConfV4v0Group = tmnxAtmIntfConfV4v0Group.setStatus('current')
tmnxAtmSysConfV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 24)).setObjects(("TIMETRA-ATM-MIB", "tAtmSysLlid"), ("TIMETRA-ATM-MIB", "tAtmSysOamRetryUp"), ("TIMETRA-ATM-MIB", "tAtmSysOamRetryDown"), ("TIMETRA-ATM-MIB", "tAtmSysOamLoopbackPeriod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmSysConfV4v0Group = tmnxAtmSysConfV4v0Group.setStatus('current')
tmnxAtmIntfStatsV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 25)).setObjects(("TIMETRA-ATM-MIB", "tAtmIntfStatsTotalCellsRxd"), ("TIMETRA-ATM-MIB", "tAtmIntfStatsTotalCellsTxd"), ("TIMETRA-ATM-MIB", "tAtmIntfStatsTotalBytesRxd"), ("TIMETRA-ATM-MIB", "tAtmIntfStatsTotalBytesTxd"), ("TIMETRA-ATM-MIB", "tAtmIntfStatsTotalUnknCellsDrp"), ("TIMETRA-ATM-MIB", "tAtmIntfAal5StatsTotalPktsRxd"), ("TIMETRA-ATM-MIB", "tAtmIntfAal5StatsTotalPktsTxd"), ("TIMETRA-ATM-MIB", "tAtmIntfAal5StatsTotalPktsDrpRxd"), ("TIMETRA-ATM-MIB", "tAtmIntfAal5StatsTotalPktsDrpTxd"), ("TIMETRA-ATM-MIB", "tAtmIntfAal5StatsTotalCrc32Err"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmIntfStatsV4v0Group = tmnxAtmIntfStatsV4v0Group.setStatus('current')
tmnxAtmTCSublayerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 26)).setObjects(("TIMETRA-ATM-MIB", "tAtmTCSublayerHecErrors"), ("TIMETRA-ATM-MIB", "tAtmTCSublayerHecErrorsFixed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmTCSublayerGroup = tmnxAtmTCSublayerGroup.setStatus('current')
tmnxAtmObsoleteV4v0Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 27)).setObjects(("TIMETRA-ATM-MIB", "tAtmIntfStatsTotalHecErr"), ("TIMETRA-ATM-MIB", "tAtmIntfStatsTotalHecErrFixed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmObsoleteV4v0Group = tmnxAtmObsoleteV4v0Group.setStatus('current')
tmnxAtmCpStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 28)).setObjects(("TIMETRA-ATM-MIB", "tAtmCpStatsTotalCellsRxd"), ("TIMETRA-ATM-MIB", "tAtmCpStatsTotalCellsRxdLo"), ("TIMETRA-ATM-MIB", "tAtmCpStatsTotalCellsRxdHi"), ("TIMETRA-ATM-MIB", "tAtmCpStatsTotalCellsTxd"), ("TIMETRA-ATM-MIB", "tAtmCpStatsTotalCellsTxdLo"), ("TIMETRA-ATM-MIB", "tAtmCpStatsTotalCellsTxdHi"), ("TIMETRA-ATM-MIB", "tAtmCpStatsClp0CellsRxd"), ("TIMETRA-ATM-MIB", "tAtmCpStatsClp0CellsRxdLo"), ("TIMETRA-ATM-MIB", "tAtmCpStatsClp0CellsRxdHi"), ("TIMETRA-ATM-MIB", "tAtmCpStatsClp0CellsTxd"), ("TIMETRA-ATM-MIB", "tAtmCpStatsClp0CellsTxdLo"), ("TIMETRA-ATM-MIB", "tAtmCpStatsClp0CellsTxdHi"), ("TIMETRA-ATM-MIB", "tAtmCpStatsDrpCellsRxd"), ("TIMETRA-ATM-MIB", "tAtmCpStatsDrpClp0CellsRxd"), ("TIMETRA-ATM-MIB", "tAtmCpStatsDrpClp0CellsTxd"), ("TIMETRA-ATM-MIB", "tAtmCpStatsTagCells"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmCpStatisticsGroup = tmnxAtmCpStatisticsGroup.setStatus('current')
tmnxAtmVclInfoGroupV9v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 27, 2, 29)).setObjects(("TIMETRA-ATM-MIB", "tAtmVclInfoRxTrafficDescrIdOvr"), ("TIMETRA-ATM-MIB", "tAtmVclInfoTxTrafficDescrIdOvr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxAtmVclInfoGroupV9v0 = tmnxAtmVclInfoGroupV9v0.setStatus('current')
mibBuilder.exportSymbols("TIMETRA-ATM-MIB", tAtmTCSublayerObjs=tAtmTCSublayerObjs, tAtmSysOamRetryUp=tAtmSysOamRetryUp, tAal5VccStatsDrpPacketsTxd=tAal5VccStatsDrpPacketsTxd, tAtmVplObjs=tAtmVplObjs, tAtmIlmiLinkInNoSuchNameErrors=tAtmIlmiLinkInNoSuchNameErrors, tAtmCellVclStatsDrpClp0CellsRxd=tAtmCellVclStatsDrpClp0CellsRxd, PYSNMP_MODULE_ID=timetraATMMIBModule, tAtmIntfObjs=tAtmIntfObjs, AtmIlmiLinkDeviceType=AtmIlmiLinkDeviceType, tAtmIlmiLinkStatisticsEntry=tAtmIlmiLinkStatisticsEntry, tAtmVtlConnKind=tAtmVtlConnKind, tAtmIlmiLinkOutTrapPdus=tAtmIlmiLinkOutTrapPdus, tAtmVtlInfoTable=tAtmVtlInfoTable, tAal5VccStatisticsEntry=tAal5VccStatisticsEntry, tAtmVtlRowStatus=tAtmVtlRowStatus, tAtmIlmiLinkInTrapPdus=tAtmIlmiLinkInTrapPdus, tAtmCpStatsClp0CellsRxd=tAtmCpStatsClp0CellsRxd, tAtmIntfStatsTotalHecErrFixed=tAtmIntfStatsTotalHecErrFixed, tAtmMaxPeerVccsExceeded=tAtmMaxPeerVccsExceeded, tAtmOamVclStatsCrc10Err=tAtmOamVclStatsCrc10Err, tmnxAtmVclInfoGroup=tmnxAtmVclInfoGroup, tmnxAtmCpStatisticsGroup=tmnxAtmCpStatisticsGroup, tAtmCellVclStatsClp0CellsTxd=tAtmCellVclStatsClp0CellsTxd, tAtmVplStatsTotalBytesRxd=tAtmVplStatsTotalBytesRxd, tAtmIlmiLinkVersion=tAtmIlmiLinkVersion, tAtmIlmiLinkInSetRequestPdus=tAtmIlmiLinkInSetRequestPdus, tAtmIlmiLinkAdminStatus=tAtmIlmiLinkAdminStatus, tAtmCellVclStatisticsTable=tAtmCellVclStatisticsTable, tAtmVclStatisticsEntry=tAtmVclStatisticsEntry, tAtmVclInfoIlmiStatus=tAtmVclInfoIlmiStatus, tAtmVtlEndVpi=tAtmVtlEndVpi, tAtmIfcStatisticsEntry=tAtmIfcStatisticsEntry, tAtmTCSublayerEntry=tAtmTCSublayerEntry, tAtmIfcStatsTotalClp0CellsRxd=tAtmIfcStatsTotalClp0CellsRxd, tAtmOamVclStatsAISCellsRxd=tAtmOamVclStatsAISCellsRxd, tmnxAtmObsoleteV3v0Group=tmnxAtmObsoleteV3v0Group, tAtmIfcStatsTotalBytesTxd=tAtmIfcStatsTotalBytesTxd, tAtmCellVclStatsClp0CellsRxd=tAtmCellVclStatsClp0CellsRxd, tAtmIntfTotalEgrNrtVbrBandwidth=tAtmIntfTotalEgrNrtVbrBandwidth, tAtmVtlOperStatus=tAtmVtlOperStatus, tAtmIntfTotalEgrUbrBandwidth=tAtmIntfTotalEgrUbrBandwidth, tAtmCpStatisticsTable=tAtmCpStatisticsTable, tAtmCpStatisticsEntry=tAtmCpStatisticsEntry, tAtmCpStatsTotalCellsTxdHi=tAtmCpStatsTotalCellsTxdHi, tAtmVclObjs=tAtmVclObjs, tAtmIntfLastUnknVci=tAtmIntfLastUnknVci, tAal5VccStatsPacketsRxd=tAal5VccStatsPacketsRxd, tAtmMdaObjs=tAtmMdaObjs, tAtmIlmiLinkEntry=tAtmIlmiLinkEntry, tAtmVclStatsTotalBytesTxd=tAtmVclStatsTotalBytesTxd, tAtmVplStatsTagCells=tAtmVplStatsTagCells, tAtmIlmiLinkNeighborSystemIdentifier=tAtmIlmiLinkNeighborSystemIdentifier, tAtmEpOutOfPeerVpiOrVciRange=tAtmEpOutOfPeerVpiOrVciRange, tmnxAtmVplInfoGroup=tmnxAtmVplInfoGroup, tAtmIfcInfoOwner=tAtmIfcInfoOwner, tAtmOamVclStatsRDICellsRxd=tAtmOamVclStatsRDICellsRxd, tAtmIlmiLinkInPdus=tAtmIlmiLinkInPdus, tAtmVtlInfoOwner=tAtmVtlInfoOwner, tAtmVplStatsDrpCellsRxd=tAtmVplStatsDrpCellsRxd, tAtmIlmiLinkFsmState=tAtmIlmiLinkFsmState, tAtmIlmiLinkConPollInactFactor=tAtmIlmiLinkConPollInactFactor, tAtmIntfStatsTotalCellsTxd=tAtmIntfStatsTotalCellsTxd, tAtmCpStatsTotalCellsRxdHi=tAtmCpStatsTotalCellsRxdHi, tAtmCellVclObjs=tAtmCellVclObjs, tAtmVplInfoIlmiStatus=tAtmVplInfoIlmiStatus, tAtmVclStatsTotalCellsRxd=tAtmVclStatsTotalCellsRxd, AtmConnectionOwner=AtmConnectionOwner, tAtmVtlStartVpi=tAtmVtlStartVpi, tAtmIlmiLinkNeighborDeviceType=tAtmIlmiLinkNeighborDeviceType, tAtmMdaMaxSupportedVccs=tAtmMdaMaxSupportedVccs, AtmOamStatus=AtmOamStatus, tAtmMdaConfiguredVpcs=tAtmMdaConfiguredVpcs, tAtmVclStatisticsTable=tAtmVclStatisticsTable, tAtmNotifications=tAtmNotifications, tAtmCpStatsClp0CellsRxdHi=tAtmCpStatsClp0CellsRxdHi, tAtmIntfTotalEgrRtVbrBandwidth=tAtmIntfTotalEgrRtVbrBandwidth, tAtmCpStatsDrpCellsRxd=tAtmCpStatsDrpCellsRxd, tAtmIlmiLinkReceiveTrafficDescrIndex=tAtmIlmiLinkReceiveTrafficDescrIndex, tAtmIntfConfTable=tAtmIntfConfTable, tAtmOamVclStatsAISCellsTxd=tAtmOamVclStatsAISCellsTxd, tAtmIfcRowStatus=tAtmIfcRowStatus, tAtmIfcConnKind=tAtmIfcConnKind, tAtmOamVclStatsLoopbackCellsTxd=tAtmOamVclStatsLoopbackCellsTxd, tAtmIlmiLinkOutGetRequestPdus=tAtmIlmiLinkOutGetRequestPdus, tAtmIntfAal5StatsTotalPktsRxd=tAtmIntfAal5StatsTotalPktsRxd, tAtmCpStatsTotalCellsRxdLo=tAtmCpStatsTotalCellsRxdLo, tAtmIntfStatsTotalBytesTxd=tAtmIntfStatsTotalBytesTxd, tAtmIfcStatsTagCells=tAtmIfcStatsTagCells, tAtmTCSublayerHecErrorsFixed=tAtmTCSublayerHecErrorsFixed, tAtmIlmiLinkStatisticsTable=tAtmIlmiLinkStatisticsTable, tAtmMdaInfoTable=tAtmMdaInfoTable, tAtmVtlCastType=tAtmVtlCastType, tAtmCellVclStatisticsEntry=tAtmCellVclStatisticsEntry, tAtmCpStatsClp0CellsTxdHi=tAtmCpStatsClp0CellsTxdHi, tAtmIlmiLinkOperStatus=tAtmIlmiLinkOperStatus, tAtmVtlStatsTotalCellsRxd=tAtmVtlStatsTotalCellsRxd, tAtmIlmiLinkInGetNextRequestPdus=tAtmIlmiLinkInGetNextRequestPdus, tAal5VccObjs=tAal5VccObjs, tAtmPlcpSubLayerDown=tAtmPlcpSubLayerDown, tAtmIntfAal5StatsTotalPktsDrpTxd=tAtmIntfAal5StatsTotalPktsDrpTxd, tAtmIntfStatsTotalBytesRxd=tAtmIntfStatsTotalBytesRxd, tAtmSystemObjs=tAtmSystemObjs, tAtmIlmiLinkNeighborMaxVpcs=tAtmIlmiLinkNeighborMaxVpcs, AtmIlmiLinkImeType=AtmIlmiLinkImeType, tAtmIntfAal5StatsTotalPktsDrpRxd=tAtmIntfAal5StatsTotalPktsDrpRxd, tAtmIlmiLinkRowStatus=tAtmIlmiLinkRowStatus, tAtmIlmiLinkObjs=tAtmIlmiLinkObjs, tAtmIlmiLinkInGeneralErrors=tAtmIlmiLinkInGeneralErrors, tAtmIlmiLinkInGetResponsePdus=tAtmIlmiLinkInGetResponsePdus, tAtmVclStatsTotalCellsTxd=tAtmVclStatsTotalCellsTxd, tmnxAtmIfcStatisticsGroup=tmnxAtmIfcStatisticsGroup, tAtmVtlStatsTotalBytesRxd=tAtmVtlStatsTotalBytesRxd, tAtmIntfTotalIngrRtVbrBandwidth=tAtmIntfTotalIngrRtVbrBandwidth, tAal5VccStatsDrpPacketsRxd=tAal5VccStatsDrpPacketsRxd, tAtmIlmiLinkInGetRequestPdus=tAtmIlmiLinkInGetRequestPdus, tAtmPlcpSubLayerClear=tAtmPlcpSubLayerClear, tAtmMIBV9v0Compliance=tAtmMIBV9v0Compliance, tAtmOamVclStatsRDICellsTxd=tAtmOamVclStatsRDICellsTxd, tAtmTCSublayerTable=tAtmTCSublayerTable, tAtmIlmiLinkOutTooBigErrors=tAtmIlmiLinkOutTooBigErrors, tAtmVplStatsDrpClp0CellsTxd=tAtmVplStatsDrpClp0CellsTxd, tAtmVplStatsTotalClp0CellsRxd=tAtmVplStatsTotalClp0CellsRxd, tAtmIlmiLinkNeighborVersion=tAtmIlmiLinkNeighborVersion, tAtmIfcStatisticsTable=tAtmIfcStatisticsTable, tAtmIntfAal5StatsTable=tAtmIntfAal5StatsTable, tAtmOamVplStatsLoopbackCellsTxd=tAtmOamVplStatsLoopbackCellsTxd, tAtmOamVplStatsCrc10Errors=tAtmOamVplStatsCrc10Errors, tAtmIlmiLinkUniType=tAtmIlmiLinkUniType, tAtmVtlStatsDrpCellsRxd=tAtmVtlStatsDrpCellsRxd, tAtmIntfStatsTotalUnknCellsDrp=tAtmIntfStatsTotalUnknCellsDrp, tAtmVtlAdminStatus=tAtmVtlAdminStatus, AtmIlmiLinkVersion=AtmIlmiLinkVersion, tAtmIfcStatsDrpClp0CellsRxd=tAtmIfcStatsDrpClp0CellsRxd, tAtmIlmiLinkVci=tAtmIlmiLinkVci, tAtmCpStatsTotalCellsTxd=tAtmCpStatsTotalCellsTxd, tmnxAtmNotifyPrefix=tmnxAtmNotifyPrefix, tAtmOamVplStatisticsTable=tAtmOamVplStatisticsTable, tAtmMdaInfoEntry=tAtmMdaInfoEntry, tAtmIlmiLinkInInvalidSnmpVersionPdus=tAtmIlmiLinkInInvalidSnmpVersionPdus, tAtmIntfConfIfcs=tAtmIntfConfIfcs, tAtmIntfAal5StatsTotalPktsTxd=tAtmIntfAal5StatsTotalPktsTxd, tAtmIlmiLinkOutSetRequestPdus=tAtmIlmiLinkOutSetRequestPdus, tmnxAtmIlmiLinkGroup=tmnxAtmIlmiLinkGroup, tAtmIlmiLinkNeighborMaxVccs=tAtmIlmiLinkNeighborMaxVccs, tAtmIntfConfVtcs=tAtmIntfConfVtcs, tAtmCpObjs=tAtmCpObjs, tAtmMaxPeerVpcsExceeded=tAtmMaxPeerVpcsExceeded, tAtmIlmiLinkOutGetNextRequestPdus=tAtmIlmiLinkOutGetNextRequestPdus, tAtmCpStatsTagCells=tAtmCpStatsTagCells, tAtmCpStatsDrpClp0CellsRxd=tAtmCpStatsDrpClp0CellsRxd, tAtmIlmiLinkLastChanged=tAtmIlmiLinkLastChanged, tAtmMdaMaxSupportedVpcs=tAtmMdaMaxSupportedVpcs, tAtmIlmiLinkInTooBigErrors=tAtmIlmiLinkInTooBigErrors, tmnxAtmVtlInfoGroup=tmnxAtmVtlInfoGroup, tmnxAtmIntfStatsV4v0Group=tmnxAtmIntfStatsV4v0Group, tAtmMIBV4v0Compliance=tAtmMIBV4v0Compliance, tAtmSysOamLoopbackPeriod=tAtmSysOamLoopbackPeriod, tAal5VccStatisticsTable=tAal5VccStatisticsTable, tAtmOamVplStatsLoopbackCellsRxd=tAtmOamVplStatsLoopbackCellsRxd, tAtmOamVclStatisticsTable=tAtmOamVclStatisticsTable, tAtmIntfLastUnknVpi=tAtmIntfLastUnknVpi, tAtmIntfBandwidth=tAtmIntfBandwidth, tAal5VccStatsPacketsTxd=tAal5VccStatsPacketsTxd, tAtmIfcStatsTotalCellsTxd=tAtmIfcStatsTotalCellsTxd, tAtmVclInfoEntry=tAtmVclInfoEntry, tAtmIlmiLinkNegotiatedVersion=tAtmIlmiLinkNegotiatedVersion, tAtmVtlStatisticsTable=tAtmVtlStatisticsTable, tAtmIntfCurrentMaxVccs=tAtmIntfCurrentMaxVccs, tAtmIfcStatsTotalCellsRxd=tAtmIfcStatsTotalCellsRxd, tAtmVtlStatsTagCells=tAtmVtlStatsTagCells, tmnxAtmCellVclStatisticsGroup=tmnxAtmCellVclStatisticsGroup, tAtmCellVclStatsDrpClp0CellsTxd=tAtmCellVclStatsDrpClp0CellsTxd, tAtmVplStatisticsEntry=tAtmVplStatisticsEntry, tAtmIntfAal5StatsTotalCrc32Err=tAtmIntfAal5StatsTotalCrc32Err, tAtmVplInfoOamStatus=tAtmVplInfoOamStatus, tAtmIlmiLinkDeviceType=tAtmIlmiLinkDeviceType, tAtmMIBConformance=tAtmMIBConformance, tmnxAtmObsoleteV4v0Group=tmnxAtmObsoleteV4v0Group, AtmLlid=AtmLlid, tAtmIlmiLinkOutPdus=tAtmIlmiLinkOutPdus, tAtmIntfStatsTotalCellsRxd=tAtmIntfStatsTotalCellsRxd, tAtmVtlTransmitTrafficDescrIndex=tAtmVtlTransmitTrafficDescrIndex, tAtmVplStatsTotalCellsTxd=tAtmVplStatsTotalCellsTxd, tAtmIntfTotalIngrUbrBandwidth=tAtmIntfTotalIngrUbrBandwidth, tAtmVplStatisticsTable=tAtmVplStatisticsTable, tAtmIntfStatsEntry=tAtmIntfStatsEntry, tAtmOamVplStatisticsEntry=tAtmOamVplStatisticsEntry, tAtmIntfShapedBandwidth=tAtmIntfShapedBandwidth, tAtmIlmiLinkTable=tAtmIlmiLinkTable, tAtmObjs=tAtmObjs, tAtmVtlStatsDrpClp0CellsTxd=tAtmVtlStatsDrpClp0CellsTxd, tAtmIlmiLinkInReadOnlyErrors=tAtmIlmiLinkInReadOnlyErrors, timetraATMMIBModule=timetraATMMIBModule, tmnxAtmSysConfV4v0Group=tmnxAtmSysConfV4v0Group, tAtmVtlStatsTotalBytesTxd=tAtmVtlStatsTotalBytesTxd, tAtmIntfTotalIngrCbrBandwidth=tAtmIntfTotalIngrCbrBandwidth, tAtmIntfTotalEgrCbrBandwidth=tAtmIntfTotalEgrCbrBandwidth, tAtmVclInfoTxTrafficDescrIdOvr=tAtmVclInfoTxTrafficDescrIdOvr, tAtmIlmiLinkNeighborMaxVciBits=tAtmIlmiLinkNeighborMaxVciBits, tAtmIfcStatsDrpCellsRxd=tAtmIfcStatsDrpCellsRxd, tAtmVtlStatisticsEntry=tAtmVtlStatisticsEntry, tAtmIlmiLinkOutGetResponsePdus=tAtmIlmiLinkOutGetResponsePdus, tAtmIlmiLinkOutBadValueErrors=tAtmIlmiLinkOutBadValueErrors, tAtmTCSublayerHecErrors=tAtmTCSublayerHecErrors, tAtmOamVclStatsOtherCellsRxd=tAtmOamVclStatsOtherCellsRxd, tAtmVclInfoOamStatus=tAtmVclInfoOamStatus, tAtmIfcTransmitTrafficDescrIndex=tAtmIfcTransmitTrafficDescrIndex, tAtmVtlStatsTotalClp0CellsRxd=tAtmVtlStatsTotalClp0CellsRxd, tAtmIfcLastChange=tAtmIfcLastChange, tAtmVclInfoOwner=tAtmVclInfoOwner, tAtmVtlInfoEntry=tAtmVtlInfoEntry, tAtmSysLlid=tAtmSysLlid, tAtmVplStatsTotalCellsRxd=tAtmVplStatsTotalCellsRxd, tAtmIlmiLinkInInvalidSnmpCommunityStringPdus=tAtmIlmiLinkInInvalidSnmpCommunityStringPdus, tAtmVtlStatsTotalCellsTxd=tAtmVtlStatsTotalCellsTxd, tAtmVtlStatsTotalClp0CellsTxd=tAtmVtlStatsTotalClp0CellsTxd, tmnxAtmMIBGroups=tmnxAtmMIBGroups, tmnxAtmVclStatisticsGroup=tmnxAtmVclStatisticsGroup, tAtmIfcInfoTable=tAtmIfcInfoTable, tAtmVclInfoRxTrafficDescrIdOvr=tAtmVclInfoRxTrafficDescrIdOvr, tAtmIntfStatsTotalHecErr=tAtmIntfStatsTotalHecErr, tAtmVtlObjs=tAtmVtlObjs, tAtmCpStatsClp0CellsRxdLo=tAtmCpStatsClp0CellsRxdLo, tmnxAtmVplStatisticsGroup=tmnxAtmVplStatisticsGroup, tAtmVplStatsDrpClp0CellsRxd=tAtmVplStatsDrpClp0CellsRxd, tmnxAtmMIBCompliances=tmnxAtmMIBCompliances, tmnxAtmVtlStatisticsGroup=tmnxAtmVtlStatisticsGroup, tAtmIlmiLinkOutGeneralErrors=tAtmIlmiLinkOutGeneralErrors, tAtmVplStatsTotalClp0CellsTxd=tAtmVplStatsTotalClp0CellsTxd, tAtmCellVclStatsDrpCellsRxd=tAtmCellVclStatsDrpCellsRxd, tAtmIlmiLinkTransmitTrafficDescrIndex=tAtmIlmiLinkTransmitTrafficDescrIndex, tAtmCpStatsTotalCellsRxd=tAtmCpStatsTotalCellsRxd, tAtmIlmiLinkStatusChange=tAtmIlmiLinkStatusChange, tAtmIlmiLinkInInvalidSnmpFormatPdus=tAtmIlmiLinkInInvalidSnmpFormatPdus, tAtmCpStatsDrpClp0CellsTxd=tAtmCpStatsDrpClp0CellsTxd, tAtmOamVplStatsRDICellsTxd=tAtmOamVplStatsRDICellsTxd, tmnxAtmNotificationsR4r0Group=tmnxAtmNotificationsR4r0Group, tmnxAtmIntfConfV4v0Group=tmnxAtmIntfConfV4v0Group, tAtmIntfAal5StatsEntry=tAtmIntfAal5StatsEntry, tAtmIlmiLinkNegotiatedImeType=tAtmIlmiLinkNegotiatedImeType, tmnxAtmIlmiStatisticsGroup=tmnxAtmIlmiStatisticsGroup, tAtmVplInfoOwner=tAtmVplInfoOwner, tAtmIntfConfEntry=tAtmIntfConfEntry, tAtmIfcAdminStatus=tAtmIfcAdminStatus, tAtmCpStatsClp0CellsTxd=tAtmCpStatsClp0CellsTxd, tAtmTcSubLayerDown=tAtmTcSubLayerDown, tAtmIfcInfoEntry=tAtmIfcInfoEntry, tAtmCpStatsClp0CellsTxdLo=tAtmCpStatsClp0CellsTxdLo, tAtmIlmiLinkImeType=tAtmIlmiLinkImeType, tmnxAtmTCSublayerGroup=tmnxAtmTCSublayerGroup, tAtmVclStatsTotalBytesRxd=tAtmVclStatsTotalBytesRxd, tAtmIntfOperStatus=tAtmIntfOperStatus, tAtmOamVplStatsAISCellsRxd=tAtmOamVplStatsAISCellsRxd, tAtmIlmiLinkInBadValueErrors=tAtmIlmiLinkInBadValueErrors)
mibBuilder.exportSymbols("TIMETRA-ATM-MIB", tAtmIfcCastType=tAtmIfcCastType, AtmIlmiStatus=AtmIlmiStatus, tmnxAtmAal5VccStatisticsGroup=tmnxAtmAal5VccStatisticsGroup, tAtmOamVclStatisticsEntry=tAtmOamVclStatisticsEntry, tAtmMdaConfiguredVccs=tAtmMdaConfiguredVccs, tAtmOamVclStatsLoopbackCellsRxd=tAtmOamVclStatsLoopbackCellsRxd, tAtmCellVclStatsTagCells=tAtmCellVclStatsTagCells, tAtmOamVplStatsAISCellsTxd=tAtmOamVplStatsAISCellsTxd, tAtmIfcStatsDrpClp0CellsTxd=tAtmIfcStatsDrpClp0CellsTxd, tAtmIlmiLinkVpi=tAtmIlmiLinkVpi, tAtmTcSubLayerClear=tAtmTcSubLayerClear, tmnxAtmVclInfoGroupV9v0=tmnxAtmVclInfoGroupV9v0, tAtmIfcReceiveTrafficDescrIndex=tAtmIfcReceiveTrafficDescrIndex, tAtmTrafficDescObjs=tAtmTrafficDescObjs, tAtmVplStatsTotalBytesTxd=tAtmVplStatsTotalBytesTxd, tmnxAtmIfcInfoGroup=tmnxAtmIfcInfoGroup, tAtmIlmiLinkEstablishConPollIntvl=tAtmIlmiLinkEstablishConPollIntvl, tAtmIfcOperStatus=tAtmIfcOperStatus, tAtmIfcStatsTotalClp0CellsTxd=tAtmIfcStatsTotalClp0CellsTxd, tAtmVtlLastChange=tAtmVtlLastChange, tAtmIntfTotalIngrNrtVbrBandwidth=tAtmIntfTotalIngrNrtVbrBandwidth, tAtmIlmiLinkNeighborIfIdentifier=tAtmIlmiLinkNeighborIfIdentifier, tAtmCpStatsTotalCellsTxdLo=tAtmCpStatsTotalCellsTxdLo, tAtmVplInfoEntry=tAtmVplInfoEntry, tAtmIlmiLinkNeighborUniType=tAtmIlmiLinkNeighborUniType, tAtmVclInfoTable=tAtmVclInfoTable, tAtmOamVplStatsRDICellsRxd=tAtmOamVplStatsRDICellsRxd, tAtmIlmiLinkNeighborMaxVpiBits=tAtmIlmiLinkNeighborMaxVpiBits, tAtmIlmiLinkOutNoSuchNameErrors=tAtmIlmiLinkOutNoSuchNameErrors, tAtmIntfCurrentMaxVpcs=tAtmIntfCurrentMaxVpcs, tAtmIfcStatsTotalBytesRxd=tAtmIfcStatsTotalBytesRxd, tAtmVtlReceiveTrafficDescrIndex=tAtmVtlReceiveTrafficDescrIndex, tAtmSysOamRetryDown=tAtmSysOamRetryDown, AtmIlmiLinkUniType=AtmIlmiLinkUniType, tAtmOamVplStatsOtherCellsRxd=tAtmOamVplStatsOtherCellsRxd, tAtmVplInfoTable=tAtmVplInfoTable, tAtmIlmiLinkOutReadOnlyErrors=tAtmIlmiLinkOutReadOnlyErrors, tAtmVtlStatsDrpClp0CellsRxd=tAtmVtlStatsDrpClp0CellsRxd, tAtmIntfStatsTable=tAtmIntfStatsTable, tAtmIlmiLinkCheckConPollIntvl=tAtmIlmiLinkCheckConPollIntvl)
