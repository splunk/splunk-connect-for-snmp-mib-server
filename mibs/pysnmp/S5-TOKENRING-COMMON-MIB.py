#
# PySNMP MIB module S5-TOKENRING-COMMON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/S5-TOKENRING-COMMON-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:51:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
TimeIntervalSec, SrcIndx = mibBuilder.importSymbols("S5-TCS-MIB", "TimeIntervalSec", "SrcIndx")
s5TrCfg, s5TrStat = mibBuilder.importSymbols("S5-TOKENRING-MIB", "s5TrCfg", "s5TrStat")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, MibIdentifier, Counter32, Bits, NotificationType, TimeTicks, Counter64, Integer32, Unsigned32, ModuleIdentity, IpAddress, Gauge32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "MibIdentifier", "Counter32", "Bits", "NotificationType", "TimeTicks", "Counter64", "Integer32", "Unsigned32", "ModuleIdentity", "IpAddress", "Gauge32", "iso")
TextualConvention, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "MacAddress", "DisplayString")
s5TrPortTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 1), )
if mibBuilder.loadTexts: s5TrPortTable.setStatus('mandatory')
s5TrPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 1, 1), ).setIndexNames((0, "S5-TOKENRING-COMMON-MIB", "s5TrPortBrdIndx"), (0, "S5-TOKENRING-COMMON-MIB", "s5TrPortIndx"))
if mibBuilder.loadTexts: s5TrPortEntry.setStatus('mandatory')
s5TrPortBrdIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortBrdIndx.setStatus('mandatory')
s5TrPortIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortIndx.setStatus('mandatory')
s5TrPortWrapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("wrap", 2), ("connect", 3), ("timedWrap", 4), ("nmmBeaconWrap", 5), ("wrongSpeedWrap", 6), ("permBeaconWrap", 7), ("hostBecaonWrap", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5TrPortWrapStatus.setStatus('mandatory')
s5TrPortWrapTime = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 1, 1, 4), TimeIntervalSec()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5TrPortWrapTime.setStatus('mandatory')
s5TrPortInsrtStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("notInserted", 2), ("inserted", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInsrtStatus.setStatus('mandatory')
s5TrPortPhanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("noPhantom", 2), ("phantom", 3), ("softwarePhantom", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortPhanStatus.setStatus('mandatory')
s5TrPortPhanChngs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortPhanChngs.setStatus('mandatory')
s5TrPortTrnkAccMthdStrap = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("synoptics", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortTrnkAccMthdStrap.setStatus('mandatory')
s5TrPortTrnkAccMthd = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("synoptics", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5TrPortTrnkAccMthd.setStatus('mandatory')
s5TrPortClass = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("ri", 2), ("ro", 3), ("lobe", 4), ("internal", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortClass.setStatus('mandatory')
s5TrPortMedia = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("synFiber", 2), ("stdFiber", 3), ("copperActive", 4), ("copperPassive", 5), ("mac", 6), ("specialProc", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortMedia.setStatus('mandatory')
s5TrPortConnector = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("internal", 2), ("db9", 3), ("rj45", 4), ("fiberST", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortConnector.setStatus('mandatory')
s5TrPortSoftwareInsertion = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notCapableOfSoftwareInsertion", 1), ("capableAndSoftwareInsertionOn", 2), ("capableAndSoftwareInsertionOff", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5TrPortSoftwareInsertion.setStatus('mandatory')
s5TrPortAFD = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notCapableOfAFDDisable", 1), ("capableAndAFDEnabled", 2), ("capableAndAFDDisabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5TrPortAFD.setStatus('mandatory')
s5TrFpuTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 2), )
if mibBuilder.loadTexts: s5TrFpuTable.setStatus('mandatory')
s5TrFpuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 2, 1), ).setIndexNames((0, "S5-TOKENRING-COMMON-MIB", "s5TrFpuBrdIndx"), (0, "S5-TOKENRING-COMMON-MIB", "s5TrFpuIndx"))
if mibBuilder.loadTexts: s5TrFpuEntry.setStatus('mandatory')
s5TrFpuBrdIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrFpuBrdIndx.setStatus('mandatory')
s5TrFpuIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrFpuIndx.setStatus('mandatory')
s5TrFpuType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("cluster", 2), ("port", 3), ("roving", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrFpuType.setStatus('mandatory')
s5TrFpuTypeIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrFpuTypeIndx.setStatus('mandatory')
s5TrFpuVer = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrFpuVer.setStatus('obsolete')
s5TrFpuCapabilites = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("coreStatistics", 2), ("embeddedManagement", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrFpuCapabilites.setStatus('mandatory')
s5TrFpuRunningMode = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("coreStatistics", 2), ("rovingFPU", 4), ("securityRoving", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5TrFpuRunningMode.setStatus('mandatory')
s5TrAttTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 3), )
if mibBuilder.loadTexts: s5TrAttTable.setStatus('mandatory')
s5TrAttEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 3, 1), ).setIndexNames((0, "S5-TOKENRING-COMMON-MIB", "s5TrAttBrdIndx"), (0, "S5-TOKENRING-COMMON-MIB", "s5TrAttIndx"))
if mibBuilder.loadTexts: s5TrAttEntry.setStatus('mandatory')
s5TrAttBrdIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrAttBrdIndx.setStatus('mandatory')
s5TrAttIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrAttIndx.setStatus('mandatory')
s5TrAttDfltSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("s4Mbit", 2), ("s16Mbit", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrAttDfltSpeed.setStatus('mandatory')
s5TrAttCurSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("s4Mbit", 2), ("s16Mbit", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5TrAttCurSpeed.setStatus('mandatory')
s5TrAttFault = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("nofault", 2), ("fault", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrAttFault.setStatus('mandatory')
s5TrBkDiv = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("split", 2), ("join", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5TrBkDiv.setStatus('mandatory')
s5TrRingExt = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5))
s5TrRingExtLastChange = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 1), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrRingExtLastChange.setStatus('mandatory')
s5TrRingExtCurNum = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrRingExtCurNum.setStatus('mandatory')
s5TrRingExtTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 3), )
if mibBuilder.loadTexts: s5TrRingExtTable.setStatus('mandatory')
s5TrRingExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 3, 1), ).setIndexNames((0, "S5-TOKENRING-COMMON-MIB", "s5TrRingExtBoardIndx"), (0, "S5-TOKENRING-COMMON-MIB", "s5TrRingExtExtensionIndx"))
if mibBuilder.loadTexts: s5TrRingExtEntry.setStatus('mandatory')
s5TrRingExtBoardIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrRingExtBoardIndx.setStatus('mandatory')
s5TrRingExtExtensionIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrRingExtExtensionIndx.setStatus('mandatory')
s5TrRingExtRingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrRingExtRingNumber.setStatus('mandatory')
s5TrRingExtRingInUna = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 3, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrRingExtRingInUna.setStatus('mandatory')
s5TrRingExtRingOutUna = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 3, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrRingExtRingOutUna.setStatus('mandatory')
s5TrRingExtSecUna = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 3, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrRingExtSecUna.setStatus('mandatory')
s5TrRingExtRingInPhanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("noPhantom", 2), ("phantom", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrRingExtRingInPhanStatus.setStatus('mandatory')
s5TrRingExtRingOutPhanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("noPhantom", 2), ("phantom", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrRingExtRingOutPhanStatus.setStatus('mandatory')
s5TrRingExtRingInWrapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("wrap", 2), ("connect", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrRingExtRingInWrapStatus.setStatus('mandatory')
s5TrRingExtRingOutWrapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("wrap", 2), ("connect", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrRingExtRingOutWrapStatus.setStatus('mandatory')
s5TrRingExtClusterNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrRingExtClusterNumber.setStatus('mandatory')
s5TrRingExtRingInPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrRingExtRingInPortNumber.setStatus('mandatory')
s5TrRingExtRingOutPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrRingExtRingOutPortNumber.setStatus('mandatory')
s5TrRingExtEosSize = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrRingExtEosSize.setStatus('mandatory')
s5TrRingExtEosTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 5), )
if mibBuilder.loadTexts: s5TrRingExtEosTable.setStatus('mandatory')
s5TrRingExtEosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 5, 1), ).setIndexNames((0, "S5-TOKENRING-COMMON-MIB", "s5TrRingExtBoardIndx"), (0, "S5-TOKENRING-COMMON-MIB", "s5TrRingExtExtensionIndx"))
if mibBuilder.loadTexts: s5TrRingExtEosEntry.setStatus('mandatory')
s5TrRingExtEos = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 5, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrRingExtEos.setStatus('mandatory')
s5TrBStatTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 1), )
if mibBuilder.loadTexts: s5TrBStatTable.setStatus('mandatory')
s5TrBStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 1, 1), ).setIndexNames((0, "S5-TOKENRING-COMMON-MIB", "s5TrBStatSrcIndx"))
if mibBuilder.loadTexts: s5TrBStatEntry.setStatus('mandatory')
s5TrBStatSrcIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 1, 1, 1), SrcIndx()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrBStatSrcIndx.setStatus('mandatory')
s5TrBStatTtlOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrBStatTtlOctets.setStatus('mandatory')
s5TrBStatMacOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrBStatMacOctets.setStatus('mandatory')
s5TrBStatLlcOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrBStatLlcOctets.setStatus('mandatory')
s5TrBStatTtlFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrBStatTtlFrms.setStatus('mandatory')
s5TrBStatTtlGoodFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrBStatTtlGoodFrms.setStatus('mandatory')
s5TrBStatTtlBadFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrBStatTtlBadFrms.setStatus('mandatory')
s5TrBStatMacFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrBStatMacFrms.setStatus('mandatory')
s5TrBStatLlcFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrBStatLlcFrms.setStatus('mandatory')
s5TrBStatLlcNonUcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrBStatLlcNonUcastFrms.setStatus('mandatory')
s5TrBStatLlcUcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrBStatLlcUcastFrms.setStatus('mandatory')
s5TrBStatGoodErrReportFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrBStatGoodErrReportFrms.setStatus('mandatory')
s5TrBStatBeaconFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrBStatBeaconFrms.setStatus('mandatory')
s5TrBStatRingPurgeFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrBStatRingPurgeFrms.setStatus('mandatory')
s5TrBStatClaimTokenFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrBStatClaimTokenFrms.setStatus('mandatory')
s5TrBStatUna = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 1, 1, 16), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrBStatUna.setStatus('mandatory')
s5TrFStatTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 2), )
if mibBuilder.loadTexts: s5TrFStatTable.setStatus('obsolete')
s5TrFStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 2, 1), ).setIndexNames((0, "S5-TOKENRING-COMMON-MIB", "s5TrFStatSrcIndx"))
if mibBuilder.loadTexts: s5TrFStatEntry.setStatus('obsolete')
s5TrFStatSrcIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 2, 1, 1), SrcIndx()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrFStatSrcIndx.setStatus('obsolete')
s5TrFStatDropEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrFStatDropEvents.setStatus('obsolete')
s5TrFStatLlcFrms18to63Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrFStatLlcFrms18to63Octets.setStatus('obsolete')
s5TrFStatLlcFrms64to127Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrFStatLlcFrms64to127Octets.setStatus('obsolete')
s5TrFStatLlcFrms128to255Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrFStatLlcFrms128to255Octets.setStatus('obsolete')
s5TrFStatLlcFrms256to511Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrFStatLlcFrms256to511Octets.setStatus('obsolete')
s5TrFStatLlcFrms512to1023Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrFStatLlcFrms512to1023Octets.setStatus('obsolete')
s5TrFStatLlcFrms1024to2047Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrFStatLlcFrms1024to2047Octets.setStatus('obsolete')
s5TrFStatLlcFrms2048to4095Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrFStatLlcFrms2048to4095Octets.setStatus('obsolete')
s5TrFStatLlcFrms4096to8191Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrFStatLlcFrms4096to8191Octets.setStatus('obsolete')
s5TrFStatLlcFrms8192to18000Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrFStatLlcFrms8192to18000Octets.setStatus('obsolete')
s5TrFStatLlcFrmsGreaterThan18000Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrFStatLlcFrmsGreaterThan18000Octets.setStatus('obsolete')
s5TrEStatTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 3), )
if mibBuilder.loadTexts: s5TrEStatTable.setStatus('mandatory')
s5TrEStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 3, 1), ).setIndexNames((0, "S5-TOKENRING-COMMON-MIB", "s5TrEStatSrcIndx"))
if mibBuilder.loadTexts: s5TrEStatEntry.setStatus('mandatory')
s5TrEStatSrcIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 3, 1, 1), SrcIndx()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrEStatSrcIndx.setStatus('mandatory')
s5TrEStatDropEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrEStatDropEvents.setStatus('obsolete')
s5TrEStatLineErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrEStatLineErrs.setStatus('mandatory')
s5TrEStatInternalErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrEStatInternalErrs.setStatus('mandatory')
s5TrEStatBurstErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrEStatBurstErrs.setStatus('mandatory')
s5TrEStatACErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrEStatACErrs.setStatus('mandatory')
s5TrEStatAbortErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrEStatAbortErrs.setStatus('mandatory')
s5TrEStatLostFrameErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrEStatLostFrameErrs.setStatus('mandatory')
s5TrEStatCongestionErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrEStatCongestionErrs.setStatus('mandatory')
s5TrEStatFrameCopiedErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrEStatFrameCopiedErrs.setStatus('mandatory')
s5TrEStatFrequencyErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrEStatFrequencyErrs.setStatus('mandatory')
s5TrEStatTokenErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrEStatTokenErrs.setStatus('mandatory')
s5TrEStatSoftErrFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrEStatSoftErrFrms.setStatus('mandatory')
s5TrPortInfoTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6), )
if mibBuilder.loadTexts: s5TrPortInfoTable.setStatus('mandatory')
s5TrPortInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1), ).setIndexNames((0, "S5-TOKENRING-COMMON-MIB", "s5TrPortInfoSrcIndx"), (0, "S5-TOKENRING-COMMON-MIB", "s5TrPortInfoBrdIndx"), (0, "S5-TOKENRING-COMMON-MIB", "s5TrPortInfoPortIndx"))
if mibBuilder.loadTexts: s5TrPortInfoEntry.setStatus('mandatory')
s5TrPortInfoSrcIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 1), SrcIndx()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoSrcIndx.setStatus('mandatory')
s5TrPortInfoBrdIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoBrdIndx.setStatus('mandatory')
s5TrPortInfoPortIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoPortIndx.setStatus('mandatory')
s5TrPortInfoAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoAddr.setStatus('mandatory')
s5TrPortInfoLastNaun = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoLastNaun.setStatus('mandatory')
s5TrPortInfoStationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("notInRingPoll", 2), ("inactive", 3), ("forcedRemoval", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoStationStatus.setStatus('mandatory')
s5TrPortInfoFirstEnterTime = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoFirstEnterTime.setStatus('mandatory')
s5TrPortInfoLastEnterTime = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoLastEnterTime.setStatus('mandatory')
s5TrPortInfoLastExitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoLastExitTime.setStatus('mandatory')
s5TrPortInfoDupAddrErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoDupAddrErrs.setStatus('mandatory')
s5TrPortInfoLineErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoLineErrs.setStatus('mandatory')
s5TrPortInfoInternalErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoInternalErrs.setStatus('mandatory')
s5TrPortInfoBurstErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoBurstErrs.setStatus('mandatory')
s5TrPortInfoACErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoACErrs.setStatus('mandatory')
s5TrPortInfoAbortErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoAbortErrs.setStatus('mandatory')
s5TrPortInfoLostFrameErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoLostFrameErrs.setStatus('mandatory')
s5TrPortInfoCongestionErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoCongestionErrs.setStatus('mandatory')
s5TrPortInfoFrameCopiedErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoFrameCopiedErrs.setStatus('mandatory')
s5TrPortInfoFrequencyErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoFrequencyErrs.setStatus('mandatory')
s5TrPortInfoTokenErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoTokenErrs.setStatus('mandatory')
s5TrPortInfoBeaconErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoBeaconErrs.setStatus('mandatory')
s5TrPortInfoInsertions = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 6, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortInfoInsertions.setStatus('mandatory')
s5TrPortFpuStatsTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 7), )
if mibBuilder.loadTexts: s5TrPortFpuStatsTable.setStatus('mandatory')
s5TrPortFpuStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 7, 1), ).setIndexNames((0, "S5-TOKENRING-COMMON-MIB", "s5TrPortFpuStatsBrdIndx"), (0, "S5-TOKENRING-COMMON-MIB", "s5TrPortFpuStatsPortIndx"))
if mibBuilder.loadTexts: s5TrPortFpuStatsEntry.setStatus('mandatory')
s5TrPortFpuStatsBrdIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortFpuStatsBrdIndx.setStatus('mandatory')
s5TrPortFpuStatsPortIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortFpuStatsPortIndx.setStatus('mandatory')
s5TrPortFpuStatsAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 7, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortFpuStatsAddr.setStatus('mandatory')
s5TrPortFpuStatsTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortFpuStatsTxOctets.setStatus('mandatory')
s5TrPortFpuStatsTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortFpuStatsTxPkts.setStatus('mandatory')
s5TrPortFpuStatsRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortFpuStatsRxOctets.setStatus('mandatory')
s5TrPortFpuStatsRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 7, 1, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5TrPortFpuStatsRxPkts.setStatus('mandatory')
mibBuilder.exportSymbols("S5-TOKENRING-COMMON-MIB", s5TrBStatTtlBadFrms=s5TrBStatTtlBadFrms, s5TrPortInfoInternalErrs=s5TrPortInfoInternalErrs, s5TrPortFpuStatsTxOctets=s5TrPortFpuStatsTxOctets, s5TrFpuBrdIndx=s5TrFpuBrdIndx, s5TrEStatInternalErrs=s5TrEStatInternalErrs, s5TrEStatFrequencyErrs=s5TrEStatFrequencyErrs, s5TrPortInfoTokenErrs=s5TrPortInfoTokenErrs, s5TrBStatUna=s5TrBStatUna, s5TrPortInfoLostFrameErrs=s5TrPortInfoLostFrameErrs, s5TrRingExtSecUna=s5TrRingExtSecUna, s5TrPortInfoAbortErrs=s5TrPortInfoAbortErrs, s5TrEStatAbortErrs=s5TrEStatAbortErrs, s5TrRingExtRingInWrapStatus=s5TrRingExtRingInWrapStatus, s5TrAttDfltSpeed=s5TrAttDfltSpeed, s5TrFStatEntry=s5TrFStatEntry, s5TrEStatDropEvents=s5TrEStatDropEvents, s5TrBStatClaimTokenFrms=s5TrBStatClaimTokenFrms, s5TrFStatTable=s5TrFStatTable, s5TrAttIndx=s5TrAttIndx, s5TrFpuRunningMode=s5TrFpuRunningMode, s5TrBStatBeaconFrms=s5TrBStatBeaconFrms, s5TrBStatLlcUcastFrms=s5TrBStatLlcUcastFrms, s5TrFpuTable=s5TrFpuTable, s5TrAttCurSpeed=s5TrAttCurSpeed, s5TrRingExtRingInUna=s5TrRingExtRingInUna, s5TrEStatSoftErrFrms=s5TrEStatSoftErrFrms, s5TrEStatLineErrs=s5TrEStatLineErrs, s5TrPortInfoBurstErrs=s5TrPortInfoBurstErrs, s5TrPortIndx=s5TrPortIndx, s5TrPortInfoACErrs=s5TrPortInfoACErrs, s5TrPortEntry=s5TrPortEntry, s5TrPortInsrtStatus=s5TrPortInsrtStatus, s5TrPortInfoDupAddrErrs=s5TrPortInfoDupAddrErrs, s5TrPortPhanStatus=s5TrPortPhanStatus, s5TrBStatSrcIndx=s5TrBStatSrcIndx, s5TrFpuTypeIndx=s5TrFpuTypeIndx, s5TrFStatLlcFrms64to127Octets=s5TrFStatLlcFrms64to127Octets, s5TrPortInfoFrameCopiedErrs=s5TrPortInfoFrameCopiedErrs, s5TrAttTable=s5TrAttTable, s5TrRingExtRingOutWrapStatus=s5TrRingExtRingOutWrapStatus, s5TrFStatLlcFrms1024to2047Octets=s5TrFStatLlcFrms1024to2047Octets, s5TrEStatFrameCopiedErrs=s5TrEStatFrameCopiedErrs, s5TrPortInfoEntry=s5TrPortInfoEntry, s5TrFStatLlcFrms18to63Octets=s5TrFStatLlcFrms18to63Octets, s5TrPortInfoStationStatus=s5TrPortInfoStationStatus, s5TrRingExtRingOutPhanStatus=s5TrRingExtRingOutPhanStatus, s5TrFStatSrcIndx=s5TrFStatSrcIndx, s5TrFStatLlcFrms4096to8191Octets=s5TrFStatLlcFrms4096to8191Octets, s5TrPortInfoCongestionErrs=s5TrPortInfoCongestionErrs, s5TrPortClass=s5TrPortClass, s5TrEStatTable=s5TrEStatTable, s5TrPortMedia=s5TrPortMedia, s5TrEStatSrcIndx=s5TrEStatSrcIndx, s5TrPortInfoTable=s5TrPortInfoTable, s5TrFStatDropEvents=s5TrFStatDropEvents, s5TrPortInfoFirstEnterTime=s5TrPortInfoFirstEnterTime, s5TrPortFpuStatsRxPkts=s5TrPortFpuStatsRxPkts, s5TrFpuVer=s5TrFpuVer, s5TrPortInfoLineErrs=s5TrPortInfoLineErrs, s5TrPortFpuStatsTxPkts=s5TrPortFpuStatsTxPkts, s5TrPortInfoBeaconErrs=s5TrPortInfoBeaconErrs, s5TrEStatBurstErrs=s5TrEStatBurstErrs, s5TrPortFpuStatsBrdIndx=s5TrPortFpuStatsBrdIndx, s5TrBStatLlcOctets=s5TrBStatLlcOctets, s5TrRingExtEosTable=s5TrRingExtEosTable, s5TrPortTable=s5TrPortTable, s5TrPortFpuStatsEntry=s5TrPortFpuStatsEntry, s5TrRingExtBoardIndx=s5TrRingExtBoardIndx, s5TrPortTrnkAccMthd=s5TrPortTrnkAccMthd, s5TrBStatTtlOctets=s5TrBStatTtlOctets, s5TrAttBrdIndx=s5TrAttBrdIndx, s5TrEStatTokenErrs=s5TrEStatTokenErrs, s5TrPortInfoLastEnterTime=s5TrPortInfoLastEnterTime, s5TrRingExtEntry=s5TrRingExtEntry, s5TrRingExtTable=s5TrRingExtTable, s5TrPortFpuStatsPortIndx=s5TrPortFpuStatsPortIndx, s5TrPortInfoSrcIndx=s5TrPortInfoSrcIndx, s5TrRingExt=s5TrRingExt, s5TrRingExtEosSize=s5TrRingExtEosSize, s5TrBkDiv=s5TrBkDiv, s5TrBStatEntry=s5TrBStatEntry, s5TrPortInfoLastExitTime=s5TrPortInfoLastExitTime, s5TrEStatEntry=s5TrEStatEntry, s5TrPortWrapStatus=s5TrPortWrapStatus, s5TrRingExtRingOutPortNumber=s5TrRingExtRingOutPortNumber, s5TrFStatLlcFrms512to1023Octets=s5TrFStatLlcFrms512to1023Octets, s5TrEStatLostFrameErrs=s5TrEStatLostFrameErrs, s5TrPortInfoBrdIndx=s5TrPortInfoBrdIndx, s5TrFpuCapabilites=s5TrFpuCapabilites, s5TrPortInfoFrequencyErrs=s5TrPortInfoFrequencyErrs, s5TrPortInfoInsertions=s5TrPortInfoInsertions, s5TrRingExtRingInPortNumber=s5TrRingExtRingInPortNumber, s5TrRingExtRingOutUna=s5TrRingExtRingOutUna, s5TrBStatTtlGoodFrms=s5TrBStatTtlGoodFrms, s5TrRingExtCurNum=s5TrRingExtCurNum, s5TrAttEntry=s5TrAttEntry, s5TrPortPhanChngs=s5TrPortPhanChngs, s5TrRingExtEosEntry=s5TrRingExtEosEntry, s5TrBStatLlcFrms=s5TrBStatLlcFrms, s5TrBStatGoodErrReportFrms=s5TrBStatGoodErrReportFrms, s5TrPortFpuStatsAddr=s5TrPortFpuStatsAddr, s5TrPortWrapTime=s5TrPortWrapTime, s5TrPortInfoPortIndx=s5TrPortInfoPortIndx, s5TrFpuIndx=s5TrFpuIndx, s5TrFStatLlcFrms2048to4095Octets=s5TrFStatLlcFrms2048to4095Octets, s5TrEStatACErrs=s5TrEStatACErrs, s5TrRingExtLastChange=s5TrRingExtLastChange, s5TrFStatLlcFrmsGreaterThan18000Octets=s5TrFStatLlcFrmsGreaterThan18000Octets, s5TrBStatTtlFrms=s5TrBStatTtlFrms, s5TrFStatLlcFrms8192to18000Octets=s5TrFStatLlcFrms8192to18000Octets, s5TrPortInfoAddr=s5TrPortInfoAddr, s5TrRingExtClusterNumber=s5TrRingExtClusterNumber, s5TrPortBrdIndx=s5TrPortBrdIndx, s5TrRingExtExtensionIndx=s5TrRingExtExtensionIndx, s5TrFStatLlcFrms128to255Octets=s5TrFStatLlcFrms128to255Octets, s5TrPortInfoLastNaun=s5TrPortInfoLastNaun, s5TrRingExtEos=s5TrRingExtEos, s5TrFStatLlcFrms256to511Octets=s5TrFStatLlcFrms256to511Octets, s5TrFpuEntry=s5TrFpuEntry, s5TrBStatRingPurgeFrms=s5TrBStatRingPurgeFrms, s5TrPortFpuStatsTable=s5TrPortFpuStatsTable, s5TrPortAFD=s5TrPortAFD, s5TrBStatLlcNonUcastFrms=s5TrBStatLlcNonUcastFrms, s5TrRingExtRingInPhanStatus=s5TrRingExtRingInPhanStatus, s5TrBStatMacOctets=s5TrBStatMacOctets, s5TrAttFault=s5TrAttFault, s5TrFpuType=s5TrFpuType, s5TrRingExtRingNumber=s5TrRingExtRingNumber, s5TrPortTrnkAccMthdStrap=s5TrPortTrnkAccMthdStrap, s5TrPortFpuStatsRxOctets=s5TrPortFpuStatsRxOctets, s5TrPortSoftwareInsertion=s5TrPortSoftwareInsertion, s5TrBStatTable=s5TrBStatTable, s5TrEStatCongestionErrs=s5TrEStatCongestionErrs, s5TrBStatMacFrms=s5TrBStatMacFrms, s5TrPortConnector=s5TrPortConnector)
