#
# PySNMP MIB module JUNIPER-MOBILE-GATEWAY-AAA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-MOBILE-GATEWAY-AAA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:49:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
InetAddressType, InetPortNumber, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetPortNumber", "InetAddress")
EnabledStatus, = mibBuilder.importSymbols("JUNIPER-MIMSTP-MIB", "EnabledStatus")
jnxMbgGwIndex, jnxMbgGwName = mibBuilder.importSymbols("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex", "jnxMbgGwName")
jnxMobileGatewayMibRoot, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxMobileGatewayMibRoot")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, ObjectIdentity, Unsigned32, Gauge32, ModuleIdentity, Counter32, Integer32, NotificationType, Bits, TimeTicks, Counter64, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ObjectIdentity", "Unsigned32", "Gauge32", "ModuleIdentity", "Counter32", "Integer32", "NotificationType", "Bits", "TimeTicks", "Counter64", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
jnxMobileGatewayPgwAAAMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3))
jnxMobileGatewayPgwAAAMib.setRevisions(('2011-01-03 12:00',))
if mibBuilder.loadTexts: jnxMobileGatewayPgwAAAMib.setLastUpdated('201111151200Z')
if mibBuilder.loadTexts: jnxMobileGatewayPgwAAAMib.setOrganization('Juniper Networks, Inc.')
jnxMbgAAANotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 0))
jnxMbgAAAObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1))
jnxMbgAAAGlobalAuthStats = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 1))
jnxMbgAAAGlobalAcctStats = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 2))
jnxMbgAAAGlobalDynAuthStats = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3))
jnxMbgAAANotificationVars = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 7))
class JnxMbgAAAServerStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unknown", 0), ("active", 1), ("dead", 2))

class JnxMbgQueueWaterMarkType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unknown", 0), ("high", 1), ("low", 2))

jnxMbgAAAAuthStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 8), )
if mibBuilder.loadTexts: jnxMbgAAAAuthStatsTable.setStatus('current')
jnxMbgAAAAuthStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 8, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"))
if mibBuilder.loadTexts: jnxMbgAAAAuthStatsEntry.setStatus('current')
jnxMbgTtlAuthRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 8, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlAuthRequests.setStatus('current')
jnxMbgTtlAuthAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 8, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlAuthAccepts.setStatus('current')
jnxMbgTtlAuthRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 8, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlAuthRejects.setStatus('current')
jnxMbgTtlAuthChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 8, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlAuthChallenges.setStatus('current')
jnxMbgTtlAuthRequestTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 8, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlAuthRequestTimeouts.setStatus('current')
jnxMbgTtlAuthRequestTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 8, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlAuthRequestTxErrors.setStatus('current')
jnxMbgTtlAuthResponseErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 8, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlAuthResponseErrors.setStatus('current')
jnxMbgTtlAuthPendingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 8, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlAuthPendingRequests.setStatus('current')
jnxMbgAAAAcctStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 9), )
if mibBuilder.loadTexts: jnxMbgAAAAcctStatsTable.setStatus('current')
jnxMbgAAAAcctStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 9, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"))
if mibBuilder.loadTexts: jnxMbgAAAAcctStatsEntry.setStatus('current')
jnxMbgTtlAcctRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 9, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlAcctRequests.setStatus('current')
jnxMbgTtlAcctResp = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 9, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlAcctResp.setStatus('current')
jnxMbgTtlAcctRequestTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 9, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlAcctRequestTimeouts.setStatus('current')
jnxMbgTtlAcctRequestTxErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 9, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlAcctRequestTxErrors.setStatus('current')
jnxMbgTtlAcctResponseErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 9, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlAcctResponseErrors.setStatus('current')
jnxMbgTtlAcctPendingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 9, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlAcctPendingRequests.setStatus('current')
jnxMbgAAADynAuthStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10), )
if mibBuilder.loadTexts: jnxMbgAAADynAuthStatsTable.setStatus('current')
jnxMbgAAADynAuthStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"))
if mibBuilder.loadTexts: jnxMbgAAADynAuthStatsEntry.setStatus('current')
jnxMbgTtlDynAuthReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthReceived.setStatus('current')
jnxMbgTtlDynAuthCoaReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthCoaReceived.setStatus('current')
jnxMbgTtlDynAuthDmReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthDmReceived.setStatus('current')
jnxMbgTtlDynAuthCoaAckSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthCoaAckSent.setStatus('current')
jnxMbgTtlDynAuthCoaNackSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthCoaNackSent.setStatus('current')
jnxMbgTtlDynAuthDmAckSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthDmAckSent.setStatus('current')
jnxMbgTtlDynAuthDmNackSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthDmNackSent.setStatus('current')
jnxMbgTtlDynAuthDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthDropped.setStatus('current')
jnxMbgTtlDynAuthDuplicate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthDuplicate.setStatus('current')
jnxMbgTtlDynAuthForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthForwarded.setStatus('current')
jnxMbgTtlDynAuthTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthTimeouts.setStatus('current')
jnxMbgTtlDynAuthDelivered = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthDelivered.setStatus('current')
jnxMbgTtlDynAuthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthErrors.setStatus('current')
jnxMbgTtlDynAuthUnknownClnts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthUnknownClnts.setStatus('current')
jnxMbgTtlDynAuthInvalidCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthInvalidCode.setStatus('current')
jnxMbgTtlDynAuthInvalidAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthInvalidAuth.setStatus('current')
jnxMbgTtlDynAuthInvalidChId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthInvalidChId.setStatus('current')
jnxMbgTtlDynAuthMapErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthMapErrors.setStatus('current')
jnxMbgTtlDynAuthInvalidTrId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 10, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTtlDynAuthInvalidTrId.setStatus('current')
jnxMbgRadiusAuthSrvrTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11), )
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrTable.setStatus('current')
jnxMbgRadiusAuthSrvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"), (0, "JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgRadiusAuthSrvrName"))
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrEntry.setStatus('current')
jnxMbgRadiusAuthSrvrName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrName.setStatus('current')
jnxMbgRadiusAuthSrvrInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrInetAddrType.setStatus('current')
jnxMbgRadiusAuthSrvrInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrInetAddress.setStatus('current')
jnxMbgRadiusAuthSrvrInetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 4), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrInetPort.setStatus('current')
jnxMbgRadiusAuthSrvrRtngInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrRtngInstance.setStatus('current')
jnxMbgRadiusAuthSrvrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 6), JnxMbgAAAServerStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrStatus.setStatus('current')
jnxMbgRadiusAuthSrvrRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrRequests.setStatus('current')
jnxMbgRadiusAuthSrvrRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrRetrans.setStatus('current')
jnxMbgRadiusAuthSrvrAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrAccepts.setStatus('current')
jnxMbgRadiusAuthSrvrRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrRejects.setStatus('current')
jnxMbgRadiusAuthSrvrChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrChallenges.setStatus('current')
jnxMbgRadiusAuthSrvrMalformResp = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrMalformResp.setStatus('current')
jnxMbgRadiusAuthSrvrBadAuthen = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrBadAuthen.setStatus('current')
jnxMbgRadiusAuthSrvrPendingRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrPendingRqsts.setStatus('current')
jnxMbgRadiusAuthSrvrTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrTimeouts.setStatus('current')
jnxMbgRadiusAuthSrvrUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrUnknownTypes.setStatus('current')
jnxMbgRadiusAuthSrvrPacketsDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrPacketsDrop.setStatus('current')
jnxMbgRadiusAuthSrvrRTTAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrRTTAvg.setStatus('current')
jnxMbgRadiusAuthSrvrRTTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrRTTMin.setStatus('current')
jnxMbgRadiusAuthSrvrRTTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 11, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthSrvrRTTMax.setStatus('current')
jnxMbgRadiusAcctSrvrTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12), )
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrTable.setStatus('current')
jnxMbgRadiusAcctSrvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"), (0, "JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgRadiusAcctSrvrName"))
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrEntry.setStatus('current')
jnxMbgRadiusAcctSrvrName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrName.setStatus('current')
jnxMbgRadiusAcctSrvrInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrInetAddrType.setStatus('current')
jnxMbgRadiusAcctSrvrInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrInetAddress.setStatus('current')
jnxMbgRadiusAcctSrvrInetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1, 4), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrInetPort.setStatus('current')
jnxMbgRadiusAcctSrvrRtngInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrRtngInstance.setStatus('current')
jnxMbgRadiusAcctSrvrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1, 6), JnxMbgAAAServerStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrStatus.setStatus('current')
jnxMbgRadiusAcctSrvrRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrRequests.setStatus('current')
jnxMbgRadiusAcctSrvrRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrRetrans.setStatus('current')
jnxMbgRadiusAcctSrvrResp = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrResp.setStatus('current')
jnxMbgRadiusAcctSrvrMalformResp = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrMalformResp.setStatus('current')
jnxMbgRadiusAcctSrvrBadAuthen = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrBadAuthen.setStatus('current')
jnxMbgRadiusAcctSrvrPendingRqsts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrPendingRqsts.setStatus('current')
jnxMbgRadiusAcctSrvrTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrTimeouts.setStatus('current')
jnxMbgRadiusAcctSrvrUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrUnknownTypes.setStatus('current')
jnxMbgRadiusAcctSrvrPacketsDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrPacketsDrop.setStatus('current')
jnxMbgRadiusAcctSrvrRTTAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrRTTAvg.setStatus('current')
jnxMbgRadiusAcctSrvrRTTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrRTTMin.setStatus('current')
jnxMbgRadiusAcctSrvrRTTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 12, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctSrvrRTTMax.setStatus('current')
jnxMbgDynAuthClntTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13), )
if mibBuilder.loadTexts: jnxMbgDynAuthClntTable.setStatus('current')
jnxMbgDynAuthClntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"), (0, "JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgDynAuthClntName"))
if mibBuilder.loadTexts: jnxMbgDynAuthClntEntry.setStatus('current')
jnxMbgDynAuthClntName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: jnxMbgDynAuthClntName.setStatus('current')
jnxMbgDynAuthClntInAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClntInAddrType.setStatus('current')
jnxMbgDynAuthClntInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClntInetAddress.setStatus('current')
jnxMbgDynAuthClntCoaReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClntCoaReceived.setStatus('current')
jnxMbgDynAuthClntDmReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClntDmReceived.setStatus('current')
jnxMbgDynAuthClntCoaAckSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClntCoaAckSent.setStatus('current')
jnxMbgDynAuthClntCoaNackSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClntCoaNackSent.setStatus('current')
jnxMbgDynAuthClntDmAckSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClntDmAckSent.setStatus('current')
jnxMbgDynAuthClntDmNackSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClntDmNackSent.setStatus('current')
jnxMbgDynAuthClntDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClntDropped.setStatus('current')
jnxMbgDynAuthClntDuplicate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClntDuplicate.setStatus('current')
jnxMbgDynAuthClntForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClntForwarded.setStatus('current')
jnxMbgDynAuthClntTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClntTimeouts.setStatus('current')
jnxMbgDynAuthClntDelivered = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClntDelivered.setStatus('current')
jnxMbgDynAuthClntErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClntErrors.setStatus('current')
jnxMbgDynAuthClntInvalidAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClntInvalidAuth.setStatus('current')
jnxMbgDynAuthClntInvalidCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClntInvalidCode.setStatus('current')
jnxMbgDynAuthClntInvalidChId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClntInvalidChId.setStatus('current')
jnxMbgDynAuthClntMapErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 13, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClntMapErrors.setStatus('current')
jnxMbgTotalAuthRequests = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalAuthRequests.setStatus('deprecated')
jnxMbgTotalAuthAccepts = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalAuthAccepts.setStatus('deprecated')
jnxMbgTotalAuthRejects = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalAuthRejects.setStatus('deprecated')
jnxMbgTotalAuthChallenges = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalAuthChallenges.setStatus('deprecated')
jnxMbgTotalAuthRequestTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalAuthRequestTimeouts.setStatus('deprecated')
jnxMbgTotalAuthRequestTxErrors = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalAuthRequestTxErrors.setStatus('deprecated')
jnxMbgTotalAuthResponseErrors = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalAuthResponseErrors.setStatus('deprecated')
jnxMbgTotalAuthPendingRequests = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalAuthPendingRequests.setStatus('deprecated')
jnxMbgTotalAcctRequests = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 2, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalAcctRequests.setStatus('deprecated')
jnxMbgTotalAcctResponses = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 2, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalAcctResponses.setStatus('deprecated')
jnxMbgTotalAcctRequestTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 2, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalAcctRequestTimeouts.setStatus('deprecated')
jnxMbgTotalAcctRequestTxErrors = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 2, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalAcctRequestTxErrors.setStatus('deprecated')
jnxMbgTotalAcctResponseErrors = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 2, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalAcctResponseErrors.setStatus('deprecated')
jnxMbgTotalAcctPendingRequests = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 2, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalAcctPendingRequests.setStatus('deprecated')
jnxMbgTotalDynAuthReceived = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthReceived.setStatus('deprecated')
jnxMbgTotalDynAuthCoaReceived = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthCoaReceived.setStatus('deprecated')
jnxMbgTotalDynAuthDmReceived = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthDmReceived.setStatus('deprecated')
jnxMbgTotalDynAuthCoaAckSent = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthCoaAckSent.setStatus('deprecated')
jnxMbgTotalDynAuthCoaNackSent = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthCoaNackSent.setStatus('deprecated')
jnxMbgTotalDynAuthDmAckSent = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthDmAckSent.setStatus('deprecated')
jnxMbgTotalDynAuthDmNackSent = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthDmNackSent.setStatus('deprecated')
jnxMbgTotalDynAuthDropped = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthDropped.setStatus('deprecated')
jnxMbgTotalDynAuthDuplicate = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthDuplicate.setStatus('deprecated')
jnxMbgTotalDynAuthForwarded = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthForwarded.setStatus('deprecated')
jnxMbgTotalDynAuthTimeouts = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthTimeouts.setStatus('deprecated')
jnxMbgTotalDynAuthDelivered = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthDelivered.setStatus('deprecated')
jnxMbgTotalDynAuthErrors = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthErrors.setStatus('deprecated')
jnxMbgTotalDynAuthUnknownClnts = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthUnknownClnts.setStatus('deprecated')
jnxMbgTotalDynAuthInvalidCode = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthInvalidCode.setStatus('deprecated')
jnxMbgTotalDynAuthInvalidAuth = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthInvalidAuth.setStatus('deprecated')
jnxMbgTotalDynAuthInvalidChId = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthInvalidChId.setStatus('deprecated')
jnxMbgTotalDynAuthMapErrors = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthMapErrors.setStatus('deprecated')
jnxMbgTotalDynAuthInvalidTrId = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 3, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgTotalDynAuthInvalidTrId.setStatus('deprecated')
jnxMbgRadiusAuthServerTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4), )
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerTable.setStatus('deprecated')
jnxMbgRadiusAuthServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgRadiusAuthServerName"))
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerEntry.setStatus('deprecated')
jnxMbgRadiusAuthServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerName.setStatus('deprecated')
jnxMbgRadiusAuthServerInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerInetAddressType.setStatus('deprecated')
jnxMbgRadiusAuthServerInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerInetAddress.setStatus('deprecated')
jnxMbgRadiusAuthServerInetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 4), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerInetPort.setStatus('deprecated')
jnxMbgRadiusAuthServerRoutingInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerRoutingInstance.setStatus('deprecated')
jnxMbgRadiusAuthServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 6), JnxMbgAAAServerStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerStatus.setStatus('deprecated')
jnxMbgRadiusAuthServerRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerRequests.setStatus('deprecated')
jnxMbgRadiusAuthServersRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServersRetransmissions.setStatus('deprecated')
jnxMbgRadiusAuthServerAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerAccepts.setStatus('deprecated')
jnxMbgRadiusAuthServerRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerRejects.setStatus('deprecated')
jnxMbgRadiusAuthServerChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerChallenges.setStatus('deprecated')
jnxMbgRadiusAuthServerMalformedResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerMalformedResponses.setStatus('deprecated')
jnxMbgRadiusAuthServerBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerBadAuthenticators.setStatus('deprecated')
jnxMbgRadiusAuthServerPendingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerPendingRequests.setStatus('deprecated')
jnxMbgRadiusAuthServerTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerTimeouts.setStatus('deprecated')
jnxMbgRadiusAuthServerUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerUnknownTypes.setStatus('deprecated')
jnxMbgRadiusAuthServerPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerPacketsDropped.setStatus('deprecated')
jnxMbgRadiusAuthServerRTTAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerRTTAvg.setStatus('deprecated')
jnxMbgRadiusAuthServerRTTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerRTTMin.setStatus('deprecated')
jnxMbgRadiusAuthServerRTTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 4, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAuthServerRTTMax.setStatus('deprecated')
jnxMbgRadiusAcctServerTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5), )
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerTable.setStatus('deprecated')
jnxMbgRadiusAcctServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgRadiusAcctServerName"))
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerEntry.setStatus('deprecated')
jnxMbgRadiusAcctServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerName.setStatus('deprecated')
jnxMbgRadiusAcctServerInetAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerInetAddressType.setStatus('deprecated')
jnxMbgRadiusAcctServerInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerInetAddress.setStatus('deprecated')
jnxMbgRadiusAcctServerInetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1, 4), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerInetPort.setStatus('deprecated')
jnxMbgRadiusAcctServerRoutingInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerRoutingInstance.setStatus('deprecated')
jnxMbgRadiusAcctServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1, 6), JnxMbgAAAServerStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerStatus.setStatus('deprecated')
jnxMbgRadiusAcctServerRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerRequests.setStatus('deprecated')
jnxMbgRadiusAcctServersRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctServersRetransmissions.setStatus('deprecated')
jnxMbgRadiusAcctServerResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerResponses.setStatus('deprecated')
jnxMbgRadiusAcctServerMalformedResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerMalformedResponses.setStatus('deprecated')
jnxMbgRadiusAcctServerBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerBadAuthenticators.setStatus('deprecated')
jnxMbgRadiusAcctServerPendingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerPendingRequests.setStatus('deprecated')
jnxMbgRadiusAcctServerTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerTimeouts.setStatus('deprecated')
jnxMbgRadiusAcctServerUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerUnknownTypes.setStatus('deprecated')
jnxMbgRadiusAcctServerPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerPacketsDropped.setStatus('deprecated')
jnxMbgRadiusAcctServerRTTAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerRTTAvg.setStatus('deprecated')
jnxMbgRadiusAcctServerRTTMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerRTTMin.setStatus('deprecated')
jnxMbgRadiusAcctServerRTTMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 5, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgRadiusAcctServerRTTMax.setStatus('deprecated')
jnxMbgDynAuthClientTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6), )
if mibBuilder.loadTexts: jnxMbgDynAuthClientTable.setStatus('deprecated')
jnxMbgDynAuthClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1), ).setIndexNames((0, "JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgRadiusAcctServerName"))
if mibBuilder.loadTexts: jnxMbgDynAuthClientEntry.setStatus('deprecated')
jnxMbgDynAuthClientName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: jnxMbgDynAuthClientName.setStatus('deprecated')
jnxMbgDynAuthClientInAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClientInAddrType.setStatus('deprecated')
jnxMbgDynAuthClientInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClientInetAddress.setStatus('deprecated')
jnxMbgDynAuthClientCoaReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClientCoaReceived.setStatus('deprecated')
jnxMbgDynAuthClientDmReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClientDmReceived.setStatus('deprecated')
jnxMbgDynAuthClientCoaAckSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClientCoaAckSent.setStatus('deprecated')
jnxMbgDynAuthClientCoaNackSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClientCoaNackSent.setStatus('deprecated')
jnxMbgDynAuthClientDmAckSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClientDmAckSent.setStatus('deprecated')
jnxMbgDynAuthClientDmNackSent = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClientDmNackSent.setStatus('deprecated')
jnxMbgDynAuthClientDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClientDropped.setStatus('deprecated')
jnxMbgDynAuthClientDuplicate = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClientDuplicate.setStatus('deprecated')
jnxMbgDynAuthClientForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClientForwarded.setStatus('deprecated')
jnxMbgDynAuthClientTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClientTimeouts.setStatus('deprecated')
jnxMbgDynAuthClientDelivered = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClientDelivered.setStatus('deprecated')
jnxMbgDynAuthClientErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClientErrors.setStatus('deprecated')
jnxMbgDynAuthClientInvalidAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClientInvalidAuth.setStatus('deprecated')
jnxMbgDynAuthClientInvalidCode = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClientInvalidCode.setStatus('deprecated')
jnxMbgDynAuthClientInvalidChId = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClientInvalidChId.setStatus('deprecated')
jnxMbgDynAuthClientMapErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 6, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxMbgDynAuthClientMapErrors.setStatus('deprecated')
jnxMbgAAAServerName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 7, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgAAAServerName.setStatus('current')
jnxMbgSPIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 7, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgSPIdentifier.setStatus('current')
jnxMbgAAANetworkElementName = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 7, 3), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgAAANetworkElementName.setStatus('current')
jnxMbgPendQWaterMarkType = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 7, 4), JnxMbgQueueWaterMarkType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPendQWaterMarkType.setStatus('current')
jnxMbgPendQWaterMarkValue = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 7, 5), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPendQWaterMarkValue.setStatus('current')
jnxMbgPendQLength = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 1, 7, 6), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: jnxMbgPendQLength.setStatus('current')
jnxMbgAAAServerUp = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 0, 1)).setObjects(("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgAAAServerName"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgSPIdentifier"))
if mibBuilder.loadTexts: jnxMbgAAAServerUp.setStatus('deprecated')
jnxMbgAAAServerDown = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 0, 2)).setObjects(("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgAAAServerName"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgSPIdentifier"))
if mibBuilder.loadTexts: jnxMbgAAAServerDown.setStatus('deprecated')
jnxMbgAAANetworkElementUp = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 0, 3)).setObjects(("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgAAANetworkElementName"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgSPIdentifier"))
if mibBuilder.loadTexts: jnxMbgAAANetworkElementUp.setStatus('deprecated')
jnxMbgAAANetworkElementDown = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 0, 4)).setObjects(("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgAAANetworkElementName"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgSPIdentifier"))
if mibBuilder.loadTexts: jnxMbgAAANetworkElementDown.setStatus('deprecated')
jnxMbgAAANEPendAuthQStatus = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 0, 5)).setObjects(("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgAAANetworkElementName"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgSPIdentifier"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgPendQWaterMarkType"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgPendQWaterMarkValue"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgPendQLength"))
if mibBuilder.loadTexts: jnxMbgAAANEPendAuthQStatus.setStatus('deprecated')
jnxMbgAAANEPendAcctQStatus = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 0, 6)).setObjects(("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgAAANetworkElementName"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgSPIdentifier"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgPendQWaterMarkType"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgPendQWaterMarkValue"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgPendQLength"))
if mibBuilder.loadTexts: jnxMbgAAANEPendAcctQStatus.setStatus('deprecated')
jnxMbgAAARadiusServerUp = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 0, 7)).setObjects(("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"), ("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgAAAServerName"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgSPIdentifier"))
if mibBuilder.loadTexts: jnxMbgAAARadiusServerUp.setStatus('current')
jnxMbgAAARadiusServerDown = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 0, 8)).setObjects(("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"), ("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgAAAServerName"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgSPIdentifier"))
if mibBuilder.loadTexts: jnxMbgAAARadiusServerDown.setStatus('current')
jnxMbgAAARadiusNetworkElementUp = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 0, 9)).setObjects(("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"), ("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgAAANetworkElementName"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgSPIdentifier"))
if mibBuilder.loadTexts: jnxMbgAAARadiusNetworkElementUp.setStatus('current')
jnxMbgAAARadiusNetworkElementDown = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 0, 10)).setObjects(("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"), ("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgAAANetworkElementName"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgSPIdentifier"))
if mibBuilder.loadTexts: jnxMbgAAARadiusNetworkElementDown.setStatus('current')
jnxMbgAAARadiusNEPendAuthQStatus = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 0, 11)).setObjects(("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"), ("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgAAANetworkElementName"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgSPIdentifier"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgPendQWaterMarkType"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgPendQWaterMarkValue"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgPendQLength"))
if mibBuilder.loadTexts: jnxMbgAAARadiusNEPendAuthQStatus.setStatus('current')
jnxMbgAAARadiusNEPendAcctQStatus = NotificationType((1, 3, 6, 1, 4, 1, 2636, 3, 66, 3, 0, 12)).setObjects(("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwIndex"), ("JUNIPER-MOBILE-GATEWAYS", "jnxMbgGwName"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgAAANetworkElementName"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgSPIdentifier"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgPendQWaterMarkType"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgPendQWaterMarkValue"), ("JUNIPER-MOBILE-GATEWAY-AAA-MIB", "jnxMbgPendQLength"))
if mibBuilder.loadTexts: jnxMbgAAARadiusNEPendAcctQStatus.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-MOBILE-GATEWAY-AAA-MIB", jnxMbgAAAGlobalAcctStats=jnxMbgAAAGlobalAcctStats, jnxMbgRadiusAcctServerTable=jnxMbgRadiusAcctServerTable, jnxMbgRadiusAcctSrvrRTTMax=jnxMbgRadiusAcctSrvrRTTMax, jnxMbgRadiusAcctSrvrRtngInstance=jnxMbgRadiusAcctSrvrRtngInstance, jnxMbgAAAServerDown=jnxMbgAAAServerDown, jnxMbgDynAuthClntDmNackSent=jnxMbgDynAuthClntDmNackSent, jnxMbgRadiusAcctServerPacketsDropped=jnxMbgRadiusAcctServerPacketsDropped, jnxMbgTtlDynAuthInvalidCode=jnxMbgTtlDynAuthInvalidCode, jnxMbgTtlDynAuthInvalidAuth=jnxMbgTtlDynAuthInvalidAuth, jnxMbgTotalDynAuthErrors=jnxMbgTotalDynAuthErrors, jnxMbgRadiusAuthSrvrAccepts=jnxMbgRadiusAuthSrvrAccepts, jnxMbgAAARadiusServerUp=jnxMbgAAARadiusServerUp, jnxMbgTtlAcctRequestTxErrors=jnxMbgTtlAcctRequestTxErrors, jnxMbgTtlAuthAccepts=jnxMbgTtlAuthAccepts, jnxMbgRadiusAuthSrvrEntry=jnxMbgRadiusAuthSrvrEntry, jnxMbgRadiusAcctSrvrEntry=jnxMbgRadiusAcctSrvrEntry, jnxMbgTtlDynAuthTimeouts=jnxMbgTtlDynAuthTimeouts, jnxMbgRadiusAcctServerTimeouts=jnxMbgRadiusAcctServerTimeouts, jnxMbgAAANotificationVars=jnxMbgAAANotificationVars, jnxMbgTtlDynAuthDelivered=jnxMbgTtlDynAuthDelivered, jnxMbgDynAuthClientDelivered=jnxMbgDynAuthClientDelivered, jnxMbgAAANetworkElementDown=jnxMbgAAANetworkElementDown, jnxMbgDynAuthClntCoaReceived=jnxMbgDynAuthClntCoaReceived, jnxMbgAAARadiusNEPendAcctQStatus=jnxMbgAAARadiusNEPendAcctQStatus, jnxMbgTotalAuthRejects=jnxMbgTotalAuthRejects, jnxMbgTtlAuthResponseErrors=jnxMbgTtlAuthResponseErrors, jnxMbgRadiusAcctServerBadAuthenticators=jnxMbgRadiusAcctServerBadAuthenticators, jnxMbgAAAGlobalDynAuthStats=jnxMbgAAAGlobalDynAuthStats, JnxMbgAAAServerStatus=JnxMbgAAAServerStatus, jnxMbgDynAuthClientInvalidCode=jnxMbgDynAuthClientInvalidCode, jnxMbgRadiusAuthServerTable=jnxMbgRadiusAuthServerTable, jnxMbgTotalAuthAccepts=jnxMbgTotalAuthAccepts, jnxMbgRadiusAuthServerAccepts=jnxMbgRadiusAuthServerAccepts, jnxMbgTtlAcctResponseErrors=jnxMbgTtlAcctResponseErrors, jnxMbgTtlAuthRequestTimeouts=jnxMbgTtlAuthRequestTimeouts, jnxMbgRadiusAuthSrvrInetAddrType=jnxMbgRadiusAuthSrvrInetAddrType, jnxMbgRadiusAcctSrvrRTTAvg=jnxMbgRadiusAcctSrvrRTTAvg, jnxMbgTtlDynAuthUnknownClnts=jnxMbgTtlDynAuthUnknownClnts, jnxMbgTtlDynAuthCoaAckSent=jnxMbgTtlDynAuthCoaAckSent, jnxMbgAAADynAuthStatsEntry=jnxMbgAAADynAuthStatsEntry, jnxMbgRadiusAuthServerName=jnxMbgRadiusAuthServerName, jnxMbgRadiusAuthSrvrChallenges=jnxMbgRadiusAuthSrvrChallenges, jnxMbgRadiusAcctSrvrStatus=jnxMbgRadiusAcctSrvrStatus, jnxMbgRadiusAcctServersRetransmissions=jnxMbgRadiusAcctServersRetransmissions, jnxMbgRadiusAuthSrvrRetrans=jnxMbgRadiusAuthSrvrRetrans, PYSNMP_MODULE_ID=jnxMobileGatewayPgwAAAMib, jnxMbgDynAuthClntMapErrors=jnxMbgDynAuthClntMapErrors, jnxMbgDynAuthClientCoaReceived=jnxMbgDynAuthClientCoaReceived, jnxMbgTtlDynAuthDmAckSent=jnxMbgTtlDynAuthDmAckSent, jnxMobileGatewayPgwAAAMib=jnxMobileGatewayPgwAAAMib, jnxMbgTotalDynAuthDelivered=jnxMbgTotalDynAuthDelivered, jnxMbgRadiusAuthServerRequests=jnxMbgRadiusAuthServerRequests, jnxMbgPendQWaterMarkValue=jnxMbgPendQWaterMarkValue, jnxMbgRadiusAuthServerRTTMax=jnxMbgRadiusAuthServerRTTMax, jnxMbgDynAuthClientCoaNackSent=jnxMbgDynAuthClientCoaNackSent, jnxMbgTtlDynAuthDmNackSent=jnxMbgTtlDynAuthDmNackSent, jnxMbgRadiusAuthServerInetAddress=jnxMbgRadiusAuthServerInetAddress, jnxMbgRadiusAuthServerChallenges=jnxMbgRadiusAuthServerChallenges, jnxMbgDynAuthClientDmReceived=jnxMbgDynAuthClientDmReceived, jnxMbgTtlAcctRequestTimeouts=jnxMbgTtlAcctRequestTimeouts, jnxMbgRadiusAcctServerPendingRequests=jnxMbgRadiusAcctServerPendingRequests, jnxMbgDynAuthClntDmReceived=jnxMbgDynAuthClntDmReceived, jnxMbgDynAuthClntDuplicate=jnxMbgDynAuthClntDuplicate, jnxMbgDynAuthClntDropped=jnxMbgDynAuthClntDropped, jnxMbgTotalAcctPendingRequests=jnxMbgTotalAcctPendingRequests, jnxMbgRadiusAuthSrvrRTTAvg=jnxMbgRadiusAuthSrvrRTTAvg, jnxMbgDynAuthClientTimeouts=jnxMbgDynAuthClientTimeouts, jnxMbgTtlDynAuthCoaReceived=jnxMbgTtlDynAuthCoaReceived, jnxMbgAAARadiusServerDown=jnxMbgAAARadiusServerDown, jnxMbgRadiusAcctServerRoutingInstance=jnxMbgRadiusAcctServerRoutingInstance, jnxMbgRadiusAuthServerTimeouts=jnxMbgRadiusAuthServerTimeouts, jnxMbgTotalDynAuthDuplicate=jnxMbgTotalDynAuthDuplicate, jnxMbgDynAuthClientInAddrType=jnxMbgDynAuthClientInAddrType, jnxMbgRadiusAuthSrvrRequests=jnxMbgRadiusAuthSrvrRequests, jnxMbgTotalDynAuthCoaNackSent=jnxMbgTotalDynAuthCoaNackSent, jnxMbgRadiusAuthSrvrPacketsDrop=jnxMbgRadiusAuthSrvrPacketsDrop, jnxMbgRadiusAcctSrvrMalformResp=jnxMbgRadiusAcctSrvrMalformResp, jnxMbgDynAuthClntTable=jnxMbgDynAuthClntTable, jnxMbgTotalAcctResponses=jnxMbgTotalAcctResponses, jnxMbgDynAuthClntName=jnxMbgDynAuthClntName, jnxMbgRadiusAuthServerRTTAvg=jnxMbgRadiusAuthServerRTTAvg, jnxMbgDynAuthClntEntry=jnxMbgDynAuthClntEntry, jnxMbgRadiusAcctServerInetAddressType=jnxMbgRadiusAcctServerInetAddressType, jnxMbgRadiusAcctSrvrPacketsDrop=jnxMbgRadiusAcctSrvrPacketsDrop, jnxMbgAAAObjects=jnxMbgAAAObjects, jnxMbgAAANEPendAuthQStatus=jnxMbgAAANEPendAuthQStatus, jnxMbgRadiusAuthSrvrStatus=jnxMbgRadiusAuthSrvrStatus, jnxMbgTotalAuthChallenges=jnxMbgTotalAuthChallenges, jnxMbgRadiusAcctSrvrTable=jnxMbgRadiusAcctSrvrTable, jnxMbgTotalDynAuthDmReceived=jnxMbgTotalDynAuthDmReceived, jnxMbgTtlDynAuthErrors=jnxMbgTtlDynAuthErrors, jnxMbgAAAServerName=jnxMbgAAAServerName, jnxMbgTotalDynAuthCoaAckSent=jnxMbgTotalDynAuthCoaAckSent, jnxMbgRadiusAcctSrvrRequests=jnxMbgRadiusAcctSrvrRequests, jnxMbgTotalAcctRequestTimeouts=jnxMbgTotalAcctRequestTimeouts, jnxMbgAAAGlobalAuthStats=jnxMbgAAAGlobalAuthStats, jnxMbgTotalDynAuthDmAckSent=jnxMbgTotalDynAuthDmAckSent, jnxMbgRadiusAcctServerInetAddress=jnxMbgRadiusAcctServerInetAddress, jnxMbgTtlDynAuthMapErrors=jnxMbgTtlDynAuthMapErrors, jnxMbgTotalDynAuthReceived=jnxMbgTotalDynAuthReceived, jnxMbgRadiusAcctSrvrResp=jnxMbgRadiusAcctSrvrResp, jnxMbgDynAuthClientInvalidChId=jnxMbgDynAuthClientInvalidChId, jnxMbgSPIdentifier=jnxMbgSPIdentifier, jnxMbgTtlDynAuthForwarded=jnxMbgTtlDynAuthForwarded, jnxMbgTotalAuthResponseErrors=jnxMbgTotalAuthResponseErrors, jnxMbgTotalDynAuthTimeouts=jnxMbgTotalDynAuthTimeouts, jnxMbgTtlAcctPendingRequests=jnxMbgTtlAcctPendingRequests, jnxMbgRadiusAuthServerInetAddressType=jnxMbgRadiusAuthServerInetAddressType, jnxMbgRadiusAcctServerRTTAvg=jnxMbgRadiusAcctServerRTTAvg, jnxMbgDynAuthClntCoaAckSent=jnxMbgDynAuthClntCoaAckSent, jnxMbgDynAuthClientEntry=jnxMbgDynAuthClientEntry, jnxMbgDynAuthClientDmAckSent=jnxMbgDynAuthClientDmAckSent, jnxMbgDynAuthClientMapErrors=jnxMbgDynAuthClientMapErrors, jnxMbgRadiusAcctSrvrInetAddress=jnxMbgRadiusAcctSrvrInetAddress, jnxMbgTotalDynAuthCoaReceived=jnxMbgTotalDynAuthCoaReceived, jnxMbgTotalDynAuthForwarded=jnxMbgTotalDynAuthForwarded, jnxMbgRadiusAcctServerName=jnxMbgRadiusAcctServerName, jnxMbgRadiusAuthSrvrName=jnxMbgRadiusAuthSrvrName, jnxMbgRadiusAcctSrvrBadAuthen=jnxMbgRadiusAcctSrvrBadAuthen, jnxMbgTotalDynAuthInvalidAuth=jnxMbgTotalDynAuthInvalidAuth, jnxMbgTotalAuthRequestTxErrors=jnxMbgTotalAuthRequestTxErrors, jnxMbgRadiusAcctServerEntry=jnxMbgRadiusAcctServerEntry, jnxMbgTtlAuthRequests=jnxMbgTtlAuthRequests, jnxMbgTtlDynAuthCoaNackSent=jnxMbgTtlDynAuthCoaNackSent, jnxMbgRadiusAcctSrvrRTTMin=jnxMbgRadiusAcctSrvrRTTMin, jnxMbgRadiusAuthSrvrTimeouts=jnxMbgRadiusAuthSrvrTimeouts, jnxMbgTotalDynAuthMapErrors=jnxMbgTotalDynAuthMapErrors, jnxMbgDynAuthClntInvalidChId=jnxMbgDynAuthClntInvalidChId, jnxMbgRadiusAcctServerRequests=jnxMbgRadiusAcctServerRequests, jnxMbgDynAuthClientName=jnxMbgDynAuthClientName, jnxMbgTotalDynAuthInvalidCode=jnxMbgTotalDynAuthInvalidCode, jnxMbgRadiusAcctSrvrUnknownTypes=jnxMbgRadiusAcctSrvrUnknownTypes, jnxMbgAAARadiusNetworkElementDown=jnxMbgAAARadiusNetworkElementDown, jnxMbgTtlAuthRejects=jnxMbgTtlAuthRejects, jnxMbgRadiusAuthServersRetransmissions=jnxMbgRadiusAuthServersRetransmissions, jnxMbgTotalDynAuthUnknownClnts=jnxMbgTotalDynAuthUnknownClnts, jnxMbgRadiusAuthServerUnknownTypes=jnxMbgRadiusAuthServerUnknownTypes, jnxMbgRadiusAuthServerInetPort=jnxMbgRadiusAuthServerInetPort, jnxMbgAAANEPendAcctQStatus=jnxMbgAAANEPendAcctQStatus, jnxMbgRadiusAcctSrvrName=jnxMbgRadiusAcctSrvrName, jnxMbgDynAuthClientTable=jnxMbgDynAuthClientTable, jnxMbgAAAServerUp=jnxMbgAAAServerUp, jnxMbgDynAuthClntInvalidAuth=jnxMbgDynAuthClntInvalidAuth, jnxMbgAAANetworkElementUp=jnxMbgAAANetworkElementUp, jnxMbgRadiusAuthSrvrTable=jnxMbgRadiusAuthSrvrTable, jnxMbgPendQWaterMarkType=jnxMbgPendQWaterMarkType, jnxMbgRadiusAuthSrvrRTTMax=jnxMbgRadiusAuthSrvrRTTMax, jnxMbgTtlAuthRequestTxErrors=jnxMbgTtlAuthRequestTxErrors, jnxMbgRadiusAcctServerRTTMax=jnxMbgRadiusAcctServerRTTMax, jnxMbgDynAuthClientInvalidAuth=jnxMbgDynAuthClientInvalidAuth, jnxMbgPendQLength=jnxMbgPendQLength, jnxMbgAAADynAuthStatsTable=jnxMbgAAADynAuthStatsTable, jnxMbgTotalDynAuthDmNackSent=jnxMbgTotalDynAuthDmNackSent, jnxMbgDynAuthClientErrors=jnxMbgDynAuthClientErrors, jnxMbgRadiusAcctServerResponses=jnxMbgRadiusAcctServerResponses, jnxMbgTotalAuthPendingRequests=jnxMbgTotalAuthPendingRequests, jnxMbgAAARadiusNetworkElementUp=jnxMbgAAARadiusNetworkElementUp, jnxMbgTtlDynAuthDuplicate=jnxMbgTtlDynAuthDuplicate, jnxMbgDynAuthClntCoaNackSent=jnxMbgDynAuthClntCoaNackSent, jnxMbgAAAAuthStatsEntry=jnxMbgAAAAuthStatsEntry, jnxMbgRadiusAcctSrvrPendingRqsts=jnxMbgRadiusAcctSrvrPendingRqsts, jnxMbgRadiusAuthServerStatus=jnxMbgRadiusAuthServerStatus, jnxMbgTtlDynAuthInvalidChId=jnxMbgTtlDynAuthInvalidChId, jnxMbgDynAuthClntInvalidCode=jnxMbgDynAuthClntInvalidCode, jnxMbgRadiusAuthServerPacketsDropped=jnxMbgRadiusAuthServerPacketsDropped, jnxMbgRadiusAuthSrvrMalformResp=jnxMbgRadiusAuthSrvrMalformResp, jnxMbgRadiusAcctServerMalformedResponses=jnxMbgRadiusAcctServerMalformedResponses, jnxMbgAAANetworkElementName=jnxMbgAAANetworkElementName, jnxMbgRadiusAuthServerEntry=jnxMbgRadiusAuthServerEntry, jnxMbgTotalAuthRequests=jnxMbgTotalAuthRequests, jnxMbgRadiusAuthSrvrPendingRqsts=jnxMbgRadiusAuthSrvrPendingRqsts, jnxMbgDynAuthClntInetAddress=jnxMbgDynAuthClntInetAddress, jnxMbgRadiusAcctServerStatus=jnxMbgRadiusAcctServerStatus, jnxMbgRadiusAuthServerRejects=jnxMbgRadiusAuthServerRejects, jnxMbgRadiusAuthServerPendingRequests=jnxMbgRadiusAuthServerPendingRequests, jnxMbgRadiusAcctSrvrInetAddrType=jnxMbgRadiusAcctSrvrInetAddrType, jnxMbgRadiusAuthSrvrUnknownTypes=jnxMbgRadiusAuthSrvrUnknownTypes, jnxMbgRadiusAcctSrvrInetPort=jnxMbgRadiusAcctSrvrInetPort, jnxMbgTotalDynAuthInvalidChId=jnxMbgTotalDynAuthInvalidChId, jnxMbgTtlAcctResp=jnxMbgTtlAcctResp, jnxMbgDynAuthClntForwarded=jnxMbgDynAuthClntForwarded, jnxMbgTtlDynAuthInvalidTrId=jnxMbgTtlDynAuthInvalidTrId, jnxMbgTotalDynAuthDropped=jnxMbgTotalDynAuthDropped, jnxMbgAAAAcctStatsTable=jnxMbgAAAAcctStatsTable, jnxMbgAAANotifications=jnxMbgAAANotifications, jnxMbgRadiusAuthSrvrBadAuthen=jnxMbgRadiusAuthSrvrBadAuthen, jnxMbgDynAuthClntTimeouts=jnxMbgDynAuthClntTimeouts, jnxMbgDynAuthClientCoaAckSent=jnxMbgDynAuthClientCoaAckSent, jnxMbgTotalAcctRequestTxErrors=jnxMbgTotalAcctRequestTxErrors, jnxMbgRadiusAcctServerUnknownTypes=jnxMbgRadiusAcctServerUnknownTypes, jnxMbgTtlDynAuthDmReceived=jnxMbgTtlDynAuthDmReceived, jnxMbgRadiusAuthSrvrRtngInstance=jnxMbgRadiusAuthSrvrRtngInstance, jnxMbgRadiusAcctServerInetPort=jnxMbgRadiusAcctServerInetPort, jnxMbgTtlAuthPendingRequests=jnxMbgTtlAuthPendingRequests, jnxMbgDynAuthClientDmNackSent=jnxMbgDynAuthClientDmNackSent, jnxMbgTtlDynAuthReceived=jnxMbgTtlDynAuthReceived, jnxMbgTtlDynAuthDropped=jnxMbgTtlDynAuthDropped, jnxMbgAAAAcctStatsEntry=jnxMbgAAAAcctStatsEntry, jnxMbgDynAuthClientForwarded=jnxMbgDynAuthClientForwarded, jnxMbgDynAuthClientDuplicate=jnxMbgDynAuthClientDuplicate, jnxMbgTotalAuthRequestTimeouts=jnxMbgTotalAuthRequestTimeouts, jnxMbgRadiusAuthServerRoutingInstance=jnxMbgRadiusAuthServerRoutingInstance, jnxMbgRadiusAcctSrvrTimeouts=jnxMbgRadiusAcctSrvrTimeouts, jnxMbgRadiusAuthServerMalformedResponses=jnxMbgRadiusAuthServerMalformedResponses, jnxMbgDynAuthClientDropped=jnxMbgDynAuthClientDropped, JnxMbgQueueWaterMarkType=JnxMbgQueueWaterMarkType, jnxMbgRadiusAcctSrvrRetrans=jnxMbgRadiusAcctSrvrRetrans, jnxMbgRadiusAuthSrvrInetAddress=jnxMbgRadiusAuthSrvrInetAddress, jnxMbgDynAuthClientInetAddress=jnxMbgDynAuthClientInetAddress, jnxMbgRadiusAuthServerRTTMin=jnxMbgRadiusAuthServerRTTMin, jnxMbgRadiusAcctServerRTTMin=jnxMbgRadiusAcctServerRTTMin, jnxMbgTotalAcctResponseErrors=jnxMbgTotalAcctResponseErrors, jnxMbgTotalDynAuthInvalidTrId=jnxMbgTotalDynAuthInvalidTrId, jnxMbgRadiusAuthSrvrInetPort=jnxMbgRadiusAuthSrvrInetPort, jnxMbgTtlAcctRequests=jnxMbgTtlAcctRequests, jnxMbgTotalAcctRequests=jnxMbgTotalAcctRequests, jnxMbgAAARadiusNEPendAuthQStatus=jnxMbgAAARadiusNEPendAuthQStatus, jnxMbgDynAuthClntDelivered=jnxMbgDynAuthClntDelivered, jnxMbgRadiusAuthSrvrRejects=jnxMbgRadiusAuthSrvrRejects, jnxMbgRadiusAuthServerBadAuthenticators=jnxMbgRadiusAuthServerBadAuthenticators, jnxMbgDynAuthClntErrors=jnxMbgDynAuthClntErrors, jnxMbgTtlAuthChallenges=jnxMbgTtlAuthChallenges, jnxMbgDynAuthClntDmAckSent=jnxMbgDynAuthClntDmAckSent, jnxMbgDynAuthClntInAddrType=jnxMbgDynAuthClntInAddrType, jnxMbgAAAAuthStatsTable=jnxMbgAAAAuthStatsTable, jnxMbgRadiusAuthSrvrRTTMin=jnxMbgRadiusAuthSrvrRTTMin)
