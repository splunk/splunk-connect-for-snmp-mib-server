#
# PySNMP MIB module CIENA-CES-MODULE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CIENA-CES-MODULE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:31:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
cienaGlobalMacAddress, cienaGlobalSeverity = mibBuilder.importSymbols("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress", "cienaGlobalSeverity")
cienaCesConfig, cienaCesNotifications = mibBuilder.importSymbols("CIENA-SMI", "cienaCesConfig", "cienaCesNotifications")
CienaGlobalState, = mibBuilder.importSymbols("CIENA-TC", "CienaGlobalState")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, Counter32, Bits, ObjectIdentity, TimeTicks, Counter64, NotificationType, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, MibIdentifier, Unsigned32, Integer32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "Bits", "ObjectIdentity", "TimeTicks", "Counter64", "NotificationType", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "MibIdentifier", "Unsigned32", "Integer32", "IpAddress")
TextualConvention, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "MacAddress", "DisplayString")
cienaCesModuleMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2))
cienaCesModuleMIB.setRevisions(('2014-01-23 00:00', '2013-12-05 00:00', '2013-04-16 00:00', '2013-03-28 00:00', '2013-03-07 00:00', '2012-08-23 00:00', '2012-06-28 00:00', '2012-06-14 00:00', '2011-06-06 00:00', '2010-12-13 00:00', '2010-05-10 00:00',))
if mibBuilder.loadTexts: cienaCesModuleMIB.setLastUpdated('201401230000Z')
if mibBuilder.loadTexts: cienaCesModuleMIB.setOrganization('Ciena Corp.')
cienaCesModuleMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1))
cienaCesModuleNotifAttrs = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 3))
cienaCesModuleGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 1))
cienaCesModule = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2))
cienaCesSwModule = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4))
cienaCesModuleMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3))
cienaCesModuleMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0))
cienaCesModuleConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 2))
cienaCesModuleMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 2, 1))
cienaCesModuleMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 2, 2))
class SwPkgStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("unknown", 0), ("good", 1), ("invalid", 2), ("loading", 3), ("syncing", 4), ("waiting", 5), ("burning", 6), ("empty", 7))

class SwModuleState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("installing", 1), ("booting", 2), ("initializing", 3), ("good", 4), ("failed", 5), ("disabled", 6), ("empty", 7), ("unsupported", 8), ("unknown", 9))

class TceHealthCategory(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35))
    namedValues = NamedValues(("unknown", 1), ("cpu", 2), ("datapath", 3), ("ethernet", 4), ("fabric", 5), ("sm", 6), ("tempSm", 7), ("samplesSm", 8), ("disk", 9), ("tempModule", 10), ("samplesModule", 11), ("fanTray", 12), ("fanTraySpeedMismatch", 13), ("fanSpeedMismatch", 14), ("tempFan", 15), ("samplesFan", 16), ("fanRpm", 17), ("power", 18), ("feedPower", 19), ("systemResource", 20), ("memory", 21), ("mac", 22), ("i2c", 23), ("flash", 24), ("transceiver", 25), ("link", 26), ("iomStatus", 27), ("usbFlash", 28), ("linxstats", 29), ("smFabric", 30), ("spi", 31), ("slotResource", 32), ("tempIom", 33), ("powerParams", 34), ("powerOutputVoltage", 35))

class TceHealthStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("unknown", 1), ("normal", 2), ("warning", 3), ("degraded", 4), ("faulted", 5))

class HealthOriginType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("none", 0), ("chassis", 1), ("slot", 2), ("port", 3), ("unit", 4))

cienaCesModuleGlobalPostState = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 1, 1), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleGlobalPostState.setStatus('current')
cienaCesModuleTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1), )
if mibBuilder.loadTexts: cienaCesModuleTable.setStatus('current')
cienaCesModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1), ).setIndexNames((0, "CIENA-CES-MODULE-MIB", "cienaCesModuleChassisIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleShelfIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleSlotIndx"))
if mibBuilder.loadTexts: cienaCesModuleEntry.setStatus('current')
cienaCesModuleChassisIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: cienaCesModuleChassisIndx.setStatus('current')
cienaCesModuleShelfIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 992)))
if mibBuilder.loadTexts: cienaCesModuleShelfIndx.setStatus('current')
cienaCesModuleSlotIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 38)))
if mibBuilder.loadTexts: cienaCesModuleSlotIndx.setStatus('current')
cienaCesModuleModel = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleModel.setStatus('current')
cienaCesModuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("invalid", 0), ("unknown", 1), ("ctm", 2), ("lm", 3), ("sm", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleType.setStatus('current')
cienaCesModuleDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleDescription.setStatus('current')
cienaCesModuleAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("shutdown", 3))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleAdminState.setStatus('current')
cienaCesModuleOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("uninstalled", 1), ("unequipped", 2), ("init", 3), ("disabled", 4), ("enabled", 5), ("faulted", 6), ("hotswap", 7), ("poweroff", 8), ("hitlessInit", 9), ("fastReload", 10), ("krnInit", 11), ("unsupported", 12), ("installing", 13), ("failed", 14), ("krnDisable", 15), ("appFault", 16), ("booting", 17), ("powerdown", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleOperState.setStatus('current')
cienaCesModuleProtectionRole = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("primary", 2), ("secondary", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleProtectionRole.setStatus('current')
cienaCesModuleStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("cold", 1), ("warm", 2), ("hot", 3), ("protected", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleStandbyStatus.setStatus('current')
cienaCesModuleLastRebootReason = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19))).clone(namedValues=NamedValues(("unknown", 1), ("snmp", 2), ("pwrFail", 3), ("appLoad", 4), ("errorHandler", 5), ("watchdog", 6), ("upgrade", 7), ("cli", 8), ("resetButton", 9), ("failOver", 10), ("faultManager", 11), ("communicationFailure", 12), ("configurationRevert", 13), ("unprotectedFailure", 14), ("bootFailure", 15), ("softwareRevert", 16), ("processorWarmRestart", 17), ("coldRestart", 18), ("primaryRestart", 19)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleLastRebootReason.setStatus('current')
cienaCesModuleAdminPostState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1, 12), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleAdminPostState.setStatus('current')
cienaCesModuleOperPostState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1, 13), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleOperPostState.setStatus('current')
cienaCesModuleTrapState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1, 16), CienaGlobalState().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesModuleTrapState.setStatus('current')
cienaCesModuleChassisNotifIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cienaCesModuleChassisNotifIndx.setStatus('current')
cienaCesModuleShelfNotifIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 992))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cienaCesModuleShelfNotifIndx.setStatus('current')
cienaCesModuleSlotNotifIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 38))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cienaCesModuleSlotNotifIndx.setStatus('current')
cienaCesModuleSlotName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 1, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSlotName.setStatus('current')
cienaCesModuleDescriptionTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 2), )
if mibBuilder.loadTexts: cienaCesModuleDescriptionTable.setStatus('current')
cienaCesModuleDescriptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 2, 1), ).setIndexNames((0, "CIENA-CES-MODULE-MIB", "cienaCesModuleChassisIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleShelfIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleSlotIndx"))
if mibBuilder.loadTexts: cienaCesModuleDescriptionEntry.setStatus('current')
cienaCesModuleDescriptionBoardName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleDescriptionBoardName.setStatus('current')
cienaCesModuleDescriptionBoardPartNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleDescriptionBoardPartNum.setStatus('current')
cienaCesModuleDescriptionBoardSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleDescriptionBoardSerialNum.setStatus('current')
cienaCesModuleDescriptionBoardDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleDescriptionBoardDesc.setStatus('current')
cienaCesModuleDescriptionHwVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleDescriptionHwVersion.setStatus('current')
cienaCesModuleDescriptionMfgDate = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleDescriptionMfgDate.setStatus('current')
cienaCesModuleDescriptionBaseMac = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 2, 1, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleDescriptionBaseMac.setStatus('current')
cienaCesModuleDescriptionUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 2, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleDescriptionUpTime.setStatus('current')
cienaCesModuleDescriptionTotalNumPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleDescriptionTotalNumPorts.setStatus('current')
cienaCesModuleIDPTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 8), )
if mibBuilder.loadTexts: cienaCesModuleIDPTable.setStatus('current')
cienaCesModuleIDPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 8, 1), ).setIndexNames((0, "CIENA-CES-MODULE-MIB", "cienaCesModuleChassisIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleShelfIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleSlotIndx"))
if mibBuilder.loadTexts: cienaCesModuleIDPEntry.setStatus('current')
cienaCesModuleIDPEthBaseMac = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 8, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleIDPEthBaseMac.setStatus('current')
cienaCesModuleIDPEthBaseMacRange = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleIDPEthBaseMacRange.setStatus('current')
cienaCesModuleIDPModuleSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 8, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleIDPModuleSerialNumber.setStatus('current')
cienaCesModuleIDPModelPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 8, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleIDPModelPartNumber.setStatus('current')
cienaCesModuleIDPModelRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 8, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleIDPModelRevision.setStatus('current')
cienaCesModuleIDPProductID = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 8, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleIDPProductID.setStatus('current')
cienaCesModuleIDPMfgDate = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 8, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleIDPMfgDate.setStatus('current')
cienaCesModuleIDPCleiCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 8, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleIDPCleiCode.setStatus('current')
cienaCesModuleIDPBarcode = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 8, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleIDPBarcode.setStatus('current')
cienaCesModuleIDPSWCompat = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 8, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleIDPSWCompat.setStatus('current')
cienaCesModuleIDPFTC = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 8, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleIDPFTC.setStatus('current')
cienaCesModuleTempSensorTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 3), )
if mibBuilder.loadTexts: cienaCesModuleTempSensorTable.setStatus('current')
cienaCesModuleTempSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 3, 1), ).setIndexNames((0, "CIENA-CES-MODULE-MIB", "cienaCesModuleChassisIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleShelfIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleSlotIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleSensorIndx"))
if mibBuilder.loadTexts: cienaCesModuleTempSensorEntry.setStatus('current')
cienaCesModuleSensorIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: cienaCesModuleSensorIndx.setStatus('current')
cienaCesModuleSensorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSensorDescription.setStatus('current')
cienaCesModuleSensorCurrentTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSensorCurrentTemp.setStatus('current')
cienaCesModuleSensorHighTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSensorHighTemp.setStatus('current')
cienaCesModuleSensorLowTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSensorLowTemp.setStatus('current')
cienaCesModuleSensorHighTempThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSensorHighTempThreshold.setStatus('current')
cienaCesModuleSensorLowTempThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSensorLowTempThreshold.setStatus('current')
cienaCesModuleSensorNotifIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cienaCesModuleSensorNotifIndx.setStatus('current')
cienaCesGlobalSwState = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("idle", 1), ("downloading", 2), ("installing", 3), ("activating", 4), ("validating", 5), ("reverting", 6), ("running", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesGlobalSwState.setStatus('current')
cienaCesModuleSwTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2), )
if mibBuilder.loadTexts: cienaCesModuleSwTable.setStatus('current')
cienaCesModuleSwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1), ).setIndexNames((0, "CIENA-CES-MODULE-MIB", "cienaCesModuleChassisIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleShelfIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleSlotIndx"))
if mibBuilder.loadTexts: cienaCesModuleSwEntry.setStatus('current')
cienaCesModuleSwState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 1), SwModuleState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwState.setStatus('current')
cienaCesModuleSwRunningRelease = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwRunningRelease.setStatus('current')
cienaCesModuleSwRunningReleasePartition = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwRunningReleasePartition.setStatus('current')
cienaCesModuleSwReleasePartition0Pkg = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwReleasePartition0Pkg.setStatus('current')
cienaCesModuleSwReleasePartition0PkgStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 5), SwPkgStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwReleasePartition0PkgStatus.setStatus('current')
cienaCesModuleSwReleasePartition1Pkg = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwReleasePartition1Pkg.setStatus('current')
cienaCesModuleSwReleasePartition1PkgStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 7), SwPkgStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwReleasePartition1PkgStatus.setStatus('current')
cienaCesModuleSwReleasePartition2Pkg = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwReleasePartition2Pkg.setStatus('current')
cienaCesModuleSwReleasePartition2PkgStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 9), SwPkgStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwReleasePartition2PkgStatus.setStatus('current')
cienaCesModuleSwBank0KernelVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwBank0KernelVersion.setStatus('current')
cienaCesModuleSwBank0KernelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 11), SwPkgStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwBank0KernelStatus.setStatus('current')
cienaCesModuleSwBank1KernelVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwBank1KernelVersion.setStatus('current')
cienaCesModuleSwBank1KernelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 13), SwPkgStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwBank1KernelStatus.setStatus('current')
cienaCesModuleSwBank0UbootVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwBank0UbootVersion.setStatus('current')
cienaCesModuleSwBank0UbootStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 15), SwPkgStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwBank0UbootStatus.setStatus('current')
cienaCesModuleSwBank1UbootVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwBank1UbootVersion.setStatus('current')
cienaCesModuleSwBank1UbootStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 17), SwPkgStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwBank1UbootStatus.setStatus('current')
cienaCesModuleSwUbootGoldVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwUbootGoldVersion.setStatus('current')
cienaCesModuleSwUbootGoldStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 19), SwPkgStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwUbootGoldStatus.setStatus('current')
cienaCesModuleSwMIBVer = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 4, 2, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleSwMIBVer.setStatus('current')
cienaCesModulePOSTErrorTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 5), )
if mibBuilder.loadTexts: cienaCesModulePOSTErrorTable.setStatus('current')
cienaCesModulePOSTErrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 5, 1), ).setIndexNames((0, "CIENA-CES-MODULE-MIB", "cienaCesModuleChassisIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleShelfIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleSlotIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModulePOSTErrorIndex"))
if mibBuilder.loadTexts: cienaCesModulePOSTErrorEntry.setStatus('current')
cienaCesModulePOSTErrorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: cienaCesModulePOSTErrorIndex.setStatus('current')
cienaCesModulePOSTErrorDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 5, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModulePOSTErrorDescription.setStatus('current')
cienaCesModulePOSTErrorSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("fatal", 1), ("severe", 2), ("warning", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModulePOSTErrorSeverity.setStatus('current')
cienaCesModulePOSTErrorScope = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("chassis", 1), ("blade", 2), ("port", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModulePOSTErrorScope.setStatus('current')
cienaCesModulePOSTScopeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModulePOSTScopeIndex.setStatus('current')
cienaCesModuleSystemProtectionMode = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unprotected", 1), ("cold", 2), ("warm", 3), ("hot", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cienaCesModuleSystemProtectionMode.setStatus('current')
cienaCesModuleSwitchOverReason = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("coldFailOver", 1), ("coldSwitchOver", 2), ("hotSwitchOver", 3), ("hotFailOver", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cienaCesModuleSwitchOverReason.setStatus('current')
cienaCesModuleNotifTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 3, 3), )
if mibBuilder.loadTexts: cienaCesModuleNotifTable.setStatus('current')
cienaCesModuleNotifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 3, 3, 1), ).setIndexNames((0, "CIENA-CES-MODULE-MIB", "cienaCesModuleChassisIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleShelfIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleSlotIndx"))
if mibBuilder.loadTexts: cienaCesModuleNotifEntry.setStatus('current')
cienaCesModuleHealthCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 3, 3, 1, 1), TceHealthCategory()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cienaCesModuleHealthCategory.setStatus('current')
cienaCesModuleHealthSubCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 3, 3, 1, 2), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cienaCesModuleHealthSubCategory.setStatus('current')
cienaCesModuleHealthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 3, 3, 1, 3), TceHealthStatus()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cienaCesModuleHealthStatus.setStatus('current')
cienaCesModuleHealthStatusLast = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 3, 3, 1, 4), TceHealthStatus()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cienaCesModuleHealthStatusLast.setStatus('current')
cienaCesModuleHealthOriginType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 3, 3, 1, 5), HealthOriginType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cienaCesModuleHealthOriginType.setStatus('current')
cienaCesModuleHealthOriginName = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 3, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cienaCesModuleHealthOriginName.setStatus('current')
cienaCesModuleHealthOriginUnitId = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 3, 3, 1, 7), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cienaCesModuleHealthOriginUnitId.setStatus('current')
cienaCesModuleResourceHealthTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 6), )
if mibBuilder.loadTexts: cienaCesModuleResourceHealthTable.setStatus('current')
cienaCesModuleResourceHealthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 6, 1), ).setIndexNames((0, "CIENA-CES-MODULE-MIB", "cienaCesModuleResourceHealthSubCategory"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleChassisIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleShelfIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleSlotIndx"), (0, "CIENA-CES-MODULE-MIB", "cienaCesModuleResourceDeviceIndx"))
if mibBuilder.loadTexts: cienaCesModuleResourceHealthEntry.setStatus('current')
cienaCesModuleResourceHealthSubCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34))).clone(namedValues=NamedValues(("none", 0), ("subPort", 1), ("qosFlow", 2), ("accessFlow", 3), ("queueGroupInstance", 4), ("schedulerInstance", 5), ("pbtTransit", 6), ("pltfmTokenBucket", 7), ("pltfmEgressTunnel", 8), ("pltfmVirtTcamEntries", 9), ("pltfmAclTcamEntries", 10), ("pltfmVOQ", 11), ("pltfmCLScheduler", 12), ("pltfmFQScheduler", 13), ("pltfmEgressShapingCIR", 14), ("pltfmBscp", 15), ("pltfmHighRateTokenBucket", 16), ("pltfmLowRateTokenBucket", 17), ("pltfmParentMeter", 18), ("pltfmChildMeter", 19), ("pltfmL2UserTypes", 20), ("logicalInterfaces", 21), ("pltfmLmPowerBudget", 22), ("pltfmPpIngressL2Xform", 23), ("pltfmPpEgressL2Xform", 24), ("pltfmPpInternalTcam", 25), ("pltfmNpMaintPoint", 26), ("pltfmNpMaintPointSession", 27), ("pltfmNpFastTimer300Hz", 28), ("pltfmNpFastTimer10msec", 29), ("pltfmNpFastTimer100msec", 30), ("pltfmNpFastTimer1sec", 31), ("pltfmNpSlowTimer", 32), ("pltfmNpWatchdogTimer", 33), ("pltfmNpProtectionGroup", 34))))
if mibBuilder.loadTexts: cienaCesModuleResourceHealthSubCategory.setStatus('current')
cienaCesModuleResourceDeviceIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 6, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cienaCesModuleResourceDeviceIndx.setStatus('current')
cienaCesModuleResourceHealthState = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 6, 1, 3), TceHealthStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleResourceHealthState.setStatus('current')
cienaCesModuleResourceHealthCurrMeasurement = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 6, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleResourceHealthCurrMeasurement.setStatus('current')
cienaCesModuleResourceHealthMaxMeasurement = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 6, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleResourceHealthMaxMeasurement.setStatus('current')
cienaCesModuleResourceHealthMaxThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 1, 2, 6, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesModuleResourceHealthMaxThreshold.setStatus('current')
cienaCesModuleStateChangeNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 1)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleChassisNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleShelfNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSlotNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleAdminState"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleOperState"))
if mibBuilder.loadTexts: cienaCesModuleStateChangeNotification.setStatus('current')
cienaCesModuleHealthStatusUnknownNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 2)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleChassisNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleShelfNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSlotNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthOriginType"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthOriginName"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthOriginUnitId"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthCategory"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthSubCategory"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthStatus"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthStatusLast"))
if mibBuilder.loadTexts: cienaCesModuleHealthStatusUnknownNotification.setStatus('current')
cienaCesModuleHealthStatusWarningNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 3)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleChassisNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleShelfNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSlotNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthOriginType"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthOriginName"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthOriginUnitId"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthCategory"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthSubCategory"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthStatus"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthStatusLast"))
if mibBuilder.loadTexts: cienaCesModuleHealthStatusWarningNotification.setStatus('current')
cienaCesModuleHealthStatusFaultedNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 4)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleChassisNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleShelfNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSlotNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthOriginType"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthOriginName"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthOriginUnitId"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthCategory"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthSubCategory"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthStatus"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthStatusLast"))
if mibBuilder.loadTexts: cienaCesModuleHealthStatusFaultedNotification.setStatus('current')
cienaCesModuleHealthStatusDegradedNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 5)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleChassisNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleShelfNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSlotNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthOriginType"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthOriginName"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthOriginUnitId"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthCategory"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthSubCategory"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthStatus"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthStatusLast"))
if mibBuilder.loadTexts: cienaCesModuleHealthStatusDegradedNotification.setStatus('current')
cienaCesModuleHealthStatusGoodNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 6)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleChassisNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleShelfNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSlotNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthOriginType"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthOriginName"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthOriginUnitId"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthCategory"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthSubCategory"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthStatus"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthStatusLast"))
if mibBuilder.loadTexts: cienaCesModuleHealthStatusGoodNotification.setStatus('current')
cienaCesModuleSensorHighTempNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 7)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleChassisNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleShelfNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSlotNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorDescription"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorCurrentTemp"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorHighTempThreshold"))
if mibBuilder.loadTexts: cienaCesModuleSensorHighTempNotification.setStatus('current')
cienaCesModuleSensorNormalTempNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 9)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleChassisNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleShelfNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSlotNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorDescription"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorCurrentTemp"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorLowTemp"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorHighTemp"))
if mibBuilder.loadTexts: cienaCesModuleSensorNormalTempNotification.setStatus('current')
cienaCesModuleSensorLowTempNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 8)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleChassisNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleShelfNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSlotNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorDescription"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorCurrentTemp"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorLowTempThreshold"))
if mibBuilder.loadTexts: cienaCesModuleSensorLowTempNotification.setStatus('current')
cienaCesModuleHASwitchOverNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 10)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleChassisNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleShelfNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSlotNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSwitchOverReason"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleAdminState"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleOperState"))
if mibBuilder.loadTexts: cienaCesModuleHASwitchOverNotification.setStatus('current')
cienaCesModuleProtectionModeColdNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 11)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSystemProtectionMode"))
if mibBuilder.loadTexts: cienaCesModuleProtectionModeColdNotification.setStatus('current')
cienaCesModuleProtectionModeWarmNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 12)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSystemProtectionMode"))
if mibBuilder.loadTexts: cienaCesModuleProtectionModeWarmNotification.setStatus('current')
cienaCesModuleProtectionModeUnprotectedNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 13)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSystemProtectionMode"))
if mibBuilder.loadTexts: cienaCesModuleProtectionModeUnprotectedNotification.setStatus('current')
cienaCesModuleProtectionModeHotNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 14)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSystemProtectionMode"))
if mibBuilder.loadTexts: cienaCesModuleProtectionModeHotNotification.setStatus('current')
cienaCesModulePostErrorNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 15)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleChassisNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleShelfNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSlotNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModulePOSTErrorDescription"))
if mibBuilder.loadTexts: cienaCesModulePostErrorNotification.setStatus('current')
cienaCesModuleFastReloadUnsuccessfulNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 16)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleChassisNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleShelfNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSlotNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleAdminState"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleOperState"))
if mibBuilder.loadTexts: cienaCesModuleFastReloadUnsuccessfulNotification.setStatus('current')
cienaCesModuleHitlessModeUnsuccessfulNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 17)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleChassisNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleShelfNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSlotNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleAdminState"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleOperState"))
if mibBuilder.loadTexts: cienaCesModuleHitlessModeUnsuccessfulNotification.setStatus('current')
cienaCesModuleSwitchFabricDisruptedUnrecoverableNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 18)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleChassisNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleShelfNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSlotNotifIndx"))
if mibBuilder.loadTexts: cienaCesModuleSwitchFabricDisruptedUnrecoverableNotification.setStatus('current')
cienaCesModuleSwitchFabricDisruptedRecoverableNotification = NotificationType((1, 3, 6, 1, 4, 1, 1271, 2, 2, 3, 0, 19)).setObjects(("CIENA-GLOBAL-MIB", "cienaGlobalSeverity"), ("CIENA-GLOBAL-MIB", "cienaGlobalMacAddress"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleChassisNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleShelfNotifIndx"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSlotNotifIndx"))
if mibBuilder.loadTexts: cienaCesModuleSwitchFabricDisruptedRecoverableNotification.setStatus('current')
moduleConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 2, 2, 1)).setObjects(("CIENA-CES-MODULE-MIB", "cienaCesModuleModel"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleType"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleDescription"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleAdminState"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleOperState"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleProtectionRole"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleStandbyStatus"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleLastRebootReason"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleAdminPostState"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleOperPostState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    moduleConfigGroup = moduleConfigGroup.setStatus('current')
moduleDescriptionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 2, 2, 2)).setObjects(("CIENA-CES-MODULE-MIB", "cienaCesModuleDescriptionBoardName"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleDescriptionBoardDesc"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleDescriptionTotalNumPorts"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleDescriptionHwVersion"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleDescriptionMfgDate"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleDescriptionBaseMac"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleDescriptionBoardSerialNum"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleDescriptionBoardPartNum"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleDescriptionUpTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    moduleDescriptionGroup = moduleDescriptionGroup.setStatus('current')
moduleSensorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 2, 2, 3)).setObjects(("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorDescription"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorCurrentTemp"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorHighTemp"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorLowTemp"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorHighTempThreshold"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorLowTempThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    moduleSensorGroup = moduleSensorGroup.setStatus('current')
moduleNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 2, 2, 4)).setObjects(("CIENA-CES-MODULE-MIB", "cienaCesModuleStateChangeNotification"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthStatusUnknownNotification"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthStatusWarningNotification"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthStatusFaultedNotification"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthStatusDegradedNotification"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHealthStatusGoodNotification"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorHighTempNotification"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorNormalTempNotification"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSensorLowTempNotification"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHASwitchOverNotification"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleProtectionModeColdNotification"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleProtectionModeWarmNotification"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleProtectionModeUnprotectedNotification"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleProtectionModeHotNotification"), ("CIENA-CES-MODULE-MIB", "cienaCesModulePostErrorNotification"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleFastReloadUnsuccessfulNotification"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleHitlessModeUnsuccessfulNotification"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSwitchFabricDisruptedUnrecoverableNotification"), ("CIENA-CES-MODULE-MIB", "cienaCesModuleSwitchFabricDisruptedRecoverableNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    moduleNotifGroup = moduleNotifGroup.setStatus('current')
modulePostErrorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1271, 2, 1, 2, 2, 2, 5)).setObjects(("CIENA-CES-MODULE-MIB", "cienaCesModulePOSTErrorDescription"), ("CIENA-CES-MODULE-MIB", "cienaCesModulePOSTErrorSeverity"), ("CIENA-CES-MODULE-MIB", "cienaCesModulePOSTErrorScope"), ("CIENA-CES-MODULE-MIB", "cienaCesModulePOSTScopeIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    modulePostErrorGroup = modulePostErrorGroup.setStatus('current')
mibBuilder.exportSymbols("CIENA-CES-MODULE-MIB", cienaCesModuleIDPEthBaseMac=cienaCesModuleIDPEthBaseMac, cienaCesModuleResourceHealthCurrMeasurement=cienaCesModuleResourceHealthCurrMeasurement, cienaCesModuleMIBCompliances=cienaCesModuleMIBCompliances, cienaCesModuleProtectionModeWarmNotification=cienaCesModuleProtectionModeWarmNotification, cienaCesModuleSwBank1KernelStatus=cienaCesModuleSwBank1KernelStatus, modulePostErrorGroup=modulePostErrorGroup, cienaCesModuleSwitchOverReason=cienaCesModuleSwitchOverReason, cienaCesModuleHealthStatusUnknownNotification=cienaCesModuleHealthStatusUnknownNotification, cienaCesModuleHealthOriginType=cienaCesModuleHealthOriginType, cienaCesModuleSwBank1KernelVersion=cienaCesModuleSwBank1KernelVersion, cienaCesModuleTrapState=cienaCesModuleTrapState, cienaCesModuleResourceHealthMaxMeasurement=cienaCesModuleResourceHealthMaxMeasurement, cienaCesModuleStandbyStatus=cienaCesModuleStandbyStatus, cienaCesModuleNotifAttrs=cienaCesModuleNotifAttrs, cienaCesModuleIDPTable=cienaCesModuleIDPTable, cienaCesModuleIDPEthBaseMacRange=cienaCesModuleIDPEthBaseMacRange, cienaCesModuleSensorNotifIndx=cienaCesModuleSensorNotifIndx, cienaCesModuleHealthSubCategory=cienaCesModuleHealthSubCategory, cienaCesModuleTable=cienaCesModuleTable, cienaCesModuleProtectionModeHotNotification=cienaCesModuleProtectionModeHotNotification, cienaCesModuleIDPModuleSerialNumber=cienaCesModuleIDPModuleSerialNumber, cienaCesModuleDescriptionTable=cienaCesModuleDescriptionTable, cienaCesModuleHASwitchOverNotification=cienaCesModuleHASwitchOverNotification, cienaCesModule=cienaCesModule, cienaCesModuleProtectionModeColdNotification=cienaCesModuleProtectionModeColdNotification, cienaCesModuleIDPModelRevision=cienaCesModuleIDPModelRevision, cienaCesModuleSwReleasePartition2PkgStatus=cienaCesModuleSwReleasePartition2PkgStatus, cienaCesModuleChassisIndx=cienaCesModuleChassisIndx, cienaCesModuleSensorCurrentTemp=cienaCesModuleSensorCurrentTemp, cienaCesModuleHealthOriginName=cienaCesModuleHealthOriginName, cienaCesModuleNotifEntry=cienaCesModuleNotifEntry, cienaCesModuleDescription=cienaCesModuleDescription, cienaCesModuleSwTable=cienaCesModuleSwTable, cienaCesModuleIDPMfgDate=cienaCesModuleIDPMfgDate, cienaCesSwModule=cienaCesSwModule, cienaCesModuleResourceHealthTable=cienaCesModuleResourceHealthTable, cienaCesModuleDescriptionMfgDate=cienaCesModuleDescriptionMfgDate, cienaCesModuleTempSensorTable=cienaCesModuleTempSensorTable, cienaCesModulePOSTErrorEntry=cienaCesModulePOSTErrorEntry, cienaCesModuleDescriptionBoardName=cienaCesModuleDescriptionBoardName, moduleConfigGroup=moduleConfigGroup, cienaCesModuleHealthStatusLast=cienaCesModuleHealthStatusLast, cienaCesModuleSwBank1UbootVersion=cienaCesModuleSwBank1UbootVersion, cienaCesModuleSwState=cienaCesModuleSwState, cienaCesModuleChassisNotifIndx=cienaCesModuleChassisNotifIndx, cienaCesModuleSensorHighTemp=cienaCesModuleSensorHighTemp, cienaCesModuleType=cienaCesModuleType, cienaCesModuleDescriptionBoardDesc=cienaCesModuleDescriptionBoardDesc, cienaCesModuleSwUbootGoldVersion=cienaCesModuleSwUbootGoldVersion, cienaCesModuleSwEntry=cienaCesModuleSwEntry, cienaCesModuleProtectionModeUnprotectedNotification=cienaCesModuleProtectionModeUnprotectedNotification, cienaCesModuleSystemProtectionMode=cienaCesModuleSystemProtectionMode, cienaCesModuleDescriptionHwVersion=cienaCesModuleDescriptionHwVersion, cienaCesModuleSwitchFabricDisruptedRecoverableNotification=cienaCesModuleSwitchFabricDisruptedRecoverableNotification, cienaCesModuleIDPBarcode=cienaCesModuleIDPBarcode, cienaCesModulePOSTErrorTable=cienaCesModulePOSTErrorTable, cienaCesModuleProtectionRole=cienaCesModuleProtectionRole, cienaCesModuleSwBank1UbootStatus=cienaCesModuleSwBank1UbootStatus, cienaCesModuleHealthStatus=cienaCesModuleHealthStatus, cienaCesModuleHitlessModeUnsuccessfulNotification=cienaCesModuleHitlessModeUnsuccessfulNotification, cienaCesModuleGlobal=cienaCesModuleGlobal, TceHealthStatus=TceHealthStatus, cienaCesModuleHealthOriginUnitId=cienaCesModuleHealthOriginUnitId, cienaCesModulePOSTErrorIndex=cienaCesModulePOSTErrorIndex, cienaCesModuleSlotIndx=cienaCesModuleSlotIndx, cienaCesModulePOSTErrorDescription=cienaCesModulePOSTErrorDescription, cienaCesModuleMIBGroups=cienaCesModuleMIBGroups, PYSNMP_MODULE_ID=cienaCesModuleMIB, cienaCesModuleNotifTable=cienaCesModuleNotifTable, cienaCesModuleSwBank0UbootVersion=cienaCesModuleSwBank0UbootVersion, cienaCesModuleSensorHighTempNotification=cienaCesModuleSensorHighTempNotification, cienaCesModuleSensorLowTemp=cienaCesModuleSensorLowTemp, cienaCesModuleTempSensorEntry=cienaCesModuleTempSensorEntry, cienaCesModuleSensorLowTempThreshold=cienaCesModuleSensorLowTempThreshold, cienaCesModuleSwRunningReleasePartition=cienaCesModuleSwRunningReleasePartition, cienaCesModuleMIBNotifications=cienaCesModuleMIBNotifications, cienaCesModuleSwitchFabricDisruptedUnrecoverableNotification=cienaCesModuleSwitchFabricDisruptedUnrecoverableNotification, cienaCesModuleIDPSWCompat=cienaCesModuleIDPSWCompat, cienaCesModuleResourceDeviceIndx=cienaCesModuleResourceDeviceIndx, cienaCesModuleSwReleasePartition0PkgStatus=cienaCesModuleSwReleasePartition0PkgStatus, HealthOriginType=HealthOriginType, cienaCesModuleIDPFTC=cienaCesModuleIDPFTC, cienaCesModuleSwReleasePartition0Pkg=cienaCesModuleSwReleasePartition0Pkg, cienaCesModuleGlobalPostState=cienaCesModuleGlobalPostState, cienaCesGlobalSwState=cienaCesGlobalSwState, cienaCesModuleDescriptionEntry=cienaCesModuleDescriptionEntry, cienaCesModuleAdminPostState=cienaCesModuleAdminPostState, cienaCesModuleEntry=cienaCesModuleEntry, SwModuleState=SwModuleState, cienaCesModuleSensorHighTempThreshold=cienaCesModuleSensorHighTempThreshold, cienaCesModuleSwReleasePartition1PkgStatus=cienaCesModuleSwReleasePartition1PkgStatus, cienaCesModuleMIB=cienaCesModuleMIB, moduleNotifGroup=moduleNotifGroup, cienaCesModuleLastRebootReason=cienaCesModuleLastRebootReason, cienaCesModuleSlotName=cienaCesModuleSlotName, SwPkgStatus=SwPkgStatus, cienaCesModuleIDPProductID=cienaCesModuleIDPProductID, cienaCesModuleSwUbootGoldStatus=cienaCesModuleSwUbootGoldStatus, cienaCesModuleSwRunningRelease=cienaCesModuleSwRunningRelease, cienaCesModuleDescriptionBoardSerialNum=cienaCesModuleDescriptionBoardSerialNum, cienaCesModuleSwBank0KernelVersion=cienaCesModuleSwBank0KernelVersion, cienaCesModuleDescriptionUpTime=cienaCesModuleDescriptionUpTime, cienaCesModulePOSTScopeIndex=cienaCesModulePOSTScopeIndex, cienaCesModuleSensorNormalTempNotification=cienaCesModuleSensorNormalTempNotification, cienaCesModuleModel=cienaCesModuleModel, cienaCesModuleSensorDescription=cienaCesModuleSensorDescription, cienaCesModuleOperState=cienaCesModuleOperState, cienaCesModuleStateChangeNotification=cienaCesModuleStateChangeNotification, cienaCesModuleIDPModelPartNumber=cienaCesModuleIDPModelPartNumber, cienaCesModuleFastReloadUnsuccessfulNotification=cienaCesModuleFastReloadUnsuccessfulNotification, cienaCesModuleConformance=cienaCesModuleConformance, cienaCesModulePOSTErrorScope=cienaCesModulePOSTErrorScope, cienaCesModuleDescriptionTotalNumPorts=cienaCesModuleDescriptionTotalNumPorts, cienaCesModuleResourceHealthMaxThreshold=cienaCesModuleResourceHealthMaxThreshold, cienaCesModuleIDPCleiCode=cienaCesModuleIDPCleiCode, cienaCesModuleSwMIBVer=cienaCesModuleSwMIBVer, cienaCesModuleResourceHealthEntry=cienaCesModuleResourceHealthEntry, cienaCesModuleHealthStatusWarningNotification=cienaCesModuleHealthStatusWarningNotification, cienaCesModuleHealthStatusGoodNotification=cienaCesModuleHealthStatusGoodNotification, cienaCesModuleShelfIndx=cienaCesModuleShelfIndx, cienaCesModuleSensorIndx=cienaCesModuleSensorIndx, cienaCesModulePostErrorNotification=cienaCesModulePostErrorNotification, cienaCesModuleSwReleasePartition1Pkg=cienaCesModuleSwReleasePartition1Pkg, cienaCesModulePOSTErrorSeverity=cienaCesModulePOSTErrorSeverity, cienaCesModuleDescriptionBoardPartNum=cienaCesModuleDescriptionBoardPartNum, cienaCesModuleHealthStatusDegradedNotification=cienaCesModuleHealthStatusDegradedNotification, cienaCesModuleShelfNotifIndx=cienaCesModuleShelfNotifIndx, cienaCesModuleResourceHealthSubCategory=cienaCesModuleResourceHealthSubCategory, moduleDescriptionGroup=moduleDescriptionGroup, cienaCesModuleMIBObjects=cienaCesModuleMIBObjects, cienaCesModuleResourceHealthState=cienaCesModuleResourceHealthState, cienaCesModuleMIBNotificationPrefix=cienaCesModuleMIBNotificationPrefix, cienaCesModuleHealthStatusFaultedNotification=cienaCesModuleHealthStatusFaultedNotification, cienaCesModuleSwReleasePartition2Pkg=cienaCesModuleSwReleasePartition2Pkg, cienaCesModuleSwBank0UbootStatus=cienaCesModuleSwBank0UbootStatus, cienaCesModuleSensorLowTempNotification=cienaCesModuleSensorLowTempNotification, cienaCesModuleSwBank0KernelStatus=cienaCesModuleSwBank0KernelStatus, cienaCesModuleOperPostState=cienaCesModuleOperPostState, cienaCesModuleAdminState=cienaCesModuleAdminState, cienaCesModuleDescriptionBaseMac=cienaCesModuleDescriptionBaseMac, cienaCesModuleSlotNotifIndx=cienaCesModuleSlotNotifIndx, cienaCesModuleIDPEntry=cienaCesModuleIDPEntry, moduleSensorGroup=moduleSensorGroup, cienaCesModuleHealthCategory=cienaCesModuleHealthCategory, TceHealthCategory=TceHealthCategory)
