#
# PySNMP MIB module CADANT-OSPF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CADANT-OSPF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:28:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
cadLayer3, = mibBuilder.importSymbols("CADANT-PRODUCTS-MIB", "cadLayer3")
cadVrIndex, = mibBuilder.importSymbols("CADANT-VIRTUAL-ROUTER-MIB", "cadVrIndex")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
TOSType, HelloRange, Status, AreaID, DesignatedRouterPriority, Metric, BigMetric, UpToMaxAge, RouterID, PositiveInteger = mibBuilder.importSymbols("OSPF-MIB", "TOSType", "HelloRange", "Status", "AreaID", "DesignatedRouterPriority", "Metric", "BigMetric", "UpToMaxAge", "RouterID", "PositiveInteger")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
TimeTicks, Counter64, ObjectIdentity, Unsigned32, Counter32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ModuleIdentity, Bits, NotificationType, iso, Integer32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "ObjectIdentity", "Unsigned32", "Counter32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ModuleIdentity", "Bits", "NotificationType", "iso", "Integer32", "MibIdentifier")
TextualConvention, TruthValue, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString", "RowStatus")
cadOspf = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 5))
cadOspf.setRevisions(('2003-03-01 00:00', '2003-06-25 00:00', '2004-02-13 00:00', '2004-04-12 00:00', '2004-06-30 00:00', '2004-11-18 00:00',))
if mibBuilder.loadTexts: cadOspf.setLastUpdated('200411180000Z')
if mibBuilder.loadTexts: cadOspf.setOrganization('Arris International')
cadOspfRouteGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 5, 13))
cadOspfIntraArea = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 5, 13, 1))
cadOspfInterArea = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 5, 13, 2))
cadOspfExternalType1 = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 5, 13, 3))
cadOspfExternalType2 = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 5, 13, 4))
cadOspfNetworkEnableTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 5, 20), )
if mibBuilder.loadTexts: cadOspfNetworkEnableTable.setStatus('current')
cadOspfNetworkEnableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 5, 20, 1), ).setIndexNames((0, "CADANT-VIRTUAL-ROUTER-MIB", "cadVrIndex"), (0, "CADANT-OSPF-MIB", "cadOspfNetworkEnableIpaddress"), (0, "CADANT-OSPF-MIB", "cadOspfNetworkEnableWildcard"))
if mibBuilder.loadTexts: cadOspfNetworkEnableEntry.setStatus('current')
cadOspfNetworkEnableIpaddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 5, 20, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadOspfNetworkEnableIpaddress.setStatus('current')
cadOspfNetworkEnableWildcard = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 5, 20, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadOspfNetworkEnableWildcard.setStatus('current')
cadOspfNetworkEnableAreaId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 5, 20, 1, 3), AreaID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadOspfNetworkEnableAreaId.setStatus('current')
cadOspfNetworkEnableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 5, 20, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cadOspfNetworkEnableRowStatus.setStatus('current')
cadOspfConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 5, 15))
cadOspfGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 5, 15, 1))
cadOspfCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4998, 1, 1, 25, 5, 15, 2))
mibBuilder.exportSymbols("CADANT-OSPF-MIB", cadOspfGroups=cadOspfGroups, cadOspfNetworkEnableWildcard=cadOspfNetworkEnableWildcard, cadOspfInterArea=cadOspfInterArea, PYSNMP_MODULE_ID=cadOspf, cadOspfNetworkEnableIpaddress=cadOspfNetworkEnableIpaddress, cadOspfNetworkEnableRowStatus=cadOspfNetworkEnableRowStatus, cadOspfExternalType1=cadOspfExternalType1, cadOspfNetworkEnableAreaId=cadOspfNetworkEnableAreaId, cadOspfRouteGroup=cadOspfRouteGroup, cadOspfCompliances=cadOspfCompliances, cadOspfExternalType2=cadOspfExternalType2, cadOspfNetworkEnableTable=cadOspfNetworkEnableTable, cadOspfNetworkEnableEntry=cadOspfNetworkEnableEntry, cadOspf=cadOspf, cadOspfConformance=cadOspfConformance, cadOspfIntraArea=cadOspfIntraArea)
