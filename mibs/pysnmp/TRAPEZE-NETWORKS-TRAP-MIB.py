#
# PySNMP MIB module TRAPEZE-NETWORKS-TRAP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TRAPEZE-NETWORKS-TRAP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:20:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
InetAddressIPv4, InetAddressIPv6, InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv4", "InetAddressIPv6", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Counter32, ObjectIdentity, Bits, Integer32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, ModuleIdentity, iso, TimeTicks, Gauge32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter32", "ObjectIdentity", "Bits", "Integer32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "ModuleIdentity", "iso", "TimeTicks", "Gauge32", "IpAddress")
DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention")
TrpzRadioMode, TrpzApServiceAvailability, TrpzRadioConfigState, TrpzRadioMimoState, TrpzApPortOrDapNum, TrpzRssi, TrpzCryptoType, TrpzRadioChannelWidth, TrpzApRadioIndex, TrpzApConnectSecurityType, TrpzApWasOperational, TrpzAccessType, TrpzChannelChangeType, TrpzApFingerprint, TrpzApAttachType, TrpzApFailDetail, TrpzPowerLevel, TrpzApSerialNum, TrpzChannelNum, TrpzRadioNum, TrpzApTransition, TrpzRadioPowerChangeType, TrpzRadioType, TrpzApNum = mibBuilder.importSymbols("TRAPEZE-NETWORKS-AP-TC", "TrpzRadioMode", "TrpzApServiceAvailability", "TrpzRadioConfigState", "TrpzRadioMimoState", "TrpzApPortOrDapNum", "TrpzRssi", "TrpzCryptoType", "TrpzRadioChannelWidth", "TrpzApRadioIndex", "TrpzApConnectSecurityType", "TrpzApWasOperational", "TrpzAccessType", "TrpzChannelChangeType", "TrpzApFingerprint", "TrpzApAttachType", "TrpzApFailDetail", "TrpzPowerLevel", "TrpzApSerialNum", "TrpzChannelNum", "TrpzRadioNum", "TrpzApTransition", "TrpzRadioPowerChangeType", "TrpzRadioType", "TrpzApNum")
TrpzPhysPortNumberOrZero, TrpzIpPort = mibBuilder.importSymbols("TRAPEZE-NETWORKS-BASIC-TC", "TrpzPhysPortNumberOrZero", "TrpzIpPort")
TrpzClientDeviceProfileName, TrpzClientAccessMode, TrpzClientDeviceGroupName, TrpzClientDot1xState, TrpzUserAccessType, TrpzClientSessionState, TrpzClientAuthenProtocolType, TrpzClientDeviceType = mibBuilder.importSymbols("TRAPEZE-NETWORKS-CLIENT-SESSION-TC", "TrpzClientDeviceProfileName", "TrpzClientAccessMode", "TrpzClientDeviceGroupName", "TrpzClientDot1xState", "TrpzUserAccessType", "TrpzClientSessionState", "TrpzClientAuthenProtocolType", "TrpzClientDeviceType")
TrpzRFDetectClassificationReason, = mibBuilder.importSymbols("TRAPEZE-NETWORKS-RF-DETECT-TC", "TrpzRFDetectClassificationReason")
TrpzRFNoiseSourceType, TrpzRFNoiseSourceID = mibBuilder.importSymbols("TRAPEZE-NETWORKS-RF-NOISE-TC-MIB", "TrpzRFNoiseSourceType", "TrpzRFNoiseSourceID")
trpzTemporary, trpzMibs, trpzTraps = mibBuilder.importSymbols("TRAPEZE-NETWORKS-ROOT-MIB", "trpzTemporary", "trpzMibs", "trpzTraps")
trpzTrapMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 14525, 4, 1))
trpzTrapMib.setRevisions(('2012-07-31 04:06', '2012-04-20 04:05', '2012-04-09 04:03', '2012-03-15 03:10', '2011-10-18 03:00', '2011-01-11 02:50', '2010-12-21 02:40', '2010-12-21 02:28', '2008-12-19 02:27', '2008-10-30 02:25', '2008-05-15 02:15', '2008-05-07 02:12', '2008-04-22 02:02', '2008-04-10 02:01', '2008-04-08 01:58', '2008-02-18 01:57', '2007-12-03 01:53', '2007-11-15 01:52', '2007-11-01 01:45', '2007-10-01 01:41', '2007-08-31 01:40', '2007-08-24 01:22', '2007-07-06 01:10', '2007-06-05 01:07', '2007-05-17 01:06', '2007-05-04 01:03', '2007-04-19 01:00', '2007-03-27 00:54', '2007-02-15 00:53', '2007-01-09 00:52', '2007-01-09 00:51', '2007-01-09 00:50', '2006-09-28 00:45', '2006-08-08 00:42', '2006-07-31 00:40', '2006-07-28 00:32', '2006-07-23 00:29', '2006-07-12 00:28', '2006-07-07 00:26', '2006-07-07 00:25', '2006-07-06 00:23', '2006-04-19 00:22', '2006-04-19 00:21', '2005-01-01 00:00',))
if mibBuilder.loadTexts: trpzTrapMib.setLastUpdated('201207310406Z')
if mibBuilder.loadTexts: trpzTrapMib.setOrganization('Trapeze Networks')
trpzTrapsV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 14525, 5, 0))
class TrpzAssociationFailureType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))
    namedValues = NamedValues(("other", 1), ("load-balance", 2), ("quiet-period", 3), ("dot1x", 4), ("no-prev-assoc", 5), ("glare", 6), ("cipher-rejected", 7), ("cipher-mismatch", 8), ("wep-not-configured", 9), ("bad-assoc-request", 10), ("out-of-memory", 11), ("tkip-cm-active", 12), ("roam-in-progress", 13))

class TrpzAuthenticationFailureType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
    namedValues = NamedValues(("other", 1), ("user-glob-mismatch", 2), ("user-does-not-exist", 3), ("invalid-password", 4), ("server-timeout", 5), ("signature-failed", 6), ("local-certificate-error", 7), ("all-servers-down", 8), ("authentication-type-mismatch", 9), ("server-rejected", 10), ("fallthru-auth-misconfig", 11), ("no-lastresort-auth", 12), ("exceeded-max-attempts", 13), ("password-expired", 14))

class TrpzAuthorizationFailureType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))
    namedValues = NamedValues(("other", 1), ("user-param", 2), ("location-policy", 3), ("vlan-tunnel-failure", 4), ("ssid-mismatch", 5), ("acl-mismatch", 6), ("timeofday-mismatch", 7), ("crypto-type-mismatch", 8), ("mobility-profile-mismatch", 9), ("start-date-mismatch", 10), ("end-date-mismatch", 11), ("svr-type-mismatch", 12), ("ssid-defaults", 13), ("qos-profile-mismatch", 14), ("simultaneous-logins", 15))

class TrpzDot1xFailureType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))
    namedValues = NamedValues(("other", 1), ("quiet-period", 2), ("administrative-kill", 3), ("bad-rsnie", 4), ("timeout", 5), ("max-sessions-exceeded", 6), ("fourway-hs-failure", 7), ("user-glob-mismatch", 8), ("bonded-auth-failure", 9), ("reauth-disabled", 10), ("gkhs-failure", 11), ("force-unauth-configured", 12), ("cert-not-installed", 13))

class TrpzRFDetectDoSType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))
    namedValues = NamedValues(("probe-flood", 1), ("auth-flood", 2), ("null-data-flood", 3), ("mgmt-6-flood", 4), ("mgmt-7-flood", 5), ("mgmt-d-flood", 6), ("mgmt-e-flood", 7), ("mgmt-f-flood", 8), ("fakeap-ssid", 9), ("fakeap-bssid", 10), ("bcast-deauth", 11), ("null-probe-resp", 12), ("disassoc-spoof", 13), ("deauth-spoof", 14), ("decrypt-err", 15), ("weak-wep-iv", 16), ("wireless-bridge", 17), ("netstumbler", 18), ("wellenreiter", 19), ("adhoc-client-frame", 20), ("associate-pkt-flood", 21), ("re-associate-pkt-flood", 22), ("de-associate-pkt-flood", 23), ("bssid-spoof", 24))

class TrpzClientIpAddrChangeReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 10))
    namedValues = NamedValues(("client-connected-ipv4", 1), ("other", 2), ("dhcp-to-static", 3), ("ipv6-global-addr", 10))

class TrpzBlacklistingCause(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("bl-configured", 1), ("bl-associate-pkt-flood", 2), ("bl-re-associate-pkt-flood", 3), ("bl-de-associate-pkt-flood", 4))

class TrpzUserAttributeList(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 2048)

class TrpzSessionDisconnectType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("admin-disconnect", 2), ("dyn-auth-disconnect", 3))

class TrpzConfigSaveInitiatorType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("other", 1), ("cli-console", 2), ("cli-remote", 3), ("https", 4), ("snmp-set", 5))

class TrpzMichaelMICFailureCause(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("detected-by-ap", 1), ("detected-by-client", 2))

class TrpzClientAuthorizationReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("other", 1), ("new-client", 2), ("re-auth", 3), ("roam", 4))

class TrpzApMgrChangeReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("failover", 2), ("load-balancing", 3))

class TrpzClientClearedReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("normal", 2), ("backup-failure", 3))

class TrpzMobilityDomainResiliencyStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("resilient", 2), ("degraded", 3))

class TrpzClusterFailureReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("other", 1), ("validation-error", 2))

class TrpzMultimediaSignalingProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("other", 1), ("sip", 2))

class TrpzMultimediaCallFailureReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("other", 1), ("resource-unavailable", 2))

class TrpzMultimediaCallDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("incoming", 1), ("outgoing", 2))

class TrpzWsTunnelLimitType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("platform-tunnel-limit", 2), ("ap-ws-tunnel-limit", 3))

class TrpzM2UConvNotPossibleReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("other", 1), ("max-conv-limit", 2))

class TrpzRadioBand(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("bandAN", 1), ("bandBGN", 2))

class TrpzAutoTuneFailureReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("ap-conn-lost", 2), ("ws-conn-lost", 3))

class TrpzClientDeviceProfileChangeReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("other", 1), ("aaa-policy", 2), ("device-type-changed", 3))

trpzDeviceId = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 1), ObjectIdentifier()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzDeviceId.setStatus('current')
trpzMobilityDomainIp = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 2), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzMobilityDomainIp.setStatus('current')
trpzAPMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 3), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzAPMACAddress.setStatus('current')
trpzClientMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 4), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientMACAddress.setStatus('current')
trpzRFDetectXmtrMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 5), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRFDetectXmtrMacAddr.setStatus('current')
trpzPortNum = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 22))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzPortNum.setStatus('current')
trpzAPRadioNum = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 7), TrpzRadioNum()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzAPRadioNum.setStatus('current')
trpzRadioRssi = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRadioRssi.setStatus('obsolete')
trpzRadioBSSID = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRadioBSSID.setStatus('current')
trpzUserName = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzUserName.setStatus('current')
trpzClientAuthServerIp = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 11), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientAuthServerIp.setStatus('current')
trpzClientSessionState = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 12), TrpzClientSessionState()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientSessionState.setStatus('current')
trpzDAPNum = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzDAPNum.setStatus('current')
trpzClientIp = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 14), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientIp.setStatus('obsolete')
trpzClientSessionId = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientSessionId.setStatus('current')
trpzClientAuthenProtocolType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 16), TrpzClientAuthenProtocolType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientAuthenProtocolType.setStatus('current')
trpzClientVLANName = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientVLANName.setStatus('current')
trpzClientSessionStartTime = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 18), TimeTicks()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientSessionStartTime.setStatus('obsolete')
trpzClientFailureCause = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientFailureCause.setStatus('current')
trpzClientRoamedFromPortNum = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientRoamedFromPortNum.setStatus('obsolete')
trpzClientRoamedFromRadioNum = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 21), TrpzRadioNum()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientRoamedFromRadioNum.setStatus('obsolete')
trpzClientRoamedFromDAPNum = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientRoamedFromDAPNum.setStatus('obsolete')
trpzUserParams = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzUserParams.setStatus('current')
trpzClientLocationPolicyIndex = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientLocationPolicyIndex.setStatus('current')
trpzClientAssociationFailureCause = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 25), TrpzAssociationFailureType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientAssociationFailureCause.setStatus('current')
trpzClientAuthenticationFailureCause = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 26), TrpzAuthenticationFailureType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientAuthenticationFailureCause.setStatus('current')
trpzClientAuthorizationFailureCause = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 27), TrpzAuthorizationFailureType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientAuthorizationFailureCause.setStatus('current')
trpzClientFailureCauseDescription = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientFailureCauseDescription.setStatus('current')
trpzClientRoamedFromWsIp = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 29), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientRoamedFromWsIp.setStatus('obsolete')
trpzClientRoamedFromAccessType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 30), TrpzAccessType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientRoamedFromAccessType.setStatus('obsolete')
trpzClientAccessType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 31), TrpzAccessType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientAccessType.setStatus('current')
trpzRadioMACAddress = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 32), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRadioMACAddress.setStatus('current')
trpzRadioPowerChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 33), TrpzRadioPowerChangeType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRadioPowerChangeReason.setStatus('current')
trpzNewChannelNum = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzNewChannelNum.setStatus('current')
trpzOldChannelNum = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzOldChannelNum.setStatus('current')
trpzChannelChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 36), TrpzChannelChangeType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzChannelChangeReason.setStatus('current')
trpzRFDetectListenerListInfo = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 37), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 571))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRFDetectListenerListInfo.setStatus('current')
trpzRadioSSID = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRadioSSID.setStatus('current')
trpzNewPowerLevel = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 39), TrpzPowerLevel()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzNewPowerLevel.setStatus('current')
trpzOldPowerLevel = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 40), TrpzPowerLevel()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzOldPowerLevel.setStatus('current')
trpzRadioPowerChangeDescription = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRadioPowerChangeDescription.setStatus('current')
trpzCounterMeasurePerformerListInfo = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 42), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzCounterMeasurePerformerListInfo.setStatus('obsolete')
trpzClientDot1xState = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 43), TrpzClientDot1xState()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientDot1xState.setStatus('current')
trpzClientDot1xFailureCause = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 44), TrpzDot1xFailureType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientDot1xFailureCause.setStatus('current')
trpzAPAccessType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 45), TrpzAccessType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzAPAccessType.setStatus('obsolete')
trpzUserAccessType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 46), TrpzUserAccessType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzUserAccessType.setStatus('current')
trpzClientSessionElapsedTime = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 47), TimeTicks()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientSessionElapsedTime.setStatus('obsolete')
trpzLocalId = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65000))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzLocalId.setStatus('current')
trpzRFDetectDoSType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 49), TrpzRFDetectDoSType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRFDetectDoSType.setStatus('current')
trpzSourceWsIp = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 50), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzSourceWsIp.setStatus('current')
trpzClientVLANid = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientVLANid.setStatus('current')
trpzClientVLANtag = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientVLANtag.setStatus('current')
trpzDeviceModel = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 53), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzDeviceModel.setStatus('current')
trpzDeviceSerNum = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 54), TrpzApSerialNum()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzDeviceSerNum.setStatus('current')
trpzRsaPubKeyFingerPrint = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 55), TrpzApFingerprint()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRsaPubKeyFingerPrint.setStatus('current')
trpzDAPconnectWarningType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("not-configured-fingerprint-connect", 1), ("secure-handshake-failure", 2), ("not-configured-fingerprint-required", 3), ("fingerprint-mismatch", 4)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzDAPconnectWarningType.setStatus('current')
trpzClientMACAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 57), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientMACAddress2.setStatus('current')
trpzApAttachType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 58), TrpzApAttachType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzApAttachType.setStatus('current')
trpzApPortOrDapNum = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 59), TrpzApPortOrDapNum()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzApPortOrDapNum.setStatus('obsolete')
trpzApName = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 60), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzApName.setStatus('current')
trpzApTransition = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 61), TrpzApTransition()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzApTransition.setStatus('current')
trpzApFailDetail = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 62), TrpzApFailDetail()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzApFailDetail.setStatus('current')
trpzRadioType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 63), TrpzRadioType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRadioType.setStatus('current')
trpzRadioConfigState = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 64), TrpzRadioConfigState()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRadioConfigState.setStatus('current')
trpzApConnectSecurityType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 65), TrpzApConnectSecurityType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzApConnectSecurityType.setStatus('current')
trpzApServiceAvailability = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 66), TrpzApServiceAvailability()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzApServiceAvailability.setStatus('current')
trpzApWasOperational = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 67), TrpzApWasOperational()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzApWasOperational.setStatus('current')
trpzClientTimeSinceLastRoam = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 68), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientTimeSinceLastRoam.setStatus('current')
trpzClientIpAddrChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 69), TrpzClientIpAddrChangeReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientIpAddrChangeReason.setStatus('current')
trpzRFDetectRogueAPMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 70), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRFDetectRogueAPMacAddr.setStatus('current')
trpzBlacklistingRemainingTime = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 71), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzBlacklistingRemainingTime.setStatus('current')
trpzBlacklistingCause = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 72), TrpzBlacklistingCause()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzBlacklistingCause.setStatus('current')
trpzNumLicensedActiveAPs = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 73), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzNumLicensedActiveAPs.setStatus('current')
trpzClientDynAuthorClientIp = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 74), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientDynAuthorClientIp.setStatus('current')
trpzChangedUserParamOldValues = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 75), TrpzUserAttributeList()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzChangedUserParamOldValues.setStatus('current')
trpzChangedUserParamNewValues = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 76), TrpzUserAttributeList()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzChangedUserParamNewValues.setStatus('current')
trpzClientDisconnectSource = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 77), TrpzSessionDisconnectType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientDisconnectSource.setStatus('current')
trpzClientDisconnectDescription = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 78), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientDisconnectDescription.setStatus('current')
trpzMobilityDomainSecondarySeedIp = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 79), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzMobilityDomainSecondarySeedIp.setStatus('current')
trpzMobilityDomainPrimarySeedIp = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 80), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzMobilityDomainPrimarySeedIp.setStatus('current')
trpzRFDetectClassificationReason = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 81), TrpzRFDetectClassificationReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRFDetectClassificationReason.setStatus('current')
trpzConfigSaveFileName = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 82), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzConfigSaveFileName.setStatus('current')
trpzConfigSaveInitiatorType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 83), TrpzConfigSaveInitiatorType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzConfigSaveInitiatorType.setStatus('current')
trpzConfigSaveInitiatorIp = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 84), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzConfigSaveInitiatorIp.setStatus('current')
trpzConfigSaveInitiatorDetails = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 85), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzConfigSaveInitiatorDetails.setStatus('current')
trpzConfigSaveGeneration = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 86), Counter32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzConfigSaveGeneration.setStatus('current')
trpzApNum = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 87), TrpzApNum()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzApNum.setStatus('current')
trpzRadioMode = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 88), TrpzRadioMode()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRadioMode.setStatus('current')
trpzMichaelMICFailureCause = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 89), TrpzMichaelMICFailureCause()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzMichaelMICFailureCause.setStatus('current')
trpzClientAccessMode = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 90), TrpzClientAccessMode()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientAccessMode.setStatus('current')
trpzClientAuthorizationReason = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 91), TrpzClientAuthorizationReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientAuthorizationReason.setStatus('current')
trpzPhysPortNum = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 92), TrpzPhysPortNumberOrZero()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzPhysPortNum.setStatus('current')
trpzApMgrOldIp = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 93), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzApMgrOldIp.setStatus('current')
trpzApMgrNewIp = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 94), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzApMgrNewIp.setStatus('current')
trpzApMgrChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 95), TrpzApMgrChangeReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzApMgrChangeReason.setStatus('current')
trpzClientClearedReason = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 96), TrpzClientClearedReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientClearedReason.setStatus('current')
trpzMobilityDomainResiliencyStatus = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 97), TrpzMobilityDomainResiliencyStatus()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzMobilityDomainResiliencyStatus.setStatus('current')
trpzClientSessionElapsedSeconds = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 98), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientSessionElapsedSeconds.setStatus('current')
trpzRadioChannelWidth = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 99), TrpzRadioChannelWidth()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRadioChannelWidth.setStatus('current')
trpzRadioMimoState = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 100), TrpzRadioMimoState()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRadioMimoState.setStatus('current')
trpzClientRadioType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 101), TrpzRadioType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientRadioType.setStatus('current')
trpzRFDetectXmtrRadioType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 102), TrpzRadioType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRFDetectXmtrRadioType.setStatus('current')
trpzRFDetectXmtrCryptoType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 103), TrpzCryptoType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRFDetectXmtrCryptoType.setStatus('current')
trpzClusterFailureReason = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 104), TrpzClusterFailureReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClusterFailureReason.setStatus('current')
trpzClusterFailureDescription = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 105), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClusterFailureDescription.setStatus('current')
trpzMultimediaCommunicationServerID = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 106), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzMultimediaCommunicationServerID.setStatus('current')
trpzMultimediaLocalStationIp = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 107), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzMultimediaLocalStationIp.setStatus('current')
trpzMultimediaLocalStationPort = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 108), TrpzIpPort()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzMultimediaLocalStationPort.setStatus('current')
trpzMultimediaLocalStationEndpointID = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 109), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzMultimediaLocalStationEndpointID.setStatus('current')
trpzMultimediaRemoteStationIp = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 110), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzMultimediaRemoteStationIp.setStatus('current')
trpzMultimediaRemoteStationPort = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 111), TrpzIpPort()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzMultimediaRemoteStationPort.setStatus('current')
trpzMultimediaRemoteStationEndpointID = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 112), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzMultimediaRemoteStationEndpointID.setStatus('current')
trpzMultimediaSignalingProtocol = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 113), TrpzMultimediaSignalingProtocol()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzMultimediaSignalingProtocol.setStatus('current')
trpzMultimediaCallBandwidthAndCodec = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 114), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzMultimediaCallBandwidthAndCodec.setStatus('current')
trpzMultimediaCallDataRate = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 115), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzMultimediaCallDataRate.setStatus('current')
trpzMultimediaCallRssi = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 116), TrpzRssi()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzMultimediaCallRssi.setStatus('current')
trpzMultimediaCallFailureReason = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 117), TrpzMultimediaCallFailureReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzMultimediaCallFailureReason.setStatus('current')
trpzMultimediaCallDirection = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 118), TrpzMultimediaCallDirection()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzMultimediaCallDirection.setStatus('current')
trpzApTunnelLimit = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 119), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzApTunnelLimit.setStatus('current')
trpzWsTunnelLimit = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 120), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzWsTunnelLimit.setStatus('current')
trpzWsTunnelLimitType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 121), TrpzWsTunnelLimitType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzWsTunnelLimitType.setStatus('current')
trpzRFNoiseSourceID = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 122), TrpzRFNoiseSourceID()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRFNoiseSourceID.setStatus('current')
trpzRFNoiseSourceType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 123), TrpzRFNoiseSourceType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRFNoiseSourceType.setStatus('current')
trpzRFNoiseChannel = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 124), TrpzChannelNum()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRFNoiseChannel.setStatus('current')
trpzRFNoiseRssi = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 125), TrpzRssi()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRFNoiseRssi.setStatus('current')
trpzRFNoiseDutyCycle = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 126), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRFNoiseDutyCycle.setStatus('current')
trpzRFNoiseChannelInterferenceMeasure = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 127), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRFNoiseChannelInterferenceMeasure.setStatus('current')
trpzRFNoiseAge = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 128), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRFNoiseAge.setStatus('current')
trpzM2UMulticastAddrType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 129), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzM2UMulticastAddrType.setStatus('current')
trpzM2UMulticastAddr = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 130), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzM2UMulticastAddr.setStatus('current')
trpzM2UConvNotPossibleReason = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 131), TrpzM2UConvNotPossibleReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzM2UConvNotPossibleReason.setStatus('current')
trpzRadioBand = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 132), TrpzRadioBand()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRadioBand.setStatus('current')
trpzRadiosTunedCount = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 133), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzRadiosTunedCount.setStatus('current')
trpzAutoTuneFailureReason = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 134), TrpzAutoTuneFailureReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzAutoTuneFailureReason.setStatus('current')
trpzClientAuthServerAddrType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 135), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientAuthServerAddrType.setStatus('current')
trpzClientAuthServerAddr = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 136), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientAuthServerAddr.setStatus('current')
trpzClientRoamedFromWsAddrType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 137), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientRoamedFromWsAddrType.setStatus('current')
trpzClientRoamedFromWsAddr = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 138), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientRoamedFromWsAddr.setStatus('current')
trpzClientDynAuthorClientAddrType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 139), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientDynAuthorClientAddrType.setStatus('current')
trpzClientDynAuthorClientAddr = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 140), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientDynAuthorClientAddr.setStatus('current')
trpzClientIpAddrType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 141), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientIpAddrType.setStatus('current')
trpzClientIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 142), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientIpAddr.setStatus('current')
trpzClientIPv4Addr = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 143), InetAddressIPv4()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientIPv4Addr.setStatus('current')
trpzClientIPv6LinkLocalAddr = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 144), InetAddressIPv6()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientIPv6LinkLocalAddr.setStatus('current')
trpzApRadioIndex = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 145), TrpzApRadioIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzApRadioIndex.setStatus('current')
trpzClientRoamedFromAccessMode = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 146), TrpzClientAccessMode()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientRoamedFromAccessMode.setStatus('current')
trpzClientRoamedFromApNum = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 147), TrpzApNum()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientRoamedFromApNum.setStatus('current')
trpzClientRoamedFromRadioIndex = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 148), TrpzApRadioIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientRoamedFromRadioIndex.setStatus('current')
trpzClientRoamedFromPhysPortNum = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 149), TrpzPhysPortNumberOrZero()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientRoamedFromPhysPortNum.setStatus('current')
trpzClientDeviceType = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 150), TrpzClientDeviceType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientDeviceType.setStatus('current')
trpzClientDeviceTypeOld = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 151), TrpzClientDeviceType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientDeviceTypeOld.setStatus('current')
trpzClientDeviceGroup = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 152), TrpzClientDeviceGroupName()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientDeviceGroup.setStatus('current')
trpzClientDeviceProfileName = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 153), TrpzClientDeviceProfileName()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientDeviceProfileName.setStatus('current')
trpzClientDeviceProfileNameOld = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 154), TrpzClientDeviceProfileName()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientDeviceProfileNameOld.setStatus('current')
trpzClientDeviceProfileChangeReason = MibScalar((1, 3, 6, 1, 4, 1, 14525, 2, 155), TrpzClientDeviceProfileChangeReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trpzClientDeviceProfileChangeReason.setStatus('current')
trpzDeviceFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 1)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDeviceId"))
if mibBuilder.loadTexts: trpzDeviceFailTrap.setStatus('current')
trpzDeviceOkayTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 2)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDeviceId"))
if mibBuilder.loadTexts: trpzDeviceOkayTrap.setStatus('current')
trpzPoEFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 3)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"))
if mibBuilder.loadTexts: trpzPoEFailTrap.setStatus('current')
trpzApTimeoutTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 4)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"))
if mibBuilder.loadTexts: trpzApTimeoutTrap.setStatus('obsolete')
trpzAPBootTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 5)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"))
if mibBuilder.loadTexts: trpzAPBootTrap.setStatus('obsolete')
trpzMobilityDomainJoinTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 6)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMobilityDomainIp"))
if mibBuilder.loadTexts: trpzMobilityDomainJoinTrap.setStatus('current')
trpzMobilityDomainTimeoutTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 7)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMobilityDomainIp"))
if mibBuilder.loadTexts: trpzMobilityDomainTimeoutTrap.setStatus('current')
trpzMpMichaelMICFailure = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 8)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"))
if mibBuilder.loadTexts: trpzMpMichaelMICFailure.setStatus('obsolete')
trpzRFDetectRogueAPTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 9)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectListenerListInfo"))
if mibBuilder.loadTexts: trpzRFDetectRogueAPTrap.setStatus('obsolete')
trpzRFDetectAdhocUserTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 10)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectListenerListInfo"))
if mibBuilder.loadTexts: trpzRFDetectAdhocUserTrap.setStatus('current')
trpzRFDetectRogueDisappearTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 11)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"))
if mibBuilder.loadTexts: trpzRFDetectRogueDisappearTrap.setStatus('obsolete')
trpzClientAuthenticationFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 12)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenticationFailureCause"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientFailureCauseDescription"))
if mibBuilder.loadTexts: trpzClientAuthenticationFailureTrap.setStatus('current')
trpzClientAuthorizationFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 13)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientLocationPolicyIndex"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserParams"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthorizationFailureCause"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientFailureCauseDescription"))
if mibBuilder.loadTexts: trpzClientAuthorizationFailureTrap.setStatus('current')
trpzClientAssociationFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 14)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAssociationFailureCause"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientFailureCauseDescription"))
if mibBuilder.loadTexts: trpzClientAssociationFailureTrap.setStatus('current')
trpzClientAuthorizationSuccessTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 15)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionState"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionStartTime"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioRssi"))
if mibBuilder.loadTexts: trpzClientAuthorizationSuccessTrap.setStatus('obsolete')
trpzClientDeAssociationTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 16)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"))
if mibBuilder.loadTexts: trpzClientDeAssociationTrap.setStatus('obsolete')
trpzClientRoamingTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 17)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientRoamedFromAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientRoamedFromPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientRoamedFromRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientRoamedFromDAPNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientRoamedFromWsIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientTimeSinceLastRoam"))
if mibBuilder.loadTexts: trpzClientRoamingTrap.setStatus('obsolete')
trpzAutoTuneRadioPowerChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 18)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzNewPowerLevel"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzOldPowerLevel"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioPowerChangeReason"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioPowerChangeDescription"))
if mibBuilder.loadTexts: trpzAutoTuneRadioPowerChangeTrap.setStatus('current')
trpzAutoTuneRadioChannelChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 19)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzNewChannelNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzOldChannelNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzChannelChangeReason"))
if mibBuilder.loadTexts: trpzAutoTuneRadioChannelChangeTrap.setStatus('current')
trpzCounterMeasureStartTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 20)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioMACAddress"))
if mibBuilder.loadTexts: trpzCounterMeasureStartTrap.setStatus('current')
trpzCounterMeasureStopTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 21)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioMACAddress"))
if mibBuilder.loadTexts: trpzCounterMeasureStopTrap.setStatus('current')
trpzClientDot1xFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 22)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDot1xState"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDot1xFailureCause"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientFailureCauseDescription"))
if mibBuilder.loadTexts: trpzClientDot1xFailureTrap.setStatus('current')
trpzClientClearedTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 23)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionElapsedTime"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzLocalId"))
if mibBuilder.loadTexts: trpzClientClearedTrap.setStatus('obsolete')
trpzClientAuthorizationSuccessTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 24)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionState"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionStartTime"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzLocalId"))
if mibBuilder.loadTexts: trpzClientAuthorizationSuccessTrap2.setStatus('obsolete')
trpzRFDetectSpoofedMacAPTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 25)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectListenerListInfo"))
if mibBuilder.loadTexts: trpzRFDetectSpoofedMacAPTrap.setStatus('obsolete')
trpzRFDetectSpoofedSsidAPTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 26)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectListenerListInfo"))
if mibBuilder.loadTexts: trpzRFDetectSpoofedSsidAPTrap.setStatus('obsolete')
trpzRFDetectDoSTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 27)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectDoSType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectListenerListInfo"))
if mibBuilder.loadTexts: trpzRFDetectDoSTrap.setStatus('current')
trpzRFDetectClientViaRogueWiredAPTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 28)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzSourceWsIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANid"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANtag"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectListenerListInfo"))
if mibBuilder.loadTexts: trpzRFDetectClientViaRogueWiredAPTrap.setStatus('obsolete')
trpzRFDetectInterferingRogueAPTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 29)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectListenerListInfo"))
if mibBuilder.loadTexts: trpzRFDetectInterferingRogueAPTrap.setStatus('obsolete')
trpzRFDetectInterferingRogueDisappearTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 30)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"))
if mibBuilder.loadTexts: trpzRFDetectInterferingRogueDisappearTrap.setStatus('obsolete')
trpzRFDetectUnAuthorizedSsidTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 31)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectListenerListInfo"))
if mibBuilder.loadTexts: trpzRFDetectUnAuthorizedSsidTrap.setStatus('obsolete')
trpzRFDetectUnAuthorizedOuiTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 32)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectListenerListInfo"))
if mibBuilder.loadTexts: trpzRFDetectUnAuthorizedOuiTrap.setStatus('obsolete')
trpzRFDetectUnAuthorizedAPTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 33)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectListenerListInfo"))
if mibBuilder.loadTexts: trpzRFDetectUnAuthorizedAPTrap.setStatus('obsolete')
trpzDAPConnectWarningTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 34)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDeviceModel"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDeviceSerNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRsaPubKeyFingerPrint"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPconnectWarningType"))
if mibBuilder.loadTexts: trpzDAPConnectWarningTrap.setStatus('obsolete')
trpzRFDetectDoSPortTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 35)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectDoSType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"))
if mibBuilder.loadTexts: trpzRFDetectDoSPortTrap.setStatus('current')
trpzMpMichaelMICFailure2 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 36)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress2"))
if mibBuilder.loadTexts: trpzMpMichaelMICFailure2.setStatus('obsolete')
trpzApNonOperStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 37)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDeviceSerNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApAttachType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApPortOrDapNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApTransition"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApFailDetail"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApWasOperational"))
if mibBuilder.loadTexts: trpzApNonOperStatusTrap.setStatus('obsolete')
trpzApOperRadioStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 38)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDeviceSerNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApAttachType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApPortOrDapNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioConfigState"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApConnectSecurityType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApServiceAvailability"))
if mibBuilder.loadTexts: trpzApOperRadioStatusTrap.setStatus('obsolete')
trpzClientIpAddrChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 39)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionState"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzLocalId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIpAddrChangeReason"))
if mibBuilder.loadTexts: trpzClientIpAddrChangeTrap.setStatus('obsolete')
trpzClientAssociationSuccessTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 40)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"))
if mibBuilder.loadTexts: trpzClientAssociationSuccessTrap.setStatus('current')
trpzClientAuthenticationSuccessTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 41)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"))
if mibBuilder.loadTexts: trpzClientAuthenticationSuccessTrap.setStatus('current')
trpzClientDeAuthenticationTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 42)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"))
if mibBuilder.loadTexts: trpzClientDeAuthenticationTrap.setStatus('obsolete')
trpzRFDetectBlacklistedTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 43)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzBlacklistingRemainingTime"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzBlacklistingCause"))
if mibBuilder.loadTexts: trpzRFDetectBlacklistedTrap.setStatus('current')
trpzRFDetectClientViaRogueWiredAPTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 44)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzSourceWsIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANid"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANtag"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectListenerListInfo"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectRogueAPMacAddr"))
if mibBuilder.loadTexts: trpzRFDetectClientViaRogueWiredAPTrap2.setStatus('obsolete')
trpzRFDetectAdhocUserDisappearTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 45)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"))
if mibBuilder.loadTexts: trpzRFDetectAdhocUserDisappearTrap.setStatus('current')
trpzApRejectLicenseExceededTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 46)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzNumLicensedActiveAPs"))
if mibBuilder.loadTexts: trpzApRejectLicenseExceededTrap.setStatus('current')
trpzClientDynAuthorChangeSuccessTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 47)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionState"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDynAuthorClientIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzLocalId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzChangedUserParamOldValues"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzChangedUserParamNewValues"))
if mibBuilder.loadTexts: trpzClientDynAuthorChangeSuccessTrap.setStatus('obsolete')
trpzClientDynAuthorChangeFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 48)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDynAuthorClientIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserParams"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthorizationFailureCause"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientFailureCauseDescription"))
if mibBuilder.loadTexts: trpzClientDynAuthorChangeFailureTrap.setStatus('current')
trpzClientDisconnectTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 49)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDAPNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzLocalId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDisconnectSource"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDisconnectDescription"))
if mibBuilder.loadTexts: trpzClientDisconnectTrap.setStatus('obsolete')
trpzMobilityDomainFailOverTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 50)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMobilityDomainSecondarySeedIp"))
if mibBuilder.loadTexts: trpzMobilityDomainFailOverTrap.setStatus('current')
trpzMobilityDomainFailBackTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 51)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMobilityDomainPrimarySeedIp"))
if mibBuilder.loadTexts: trpzMobilityDomainFailBackTrap.setStatus('current')
trpzRFDetectRogueDeviceTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 52)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectListenerListInfo"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectClassificationReason"))
if mibBuilder.loadTexts: trpzRFDetectRogueDeviceTrap.setStatus('obsolete')
trpzRFDetectRogueDeviceDisappearTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 53)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"))
if mibBuilder.loadTexts: trpzRFDetectRogueDeviceDisappearTrap.setStatus('current')
trpzRFDetectSuspectDeviceTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 54)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectListenerListInfo"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectClassificationReason"))
if mibBuilder.loadTexts: trpzRFDetectSuspectDeviceTrap.setStatus('obsolete')
trpzRFDetectSuspectDeviceDisappearTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 55)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"))
if mibBuilder.loadTexts: trpzRFDetectSuspectDeviceDisappearTrap.setStatus('current')
trpzRFDetectClientViaRogueWiredAPTrap3 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 56)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzSourceWsIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANid"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANtag"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectListenerListInfo"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectRogueAPMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectClassificationReason"))
if mibBuilder.loadTexts: trpzRFDetectClientViaRogueWiredAPTrap3.setStatus('current')
trpzRFDetectClassificationChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 57))
if mibBuilder.loadTexts: trpzRFDetectClassificationChangeTrap.setStatus('current')
trpzConfigurationSavedTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 58)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzConfigSaveFileName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzConfigSaveInitiatorType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzConfigSaveInitiatorIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzConfigSaveInitiatorDetails"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzConfigSaveGeneration"))
if mibBuilder.loadTexts: trpzConfigurationSavedTrap.setStatus('current')
trpzApNonOperStatusTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 59)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDeviceSerNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApTransition"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApFailDetail"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApWasOperational"))
if mibBuilder.loadTexts: trpzApNonOperStatusTrap2.setStatus('current')
trpzApOperRadioStatusTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 60)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDeviceSerNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioMode"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioConfigState"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApConnectSecurityType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApServiceAvailability"))
if mibBuilder.loadTexts: trpzApOperRadioStatusTrap2.setStatus('obsolete')
trpzMichaelMICFailure = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 61)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMichaelMICFailureCause"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress2"))
if mibBuilder.loadTexts: trpzMichaelMICFailure.setStatus('current')
trpzClientAuthorizationSuccessTrap3 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 62)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionState"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessMode"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPhysPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzLocalId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthorizationReason"))
if mibBuilder.loadTexts: trpzClientAuthorizationSuccessTrap3.setStatus('obsolete')
trpzApManagerChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 63)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDeviceSerNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApMgrOldIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApMgrNewIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApMgrChangeReason"))
if mibBuilder.loadTexts: trpzApManagerChangeTrap.setStatus('current')
trpzClientClearedTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 64)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessMode"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPhysPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionElapsedSeconds"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzLocalId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientClearedReason"))
if mibBuilder.loadTexts: trpzClientClearedTrap2.setStatus('obsolete')
trpzMobilityDomainResiliencyStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 65)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMobilityDomainResiliencyStatus"))
if mibBuilder.loadTexts: trpzMobilityDomainResiliencyStatusTrap.setStatus('current')
trpzApOperRadioStatusTrap3 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 66)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDeviceSerNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioMode"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioConfigState"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioChannelWidth"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioMimoState"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApConnectSecurityType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApServiceAvailability"))
if mibBuilder.loadTexts: trpzApOperRadioStatusTrap3.setStatus('current')
trpzClientAuthorizationSuccessTrap4 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 67)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionState"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessMode"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPhysPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientRadioType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzLocalId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthorizationReason"))
if mibBuilder.loadTexts: trpzClientAuthorizationSuccessTrap4.setStatus('obsolete')
trpzRFDetectRogueDeviceTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 68)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrRadioType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrCryptoType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectListenerListInfo"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectClassificationReason"))
if mibBuilder.loadTexts: trpzRFDetectRogueDeviceTrap2.setStatus('current')
trpzRFDetectSuspectDeviceTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 69)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrMacAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrRadioType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectXmtrCryptoType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectListenerListInfo"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFDetectClassificationReason"))
if mibBuilder.loadTexts: trpzRFDetectSuspectDeviceTrap2.setStatus('current')
trpzClusterFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 70)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClusterFailureReason"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClusterFailureDescription"))
if mibBuilder.loadTexts: trpzClusterFailureTrap.setStatus('current')
trpzMultimediaCallFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 71)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessMode"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPhysPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPRadioNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMultimediaCommunicationServerID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMultimediaCallDirection"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMultimediaLocalStationIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMultimediaLocalStationPort"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMultimediaLocalStationEndpointID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMultimediaRemoteStationIp"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMultimediaRemoteStationPort"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMultimediaRemoteStationEndpointID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMultimediaSignalingProtocol"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMultimediaCallBandwidthAndCodec"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMultimediaCallDataRate"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMultimediaCallRssi"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzMultimediaCallFailureReason"))
if mibBuilder.loadTexts: trpzMultimediaCallFailureTrap.setStatus('current')
trpzApTunnelLimitExceededTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 72)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzDeviceSerNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAPMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApTunnelLimit"))
if mibBuilder.loadTexts: trpzApTunnelLimitExceededTrap.setStatus('current')
trpzWsTunnelLimitExceededTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 73)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzWsTunnelLimit"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzWsTunnelLimitType"))
if mibBuilder.loadTexts: trpzWsTunnelLimitExceededTrap.setStatus('current')
trpzRFNoiseSourceTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 74)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFNoiseSourceID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFNoiseSourceType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFNoiseChannel"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFNoiseRssi"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFNoiseDutyCycle"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFNoiseChannelInterferenceMeasure"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRFNoiseAge"))
if mibBuilder.loadTexts: trpzRFNoiseSourceTrap.setStatus('current')
trpzM2UConvNotPossibleTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 75)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzM2UMulticastAddrType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzM2UMulticastAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzM2UConvNotPossibleReason"))
if mibBuilder.loadTexts: trpzM2UConvNotPossibleTrap.setStatus('current')
trpzM2UConvAvailabilityRestoredTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 76)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzM2UMulticastAddrType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzM2UMulticastAddr"))
if mibBuilder.loadTexts: trpzM2UConvAvailabilityRestoredTrap.setStatus('current')
trpzAutoTuneSuccessTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 77)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioBand"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadiosTunedCount"))
if mibBuilder.loadTexts: trpzAutoTuneSuccessTrap.setStatus('current')
trpzAutoTuneFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 78)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioBand"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzAutoTuneFailureReason"))
if mibBuilder.loadTexts: trpzAutoTuneFailureTrap.setStatus('current')
trpzClientDeAssociationTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 79)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIPv4Addr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIPv6LinkLocalAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerAddrType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessMode"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPhysPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApRadioIndex"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"))
if mibBuilder.loadTexts: trpzClientDeAssociationTrap2.setStatus('current')
trpzClientRoamingTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 80)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIPv4Addr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIPv6LinkLocalAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessMode"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPhysPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApRadioIndex"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientRoamedFromAccessMode"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientRoamedFromPhysPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientRoamedFromApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientRoamedFromRadioIndex"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientRoamedFromWsAddrType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientRoamedFromWsAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientTimeSinceLastRoam"))
if mibBuilder.loadTexts: trpzClientRoamingTrap2.setStatus('current')
trpzClientIpAddrChangeTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 81)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIpAddrType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIpAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionState"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerAddrType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessMode"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPhysPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApRadioIndex"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzLocalId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIpAddrChangeReason"))
if mibBuilder.loadTexts: trpzClientIpAddrChangeTrap2.setStatus('current')
trpzClientDeAuthenticationTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 82)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIPv4Addr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIPv6LinkLocalAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerAddrType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessMode"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPhysPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApRadioIndex"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"))
if mibBuilder.loadTexts: trpzClientDeAuthenticationTrap2.setStatus('current')
trpzClientDynAuthorChangeSuccessTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 83)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIPv4Addr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIPv6LinkLocalAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionState"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDynAuthorClientAddrType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDynAuthorClientAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessMode"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPhysPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApRadioIndex"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzLocalId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzChangedUserParamOldValues"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzChangedUserParamNewValues"))
if mibBuilder.loadTexts: trpzClientDynAuthorChangeSuccessTrap2.setStatus('current')
trpzClientDisconnectTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 84)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIPv4Addr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIPv6LinkLocalAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessMode"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPhysPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApRadioIndex"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzLocalId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDisconnectSource"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDisconnectDescription"))
if mibBuilder.loadTexts: trpzClientDisconnectTrap2.setStatus('current')
trpzClientClearedTrap3 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 85)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIPv4Addr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIPv6LinkLocalAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessMode"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPhysPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApRadioIndex"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionElapsedSeconds"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzLocalId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientClearedReason"))
if mibBuilder.loadTexts: trpzClientClearedTrap3.setStatus('current')
trpzClientAuthorizationSuccessTrap5 = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 86)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIPv4Addr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIPv6LinkLocalAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionState"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerAddrType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessMode"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPhysPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApRadioIndex"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientRadioType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzLocalId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthorizationReason"))
if mibBuilder.loadTexts: trpzClientAuthorizationSuccessTrap5.setStatus('current')
trpzClientDeviceTypeChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 87)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIPv4Addr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIPv6LinkLocalAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDeviceType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDeviceTypeOld"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDeviceGroup"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDeviceProfileName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionState"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerAddrType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessMode"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPhysPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApRadioIndex"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzLocalId"))
if mibBuilder.loadTexts: trpzClientDeviceTypeChangeTrap.setStatus('current')
trpzClientDeviceProfileChangeTrap = NotificationType((1, 3, 6, 1, 4, 1, 14525, 5, 0, 88)).setObjects(("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionId"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientMACAddress"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIPv4Addr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientIPv6LinkLocalAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDeviceType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDeviceGroup"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDeviceProfileName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDeviceProfileNameOld"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientDeviceProfileChangeReason"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientVLANName"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientSessionState"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerAddrType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthServerAddr"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAuthenProtocolType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzClientAccessMode"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzPhysPortNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApNum"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzApRadioIndex"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzRadioSSID"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzUserAccessType"), ("TRAPEZE-NETWORKS-TRAP-MIB", "trpzLocalId"))
if mibBuilder.loadTexts: trpzClientDeviceProfileChangeTrap.setStatus('current')
mibBuilder.exportSymbols("TRAPEZE-NETWORKS-TRAP-MIB", trpzClientRoamingTrap2=trpzClientRoamingTrap2, trpzCounterMeasurePerformerListInfo=trpzCounterMeasurePerformerListInfo, trpzClientRoamedFromWsAddrType=trpzClientRoamedFromWsAddrType, trpzClientAuthorizationSuccessTrap2=trpzClientAuthorizationSuccessTrap2, trpzConfigSaveInitiatorDetails=trpzConfigSaveInitiatorDetails, trpzRadioBand=trpzRadioBand, trpzClientClearedReason=trpzClientClearedReason, trpzMultimediaLocalStationIp=trpzMultimediaLocalStationIp, TrpzMobilityDomainResiliencyStatus=TrpzMobilityDomainResiliencyStatus, trpzRadioChannelWidth=trpzRadioChannelWidth, trpzClientDynAuthorChangeSuccessTrap=trpzClientDynAuthorChangeSuccessTrap, trpzWsTunnelLimitExceededTrap=trpzWsTunnelLimitExceededTrap, trpzRFDetectRogueDisappearTrap=trpzRFDetectRogueDisappearTrap, trpzClientDeviceProfileChangeReason=trpzClientDeviceProfileChangeReason, trpzChannelChangeReason=trpzChannelChangeReason, TrpzAuthorizationFailureType=TrpzAuthorizationFailureType, trpzClientRadioType=trpzClientRadioType, trpzClientIp=trpzClientIp, trpzApWasOperational=trpzApWasOperational, trpzClientDeviceTypeOld=trpzClientDeviceTypeOld, trpzApTransition=trpzApTransition, trpzRadioMACAddress=trpzRadioMACAddress, trpzRFDetectListenerListInfo=trpzRFDetectListenerListInfo, trpzMultimediaCallFailureTrap=trpzMultimediaCallFailureTrap, TrpzClientIpAddrChangeReason=TrpzClientIpAddrChangeReason, trpzClientVLANtag=trpzClientVLANtag, trpzClientDynAuthorClientIp=trpzClientDynAuthorClientIp, trpzWsTunnelLimit=trpzWsTunnelLimit, trpzApMgrChangeReason=trpzApMgrChangeReason, trpzRFDetectRogueDeviceTrap=trpzRFDetectRogueDeviceTrap, trpzMultimediaCallRssi=trpzMultimediaCallRssi, trpzClientRoamedFromDAPNum=trpzClientRoamedFromDAPNum, trpzMultimediaCallDirection=trpzMultimediaCallDirection, trpzRFDetectDoSPortTrap=trpzRFDetectDoSPortTrap, trpzApServiceAvailability=trpzApServiceAvailability, trpzAutoTuneRadioChannelChangeTrap=trpzAutoTuneRadioChannelChangeTrap, trpzRFNoiseAge=trpzRFNoiseAge, trpzClientRoamedFromAccessMode=trpzClientRoamedFromAccessMode, trpzDeviceFailTrap=trpzDeviceFailTrap, trpzRFDetectSuspectDeviceTrap=trpzRFDetectSuspectDeviceTrap, trpzClientAssociationFailureCause=trpzClientAssociationFailureCause, trpzClientDeviceGroup=trpzClientDeviceGroup, trpzAutoTuneFailureReason=trpzAutoTuneFailureReason, trpzClientRoamedFromPhysPortNum=trpzClientRoamedFromPhysPortNum, trpzMultimediaRemoteStationIp=trpzMultimediaRemoteStationIp, trpzBlacklistingCause=trpzBlacklistingCause, trpzAPRadioNum=trpzAPRadioNum, trpzBlacklistingRemainingTime=trpzBlacklistingRemainingTime, trpzClientIPv4Addr=trpzClientIPv4Addr, trpzUserAccessType=trpzUserAccessType, trpzMultimediaLocalStationPort=trpzMultimediaLocalStationPort, trpzCounterMeasureStopTrap=trpzCounterMeasureStopTrap, trpzClientDot1xFailureCause=trpzClientDot1xFailureCause, trpzClientIpAddr=trpzClientIpAddr, trpzMpMichaelMICFailure2=trpzMpMichaelMICFailure2, trpzClientAuthenticationFailureCause=trpzClientAuthenticationFailureCause, trpzWsTunnelLimitType=trpzWsTunnelLimitType, trpzClientRoamedFromPortNum=trpzClientRoamedFromPortNum, trpzDeviceOkayTrap=trpzDeviceOkayTrap, trpzTrapMib=trpzTrapMib, trpzApConnectSecurityType=trpzApConnectSecurityType, trpzClientDisconnectTrap2=trpzClientDisconnectTrap2, TrpzBlacklistingCause=TrpzBlacklistingCause, trpzApTunnelLimitExceededTrap=trpzApTunnelLimitExceededTrap, trpzRadiosTunedCount=trpzRadiosTunedCount, trpzCounterMeasureStartTrap=trpzCounterMeasureStartTrap, trpzClientDeviceType=trpzClientDeviceType, trpzNumLicensedActiveAPs=trpzNumLicensedActiveAPs, trpzRFDetectRogueDeviceDisappearTrap=trpzRFDetectRogueDeviceDisappearTrap, trpzRFDetectClassificationReason=trpzRFDetectClassificationReason, trpzClientTimeSinceLastRoam=trpzClientTimeSinceLastRoam, trpzClientDeAuthenticationTrap=trpzClientDeAuthenticationTrap, TrpzWsTunnelLimitType=TrpzWsTunnelLimitType, trpzMultimediaCallBandwidthAndCodec=trpzMultimediaCallBandwidthAndCodec, trpzClientIpAddrType=trpzClientIpAddrType, trpzApOperRadioStatusTrap3=trpzApOperRadioStatusTrap3, trpzClusterFailureTrap=trpzClusterFailureTrap, trpzPortNum=trpzPortNum, trpzRadioRssi=trpzRadioRssi, trpzRFDetectDoSType=trpzRFDetectDoSType, trpzRFDetectClientViaRogueWiredAPTrap3=trpzRFDetectClientViaRogueWiredAPTrap3, TrpzClientAuthorizationReason=TrpzClientAuthorizationReason, TrpzApMgrChangeReason=TrpzApMgrChangeReason, trpzClientLocationPolicyIndex=trpzClientLocationPolicyIndex, trpzM2UMulticastAddrType=trpzM2UMulticastAddrType, trpzApNum=trpzApNum, trpzRFNoiseChannel=trpzRFNoiseChannel, trpzDeviceModel=trpzDeviceModel, trpzMultimediaCallDataRate=trpzMultimediaCallDataRate, trpzClientDynAuthorClientAddrType=trpzClientDynAuthorClientAddrType, trpzClientFailureCause=trpzClientFailureCause, trpzClientRoamedFromWsIp=trpzClientRoamedFromWsIp, trpzRFDetectDoSTrap=trpzRFDetectDoSTrap, trpzRFNoiseSourceTrap=trpzRFNoiseSourceTrap, trpzClientAccessMode=trpzClientAccessMode, trpzClientDeviceProfileNameOld=trpzClientDeviceProfileNameOld, trpzAPMACAddress=trpzAPMACAddress, trpzRadioType=trpzRadioType, trpzMobilityDomainIp=trpzMobilityDomainIp, trpzRFDetectUnAuthorizedSsidTrap=trpzRFDetectUnAuthorizedSsidTrap, trpzRFDetectSuspectDeviceTrap2=trpzRFDetectSuspectDeviceTrap2, trpzDAPconnectWarningType=trpzDAPconnectWarningType, trpzMultimediaRemoteStationEndpointID=trpzMultimediaRemoteStationEndpointID, trpzConfigurationSavedTrap=trpzConfigurationSavedTrap, trpzApTimeoutTrap=trpzApTimeoutTrap, trpzRFDetectUnAuthorizedAPTrap=trpzRFDetectUnAuthorizedAPTrap, trpzRFDetectRogueAPMacAddr=trpzRFDetectRogueAPMacAddr, trpzClientDeviceProfileName=trpzClientDeviceProfileName, trpzUserParams=trpzUserParams, trpzApTunnelLimit=trpzApTunnelLimit, trpzRFDetectSuspectDeviceDisappearTrap=trpzRFDetectSuspectDeviceDisappearTrap, TrpzConfigSaveInitiatorType=TrpzConfigSaveInitiatorType, TrpzMultimediaCallDirection=TrpzMultimediaCallDirection, trpzRadioMimoState=trpzRadioMimoState, trpzClientAuthServerIp=trpzClientAuthServerIp, trpzClientClearedTrap3=trpzClientClearedTrap3, trpzRFDetectClientViaRogueWiredAPTrap=trpzRFDetectClientViaRogueWiredAPTrap, trpzRFDetectInterferingRogueAPTrap=trpzRFDetectInterferingRogueAPTrap, trpzClientAuthorizationSuccessTrap5=trpzClientAuthorizationSuccessTrap5, TrpzRFDetectDoSType=TrpzRFDetectDoSType, TrpzSessionDisconnectType=TrpzSessionDisconnectType, trpzMobilityDomainSecondarySeedIp=trpzMobilityDomainSecondarySeedIp, trpzApAttachType=trpzApAttachType, trpzClientAuthenProtocolType=trpzClientAuthenProtocolType, TrpzM2UConvNotPossibleReason=TrpzM2UConvNotPossibleReason, trpzRadioPowerChangeReason=trpzRadioPowerChangeReason, trpzMobilityDomainResiliencyStatus=trpzMobilityDomainResiliencyStatus, trpzClientIpAddrChangeTrap=trpzClientIpAddrChangeTrap, trpzClientSessionId=trpzClientSessionId, trpzApPortOrDapNum=trpzApPortOrDapNum, trpzClientRoamedFromRadioIndex=trpzClientRoamedFromRadioIndex, trpzClientDeAssociationTrap2=trpzClientDeAssociationTrap2, trpzNewChannelNum=trpzNewChannelNum, trpzMultimediaCommunicationServerID=trpzMultimediaCommunicationServerID, trpzClientRoamedFromAccessType=trpzClientRoamedFromAccessType, trpzClientDynAuthorChangeSuccessTrap2=trpzClientDynAuthorChangeSuccessTrap2, trpzClientAuthenticationFailureTrap=trpzClientAuthenticationFailureTrap, trpzMobilityDomainPrimarySeedIp=trpzMobilityDomainPrimarySeedIp, trpzMobilityDomainJoinTrap=trpzMobilityDomainJoinTrap, trpzClientAuthorizationSuccessTrap4=trpzClientAuthorizationSuccessTrap4, trpzClientRoamedFromRadioNum=trpzClientRoamedFromRadioNum, trpzRFDetectXmtrMacAddr=trpzRFDetectXmtrMacAddr, trpzMobilityDomainTimeoutTrap=trpzMobilityDomainTimeoutTrap, trpzMultimediaRemoteStationPort=trpzMultimediaRemoteStationPort, trpzClientAccessType=trpzClientAccessType, trpzDeviceId=trpzDeviceId, trpzClientSessionElapsedSeconds=trpzClientSessionElapsedSeconds, trpzChangedUserParamOldValues=trpzChangedUserParamOldValues, trpzClientRoamingTrap=trpzClientRoamingTrap, trpzLocalId=trpzLocalId, trpzClientDisconnectDescription=trpzClientDisconnectDescription, trpzRFNoiseRssi=trpzRFNoiseRssi, trpzClientIPv6LinkLocalAddr=trpzClientIPv6LinkLocalAddr, trpzRFDetectAdhocUserTrap=trpzRFDetectAdhocUserTrap, trpzUserName=trpzUserName, trpzMobilityDomainFailBackTrap=trpzMobilityDomainFailBackTrap, trpzApMgrOldIp=trpzApMgrOldIp, trpzRFDetectXmtrRadioType=trpzRFDetectXmtrRadioType, trpzClientVLANName=trpzClientVLANName, trpzRFDetectAdhocUserDisappearTrap=trpzRFDetectAdhocUserDisappearTrap, TrpzAutoTuneFailureReason=TrpzAutoTuneFailureReason, trpzMultimediaCallFailureReason=trpzMultimediaCallFailureReason, trpzRFNoiseSourceType=trpzRFNoiseSourceType, trpzAPAccessType=trpzAPAccessType, trpzRFDetectBlacklistedTrap=trpzRFDetectBlacklistedTrap, TrpzMichaelMICFailureCause=TrpzMichaelMICFailureCause, trpzClientClearedTrap=trpzClientClearedTrap, TrpzClientClearedReason=TrpzClientClearedReason, trpzMultimediaLocalStationEndpointID=trpzMultimediaLocalStationEndpointID, trpzClientAuthenticationSuccessTrap=trpzClientAuthenticationSuccessTrap, trpzClientDynAuthorChangeFailureTrap=trpzClientDynAuthorChangeFailureTrap, trpzApOperRadioStatusTrap2=trpzApOperRadioStatusTrap2, trpzClientDeAssociationTrap=trpzClientDeAssociationTrap, trpzM2UConvAvailabilityRestoredTrap=trpzM2UConvAvailabilityRestoredTrap, TrpzDot1xFailureType=TrpzDot1xFailureType, trpzOldChannelNum=trpzOldChannelNum, trpzRFNoiseDutyCycle=trpzRFNoiseDutyCycle, trpzAutoTuneSuccessTrap=trpzAutoTuneSuccessTrap, trpzClientAuthorizationFailureTrap=trpzClientAuthorizationFailureTrap, trpzRadioMode=trpzRadioMode, trpzClientAssociationFailureTrap=trpzClientAssociationFailureTrap, PYSNMP_MODULE_ID=trpzTrapMib, trpzRFDetectSpoofedMacAPTrap=trpzRFDetectSpoofedMacAPTrap, TrpzAuthenticationFailureType=TrpzAuthenticationFailureType, trpzClientDot1xFailureTrap=trpzClientDot1xFailureTrap, trpzClientRoamedFromWsAddr=trpzClientRoamedFromWsAddr, trpzRFDetectSpoofedSsidAPTrap=trpzRFDetectSpoofedSsidAPTrap, trpzClientAuthorizationSuccessTrap=trpzClientAuthorizationSuccessTrap, trpzClientDeviceProfileChangeTrap=trpzClientDeviceProfileChangeTrap, trpzClientDisconnectSource=trpzClientDisconnectSource, trpzApMgrNewIp=trpzApMgrNewIp, trpzRFNoiseChannelInterferenceMeasure=trpzRFNoiseChannelInterferenceMeasure, trpzClientSessionState=trpzClientSessionState, trpzClientDisconnectTrap=trpzClientDisconnectTrap, trpzMobilityDomainResiliencyStatusTrap=trpzMobilityDomainResiliencyStatusTrap, trpzClientAssociationSuccessTrap=trpzClientAssociationSuccessTrap, trpzClientMACAddress2=trpzClientMACAddress2, trpzMichaelMICFailureCause=trpzMichaelMICFailureCause, trpzMultimediaSignalingProtocol=trpzMultimediaSignalingProtocol, trpzRadioBSSID=trpzRadioBSSID, TrpzMultimediaSignalingProtocol=TrpzMultimediaSignalingProtocol, trpzRFDetectClassificationChangeTrap=trpzRFDetectClassificationChangeTrap, trpzRadioSSID=trpzRadioSSID, trpzApNonOperStatusTrap2=trpzApNonOperStatusTrap2, TrpzClusterFailureReason=TrpzClusterFailureReason, TrpzRadioBand=TrpzRadioBand, trpzClientIpAddrChangeTrap2=trpzClientIpAddrChangeTrap2, trpzDAPNum=trpzDAPNum, trpzOldPowerLevel=trpzOldPowerLevel, trpzRadioConfigState=trpzRadioConfigState, trpzClientDeAuthenticationTrap2=trpzClientDeAuthenticationTrap2, trpzApName=trpzApName, trpzApRadioIndex=trpzApRadioIndex, trpzClientDeviceTypeChangeTrap=trpzClientDeviceTypeChangeTrap, trpzRadioPowerChangeDescription=trpzRadioPowerChangeDescription, trpzClientDynAuthorClientAddr=trpzClientDynAuthorClientAddr, trpzRFDetectInterferingRogueDisappearTrap=trpzRFDetectInterferingRogueDisappearTrap, TrpzClientDeviceProfileChangeReason=TrpzClientDeviceProfileChangeReason, trpzDeviceSerNum=trpzDeviceSerNum, trpzSourceWsIp=trpzSourceWsIp, trpzRFNoiseSourceID=trpzRFNoiseSourceID, trpzApRejectLicenseExceededTrap=trpzApRejectLicenseExceededTrap, trpzRFDetectRogueAPTrap=trpzRFDetectRogueAPTrap, trpzM2UMulticastAddr=trpzM2UMulticastAddr, trpzClientMACAddress=trpzClientMACAddress, trpzMpMichaelMICFailure=trpzMpMichaelMICFailure, trpzClientSessionElapsedTime=trpzClientSessionElapsedTime, TrpzUserAttributeList=TrpzUserAttributeList, trpzRsaPubKeyFingerPrint=trpzRsaPubKeyFingerPrint, trpzDAPConnectWarningTrap=trpzDAPConnectWarningTrap, trpzClientClearedTrap2=trpzClientClearedTrap2, trpzMobilityDomainFailOverTrap=trpzMobilityDomainFailOverTrap, trpzChangedUserParamNewValues=trpzChangedUserParamNewValues, trpzConfigSaveFileName=trpzConfigSaveFileName, trpzAPBootTrap=trpzAPBootTrap, trpzClientAuthorizationSuccessTrap3=trpzClientAuthorizationSuccessTrap3, trpzClusterFailureDescription=trpzClusterFailureDescription, trpzApFailDetail=trpzApFailDetail, trpzClientRoamedFromApNum=trpzClientRoamedFromApNum, trpzApManagerChangeTrap=trpzApManagerChangeTrap, trpzClientVLANid=trpzClientVLANid, trpzAutoTuneRadioPowerChangeTrap=trpzAutoTuneRadioPowerChangeTrap, trpzRFDetectUnAuthorizedOuiTrap=trpzRFDetectUnAuthorizedOuiTrap, trpzClientAuthorizationReason=trpzClientAuthorizationReason, trpzClientAuthServerAddr=trpzClientAuthServerAddr, trpzConfigSaveInitiatorType=trpzConfigSaveInitiatorType, trpzPhysPortNum=trpzPhysPortNum, TrpzAssociationFailureType=TrpzAssociationFailureType, trpzRFDetectClientViaRogueWiredAPTrap2=trpzRFDetectClientViaRogueWiredAPTrap2, trpzMichaelMICFailure=trpzMichaelMICFailure, trpzRFDetectXmtrCryptoType=trpzRFDetectXmtrCryptoType, trpzAutoTuneFailureTrap=trpzAutoTuneFailureTrap, TrpzMultimediaCallFailureReason=TrpzMultimediaCallFailureReason, trpzTrapsV2=trpzTrapsV2)
mibBuilder.exportSymbols("TRAPEZE-NETWORKS-TRAP-MIB", trpzM2UConvNotPossibleTrap=trpzM2UConvNotPossibleTrap, trpzClientDot1xState=trpzClientDot1xState, trpzConfigSaveInitiatorIp=trpzConfigSaveInitiatorIp, trpzApOperRadioStatusTrap=trpzApOperRadioStatusTrap, trpzNewPowerLevel=trpzNewPowerLevel, trpzClientIpAddrChangeReason=trpzClientIpAddrChangeReason, trpzClientAuthServerAddrType=trpzClientAuthServerAddrType, trpzClientSessionStartTime=trpzClientSessionStartTime, trpzClientFailureCauseDescription=trpzClientFailureCauseDescription, trpzClientAuthorizationFailureCause=trpzClientAuthorizationFailureCause, trpzPoEFailTrap=trpzPoEFailTrap, trpzApNonOperStatusTrap=trpzApNonOperStatusTrap, trpzRFDetectRogueDeviceTrap2=trpzRFDetectRogueDeviceTrap2, trpzConfigSaveGeneration=trpzConfigSaveGeneration, trpzClusterFailureReason=trpzClusterFailureReason, trpzM2UConvNotPossibleReason=trpzM2UConvNotPossibleReason)
