#
# PySNMP MIB module HPN-ICF-MPLS-LSR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-MPLS-LSR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
hpnicfMpls, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfMpls")
AddressFamilyNumbers, = mibBuilder.importSymbols("IANA-ADDRESS-FAMILY-NUMBERS-MIB", "AddressFamilyNumbers")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
InetAddressIPv4, InetAddressType, InetAddressIPv6 = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv4", "InetAddressType", "InetAddressIPv6")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Bits, Counter64, ObjectIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, iso, NotificationType, Unsigned32, MibIdentifier, Gauge32, TimeTicks, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "ObjectIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "iso", "NotificationType", "Unsigned32", "MibIdentifier", "Gauge32", "TimeTicks", "Integer32", "ModuleIdentity")
RowPointer, RowStatus, TimeStamp, TextualConvention, StorageType, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowPointer", "RowStatus", "TimeStamp", "TextualConvention", "StorageType", "TruthValue", "DisplayString")
hpnicfMplsLsr = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1))
hpnicfMplsLsr.setRevisions(('2000-07-12 12:00', '2000-07-07 12:00', '2000-04-26 12:00', '2000-04-21 12:00', '2000-03-06 12:00', '2000-02-16 12:00', '1999-06-16 12:00',))
if mibBuilder.loadTexts: hpnicfMplsLsr.setLastUpdated('200007121200Z')
if mibBuilder.loadTexts: hpnicfMplsLsr.setOrganization('')
class HpnicfMplsLSPID(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 31)

class HpnicfMplsLabel(TextualConvention, Unsigned32):
    reference = '1. MPLS Label Stack Encoding, Rosen et al, draft- ietf-mpls-label-encaps-07.txt, March 2000. 2. Use of Label Switching on Frame Relay Networks, Conta et al, draft-ietf-mpls-fr-03.txt, Nov. 1998. 3. MPLS using LDP and ATM VC switching, Davie et al, draft-ietf-mpls-atm-02.txt, April 1999.'
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 4294967295)

class HpnicfMplsBitRate(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class HpnicfMplsBurstSize(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2147483647)

class HpnicfMplsObjectOwner(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("other", 1), ("snmp", 2), ("ldp", 3), ("rsvp", 4), ("crldp", 5), ("policyAgent", 6), ("unknown", 7))

hpnicfmplsLsrObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1))
hpnicfmplsLsrNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 2))
hpnicfmplsLsrNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 2, 0))
hpnicfmplsLsrConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 3))
hpnicfmplsInterfaceConfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 1), )
if mibBuilder.loadTexts: hpnicfmplsInterfaceConfTable.setStatus('current')
hpnicfmplsInterfaceConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInterfaceConfIndex"))
if mibBuilder.loadTexts: hpnicfmplsInterfaceConfEntry.setStatus('current')
hpnicfmplsInterfaceConfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 1, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: hpnicfmplsInterfaceConfIndex.setStatus('current')
hpnicfmplsInterfaceLabelMinIn = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 1, 1, 2), HpnicfMplsLabel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsInterfaceLabelMinIn.setStatus('current')
hpnicfmplsInterfaceLabelMaxIn = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 1, 1, 3), HpnicfMplsLabel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsInterfaceLabelMaxIn.setStatus('current')
hpnicfmplsInterfaceLabelMinOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 1, 1, 4), HpnicfMplsLabel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsInterfaceLabelMinOut.setStatus('current')
hpnicfmplsInterfaceLabelMaxOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 1, 1, 5), HpnicfMplsLabel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsInterfaceLabelMaxOut.setStatus('current')
hpnicfmplsInterfaceTotalBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 1, 1, 6), HpnicfMplsBitRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsInterfaceTotalBandwidth.setStatus('current')
hpnicfmplsInterfaceAvailableBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 1, 1, 7), HpnicfMplsBitRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsInterfaceAvailableBandwidth.setStatus('current')
hpnicfmplsInterfaceLabelParticipationType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 1, 1, 8), Bits().clone(namedValues=NamedValues(("perPlatform", 0), ("perInterface", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsInterfaceLabelParticipationType.setStatus('current')
hpnicfmplsInterfaceConfStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 1, 1, 9), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsInterfaceConfStorageType.setStatus('current')
hpnicfmplsInterfacePerfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 2), )
if mibBuilder.loadTexts: hpnicfmplsInterfacePerfTable.setStatus('current')
hpnicfmplsInterfacePerfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 2, 1), )
hpnicfmplsInterfaceConfEntry.registerAugmentions(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInterfacePerfEntry"))
hpnicfmplsInterfacePerfEntry.setIndexNames(*hpnicfmplsInterfaceConfEntry.getIndexNames())
if mibBuilder.loadTexts: hpnicfmplsInterfacePerfEntry.setStatus('current')
hpnicfmplsInterfaceInLabelsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 2, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsInterfaceInLabelsUsed.setStatus('current')
hpnicfmplsInterfaceFailedLabelLookup = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsInterfaceFailedLabelLookup.setStatus('current')
hpnicfmplsInterfaceOutLabelsUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsInterfaceOutLabelsUsed.setStatus('current')
hpnicfmplsInterfaceOutFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsInterfaceOutFragments.setStatus('current')
hpnicfmplsInSegmentTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 3), )
if mibBuilder.loadTexts: hpnicfmplsInSegmentTable.setStatus('current')
hpnicfmplsInSegmentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 3, 1), ).setIndexNames((0, "HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentIfIndex"), (0, "HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentLabel"))
if mibBuilder.loadTexts: hpnicfmplsInSegmentEntry.setStatus('current')
hpnicfmplsInSegmentIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 3, 1, 1), InterfaceIndexOrZero()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfmplsInSegmentIfIndex.setStatus('current')
hpnicfmplsInSegmentLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 3, 1, 2), HpnicfMplsLabel()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfmplsInSegmentLabel.setStatus('current')
hpnicfmplsInSegmentNPop = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsInSegmentNPop.setStatus('current')
hpnicfmplsInSegmentAddrFamily = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 3, 1, 4), AddressFamilyNumbers().clone('other')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsInSegmentAddrFamily.setStatus('current')
hpnicfmplsInSegmentXCIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsInSegmentXCIndex.setStatus('current')
hpnicfmplsInSegmentOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 3, 1, 6), HpnicfMplsObjectOwner().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsInSegmentOwner.setStatus('current')
hpnicfmplsInSegmentTrafficParamPtr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 3, 1, 7), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsInSegmentTrafficParamPtr.setStatus('current')
hpnicfmplsInSegmentRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 3, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsInSegmentRowStatus.setStatus('current')
hpnicfmplsInSegmentStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 3, 1, 9), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsInSegmentStorageType.setStatus('current')
hpnicfmplsInSegmentPerfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 4), )
if mibBuilder.loadTexts: hpnicfmplsInSegmentPerfTable.setStatus('current')
hpnicfmplsInSegmentPerfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 4, 1), )
hpnicfmplsInSegmentEntry.registerAugmentions(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentPerfEntry"))
hpnicfmplsInSegmentPerfEntry.setIndexNames(*hpnicfmplsInSegmentEntry.getIndexNames())
if mibBuilder.loadTexts: hpnicfmplsInSegmentPerfEntry.setStatus('current')
hpnicfmplsInSegmentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsInSegmentOctets.setStatus('current')
hpnicfmplsInSegmentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsInSegmentPackets.setStatus('current')
hpnicfmplsInSegmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsInSegmentErrors.setStatus('current')
hpnicfmplsInSegmentDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsInSegmentDiscards.setStatus('current')
hpnicfmplsInSegmentHCOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsInSegmentHCOctets.setStatus('current')
hpnicfmplsInSegmentPerfDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 4, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsInSegmentPerfDiscontinuityTime.setStatus('current')
hpnicfmplsOutSegmentIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentIndexNext.setStatus('current')
hpnicfmplsOutSegmentTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 6), )
if mibBuilder.loadTexts: hpnicfmplsOutSegmentTable.setStatus('current')
hpnicfmplsOutSegmentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 6, 1), ).setIndexNames((0, "HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentIndex"))
if mibBuilder.loadTexts: hpnicfmplsOutSegmentEntry.setStatus('current')
hpnicfmplsOutSegmentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentIndex.setStatus('current')
hpnicfmplsOutSegmentIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 6, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentIfIndex.setStatus('current')
hpnicfmplsOutSegmentPushTopLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 6, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentPushTopLabel.setStatus('current')
hpnicfmplsOutSegmentTopLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 6, 1, 4), HpnicfMplsLabel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentTopLabel.setStatus('current')
hpnicfmplsOutSegmentNextHopIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 6, 1, 5), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentNextHopIpAddrType.setStatus('current')
hpnicfmplsOutSegmentNextHopIpv4Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 6, 1, 6), InetAddressIPv4()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentNextHopIpv4Addr.setStatus('current')
hpnicfmplsOutSegmentNextHopIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 6, 1, 7), InetAddressIPv6()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentNextHopIpv6Addr.setStatus('current')
hpnicfmplsOutSegmentXCIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentXCIndex.setStatus('current')
hpnicfmplsOutSegmentOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 6, 1, 9), HpnicfMplsObjectOwner().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentOwner.setStatus('current')
hpnicfmplsOutSegmentTrafficParamPtr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 6, 1, 10), RowPointer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentTrafficParamPtr.setStatus('current')
hpnicfmplsOutSegmentRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 6, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentRowStatus.setStatus('current')
hpnicfmplsOutSegmentStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 6, 1, 12), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentStorageType.setStatus('current')
hpnicfmplsOutSegmentPerfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 7), )
if mibBuilder.loadTexts: hpnicfmplsOutSegmentPerfTable.setStatus('current')
hpnicfmplsOutSegmentPerfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 7, 1), )
hpnicfmplsOutSegmentEntry.registerAugmentions(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentPerfEntry"))
hpnicfmplsOutSegmentPerfEntry.setIndexNames(*hpnicfmplsOutSegmentEntry.getIndexNames())
if mibBuilder.loadTexts: hpnicfmplsOutSegmentPerfEntry.setStatus('current')
hpnicfmplsOutSegmentOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentOctets.setStatus('current')
hpnicfmplsOutSegmentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentPackets.setStatus('current')
hpnicfmplsOutSegmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentErrors.setStatus('current')
hpnicfmplsOutSegmentDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentDiscards.setStatus('current')
hpnicfmplsOutSegmentHCOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 7, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentHCOctets.setStatus('current')
hpnicfmplsOutSegmentPerfDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 7, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsOutSegmentPerfDiscontinuityTime.setStatus('current')
hpnicfmplsXCIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsXCIndexNext.setStatus('current')
hpnicfmplsXCTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 9), )
if mibBuilder.loadTexts: hpnicfmplsXCTable.setStatus('current')
hpnicfmplsXCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 9, 1), ).setIndexNames((0, "HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCIndex"), (0, "HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentIfIndex"), (0, "HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentLabel"), (0, "HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentIndex"))
if mibBuilder.loadTexts: hpnicfmplsXCEntry.setStatus('current')
hpnicfmplsXCIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfmplsXCIndex.setStatus('current')
hpnicfmplsXCLspId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 9, 1, 2), HpnicfMplsLSPID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsXCLspId.setStatus('current')
hpnicfmplsXCLabelStackIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsXCLabelStackIndex.setStatus('current')
hpnicfmplsXCIsPersistent = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 9, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsXCIsPersistent.setStatus('current')
hpnicfmplsXCOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 9, 1, 5), HpnicfMplsObjectOwner()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsXCOwner.setStatus('current')
hpnicfmplsXCRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 9, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsXCRowStatus.setStatus('current')
hpnicfmplsXCStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 9, 1, 7), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsXCStorageType.setStatus('current')
hpnicfmplsXCAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 9, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsXCAdminStatus.setStatus('current')
hpnicfmplsXCOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 9, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4), ("dormant", 5), ("notPresent", 6), ("lowerLayerDown", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsXCOperStatus.setStatus('current')
hpnicfmplsMaxLabelStackDepth = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsMaxLabelStackDepth.setStatus('current')
hpnicfmplsLabelStackIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsLabelStackIndexNext.setStatus('current')
hpnicfmplsLabelStackTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 12), )
if mibBuilder.loadTexts: hpnicfmplsLabelStackTable.setStatus('current')
hpnicfmplsLabelStackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 12, 1), ).setIndexNames((0, "HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsLabelStackIndex"), (0, "HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsLabelStackLabelIndex"))
if mibBuilder.loadTexts: hpnicfmplsLabelStackEntry.setStatus('current')
hpnicfmplsLabelStackIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfmplsLabelStackIndex.setStatus('current')
hpnicfmplsLabelStackLabelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfmplsLabelStackLabelIndex.setStatus('current')
hpnicfmplsLabelStackLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 12, 1, 3), HpnicfMplsLabel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsLabelStackLabel.setStatus('current')
hpnicfmplsLabelStackRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 12, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsLabelStackRowStatus.setStatus('current')
hpnicfmplsLabelStackStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 12, 1, 5), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsLabelStackStorageType.setStatus('current')
hpnicfmplsTrafficParamIndexNext = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfmplsTrafficParamIndexNext.setStatus('current')
hpnicfmplsTrafficParamTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 14), )
if mibBuilder.loadTexts: hpnicfmplsTrafficParamTable.setStatus('current')
hpnicfmplsTrafficParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 14, 1), ).setIndexNames((0, "HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsTrafficParamIndex"))
if mibBuilder.loadTexts: hpnicfmplsTrafficParamEntry.setStatus('current')
hpnicfmplsTrafficParamIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hpnicfmplsTrafficParamIndex.setStatus('current')
hpnicfmplsTrafficParamMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 14, 1, 2), HpnicfMplsBitRate()).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsTrafficParamMaxRate.setStatus('current')
hpnicfmplsTrafficParamMeanRate = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 14, 1, 3), HpnicfMplsBitRate()).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsTrafficParamMeanRate.setStatus('current')
hpnicfmplsTrafficParamMaxBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 14, 1, 4), HpnicfMplsBurstSize()).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsTrafficParamMaxBurstSize.setStatus('current')
hpnicfmplsTrafficParamRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 14, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsTrafficParamRowStatus.setStatus('current')
hpnicfmplsTrafficParamStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 14, 1, 6), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfmplsTrafficParamStorageType.setStatus('current')
hpnicfmplsXCTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 1, 15), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfmplsXCTrapEnable.setStatus('current')
hpnicfmplsXCUp = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 2, 0, 1)).setObjects(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCIndex"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentIfIndex"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentLabel"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentIndex"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCAdminStatus"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCOperStatus"))
if mibBuilder.loadTexts: hpnicfmplsXCUp.setStatus('current')
hpnicfmplsXCDown = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 2, 0, 2)).setObjects(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCIndex"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentIfIndex"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentLabel"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentIndex"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCAdminStatus"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCOperStatus"))
if mibBuilder.loadTexts: hpnicfmplsXCDown.setStatus('current')
hpnicfmplsLsrGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 3, 1))
hpnicfmplsLsrCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 3, 2))
hpnicfmplsLsrModuleCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 3, 2, 1)).setObjects(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentGroup"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentGroup"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCGroup"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInterfaceGroup"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsPerfGroup"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsSegmentDiscontinuityGroup"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsHCInSegmentPerfGroup"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsHCOutSegmentPerfGroup"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsTrafficParamGroup"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCIsPersistentGroup"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCIsNotPersistentGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfmplsLsrModuleCompliance = hpnicfmplsLsrModuleCompliance.setStatus('current')
hpnicfmplsInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 3, 1, 1)).setObjects(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInterfaceLabelMinIn"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInterfaceLabelMaxIn"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInterfaceLabelMinOut"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInterfaceLabelMaxOut"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInterfaceTotalBandwidth"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInterfaceAvailableBandwidth"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInterfaceLabelParticipationType"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInterfaceConfStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfmplsInterfaceGroup = hpnicfmplsInterfaceGroup.setStatus('current')
hpnicfmplsInSegmentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 3, 1, 2)).setObjects(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentNPop"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentAddrFamily"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentXCIndex"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentOctets"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentDiscards"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentOwner"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentRowStatus"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentStorageType"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentTrafficParamPtr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfmplsInSegmentGroup = hpnicfmplsInSegmentGroup.setStatus('current')
hpnicfmplsOutSegmentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 3, 1, 3)).setObjects(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentIndexNext"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentIfIndex"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentPushTopLabel"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentTopLabel"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentNextHopIpAddrType"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentNextHopIpv4Addr"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentNextHopIpv6Addr"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentXCIndex"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentOwner"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentOctets"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentDiscards"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentErrors"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentRowStatus"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentStorageType"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentTrafficParamPtr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfmplsOutSegmentGroup = hpnicfmplsOutSegmentGroup.setStatus('current')
hpnicfmplsXCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 3, 1, 4)).setObjects(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCIndexNext"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCLabelStackIndex"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCOwner"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCAdminStatus"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCOperStatus"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCRowStatus"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCTrapEnable"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfmplsXCGroup = hpnicfmplsXCGroup.setStatus('current')
hpnicfmplsXCOptionalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 3, 1, 5)).setObjects(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCLspId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfmplsXCOptionalGroup = hpnicfmplsXCOptionalGroup.setStatus('current')
hpnicfmplsPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 3, 1, 6)).setObjects(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentOctets"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentPackets"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentErrors"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentDiscards"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentOctets"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentPackets"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentDiscards"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInterfaceInLabelsUsed"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInterfaceFailedLabelLookup"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInterfaceOutFragments"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInterfaceOutLabelsUsed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfmplsPerfGroup = hpnicfmplsPerfGroup.setStatus('current')
hpnicfmplsHCInSegmentPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 3, 1, 7)).setObjects(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentHCOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfmplsHCInSegmentPerfGroup = hpnicfmplsHCInSegmentPerfGroup.setStatus('current')
hpnicfmplsHCOutSegmentPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 3, 1, 8)).setObjects(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentHCOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfmplsHCOutSegmentPerfGroup = hpnicfmplsHCOutSegmentPerfGroup.setStatus('current')
hpnicfmplsTrafficParamGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 3, 1, 9)).setObjects(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsTrafficParamIndexNext"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsTrafficParamMaxRate"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsTrafficParamMeanRate"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsTrafficParamMaxBurstSize"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsTrafficParamRowStatus"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsTrafficParamStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfmplsTrafficParamGroup = hpnicfmplsTrafficParamGroup.setStatus('current')
hpnicfmplsXCIsPersistentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 3, 1, 10)).setObjects(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCIsPersistent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfmplsXCIsPersistentGroup = hpnicfmplsXCIsPersistentGroup.setStatus('current')
hpnicfmplsXCIsNotPersistentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 3, 1, 11)).setObjects(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCIsPersistent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfmplsXCIsNotPersistentGroup = hpnicfmplsXCIsNotPersistentGroup.setStatus('current')
hpnicfmplsLabelStackGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 3, 1, 12)).setObjects(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsLabelStackLabel"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsLabelStackRowStatus"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsLabelStackStorageType"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsMaxLabelStackDepth"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsLabelStackIndexNext"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfmplsLabelStackGroup = hpnicfmplsLabelStackGroup.setStatus('current')
hpnicfmplsSegmentDiscontinuityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 3, 1, 13)).setObjects(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsInSegmentPerfDiscontinuityTime"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsOutSegmentPerfDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfmplsSegmentDiscontinuityGroup = hpnicfmplsSegmentDiscontinuityGroup.setStatus('current')
hpnicfmplsLsrNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 8, 12, 1, 3, 1, 14)).setObjects(("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCUp"), ("HPN-ICF-MPLS-LSR-MIB", "hpnicfmplsXCDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfmplsLsrNotificationGroup = hpnicfmplsLsrNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-MPLS-LSR-MIB", hpnicfmplsLabelStackIndexNext=hpnicfmplsLabelStackIndexNext, hpnicfmplsXCIndex=hpnicfmplsXCIndex, hpnicfmplsInSegmentPerfDiscontinuityTime=hpnicfmplsInSegmentPerfDiscontinuityTime, hpnicfmplsLabelStackTable=hpnicfmplsLabelStackTable, hpnicfmplsOutSegmentPerfEntry=hpnicfmplsOutSegmentPerfEntry, hpnicfmplsInSegmentHCOctets=hpnicfmplsInSegmentHCOctets, hpnicfmplsInterfaceConfIndex=hpnicfmplsInterfaceConfIndex, hpnicfmplsOutSegmentStorageType=hpnicfmplsOutSegmentStorageType, hpnicfmplsLsrGroups=hpnicfmplsLsrGroups, hpnicfmplsXCRowStatus=hpnicfmplsXCRowStatus, hpnicfmplsOutSegmentNextHopIpv6Addr=hpnicfmplsOutSegmentNextHopIpv6Addr, hpnicfmplsXCGroup=hpnicfmplsXCGroup, hpnicfmplsInterfaceOutFragments=hpnicfmplsInterfaceOutFragments, hpnicfmplsLabelStackGroup=hpnicfmplsLabelStackGroup, hpnicfmplsOutSegmentOctets=hpnicfmplsOutSegmentOctets, hpnicfmplsLsrConformance=hpnicfmplsLsrConformance, hpnicfmplsInterfaceLabelParticipationType=hpnicfmplsInterfaceLabelParticipationType, hpnicfmplsOutSegmentGroup=hpnicfmplsOutSegmentGroup, hpnicfmplsLsrObjects=hpnicfmplsLsrObjects, hpnicfmplsOutSegmentPerfDiscontinuityTime=hpnicfmplsOutSegmentPerfDiscontinuityTime, hpnicfmplsOutSegmentIfIndex=hpnicfmplsOutSegmentIfIndex, hpnicfMplsLsr=hpnicfMplsLsr, hpnicfmplsInterfaceLabelMinIn=hpnicfmplsInterfaceLabelMinIn, hpnicfmplsInSegmentOwner=hpnicfmplsInSegmentOwner, hpnicfmplsXCDown=hpnicfmplsXCDown, hpnicfmplsMaxLabelStackDepth=hpnicfmplsMaxLabelStackDepth, hpnicfmplsSegmentDiscontinuityGroup=hpnicfmplsSegmentDiscontinuityGroup, hpnicfmplsInSegmentLabel=hpnicfmplsInSegmentLabel, hpnicfmplsInSegmentGroup=hpnicfmplsInSegmentGroup, hpnicfmplsInSegmentDiscards=hpnicfmplsInSegmentDiscards, hpnicfmplsOutSegmentNextHopIpAddrType=hpnicfmplsOutSegmentNextHopIpAddrType, hpnicfmplsOutSegmentPushTopLabel=hpnicfmplsOutSegmentPushTopLabel, hpnicfmplsInSegmentPerfTable=hpnicfmplsInSegmentPerfTable, hpnicfmplsXCLspId=hpnicfmplsXCLspId, hpnicfmplsInSegmentEntry=hpnicfmplsInSegmentEntry, hpnicfmplsInSegmentErrors=hpnicfmplsInSegmentErrors, hpnicfmplsInSegmentPerfEntry=hpnicfmplsInSegmentPerfEntry, hpnicfmplsXCStorageType=hpnicfmplsXCStorageType, hpnicfmplsTrafficParamIndex=hpnicfmplsTrafficParamIndex, hpnicfmplsOutSegmentIndexNext=hpnicfmplsOutSegmentIndexNext, hpnicfmplsOutSegmentNextHopIpv4Addr=hpnicfmplsOutSegmentNextHopIpv4Addr, HpnicfMplsBitRate=HpnicfMplsBitRate, hpnicfmplsOutSegmentOwner=hpnicfmplsOutSegmentOwner, hpnicfmplsTrafficParamMaxBurstSize=hpnicfmplsTrafficParamMaxBurstSize, hpnicfmplsInSegmentRowStatus=hpnicfmplsInSegmentRowStatus, hpnicfmplsInSegmentTable=hpnicfmplsInSegmentTable, hpnicfmplsLabelStackLabelIndex=hpnicfmplsLabelStackLabelIndex, hpnicfmplsInSegmentPackets=hpnicfmplsInSegmentPackets, hpnicfmplsLabelStackIndex=hpnicfmplsLabelStackIndex, hpnicfmplsTrafficParamEntry=hpnicfmplsTrafficParamEntry, hpnicfmplsOutSegmentDiscards=hpnicfmplsOutSegmentDiscards, hpnicfmplsInterfaceLabelMinOut=hpnicfmplsInterfaceLabelMinOut, hpnicfmplsOutSegmentEntry=hpnicfmplsOutSegmentEntry, hpnicfmplsLsrNotificationGroup=hpnicfmplsLsrNotificationGroup, hpnicfmplsLabelStackStorageType=hpnicfmplsLabelStackStorageType, hpnicfmplsOutSegmentIndex=hpnicfmplsOutSegmentIndex, hpnicfmplsLsrNotifyPrefix=hpnicfmplsLsrNotifyPrefix, hpnicfmplsInterfaceLabelMaxOut=hpnicfmplsInterfaceLabelMaxOut, hpnicfmplsLsrCompliances=hpnicfmplsLsrCompliances, hpnicfmplsXCIsPersistentGroup=hpnicfmplsXCIsPersistentGroup, PYSNMP_MODULE_ID=hpnicfMplsLsr, hpnicfmplsOutSegmentTrafficParamPtr=hpnicfmplsOutSegmentTrafficParamPtr, hpnicfmplsTrafficParamGroup=hpnicfmplsTrafficParamGroup, hpnicfmplsXCLabelStackIndex=hpnicfmplsXCLabelStackIndex, hpnicfmplsInSegmentNPop=hpnicfmplsInSegmentNPop, hpnicfmplsOutSegmentXCIndex=hpnicfmplsOutSegmentXCIndex, hpnicfmplsInterfaceOutLabelsUsed=hpnicfmplsInterfaceOutLabelsUsed, hpnicfmplsHCOutSegmentPerfGroup=hpnicfmplsHCOutSegmentPerfGroup, hpnicfmplsXCOwner=hpnicfmplsXCOwner, hpnicfmplsInSegmentXCIndex=hpnicfmplsInSegmentXCIndex, hpnicfmplsXCEntry=hpnicfmplsXCEntry, hpnicfmplsInSegmentOctets=hpnicfmplsInSegmentOctets, hpnicfmplsXCTrapEnable=hpnicfmplsXCTrapEnable, hpnicfmplsLsrModuleCompliance=hpnicfmplsLsrModuleCompliance, hpnicfmplsTrafficParamMeanRate=hpnicfmplsTrafficParamMeanRate, hpnicfmplsInterfaceGroup=hpnicfmplsInterfaceGroup, hpnicfmplsTrafficParamRowStatus=hpnicfmplsTrafficParamRowStatus, hpnicfmplsLsrNotifications=hpnicfmplsLsrNotifications, hpnicfmplsInterfacePerfEntry=hpnicfmplsInterfacePerfEntry, hpnicfmplsOutSegmentTopLabel=hpnicfmplsOutSegmentTopLabel, hpnicfmplsOutSegmentErrors=hpnicfmplsOutSegmentErrors, hpnicfmplsLabelStackLabel=hpnicfmplsLabelStackLabel, hpnicfmplsTrafficParamTable=hpnicfmplsTrafficParamTable, hpnicfmplsInterfaceLabelMaxIn=hpnicfmplsInterfaceLabelMaxIn, hpnicfmplsInterfaceConfEntry=hpnicfmplsInterfaceConfEntry, hpnicfmplsInterfaceConfTable=hpnicfmplsInterfaceConfTable, hpnicfmplsInSegmentAddrFamily=hpnicfmplsInSegmentAddrFamily, HpnicfMplsLabel=HpnicfMplsLabel, hpnicfmplsLabelStackRowStatus=hpnicfmplsLabelStackRowStatus, hpnicfmplsPerfGroup=hpnicfmplsPerfGroup, hpnicfmplsInterfaceInLabelsUsed=hpnicfmplsInterfaceInLabelsUsed, hpnicfmplsXCUp=hpnicfmplsXCUp, hpnicfmplsInterfaceFailedLabelLookup=hpnicfmplsInterfaceFailedLabelLookup, hpnicfmplsXCTable=hpnicfmplsXCTable, hpnicfmplsInterfacePerfTable=hpnicfmplsInterfacePerfTable, hpnicfmplsOutSegmentRowStatus=hpnicfmplsOutSegmentRowStatus, hpnicfmplsXCIsNotPersistentGroup=hpnicfmplsXCIsNotPersistentGroup, hpnicfmplsTrafficParamIndexNext=hpnicfmplsTrafficParamIndexNext, hpnicfmplsInterfaceConfStorageType=hpnicfmplsInterfaceConfStorageType, hpnicfmplsOutSegmentTable=hpnicfmplsOutSegmentTable, hpnicfmplsTrafficParamStorageType=hpnicfmplsTrafficParamStorageType, hpnicfmplsOutSegmentPerfTable=hpnicfmplsOutSegmentPerfTable, hpnicfmplsOutSegmentHCOctets=hpnicfmplsOutSegmentHCOctets, hpnicfmplsHCInSegmentPerfGroup=hpnicfmplsHCInSegmentPerfGroup, hpnicfmplsInterfaceAvailableBandwidth=hpnicfmplsInterfaceAvailableBandwidth, hpnicfmplsOutSegmentPackets=hpnicfmplsOutSegmentPackets, hpnicfmplsInterfaceTotalBandwidth=hpnicfmplsInterfaceTotalBandwidth, hpnicfmplsInSegmentStorageType=hpnicfmplsInSegmentStorageType, hpnicfmplsXCAdminStatus=hpnicfmplsXCAdminStatus, hpnicfmplsLabelStackEntry=hpnicfmplsLabelStackEntry, hpnicfmplsInSegmentTrafficParamPtr=hpnicfmplsInSegmentTrafficParamPtr, HpnicfMplsBurstSize=HpnicfMplsBurstSize, hpnicfmplsXCIndexNext=hpnicfmplsXCIndexNext, hpnicfmplsXCOptionalGroup=hpnicfmplsXCOptionalGroup, hpnicfmplsTrafficParamMaxRate=hpnicfmplsTrafficParamMaxRate, hpnicfmplsXCOperStatus=hpnicfmplsXCOperStatus, HpnicfMplsObjectOwner=HpnicfMplsObjectOwner, HpnicfMplsLSPID=HpnicfMplsLSPID, hpnicfmplsInSegmentIfIndex=hpnicfmplsInSegmentIfIndex, hpnicfmplsXCIsPersistent=hpnicfmplsXCIsPersistent)
