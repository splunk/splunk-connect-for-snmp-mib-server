#
# PySNMP MIB module A3COM-HUAWEI-DHCPS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-DHCPS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:49:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
huaweiMgmt, hwDhcp = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "huaweiMgmt", "hwDhcp")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Unsigned32, MibIdentifier, Counter64, NotificationType, ModuleIdentity, Bits, Integer32, Counter32, ObjectIdentity, Gauge32, TimeTicks, IpAddress, iso, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibIdentifier", "Counter64", "NotificationType", "ModuleIdentity", "Bits", "Integer32", "Counter32", "ObjectIdentity", "Gauge32", "TimeTicks", "IpAddress", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, MacAddress, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention", "RowStatus")
hwDHCPServerMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2))
if mibBuilder.loadTexts: hwDHCPServerMib.setLastUpdated('200602200000Z')
if mibBuilder.loadTexts: hwDHCPServerMib.setOrganization('Huawei 3Com Technologies Co., Ltd')
class EnabledStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 0))
    namedValues = NamedValues(("enabled", 1), ("disabled", 0))

hwDHCPServerMibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1))
hwDHCPSGlobalPoolTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 1), )
if mibBuilder.loadTexts: hwDHCPSGlobalPoolTable.setStatus('current')
hwDHCPSGlobalPoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 1, 1), ).setIndexNames((0, "A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolName"))
if mibBuilder.loadTexts: hwDHCPSGlobalPoolEntry.setStatus('current')
hwDHCPSGlobalPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolName.setStatus('current')
hwDHCPSGlobalPoolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolRowStatus.setStatus('current')
hwDHCPSGlobalPoolConfigTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 2), )
if mibBuilder.loadTexts: hwDHCPSGlobalPoolConfigTable.setStatus('current')
hwDHCPSGlobalPoolConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolName"))
if mibBuilder.loadTexts: hwDHCPSGlobalPoolConfigEntry.setStatus('current')
hwDHCPSGlobalPoolType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("null", 0), ("host", 1), ("network", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolType.setStatus('current')
hwDHCPSGlobalPoolNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolNetwork.setStatus('current')
hwDHCPSGlobalPoolNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolNetworkMask.setStatus('current')
hwDHCPSGlobalPoolHostIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolHostIPAddr.setStatus('current')
hwDHCPSGlobalPoolHostMask = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 2, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolHostMask.setStatus('current')
hwDHCPSGlobalPoolHostHAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 2, 1, 6), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolHostHAddr.setStatus('current')
hwDHCPSGlobalPoolConfigUndoFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("undonetworkip", 1), ("undohostip", 2), ("undohosthaddr", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolConfigUndoFlag.setStatus('current')
hwDHCPSGlobalPoolParaTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 3), )
if mibBuilder.loadTexts: hwDHCPSGlobalPoolParaTable.setStatus('current')
hwDHCPSGlobalPoolParaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolName"))
if mibBuilder.loadTexts: hwDHCPSGlobalPoolParaEntry.setStatus('current')
hwDHCPSGlobalPoolLeaseDay = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 365)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolLeaseDay.setStatus('current')
hwDHCPSGlobalPoolLeaseHour = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolLeaseHour.setStatus('current')
hwDHCPSGlobalPoolLeaseMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolLeaseMinute.setStatus('current')
hwDHCPSGlobalPoolLeaseUnlimited = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalid", 0), ("unlimited", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolLeaseUnlimited.setStatus('current')
hwDHCPSGlobalPoolDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolDomainName.setStatus('current')
hwDHCPSGlobalPoolClientGatewayIPString = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolClientGatewayIPString.setStatus('current')
hwDHCPSGlobalPoolClientGatewayIPUndo = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 3, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolClientGatewayIPUndo.setStatus('current')
hwDHCPSGlobalPoolClientDNSIPString = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolClientDNSIPString.setStatus('current')
hwDHCPSGlobalPoolClientDNSIPUndo = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 3, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolClientDNSIPUndo.setStatus('current')
hwDHCPSGlobalPoolClientNetbiosType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 8))).clone(namedValues=NamedValues(("null", 0), ("bnode", 1), ("pnode", 2), ("mnode", 4), ("hnode", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolClientNetbiosType.setStatus('current')
hwDHCPSGlobalPoolClientNbnsIPString = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 3, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolClientNbnsIPString.setStatus('current')
hwDHCPSGlobalPoolClientNbnsIPUndo = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 3, 1, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolClientNbnsIPUndo.setStatus('current')
hwDHCPSGlobalPoolParaUndoFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("undoDomain", 1), ("undoLease", 2), ("undoGateway", 3), ("undoDns", 4), ("undoNbns", 5), ("undoNbType", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolParaUndoFlag.setStatus('current')
hwDHCPSGlobalPoolIPInUseReset = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolIPInUseReset.setStatus('current')
hwDHCPSGlobalPoolOptionTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 4), )
if mibBuilder.loadTexts: hwDHCPSGlobalPoolOptionTable.setStatus('current')
hwDHCPSGlobalPoolOptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolName"), (0, "A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolOptionCode"))
if mibBuilder.loadTexts: hwDHCPSGlobalPoolOptionEntry.setStatus('current')
hwDHCPSGlobalPoolOptionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolOptionCode.setStatus('current')
hwDHCPSGlobalPoolOptionType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ascii", 1), ("hex", 2), ("ip", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolOptionType.setStatus('current')
hwDHCPSGlobalPoolOptionAscii = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolOptionAscii.setStatus('current')
hwDHCPSGlobalPoolOptionHexString = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 143))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolOptionHexString.setStatus('current')
hwDHCPSGlobalPoolOptionIPString = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolOptionIPString.setStatus('current')
hwDHCPSGlobalPoolOptionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolOptionRowStatus.setStatus('current')
hwDHCPSGlobalTreeTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 5), )
if mibBuilder.loadTexts: hwDHCPSGlobalTreeTable.setStatus('current')
hwDHCPSGlobalTreeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 5, 1), ).setIndexNames((0, "A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolName"))
if mibBuilder.loadTexts: hwDHCPSGlobalTreeEntry.setStatus('current')
hwDHCPSGlobalTreeParentNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalTreeParentNodeName.setStatus('current')
hwDHCPSGlobalTreeChildNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalTreeChildNodeName.setStatus('current')
hwDHCPSGlobalTreePreSiblingNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalTreePreSiblingNodeName.setStatus('current')
hwDHCPSGlobalTreeSiblingNodeName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalTreeSiblingNodeName.setStatus('current')
hwDHCPSInterfacePoolParaTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 6), )
if mibBuilder.loadTexts: hwDHCPSInterfacePoolParaTable.setStatus('current')
hwDHCPSInterfacePoolParaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hwDHCPSInterfacePoolParaEntry.setStatus('current')
hwDHCPSInterfacePoolLeaseDay = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 365)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolLeaseDay.setStatus('current')
hwDHCPSInterfacePoolLeaseHour = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolLeaseHour.setStatus('current')
hwDHCPSInterfacePoolLeaseMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolLeaseMinute.setStatus('current')
hwDHCPSInterfacePoolLeaseUnlimited = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalid", 0), ("unlimited", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolLeaseUnlimited.setStatus('current')
hwDHCPSInterfacePoolDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolDomainName.setStatus('current')
hwDHCPSInterfacePoolClientDNSIPString = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 6, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolClientDNSIPString.setStatus('current')
hwDHCPSInterfacePoolClientDNSIPUndo = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 6, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolClientDNSIPUndo.setStatus('current')
hwDHCPSInterfacePoolClientNetbiosType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 8))).clone(namedValues=NamedValues(("null", 0), ("bnode", 1), ("pnode", 2), ("mnode", 4), ("hnode", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolClientNetbiosType.setStatus('current')
hwDHCPSInterfacePoolClientNbnsIPString = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 6, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolClientNbnsIPString.setStatus('current')
hwDHCPSInterfacePoolClientNbnsIPUndo = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 6, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolClientNbnsIPUndo.setStatus('current')
hwDHCPSInterfacePoolParaUndoFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 6, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6))).clone(namedValues=NamedValues(("undoDomain", 1), ("undoLease", 2), ("undoDns", 4), ("undoNbns", 5), ("undoNbType", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolParaUndoFlag.setStatus('current')
hwDHCPSInterfacePoolIPInUseReset = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 6, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolIPInUseReset.setStatus('current')
hwDHCPSInterfacePoolOptionTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 7), )
if mibBuilder.loadTexts: hwDHCPSInterfacePoolOptionTable.setStatus('current')
hwDHCPSInterfacePoolOptionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolOptionCode"))
if mibBuilder.loadTexts: hwDHCPSInterfacePoolOptionEntry.setStatus('current')
hwDHCPSInterfacePoolOptionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolOptionCode.setStatus('current')
hwDHCPSInterfacePoolOptionType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ascii", 1), ("hex", 2), ("ip", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolOptionType.setStatus('current')
hwDHCPSInterfacePoolOptionAscii = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolOptionAscii.setStatus('current')
hwDHCPSInterfacePoolOptionHexString = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 7, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 143))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolOptionHexString.setStatus('current')
hwDHCPSInterfacePoolOptionIPString = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 7, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 129))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolOptionIPString.setStatus('current')
hwDHCPSInterfacePoolOptionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 7, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolOptionRowStatus.setStatus('current')
hwDHCPSInterfacePoolStaticBindTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 8), )
if mibBuilder.loadTexts: hwDHCPSInterfacePoolStaticBindTable.setStatus('current')
hwDHCPSInterfacePoolStaticBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolStaticBindIP"))
if mibBuilder.loadTexts: hwDHCPSInterfacePoolStaticBindEntry.setStatus('current')
hwDHCPSInterfacePoolStaticBindIP = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 8, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolStaticBindIP.setStatus('current')
hwDHCPSInterfacePoolStaticBindMac = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 8, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolStaticBindMac.setStatus('current')
hwDHCPSInterfacePoolStaticBindRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 8, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolStaticBindRowStatus.setStatus('current')
hwDHCPSIPInUseTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 9), )
if mibBuilder.loadTexts: hwDHCPSIPInUseTable.setStatus('deprecated')
hwDHCPSIPInUseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 9, 1), ).setIndexNames((0, "A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseHAddr"))
if mibBuilder.loadTexts: hwDHCPSIPInUseEntry.setStatus('deprecated')
hwDHCPSIPInUseHAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 9, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseHAddr.setStatus('deprecated')
hwDHCPSIPInUseIP = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 9, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseIP.setStatus('deprecated')
hwDHCPSIPInUseEndLease = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 9, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseEndLease.setStatus('deprecated')
hwDHCPSIPInUseType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("manual", 1), ("auto", 2), ("release", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseType.setStatus('deprecated')
hwDHCPSIPInUsePoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 9, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUsePoolName.setStatus('deprecated')
hwDHCPSIPInUseInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 9, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseInterface.setStatus('deprecated')
hwDHCPSIPInUseVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseVlan.setStatus('deprecated')
hwDHCPSIPInUseAtmpvc = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 9, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseAtmpvc.setStatus('deprecated')
hwDHCPSForbiddenIPTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 10), )
if mibBuilder.loadTexts: hwDHCPSForbiddenIPTable.setStatus('current')
hwDHCPSForbiddenIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 10, 1), ).setIndexNames((0, "A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSForbiddenIPStart"), (0, "A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSForbiddenIPEnd"))
if mibBuilder.loadTexts: hwDHCPSForbiddenIPEntry.setStatus('current')
hwDHCPSForbiddenIPStart = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 10, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSForbiddenIPStart.setStatus('current')
hwDHCPSForbiddenIPEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 10, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSForbiddenIPEnd.setStatus('current')
hwDHCPSForbiddenIPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 10, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwDHCPSForbiddenIPRowStatus.setStatus('current')
hwDHCPSConflictIPTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 11), )
if mibBuilder.loadTexts: hwDHCPSConflictIPTable.setStatus('current')
hwDHCPSConflictIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 11, 1), ).setIndexNames((0, "A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSConflictIP"))
if mibBuilder.loadTexts: hwDHCPSConflictIPEntry.setStatus('current')
hwDHCPSConflictIP = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 11, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSConflictIP.setStatus('current')
hwDHCPSConflictIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ping", 1), ("arp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSConflictIPType.setStatus('current')
hwDHCPSConflictIPDetectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 11, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSConflictIPDetectTime.setStatus('current')
hwDHCPSServiceStatus = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 12), EnabledStatus().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSServiceStatus.setStatus('current')
hwDHCPSDetectingServerStatus = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 13), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSDetectingServerStatus.setStatus('current')
hwDHCPSPingNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSPingNum.setStatus('current')
hwDHCPSPingTimeout = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSPingTimeout.setStatus('current')
hwDHCPSWriteDataStatus = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 16), EnabledStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSWriteDataStatus.setStatus('current')
hwDHCPSWriteDataDirection = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSWriteDataDirection.setStatus('current')
hwDHCPSWriteDataDelay = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(300, 86400)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSWriteDataDelay.setStatus('current')
hwDHCPSWriteDataRecover = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 19), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSWriteDataRecover.setStatus('current')
hwDHCPSIPInUseResetIP = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 20), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSIPInUseResetIP.setStatus('current')
hwDHCPSConflictIPResetIP = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 21), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSConflictIPResetIP.setStatus('current')
hwDHCPSIPResetFlag = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("invalid", 0), ("ipInUse", 1), ("conflictIp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSIPResetFlag.setStatus('current')
hwDHCPSGlobalPoolNumber = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolNumber.setStatus('current')
hwDHCPSGlobalPoolAutoBindingNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolAutoBindingNum.setStatus('current')
hwDHCPSGlobalPoolManualBindingNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolManualBindingNum.setStatus('current')
hwDHCPSGlobalPoolExpiredBindingNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSGlobalPoolExpiredBindingNum.setStatus('current')
hwDHCPSInterfacePoolNumber = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolNumber.setStatus('current')
hwDHCPSInterfacePoolAutoBindingNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolAutoBindingNum.setStatus('current')
hwDHCPSInterfacePoolManualBindingNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolManualBindingNum.setStatus('current')
hwDHCPSInterfacePoolExpiredBindingNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSInterfacePoolExpiredBindingNum.setStatus('current')
hwDHCPSBadPktNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSBadPktNum.setStatus('current')
hwDHCPSBootRequestPktNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSBootRequestPktNum.setStatus('current')
hwDHCPSDiscoverPktNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSDiscoverPktNum.setStatus('current')
hwDHCPSRequestPktNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSRequestPktNum.setStatus('current')
hwDHCPSDeclinePktNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSDeclinePktNum.setStatus('current')
hwDHCPSReleasePktNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSReleasePktNum.setStatus('current')
hwDHCPSInformPktNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSInformPktNum.setStatus('current')
hwDHCPSBootReplyPktNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSBootReplyPktNum.setStatus('current')
hwDHCPSOfferPktNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSOfferPktNum.setStatus('current')
hwDHCPSAckPktNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSAckPktNum.setStatus('current')
hwDHCPSNakPktNum = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSNakPktNum.setStatus('current')
hwDHCPSStatisticsReset = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwDHCPSStatisticsReset.setStatus('current')
hwDHCPSIPInUseExTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 43), )
if mibBuilder.loadTexts: hwDHCPSIPInUseExTable.setStatus('current')
hwDHCPSIPInUseExEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 43, 1), ).setIndexNames((0, "A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseHAddrEx"), (0, "A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseVlanIdEx"))
if mibBuilder.loadTexts: hwDHCPSIPInUseExEntry.setStatus('current')
hwDHCPSIPInUseHAddrEx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 43, 1, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwDHCPSIPInUseHAddrEx.setStatus('current')
hwDHCPSIPInUseVlanIdEx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 43, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 4094), ValueRangeConstraint(60000, 60000), ))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hwDHCPSIPInUseVlanIdEx.setStatus('current')
hwDHCPSIPInUseIPEx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 43, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseIPEx.setStatus('current')
hwDHCPSIPInUseEndLeaseEx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 43, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseEndLeaseEx.setStatus('current')
hwDHCPSIPInUseTypeEx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 43, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("manual", 1), ("auto", 2), ("release", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseTypeEx.setStatus('current')
hwDHCPSIPInUsePoolNameEx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 43, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUsePoolNameEx.setStatus('current')
hwDHCPSIPInUseIfIndexEx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 43, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseIfIndexEx.setStatus('current')
hwDHCPSIPInUseServerPortVlanIdEx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 43, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseServerPortVlanIdEx.setStatus('current')
hwDHCPSIPInUseAtmpvcEx = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 1, 43, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwDHCPSIPInUseAtmpvcEx.setStatus('current')
hwDHCPServerMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 2))
hwDHCPServerMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 2, 1))
hwDHCPServerMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 2, 2))
hwDHCPServerMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 43, 45, 1, 5, 7, 2, 2, 2, 1)).setObjects(("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolName"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolRowStatus"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolType"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolNetwork"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolNetworkMask"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolHostIPAddr"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolHostMask"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolHostHAddr"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolConfigUndoFlag"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolLeaseDay"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolLeaseHour"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolLeaseMinute"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolLeaseUnlimited"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolDomainName"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolClientGatewayIPString"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolClientGatewayIPUndo"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolClientDNSIPString"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolClientDNSIPUndo"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolClientNetbiosType"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolClientNbnsIPString"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolClientNbnsIPUndo"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolParaUndoFlag"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolIPInUseReset"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolOptionCode"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolOptionType"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolOptionAscii"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolOptionHexString"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolOptionIPString"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolOptionRowStatus"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalTreeParentNodeName"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalTreeChildNodeName"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalTreePreSiblingNodeName"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalTreeSiblingNodeName"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolLeaseDay"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolLeaseHour"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolLeaseMinute"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolLeaseUnlimited"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolDomainName"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolClientDNSIPString"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolClientDNSIPUndo"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolClientNetbiosType"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolClientNbnsIPString"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolClientNbnsIPUndo"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolParaUndoFlag"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolIPInUseReset"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolOptionCode"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolOptionType"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolOptionAscii"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolOptionHexString"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolOptionIPString"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolOptionRowStatus"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolStaticBindIP"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolStaticBindMac"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolStaticBindRowStatus"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseHAddr"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseIP"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseEndLease"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseType"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUsePoolName"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseInterface"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseVlan"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseAtmpvc"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSForbiddenIPStart"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSForbiddenIPEnd"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSForbiddenIPRowStatus"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSConflictIP"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSConflictIPType"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSConflictIPDetectTime"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSServiceStatus"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSDetectingServerStatus"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSPingNum"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSPingTimeout"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSWriteDataStatus"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSWriteDataDirection"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSWriteDataDelay"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSWriteDataRecover"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseResetIP"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSConflictIPResetIP"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPResetFlag"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolNumber"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolAutoBindingNum"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolManualBindingNum"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSGlobalPoolExpiredBindingNum"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolNumber"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolAutoBindingNum"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolManualBindingNum"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInterfacePoolExpiredBindingNum"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSBadPktNum"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSBootRequestPktNum"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSDiscoverPktNum"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSRequestPktNum"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSDeclinePktNum"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSReleasePktNum"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSInformPktNum"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSBootReplyPktNum"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSOfferPktNum"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSAckPktNum"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSNakPktNum"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSStatisticsReset"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseHAddrEx"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseVlanIdEx"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseIPEx"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseEndLeaseEx"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseTypeEx"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUsePoolNameEx"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseIfIndexEx"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseServerPortVlanIdEx"), ("A3COM-HUAWEI-DHCPS-MIB", "hwDHCPSIPInUseAtmpvcEx"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwDHCPServerMIBGroup = hwDHCPServerMIBGroup.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-DHCPS-MIB", hwDHCPSInterfacePoolClientNetbiosType=hwDHCPSInterfacePoolClientNetbiosType, hwDHCPSGlobalPoolIPInUseReset=hwDHCPSGlobalPoolIPInUseReset, hwDHCPSConflictIPEntry=hwDHCPSConflictIPEntry, hwDHCPSGlobalPoolLeaseUnlimited=hwDHCPSGlobalPoolLeaseUnlimited, hwDHCPSIPResetFlag=hwDHCPSIPResetFlag, hwDHCPSGlobalPoolOptionTable=hwDHCPSGlobalPoolOptionTable, hwDHCPSIPInUseAtmpvc=hwDHCPSIPInUseAtmpvc, hwDHCPSDiscoverPktNum=hwDHCPSDiscoverPktNum, hwDHCPSInterfacePoolStaticBindEntry=hwDHCPSInterfacePoolStaticBindEntry, hwDHCPSInterfacePoolClientNbnsIPString=hwDHCPSInterfacePoolClientNbnsIPString, hwDHCPSGlobalPoolOptionEntry=hwDHCPSGlobalPoolOptionEntry, hwDHCPSGlobalTreeSiblingNodeName=hwDHCPSGlobalTreeSiblingNodeName, hwDHCPSInterfacePoolStaticBindTable=hwDHCPSInterfacePoolStaticBindTable, hwDHCPSIPInUseVlan=hwDHCPSIPInUseVlan, hwDHCPSForbiddenIPRowStatus=hwDHCPSForbiddenIPRowStatus, hwDHCPSGlobalPoolRowStatus=hwDHCPSGlobalPoolRowStatus, hwDHCPSForbiddenIPEnd=hwDHCPSForbiddenIPEnd, hwDHCPSIPInUseEndLease=hwDHCPSIPInUseEndLease, hwDHCPSGlobalTreePreSiblingNodeName=hwDHCPSGlobalTreePreSiblingNodeName, hwDHCPSIPInUseVlanIdEx=hwDHCPSIPInUseVlanIdEx, hwDHCPSIPInUsePoolName=hwDHCPSIPInUsePoolName, hwDHCPSIPInUseInterface=hwDHCPSIPInUseInterface, hwDHCPSBootReplyPktNum=hwDHCPSBootReplyPktNum, hwDHCPSWriteDataStatus=hwDHCPSWriteDataStatus, hwDHCPSInterfacePoolStaticBindMac=hwDHCPSInterfacePoolStaticBindMac, hwDHCPSStatisticsReset=hwDHCPSStatisticsReset, hwDHCPSBootRequestPktNum=hwDHCPSBootRequestPktNum, hwDHCPSInterfacePoolLeaseHour=hwDHCPSInterfacePoolLeaseHour, hwDHCPSGlobalPoolName=hwDHCPSGlobalPoolName, hwDHCPSRequestPktNum=hwDHCPSRequestPktNum, hwDHCPSGlobalPoolClientGatewayIPString=hwDHCPSGlobalPoolClientGatewayIPString, hwDHCPSInterfacePoolParaEntry=hwDHCPSInterfacePoolParaEntry, hwDHCPSGlobalPoolHostMask=hwDHCPSGlobalPoolHostMask, hwDHCPSGlobalPoolNetworkMask=hwDHCPSGlobalPoolNetworkMask, hwDHCPSGlobalPoolOptionIPString=hwDHCPSGlobalPoolOptionIPString, hwDHCPSInterfacePoolOptionType=hwDHCPSInterfacePoolOptionType, hwDHCPSInformPktNum=hwDHCPSInformPktNum, hwDHCPSGlobalPoolEntry=hwDHCPSGlobalPoolEntry, hwDHCPSInterfacePoolOptionTable=hwDHCPSInterfacePoolOptionTable, hwDHCPSGlobalTreeParentNodeName=hwDHCPSGlobalTreeParentNodeName, hwDHCPSInterfacePoolParaUndoFlag=hwDHCPSInterfacePoolParaUndoFlag, hwDHCPServerMib=hwDHCPServerMib, hwDHCPSInterfacePoolParaTable=hwDHCPSInterfacePoolParaTable, hwDHCPServerMIBGroups=hwDHCPServerMIBGroups, hwDHCPSGlobalPoolOptionType=hwDHCPSGlobalPoolOptionType, hwDHCPSGlobalPoolClientNetbiosType=hwDHCPSGlobalPoolClientNetbiosType, hwDHCPSIPInUseExEntry=hwDHCPSIPInUseExEntry, hwDHCPSGlobalTreeTable=hwDHCPSGlobalTreeTable, hwDHCPSGlobalPoolType=hwDHCPSGlobalPoolType, EnabledStatus=EnabledStatus, PYSNMP_MODULE_ID=hwDHCPServerMib, hwDHCPSForbiddenIPTable=hwDHCPSForbiddenIPTable, hwDHCPSInterfacePoolLeaseDay=hwDHCPSInterfacePoolLeaseDay, hwDHCPSInterfacePoolAutoBindingNum=hwDHCPSInterfacePoolAutoBindingNum, hwDHCPSGlobalPoolNetwork=hwDHCPSGlobalPoolNetwork, hwDHCPSInterfacePoolDomainName=hwDHCPSInterfacePoolDomainName, hwDHCPSIPInUseTable=hwDHCPSIPInUseTable, hwDHCPSGlobalPoolClientDNSIPString=hwDHCPSGlobalPoolClientDNSIPString, hwDHCPSIPInUseIP=hwDHCPSIPInUseIP, hwDHCPSDetectingServerStatus=hwDHCPSDetectingServerStatus, hwDHCPSIPInUseIPEx=hwDHCPSIPInUseIPEx, hwDHCPSInterfacePoolClientNbnsIPUndo=hwDHCPSInterfacePoolClientNbnsIPUndo, hwDHCPServerMIBGroup=hwDHCPServerMIBGroup, hwDHCPSBadPktNum=hwDHCPSBadPktNum, hwDHCPSForbiddenIPStart=hwDHCPSForbiddenIPStart, hwDHCPSGlobalPoolConfigTable=hwDHCPSGlobalPoolConfigTable, hwDHCPSReleasePktNum=hwDHCPSReleasePktNum, hwDHCPSPingTimeout=hwDHCPSPingTimeout, hwDHCPSOfferPktNum=hwDHCPSOfferPktNum, hwDHCPSGlobalPoolParaTable=hwDHCPSGlobalPoolParaTable, hwDHCPServerMIBCompliances=hwDHCPServerMIBCompliances, hwDHCPSGlobalPoolConfigUndoFlag=hwDHCPSGlobalPoolConfigUndoFlag, hwDHCPSIPInUsePoolNameEx=hwDHCPSIPInUsePoolNameEx, hwDHCPSGlobalTreeChildNodeName=hwDHCPSGlobalTreeChildNodeName, hwDHCPSGlobalPoolParaUndoFlag=hwDHCPSGlobalPoolParaUndoFlag, hwDHCPSConflictIPResetIP=hwDHCPSConflictIPResetIP, hwDHCPSGlobalPoolOptionRowStatus=hwDHCPSGlobalPoolOptionRowStatus, hwDHCPSWriteDataDelay=hwDHCPSWriteDataDelay, hwDHCPSIPInUseTypeEx=hwDHCPSIPInUseTypeEx, hwDHCPServerMibObject=hwDHCPServerMibObject, hwDHCPSGlobalPoolHostHAddr=hwDHCPSGlobalPoolHostHAddr, hwDHCPSIPInUseServerPortVlanIdEx=hwDHCPSIPInUseServerPortVlanIdEx, hwDHCPSGlobalPoolHostIPAddr=hwDHCPSGlobalPoolHostIPAddr, hwDHCPSServiceStatus=hwDHCPSServiceStatus, hwDHCPSInterfacePoolClientDNSIPUndo=hwDHCPSInterfacePoolClientDNSIPUndo, hwDHCPSGlobalPoolLeaseDay=hwDHCPSGlobalPoolLeaseDay, hwDHCPSIPInUseExTable=hwDHCPSIPInUseExTable, hwDHCPSGlobalPoolLeaseHour=hwDHCPSGlobalPoolLeaseHour, hwDHCPSIPInUseHAddrEx=hwDHCPSIPInUseHAddrEx, hwDHCPSGlobalPoolParaEntry=hwDHCPSGlobalPoolParaEntry, hwDHCPSGlobalPoolDomainName=hwDHCPSGlobalPoolDomainName, hwDHCPSIPInUseEntry=hwDHCPSIPInUseEntry, hwDHCPSGlobalPoolClientGatewayIPUndo=hwDHCPSGlobalPoolClientGatewayIPUndo, hwDHCPSGlobalPoolOptionAscii=hwDHCPSGlobalPoolOptionAscii, hwDHCPSInterfacePoolIPInUseReset=hwDHCPSInterfacePoolIPInUseReset, hwDHCPSInterfacePoolOptionRowStatus=hwDHCPSInterfacePoolOptionRowStatus, hwDHCPSConflictIP=hwDHCPSConflictIP, hwDHCPSGlobalPoolLeaseMinute=hwDHCPSGlobalPoolLeaseMinute, hwDHCPSNakPktNum=hwDHCPSNakPktNum, hwDHCPServerMIBConformance=hwDHCPServerMIBConformance, hwDHCPSIPInUseResetIP=hwDHCPSIPInUseResetIP, hwDHCPSIPInUseEndLeaseEx=hwDHCPSIPInUseEndLeaseEx, hwDHCPSGlobalPoolClientNbnsIPString=hwDHCPSGlobalPoolClientNbnsIPString, hwDHCPSGlobalPoolClientNbnsIPUndo=hwDHCPSGlobalPoolClientNbnsIPUndo, hwDHCPSInterfacePoolOptionEntry=hwDHCPSInterfacePoolOptionEntry, hwDHCPSGlobalPoolOptionHexString=hwDHCPSGlobalPoolOptionHexString, hwDHCPSDeclinePktNum=hwDHCPSDeclinePktNum, hwDHCPSInterfacePoolOptionHexString=hwDHCPSInterfacePoolOptionHexString, hwDHCPSInterfacePoolExpiredBindingNum=hwDHCPSInterfacePoolExpiredBindingNum, hwDHCPSWriteDataRecover=hwDHCPSWriteDataRecover, hwDHCPSPingNum=hwDHCPSPingNum, hwDHCPSGlobalPoolTable=hwDHCPSGlobalPoolTable, hwDHCPSInterfacePoolLeaseUnlimited=hwDHCPSInterfacePoolLeaseUnlimited, hwDHCPSGlobalPoolOptionCode=hwDHCPSGlobalPoolOptionCode, hwDHCPSAckPktNum=hwDHCPSAckPktNum, hwDHCPSGlobalPoolExpiredBindingNum=hwDHCPSGlobalPoolExpiredBindingNum, hwDHCPSGlobalPoolManualBindingNum=hwDHCPSGlobalPoolManualBindingNum, hwDHCPSWriteDataDirection=hwDHCPSWriteDataDirection, hwDHCPSInterfacePoolStaticBindIP=hwDHCPSInterfacePoolStaticBindIP, hwDHCPSIPInUseAtmpvcEx=hwDHCPSIPInUseAtmpvcEx, hwDHCPSConflictIPType=hwDHCPSConflictIPType, hwDHCPSInterfacePoolLeaseMinute=hwDHCPSInterfacePoolLeaseMinute, hwDHCPSConflictIPDetectTime=hwDHCPSConflictIPDetectTime, hwDHCPSConflictIPTable=hwDHCPSConflictIPTable, hwDHCPSInterfacePoolNumber=hwDHCPSInterfacePoolNumber, hwDHCPSGlobalTreeEntry=hwDHCPSGlobalTreeEntry, hwDHCPSInterfacePoolClientDNSIPString=hwDHCPSInterfacePoolClientDNSIPString, hwDHCPSForbiddenIPEntry=hwDHCPSForbiddenIPEntry, hwDHCPSIPInUseHAddr=hwDHCPSIPInUseHAddr, hwDHCPSInterfacePoolOptionCode=hwDHCPSInterfacePoolOptionCode, hwDHCPSInterfacePoolOptionAscii=hwDHCPSInterfacePoolOptionAscii, hwDHCPSGlobalPoolClientDNSIPUndo=hwDHCPSGlobalPoolClientDNSIPUndo, hwDHCPSIPInUseType=hwDHCPSIPInUseType, hwDHCPSInterfacePoolManualBindingNum=hwDHCPSInterfacePoolManualBindingNum, hwDHCPSGlobalPoolNumber=hwDHCPSGlobalPoolNumber, hwDHCPSGlobalPoolConfigEntry=hwDHCPSGlobalPoolConfigEntry, hwDHCPSGlobalPoolAutoBindingNum=hwDHCPSGlobalPoolAutoBindingNum, hwDHCPSInterfacePoolStaticBindRowStatus=hwDHCPSInterfacePoolStaticBindRowStatus, hwDHCPSInterfacePoolOptionIPString=hwDHCPSInterfacePoolOptionIPString, hwDHCPSIPInUseIfIndexEx=hwDHCPSIPInUseIfIndexEx)
