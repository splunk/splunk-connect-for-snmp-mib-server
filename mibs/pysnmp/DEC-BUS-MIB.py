#
# PySNMP MIB module DEC-BUS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DEC-BUS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:22:02 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
decMIBextension, = mibBuilder.importSymbols("DECATM-MIB", "decMIBextension")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, ModuleIdentity, Gauge32, Counter32, iso, NotificationType, MibIdentifier, Counter64, Bits, IpAddress, TimeTicks, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ModuleIdentity", "Gauge32", "Counter32", "iso", "NotificationType", "MibIdentifier", "Counter64", "Bits", "IpAddress", "TimeTicks", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
decBusMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 29))
decBusMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1))
decBusMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 2))
decBusMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 2, 1))
decBusMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 2, 2))
decBusConfigTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 1), )
if mibBuilder.loadTexts: decBusConfigTable.setStatus('mandatory')
decBusConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 1, 1), ).setIndexNames((0, "DEC-BUS-MIB", "decBusIndex"))
if mibBuilder.loadTexts: decBusConfigEntry.setStatus('mandatory')
decBusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusIndex.setStatus('mandatory')
decBusRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: decBusRowStatus.setStatus('mandatory')
decBusAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: decBusAdminStatus.setStatus('mandatory')
decBusOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("disabling", 3), ("deleting", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusOperStatus.setStatus('mandatory')
decBusLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusLastChange.setStatus('mandatory')
decBusAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusAtmAddress.setStatus('mandatory')
decBusDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: decBusDescription.setStatus('mandatory')
decBusLanName = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: decBusLanName.setStatus('mandatory')
decBusLanType = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("aflane8023", 2), ("aflane8025", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: decBusLanType.setStatus('mandatory')
decBusMaxDataFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5))).clone(namedValues=NamedValues(("max1516", 2), ("max4544", 3), ("max9234", 4), ("max18190", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: decBusMaxDataFrameSize.setStatus('mandatory')
decBusMaxFrameAge = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: decBusMaxFrameAge.setStatus('mandatory')
decBusMaxForwardingRate = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: decBusMaxForwardingRate.setStatus('mandatory')
decBusClientStatesTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 2), )
if mibBuilder.loadTexts: decBusClientStatesTable.setStatus('mandatory')
decBusClientStatesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 2, 1), ).setIndexNames((0, "DEC-BUS-MIB", "decBusIndex"))
if mibBuilder.loadTexts: decBusClientStatesEntry.setStatus('mandatory')
decBusActiveClients = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusActiveClients.setStatus('mandatory')
decBusMulticastFwdInProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusMulticastFwdInProgress.setStatus('mandatory')
decBusTerminating = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusTerminating.setStatus('mandatory')
decBusTrafficTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 3), )
if mibBuilder.loadTexts: decBusTrafficTable.setStatus('mandatory')
decBusTrafficEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 3, 1), ).setIndexNames((0, "DEC-BUS-MIB", "decBusIndex"))
if mibBuilder.loadTexts: decBusTrafficEntry.setStatus('mandatory')
decBusFramesForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusFramesForwarded.setStatus('mandatory')
decBusInvalidFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusInvalidFrames.setStatus('mandatory')
decBusFramesAgedOut = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusFramesAgedOut.setStatus('mandatory')
decBusFramesRateLimited = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusFramesRateLimited.setStatus('mandatory')
decBusFramesDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusFramesDiscarded.setStatus('mandatory')
decBusClientTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 4), )
if mibBuilder.loadTexts: decBusClientTable.setStatus('mandatory')
decBusClientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 4, 1), ).setIndexNames((0, "DEC-BUS-MIB", "decBusIndex"), (0, "DEC-BUS-MIB", "decBusClientIndex"))
if mibBuilder.loadTexts: decBusClientEntry.setStatus('mandatory')
decBusClientIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusClientIndex.setStatus('mandatory')
decBusClientAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusClientAtmAddress.setStatus('mandatory')
decBusClientID = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65279))).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusClientID.setStatus('mandatory')
decBusClientUsedSeveralIDs = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusClientUsedSeveralIDs.setStatus('mandatory')
decBusClientState = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("noBusConnect", 2), ("busConnect", 3), ("clientConnect", 4), ("operational", 5), ("deleting", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusClientState.setStatus('mandatory')
decBusClientRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: decBusClientRowStatus.setStatus('mandatory')
decBusLecTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 5), )
if mibBuilder.loadTexts: decBusLecTable.setStatus('mandatory')
decBusLecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 5, 1), ).setIndexNames((0, "DEC-BUS-MIB", "decBusIndex"), (0, "DEC-BUS-MIB", "decBusLecAtmAddress"))
if mibBuilder.loadTexts: decBusLecEntry.setStatus('mandatory')
decBusLecAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusLecAtmAddress.setStatus('mandatory')
decBusLecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusLecIndex.setStatus('mandatory')
decBusLecID = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65279))).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusLecID.setStatus('mandatory')
decBusLecUsedSeveralIDs = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusLecUsedSeveralIDs.setStatus('mandatory')
decBusLecState = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("noBusConnect", 2), ("busConnect", 3), ("clientConnect", 4), ("operational", 5), ("deleting", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusLecState.setStatus('mandatory')
decBusLecRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: decBusLecRowStatus.setStatus('mandatory')
decBusMulticastSendTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 6), )
if mibBuilder.loadTexts: decBusMulticastSendTable.setStatus('mandatory')
decBusMulticastSendEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 6, 1), ).setIndexNames((0, "DEC-BUS-MIB", "decBusIndex"), (0, "DEC-BUS-MIB", "decBusLecAtmAddress"))
if mibBuilder.loadTexts: decBusMulticastSendEntry.setStatus('mandatory')
decBusMulticastSendInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: decBusMulticastSendInterface.setStatus('mandatory')
decBusMulticastSendVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: decBusMulticastSendVpi.setStatus('mandatory')
decBusMulticastSendVci = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: decBusMulticastSendVci.setStatus('mandatory')
decBusMulticastSendRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: decBusMulticastSendRowStatus.setStatus('mandatory')
decBusMulticastFwdTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 7), )
if mibBuilder.loadTexts: decBusMulticastFwdTable.setStatus('mandatory')
decBusMulticastFwdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 7, 1), ).setIndexNames((0, "DEC-BUS-MIB", "decBusIndex"), (0, "DEC-BUS-MIB", "decBusMulticastFwdInterface"), (0, "DEC-BUS-MIB", "decBusMulticastFwdVpi"), (0, "DEC-BUS-MIB", "decBusMulticastFwdVci"))
if mibBuilder.loadTexts: decBusMulticastFwdEntry.setStatus('mandatory')
decBusMulticastFwdInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusMulticastFwdInterface.setStatus('mandatory')
decBusMulticastFwdVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusMulticastFwdVpi.setStatus('mandatory')
decBusMulticastFwdVci = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusMulticastFwdVci.setStatus('mandatory')
decBusMulticastFwdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: decBusMulticastFwdRowStatus.setStatus('mandatory')
decBusCallStatsTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 8), )
if mibBuilder.loadTexts: decBusCallStatsTable.setStatus('mandatory')
decBusCallStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 8, 1), ).setIndexNames((0, "DEC-BUS-MIB", "decBusIndex"))
if mibBuilder.loadTexts: decBusCallStatsEntry.setStatus('mandatory')
decBusMulticastSendCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 8, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusMulticastSendCalls.setStatus('mandatory')
decBusMulticastSendFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 8, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusMulticastSendFailures.setStatus('mandatory')
decBusMsOutOfResourcesFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 8, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusMsOutOfResourcesFailures.setStatus('mandatory')
decBusMsInvalidInfoElements = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusMsInvalidInfoElements.setStatus('mandatory')
decBusMsWrongLanTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 8, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusMsWrongLanTypes.setStatus('mandatory')
decBusMsWrongMaxFrameSizes = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 8, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusMsWrongMaxFrameSizes.setStatus('mandatory')
decBusMulticastForwardCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 8, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusMulticastForwardCalls.setStatus('mandatory')
decBusMulticastForwardFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 8, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusMulticastForwardFailures.setStatus('mandatory')
decBusMfOutOfResourcesFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 8, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusMfOutOfResourcesFailures.setStatus('mandatory')
decBusMfClientRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 8, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusMfClientRejects.setStatus('mandatory')
decBusEventLogMaximumSize = MibScalar((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: decBusEventLogMaximumSize.setStatus('mandatory')
decBusEventLogTable = MibTable((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 10), )
if mibBuilder.loadTexts: decBusEventLogTable.setStatus('mandatory')
decBusEventLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 10, 1), ).setIndexNames((0, "DEC-BUS-MIB", "decBusEventIndex"))
if mibBuilder.loadTexts: decBusEventLogEntry.setStatus('mandatory')
decBusEventIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusEventIndex.setStatus('mandatory')
decBusEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("joinFailed", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusEventType.setStatus('mandatory')
decBusEventReason = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6, 7, 8, 9, 10, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 100, 101))).clone(namedValues=NamedValues(("versionNotSupported", 1), ("invalidRequestParameters", 2), ("duplicateLanDestination", 4), ("duplicateAtmAddress", 5), ("insufficientResources", 6), ("accessDenied", 7), ("invalidRequestorId", 8), ("invalidLanDestination", 9), ("invalidAtmAddress", 10), ("wrongLanType", 50), ("wrongMaxFrameSize", 51), ("wrongJoinMaxFrameSize", 52), ("nonDuplicateRequest", 53), ("controlDistributeFailure", 54), ("multicastForwardFailure", 55), ("joinNotCompleted", 56), ("joinTimeout", 57), ("busConnectTimeout", 58), ("clientNotConnectedToLes", 59), ("missingInformationElement", 70), ("noAalParameters", 71), ("noAtmTrafficDescriptor", 72), ("noBroadbandBearerCapability", 73), ("noBlli", 74), ("noCallingPartyNumber", 75), ("noCalledPartyNumber", 76), ("noConnectionIdentifier", 77), ("noQosParameter", 78), ("invalidInformationElement", 80), ("invalidAalParameters", 81), ("invalidAtmTrafficDescriptor", 82), ("invalidBroadbandBearerCapability", 83), ("invalidBlli", 84), ("invalidCallingPartyNumber", 85), ("invalidCalledPartyNumber", 86), ("invalidConnectionIdentifier", 87), ("invalidQosParameter", 88), ("invalidAalMode", 90), ("invalidAalSccs", 91), ("insecureAtmAddress", 100), ("unverifiedAtmAddress", 101)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusEventReason.setStatus('mandatory')
decBusEventServer = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusEventServer.setStatus('mandatory')
decBusEventServerAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusEventServerAtmAddress.setStatus('mandatory')
decBusEventClientAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusEventClientAtmAddress.setStatus('mandatory')
decBusEventTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 1, 10, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: decBusEventTimestamp.setStatus('mandatory')
decBusConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 2, 1, 1))
decBusClientStatesGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 2, 1, 2))
decBusTrafficGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 2, 1, 3))
decBusClientGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 2, 1, 4))
decBusLecGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 2, 1, 5))
decBusCircuitGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 2, 1, 6))
decBusCallStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 2, 1, 7))
decBusEventLogGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 2, 1, 8))
decBusMIBCompliance = MibIdentifier((1, 3, 6, 1, 4, 1, 36, 2, 18, 29, 2, 2, 1))
mibBuilder.exportSymbols("DEC-BUS-MIB", decBusMulticastSendVci=decBusMulticastSendVci, decBusMulticastSendEntry=decBusMulticastSendEntry, decBusEventServer=decBusEventServer, decBusEventServerAtmAddress=decBusEventServerAtmAddress, decBusEventType=decBusEventType, decBusEventReason=decBusEventReason, decBusActiveClients=decBusActiveClients, decBusInvalidFrames=decBusInvalidFrames, decBusMulticastSendFailures=decBusMulticastSendFailures, decBusMsInvalidInfoElements=decBusMsInvalidInfoElements, decBusAdminStatus=decBusAdminStatus, decBusClientStatesTable=decBusClientStatesTable, decBusLecUsedSeveralIDs=decBusLecUsedSeveralIDs, decBusMIBCompliances=decBusMIBCompliances, decBusConfigTable=decBusConfigTable, decBusMIBGroups=decBusMIBGroups, decBusEventClientAtmAddress=decBusEventClientAtmAddress, decBusFramesAgedOut=decBusFramesAgedOut, decBusLecRowStatus=decBusLecRowStatus, decBusMulticastFwdInProgress=decBusMulticastFwdInProgress, decBusLastChange=decBusLastChange, decBusMulticastFwdVpi=decBusMulticastFwdVpi, decBusClientUsedSeveralIDs=decBusClientUsedSeveralIDs, decBusMulticastFwdEntry=decBusMulticastFwdEntry, decBusClientState=decBusClientState, decBusLecID=decBusLecID, decBusLecGroup=decBusLecGroup, decBusMIBObjects=decBusMIBObjects, decBusMulticastFwdInterface=decBusMulticastFwdInterface, decBusEventLogMaximumSize=decBusEventLogMaximumSize, decBusMsWrongMaxFrameSizes=decBusMsWrongMaxFrameSizes, decBusLecIndex=decBusLecIndex, decBusLecState=decBusLecState, decBusConfigGroup=decBusConfigGroup, decBusMaxDataFrameSize=decBusMaxDataFrameSize, decBusMulticastSendVpi=decBusMulticastSendVpi, decBusMfOutOfResourcesFailures=decBusMfOutOfResourcesFailures, decBusConfigEntry=decBusConfigEntry, decBusMsOutOfResourcesFailures=decBusMsOutOfResourcesFailures, decBusLanType=decBusLanType, decBusClientRowStatus=decBusClientRowStatus, decBusFramesDiscarded=decBusFramesDiscarded, decBusMulticastFwdTable=decBusMulticastFwdTable, decBusCircuitGroup=decBusCircuitGroup, decBusEventLogTable=decBusEventLogTable, decBusMIBConformance=decBusMIBConformance, decBusMaxForwardingRate=decBusMaxForwardingRate, decBusFramesForwarded=decBusFramesForwarded, decBusMulticastSendRowStatus=decBusMulticastSendRowStatus, decBusIndex=decBusIndex, decBusMulticastSendInterface=decBusMulticastSendInterface, decBusMfClientRejects=decBusMfClientRejects, decBusRowStatus=decBusRowStatus, decBusCallStatsGroup=decBusCallStatsGroup, decBusMIB=decBusMIB, decBusMaxFrameAge=decBusMaxFrameAge, decBusClientGroup=decBusClientGroup, decBusMulticastForwardFailures=decBusMulticastForwardFailures, decBusMulticastSendTable=decBusMulticastSendTable, decBusTrafficEntry=decBusTrafficEntry, decBusLecTable=decBusLecTable, decBusEventIndex=decBusEventIndex, decBusClientStatesEntry=decBusClientStatesEntry, decBusClientIndex=decBusClientIndex, decBusClientStatesGroup=decBusClientStatesGroup, decBusClientAtmAddress=decBusClientAtmAddress, decBusLecAtmAddress=decBusLecAtmAddress, decBusClientID=decBusClientID, decBusLecEntry=decBusLecEntry, decBusTrafficTable=decBusTrafficTable, decBusOperStatus=decBusOperStatus, decBusClientTable=decBusClientTable, decBusTerminating=decBusTerminating, decBusAtmAddress=decBusAtmAddress, decBusMulticastFwdVci=decBusMulticastFwdVci, decBusMsWrongLanTypes=decBusMsWrongLanTypes, decBusMulticastFwdRowStatus=decBusMulticastFwdRowStatus, decBusEventLogGroup=decBusEventLogGroup, decBusCallStatsTable=decBusCallStatsTable, decBusTrafficGroup=decBusTrafficGroup, decBusMulticastSendCalls=decBusMulticastSendCalls, decBusEventTimestamp=decBusEventTimestamp, decBusMIBCompliance=decBusMIBCompliance, decBusEventLogEntry=decBusEventLogEntry, decBusLanName=decBusLanName, decBusMulticastForwardCalls=decBusMulticastForwardCalls, decBusClientEntry=decBusClientEntry, decBusFramesRateLimited=decBusFramesRateLimited, decBusCallStatsEntry=decBusCallStatsEntry, decBusDescription=decBusDescription)
