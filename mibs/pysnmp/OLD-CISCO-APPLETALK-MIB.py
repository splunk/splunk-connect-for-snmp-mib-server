#
# PySNMP MIB module OLD-CISCO-APPLETALK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OLD-CISCO-APPLETALK-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:23:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
temporary, = mibBuilder.importSymbols("CISCO-SMI", "temporary")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Integer32, IpAddress, Gauge32, iso, Counter64, ModuleIdentity, MibIdentifier, Counter32, TimeTicks, Bits, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Integer32", "IpAddress", "Gauge32", "iso", "Counter64", "ModuleIdentity", "MibIdentifier", "Counter32", "TimeTicks", "Bits", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
tmpappletalk = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 3, 3))
atInput = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atInput.setStatus('mandatory')
atLocal = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atLocal.setStatus('mandatory')
atBcastin = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atBcastin.setStatus('mandatory')
atForward = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atForward.setStatus('mandatory')
atBcastout = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atBcastout.setStatus('mandatory')
atChksum = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atChksum.setStatus('mandatory')
atNotgate = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNotgate.setStatus('mandatory')
atHopcnt = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atHopcnt.setStatus('mandatory')
atNoaccess = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNoaccess.setStatus('mandatory')
atNoroute = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNoroute.setStatus('mandatory')
atNoencap = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNoencap.setStatus('mandatory')
atOutput = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atOutput.setStatus('mandatory')
atInmult = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atInmult.setStatus('mandatory')
atRtmpin = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atRtmpin.setStatus('mandatory')
atRtmpout = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atRtmpout.setStatus('mandatory')
atNbpin = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNbpin.setStatus('mandatory')
atNbpout = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNbpout.setStatus('mandatory')
atAtp = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atAtp.setStatus('mandatory')
atZipin = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atZipin.setStatus('mandatory')
atZipout = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atZipout.setStatus('mandatory')
atEcho = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atEcho.setStatus('mandatory')
atEchoill = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atEchoill.setStatus('mandatory')
atDdpshort = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atDdpshort.setStatus('mandatory')
atDdplong = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atDdplong.setStatus('mandatory')
atDdpbad = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atDdpbad.setStatus('mandatory')
atNobuffer = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atNobuffer.setStatus('mandatory')
atArpreq = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atArpreq.setStatus('mandatory')
atArpreply = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atArpreply.setStatus('mandatory')
atArpprobe = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atArpprobe.setStatus('mandatory')
atUnknown = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 3, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: atUnknown.setStatus('mandatory')
mibBuilder.exportSymbols("OLD-CISCO-APPLETALK-MIB", atDdplong=atDdplong, atEchoill=atEchoill, atBcastin=atBcastin, atNotgate=atNotgate, atArpprobe=atArpprobe, atInput=atInput, atNoencap=atNoencap, atZipin=atZipin, atNoroute=atNoroute, atDdpbad=atDdpbad, atRtmpin=atRtmpin, atEcho=atEcho, atInmult=atInmult, atNbpin=atNbpin, atNbpout=atNbpout, atArpreq=atArpreq, atForward=atForward, atArpreply=atArpreply, atOutput=atOutput, atHopcnt=atHopcnt, atChksum=atChksum, atZipout=atZipout, atBcastout=atBcastout, atRtmpout=atRtmpout, atLocal=atLocal, atAtp=atAtp, atDdpshort=atDdpshort, tmpappletalk=tmpappletalk, atNoaccess=atNoaccess, atUnknown=atUnknown, atNobuffer=atNobuffer)
