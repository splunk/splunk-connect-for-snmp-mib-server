#
# PySNMP MIB module PDN-ATMSTATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-ATMSTATS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:29:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
atmVclVci, atmVclVpi = mibBuilder.importSymbols("ATM-MIB", "atmVclVci", "atmVclVpi")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
pdnAtm, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdnAtm")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, NotificationType, Gauge32, TimeTicks, MibIdentifier, iso, Integer32, Unsigned32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, IpAddress, ModuleIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "NotificationType", "Gauge32", "TimeTicks", "MibIdentifier", "iso", "Integer32", "Unsigned32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "IpAddress", "ModuleIdentity", "Bits")
TimeInterval, RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeInterval", "RowStatus", "TextualConvention", "DisplayString")
pdnAtmStatsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3))
pdnAtmStatsMIB.setRevisions(('1902-03-28 00:00', '1900-04-13 00:00', '1999-05-26 00:00',))
if mibBuilder.loadTexts: pdnAtmStatsMIB.setLastUpdated('0002281200Z')
if mibBuilder.loadTexts: pdnAtmStatsMIB.setOrganization('Paradyne Networks MIB Working Group')
pdnAtmVplStat = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 1))
pdnAtmVclStat = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2))
pdnAtmStat = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 3))
pdnAtmVplStatTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 1, 1), )
if mibBuilder.loadTexts: pdnAtmVplStatTable.setStatus('current')
pdnAtmVplStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 1, 1, 1), ).setIndexNames((0, "PDN-ATMSTATS-MIB", "pdnAtmVplStatIfIndex"), (0, "PDN-ATMSTATS-MIB", "pdnAtmVplStatVpi"))
if mibBuilder.loadTexts: pdnAtmVplStatEntry.setStatus('current')
pdnAtmVplStatIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVplStatIfIndex.setStatus('current')
pdnAtmVplStatVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVplStatVpi.setStatus('current')
pdnAtmVplStatTotalCellIns = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVplStatTotalCellIns.setStatus('current')
pdnAtmVplStatClp0CellIns = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVplStatClp0CellIns.setStatus('current')
pdnAtmVplStatTotalDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVplStatTotalDiscards.setStatus('current')
pdnAtmVplStatClp0Discards = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVplStatClp0Discards.setStatus('current')
pdnAtmVplStatTotalCellOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVplStatTotalCellOuts.setStatus('current')
pdnAtmVplStatClp0CellOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVplStatClp0CellOuts.setStatus('current')
pdnAtmVplStatTaggedOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVplStatTaggedOuts.setStatus('current')
pdnAtmVclStatTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 2), )
if mibBuilder.loadTexts: pdnAtmVclStatTable.setStatus('current')
pdnAtmVclStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 2, 1), ).setIndexNames((0, "PDN-ATMSTATS-MIB", "pdnAtmVclStatIfIndex"), (0, "PDN-ATMSTATS-MIB", "pdnAtmVclStatVpi"), (0, "PDN-ATMSTATS-MIB", "pdnAtmVclStatVci"))
if mibBuilder.loadTexts: pdnAtmVclStatEntry.setStatus('current')
pdnAtmVclStatIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclStatIfIndex.setStatus('current')
pdnAtmVclStatVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclStatVpi.setStatus('current')
pdnAtmVclStatVci = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclStatVci.setStatus('current')
pdnAtmVclStatTotalCellIns = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclStatTotalCellIns.setStatus('current')
pdnAtmVclStatClp0CellIns = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclStatClp0CellIns.setStatus('current')
pdnAtmVclStatTotalDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclStatTotalDiscards.setStatus('current')
pdnAtmVclStatClp0Discards = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclStatClp0Discards.setStatus('current')
pdnAtmVclStatTotalCellOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclStatTotalCellOuts.setStatus('current')
pdnAtmVclStatClp0CellOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclStatClp0CellOuts.setStatus('current')
pdnAtmVclStatTaggedOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclStatTaggedOuts.setStatus('current')
pdnAtmVclStatRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 2, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnAtmVclStatRowStatus.setStatus('current')
pdnAtmVclCurrTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 3), )
if mibBuilder.loadTexts: pdnAtmVclCurrTable.setStatus('current')
pdnAtmVclCurrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVclVpi"), (0, "ATM-MIB", "atmVclVci"))
if mibBuilder.loadTexts: pdnAtmVclCurrEntry.setStatus('current')
pdnAtmVclCurrElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 3, 1, 1), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclCurrElapsedTime.setStatus('current')
pdnAtmVclCurrTotalCellIns = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclCurrTotalCellIns.setStatus('current')
pdnAtmVclCurrTotalInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclCurrTotalInDiscards.setStatus('current')
pdnAtmVclCurrTotalCellOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclCurrTotalCellOuts.setStatus('current')
pdnAtmVclCurrTotalOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclCurrTotalOutDiscards.setStatus('current')
pdnAtmVclHistTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 4), )
if mibBuilder.loadTexts: pdnAtmVclHistTable.setStatus('current')
pdnAtmVclHistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ATM-MIB", "atmVclVpi"), (0, "ATM-MIB", "atmVclVci"), (0, "PDN-ATMSTATS-MIB", "pdnAtmVclHistIndex"))
if mibBuilder.loadTexts: pdnAtmVclHistEntry.setStatus('current')
pdnAtmVclHistIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: pdnAtmVclHistIndex.setStatus('current')
pdnAtmVclHistElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 4, 1, 2), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclHistElapsedTime.setStatus('current')
pdnAtmVclHistTotalCellIns = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclHistTotalCellIns.setStatus('current')
pdnAtmVclHistTotalInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclHistTotalInDiscards.setStatus('current')
pdnAtmVclHistTotalCellOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclHistTotalCellOuts.setStatus('current')
pdnAtmVclHistTotalOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 2, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmVclHistTotalOutDiscards.setStatus('current')
pdnAtmStatTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 3, 1), )
if mibBuilder.loadTexts: pdnAtmStatTable.setStatus('current')
pdnAtmStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnAtmStatEntry.setStatus('current')
pdnAtmStatHECErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmStatHECErrors.setStatus('current')
pdnAtmStatLCDErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 11, 3, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAtmStatLCDErrors.setStatus('current')
mibBuilder.exportSymbols("PDN-ATMSTATS-MIB", pdnAtmVclStatEntry=pdnAtmVclStatEntry, pdnAtmVclHistTotalCellOuts=pdnAtmVclHistTotalCellOuts, pdnAtmVplStatTable=pdnAtmVplStatTable, pdnAtmVclStatVpi=pdnAtmVclStatVpi, pdnAtmVclHistTotalOutDiscards=pdnAtmVclHistTotalOutDiscards, pdnAtmVclHistTotalInDiscards=pdnAtmVclHistTotalInDiscards, pdnAtmVclStatVci=pdnAtmVclStatVci, pdnAtmVclStatClp0CellOuts=pdnAtmVclStatClp0CellOuts, pdnAtmVclStatTotalCellIns=pdnAtmVclStatTotalCellIns, pdnAtmVclStatTaggedOuts=pdnAtmVclStatTaggedOuts, pdnAtmVplStatTotalDiscards=pdnAtmVplStatTotalDiscards, pdnAtmVclCurrElapsedTime=pdnAtmVclCurrElapsedTime, pdnAtmVplStatEntry=pdnAtmVplStatEntry, pdnAtmStatHECErrors=pdnAtmStatHECErrors, pdnAtmStatsMIB=pdnAtmStatsMIB, pdnAtmVclStatTotalCellOuts=pdnAtmVclStatTotalCellOuts, pdnAtmVplStatIfIndex=pdnAtmVplStatIfIndex, pdnAtmVplStatTotalCellIns=pdnAtmVplStatTotalCellIns, pdnAtmStatTable=pdnAtmStatTable, pdnAtmVclStatIfIndex=pdnAtmVclStatIfIndex, pdnAtmVclCurrTable=pdnAtmVclCurrTable, pdnAtmVplStatClp0CellOuts=pdnAtmVplStatClp0CellOuts, PYSNMP_MODULE_ID=pdnAtmStatsMIB, pdnAtmVplStatClp0CellIns=pdnAtmVplStatClp0CellIns, pdnAtmVclStatClp0CellIns=pdnAtmVclStatClp0CellIns, pdnAtmVclStatClp0Discards=pdnAtmVclStatClp0Discards, pdnAtmVclHistIndex=pdnAtmVclHistIndex, pdnAtmVplStatTotalCellOuts=pdnAtmVplStatTotalCellOuts, pdnAtmVclCurrTotalCellOuts=pdnAtmVclCurrTotalCellOuts, pdnAtmVclCurrTotalCellIns=pdnAtmVclCurrTotalCellIns, pdnAtmVclStatTable=pdnAtmVclStatTable, pdnAtmVplStatVpi=pdnAtmVplStatVpi, pdnAtmVclHistTable=pdnAtmVclHistTable, pdnAtmStat=pdnAtmStat, pdnAtmStatLCDErrors=pdnAtmStatLCDErrors, pdnAtmVclCurrTotalOutDiscards=pdnAtmVclCurrTotalOutDiscards, pdnAtmVclCurrEntry=pdnAtmVclCurrEntry, pdnAtmVclHistTotalCellIns=pdnAtmVclHistTotalCellIns, pdnAtmVclHistElapsedTime=pdnAtmVclHistElapsedTime, pdnAtmVclStatRowStatus=pdnAtmVclStatRowStatus, pdnAtmVplStatClp0Discards=pdnAtmVplStatClp0Discards, pdnAtmVclStatTotalDiscards=pdnAtmVclStatTotalDiscards, pdnAtmVclStat=pdnAtmVclStat, pdnAtmVclHistEntry=pdnAtmVclHistEntry, pdnAtmStatEntry=pdnAtmStatEntry, pdnAtmVplStatTaggedOuts=pdnAtmVplStatTaggedOuts, pdnAtmVplStat=pdnAtmVplStat, pdnAtmVclCurrTotalInDiscards=pdnAtmVclCurrTotalInDiscards)
