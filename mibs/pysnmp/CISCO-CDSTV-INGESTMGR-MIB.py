#
# PySNMP MIB module CISCO-CDSTV-INGESTMGR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-CDSTV-INGESTMGR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:35:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoURLString, TimeIntervalSec, CiscoURLStringOrEmpty, TimeIntervalMin = mibBuilder.importSymbols("CISCO-TC", "CiscoURLString", "TimeIntervalSec", "CiscoURLStringOrEmpty", "TimeIntervalMin")
InetAddressType, InetAddress, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetPortNumber")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Gauge32, Counter64, ObjectIdentity, Counter32, Bits, iso, MibIdentifier, NotificationType, ModuleIdentity, TimeTicks, Unsigned32, Integer32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "ObjectIdentity", "Counter32", "Bits", "iso", "MibIdentifier", "NotificationType", "ModuleIdentity", "TimeTicks", "Unsigned32", "Integer32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
ciscoCdstvIngestmgrMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 739))
ciscoCdstvIngestmgrMIB.setRevisions(('2010-05-27 00:00',))
if mibBuilder.loadTexts: ciscoCdstvIngestmgrMIB.setLastUpdated('201005270000Z')
if mibBuilder.loadTexts: ciscoCdstvIngestmgrMIB.setOrganization('Cisco Systems, Inc.')
ciscoCdstvIngestMgrMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 739, 0))
ciscoCdstvIngestMgrMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 739, 1))
ciscoCdstvIngestMgrMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 739, 2))
ciscoCdstvIngestMgrMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 739, 2, 1))
cdstvIngestMgrGeneralSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 1))
cdstvIngestMgrIngestSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 2))
cdstvIngestMgrBackOfficeSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 3))
cdstvIngestMgrContentStoreSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 4))
cdstvIngestMgrEncryptionSettings = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 5))
cdstvIngestMgrHostAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 1, 1), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrHostAddressType.setStatus('current')
cdstvIngestMgrHostAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 1, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrHostAddress.setStatus('current')
cdstvIngestMgrPort = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 1, 3), InetPortNumber().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrPort.setStatus('current')
cdstvIngestMgrFsiCallbackPort = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 1, 4), InetPortNumber().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrFsiCallbackPort.setStatus('current')
cdstvIngestMgrAdditionalPackageWindow = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 1, 5), Unsigned32()).setUnits('days').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrAdditionalPackageWindow.setStatus('current')
cdstvIngestMgrFtpTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 1, 6), TimeIntervalSec()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrFtpTimeout.setStatus('current')
cdstvIngestMgrUseAssetIdEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrUseAssetIdEnable.setStatus('current')
cdstvIngestMgrManageCorbaServices = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrManageCorbaServices.setStatus('current')
cdstvIngestMgrRequireNotifyService = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrRequireNotifyService.setStatus('current')
cdstvIngestMgrDebugLevel = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("errors", 1), ("all", 2), ("off", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrDebugLevel.setStatus('current')
cdstvIngestMgrMetaDataPublish = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrMetaDataPublish.setStatus('current')
cdstvIngestMgrMetaPublishUrl = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 1, 12), CiscoURLString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrMetaPublishUrl.setStatus('current')
cdstvIngestMgrMetaPublishBackupUrl = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 1, 13), CiscoURLStringOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrMetaPublishBackupUrl.setStatus('current')
cdstvIngestMgrIngestInterface = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 2, 1), Bits().clone(namedValues=NamedValues(("isa", 0), ("ciscoSoap", 1), ("prodisSoap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrIngestInterface.setStatus('current')
cdstvIngestMgrCiscoSoapUrl = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 2, 2), CiscoURLStringOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrCiscoSoapUrl.setStatus('current')
cdstvIngestMgrProdisSoapUrl = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 2, 3), CiscoURLStringOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrProdisSoapUrl.setStatus('current')
cdstvIngestMgrBackOfficeMaxRetries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 3, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrBackOfficeMaxRetries.setStatus('current')
cdstvIngestMgrBackOfficeRetryInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 3, 2), TimeIntervalMin()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrBackOfficeRetryInterval.setStatus('current')
cdstvIngestMgrBackOfficeTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 3, 3), TimeIntervalSec()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrBackOfficeTimeout.setStatus('current')
cdstvIngestMgrBackOfficeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 3, 4), )
if mibBuilder.loadTexts: cdstvIngestMgrBackOfficeTable.setStatus('current')
cdstvIngestMgrBackOfficeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 3, 4, 1), ).setIndexNames((0, "CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrBackOfficeIndex"))
if mibBuilder.loadTexts: cdstvIngestMgrBackOfficeEntry.setStatus('current')
cdstvIngestMgrBackOfficeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 3, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cdstvIngestMgrBackOfficeIndex.setStatus('current')
cdstvIngestMgrBackOfficeType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("totalManage", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrBackOfficeType.setStatus('current')
cdstvIngestMgrBackOfficeUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 3, 4, 1, 3), CiscoURLStringOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrBackOfficeUrl.setStatus('current')
cdstvIngestMgrContentStore = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("isa", 2), ("fsi", 3), ("ngod", 4), ("openStream", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrContentStore.setStatus('current')
cdstvIngestMgrContentStoreUrl = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 4, 2), CiscoURLStringOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrContentStoreUrl.setStatus('current')
cdstvIngestMgrEncryptionType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("verimatrix", 2), ("widevine", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrEncryptionType.setStatus('current')
cdstvIngestMgrEncryptionTargetUrl = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 5, 2), CiscoURLStringOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrEncryptionTargetUrl.setStatus('current')
cdstvIngestMgrEncryptionRetrievalUrl = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 739, 1, 5, 3), CiscoURLStringOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvIngestMgrEncryptionRetrievalUrl.setStatus('current')
ciscoCdstvIngestMgrMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 739, 2, 2))
ciscoCdstvIngestMgrMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 739, 2, 1, 1)).setObjects(("CISCO-CDSTV-INGESTMGR-MIB", "ciscoCdstvIngestMgrMIBMainObjectGroup"), ("CISCO-CDSTV-INGESTMGR-MIB", "ciscoCdstvIngestMgrMIBIngestSettingsGroup"), ("CISCO-CDSTV-INGESTMGR-MIB", "ciscoCdstvIngestMgrMIBBackOfficeSettingsGroup"), ("CISCO-CDSTV-INGESTMGR-MIB", "ciscoCdstvIngestMgrMIBContentStoreSettingsGroup"), ("CISCO-CDSTV-INGESTMGR-MIB", "ciscoCdstvIngestMgrMIBEncryptionSettingsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdstvIngestMgrMIBCompliance = ciscoCdstvIngestMgrMIBCompliance.setStatus('current')
ciscoCdstvIngestMgrMIBMainObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 739, 2, 2, 1)).setObjects(("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrHostAddress"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrPort"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrFsiCallbackPort"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrAdditionalPackageWindow"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrFtpTimeout"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrUseAssetIdEnable"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrManageCorbaServices"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrRequireNotifyService"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrDebugLevel"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrMetaDataPublish"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrMetaPublishUrl"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrMetaPublishBackupUrl"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrHostAddressType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdstvIngestMgrMIBMainObjectGroup = ciscoCdstvIngestMgrMIBMainObjectGroup.setStatus('current')
ciscoCdstvIngestMgrMIBIngestSettingsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 739, 2, 2, 2)).setObjects(("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrIngestInterface"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrCiscoSoapUrl"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrProdisSoapUrl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdstvIngestMgrMIBIngestSettingsGroup = ciscoCdstvIngestMgrMIBIngestSettingsGroup.setStatus('current')
ciscoCdstvIngestMgrMIBBackOfficeSettingsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 739, 2, 2, 3)).setObjects(("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrBackOfficeMaxRetries"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrBackOfficeRetryInterval"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrBackOfficeTimeout"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrBackOfficeType"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrBackOfficeUrl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdstvIngestMgrMIBBackOfficeSettingsGroup = ciscoCdstvIngestMgrMIBBackOfficeSettingsGroup.setStatus('current')
ciscoCdstvIngestMgrMIBContentStoreSettingsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 739, 2, 2, 4)).setObjects(("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrContentStore"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrContentStoreUrl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdstvIngestMgrMIBContentStoreSettingsGroup = ciscoCdstvIngestMgrMIBContentStoreSettingsGroup.setStatus('current')
ciscoCdstvIngestMgrMIBEncryptionSettingsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 739, 2, 2, 5)).setObjects(("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrEncryptionType"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrEncryptionTargetUrl"), ("CISCO-CDSTV-INGESTMGR-MIB", "cdstvIngestMgrEncryptionRetrievalUrl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdstvIngestMgrMIBEncryptionSettingsGroup = ciscoCdstvIngestMgrMIBEncryptionSettingsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-CDSTV-INGESTMGR-MIB", cdstvIngestMgrEncryptionType=cdstvIngestMgrEncryptionType, cdstvIngestMgrProdisSoapUrl=cdstvIngestMgrProdisSoapUrl, cdstvIngestMgrManageCorbaServices=cdstvIngestMgrManageCorbaServices, cdstvIngestMgrBackOfficeSettings=cdstvIngestMgrBackOfficeSettings, cdstvIngestMgrMetaPublishBackupUrl=cdstvIngestMgrMetaPublishBackupUrl, ciscoCdstvIngestmgrMIB=ciscoCdstvIngestmgrMIB, cdstvIngestMgrIngestInterface=cdstvIngestMgrIngestInterface, cdstvIngestMgrFsiCallbackPort=cdstvIngestMgrFsiCallbackPort, ciscoCdstvIngestMgrMIBBackOfficeSettingsGroup=ciscoCdstvIngestMgrMIBBackOfficeSettingsGroup, cdstvIngestMgrEncryptionRetrievalUrl=cdstvIngestMgrEncryptionRetrievalUrl, cdstvIngestMgrDebugLevel=cdstvIngestMgrDebugLevel, ciscoCdstvIngestMgrMIBIngestSettingsGroup=ciscoCdstvIngestMgrMIBIngestSettingsGroup, cdstvIngestMgrContentStoreUrl=cdstvIngestMgrContentStoreUrl, ciscoCdstvIngestMgrMIBEncryptionSettingsGroup=ciscoCdstvIngestMgrMIBEncryptionSettingsGroup, ciscoCdstvIngestMgrMIBMainObjectGroup=ciscoCdstvIngestMgrMIBMainObjectGroup, cdstvIngestMgrCiscoSoapUrl=cdstvIngestMgrCiscoSoapUrl, cdstvIngestMgrBackOfficeEntry=cdstvIngestMgrBackOfficeEntry, cdstvIngestMgrBackOfficeIndex=cdstvIngestMgrBackOfficeIndex, cdstvIngestMgrEncryptionTargetUrl=cdstvIngestMgrEncryptionTargetUrl, cdstvIngestMgrFtpTimeout=cdstvIngestMgrFtpTimeout, ciscoCdstvIngestMgrMIBContentStoreSettingsGroup=ciscoCdstvIngestMgrMIBContentStoreSettingsGroup, cdstvIngestMgrMetaPublishUrl=cdstvIngestMgrMetaPublishUrl, ciscoCdstvIngestMgrMIBNotifs=ciscoCdstvIngestMgrMIBNotifs, cdstvIngestMgrBackOfficeTimeout=cdstvIngestMgrBackOfficeTimeout, cdstvIngestMgrBackOfficeType=cdstvIngestMgrBackOfficeType, cdstvIngestMgrBackOfficeUrl=cdstvIngestMgrBackOfficeUrl, cdstvIngestMgrContentStore=cdstvIngestMgrContentStore, ciscoCdstvIngestMgrMIBCompliances=ciscoCdstvIngestMgrMIBCompliances, cdstvIngestMgrMetaDataPublish=cdstvIngestMgrMetaDataPublish, cdstvIngestMgrHostAddress=cdstvIngestMgrHostAddress, PYSNMP_MODULE_ID=ciscoCdstvIngestmgrMIB, ciscoCdstvIngestMgrMIBCompliance=ciscoCdstvIngestMgrMIBCompliance, cdstvIngestMgrContentStoreSettings=cdstvIngestMgrContentStoreSettings, ciscoCdstvIngestMgrMIBObjects=ciscoCdstvIngestMgrMIBObjects, cdstvIngestMgrAdditionalPackageWindow=cdstvIngestMgrAdditionalPackageWindow, cdstvIngestMgrGeneralSettings=cdstvIngestMgrGeneralSettings, cdstvIngestMgrPort=cdstvIngestMgrPort, cdstvIngestMgrBackOfficeMaxRetries=cdstvIngestMgrBackOfficeMaxRetries, ciscoCdstvIngestMgrMIBGroups=ciscoCdstvIngestMgrMIBGroups, cdstvIngestMgrBackOfficeTable=cdstvIngestMgrBackOfficeTable, cdstvIngestMgrUseAssetIdEnable=cdstvIngestMgrUseAssetIdEnable, cdstvIngestMgrEncryptionSettings=cdstvIngestMgrEncryptionSettings, cdstvIngestMgrRequireNotifyService=cdstvIngestMgrRequireNotifyService, cdstvIngestMgrBackOfficeRetryInterval=cdstvIngestMgrBackOfficeRetryInterval, cdstvIngestMgrHostAddressType=cdstvIngestMgrHostAddressType, ciscoCdstvIngestMgrMIBConform=ciscoCdstvIngestMgrMIBConform, cdstvIngestMgrIngestSettings=cdstvIngestMgrIngestSettings)
