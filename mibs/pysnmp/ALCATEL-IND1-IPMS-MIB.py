#
# PySNMP MIB module ALCATEL-IND1-IPMS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALCATEL-IND1-IPMS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:02:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
softentIND1Ipms, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1Ipms")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, TimeTicks, Counter32, Counter64, MibIdentifier, Bits, Integer32, ObjectIdentity, NotificationType, Gauge32, iso, ModuleIdentity, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "TimeTicks", "Counter32", "Counter64", "MibIdentifier", "Bits", "Integer32", "ObjectIdentity", "NotificationType", "Gauge32", "iso", "ModuleIdentity", "Unsigned32")
TextualConvention, RowStatus, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "MacAddress")
alcatelIND1IPMSMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1))
alcatelIND1IPMSMIB.setRevisions(('2007-04-03 00:00',))
if mibBuilder.loadTexts: alcatelIND1IPMSMIB.setLastUpdated('200704030000Z')
if mibBuilder.loadTexts: alcatelIND1IPMSMIB.setOrganization('Alcatel-Lucent')
alcatelIND1IPMSMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1))
alaIpmsConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 1))
alaIpmsStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpmsStatus.setStatus('current')
alaIpmsLeaveTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 1, 2), Unsigned32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpmsLeaveTimeout.setStatus('current')
alaIpmsQueryInterval = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 1, 3), Unsigned32().clone(125)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpmsQueryInterval.setStatus('current')
alaIpmsNeighborTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 1, 4), Unsigned32().clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpmsNeighborTimer.setStatus('current')
alaIpmsQuerierTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 1, 5), Unsigned32().clone(260)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpmsQuerierTimer.setStatus('current')
alaIpmsMembershipTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 1, 6), Unsigned32().clone(260)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpmsMembershipTimer.setStatus('current')
alaIpmsPriority = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 3, 2, 1, 0))).clone(namedValues=NamedValues(("unsupported", 4), ("urgent", 3), ("high", 2), ("medium", 1), ("low", 0))).clone('low')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpmsPriority.setStatus('current')
alaIpmsMaxBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 1, 8), Unsigned32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpmsMaxBandwidth.setStatus('current')
alaIpmsHardwareRoute = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unsupported", 0), ("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpmsHardwareRoute.setStatus('current')
alaIpmsIGMPMembershipProxyVersion = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("igmpv1", 1), ("igmpv2", 2), ("igmpv3", 3))).clone('igmpv2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpmsIGMPMembershipProxyVersion.setStatus('current')
alaIpmsOtherQuerierTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 1, 11), Unsigned32().clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpmsOtherQuerierTimer.setStatus('current')
alaIpmsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 2))
alaIpmsGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 2, 1), )
if mibBuilder.loadTexts: alaIpmsGroupTable.setStatus('current')
alaIpmsGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 2, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsGroupDestIpAddr"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsGroupClientIpAddr"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsGroupClientVlan"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsGroupClientIfIndex"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsGroupClientVci"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsGroupIGMPVersion"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsGroupIGMPv3SrcIP"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsGroupIGMPv3SrcType"))
if mibBuilder.loadTexts: alaIpmsGroupEntry.setStatus('current')
alaIpmsGroupDestIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 2, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: alaIpmsGroupDestIpAddr.setStatus('current')
alaIpmsGroupClientIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 2, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: alaIpmsGroupClientIpAddr.setStatus('current')
alaIpmsGroupClientMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 2, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsGroupClientMacAddr.setStatus('current')
alaIpmsGroupClientVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaIpmsGroupClientVlan.setStatus('current')
alaIpmsGroupClientIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 2, 1, 1, 5), InterfaceIndex())
if mibBuilder.loadTexts: alaIpmsGroupClientIfIndex.setStatus('current')
alaIpmsGroupClientVci = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 2, 1, 1, 6), Unsigned32())
if mibBuilder.loadTexts: alaIpmsGroupClientVci.setStatus('current')
alaIpmsGroupIGMPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("igmpv1", 1), ("igmpv2", 2), ("igmpv3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsGroupIGMPVersion.setStatus('current')
alaIpmsGroupIGMPv3SrcIP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 2, 1, 1, 8), IpAddress())
if mibBuilder.loadTexts: alaIpmsGroupIGMPv3SrcIP.setStatus('current')
alaIpmsGroupIGMPv3SrcType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("na", 0), ("include", 1), ("exclude", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsGroupIGMPv3SrcType.setStatus('current')
alaIpmsGroupIGMPv3SrcTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 2, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsGroupIGMPv3SrcTimeout.setStatus('current')
alaIpmsGroupIGMPv3GroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("na", 0), ("include", 1), ("exclude", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsGroupIGMPv3GroupType.setStatus('current')
alaIpmsGroupTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 2, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsGroupTimeout.setStatus('current')
alaIpmsNeighbor = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 3))
alaIpmsNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 3, 1), )
if mibBuilder.loadTexts: alaIpmsNeighborTable.setStatus('current')
alaIpmsNeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 3, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsNeighborIpAddr"))
if mibBuilder.loadTexts: alaIpmsNeighborEntry.setStatus('current')
alaIpmsNeighborIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 3, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: alaIpmsNeighborIpAddr.setStatus('current')
alaIpmsNeighborVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsNeighborVlan.setStatus('current')
alaIpmsNeighborIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 3, 1, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsNeighborIfIndex.setStatus('current')
alaIpmsNeighborVci = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 3, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsNeighborVci.setStatus('current')
alaIpmsNeighborType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("native", 0), ("ipip", 1), ("pim", 2), ("cmm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsNeighborType.setStatus('current')
alaIpmsNeighborTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 3, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsNeighborTimeout.setStatus('current')
alaIpmsStaticNeighbor = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 4))
alaIpmsStaticNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 4, 1), )
if mibBuilder.loadTexts: alaIpmsStaticNeighborTable.setStatus('current')
alaIpmsStaticNeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 4, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsStaticNeighborVlan"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsStaticNeighborIfIndex"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsStaticNeighborVci"))
if mibBuilder.loadTexts: alaIpmsStaticNeighborEntry.setStatus('current')
alaIpmsStaticNeighborVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaIpmsStaticNeighborVlan.setStatus('current')
alaIpmsStaticNeighborIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 4, 1, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: alaIpmsStaticNeighborIfIndex.setStatus('current')
alaIpmsStaticNeighborVci = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 4, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: alaIpmsStaticNeighborVci.setStatus('current')
alaIpmsStaticNeighborIGMPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("igmpv2", 2), ("igmpv3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpmsStaticNeighborIGMPVersion.setStatus('current')
alaIpmsStaticNeighborRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 4, 1, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpmsStaticNeighborRowStatus.setStatus('current')
alaIpmsQuerier = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 5))
alaIpmsQuerierTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 5, 1), )
if mibBuilder.loadTexts: alaIpmsQuerierTable.setStatus('current')
alaIpmsQuerierEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 5, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsQuerierIpAddr"))
if mibBuilder.loadTexts: alaIpmsQuerierEntry.setStatus('current')
alaIpmsQuerierIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 5, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: alaIpmsQuerierIpAddr.setStatus('current')
alaIpmsQuerierVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsQuerierVlan.setStatus('current')
alaIpmsQuerierIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 5, 1, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsQuerierIfIndex.setStatus('current')
alaIpmsQuerierVci = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 5, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsQuerierVci.setStatus('current')
alaIpmsQuerierType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("native", 0), ("ipip", 1), ("pim", 2), ("cmm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsQuerierType.setStatus('current')
alaIpmsQuerierTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 5, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsQuerierTimeout.setStatus('current')
alaIpmsStaticQuerier = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 6))
alaIpmsStaticQuerierTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 6, 1), )
if mibBuilder.loadTexts: alaIpmsStaticQuerierTable.setStatus('current')
alaIpmsStaticQuerierEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 6, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsStaticQuerierVlan"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsStaticQuerierIfIndex"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsStaticQuerierVci"))
if mibBuilder.loadTexts: alaIpmsStaticQuerierEntry.setStatus('current')
alaIpmsStaticQuerierVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaIpmsStaticQuerierVlan.setStatus('current')
alaIpmsStaticQuerierIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 6, 1, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: alaIpmsStaticQuerierIfIndex.setStatus('current')
alaIpmsStaticQuerierVci = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 6, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: alaIpmsStaticQuerierVci.setStatus('current')
alaIpmsStaticQuerierIGMPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("igmpv2", 2), ("igmpv3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpmsStaticQuerierIGMPVersion.setStatus('current')
alaIpmsStaticQuerierRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 6, 1, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIpmsStaticQuerierRowStatus.setStatus('current')
alaIpmsSource = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 7))
alaIpmsSourceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 7, 1), )
if mibBuilder.loadTexts: alaIpmsSourceTable.setStatus('current')
alaIpmsSourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 7, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsSourceDestIpAddr"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsSourceSrcIpAddr"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsSourceSrcVlan"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsSourceSrcIfIndex"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsSourceUniIpAddr"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsSourceSrcVci"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsSourceSrcType"))
if mibBuilder.loadTexts: alaIpmsSourceEntry.setStatus('current')
alaIpmsSourceDestIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 7, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: alaIpmsSourceDestIpAddr.setStatus('current')
alaIpmsSourceSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 7, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: alaIpmsSourceSrcIpAddr.setStatus('current')
alaIpmsSourceSrcMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 7, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsSourceSrcMacAddr.setStatus('current')
alaIpmsSourceSrcVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaIpmsSourceSrcVlan.setStatus('current')
alaIpmsSourceSrcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 7, 1, 1, 5), InterfaceIndex())
if mibBuilder.loadTexts: alaIpmsSourceSrcIfIndex.setStatus('current')
alaIpmsSourceUniIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 7, 1, 1, 6), IpAddress())
if mibBuilder.loadTexts: alaIpmsSourceUniIpAddr.setStatus('current')
alaIpmsSourceSrcVci = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 7, 1, 1, 7), Unsigned32())
if mibBuilder.loadTexts: alaIpmsSourceSrcVci.setStatus('current')
alaIpmsSourceSrcType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("native", 0), ("ipip", 1), ("pim", 2), ("cmm", 3))))
if mibBuilder.loadTexts: alaIpmsSourceSrcType.setStatus('current')
alaIpmsSourceTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 7, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsSourceTimeout.setStatus('current')
alaIpmsForward = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 8))
alaIpmsForwardTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 8, 1), )
if mibBuilder.loadTexts: alaIpmsForwardTable.setStatus('current')
alaIpmsForwardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 8, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsForwardDestIpAddr"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsForwardSrcIpAddr"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsForwardDestVlan"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsForwardSrcVlan"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsForwardSrcIfIndex"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsForwardUniIpAddr"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsForwardSrcVci"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsForwardDestType"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsForwardSrcType"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsForwardDestIfIndex"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsForwardDestTunIpAddr"))
if mibBuilder.loadTexts: alaIpmsForwardEntry.setStatus('current')
alaIpmsForwardDestIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 8, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: alaIpmsForwardDestIpAddr.setStatus('current')
alaIpmsForwardSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 8, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: alaIpmsForwardSrcIpAddr.setStatus('current')
alaIpmsForwardDestVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaIpmsForwardDestVlan.setStatus('current')
alaIpmsForwardSrcVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaIpmsForwardSrcVlan.setStatus('current')
alaIpmsForwardSrcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 8, 1, 1, 5), InterfaceIndex())
if mibBuilder.loadTexts: alaIpmsForwardSrcIfIndex.setStatus('current')
alaIpmsForwardUniIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 8, 1, 1, 6), IpAddress())
if mibBuilder.loadTexts: alaIpmsForwardUniIpAddr.setStatus('current')
alaIpmsForwardSrcVci = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 8, 1, 1, 7), Unsigned32())
if mibBuilder.loadTexts: alaIpmsForwardSrcVci.setStatus('current')
alaIpmsForwardDestType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 8, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("native", 0), ("ipip", 1), ("pim", 2), ("cmm", 3))))
if mibBuilder.loadTexts: alaIpmsForwardDestType.setStatus('current')
alaIpmsForwardSrcType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 8, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("native", 0), ("ipip", 1), ("pim", 2), ("cmm", 3))))
if mibBuilder.loadTexts: alaIpmsForwardSrcType.setStatus('current')
alaIpmsForwardDestTunIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 8, 1, 1, 10), IpAddress())
if mibBuilder.loadTexts: alaIpmsForwardDestTunIpAddr.setStatus('current')
alaIpmsForwardSrcTunIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 8, 1, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsForwardSrcTunIpAddr.setStatus('current')
alaIpmsForwardRtrMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 8, 1, 1, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsForwardRtrMacAddr.setStatus('current')
alaIpmsForwardRtrTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 8, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsForwardRtrTtl.setStatus('current')
alaIpmsForwardDestIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 8, 1, 1, 14), InterfaceIndex())
if mibBuilder.loadTexts: alaIpmsForwardDestIfIndex.setStatus('current')
alaIpmsPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 9))
alaIpmsPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 9, 1), )
if mibBuilder.loadTexts: alaIpmsPolicyTable.setStatus('current')
alaIpmsPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 9, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsPolicyDestIpAddr"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsPolicySrcIpAddr"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsPolicySrcVlan"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsPolicySrcIfIndex"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsPolicyUniIpAddr"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsPolicySrcVci"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsPolicySrcType"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsPolicyPolicy"))
if mibBuilder.loadTexts: alaIpmsPolicyEntry.setStatus('current')
alaIpmsPolicyDestIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 9, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: alaIpmsPolicyDestIpAddr.setStatus('current')
alaIpmsPolicySrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 9, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: alaIpmsPolicySrcIpAddr.setStatus('current')
alaIpmsPolicySrcMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 9, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsPolicySrcMacAddr.setStatus('current')
alaIpmsPolicySrcVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaIpmsPolicySrcVlan.setStatus('current')
alaIpmsPolicySrcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 9, 1, 1, 5), InterfaceIndex())
if mibBuilder.loadTexts: alaIpmsPolicySrcIfIndex.setStatus('current')
alaIpmsPolicyUniIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 9, 1, 1, 6), IpAddress())
if mibBuilder.loadTexts: alaIpmsPolicyUniIpAddr.setStatus('current')
alaIpmsPolicySrcVci = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 9, 1, 1, 7), Unsigned32())
if mibBuilder.loadTexts: alaIpmsPolicySrcVci.setStatus('current')
alaIpmsPolicySrcType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 9, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("native", 0), ("ipip", 1), ("pim", 2), ("cmm", 3))))
if mibBuilder.loadTexts: alaIpmsPolicySrcType.setStatus('current')
alaIpmsPolicyPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 9, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("membership", 1))))
if mibBuilder.loadTexts: alaIpmsPolicyPolicy.setStatus('current')
alaIpmsPolicyDisposition = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 9, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("drop", 0), ("accept", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsPolicyDisposition.setStatus('current')
alaIpmsPolicyTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 9, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIpmsPolicyTimeout.setStatus('current')
alaIpmsStaticMember = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 10))
alaIpmsStaticMemberTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 10, 1), )
if mibBuilder.loadTexts: alaIpmsStaticMemberTable.setStatus('current')
alaIpmsStaticMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 10, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsStaticMemberGroupAddr"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsStaticMemberVlan"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsStaticMemberIfIndex"), (0, "ALCATEL-IND1-IPMS-MIB", "alaIpmsStaticMemberVci"))
if mibBuilder.loadTexts: alaIpmsStaticMemberEntry.setStatus('current')
alaIpmsStaticMemberGroupAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 10, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: alaIpmsStaticMemberGroupAddr.setStatus('current')
alaIpmsStaticMemberIGMPVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("igmpv2", 2), ("igmpv3", 3))))
if mibBuilder.loadTexts: alaIpmsStaticMemberIGMPVersion.setStatus('current')
alaIpmsStaticMemberVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaIpmsStaticMemberVlan.setStatus('current')
alaIpmsStaticMemberIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 10, 1, 1, 4), InterfaceIndex())
if mibBuilder.loadTexts: alaIpmsStaticMemberIfIndex.setStatus('current')
alaIpmsStaticMemberVci = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 10, 1, 1, 5), Unsigned32())
if mibBuilder.loadTexts: alaIpmsStaticMemberVci.setStatus('current')
alaIpmsStaticMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 1, 10, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIpmsStaticMemberRowStatus.setStatus('current')
alcatelIND1IPMSMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 2))
alcatelIND1IPMSMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 2, 1))
alcatelIND1IPMSMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 2, 2))
alaIpmsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-IPMS-MIB", "alaIpmsConfig"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsGroup"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsNeighbor"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsStaticNeighbor"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsQuerier"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsStaticQuerier"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsSource"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsForward"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsPolicy"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpmsCompliance = alaIpmsCompliance.setStatus('current')
alaIpmsConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-IPMS-MIB", "alaIpmsStatus"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsLeaveTimeout"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsQueryInterval"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsNeighborTimer"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsQuerierTimer"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsMembershipTimer"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsOtherQuerierTimer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpmsConfigGroup = alaIpmsConfigGroup.setStatus('current')
alaIpmsGroupGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 2, 2, 2)).setObjects(("ALCATEL-IND1-IPMS-MIB", "alaIpmsGroupClientMacAddr"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsGroupTimeout"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsGroupIGMPv3GroupType"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsGroupIGMPv3SrcTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpmsGroupGroup = alaIpmsGroupGroup.setStatus('current')
alaIpmsNeighborGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 2, 2, 3)).setObjects(("ALCATEL-IND1-IPMS-MIB", "alaIpmsNeighborVlan"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsNeighborIfIndex"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsNeighborVci"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsNeighborType"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsNeighborTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpmsNeighborGroup = alaIpmsNeighborGroup.setStatus('current')
alaIpmsStaticNeighborGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 2, 2, 4)).setObjects(("ALCATEL-IND1-IPMS-MIB", "alaIpmsStaticNeighborRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpmsStaticNeighborGroup = alaIpmsStaticNeighborGroup.setStatus('current')
alaIpmsQuerierGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 2, 2, 5)).setObjects(("ALCATEL-IND1-IPMS-MIB", "alaIpmsQuerierVlan"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsQuerierIfIndex"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsQuerierVci"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsQuerierType"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsQuerierTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpmsQuerierGroup = alaIpmsQuerierGroup.setStatus('current')
alaIpmsStaticQuerierGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 2, 2, 6)).setObjects(("ALCATEL-IND1-IPMS-MIB", "alaIpmsStaticQuerierRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpmsStaticQuerierGroup = alaIpmsStaticQuerierGroup.setStatus('current')
alaIpmsSourceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 2, 2, 7)).setObjects(("ALCATEL-IND1-IPMS-MIB", "alaIpmsSourceSrcMacAddr"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsSourceTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpmsSourceGroup = alaIpmsSourceGroup.setStatus('current')
alaIpmsForwardGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 2, 2, 8)).setObjects(("ALCATEL-IND1-IPMS-MIB", "alaIpmsForwardSrcTunIpAddr"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsForwardRtrMacAddr"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsForwardRtrTtl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpmsForwardGroup = alaIpmsForwardGroup.setStatus('current')
alaIpmsPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 18, 1, 2, 2, 9)).setObjects(("ALCATEL-IND1-IPMS-MIB", "alaIpmsPolicySrcMacAddr"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsPolicyDisposition"), ("ALCATEL-IND1-IPMS-MIB", "alaIpmsPolicyTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIpmsPolicyGroup = alaIpmsPolicyGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-IPMS-MIB", alaIpmsStaticNeighborRowStatus=alaIpmsStaticNeighborRowStatus, alaIpmsQuerierVlan=alaIpmsQuerierVlan, alaIpmsStaticQuerier=alaIpmsStaticQuerier, alaIpmsGroupClientMacAddr=alaIpmsGroupClientMacAddr, alaIpmsNeighbor=alaIpmsNeighbor, alaIpmsStaticNeighborVci=alaIpmsStaticNeighborVci, alaIpmsPolicyUniIpAddr=alaIpmsPolicyUniIpAddr, alaIpmsForwardSrcVlan=alaIpmsForwardSrcVlan, alaIpmsGroupDestIpAddr=alaIpmsGroupDestIpAddr, alaIpmsNeighborVci=alaIpmsNeighborVci, alaIpmsStaticNeighbor=alaIpmsStaticNeighbor, alaIpmsGroupGroup=alaIpmsGroupGroup, alaIpmsForwardDestVlan=alaIpmsForwardDestVlan, alaIpmsStaticQuerierIfIndex=alaIpmsStaticQuerierIfIndex, alcatelIND1IPMSMIBCompliances=alcatelIND1IPMSMIBCompliances, alaIpmsSourceSrcVlan=alaIpmsSourceSrcVlan, alaIpmsForwardSrcIfIndex=alaIpmsForwardSrcIfIndex, alaIpmsHardwareRoute=alaIpmsHardwareRoute, alaIpmsNeighborTimeout=alaIpmsNeighborTimeout, alaIpmsStaticMemberIGMPVersion=alaIpmsStaticMemberIGMPVersion, alaIpmsStaticNeighborTable=alaIpmsStaticNeighborTable, alaIpmsNeighborIpAddr=alaIpmsNeighborIpAddr, alaIpmsForwardDestTunIpAddr=alaIpmsForwardDestTunIpAddr, alaIpmsSourceEntry=alaIpmsSourceEntry, alaIpmsPolicySrcVci=alaIpmsPolicySrcVci, alaIpmsForwardSrcType=alaIpmsForwardSrcType, alaIpmsQuerierIpAddr=alaIpmsQuerierIpAddr, alaIpmsOtherQuerierTimer=alaIpmsOtherQuerierTimer, alaIpmsGroupClientIfIndex=alaIpmsGroupClientIfIndex, alaIpmsForwardSrcVci=alaIpmsForwardSrcVci, alaIpmsStaticMember=alaIpmsStaticMember, alaIpmsPolicySrcIpAddr=alaIpmsPolicySrcIpAddr, alaIpmsForwardSrcIpAddr=alaIpmsForwardSrcIpAddr, alaIpmsPolicySrcMacAddr=alaIpmsPolicySrcMacAddr, alaIpmsStaticQuerierGroup=alaIpmsStaticQuerierGroup, alaIpmsStaticMemberVci=alaIpmsStaticMemberVci, alaIpmsPolicyTable=alaIpmsPolicyTable, alaIpmsMembershipTimer=alaIpmsMembershipTimer, alaIpmsStaticNeighborIGMPVersion=alaIpmsStaticNeighborIGMPVersion, alaIpmsSourceSrcVci=alaIpmsSourceSrcVci, alaIpmsForwardUniIpAddr=alaIpmsForwardUniIpAddr, alaIpmsPolicySrcType=alaIpmsPolicySrcType, alaIpmsGroupEntry=alaIpmsGroupEntry, alaIpmsNeighborGroup=alaIpmsNeighborGroup, alaIpmsSourceSrcMacAddr=alaIpmsSourceSrcMacAddr, alaIpmsStaticNeighborVlan=alaIpmsStaticNeighborVlan, alaIpmsStaticNeighborIfIndex=alaIpmsStaticNeighborIfIndex, alaIpmsQueryInterval=alaIpmsQueryInterval, alaIpmsPolicyGroup=alaIpmsPolicyGroup, alaIpmsForwardRtrMacAddr=alaIpmsForwardRtrMacAddr, alaIpmsStaticMemberEntry=alaIpmsStaticMemberEntry, alaIpmsNeighborTimer=alaIpmsNeighborTimer, alaIpmsConfig=alaIpmsConfig, alaIpmsForwardTable=alaIpmsForwardTable, alaIpmsQuerierGroup=alaIpmsQuerierGroup, alaIpmsGroup=alaIpmsGroup, alaIpmsGroupClientVlan=alaIpmsGroupClientVlan, alaIpmsNeighborVlan=alaIpmsNeighborVlan, alaIpmsMaxBandwidth=alaIpmsMaxBandwidth, alaIpmsSourceGroup=alaIpmsSourceGroup, alaIpmsGroupTable=alaIpmsGroupTable, alaIpmsPolicy=alaIpmsPolicy, alaIpmsConfigGroup=alaIpmsConfigGroup, alaIpmsForwardDestIfIndex=alaIpmsForwardDestIfIndex, alaIpmsSourceSrcType=alaIpmsSourceSrcType, alaIpmsSourceDestIpAddr=alaIpmsSourceDestIpAddr, alaIpmsPolicyDisposition=alaIpmsPolicyDisposition, alaIpmsQuerierTimeout=alaIpmsQuerierTimeout, alaIpmsGroupIGMPv3SrcTimeout=alaIpmsGroupIGMPv3SrcTimeout, alaIpmsStaticMemberRowStatus=alaIpmsStaticMemberRowStatus, alcatelIND1IPMSMIBObjects=alcatelIND1IPMSMIBObjects, PYSNMP_MODULE_ID=alcatelIND1IPMSMIB, alaIpmsSourceSrcIfIndex=alaIpmsSourceSrcIfIndex, alaIpmsPolicyEntry=alaIpmsPolicyEntry, alaIpmsPolicyPolicy=alaIpmsPolicyPolicy, alaIpmsStaticQuerierVci=alaIpmsStaticQuerierVci, alaIpmsQuerierEntry=alaIpmsQuerierEntry, alaIpmsSource=alaIpmsSource, alaIpmsGroupClientIpAddr=alaIpmsGroupClientIpAddr, alaIpmsIGMPMembershipProxyVersion=alaIpmsIGMPMembershipProxyVersion, alaIpmsNeighborEntry=alaIpmsNeighborEntry, alaIpmsNeighborType=alaIpmsNeighborType, alaIpmsStaticQuerierVlan=alaIpmsStaticQuerierVlan, alaIpmsGroupTimeout=alaIpmsGroupTimeout, alaIpmsPolicySrcVlan=alaIpmsPolicySrcVlan, alaIpmsForwardEntry=alaIpmsForwardEntry, alaIpmsQuerierTable=alaIpmsQuerierTable, alaIpmsForwardGroup=alaIpmsForwardGroup, alaIpmsGroupIGMPv3SrcIP=alaIpmsGroupIGMPv3SrcIP, alaIpmsSourceSrcIpAddr=alaIpmsSourceSrcIpAddr, alaIpmsGroupIGMPVersion=alaIpmsGroupIGMPVersion, alaIpmsSourceTimeout=alaIpmsSourceTimeout, alcatelIND1IPMSMIBConformance=alcatelIND1IPMSMIBConformance, alaIpmsQuerierTimer=alaIpmsQuerierTimer, alaIpmsStaticNeighborGroup=alaIpmsStaticNeighborGroup, alaIpmsPolicySrcIfIndex=alaIpmsPolicySrcIfIndex, alaIpmsForwardRtrTtl=alaIpmsForwardRtrTtl, alaIpmsPolicyTimeout=alaIpmsPolicyTimeout, alaIpmsStaticMemberTable=alaIpmsStaticMemberTable, alaIpmsStatus=alaIpmsStatus, alaIpmsStaticMemberGroupAddr=alaIpmsStaticMemberGroupAddr, alaIpmsGroupIGMPv3GroupType=alaIpmsGroupIGMPv3GroupType, alaIpmsForwardDestType=alaIpmsForwardDestType, alaIpmsForwardDestIpAddr=alaIpmsForwardDestIpAddr, alaIpmsStaticQuerierTable=alaIpmsStaticQuerierTable, alcatelIND1IPMSMIB=alcatelIND1IPMSMIB, alaIpmsQuerierVci=alaIpmsQuerierVci, alaIpmsStaticQuerierRowStatus=alaIpmsStaticQuerierRowStatus, alaIpmsStaticMemberVlan=alaIpmsStaticMemberVlan, alaIpmsLeaveTimeout=alaIpmsLeaveTimeout, alaIpmsStaticMemberIfIndex=alaIpmsStaticMemberIfIndex, alcatelIND1IPMSMIBGroups=alcatelIND1IPMSMIBGroups, alaIpmsPolicyDestIpAddr=alaIpmsPolicyDestIpAddr, alaIpmsStaticQuerierEntry=alaIpmsStaticQuerierEntry, alaIpmsForward=alaIpmsForward, alaIpmsGroupClientVci=alaIpmsGroupClientVci, alaIpmsGroupIGMPv3SrcType=alaIpmsGroupIGMPv3SrcType, alaIpmsForwardSrcTunIpAddr=alaIpmsForwardSrcTunIpAddr, alaIpmsStaticQuerierIGMPVersion=alaIpmsStaticQuerierIGMPVersion, alaIpmsSourceUniIpAddr=alaIpmsSourceUniIpAddr, alaIpmsQuerier=alaIpmsQuerier, alaIpmsPriority=alaIpmsPriority, alaIpmsQuerierIfIndex=alaIpmsQuerierIfIndex, alaIpmsNeighborIfIndex=alaIpmsNeighborIfIndex, alaIpmsCompliance=alaIpmsCompliance, alaIpmsNeighborTable=alaIpmsNeighborTable, alaIpmsSourceTable=alaIpmsSourceTable, alaIpmsQuerierType=alaIpmsQuerierType, alaIpmsStaticNeighborEntry=alaIpmsStaticNeighborEntry)
