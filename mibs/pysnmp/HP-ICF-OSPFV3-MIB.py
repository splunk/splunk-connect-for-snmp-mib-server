#
# PySNMP MIB module HP-ICF-OSPFV3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-ICF-OSPFV3-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:22:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
hpSwitch, = mibBuilder.importSymbols("HP-ICF-OID", "hpSwitch")
HpicfOspfLogType, HpicfOspfLogAction = mibBuilder.importSymbols("HP-ICF-OSPF", "HpicfOspfLogType", "HpicfOspfLogAction")
InetAddressIPv6, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv6")
BigMetric, Metric = mibBuilder.importSymbols("OSPF-MIB", "BigMetric", "Metric")
ospfv3IfIndex, ospfv3LinkLsdbLsid, Ospfv3RouterIdTC, ospfv3IfInstId, ospfv3AreaAggregateEntry, ospfv3IfEntry, ospfv3LinkLsdbRouterId, ospfv3LinkLsdbIfIndex, ospfv3AreaLsdbAreaId, ospfv3AreaLsdbRouterId, ospfv3NbrEntry, ospfv3AreaEntry, ospfv3AreaLsdbLsid, ospfv3AsLsdbEntry, ospfv3LinkLsdbIfInstId, ospfv3LinkLsdbEntry, ospfv3LinkLsdbType, ospfv3AreaLsdbEntry, ospfv3AreaLsdbType = mibBuilder.importSymbols("OSPFV3-MIB", "ospfv3IfIndex", "ospfv3LinkLsdbLsid", "Ospfv3RouterIdTC", "ospfv3IfInstId", "ospfv3AreaAggregateEntry", "ospfv3IfEntry", "ospfv3LinkLsdbRouterId", "ospfv3LinkLsdbIfIndex", "ospfv3AreaLsdbAreaId", "ospfv3AreaLsdbRouterId", "ospfv3NbrEntry", "ospfv3AreaEntry", "ospfv3AreaLsdbLsid", "ospfv3AsLsdbEntry", "ospfv3LinkLsdbIfInstId", "ospfv3LinkLsdbEntry", "ospfv3LinkLsdbType", "ospfv3AreaLsdbEntry", "ospfv3AreaLsdbType")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
IpAddress, Counter32, TimeTicks, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Unsigned32, Integer32, iso, Counter64, Gauge32, Bits, NotificationType, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter32", "TimeTicks", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Unsigned32", "Integer32", "iso", "Counter64", "Gauge32", "Bits", "NotificationType", "MibIdentifier")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
hpicfOspfv3MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44))
hpicfOspfv3MIB.setRevisions(('2017-05-18 00:00', '2014-06-13 00:00', '2012-04-30 00:00', '2012-04-20 00:00', '2011-06-13 19:53', '2010-11-04 00:00', '2009-02-05 18:00',))
if mibBuilder.loadTexts: hpicfOspfv3MIB.setLastUpdated('201705180000Z')
if mibBuilder.loadTexts: hpicfOspfv3MIB.setOrganization('HP Networking')
hpicfOspfv3Objects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1))
hpicfOspfv3Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 2))
hpicfOspfv3GeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 1))
hpicfOspfv3DefaultImportMetric = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 1, 1), BigMetric()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfv3DefaultImportMetric.setStatus('current')
hpicfOspfv3DefaultImportMetricType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("externalType1", 1), ("externalType2", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfv3DefaultImportMetricType.setStatus('current')
hpicfOspfv3IntraAreaDistance = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfv3IntraAreaDistance.setStatus('current')
hpicfOspfv3InterAreaDistance = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfv3InterAreaDistance.setStatus('current')
hpicfOspfv3ExternalDistance = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfv3ExternalDistance.setStatus('current')
hpicfOspfv3SpfThrottleStartInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfv3SpfThrottleStartInterval.setStatus('current')
hpicfOspfv3SpfThrottleWaitInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfv3SpfThrottleWaitInterval.setStatus('current')
hpicfOspfv3SpfThrottleMaxWaitTime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfv3SpfThrottleMaxWaitTime.setStatus('current')
hpicfOspfv3SpfThrottleCurrentSpfInterval = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3SpfThrottleCurrentSpfInterval.setStatus('current')
hpicfOspfv3AreaCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaCount.setStatus('current')
hpicfOspfv3RestartHelper = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 1, 12), TruthValue().clone('true')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3RestartHelper.setStatus('current')
hpicfOspfv3ASscopeUnknownLsaCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3ASscopeUnknownLsaCount.setStatus('current')
hpicfOspfv3LinkLsdbStatLinkLsa = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3LinkLsdbStatLinkLsa.setStatus('current')
hpicfOspfv3TotalUnknownLsa = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3TotalUnknownLsa.setStatus('current')
hpicfOspfv3ReferenceCost = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 1, 16), Metric()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfv3ReferenceCost.setStatus('current')
hpicfOspfv3IfMetricObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 4))
hpicfOspfv3IfMetricTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 4, 1), )
if mibBuilder.loadTexts: hpicfOspfv3IfMetricTable.setStatus('current')
hpicfOspfv3IfMetricEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 4, 1, 1), )
ospfv3IfEntry.registerAugmentions(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfMetricEntry"))
hpicfOspfv3IfMetricEntry.setIndexNames(*ospfv3IfEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfOspfv3IfMetricEntry.setStatus('current')
hpicfOspfv3IfFlagValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfv3IfFlagValue.setStatus('current')
hpicfOspfv3AsLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 2), )
if mibBuilder.loadTexts: hpicfOspfv3AsLsdbTable.setStatus('current')
hpicfOspfv3AsLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 2, 1), )
ospfv3AsLsdbEntry.registerAugmentions(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AsLsdbEntry"))
hpicfOspfv3AsLsdbEntry.setIndexNames(*ospfv3AsLsdbEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfOspfv3AsLsdbEntry.setStatus('current')
hpicfOspfv3AsLsdbEFTFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 2, 1, 1), Bits().clone(namedValues=NamedValues(("bitE", 0), ("bitF", 1), ("bitT", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AsLsdbEFTFlags.setStatus('current')
hpicfOspfv3AsLsdbMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 2, 1, 2), Metric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AsLsdbMetric.setStatus('current')
hpicfOspfv3AsLsdbPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AsLsdbPrefixLength.setStatus('current')
hpicfOspfv3AsLsdbPrefixOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AsLsdbPrefixOptions.setStatus('current')
hpicfOspfv3AsLsdbRefLsType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AsLsdbRefLsType.setStatus('current')
hpicfOspfv3AsLsdbAddrPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 2, 1, 6), InetAddressIPv6()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AsLsdbAddrPrefix.setStatus('current')
hpicfOspfv3AsLsdbFwdingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 2, 1, 7), InetAddressIPv6()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AsLsdbFwdingAddress.setStatus('current')
hpicfOspfv3AsLsdbExtRouteTags = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AsLsdbExtRouteTags.setStatus('current')
hpicfOspfv3AsLsdbRefLsId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AsLsdbRefLsId.setStatus('current')
hpicfOspfv3AsLsdbLsaLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AsLsdbLsaLength.setStatus('current')
hpicfOspfv3AreaLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 3), )
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbTable.setStatus('current')
hpicfOspfv3AreaLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 3, 1), )
ospfv3AreaLsdbEntry.registerAugmentions(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbEntry"))
hpicfOspfv3AreaLsdbEntry.setIndexNames(*ospfv3AreaLsdbEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbEntry.setStatus('current')
hpicfOspfv3AreaLsdbRtrCapBits = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 3, 1, 1), Bits().clone(namedValues=NamedValues(("bitV", 0), ("bitE", 1), ("bitB", 2), ("bitW", 3), ("bitNt", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbRtrCapBits.setStatus('current')
hpicfOspfv3AreaLsdbOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbOptions.setStatus('current')
hpicfOspfv3AreaLsdbMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 3, 1, 3), Metric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbMetric.setStatus('current')
hpicfOspfv3AreaLsdbPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbPrefixLength.setStatus('current')
hpicfOspfv3AreaLsdbPrefixOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbPrefixOptions.setStatus('current')
hpicfOspfv3AreaLsdbAddrPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 3, 1, 6), InetAddressIPv6()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbAddrPrefix.setStatus('current')
hpicfOspfv3AreaLsdbDstRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 3, 1, 7), Ospfv3RouterIdTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbDstRtrId.setStatus('current')
hpicfOspfv3AreaLsdbNumPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbNumPrefixes.setStatus('current')
hpicfOspfv3AreaLsdbRefLsType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbRefLsType.setStatus('current')
hpicfOspfv3AreaLsdbRefLsId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbRefLsId.setStatus('current')
hpicfOspfv3AreaLsdbRefAdvRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 3, 1, 11), Ospfv3RouterIdTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbRefAdvRtrId.setStatus('current')
hpicfOspfv3AreaLsdbEFTFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 3, 1, 12), Bits().clone(namedValues=NamedValues(("bitE", 0), ("bitF", 1), ("bitT", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbEFTFlags.setStatus('current')
hpicfOspfv3AreaLsdbFwdingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 3, 1, 13), InetAddressIPv6()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbFwdingAddress.setStatus('current')
hpicfOspfv3AreaLsdbExtRouteTags = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 3, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbExtRouteTags.setStatus('current')
hpicfOspfv3AreaLsdbLsaLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 3, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbLsaLength.setStatus('current')
hpicfOspfv3AreaLsdbLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbLinks.setStatus('current')
hpicfOspfv3LinkLsdbTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 4), )
if mibBuilder.loadTexts: hpicfOspfv3LinkLsdbTable.setStatus('current')
hpicfOspfv3LinkLsdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 4, 1), )
ospfv3LinkLsdbEntry.registerAugmentions(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3LinkLsdbEntry"))
hpicfOspfv3LinkLsdbEntry.setIndexNames(*ospfv3LinkLsdbEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfOspfv3LinkLsdbEntry.setStatus('current')
hpicfOspfv3LinkLsdbRtrPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3LinkLsdbRtrPriority.setStatus('current')
hpicfOspfv3LinkLsdbOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3LinkLsdbOptions.setStatus('current')
hpicfOspfv3LinkLsdbLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 4, 1, 3), InetAddressIPv6()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3LinkLsdbLocalAddress.setStatus('current')
hpicfOspfv3LinkLsdbNumPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3LinkLsdbNumPrefixes.setStatus('current')
hpicfOspfv3LinkLsdbLsaLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3LinkLsdbLsaLength.setStatus('current')
hpicfOspfv3IfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 5), )
if mibBuilder.loadTexts: hpicfOspfv3IfTable.setStatus('current')
hpicfOspfv3IfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 5, 1), )
ospfv3IfEntry.registerAugmentions(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfEntry"))
hpicfOspfv3IfEntry.setIndexNames(*ospfv3IfEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfOspfv3IfEntry.setStatus('current')
hpicfOspfv3IfPassive = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 5, 1, 1), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOspfv3IfPassive.setStatus('current')
hpicfOspfv3IfNbrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IfNbrCount.setStatus('current')
hpicfOspfv3IfDRAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 5, 1, 10), InetAddressIPv6()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IfDRAddr.setStatus('current')
hpicfOspfv3IfBDRAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 5, 1, 11), InetAddressIPv6()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IfBDRAddr.setStatus('current')
hpicfOspfv3IfHelloDueTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 5, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IfHelloDueTime.setStatus('current')
hpicfOspfv3IfAdjNbrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 5, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IfAdjNbrCount.setStatus('current')
hpicfOspfv3NbrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 6), )
if mibBuilder.loadTexts: hpicfOspfv3NbrTable.setStatus('current')
hpicfOspfv3NbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 6, 1), )
ospfv3NbrEntry.registerAugmentions(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3NbrEntry"))
hpicfOspfv3NbrEntry.setIndexNames(*ospfv3NbrEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfOspfv3NbrEntry.setStatus('current')
hpicfOspfv3NbrUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 6, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3NbrUpTime.setStatus('current')
hpicfOspfv3NbrTimeToExpiry = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 6, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3NbrTimeToExpiry.setStatus('current')
hpicfOspfv3NbrDataBaseSummary = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 6, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3NbrDataBaseSummary.setStatus('current')
hpicfOspfv3NbrLinkStateRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 6, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3NbrLinkStateRequest.setStatus('current')
hpicfOspfv3NbrRestartState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("helper", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3NbrRestartState.setStatus('current')
hpicfOspfv3IfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 7), )
if mibBuilder.loadTexts: hpicfOspfv3IfStatsTable.setStatus('current')
hpicfOspfv3IfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 7, 1), ).setIndexNames((0, "OSPFV3-MIB", "ospfv3IfIndex"), (0, "OSPFV3-MIB", "ospfv3IfInstId"))
if mibBuilder.loadTexts: hpicfOspfv3IfStatsEntry.setStatus('current')
hpicfOspfv3IfSentHelloPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IfSentHelloPkt.setStatus('current')
hpicfOspfv3IfSentDDPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IfSentDDPkt.setStatus('current')
hpicfOspfv3IfSentLSRPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IfSentLSRPkt.setStatus('current')
hpicfOspfv3IfSentLSUPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IfSentLSUPkt.setStatus('current')
hpicfOspfv3IfSentLSAPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IfSentLSAPkt.setStatus('current')
hpicfOspfv3IfRcvdHelloPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IfRcvdHelloPkt.setStatus('current')
hpicfOspfv3IfRcvdDDPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IfRcvdDDPkt.setStatus('current')
hpicfOspfv3IfRcvdLSRPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IfRcvdLSRPkt.setStatus('current')
hpicfOspfv3IfRcvdLSUPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IfRcvdLSUPkt.setStatus('current')
hpicfOspfv3IfRcvdLSAPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 7, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IfRcvdLSAPkt.setStatus('current')
hpicfOspfv3IfSentTotalErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IfSentTotalErrorCount.setStatus('current')
hpicfOspfv3IfRcvdTotalErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 7, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IfRcvdTotalErrorCount.setStatus('current')
hpicfOspfv3IfErrorTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 8), )
if mibBuilder.loadTexts: hpicfOspfv3IfErrorTable.setStatus('current')
hpicfOspfv3IfErrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 8, 1), ).setIndexNames((0, "OSPFV3-MIB", "ospfv3IfIndex"), (0, "OSPFV3-MIB", "ospfv3IfInstId"), (0, "HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfErrorType"))
if mibBuilder.loadTexts: hpicfOspfv3IfErrorEntry.setStatus('current')
hpicfOspfv3IfErrorType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpicfOspfv3IfErrorType.setStatus('current')
hpicfOspfv3IfErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 8, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IfErrorCount.setStatus('current')
hpicfOspfv3IfClearStatsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 9), )
if mibBuilder.loadTexts: hpicfOspfv3IfClearStatsTable.setStatus('current')
hpicfOspfv3IfClearStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 9, 1), ).setIndexNames((0, "OSPFV3-MIB", "ospfv3IfIndex"), (0, "OSPFV3-MIB", "ospfv3IfInstId"))
if mibBuilder.loadTexts: hpicfOspfv3IfClearStatsEntry.setStatus('current')
hpicfOspfv3ClearCounters = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 9, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfv3ClearCounters.setStatus('current')
hpicfOspfv3SpfTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 10), )
if mibBuilder.loadTexts: hpicfOspfv3SpfTable.setStatus('current')
hpicfOspfv3SpfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 10, 1), ).setIndexNames((0, "HP-ICF-OSPFV3-MIB", "hpicfOspfv3SpfIndex"))
if mibBuilder.loadTexts: hpicfOspfv3SpfEntry.setStatus('current')
hpicfOspfv3SpfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 10, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hpicfOspfv3SpfIndex.setStatus('current')
hpicfOspfv3SpfReason = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 10, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3SpfReason.setStatus('current')
hpicfOspfv3LogTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 11), )
if mibBuilder.loadTexts: hpicfOspfv3LogTable.setStatus('current')
hpicfOspfv3LogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 11, 1), ).setIndexNames((0, "HP-ICF-OSPFV3-MIB", "hpicfOspfv3LogType"))
if mibBuilder.loadTexts: hpicfOspfv3LogEntry.setStatus('current')
hpicfOspfv3LogType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 11, 1, 1), HpicfOspfLogType())
if mibBuilder.loadTexts: hpicfOspfv3LogType.setStatus('current')
hpicfOspfv3LogAction = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 11, 1, 2), HpicfOspfLogAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfv3LogAction.setStatus('current')
hpicfOspfv3RouterLSATable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 12), )
if mibBuilder.loadTexts: hpicfOspfv3RouterLSATable.setStatus('current')
hpicfOspfv3RouterLSAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 12, 1), ).setIndexNames((0, "OSPFV3-MIB", "ospfv3AreaLsdbAreaId"), (0, "OSPFV3-MIB", "ospfv3AreaLsdbType"), (0, "OSPFV3-MIB", "ospfv3AreaLsdbRouterId"), (0, "OSPFV3-MIB", "ospfv3AreaLsdbLsid"), (0, "HP-ICF-OSPFV3-MIB", "hpicfOspfv3RouterLSANbrIfId"), (0, "HP-ICF-OSPFV3-MIB", "hpicfOspfv3RouterLSANbrRtrId"))
if mibBuilder.loadTexts: hpicfOspfv3RouterLSAEntry.setStatus('current')
hpicfOspfv3RouterLSANbrIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 12, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hpicfOspfv3RouterLSANbrIfId.setStatus('current')
hpicfOspfv3RouterLSANbrRtrId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 12, 1, 2), Ospfv3RouterIdTC())
if mibBuilder.loadTexts: hpicfOspfv3RouterLSANbrRtrId.setStatus('current')
hpicfOspfv3RouterLSAIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 12, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3RouterLSAIfType.setStatus('current')
hpicfOspfv3RouterLSAMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3RouterLSAMetric.setStatus('current')
hpicfOspfv3RouterLSAIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3RouterLSAIfId.setStatus('current')
hpicfOspfv3NetworkLSATable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 13), )
if mibBuilder.loadTexts: hpicfOspfv3NetworkLSATable.setStatus('current')
hpicfOspfv3NetworkLSAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 13, 1), ).setIndexNames((0, "OSPFV3-MIB", "ospfv3AreaLsdbAreaId"), (0, "OSPFV3-MIB", "ospfv3AreaLsdbType"), (0, "OSPFV3-MIB", "ospfv3AreaLsdbRouterId"), (0, "OSPFV3-MIB", "ospfv3AreaLsdbLsid"), (0, "HP-ICF-OSPFV3-MIB", "hpicfOspfv3NetworkLSASeqNum"))
if mibBuilder.loadTexts: hpicfOspfv3NetworkLSAEntry.setStatus('current')
hpicfOspfv3NetworkLSASeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 13, 1, 1), Unsigned32())
if mibBuilder.loadTexts: hpicfOspfv3NetworkLSASeqNum.setStatus('current')
hpicfOspfv3NetworkLSAAttachedRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 13, 1, 2), Ospfv3RouterIdTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3NetworkLSAAttachedRouter.setStatus('current')
hpicfOspfv3IntraAPLSATable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 14), )
if mibBuilder.loadTexts: hpicfOspfv3IntraAPLSATable.setStatus('current')
hpicfOspfv3IntraAPLSAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 14, 1), ).setIndexNames((0, "OSPFV3-MIB", "ospfv3AreaLsdbAreaId"), (0, "OSPFV3-MIB", "ospfv3AreaLsdbType"), (0, "OSPFV3-MIB", "ospfv3AreaLsdbRouterId"), (0, "OSPFV3-MIB", "ospfv3AreaLsdbLsid"), (0, "HP-ICF-OSPFV3-MIB", "hpicfOspfv3IntraAPAddrPrefix"), (0, "HP-ICF-OSPFV3-MIB", "hpicfOspfv3IntraAPPrefixLength"))
if mibBuilder.loadTexts: hpicfOspfv3IntraAPLSAEntry.setStatus('current')
hpicfOspfv3IntraAPAddrPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 14, 1, 1), InetAddressIPv6())
if mibBuilder.loadTexts: hpicfOspfv3IntraAPAddrPrefix.setStatus('current')
hpicfOspfv3IntraAPPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 14, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hpicfOspfv3IntraAPPrefixLength.setStatus('current')
hpicfOspfv3IntraAPPrefixOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 14, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IntraAPPrefixOptions.setStatus('current')
hpicfOspfv3IntraAPMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 14, 1, 4), Metric()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3IntraAPMetric.setStatus('current')
hpicfOspfv3LinkLSATable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 15), )
if mibBuilder.loadTexts: hpicfOspfv3LinkLSATable.setStatus('current')
hpicfOspfv3LinkLSAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 15, 1), ).setIndexNames((0, "OSPFV3-MIB", "ospfv3LinkLsdbIfIndex"), (0, "OSPFV3-MIB", "ospfv3LinkLsdbIfInstId"), (0, "OSPFV3-MIB", "ospfv3LinkLsdbType"), (0, "OSPFV3-MIB", "ospfv3LinkLsdbRouterId"), (0, "OSPFV3-MIB", "ospfv3LinkLsdbLsid"), (0, "HP-ICF-OSPFV3-MIB", "hpicfOspfv3LinkAddrPrefix"), (0, "HP-ICF-OSPFV3-MIB", "hpicfOspfv3LinkPrefixLength"))
if mibBuilder.loadTexts: hpicfOspfv3LinkLSAEntry.setStatus('current')
hpicfOspfv3LinkAddrPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 15, 1, 1), InetAddressIPv6())
if mibBuilder.loadTexts: hpicfOspfv3LinkAddrPrefix.setStatus('current')
hpicfOspfv3LinkPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 15, 1, 2), Unsigned32())
if mibBuilder.loadTexts: hpicfOspfv3LinkPrefixLength.setStatus('current')
hpicfOspfv3LinkPrefixOptions = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 15, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3LinkPrefixOptions.setStatus('current')
hpicfOspfv3Trap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 16))
hpicfOspfv3Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 16, 0))
hpicfOspfv3TrapControl = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 16, 1))
hpicfOspfv3SetTrap = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 16, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpicfOspfv3SetTrap.setStatus('current')
hpicfOspfv3AreaAggregateTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 19), )
if mibBuilder.loadTexts: hpicfOspfv3AreaAggregateTable.setStatus('current')
hpicfOspfv3AreaAggregateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 19, 1), )
ospfv3AreaAggregateEntry.registerAugmentions(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaAggregateEntry"))
hpicfOspfv3AreaAggregateEntry.setIndexNames(*ospfv3AreaAggregateEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfOspfv3AreaAggregateEntry.setStatus('current')
hpicfOspfv3AreaAggregateCost = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 19, 1, 1), BigMetric()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpicfOspfv3AreaAggregateCost.setStatus('current')
hpicfOspfv3AreaTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 17), )
if mibBuilder.loadTexts: hpicfOspfv3AreaTable.setStatus('current')
hpicfOspfv3AreaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 17, 1), )
ospfv3AreaEntry.registerAugmentions(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaEntry"))
hpicfOspfv3AreaEntry.setIndexNames(*ospfv3AreaEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfOspfv3AreaEntry.setStatus('current')
hpicfOspfv3AreaNbrDownCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 17, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaNbrDownCount.setStatus('current')
hpicfOspfv3AreaNbrAttemptCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 17, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaNbrAttemptCount.setStatus('current')
hpicfOspfv3AreaNbrInitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 17, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaNbrInitCount.setStatus('current')
hpicfOspfv3AreaNbr2wayCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 17, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaNbr2wayCount.setStatus('current')
hpicfOspfv3AreaNbrExstartCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 17, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaNbrExstartCount.setStatus('current')
hpicfOspfv3AreaNbrExchangeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 17, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaNbrExchangeCount.setStatus('current')
hpicfOspfv3AreaNbrLoadingCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 17, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaNbrLoadingCount.setStatus('current')
hpicfOspfv3AreaNbrFullCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 17, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaNbrFullCount.setStatus('current')
hpicfOspfv3AreaInterfaceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 17, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaInterfaceCount.setStatus('current')
hpicfOspfv3AreaScopeUnknownLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 17, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaScopeUnknownLsaCount.setStatus('current')
hpicfOspfv3AreaLsdbStatsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 20), )
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbStatsTable.setStatus('current')
hpicfOspfv3AreaLsdbStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 20, 1), )
ospfv3AreaEntry.registerAugmentions(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbStatsEntry"))
hpicfOspfv3AreaLsdbStatsEntry.setIndexNames(*ospfv3AreaEntry.getIndexNames())
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbStatsEntry.setStatus('current')
hpicfOspfv3AreaLsdbStatRtrLsaCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 20, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbStatRtrLsaCnt.setStatus('current')
hpicfOspfv3AreaLsdbStatNwLsaCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 20, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbStatNwLsaCnt.setStatus('current')
hpicfOspfv3AreaLsdbStatInterPreLsaCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 20, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbStatInterPreLsaCnt.setStatus('current')
hpicfOspfv3AreaLsdbStatInterRtrLsaCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 20, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbStatInterRtrLsaCnt.setStatus('current')
hpicfOspfv3AreaLsdbStatIntraPreLsaCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 1, 20, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpicfOspfv3AreaLsdbStatIntraPreLsaCnt.setStatus('current')
hpicfOspfv3Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 2, 1))
hpicfOspfv3Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 2, 2))
hpicfOspfv3Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 2, 2, 1)).setObjects(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3BasicGroup"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfGroup1"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3NbrGroup1"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaGroup"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AsLsdbGroup"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbGroup"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3LinkLsdbGroup"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3StatisticGroup1"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3LogGroup"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3TrapControlGroup"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfv3Compliance = hpicfOspfv3Compliance.setStatus('deprecated')
hpicfOspfv3Compliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 2, 2, 2)).setObjects(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3BasicGroup"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfGroup1"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3NbrGroup1"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaGroup"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AsLsdbGroup"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbGroup"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3LinkLsdbGroup"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3StatisticGroup1"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3LogGroup"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3TrapControlGroup"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbStatsGroup"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3MetricGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfv3Compliance2 = hpicfOspfv3Compliance2.setStatus('current')
hpicfOspfv3BasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 2, 1, 1)).setObjects(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3DefaultImportMetric"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3DefaultImportMetricType"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3ReferenceCost"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IntraAreaDistance"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3InterAreaDistance"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3ExternalDistance"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3SpfThrottleStartInterval"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3SpfThrottleWaitInterval"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3SpfThrottleMaxWaitTime"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3SpfThrottleCurrentSpfInterval"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaAggregateCost"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaCount"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3RestartHelper"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3ASscopeUnknownLsaCount"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3LinkLsdbStatLinkLsa"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3TotalUnknownLsa"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfv3BasicGroup = hpicfOspfv3BasicGroup.setStatus('current')
hpicfOspfv3AsLsdbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 2, 1, 2)).setObjects(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AsLsdbEFTFlags"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AsLsdbMetric"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AsLsdbPrefixLength"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AsLsdbPrefixOptions"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AsLsdbRefLsType"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AsLsdbAddrPrefix"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AsLsdbFwdingAddress"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AsLsdbExtRouteTags"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AsLsdbRefLsId"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AsLsdbLsaLength"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfv3AsLsdbGroup = hpicfOspfv3AsLsdbGroup.setStatus('current')
hpicfOspfv3AreaLsdbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 2, 1, 3)).setObjects(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbRtrCapBits"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbOptions"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbMetric"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbPrefixLength"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbPrefixOptions"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbAddrPrefix"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbDstRtrId"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbNumPrefixes"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbRefLsType"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbRefLsId"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbRefAdvRtrId"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbEFTFlags"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbFwdingAddress"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbExtRouteTags"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3RouterLSAIfType"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3RouterLSAMetric"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3RouterLSAIfId"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3NetworkLSAAttachedRouter"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IntraAPPrefixOptions"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IntraAPMetric"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbLsaLength"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbLinks"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfv3AreaLsdbGroup = hpicfOspfv3AreaLsdbGroup.setStatus('current')
hpicfOspfv3LinkLsdbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 2, 1, 4)).setObjects(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3LinkLsdbRtrPriority"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3LinkLsdbOptions"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3LinkLsdbLocalAddress"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3LinkLsdbNumPrefixes"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3LinkPrefixOptions"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3LinkLsdbLsaLength"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfv3LinkLsdbGroup = hpicfOspfv3LinkLsdbGroup.setStatus('current')
hpicfOspfv3LogGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 2, 1, 8)).setObjects(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3LogAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfv3LogGroup = hpicfOspfv3LogGroup.setStatus('current')
hpicfOspfv3TrapControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 2, 1, 9)).setObjects(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3SetTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfv3TrapControlGroup = hpicfOspfv3TrapControlGroup.setStatus('current')
hpicfOspfv3AreaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 2, 1, 11)).setObjects(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaNbrDownCount"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaNbrAttemptCount"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaNbrInitCount"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaNbr2wayCount"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaNbrExstartCount"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaNbrExchangeCount"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaNbrLoadingCount"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaNbrFullCount"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaInterfaceCount"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaScopeUnknownLsaCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfv3AreaGroup = hpicfOspfv3AreaGroup.setStatus('current')
hpicfOspfv3AreaLsdbStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 2, 1, 13)).setObjects(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbStatRtrLsaCnt"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbStatNwLsaCnt"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbStatInterPreLsaCnt"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbStatInterRtrLsaCnt"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3AreaLsdbStatIntraPreLsaCnt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfv3AreaLsdbStatsGroup = hpicfOspfv3AreaLsdbStatsGroup.setStatus('current')
hpicfOspfv3NbrGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 2, 1, 14)).setObjects(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3NbrUpTime"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3NbrTimeToExpiry"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3NbrDataBaseSummary"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3NbrLinkStateRequest"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3NbrRestartState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfv3NbrGroup1 = hpicfOspfv3NbrGroup1.setStatus('current')
hpicfOspfv3StatisticGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 2, 1, 15)).setObjects(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfSentHelloPkt"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfSentDDPkt"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfSentLSRPkt"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfSentLSUPkt"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfSentLSAPkt"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfRcvdHelloPkt"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfRcvdDDPkt"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfRcvdLSRPkt"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfRcvdLSUPkt"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfRcvdLSAPkt"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfErrorCount"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfSentTotalErrorCount"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfRcvdTotalErrorCount"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3ClearCounters"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3SpfReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfv3StatisticGroup1 = hpicfOspfv3StatisticGroup1.setStatus('current')
hpicfOspfv3IfGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 2, 1, 16)).setObjects(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfPassive"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfNbrCount"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfDRAddr"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfBDRAddr"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfHelloDueTime"), ("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfAdjNbrCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfv3IfGroup1 = hpicfOspfv3IfGroup1.setStatus('current')
hpicfOspfv3MetricGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 5, 1, 44, 2, 1, 17)).setObjects(("HP-ICF-OSPFV3-MIB", "hpicfOspfv3IfFlagValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpicfOspfv3MetricGroup = hpicfOspfv3MetricGroup.setStatus('current')
mibBuilder.exportSymbols("HP-ICF-OSPFV3-MIB", hpicfOspfv3LinkLsdbOptions=hpicfOspfv3LinkLsdbOptions, hpicfOspfv3IfSentLSRPkt=hpicfOspfv3IfSentLSRPkt, hpicfOspfv3IfRcvdTotalErrorCount=hpicfOspfv3IfRcvdTotalErrorCount, hpicfOspfv3AreaLsdbRefLsId=hpicfOspfv3AreaLsdbRefLsId, hpicfOspfv3AreaGroup=hpicfOspfv3AreaGroup, PYSNMP_MODULE_ID=hpicfOspfv3MIB, hpicfOspfv3NbrEntry=hpicfOspfv3NbrEntry, hpicfOspfv3IfErrorType=hpicfOspfv3IfErrorType, hpicfOspfv3IfFlagValue=hpicfOspfv3IfFlagValue, hpicfOspfv3LogTable=hpicfOspfv3LogTable, hpicfOspfv3AreaNbrExstartCount=hpicfOspfv3AreaNbrExstartCount, hpicfOspfv3AsLsdbAddrPrefix=hpicfOspfv3AsLsdbAddrPrefix, hpicfOspfv3AreaAggregateCost=hpicfOspfv3AreaAggregateCost, hpicfOspfv3TotalUnknownLsa=hpicfOspfv3TotalUnknownLsa, hpicfOspfv3DefaultImportMetricType=hpicfOspfv3DefaultImportMetricType, hpicfOspfv3LinkLsdbStatLinkLsa=hpicfOspfv3LinkLsdbStatLinkLsa, hpicfOspfv3LinkLsdbNumPrefixes=hpicfOspfv3LinkLsdbNumPrefixes, hpicfOspfv3LogEntry=hpicfOspfv3LogEntry, hpicfOspfv3AreaLsdbMetric=hpicfOspfv3AreaLsdbMetric, hpicfOspfv3AreaLsdbRefLsType=hpicfOspfv3AreaLsdbRefLsType, hpicfOspfv3NbrUpTime=hpicfOspfv3NbrUpTime, hpicfOspfv3Compliance=hpicfOspfv3Compliance, hpicfOspfv3AreaLsdbStatIntraPreLsaCnt=hpicfOspfv3AreaLsdbStatIntraPreLsaCnt, hpicfOspfv3AsLsdbExtRouteTags=hpicfOspfv3AsLsdbExtRouteTags, hpicfOspfv3AreaLsdbStatsGroup=hpicfOspfv3AreaLsdbStatsGroup, hpicfOspfv3IfRcvdLSRPkt=hpicfOspfv3IfRcvdLSRPkt, hpicfOspfv3NetworkLSAAttachedRouter=hpicfOspfv3NetworkLSAAttachedRouter, hpicfOspfv3IfClearStatsTable=hpicfOspfv3IfClearStatsTable, hpicfOspfv3AsLsdbTable=hpicfOspfv3AsLsdbTable, hpicfOspfv3AsLsdbPrefixLength=hpicfOspfv3AsLsdbPrefixLength, hpicfOspfv3IfTable=hpicfOspfv3IfTable, hpicfOspfv3AreaLsdbRtrCapBits=hpicfOspfv3AreaLsdbRtrCapBits, hpicfOspfv3NbrTimeToExpiry=hpicfOspfv3NbrTimeToExpiry, hpicfOspfv3RouterLSATable=hpicfOspfv3RouterLSATable, hpicfOspfv3AreaEntry=hpicfOspfv3AreaEntry, hpicfOspfv3IfHelloDueTime=hpicfOspfv3IfHelloDueTime, hpicfOspfv3AsLsdbEFTFlags=hpicfOspfv3AsLsdbEFTFlags, hpicfOspfv3LinkAddrPrefix=hpicfOspfv3LinkAddrPrefix, hpicfOspfv3AreaLsdbPrefixLength=hpicfOspfv3AreaLsdbPrefixLength, hpicfOspfv3LinkLSAEntry=hpicfOspfv3LinkLSAEntry, hpicfOspfv3Compliances=hpicfOspfv3Compliances, hpicfOspfv3RouterLSAIfId=hpicfOspfv3RouterLSAIfId, hpicfOspfv3MIB=hpicfOspfv3MIB, hpicfOspfv3AreaTable=hpicfOspfv3AreaTable, hpicfOspfv3IfSentLSUPkt=hpicfOspfv3IfSentLSUPkt, hpicfOspfv3RouterLSAIfType=hpicfOspfv3RouterLSAIfType, hpicfOspfv3LinkLsdbLocalAddress=hpicfOspfv3LinkLsdbLocalAddress, hpicfOspfv3AsLsdbLsaLength=hpicfOspfv3AsLsdbLsaLength, hpicfOspfv3AreaAggregateEntry=hpicfOspfv3AreaAggregateEntry, hpicfOspfv3AreaLsdbTable=hpicfOspfv3AreaLsdbTable, hpicfOspfv3AreaLsdbAddrPrefix=hpicfOspfv3AreaLsdbAddrPrefix, hpicfOspfv3IntraAPAddrPrefix=hpicfOspfv3IntraAPAddrPrefix, hpicfOspfv3AreaNbrExchangeCount=hpicfOspfv3AreaNbrExchangeCount, hpicfOspfv3StatisticGroup1=hpicfOspfv3StatisticGroup1, hpicfOspfv3IntraAPLSATable=hpicfOspfv3IntraAPLSATable, hpicfOspfv3SpfTable=hpicfOspfv3SpfTable, hpicfOspfv3AsLsdbGroup=hpicfOspfv3AsLsdbGroup, hpicfOspfv3AreaLsdbLsaLength=hpicfOspfv3AreaLsdbLsaLength, hpicfOspfv3AreaNbr2wayCount=hpicfOspfv3AreaNbr2wayCount, hpicfOspfv3AreaLsdbNumPrefixes=hpicfOspfv3AreaLsdbNumPrefixes, hpicfOspfv3LinkLsdbGroup=hpicfOspfv3LinkLsdbGroup, hpicfOspfv3AsLsdbRefLsType=hpicfOspfv3AsLsdbRefLsType, hpicfOspfv3AreaLsdbExtRouteTags=hpicfOspfv3AreaLsdbExtRouteTags, hpicfOspfv3IfRcvdHelloPkt=hpicfOspfv3IfRcvdHelloPkt, hpicfOspfv3AsLsdbMetric=hpicfOspfv3AsLsdbMetric, hpicfOspfv3NbrRestartState=hpicfOspfv3NbrRestartState, hpicfOspfv3TrapControlGroup=hpicfOspfv3TrapControlGroup, hpicfOspfv3IfStatsTable=hpicfOspfv3IfStatsTable, hpicfOspfv3ClearCounters=hpicfOspfv3ClearCounters, hpicfOspfv3AsLsdbEntry=hpicfOspfv3AsLsdbEntry, hpicfOspfv3AreaLsdbStatsTable=hpicfOspfv3AreaLsdbStatsTable, hpicfOspfv3AreaLsdbStatRtrLsaCnt=hpicfOspfv3AreaLsdbStatRtrLsaCnt, hpicfOspfv3NbrDataBaseSummary=hpicfOspfv3NbrDataBaseSummary, hpicfOspfv3DefaultImportMetric=hpicfOspfv3DefaultImportMetric, hpicfOspfv3ExternalDistance=hpicfOspfv3ExternalDistance, hpicfOspfv3LinkPrefixOptions=hpicfOspfv3LinkPrefixOptions, hpicfOspfv3SpfThrottleStartInterval=hpicfOspfv3SpfThrottleStartInterval, hpicfOspfv3IfErrorTable=hpicfOspfv3IfErrorTable, hpicfOspfv3LinkLSATable=hpicfOspfv3LinkLSATable, hpicfOspfv3IfClearStatsEntry=hpicfOspfv3IfClearStatsEntry, hpicfOspfv3BasicGroup=hpicfOspfv3BasicGroup, hpicfOspfv3NbrGroup1=hpicfOspfv3NbrGroup1, hpicfOspfv3RouterLSANbrIfId=hpicfOspfv3RouterLSANbrIfId, hpicfOspfv3SpfReason=hpicfOspfv3SpfReason, hpicfOspfv3SpfEntry=hpicfOspfv3SpfEntry, hpicfOspfv3IfDRAddr=hpicfOspfv3IfDRAddr, hpicfOspfv3AsLsdbPrefixOptions=hpicfOspfv3AsLsdbPrefixOptions, hpicfOspfv3IfRcvdLSAPkt=hpicfOspfv3IfRcvdLSAPkt, hpicfOspfv3ASscopeUnknownLsaCount=hpicfOspfv3ASscopeUnknownLsaCount, hpicfOspfv3AreaCount=hpicfOspfv3AreaCount, hpicfOspfv3RouterLSANbrRtrId=hpicfOspfv3RouterLSANbrRtrId, hpicfOspfv3AreaInterfaceCount=hpicfOspfv3AreaInterfaceCount, hpicfOspfv3IntraAreaDistance=hpicfOspfv3IntraAreaDistance, hpicfOspfv3IfErrorCount=hpicfOspfv3IfErrorCount, hpicfOspfv3SpfThrottleCurrentSpfInterval=hpicfOspfv3SpfThrottleCurrentSpfInterval, hpicfOspfv3LinkLsdbTable=hpicfOspfv3LinkLsdbTable, hpicfOspfv3AreaLsdbStatsEntry=hpicfOspfv3AreaLsdbStatsEntry, hpicfOspfv3LinkLsdbEntry=hpicfOspfv3LinkLsdbEntry, hpicfOspfv3IfSentHelloPkt=hpicfOspfv3IfSentHelloPkt, hpicfOspfv3LogGroup=hpicfOspfv3LogGroup, hpicfOspfv3IfPassive=hpicfOspfv3IfPassive, hpicfOspfv3NetworkLSATable=hpicfOspfv3NetworkLSATable, hpicfOspfv3IfBDRAddr=hpicfOspfv3IfBDRAddr, hpicfOspfv3AreaNbrInitCount=hpicfOspfv3AreaNbrInitCount, hpicfOspfv3AreaNbrDownCount=hpicfOspfv3AreaNbrDownCount, hpicfOspfv3AreaLsdbEFTFlags=hpicfOspfv3AreaLsdbEFTFlags, hpicfOspfv3IfAdjNbrCount=hpicfOspfv3IfAdjNbrCount, hpicfOspfv3NbrLinkStateRequest=hpicfOspfv3NbrLinkStateRequest, hpicfOspfv3RouterLSAMetric=hpicfOspfv3RouterLSAMetric, hpicfOspfv3AreaNbrFullCount=hpicfOspfv3AreaNbrFullCount, hpicfOspfv3LinkPrefixLength=hpicfOspfv3LinkPrefixLength, hpicfOspfv3InterAreaDistance=hpicfOspfv3InterAreaDistance, hpicfOspfv3Traps=hpicfOspfv3Traps, hpicfOspfv3AreaLsdbStatNwLsaCnt=hpicfOspfv3AreaLsdbStatNwLsaCnt, hpicfOspfv3IntraAPPrefixOptions=hpicfOspfv3IntraAPPrefixOptions, hpicfOspfv3Objects=hpicfOspfv3Objects, hpicfOspfv3IfSentDDPkt=hpicfOspfv3IfSentDDPkt, hpicfOspfv3SpfIndex=hpicfOspfv3SpfIndex, hpicfOspfv3IfGroup1=hpicfOspfv3IfGroup1, hpicfOspfv3IfSentTotalErrorCount=hpicfOspfv3IfSentTotalErrorCount, hpicfOspfv3AreaNbrLoadingCount=hpicfOspfv3AreaNbrLoadingCount, hpicfOspfv3NetworkLSAEntry=hpicfOspfv3NetworkLSAEntry, hpicfOspfv3SpfThrottleWaitInterval=hpicfOspfv3SpfThrottleWaitInterval, hpicfOspfv3AreaLsdbStatInterRtrLsaCnt=hpicfOspfv3AreaLsdbStatInterRtrLsaCnt, hpicfOspfv3IntraAPPrefixLength=hpicfOspfv3IntraAPPrefixLength, hpicfOspfv3AreaLsdbEntry=hpicfOspfv3AreaLsdbEntry, hpicfOspfv3NetworkLSASeqNum=hpicfOspfv3NetworkLSASeqNum, hpicfOspfv3AreaLsdbGroup=hpicfOspfv3AreaLsdbGroup, hpicfOspfv3IfEntry=hpicfOspfv3IfEntry, hpicfOspfv3Trap=hpicfOspfv3Trap, hpicfOspfv3IfRcvdDDPkt=hpicfOspfv3IfRcvdDDPkt, hpicfOspfv3AreaScopeUnknownLsaCount=hpicfOspfv3AreaScopeUnknownLsaCount, hpicfOspfv3IfStatsEntry=hpicfOspfv3IfStatsEntry, hpicfOspfv3LinkLsdbLsaLength=hpicfOspfv3LinkLsdbLsaLength, hpicfOspfv3Groups=hpicfOspfv3Groups, hpicfOspfv3IfMetricTable=hpicfOspfv3IfMetricTable, hpicfOspfv3IntraAPLSAEntry=hpicfOspfv3IntraAPLSAEntry, hpicfOspfv3IfMetricObjects=hpicfOspfv3IfMetricObjects, hpicfOspfv3IfNbrCount=hpicfOspfv3IfNbrCount, hpicfOspfv3MetricGroup=hpicfOspfv3MetricGroup, hpicfOspfv3RestartHelper=hpicfOspfv3RestartHelper, hpicfOspfv3Compliance2=hpicfOspfv3Compliance2, hpicfOspfv3TrapControl=hpicfOspfv3TrapControl, hpicfOspfv3AsLsdbRefLsId=hpicfOspfv3AsLsdbRefLsId, hpicfOspfv3AreaAggregateTable=hpicfOspfv3AreaAggregateTable, hpicfOspfv3GeneralGroup=hpicfOspfv3GeneralGroup, hpicfOspfv3AsLsdbFwdingAddress=hpicfOspfv3AsLsdbFwdingAddress, hpicfOspfv3Conformance=hpicfOspfv3Conformance, hpicfOspfv3AreaLsdbRefAdvRtrId=hpicfOspfv3AreaLsdbRefAdvRtrId, hpicfOspfv3LogType=hpicfOspfv3LogType, hpicfOspfv3ReferenceCost=hpicfOspfv3ReferenceCost, hpicfOspfv3SetTrap=hpicfOspfv3SetTrap, hpicfOspfv3AreaLsdbFwdingAddress=hpicfOspfv3AreaLsdbFwdingAddress, hpicfOspfv3AreaLsdbDstRtrId=hpicfOspfv3AreaLsdbDstRtrId, hpicfOspfv3IfRcvdLSUPkt=hpicfOspfv3IfRcvdLSUPkt, hpicfOspfv3IfMetricEntry=hpicfOspfv3IfMetricEntry, hpicfOspfv3IntraAPMetric=hpicfOspfv3IntraAPMetric, hpicfOspfv3AreaLsdbStatInterPreLsaCnt=hpicfOspfv3AreaLsdbStatInterPreLsaCnt, hpicfOspfv3IfErrorEntry=hpicfOspfv3IfErrorEntry, hpicfOspfv3AreaLsdbLinks=hpicfOspfv3AreaLsdbLinks, hpicfOspfv3LogAction=hpicfOspfv3LogAction, hpicfOspfv3AreaLsdbPrefixOptions=hpicfOspfv3AreaLsdbPrefixOptions, hpicfOspfv3AreaLsdbOptions=hpicfOspfv3AreaLsdbOptions, hpicfOspfv3RouterLSAEntry=hpicfOspfv3RouterLSAEntry, hpicfOspfv3SpfThrottleMaxWaitTime=hpicfOspfv3SpfThrottleMaxWaitTime, hpicfOspfv3AreaNbrAttemptCount=hpicfOspfv3AreaNbrAttemptCount, hpicfOspfv3IfSentLSAPkt=hpicfOspfv3IfSentLSAPkt, hpicfOspfv3LinkLsdbRtrPriority=hpicfOspfv3LinkLsdbRtrPriority, hpicfOspfv3NbrTable=hpicfOspfv3NbrTable)
