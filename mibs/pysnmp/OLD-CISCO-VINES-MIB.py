#
# PySNMP MIB module OLD-CISCO-VINES-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OLD-CISCO-VINES-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:23:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
temporary, = mibBuilder.importSymbols("CISCO-SMI", "temporary")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, TimeTicks, ModuleIdentity, ObjectIdentity, IpAddress, iso, MibIdentifier, Counter32, Counter64, Integer32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "ModuleIdentity", "ObjectIdentity", "IpAddress", "iso", "MibIdentifier", "Counter32", "Counter64", "Integer32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tmpvines = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 3, 5))
vinesInput = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesInput.setStatus('mandatory')
vinesOutput = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesOutput.setStatus('mandatory')
vinesLocaldest = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesLocaldest.setStatus('mandatory')
vinesForwarded = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesForwarded.setStatus('mandatory')
vinesBcastin = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesBcastin.setStatus('mandatory')
vinesBcastout = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesBcastout.setStatus('mandatory')
vinesBcastfwd = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesBcastfwd.setStatus('mandatory')
vinesNotlan = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesNotlan.setStatus('mandatory')
vinesNotgt4800 = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesNotgt4800.setStatus('mandatory')
vinesNocharges = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesNocharges.setStatus('mandatory')
vinesFormaterror = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesFormaterror.setStatus('mandatory')
vinesCksumerr = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesCksumerr.setStatus('mandatory')
vinesHopcount = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesHopcount.setStatus('mandatory')
vinesNoroute = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesNoroute.setStatus('mandatory')
vinesEncapsfailed = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesEncapsfailed.setStatus('mandatory')
vinesUnknown = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesUnknown.setStatus('mandatory')
vinesIcpIn = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIcpIn.setStatus('mandatory')
vinesIcpOut = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIcpOut.setStatus('mandatory')
vinesMetricOut = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesMetricOut.setStatus('mandatory')
vinesMacEchoIn = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesMacEchoIn.setStatus('mandatory')
vinesMacEchoOut = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesMacEchoOut.setStatus('mandatory')
vinesEchoIn = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesEchoIn.setStatus('mandatory')
vinesEchoOut = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesEchoOut.setStatus('mandatory')
vinesProxyCnt = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesProxyCnt.setStatus('mandatory')
vinesProxyReplyCnt = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesProxyReplyCnt.setStatus('mandatory')
vinesNet = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesNet.setStatus('mandatory')
vinesSubNet = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesSubNet.setStatus('mandatory')
vinesClient = MibScalar((1, 3, 6, 1, 4, 1, 9, 3, 5, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesClient.setStatus('mandatory')
vinesIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 3, 5, 29), )
if mibBuilder.loadTexts: vinesIfTable.setStatus('mandatory')
vinesIfTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: vinesIfTableEntry.setStatus('mandatory')
vinesIfMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfMetric.setStatus('mandatory')
vinesIfEnctype = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfEnctype.setStatus('mandatory')
vinesIfAccesslist = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfAccesslist.setStatus('mandatory')
vinesIfPropagate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("neverPropagate", 1), ("alwaysPropagate", 2), ("dynamicPropagate", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfPropagate.setStatus('mandatory')
vinesIfArpEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfArpEnabled.setStatus('mandatory')
vinesIfServerless = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("neverSvrless", 1), ("dynamicSvrless", 2), ("alwaysSvrless", 3), ("alwaysBcastSvrless", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfServerless.setStatus('mandatory')
vinesIfRedirectInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRedirectInterval.setStatus('mandatory')
vinesIfSplitDisabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfSplitDisabled.setStatus('mandatory')
vinesIfLineup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfLineup.setStatus('mandatory')
vinesIfFastokay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfFastokay.setStatus('mandatory')
vinesIfRouteCache = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRouteCache.setStatus('mandatory')
vinesIfRxNotEnabledCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxNotEnabledCnt.setStatus('mandatory')
vinesIfRxFormatErrorCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxFormatErrorCnt.setStatus('mandatory')
vinesIfRxLocalDestCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxLocalDestCnt.setStatus('mandatory')
vinesIfRxBcastinCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxBcastinCnt.setStatus('mandatory')
vinesIfRxForwardedCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxForwardedCnt.setStatus('mandatory')
vinesIfRxNoRouteCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxNoRouteCnt.setStatus('mandatory')
vinesIfRxZeroHopCountCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxZeroHopCountCnt.setStatus('mandatory')
vinesIfRxChecksumErrorCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxChecksumErrorCnt.setStatus('mandatory')
vinesIfRxArp0Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxArp0Cnt.setStatus('mandatory')
vinesIfRxArp1Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxArp1Cnt.setStatus('mandatory')
vinesIfRxArp2Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxArp2Cnt.setStatus('mandatory')
vinesIfRxArp3Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxArp3Cnt.setStatus('mandatory')
vinesIfRxArpIllegalCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxArpIllegalCnt.setStatus('mandatory')
vinesIfRxIcpErrorCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxIcpErrorCnt.setStatus('mandatory')
vinesIfRxIcpMetricCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxIcpMetricCnt.setStatus('mandatory')
vinesIfRxIcpIllegalCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxIcpIllegalCnt.setStatus('mandatory')
vinesIfRxIpcCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxIpcCnt.setStatus('mandatory')
vinesIfRxRtp0Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxRtp0Cnt.setStatus('mandatory')
vinesIfRxRtp1Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxRtp1Cnt.setStatus('mandatory')
vinesIfRxRtp2Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxRtp2Cnt.setStatus('mandatory')
vinesIfRxRtp3Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxRtp3Cnt.setStatus('mandatory')
vinesIfRxRtp4Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxRtp4Cnt.setStatus('mandatory')
vinesIfRxRtp5Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxRtp5Cnt.setStatus('mandatory')
vinesIfRxRtp6Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxRtp6Cnt.setStatus('mandatory')
vinesIfRxRtpIllegalCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxRtpIllegalCnt.setStatus('mandatory')
vinesIfRxSppCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxSppCnt.setStatus('mandatory')
vinesIfRxIpUnknownCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxIpUnknownCnt.setStatus('mandatory')
vinesIfRxIpcUnknownCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxIpcUnknownCnt.setStatus('mandatory')
vinesIfRxBcastHelperedCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxBcastHelperedCnt.setStatus('mandatory')
vinesIfRxBcastForwardedCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxBcastForwardedCnt.setStatus('mandatory')
vinesIfRxBcastDuplicateCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxBcastDuplicateCnt.setStatus('mandatory')
vinesIfRxEchoCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxEchoCnt.setStatus('mandatory')
vinesIfRxMacEchoCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxMacEchoCnt.setStatus('mandatory')
vinesIfRxProxyReplyCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfRxProxyReplyCnt.setStatus('mandatory')
vinesIfTxUnicastCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxUnicastCnt.setStatus('mandatory')
vinesIfTxBcastCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxBcastCnt.setStatus('mandatory')
vinesIfTxForwardedCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxForwardedCnt.setStatus('mandatory')
vinesIfTxFailedEncapsCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxFailedEncapsCnt.setStatus('mandatory')
vinesIfTxFailedAccessCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxFailedAccessCnt.setStatus('mandatory')
vinesIfTxFailedDownCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxFailedDownCnt.setStatus('mandatory')
vinesIfTxNotBcastToSourceCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxNotBcastToSourceCnt.setStatus('mandatory')
vinesIfTxNotBcastNotlanCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxNotBcastNotlanCnt.setStatus('mandatory')
vinesIfTxNotBcastNotgt4800Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxNotBcastNotgt4800Cnt.setStatus('mandatory')
vinesIfTxNotBcastPpchargeCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxNotBcastPpchargeCnt.setStatus('mandatory')
vinesIfTxBcastForwardedCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxBcastForwardedCnt.setStatus('mandatory')
vinesIfTxBcastHelperedCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxBcastHelperedCnt.setStatus('mandatory')
vinesIfTxArp0Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxArp0Cnt.setStatus('mandatory')
vinesIfTxArp1Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxArp1Cnt.setStatus('mandatory')
vinesIfTxArp2Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxArp2Cnt.setStatus('mandatory')
vinesIfTxArp3Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxArp3Cnt.setStatus('mandatory')
vinesIfTxIcpErrorCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 67), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxIcpErrorCnt.setStatus('mandatory')
vinesIfTxIcpMetricCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 68), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxIcpMetricCnt.setStatus('mandatory')
vinesIfTxIpcCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxIpcCnt.setStatus('mandatory')
vinesIfTxRtp0Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 70), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxRtp0Cnt.setStatus('mandatory')
vinesIfTxRtp1Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 71), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxRtp1Cnt.setStatus('mandatory')
vinesIfTxRtp2Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 72), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxRtp2Cnt.setStatus('mandatory')
vinesIfTxRtp3Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 73), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxRtp3Cnt.setStatus('mandatory')
vinesIfTxRtp4Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 74), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxRtp4Cnt.setStatus('mandatory')
vinesIfTxRtp5Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 75), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxRtp5Cnt.setStatus('mandatory')
vinesIfTxRtp6Cnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 76), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxRtp6Cnt.setStatus('mandatory')
vinesIfTxSppCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 77), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxSppCnt.setStatus('mandatory')
vinesIfTxEchoCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 78), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxEchoCnt.setStatus('mandatory')
vinesIfTxMacEchoCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 79), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxMacEchoCnt.setStatus('mandatory')
vinesIfTxProxyCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 80), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfTxProxyCnt.setStatus('mandatory')
vinesIfInputRouterFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfInputRouterFilter.setStatus('mandatory')
vinesIfInputNetworkFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfInputNetworkFilter.setStatus('mandatory')
vinesIfOutputNetworkFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 3, 5, 29, 1, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vinesIfOutputNetworkFilter.setStatus('mandatory')
mibBuilder.exportSymbols("OLD-CISCO-VINES-MIB", vinesBcastin=vinesBcastin, vinesCksumerr=vinesCksumerr, vinesIfTxBcastForwardedCnt=vinesIfTxBcastForwardedCnt, vinesNoroute=vinesNoroute, vinesIfRxNotEnabledCnt=vinesIfRxNotEnabledCnt, vinesInput=vinesInput, vinesIfRxArp0Cnt=vinesIfRxArp0Cnt, vinesBcastfwd=vinesBcastfwd, tmpvines=tmpvines, vinesIfTxIcpErrorCnt=vinesIfTxIcpErrorCnt, vinesIfTxUnicastCnt=vinesIfTxUnicastCnt, vinesMacEchoIn=vinesMacEchoIn, vinesIfTxForwardedCnt=vinesIfTxForwardedCnt, vinesNet=vinesNet, vinesIfRxEchoCnt=vinesIfRxEchoCnt, vinesIfRxIpUnknownCnt=vinesIfRxIpUnknownCnt, vinesIfRxRtp5Cnt=vinesIfRxRtp5Cnt, vinesIfOutputNetworkFilter=vinesIfOutputNetworkFilter, vinesEncapsfailed=vinesEncapsfailed, vinesIfServerless=vinesIfServerless, vinesIfTxNotBcastToSourceCnt=vinesIfTxNotBcastToSourceCnt, vinesIfRxIpcCnt=vinesIfRxIpcCnt, vinesIfTxRtp1Cnt=vinesIfTxRtp1Cnt, vinesIfRxChecksumErrorCnt=vinesIfRxChecksumErrorCnt, vinesIfMetric=vinesIfMetric, vinesIfRxBcastinCnt=vinesIfRxBcastinCnt, vinesIfRxZeroHopCountCnt=vinesIfRxZeroHopCountCnt, vinesIfRxRtp0Cnt=vinesIfRxRtp0Cnt, vinesIfTxIcpMetricCnt=vinesIfTxIcpMetricCnt, vinesEchoIn=vinesEchoIn, vinesIfTxRtp0Cnt=vinesIfTxRtp0Cnt, vinesIcpOut=vinesIcpOut, vinesFormaterror=vinesFormaterror, vinesIfTxFailedEncapsCnt=vinesIfTxFailedEncapsCnt, vinesIfRouteCache=vinesIfRouteCache, vinesIfRxRtpIllegalCnt=vinesIfRxRtpIllegalCnt, vinesIfArpEnabled=vinesIfArpEnabled, vinesIfRxIcpIllegalCnt=vinesIfRxIcpIllegalCnt, vinesIfTxRtp3Cnt=vinesIfTxRtp3Cnt, vinesIfTxNotBcastPpchargeCnt=vinesIfTxNotBcastPpchargeCnt, vinesIfTxFailedDownCnt=vinesIfTxFailedDownCnt, vinesIfPropagate=vinesIfPropagate, vinesIfTxNotBcastNotgt4800Cnt=vinesIfTxNotBcastNotgt4800Cnt, vinesIfEnctype=vinesIfEnctype, vinesSubNet=vinesSubNet, vinesIfTxBcastHelperedCnt=vinesIfTxBcastHelperedCnt, vinesForwarded=vinesForwarded, vinesIfTxNotBcastNotlanCnt=vinesIfTxNotBcastNotlanCnt, vinesIfTxIpcCnt=vinesIfTxIpcCnt, vinesIfRxArp3Cnt=vinesIfRxArp3Cnt, vinesIfTable=vinesIfTable, vinesMacEchoOut=vinesMacEchoOut, vinesIfRxIcpErrorCnt=vinesIfRxIcpErrorCnt, vinesIfTxEchoCnt=vinesIfTxEchoCnt, vinesIfTxProxyCnt=vinesIfTxProxyCnt, vinesHopcount=vinesHopcount, vinesIfRxBcastDuplicateCnt=vinesIfRxBcastDuplicateCnt, vinesIfTxMacEchoCnt=vinesIfTxMacEchoCnt, vinesIfTxFailedAccessCnt=vinesIfTxFailedAccessCnt, vinesProxyReplyCnt=vinesProxyReplyCnt, vinesIfLineup=vinesIfLineup, vinesIfRxMacEchoCnt=vinesIfRxMacEchoCnt, vinesOutput=vinesOutput, vinesIfTableEntry=vinesIfTableEntry, vinesIfTxSppCnt=vinesIfTxSppCnt, vinesIfRxIcpMetricCnt=vinesIfRxIcpMetricCnt, vinesIfRxFormatErrorCnt=vinesIfRxFormatErrorCnt, vinesIfRxIpcUnknownCnt=vinesIfRxIpcUnknownCnt, vinesIfInputNetworkFilter=vinesIfInputNetworkFilter, vinesIfRxArp2Cnt=vinesIfRxArp2Cnt, vinesIfRxRtp4Cnt=vinesIfRxRtp4Cnt, vinesIfTxRtp5Cnt=vinesIfTxRtp5Cnt, vinesBcastout=vinesBcastout, vinesIfRxRtp3Cnt=vinesIfRxRtp3Cnt, vinesProxyCnt=vinesProxyCnt, vinesNotlan=vinesNotlan, vinesIfRxNoRouteCnt=vinesIfRxNoRouteCnt, vinesIfRxRtp2Cnt=vinesIfRxRtp2Cnt, vinesEchoOut=vinesEchoOut, vinesIfTxArp2Cnt=vinesIfTxArp2Cnt, vinesNotgt4800=vinesNotgt4800, vinesIfFastokay=vinesIfFastokay, vinesIfInputRouterFilter=vinesIfInputRouterFilter, vinesIfRxRtp6Cnt=vinesIfRxRtp6Cnt, vinesIfTxArp0Cnt=vinesIfTxArp0Cnt, vinesUnknown=vinesUnknown, vinesLocaldest=vinesLocaldest, vinesIfTxRtp6Cnt=vinesIfTxRtp6Cnt, vinesIfRedirectInterval=vinesIfRedirectInterval, vinesIfSplitDisabled=vinesIfSplitDisabled, vinesIfTxArp1Cnt=vinesIfTxArp1Cnt, vinesIfRxSppCnt=vinesIfRxSppCnt, vinesIfRxArp1Cnt=vinesIfRxArp1Cnt, vinesIfRxArpIllegalCnt=vinesIfRxArpIllegalCnt, vinesClient=vinesClient, vinesIcpIn=vinesIcpIn, vinesIfTxRtp4Cnt=vinesIfTxRtp4Cnt, vinesIfRxProxyReplyCnt=vinesIfRxProxyReplyCnt, vinesNocharges=vinesNocharges, vinesIfTxRtp2Cnt=vinesIfTxRtp2Cnt, vinesIfRxForwardedCnt=vinesIfRxForwardedCnt, vinesIfTxBcastCnt=vinesIfTxBcastCnt, vinesIfRxBcastForwardedCnt=vinesIfRxBcastForwardedCnt, vinesIfRxRtp1Cnt=vinesIfRxRtp1Cnt, vinesMetricOut=vinesMetricOut, vinesIfAccesslist=vinesIfAccesslist, vinesIfTxArp3Cnt=vinesIfTxArp3Cnt, vinesIfRxLocalDestCnt=vinesIfRxLocalDestCnt, vinesIfRxBcastHelperedCnt=vinesIfRxBcastHelperedCnt)
