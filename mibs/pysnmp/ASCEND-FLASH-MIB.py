#
# PySNMP MIB module ASCEND-FLASH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-FLASH-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:10:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
flashGroup, = mibBuilder.importSymbols("ASCEND-MIB", "flashGroup")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, iso, Counter32, NotificationType, Gauge32, Unsigned32, ObjectIdentity, Bits, TimeTicks, IpAddress, ModuleIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "iso", "Counter32", "NotificationType", "Gauge32", "Unsigned32", "ObjectIdentity", "Bits", "TimeTicks", "IpAddress", "ModuleIdentity", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
flashDevice = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 22, 1))
class TruthValue(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("true", 1), ("false", 2))

flashDevices = MibScalar((1, 3, 6, 1, 4, 1, 529, 22, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashDevices.setStatus('mandatory')
flashDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 529, 22, 1, 2), )
if mibBuilder.loadTexts: flashDeviceTable.setStatus('mandatory')
flashDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 22, 1, 2, 1), ).setIndexNames((0, "ASCEND-FLASH-MIB", "flashDeviceSocket"))
if mibBuilder.loadTexts: flashDeviceEntry.setStatus('mandatory')
flashDeviceSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 22, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashDeviceSocket.setStatus('mandatory')
flashDeviceController = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 22, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashDeviceController.setStatus('mandatory')
flashDeviceControllerSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 22, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashDeviceControllerSocket.setStatus('mandatory')
flashDeviceSize = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 22, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashDeviceSize.setStatus('mandatory')
flashDeviceUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 22, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashDeviceUsed.setStatus('mandatory')
flashDeviceState = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 22, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inserted", 1), ("removed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashDeviceState.setStatus('mandatory')
flashDeviceMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 22, 1, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashDeviceMaster.setStatus('mandatory')
flashDeviceFormatStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 22, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 99, 100))).clone(namedValues=NamedValues(("format-v1", 1), ("format-v2", 2), ("format-v3", 3), ("format-other", 99), ("unformatted", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashDeviceFormatStatus.setStatus('mandatory')
flashDeviceDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 22, 1, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashDeviceDescription.setStatus('mandatory')
flashFileTable = MibTable((1, 3, 6, 1, 4, 1, 529, 22, 2), )
if mibBuilder.loadTexts: flashFileTable.setStatus('mandatory')
flashFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 22, 2, 1), ).setIndexNames((0, "ASCEND-FLASH-MIB", "flashFileSocket"), (0, "ASCEND-FLASH-MIB", "flashFileIndex"))
if mibBuilder.loadTexts: flashFileEntry.setStatus('mandatory')
flashFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 22, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashFileIndex.setStatus('mandatory')
flashFileSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 22, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashFileSocket.setStatus('mandatory')
flashFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 22, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashFileSize.setStatus('mandatory')
flashFileStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 22, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2), ("open-read", 3), ("open-write", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashFileStatus.setStatus('mandatory')
flashFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 22, 2, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashFileName.setStatus('mandatory')
flashFileChecksum = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 22, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashFileChecksum.setStatus('mandatory')
flashFileVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 22, 2, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashFileVersion.setStatus('mandatory')
flashFileAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 22, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("readOnly", 1), ("readWrite", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashFileAccess.setStatus('mandatory')
flashFileDateTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 22, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashFileDateTimeStamp.setStatus('mandatory')
flashOperation = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 22, 3))
flashOperationStatus = MibScalar((1, 3, 6, 1, 4, 1, 529, 22, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 50, 51, 52, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162))).clone(namedValues=NamedValues(("idle", 1), ("activeFormating", 2), ("activeFileUpload", 3), ("activeConfigUpload", 4), ("activeConfigDownload", 5), ("activeInProgress", 6), ("success", 50), ("errorGeneric", 51), ("errorFilenameNotValid", 52), ("errorTftpEnotFound", 101), ("errorTftpEaccess", 102), ("errorTftpEnoSpace", 103), ("errorTftpEbadOp", 104), ("errorTftpEbadTid", 105), ("errorTftpEexists", 106), ("errorTftpEnouser", 107), ("errorTftpEparm", 108), ("errorTftpEbusy", 109), ("errorTftpEresource", 110), ("errorTftpEtimeout", 111), ("errorTftpEuerror", 112), ("errorTftpEretries", 113), ("errorTftpCreateFile", 114), ("errorTftpOpenFile", 115), ("errorTftpReadData", 116), ("errorTftpWriteData", 117), ("errorFlashResultBadParam", 151), ("errorFlashResultNotFound", 152), ("errorFlashResultTooManyOpen", 153), ("errorFlashResultAlreadyOpen", 154), ("errorFlashResultNullFile", 155), ("errorFlashResultNoCard", 156), ("errorFlashResultNoFormat", 157), ("errorFlashResultOldFormat", 158), ("errorFlashResultReadOnly", 159), ("errorFlashResultNoSpace", 160), ("errorFlashResultUnavail", 161), ("errorFlashResultInternalError", 162)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: flashOperationStatus.setStatus('mandatory')
flashOperationCommand = MibScalar((1, 3, 6, 1, 4, 1, 529, 22, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("format-card", 1), ("tftp-upload", 2), ("no-command", 3), ("load-config", 4), ("save-config", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: flashOperationCommand.setStatus('mandatory')
flashOperationHost = MibScalar((1, 3, 6, 1, 4, 1, 529, 22, 3, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: flashOperationHost.setStatus('mandatory')
flashOperationDestFileName = MibScalar((1, 3, 6, 1, 4, 1, 529, 22, 3, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: flashOperationDestFileName.setStatus('mandatory')
flashOperationSrcFileName = MibScalar((1, 3, 6, 1, 4, 1, 529, 22, 3, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: flashOperationSrcFileName.setStatus('mandatory')
flashOperationSocket = MibScalar((1, 3, 6, 1, 4, 1, 529, 22, 3, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: flashOperationSocket.setStatus('mandatory')
flashOperationTftpPort = MibScalar((1, 3, 6, 1, 4, 1, 529, 22, 3, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: flashOperationTftpPort.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-FLASH-MIB", flashDeviceSize=flashDeviceSize, flashFileTable=flashFileTable, flashDeviceControllerSocket=flashDeviceControllerSocket, flashOperationCommand=flashOperationCommand, flashDeviceEntry=flashDeviceEntry, flashOperation=flashOperation, flashFileSize=flashFileSize, flashFileStatus=flashFileStatus, flashFileIndex=flashFileIndex, flashOperationSocket=flashOperationSocket, flashDevices=flashDevices, flashDeviceTable=flashDeviceTable, flashFileVersion=flashFileVersion, flashOperationSrcFileName=flashOperationSrcFileName, flashFileDateTimeStamp=flashFileDateTimeStamp, flashOperationHost=flashOperationHost, flashOperationStatus=flashOperationStatus, flashDevice=flashDevice, TruthValue=TruthValue, flashDeviceDescription=flashDeviceDescription, flashFileName=flashFileName, flashFileChecksum=flashFileChecksum, flashDeviceState=flashDeviceState, flashFileSocket=flashFileSocket, flashOperationTftpPort=flashOperationTftpPort, flashDeviceController=flashDeviceController, flashDeviceUsed=flashDeviceUsed, flashDeviceSocket=flashDeviceSocket, flashDeviceFormatStatus=flashDeviceFormatStatus, flashDeviceMaster=flashDeviceMaster, flashOperationDestFileName=flashOperationDestFileName, flashFileAccess=flashFileAccess, flashFileEntry=flashFileEntry)
