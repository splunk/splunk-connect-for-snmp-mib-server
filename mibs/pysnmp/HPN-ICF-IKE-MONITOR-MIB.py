#
# PySNMP MIB module HPN-ICF-IKE-MONITOR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-IKE-MONITOR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:27:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Integer32, Bits, Unsigned32, ModuleIdentity, IpAddress, iso, TimeTicks, NotificationType, ObjectIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Integer32", "Bits", "Unsigned32", "ModuleIdentity", "IpAddress", "iso", "TimeTicks", "NotificationType", "ObjectIdentity", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hpnicfIKEMonitor = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30))
if mibBuilder.loadTexts: hpnicfIKEMonitor.setLastUpdated('201206280000Z')
if mibBuilder.loadTexts: hpnicfIKEMonitor.setOrganization('')
class HpnicfIKENegoMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 4, 32))
    namedValues = NamedValues(("mainMode", 2), ("aggressiveMode", 4), ("quickMode", 32))

class HpnicfIKEAuthMethod(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("preSharedKey", 1), ("dsaSignatures", 2), ("rsaSignatures", 3))

class HpnicfDiffHellmanGrp(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 5, 14, 24, 2147483647))
    namedValues = NamedValues(("none", 0), ("dhGroup1", 1), ("dhGroup2", 2), ("dhGroup5", 5), ("dhGroup14", 14), ("dhGroup24", 24), ("invalidGroup", 2147483647))

class HpnicfEncryptAlgo(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 2147483647))
    namedValues = NamedValues(("none", 0), ("desCbc", 1), ("ideaCbc", 2), ("blowfishCbc", 3), ("rc5R16B64Cbc", 4), ("tripleDesCbc", 5), ("castCbc", 6), ("aesCbc", 7), ("aesCbc128", 8), ("aesCbc192", 9), ("aesCbc256", 10), ("aesCtr", 11), ("aesCamelliaCbc", 12), ("rc4", 13), ("invalidAlg", 2147483647))

class HpnicfAuthAlgo(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 2147483647))
    namedValues = NamedValues(("none", 0), ("md5", 1), ("sha1", 2), ("sha256", 3), ("sha384", 4), ("sha512", 5), ("invalidAlg", 2147483647))

class HpnicfSaProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("reserved", 0), ("isakmp", 1), ("ah", 2), ("esp", 3), ("ipcomp", 4))

class HpnicfTrapStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

class HpnicfIKEIDType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("reserved", 0), ("ipv4Addr", 1), ("fqdn", 2), ("userFqdn", 3), ("ipv4AddrSubnet", 4), ("ipv6Addr", 5), ("ipv6AddrSubnet", 6), ("ipv4AddrRange", 7), ("ipv6AddrRange", 8), ("derAsn1Dn", 9), ("derAsn1Gn", 10), ("keyId", 11))

class HpnicfTrafficType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("ipv4Addr", 1), ("ipv4AddrSubnet", 4), ("ipv6Addr", 5), ("ipv6AddrSubnet", 6), ("ipv4AddrRange", 7), ("ipv6AddrRange", 8))

class HpnicfIKETunnelState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("active", 1), ("timeout", 2))

hpnicfIKEObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1))
hpnicfIKETunnelTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1), )
if mibBuilder.loadTexts: hpnicfIKETunnelTable.setStatus('current')
hpnicfIKETunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunIndex"))
if mibBuilder.loadTexts: hpnicfIKETunnelEntry.setStatus('current')
hpnicfIKETunIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfIKETunIndex.setStatus('current')
hpnicfIKETunLocalType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 2), HpnicfIKEIDType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunLocalType.setStatus('current')
hpnicfIKETunLocalValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunLocalValue1.setStatus('current')
hpnicfIKETunLocalValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunLocalValue2.setStatus('current')
hpnicfIKETunLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunLocalAddr.setStatus('deprecated')
hpnicfIKETunRemoteType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 6), HpnicfIKEIDType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunRemoteType.setStatus('current')
hpnicfIKETunRemoteValue1 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunRemoteValue1.setStatus('current')
hpnicfIKETunRemoteValue2 = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunRemoteValue2.setStatus('current')
hpnicfIKETunRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunRemoteAddr.setStatus('deprecated')
hpnicfIKETunInitiator = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunInitiator.setStatus('current')
hpnicfIKETunNegoMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 11), HpnicfIKENegoMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunNegoMode.setStatus('current')
hpnicfIKETunDiffHellmanGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 12), HpnicfDiffHellmanGrp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunDiffHellmanGrp.setStatus('current')
hpnicfIKETunEncryptAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 13), HpnicfEncryptAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunEncryptAlgo.setStatus('current')
hpnicfIKETunHashAlgo = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 14), HpnicfAuthAlgo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunHashAlgo.setStatus('current')
hpnicfIKETunAuthMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 15), HpnicfIKEAuthMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunAuthMethod.setStatus('current')
hpnicfIKETunLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunLifeTime.setStatus('current')
hpnicfIKETunActiveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunActiveTime.setStatus('current')
hpnicfIKETunRemainTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunRemainTime.setStatus('current')
hpnicfIKETunTotalRefreshes = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunTotalRefreshes.setStatus('current')
hpnicfIKETunState = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 20), HpnicfIKETunnelState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunState.setStatus('current')
hpnicfIKETunDpdIntervalTime = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 21), Integer32().clone(10)).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunDpdIntervalTime.setStatus('current')
hpnicfIKETunDpdTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 22), Integer32().clone(5)).setUnits('second').setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunDpdTimeOut.setStatus('current')
hpnicfIKETunLocalInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 23), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunLocalInetAddrType.setStatus('current')
hpnicfIKETunLocalInetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 24), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunLocalInetAddr.setStatus('current')
hpnicfIKETunRemoteInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 25), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunRemoteInetAddrType.setStatus('current')
hpnicfIKETunRemoteInetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 1, 1, 26), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunRemoteInetAddr.setStatus('current')
hpnicfIKETunnelStatTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 2), )
if mibBuilder.loadTexts: hpnicfIKETunnelStatTable.setStatus('current')
hpnicfIKETunnelStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 2, 1), ).setIndexNames((0, "HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunIndex"))
if mibBuilder.loadTexts: hpnicfIKETunnelStatEntry.setStatus('current')
hpnicfIKETunInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunInOctets.setStatus('current')
hpnicfIKETunInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunInPkts.setStatus('current')
hpnicfIKETunInDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunInDropPkts.setStatus('current')
hpnicfIKETunInP2Exchgs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunInP2Exchgs.setStatus('current')
hpnicfIKETunInP2ExchgRejets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunInP2ExchgRejets.setStatus('current')
hpnicfIKETunInP2SaDelRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunInP2SaDelRequests.setStatus('current')
hpnicfIKETunInP1SaDelRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunInP1SaDelRequests.setStatus('current')
hpnicfIKETunInNotifys = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunInNotifys.setStatus('current')
hpnicfIKETunOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunOutOctets.setStatus('current')
hpnicfIKETunOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunOutPkts.setStatus('current')
hpnicfIKETunOutDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunOutDropPkts.setStatus('current')
hpnicfIKETunOutP2Exchgs = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunOutP2Exchgs.setStatus('current')
hpnicfIKETunOutP2ExchgRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunOutP2ExchgRejects.setStatus('current')
hpnicfIKETunOutP2SaDelRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunOutP2SaDelRequests.setStatus('current')
hpnicfIKETunOutP1SaDelRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunOutP1SaDelRequests.setStatus('current')
hpnicfIKETunOutNotifys = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKETunOutNotifys.setStatus('current')
hpnicfIKEGlobalStats = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3))
hpnicfIKEGlobalActiveTunnels = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalActiveTunnels.setStatus('current')
hpnicfIKEGlobalInOctets = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalInOctets.setStatus('current')
hpnicfIKEGlobalInPkts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalInPkts.setStatus('current')
hpnicfIKEGlobalInDropPkts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalInDropPkts.setStatus('current')
hpnicfIKEGlobalInP2Exchgs = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalInP2Exchgs.setStatus('current')
hpnicfIKEGlobalInP2ExchgRejects = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalInP2ExchgRejects.setStatus('current')
hpnicfIKEGlobalInP2SaDelRequests = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalInP2SaDelRequests.setStatus('current')
hpnicfIKEGlobalInNotifys = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalInNotifys.setStatus('current')
hpnicfIKEGlobalOutOctets = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalOutOctets.setStatus('current')
hpnicfIKEGlobalOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalOutPkts.setStatus('current')
hpnicfIKEGlobalOutDropPkts = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalOutDropPkts.setStatus('current')
hpnicfIKEGlobalOutP2Exchgs = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalOutP2Exchgs.setStatus('current')
hpnicfIKEGlobalOutP2ExchgRejects = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalOutP2ExchgRejects.setStatus('current')
hpnicfIKEGlobalOutP2SaDelRequests = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalOutP2SaDelRequests.setStatus('current')
hpnicfIKEGlobalOutNotifys = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalOutNotifys.setStatus('current')
hpnicfIKEGlobalInitTunnels = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalInitTunnels.setStatus('current')
hpnicfIKEGlobalInitTunnelFails = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalInitTunnelFails.setStatus('current')
hpnicfIKEGlobalRespTunnels = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalRespTunnels.setStatus('current')
hpnicfIKEGlobalRespTunnelFails = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalRespTunnelFails.setStatus('current')
hpnicfIKEGlobalAuthFails = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalAuthFails.setStatus('current')
hpnicfIKEGlobalNoSaFails = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalNoSaFails.setStatus('current')
hpnicfIKEGlobalInvalidCookieFails = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalInvalidCookieFails.setStatus('current')
hpnicfIKEGlobalAttrNotSuppFails = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalAttrNotSuppFails.setStatus('current')
hpnicfIKEGlobalNoProposalChosenFails = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalNoProposalChosenFails.setStatus('current')
hpnicfIKEGlobalUnsportExchTypeFails = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalUnsportExchTypeFails.setStatus('current')
hpnicfIKEGlobalInvalidIdFails = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalInvalidIdFails.setStatus('current')
hpnicfIKEGlobalInvalidProFails = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalInvalidProFails.setStatus('current')
hpnicfIKEGlobalCertTypeUnsuppFails = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalCertTypeUnsuppFails.setStatus('current')
hpnicfIKEGlobalInvalidCertAuthFails = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalInvalidCertAuthFails.setStatus('current')
hpnicfIKEGlobalInvalidSignFails = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalInvalidSignFails.setStatus('current')
hpnicfIKEGlobalCertUnavailableFails = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 3, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEGlobalCertUnavailableFails.setStatus('current')
hpnicfIKETrapObject = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 4))
hpnicfIKEProposalNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 4, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfIKEProposalNumber.setStatus('current')
hpnicfIKEProposalSize = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 4, 2), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfIKEProposalSize.setStatus('current')
hpnicfIKEIdInformation = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 4, 3), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfIKEIdInformation.setStatus('current')
hpnicfIKEProtocolNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 4, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfIKEProtocolNum.setStatus('current')
hpnicfIKECertInformation = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 4, 5), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfIKECertInformation.setStatus('current')
hpnicfIKETrapCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5))
hpnicfIKETrapGlobalCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 1), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKETrapGlobalCntl.setStatus('current')
hpnicfIKETunnelStartTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 2), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKETunnelStartTrapCntl.setStatus('current')
hpnicfIKETunnelStopTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 3), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKETunnelStopTrapCntl.setStatus('current')
hpnicfIKENoSaTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 4), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKENoSaTrapCntl.setStatus('current')
hpnicfIKEEncryFailureTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 5), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKEEncryFailureTrapCntl.setStatus('current')
hpnicfIKEDecryFailureTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 6), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKEDecryFailureTrapCntl.setStatus('current')
hpnicfIKEInvalidProposalTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 7), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKEInvalidProposalTrapCntl.setStatus('current')
hpnicfIKEAuthFailTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 8), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKEAuthFailTrapCntl.setStatus('current')
hpnicfIKEInvalidCookieTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 9), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKEInvalidCookieTrapCntl.setStatus('current')
hpnicfIKEInvalidSpiTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 10), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKEInvalidSpiTrapCntl.setStatus('current')
hpnicfIKEAttrNotSuppTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 11), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKEAttrNotSuppTrapCntl.setStatus('current')
hpnicfIKEUnsportExchTypeTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 12), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKEUnsportExchTypeTrapCntl.setStatus('current')
hpnicfIKEInvalidIdTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 13), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKEInvalidIdTrapCntl.setStatus('current')
hpnicfIKEInvalidProtocolTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 14), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKEInvalidProtocolTrapCntl.setStatus('current')
hpnicfIKECertTypeUnsuppTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 15), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKECertTypeUnsuppTrapCntl.setStatus('current')
hpnicfIKEInvalidCertAuthTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 16), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKEInvalidCertAuthTrapCntl.setStatus('current')
hpnicfIKEInvalidSignTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 17), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKEInvalidSignTrapCntl.setStatus('current')
hpnicfIKECertUnavailableTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 18), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKECertUnavailableTrapCntl.setStatus('current')
hpnicfIKEProposalAddTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 19), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKEProposalAddTrapCntl.setStatus('current')
hpnicfIKEProposalDelTrapCntl = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 5, 20), HpnicfTrapStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfIKEProposalDelTrapCntl.setStatus('current')
hpnicfIKETrap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6))
hpnicfIKENotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1))
hpnicfIKETunnelStart = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1, 1)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLifeTime"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunIndex"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddr"))
if mibBuilder.loadTexts: hpnicfIKETunnelStart.setStatus('current')
hpnicfIKETunnelStop = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1, 2)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunActiveTime"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunIndex"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddr"))
if mibBuilder.loadTexts: hpnicfIKETunnelStop.setStatus('current')
hpnicfIKENoSaFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1, 3)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunIndex"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddr"))
if mibBuilder.loadTexts: hpnicfIKENoSaFailure.setStatus('current')
hpnicfIKEEncryFailFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1, 4)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunIndex"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddr"))
if mibBuilder.loadTexts: hpnicfIKEEncryFailFailure.setStatus('current')
hpnicfIKEDecryFailFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1, 5)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunIndex"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddr"))
if mibBuilder.loadTexts: hpnicfIKEDecryFailFailure.setStatus('current')
hpnicfIKEInvalidProposalFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1, 6)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunIndex"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddr"))
if mibBuilder.loadTexts: hpnicfIKEInvalidProposalFailure.setStatus('current')
hpnicfIKEAuthFailFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1, 7)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunIndex"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddr"))
if mibBuilder.loadTexts: hpnicfIKEAuthFailFailure.setStatus('current')
hpnicfIKEInvalidCookieFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1, 8)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunIndex"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddr"))
if mibBuilder.loadTexts: hpnicfIKEInvalidCookieFailure.setStatus('current')
hpnicfIKEAttrNotSuppFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1, 9)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunIndex"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddr"))
if mibBuilder.loadTexts: hpnicfIKEAttrNotSuppFailure.setStatus('current')
hpnicfIKEUnsportExchTypeFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1, 10)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunIndex"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddr"))
if mibBuilder.loadTexts: hpnicfIKEUnsportExchTypeFailure.setStatus('current')
hpnicfIKEInvalidIdFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1, 11)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEIdInformation"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunIndex"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddr"))
if mibBuilder.loadTexts: hpnicfIKEInvalidIdFailure.setStatus('current')
hpnicfIKEInvalidProtocolFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1, 12)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEProtocolNum"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunIndex"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddr"))
if mibBuilder.loadTexts: hpnicfIKEInvalidProtocolFailure.setStatus('current')
hpnicfIKECertTypeUnsuppFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1, 13)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKECertInformation"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunIndex"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddr"))
if mibBuilder.loadTexts: hpnicfIKECertTypeUnsuppFailure.setStatus('current')
hpnicfIKEInvalidCertAuthFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1, 14)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKECertInformation"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunIndex"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddr"))
if mibBuilder.loadTexts: hpnicfIKEInvalidCertAuthFailure.setStatus('current')
hpnicfIKElInvalidSignFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1, 15)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKECertInformation"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunIndex"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddr"))
if mibBuilder.loadTexts: hpnicfIKElInvalidSignFailure.setStatus('current')
hpnicfIKECertUnavailableFailure = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1, 16)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKECertInformation"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunIndex"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddr"))
if mibBuilder.loadTexts: hpnicfIKECertUnavailableFailure.setStatus('current')
hpnicfIKEProposalAdd = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1, 17)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEProposalNumber"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEProposalSize"))
if mibBuilder.loadTexts: hpnicfIKEProposalAdd.setStatus('current')
hpnicfIKEProposalDel = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 6, 1, 18)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEProposalNumber"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEProposalSize"))
if mibBuilder.loadTexts: hpnicfIKEProposalDel.setStatus('current')
hpnicfIKEScalarObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 7))
hpnicfIKEMIBVersion = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 1, 7, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfIKEMIBVersion.setStatus('current')
hpnicfIKEConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 2))
hpnicfIKECompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 2, 1))
hpnicfIKEGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 2, 2))
hpnicfIKECompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 2, 1, 1)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunnelTableGroup"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunnelStatTableGroup"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalStatsGroup"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETrapObjectGroup"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETrapCntlGroup"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETrapGroup"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEScalarObjectsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfIKECompliance = hpnicfIKECompliance.setStatus('current')
hpnicfIKETunnelTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 2, 2, 1)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalValue1"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalValue2"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteValue1"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteValue2"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunInitiator"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunNegoMode"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunDiffHellmanGrp"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunEncryptAlgo"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunHashAlgo"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunAuthMethod"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLifeTime"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunActiveTime"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemainTime"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunTotalRefreshes"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunState"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunDpdIntervalTime"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunDpdTimeOut"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunLocalInetAddr"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddrType"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunRemoteInetAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfIKETunnelTableGroup = hpnicfIKETunnelTableGroup.setStatus('current')
hpnicfIKETunnelStatTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 2, 2, 2)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunInOctets"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunInPkts"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunInDropPkts"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunInP2Exchgs"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunInP2ExchgRejets"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunInP2SaDelRequests"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunInP1SaDelRequests"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunInNotifys"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunOutOctets"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunOutPkts"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunOutDropPkts"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunOutP2Exchgs"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunOutP2ExchgRejects"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunOutP2SaDelRequests"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunOutP1SaDelRequests"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunOutNotifys"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfIKETunnelStatTableGroup = hpnicfIKETunnelStatTableGroup.setStatus('current')
hpnicfIKEGlobalStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 2, 2, 3)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalActiveTunnels"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalInOctets"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalInPkts"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalInDropPkts"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalInP2Exchgs"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalInP2ExchgRejects"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalInP2SaDelRequests"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalInNotifys"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalOutOctets"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalOutPkts"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalOutDropPkts"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalOutP2Exchgs"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalOutP2ExchgRejects"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalOutP2SaDelRequests"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalOutNotifys"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalInitTunnels"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalInitTunnelFails"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalRespTunnels"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalRespTunnelFails"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalAuthFails"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalNoSaFails"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalInvalidCookieFails"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalAttrNotSuppFails"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalNoProposalChosenFails"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalUnsportExchTypeFails"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalInvalidIdFails"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalInvalidProFails"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalCertTypeUnsuppFails"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalInvalidCertAuthFails"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalInvalidSignFails"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEGlobalCertUnavailableFails"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfIKEGlobalStatsGroup = hpnicfIKEGlobalStatsGroup.setStatus('current')
hpnicfIKETrapObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 2, 2, 4)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEProposalNumber"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEProposalSize"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEIdInformation"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEProtocolNum"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKECertInformation"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfIKETrapObjectGroup = hpnicfIKETrapObjectGroup.setStatus('current')
hpnicfIKETrapCntlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 2, 2, 5)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETrapGlobalCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunnelStartTrapCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunnelStopTrapCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKENoSaTrapCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEEncryFailureTrapCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEDecryFailureTrapCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEInvalidProposalTrapCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEAuthFailTrapCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEInvalidCookieTrapCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEInvalidSpiTrapCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEAttrNotSuppTrapCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEUnsportExchTypeTrapCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEInvalidIdTrapCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEInvalidProtocolTrapCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKECertTypeUnsuppTrapCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEInvalidCertAuthTrapCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEInvalidSignTrapCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKECertUnavailableTrapCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEProposalAddTrapCntl"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEProposalDelTrapCntl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfIKETrapCntlGroup = hpnicfIKETrapCntlGroup.setStatus('current')
hpnicfIKETrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 2, 2, 6)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunnelStart"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKETunnelStop"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKENoSaFailure"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEEncryFailFailure"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEDecryFailFailure"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEInvalidProposalFailure"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEAuthFailFailure"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEInvalidCookieFailure"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEAttrNotSuppFailure"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEUnsportExchTypeFailure"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEInvalidIdFailure"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEInvalidProtocolFailure"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKECertTypeUnsuppFailure"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEInvalidCertAuthFailure"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKElInvalidSignFailure"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKECertUnavailableFailure"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEProposalAdd"), ("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEProposalDel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfIKETrapGroup = hpnicfIKETrapGroup.setStatus('current')
hpnicfIKEScalarObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 30, 2, 2, 7)).setObjects(("HPN-ICF-IKE-MONITOR-MIB", "hpnicfIKEMIBVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hpnicfIKEScalarObjectsGroup = hpnicfIKEScalarObjectsGroup.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-IKE-MONITOR-MIB", hpnicfIKEInvalidIdTrapCntl=hpnicfIKEInvalidIdTrapCntl, hpnicfIKECompliances=hpnicfIKECompliances, hpnicfIKEProposalDelTrapCntl=hpnicfIKEProposalDelTrapCntl, hpnicfIKEGlobalOutP2ExchgRejects=hpnicfIKEGlobalOutP2ExchgRejects, hpnicfIKETunLifeTime=hpnicfIKETunLifeTime, hpnicfIKEProposalAddTrapCntl=hpnicfIKEProposalAddTrapCntl, hpnicfIKETunDiffHellmanGrp=hpnicfIKETunDiffHellmanGrp, HpnicfIKEIDType=HpnicfIKEIDType, hpnicfIKETunInP2Exchgs=hpnicfIKETunInP2Exchgs, hpnicfIKEGlobalStats=hpnicfIKEGlobalStats, hpnicfIKEProposalDel=hpnicfIKEProposalDel, hpnicfIKETunInP2SaDelRequests=hpnicfIKETunInP2SaDelRequests, hpnicfIKEEncryFailFailure=hpnicfIKEEncryFailFailure, hpnicfIKETunOutP2Exchgs=hpnicfIKETunOutP2Exchgs, hpnicfIKEUnsportExchTypeTrapCntl=hpnicfIKEUnsportExchTypeTrapCntl, hpnicfIKETrapCntlGroup=hpnicfIKETrapCntlGroup, hpnicfIKEProposalNumber=hpnicfIKEProposalNumber, hpnicfIKEGlobalInvalidSignFails=hpnicfIKEGlobalInvalidSignFails, hpnicfIKEGlobalCertUnavailableFails=hpnicfIKEGlobalCertUnavailableFails, hpnicfIKEGlobalInvalidIdFails=hpnicfIKEGlobalInvalidIdFails, hpnicfIKETunLocalInetAddr=hpnicfIKETunLocalInetAddr, hpnicfIKETunLocalValue2=hpnicfIKETunLocalValue2, hpnicfIKETunRemoteAddr=hpnicfIKETunRemoteAddr, hpnicfIKETunnelStatTableGroup=hpnicfIKETunnelStatTableGroup, hpnicfIKEGlobalInvalidProFails=hpnicfIKEGlobalInvalidProFails, HpnicfIKETunnelState=HpnicfIKETunnelState, hpnicfIKETunOutNotifys=hpnicfIKETunOutNotifys, hpnicfIKEGlobalAuthFails=hpnicfIKEGlobalAuthFails, hpnicfIKEMonitor=hpnicfIKEMonitor, hpnicfIKEProposalSize=hpnicfIKEProposalSize, HpnicfTrapStatus=HpnicfTrapStatus, hpnicfIKETunEncryptAlgo=hpnicfIKETunEncryptAlgo, hpnicfIKEEncryFailureTrapCntl=hpnicfIKEEncryFailureTrapCntl, hpnicfIKEGlobalInP2SaDelRequests=hpnicfIKEGlobalInP2SaDelRequests, hpnicfIKETunnelStop=hpnicfIKETunnelStop, hpnicfIKEGlobalInvalidCookieFails=hpnicfIKEGlobalInvalidCookieFails, hpnicfIKEAuthFailFailure=hpnicfIKEAuthFailFailure, hpnicfIKEGlobalInOctets=hpnicfIKEGlobalInOctets, hpnicfIKETunLocalType=hpnicfIKETunLocalType, hpnicfIKEGlobalNoProposalChosenFails=hpnicfIKEGlobalNoProposalChosenFails, hpnicfIKEInvalidIdFailure=hpnicfIKEInvalidIdFailure, hpnicfIKETunnelStart=hpnicfIKETunnelStart, hpnicfIKETunInPkts=hpnicfIKETunInPkts, hpnicfIKEInvalidCertAuthFailure=hpnicfIKEInvalidCertAuthFailure, hpnicfIKETunState=hpnicfIKETunState, hpnicfIKETunInP2ExchgRejets=hpnicfIKETunInP2ExchgRejets, hpnicfIKEInvalidSignTrapCntl=hpnicfIKEInvalidSignTrapCntl, hpnicfIKETunnelEntry=hpnicfIKETunnelEntry, hpnicfIKEInvalidProtocolFailure=hpnicfIKEInvalidProtocolFailure, hpnicfIKETunRemoteValue1=hpnicfIKETunRemoteValue1, hpnicfIKEInvalidCookieTrapCntl=hpnicfIKEInvalidCookieTrapCntl, hpnicfIKEGlobalRespTunnelFails=hpnicfIKEGlobalRespTunnelFails, hpnicfIKECertTypeUnsuppTrapCntl=hpnicfIKECertTypeUnsuppTrapCntl, hpnicfIKEUnsportExchTypeFailure=hpnicfIKEUnsportExchTypeFailure, HpnicfTrafficType=HpnicfTrafficType, hpnicfIKETunHashAlgo=hpnicfIKETunHashAlgo, hpnicfIKEAttrNotSuppTrapCntl=hpnicfIKEAttrNotSuppTrapCntl, hpnicfIKETunLocalInetAddrType=hpnicfIKETunLocalInetAddrType, hpnicfIKEAttrNotSuppFailure=hpnicfIKEAttrNotSuppFailure, hpnicfIKETunOutP2SaDelRequests=hpnicfIKETunOutP2SaDelRequests, hpnicfIKETunAuthMethod=hpnicfIKETunAuthMethod, hpnicfIKEGlobalActiveTunnels=hpnicfIKEGlobalActiveTunnels, hpnicfIKETunInDropPkts=hpnicfIKETunInDropPkts, hpnicfIKECertUnavailableFailure=hpnicfIKECertUnavailableFailure, hpnicfIKETunnelTable=hpnicfIKETunnelTable, hpnicfIKEGlobalCertTypeUnsuppFails=hpnicfIKEGlobalCertTypeUnsuppFails, hpnicfIKEIdInformation=hpnicfIKEIdInformation, hpnicfIKETunOutDropPkts=hpnicfIKETunOutDropPkts, hpnicfIKETunOutPkts=hpnicfIKETunOutPkts, hpnicfIKETunOutP1SaDelRequests=hpnicfIKETunOutP1SaDelRequests, hpnicfIKECompliance=hpnicfIKECompliance, hpnicfIKEGlobalRespTunnels=hpnicfIKEGlobalRespTunnels, hpnicfIKEGlobalInP2Exchgs=hpnicfIKEGlobalInP2Exchgs, HpnicfIKEAuthMethod=HpnicfIKEAuthMethod, hpnicfIKEGlobalOutP2SaDelRequests=hpnicfIKEGlobalOutP2SaDelRequests, hpnicfIKETunRemainTime=hpnicfIKETunRemainTime, hpnicfIKEProposalAdd=hpnicfIKEProposalAdd, hpnicfIKEInvalidCertAuthTrapCntl=hpnicfIKEInvalidCertAuthTrapCntl, hpnicfIKETrapObjectGroup=hpnicfIKETrapObjectGroup, hpnicfIKEInvalidSpiTrapCntl=hpnicfIKEInvalidSpiTrapCntl, hpnicfIKEGlobalInitTunnels=hpnicfIKEGlobalInitTunnels, hpnicfIKETunDpdTimeOut=hpnicfIKETunDpdTimeOut, hpnicfIKEObjects=hpnicfIKEObjects, hpnicfIKEScalarObjects=hpnicfIKEScalarObjects, HpnicfDiffHellmanGrp=HpnicfDiffHellmanGrp, hpnicfIKETunLocalValue1=hpnicfIKETunLocalValue1, hpnicfIKEGlobalInNotifys=hpnicfIKEGlobalInNotifys, hpnicfIKEGlobalOutP2Exchgs=hpnicfIKEGlobalOutP2Exchgs, hpnicfIKEInvalidProposalFailure=hpnicfIKEInvalidProposalFailure, hpnicfIKEGlobalOutNotifys=hpnicfIKEGlobalOutNotifys, hpnicfIKElInvalidSignFailure=hpnicfIKElInvalidSignFailure, hpnicfIKETunNegoMode=hpnicfIKETunNegoMode, hpnicfIKETunIndex=hpnicfIKETunIndex, hpnicfIKEGroups=hpnicfIKEGroups, hpnicfIKENotifications=hpnicfIKENotifications, hpnicfIKECertTypeUnsuppFailure=hpnicfIKECertTypeUnsuppFailure, hpnicfIKETrapGroup=hpnicfIKETrapGroup, hpnicfIKETunRemoteValue2=hpnicfIKETunRemoteValue2, hpnicfIKEGlobalStatsGroup=hpnicfIKEGlobalStatsGroup, hpnicfIKEGlobalOutOctets=hpnicfIKEGlobalOutOctets, hpnicfIKETunRemoteInetAddrType=hpnicfIKETunRemoteInetAddrType, hpnicfIKETunInOctets=hpnicfIKETunInOctets, hpnicfIKETunOutP2ExchgRejects=hpnicfIKETunOutP2ExchgRejects, hpnicfIKEGlobalInDropPkts=hpnicfIKEGlobalInDropPkts, hpnicfIKEDecryFailureTrapCntl=hpnicfIKEDecryFailureTrapCntl, hpnicfIKECertInformation=hpnicfIKECertInformation, hpnicfIKEGlobalInvalidCertAuthFails=hpnicfIKEGlobalInvalidCertAuthFails, hpnicfIKETunActiveTime=hpnicfIKETunActiveTime, hpnicfIKETrap=hpnicfIKETrap, hpnicfIKEInvalidProtocolTrapCntl=hpnicfIKEInvalidProtocolTrapCntl, hpnicfIKETrapObject=hpnicfIKETrapObject, hpnicfIKEGlobalInP2ExchgRejects=hpnicfIKEGlobalInP2ExchgRejects, hpnicfIKETunnelStopTrapCntl=hpnicfIKETunnelStopTrapCntl, HpnicfEncryptAlgo=HpnicfEncryptAlgo, hpnicfIKEConformance=hpnicfIKEConformance, hpnicfIKETunnelStatEntry=hpnicfIKETunnelStatEntry, hpnicfIKEScalarObjectsGroup=hpnicfIKEScalarObjectsGroup, hpnicfIKETunRemoteType=hpnicfIKETunRemoteType, hpnicfIKECertUnavailableTrapCntl=hpnicfIKECertUnavailableTrapCntl, hpnicfIKEProtocolNum=hpnicfIKEProtocolNum, hpnicfIKEAuthFailTrapCntl=hpnicfIKEAuthFailTrapCntl, hpnicfIKETunDpdIntervalTime=hpnicfIKETunDpdIntervalTime, hpnicfIKETunInitiator=hpnicfIKETunInitiator, hpnicfIKEGlobalOutPkts=hpnicfIKEGlobalOutPkts, HpnicfSaProtocol=HpnicfSaProtocol, hpnicfIKENoSaFailure=hpnicfIKENoSaFailure, hpnicfIKEGlobalNoSaFails=hpnicfIKEGlobalNoSaFails, hpnicfIKEGlobalUnsportExchTypeFails=hpnicfIKEGlobalUnsportExchTypeFails, hpnicfIKETunnelStartTrapCntl=hpnicfIKETunnelStartTrapCntl, HpnicfIKENegoMode=HpnicfIKENegoMode, hpnicfIKETunRemoteInetAddr=hpnicfIKETunRemoteInetAddr, hpnicfIKETunOutOctets=hpnicfIKETunOutOctets, PYSNMP_MODULE_ID=hpnicfIKEMonitor, hpnicfIKEGlobalAttrNotSuppFails=hpnicfIKEGlobalAttrNotSuppFails, hpnicfIKETrapGlobalCntl=hpnicfIKETrapGlobalCntl, hpnicfIKEGlobalInPkts=hpnicfIKEGlobalInPkts, HpnicfAuthAlgo=HpnicfAuthAlgo, hpnicfIKEGlobalInitTunnelFails=hpnicfIKEGlobalInitTunnelFails, hpnicfIKETrapCntl=hpnicfIKETrapCntl, hpnicfIKEDecryFailFailure=hpnicfIKEDecryFailFailure, hpnicfIKETunnelStatTable=hpnicfIKETunnelStatTable, hpnicfIKETunTotalRefreshes=hpnicfIKETunTotalRefreshes, hpnicfIKETunnelTableGroup=hpnicfIKETunnelTableGroup, hpnicfIKEMIBVersion=hpnicfIKEMIBVersion, hpnicfIKEGlobalOutDropPkts=hpnicfIKEGlobalOutDropPkts, hpnicfIKENoSaTrapCntl=hpnicfIKENoSaTrapCntl, hpnicfIKETunInP1SaDelRequests=hpnicfIKETunInP1SaDelRequests, hpnicfIKEInvalidCookieFailure=hpnicfIKEInvalidCookieFailure, hpnicfIKETunLocalAddr=hpnicfIKETunLocalAddr, hpnicfIKETunInNotifys=hpnicfIKETunInNotifys, hpnicfIKEInvalidProposalTrapCntl=hpnicfIKEInvalidProposalTrapCntl)
