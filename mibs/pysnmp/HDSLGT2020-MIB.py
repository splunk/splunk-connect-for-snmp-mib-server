#
# PySNMP MIB module HDSLGT2020-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HDSLGT2020-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:12:20 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
hdslGT2020, = mibBuilder.importSymbols("GDCHDSL-MIB", "hdslGT2020")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Integer32, Gauge32, ModuleIdentity, Unsigned32, IpAddress, ObjectIdentity, Counter32, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Integer32", "Gauge32", "ModuleIdentity", "Unsigned32", "IpAddress", "ObjectIdentity", "Counter32", "Counter64", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hdslGT2020System = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 11, 29, 1))
hdslGT2020Version = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 11, 29, 1, 1))
gdcGT2020SystemMIBversion = MibScalar((1, 3, 6, 1, 4, 1, 498, 11, 29, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readonly")
if mibBuilder.loadTexts: gdcGT2020SystemMIBversion.setStatus('mandatory')
hdslGT2020Alarms = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 11, 29, 2))
hdslGT2020NoResponseAlm = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 11, 29, 2, 1))
hdslGT2020DiagRxErrAlm = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 11, 29, 2, 2))
hdslGT2020PowerUpAlm = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 11, 29, 2, 3))
hdslGT2020UnitFailure = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 11, 29, 2, 4))
hdslGT2020ChecksumCorrupt = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 11, 29, 2, 5))
hdslGT2020LossofSignal = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 11, 29, 2, 6))
hdslGT2020UnavailableSec = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 11, 29, 2, 7))
hdslGT2020ErrorSec = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 11, 29, 2, 8))
hdslGT2020LossofSyncWord = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 11, 29, 2, 9))
hdslGT2020LossofFrameAlign = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 11, 29, 2, 10))
hdslGT2020AllOnes = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 11, 29, 2, 11))
hdslGT2020RemoteLossofSig = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 11, 29, 2, 12))
hdslGT2020RemoteAlarmInd = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 11, 29, 2, 13))
hdslGT2020MajorBER = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 11, 29, 2, 14))
hdslGT2020MinorBER = MibIdentifier((1, 3, 6, 1, 4, 1, 498, 11, 29, 2, 15))
mibBuilder.exportSymbols("HDSLGT2020-MIB", hdslGT2020System=hdslGT2020System, hdslGT2020LossofFrameAlign=hdslGT2020LossofFrameAlign, hdslGT2020Version=hdslGT2020Version, hdslGT2020NoResponseAlm=hdslGT2020NoResponseAlm, hdslGT2020UnavailableSec=hdslGT2020UnavailableSec, hdslGT2020MajorBER=hdslGT2020MajorBER, hdslGT2020MinorBER=hdslGT2020MinorBER, hdslGT2020RemoteAlarmInd=hdslGT2020RemoteAlarmInd, hdslGT2020ChecksumCorrupt=hdslGT2020ChecksumCorrupt, gdcGT2020SystemMIBversion=gdcGT2020SystemMIBversion, hdslGT2020ErrorSec=hdslGT2020ErrorSec, hdslGT2020Alarms=hdslGT2020Alarms, hdslGT2020AllOnes=hdslGT2020AllOnes, hdslGT2020LossofSignal=hdslGT2020LossofSignal, hdslGT2020RemoteLossofSig=hdslGT2020RemoteLossofSig, hdslGT2020LossofSyncWord=hdslGT2020LossofSyncWord, hdslGT2020DiagRxErrAlm=hdslGT2020DiagRxErrAlm, hdslGT2020PowerUpAlm=hdslGT2020PowerUpAlm, hdslGT2020UnitFailure=hdslGT2020UnitFailure)
