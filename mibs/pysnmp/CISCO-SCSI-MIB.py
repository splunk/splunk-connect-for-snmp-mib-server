#
# PySNMP MIB module CISCO-SCSI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SCSI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:40:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter32, ModuleIdentity, NotificationType, Integer32, Counter64, MibIdentifier, Unsigned32, ObjectIdentity, Bits, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ModuleIdentity", "NotificationType", "Integer32", "Counter64", "MibIdentifier", "Unsigned32", "ObjectIdentity", "Bits", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress", "TimeTicks")
TruthValue, DisplayString, TimeStamp, RowPointer, TextualConvention, AutonomousType, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TimeStamp", "RowPointer", "TextualConvention", "AutonomousType", "RowStatus")
ciscoScsiMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 95))
ciscoScsiMIB.setRevisions(('2002-12-31 00:00', '2002-11-08 00:00', '2002-10-05 00:00',))
if mibBuilder.loadTexts: ciscoScsiMIB.setLastUpdated('200212310000Z')
if mibBuilder.loadTexts: ciscoScsiMIB.setOrganization('Cisco Systems Inc.')
ciscoScsiObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 1))
ciscoScsiNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 2))
ciscoScsiConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 3))
ciscoScsiTransportTypes = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 1))
ciscoScsiGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2))
ciscoScsiInitiator = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3))
ciscoScsiRemoteTarget = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4))
ciscoScsiTarget = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4))
ciscoScsiRemoteInitiators = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3))
ciscoScsiLogicalUnit = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5))
ciscoScsiTranportOther = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 1, 1))
ciscoScsiTranportSPI = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 1, 2))
ciscoScsiTransportFCP = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 1, 3))
ciscoScsiTransportSRP = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 1, 4))
ciscoScsiTransportISCSI = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 1, 5))
ciscoScsiTransportSBP = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 1, 6))
ciscoScsiNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 2, 0))
class ScsiLUNOrZero(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(2, 2), ValueSizeConstraint(8, 8), )
class ScsiIndexValue(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class ScsiPortIndexValueOrZero(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 4294967295)

class ScsiIndexValueOrZero(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 4294967295)

class ScsiIdentifier(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 1), ValueSizeConstraint(2, 2), ValueSizeConstraint(3, 3), ValueSizeConstraint(11, 11), ValueSizeConstraint(16, 16), ValueSizeConstraint(256, 256), ValueSizeConstraint(258, 258), ValueSizeConstraint(262, 262), )
class ScsiName(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), ValueSizeConstraint(11, 11), ValueSizeConstraint(16, 16), ValueSizeConstraint(256, 256), ValueSizeConstraint(258, 258), ValueSizeConstraint(262, 262), )
class ScsiNameIdOrZero(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), )
class ScsiDeviceOrPort(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("device", 1), ("port", 2), ("other", 3))

class ScsiIdCodeSet(TextualConvention, Unsigned32):
    reference = ' ANSI - SCSI Primary Commands - 2 (SPC-2), Revision 20, 18 July 2001 Chapter 8: section 8.4.4, page 210 Vital Product Data Parameters [16]'
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 15)

class ScsiIdAssociation(TextualConvention, Unsigned32):
    reference = ' ANSI - SCSI Primary Commands - 2 (SPC-2), Revision 20, 18 July 2001 - Chapter 8: section 8.4.4, page 210 Vital Product Data Parameters [16]'
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 3)

class ScsiIdType(TextualConvention, Unsigned32):
    reference = ' ANSI - SCSI Primary Commands - 2 (SPC-2), Revision 20, Chapter 8: section 8.4.4, page 210 Vital Product Data Parameters [16]'
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 15)

class ScsiIdValue(TextualConvention, OctetString):
    reference = ' ANSI - SCSI Primary Commands - 2 (SPC-2), Revision 20, 18 July 2001 - Chapter 8: section 8.4.4, page 210 Vital Product Data Parameters [16]'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

class HrSWInstalledIndexOrZero(TextualConvention, Integer32):
    reference = 'hrSWInstalledTable is defined in the Host Resources MIB, RFC 2790.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

ciscoScsiInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 1), )
if mibBuilder.loadTexts: ciscoScsiInstanceTable.setStatus('current')
ciscoScsiInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-SCSI-MIB", "ciscoScsiInstIndex"))
if mibBuilder.loadTexts: ciscoScsiInstanceEntry.setStatus('current')
ciscoScsiInstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 1, 1, 1), ScsiIndexValue())
if mibBuilder.loadTexts: ciscoScsiInstIndex.setStatus('current')
ciscoScsiInstAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 79))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoScsiInstAlias.setStatus('current')
ciscoScsiInstSoftwareIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 1, 1, 3), HrSWInstalledIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiInstSoftwareIndex.setStatus('current')
ciscoScsiInstVendorVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 79))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiInstVendorVersion.setStatus('current')
ciscoScsiInstNotifEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 1, 1, 5), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoScsiInstNotifEnable.setStatus('current')
ciscoScsiDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 2), )
if mibBuilder.loadTexts: ciscoScsiDeviceTable.setStatus('current')
ciscoScsiDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-SCSI-MIB", "ciscoScsiInstIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDeviceIndex"))
if mibBuilder.loadTexts: ciscoScsiDeviceEntry.setStatus('current')
ciscoScsiDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 2, 1, 1), ScsiIndexValue())
if mibBuilder.loadTexts: ciscoScsiDeviceIndex.setStatus('current')
ciscoScsiDeviceAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 79))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoScsiDeviceAlias.setStatus('current')
ciscoScsiDeviceRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 2, 1, 3), Bits().clone(namedValues=NamedValues(("target", 0), ("initiator", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiDeviceRole.setStatus('current')
ciscoScsiDevicePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiDevicePortNumber.setStatus('current')
ciscoScsiDeviceResets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiDeviceResets.setStatus('current')
ciscoScsiPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 3), )
if mibBuilder.loadTexts: ciscoScsiPortTable.setStatus('current')
ciscoScsiPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-SCSI-MIB", "ciscoScsiInstIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDeviceIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiPortIndex"))
if mibBuilder.loadTexts: ciscoScsiPortEntry.setStatus('current')
ciscoScsiPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 3, 1, 1), ScsiIndexValue())
if mibBuilder.loadTexts: ciscoScsiPortIndex.setStatus('current')
ciscoScsiPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 3, 1, 2), Bits().clone(namedValues=NamedValues(("target", 0), ("initiator", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiPortRole.setStatus('current')
ciscoScsiPortTrnsptPtr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 3, 1, 3), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiPortTrnsptPtr.setStatus('current')
ciscoScsiPortBusyStatuses = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiPortBusyStatuses.setStatus('current')
ciscoScsiTrnsptTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 5), )
if mibBuilder.loadTexts: ciscoScsiTrnsptTable.setStatus('current')
ciscoScsiTrnsptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 5, 1), ).setIndexNames((0, "CISCO-SCSI-MIB", "ciscoScsiInstIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDeviceIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiTrnsptIndex"))
if mibBuilder.loadTexts: ciscoScsiTrnsptEntry.setStatus('current')
ciscoScsiTrnsptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 5, 1, 1), ScsiIndexValue())
if mibBuilder.loadTexts: ciscoScsiTrnsptIndex.setStatus('current')
ciscoScsiTrnsptType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 5, 1, 2), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiTrnsptType.setStatus('current')
ciscoScsiTrnsptPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 5, 1, 3), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiTrnsptPointer.setStatus('current')
ciscoScsiTrnsptDevName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 2, 5, 1, 4), ScsiName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiTrnsptDevName.setStatus('current')
ciscoScsiIntrDevTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 1), )
if mibBuilder.loadTexts: ciscoScsiIntrDevTable.setStatus('current')
ciscoScsiIntrDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-SCSI-MIB", "ciscoScsiInstIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDeviceIndex"))
if mibBuilder.loadTexts: ciscoScsiIntrDevEntry.setStatus('current')
ciscoScsiIntrDevAccMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("autoEnable", 2), ("manualEnable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciscoScsiIntrDevAccMode.setStatus('current')
ciscoScsiIntrDevOutResets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiIntrDevOutResets.setStatus('current')
ciscoScsiIntrPrtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 3), )
if mibBuilder.loadTexts: ciscoScsiIntrPrtTable.setStatus('current')
ciscoScsiIntrPrtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 3, 1), ).setIndexNames((0, "CISCO-SCSI-MIB", "ciscoScsiInstIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDeviceIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiPortIndex"))
if mibBuilder.loadTexts: ciscoScsiIntrPrtEntry.setStatus('current')
ciscoScsiIntrPrtName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 3, 1, 1), ScsiName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiIntrPrtName.setStatus('current')
ciscoScsiIntrPrtIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 3, 1, 2), ScsiIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiIntrPrtIdentifier.setStatus('current')
ciscoScsiIntrPrtOutCommands = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 3, 1, 3), Counter32()).setUnits('commands').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiIntrPrtOutCommands.setStatus('current')
ciscoScsiIntrPrtWrMegaBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 3, 1, 4), Counter32()).setUnits('Megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiIntrPrtWrMegaBytes.setStatus('current')
ciscoScsiIntrPrtReadMegaBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 3, 1, 5), Counter32()).setUnits('Megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiIntrPrtReadMegaBytes.setStatus('current')
ciscoScsiIntrPrtHSOutCommands = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 3, 1, 6), Counter64()).setUnits('commands').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiIntrPrtHSOutCommands.setStatus('current')
ciscoScsiDscTgtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 1), )
if mibBuilder.loadTexts: ciscoScsiDscTgtTable.setStatus('current')
ciscoScsiDscTgtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 1, 1), ).setIndexNames((0, "CISCO-SCSI-MIB", "ciscoScsiInstIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDeviceIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDscTgtIntrPortIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDscTgtIndex"))
if mibBuilder.loadTexts: ciscoScsiDscTgtEntry.setStatus('current')
ciscoScsiDscTgtIntrPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 1, 1, 1), ScsiPortIndexValueOrZero())
if mibBuilder.loadTexts: ciscoScsiDscTgtIntrPortIndex.setStatus('current')
ciscoScsiDscTgtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 1, 1, 2), ScsiIndexValue())
if mibBuilder.loadTexts: ciscoScsiDscTgtIndex.setStatus('current')
ciscoScsiDscTgtDevOrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 1, 1, 3), ScsiDeviceOrPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoScsiDscTgtDevOrPort.setStatus('current')
ciscoScsiDscTgtName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 1, 1, 4), ScsiName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoScsiDscTgtName.setStatus('current')
ciscoScsiDscTgtConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 1, 1, 5), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoScsiDscTgtConfigured.setStatus('current')
ciscoScsiDscTgtDiscovered = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiDscTgtDiscovered.setStatus('current')
ciscoScsiDscTgtInCommands = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 1, 1, 7), Counter32()).setUnits('commands').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiDscTgtInCommands.setStatus('current')
ciscoScsiDscTgtWrMegaBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 1, 1, 8), Counter32()).setUnits('Megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiDscTgtWrMegaBytes.setStatus('current')
ciscoScsiDscTgtReadMegaBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 1, 1, 9), Counter32()).setUnits('Megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiDscTgtReadMegaBytes.setStatus('current')
ciscoScsiDscTgtHSInCommands = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 1, 1, 10), Counter64()).setUnits('commands').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiDscTgtHSInCommands.setStatus('current')
ciscoScsiDscTgtLastCreation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 1, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiDscTgtLastCreation.setStatus('current')
ciscoScsiDscTgtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoScsiDscTgtRowStatus.setStatus('current')
ciscoScsiDscLunTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 2), )
if mibBuilder.loadTexts: ciscoScsiDscLunTable.setStatus('current')
ciscoScsiDscLunEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 2, 1), ).setIndexNames((0, "CISCO-SCSI-MIB", "ciscoScsiInstIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDeviceIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDscTgtIntrPortIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDscTgtIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDscLunIndex"))
if mibBuilder.loadTexts: ciscoScsiDscLunEntry.setStatus('current')
ciscoScsiDscLunIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 2, 1, 1), ScsiIndexValue())
if mibBuilder.loadTexts: ciscoScsiDscLunIndex.setStatus('current')
ciscoScsiDscLunLun = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 2, 1, 2), ScsiLUNOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiDscLunLun.setStatus('current')
ciscoScsiDscLunIdTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 3), )
if mibBuilder.loadTexts: ciscoScsiDscLunIdTable.setStatus('current')
ciscoScsiDscLunIdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 3, 1), ).setIndexNames((0, "CISCO-SCSI-MIB", "ciscoScsiInstIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDeviceIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDscTgtIntrPortIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDscTgtIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDscLunIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDscLunIdIndex"))
if mibBuilder.loadTexts: ciscoScsiDscLunIdEntry.setStatus('current')
ciscoScsiDscLunIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 3, 1, 1), ScsiIndexValue())
if mibBuilder.loadTexts: ciscoScsiDscLunIdIndex.setStatus('current')
ciscoScsiDscLunIdCodeSet = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 3, 1, 2), ScsiIdCodeSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiDscLunIdCodeSet.setStatus('current')
ciscoScsiDscLunIdAssociation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 3, 1, 3), ScsiIdAssociation()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiDscLunIdAssociation.setStatus('current')
ciscoScsiDscLunIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 3, 1, 4), ScsiIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiDscLunIdType.setStatus('current')
ciscoScsiDscLunIdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 3, 1, 5), ScsiIdValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiDscLunIdValue.setStatus('current')
ciscoScsiAttTgtPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 6), )
if mibBuilder.loadTexts: ciscoScsiAttTgtPortTable.setStatus('current')
ciscoScsiAttTgtPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 6, 1), ).setIndexNames((0, "CISCO-SCSI-MIB", "ciscoScsiInstIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDeviceIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiPortIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiAttTgtPortIndex"))
if mibBuilder.loadTexts: ciscoScsiAttTgtPortEntry.setStatus('current')
ciscoScsiAttTgtPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 6, 1, 1), ScsiIndexValue())
if mibBuilder.loadTexts: ciscoScsiAttTgtPortIndex.setStatus('current')
ciscoScsiAttTgtPortDscTgtIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 6, 1, 2), ScsiIndexValueOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiAttTgtPortDscTgtIdx.setStatus('current')
ciscoScsiAttTgtPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 6, 1, 3), ScsiName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiAttTgtPortName.setStatus('current')
ciscoScsiAttTgtPortIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 3, 4, 6, 1, 4), ScsiIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiAttTgtPortIdentifier.setStatus('current')
ciscoScsiTgtDevTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 1), )
if mibBuilder.loadTexts: ciscoScsiTgtDevTable.setStatus('current')
ciscoScsiTgtDevEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-SCSI-MIB", "ciscoScsiInstIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDeviceIndex"))
if mibBuilder.loadTexts: ciscoScsiTgtDevEntry.setStatus('current')
ciscoScsiTgtDevNumberOfLUs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 1, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiTgtDevNumberOfLUs.setStatus('current')
ciscoScsiTgtDeviceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 1), ("available", 2), ("broken", 3), ("readying", 4), ("abnormal", 5), ("nonAddrFailure", 6), ("nonAddrFailReadying", 7), ("nonAddrFailAbnormal", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiTgtDeviceStatus.setStatus('current')
ciscoScsiTgtDevNonAccLUs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiTgtDevNonAccLUs.setStatus('current')
ciscoScsiTgtPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 2), )
if mibBuilder.loadTexts: ciscoScsiTgtPortTable.setStatus('current')
ciscoScsiTgtPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 2, 1), ).setIndexNames((0, "CISCO-SCSI-MIB", "ciscoScsiInstIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDeviceIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiPortIndex"))
if mibBuilder.loadTexts: ciscoScsiTgtPortEntry.setStatus('current')
ciscoScsiTgtPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 2, 1, 1), ScsiName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiTgtPortName.setStatus('current')
ciscoScsiTgtPortIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 2, 1, 2), ScsiIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiTgtPortIdentifier.setStatus('current')
ciscoScsiTgtPortInCommands = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 2, 1, 3), Counter32()).setUnits('commands').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiTgtPortInCommands.setStatus('current')
ciscoScsiTgtPortWrMegaBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 2, 1, 4), Counter32()).setUnits('Megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiTgtPortWrMegaBytes.setStatus('current')
ciscoScsiTgtPortReadMegaBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 2, 1, 5), Counter32()).setUnits('Megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiTgtPortReadMegaBytes.setStatus('current')
ciscoScsiTgtPortHSInCommands = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 2, 1, 6), Counter64()).setUnits('commands').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiTgtPortHSInCommands.setStatus('current')
ciscoScsiAuthorizedIntrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 1), )
if mibBuilder.loadTexts: ciscoScsiAuthorizedIntrTable.setStatus('current')
ciscoScsiAuthorizedIntrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 1, 1), ).setIndexNames((0, "CISCO-SCSI-MIB", "ciscoScsiInstIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDeviceIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiAuthIntrTgtPortIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiAuthIntrIndex"))
if mibBuilder.loadTexts: ciscoScsiAuthorizedIntrEntry.setStatus('current')
ciscoScsiAuthIntrTgtPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 1, 1, 1), ScsiPortIndexValueOrZero())
if mibBuilder.loadTexts: ciscoScsiAuthIntrTgtPortIndex.setStatus('current')
ciscoScsiAuthIntrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 1, 1, 2), ScsiIndexValue())
if mibBuilder.loadTexts: ciscoScsiAuthIntrIndex.setStatus('current')
ciscoScsiAuthIntrDevOrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 1, 1, 3), ScsiDeviceOrPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoScsiAuthIntrDevOrPort.setStatus('current')
ciscoScsiAuthIntrName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 1, 1, 4), ScsiName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoScsiAuthIntrName.setStatus('current')
ciscoScsiAuthIntrLunMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 1, 1, 5), ScsiIndexValueOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoScsiAuthIntrLunMapIndex.setStatus('current')
ciscoScsiAuthIntrAttachedTimes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 1, 1, 6), Counter32()).setUnits('Times').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiAuthIntrAttachedTimes.setStatus('current')
ciscoScsiAuthIntrOutCommands = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 1, 1, 7), Counter32()).setUnits('commands').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiAuthIntrOutCommands.setStatus('current')
ciscoScsiAuthIntrReadMegaBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 1, 1, 8), Counter32()).setUnits('Megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiAuthIntrReadMegaBytes.setStatus('current')
ciscoScsiAuthIntrWrMegaBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 1, 1, 9), Counter32()).setUnits('Megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiAuthIntrWrMegaBytes.setStatus('current')
ciscoScsiAuthIntrHSOutCommands = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 1, 1, 10), Counter64()).setUnits('commands').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiAuthIntrHSOutCommands.setStatus('current')
ciscoScsiAuthIntrLastCreation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 1, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiAuthIntrLastCreation.setStatus('current')
ciscoScsiAuthIntrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoScsiAuthIntrRowStatus.setStatus('current')
ciscoScsiAttIntrPrtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 2), )
if mibBuilder.loadTexts: ciscoScsiAttIntrPrtTable.setStatus('current')
ciscoScsiAttIntrPrtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 2, 1), ).setIndexNames((0, "CISCO-SCSI-MIB", "ciscoScsiInstIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDeviceIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiPortIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiAttIntrPrtIdx"))
if mibBuilder.loadTexts: ciscoScsiAttIntrPrtEntry.setStatus('current')
ciscoScsiAttIntrPrtIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 2, 1, 1), ScsiIndexValue())
if mibBuilder.loadTexts: ciscoScsiAttIntrPrtIdx.setStatus('current')
ciscoScsiAttIntrPrtAuthIntrIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 2, 1, 2), ScsiIndexValueOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiAttIntrPrtAuthIntrIdx.setStatus('current')
ciscoScsiAttIntrPrtName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 2, 1, 3), ScsiName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiAttIntrPrtName.setStatus('current')
ciscoScsiAttIntrPrtId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 4, 3, 2, 1, 4), ScsiIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiAttIntrPrtId.setStatus('current')
ciscoScsiLuTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 1), )
if mibBuilder.loadTexts: ciscoScsiLuTable.setStatus('current')
ciscoScsiLuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-SCSI-MIB", "ciscoScsiInstIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDeviceIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiLuIndex"))
if mibBuilder.loadTexts: ciscoScsiLuEntry.setStatus('current')
ciscoScsiLuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 1, 1, 1), ScsiIndexValue())
if mibBuilder.loadTexts: ciscoScsiLuIndex.setStatus('current')
ciscoScsiLuDefaultLun = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 1, 1, 2), ScsiLUNOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiLuDefaultLun.setStatus('current')
ciscoScsiLuWwnName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 1, 1, 3), ScsiNameIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiLuWwnName.setStatus('current')
ciscoScsiLuVendorId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 79))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiLuVendorId.setStatus('current')
ciscoScsiLuProductId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 1, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 79))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiLuProductId.setStatus('current')
ciscoScsiLuRevisionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 1, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 79))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiLuRevisionId.setStatus('current')
ciscoScsiLuPeripheralType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiLuPeripheralType.setStatus('current')
ciscoScsiLuStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("available", 2), ("notAvailable", 3), ("broken", 4), ("readying", 5), ("abnormal", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiLuStatus.setStatus('current')
ciscoScsiLuState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 1, 1, 9), Bits().clone(namedValues=NamedValues(("dataLost", 0), ("dynamicReconfigurationInProgress", 1), ("exposed", 2), ("fractionallyExposed", 3), ("partiallyExposed", 4), ("protectedRebuild", 5), ("protectionDisabled", 6), ("rebuild", 7), ("recalculate", 8), ("spareInUse", 9), ("verifyInProgress", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiLuState.setStatus('current')
ciscoScsiLuInCommands = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 1, 1, 10), Counter32()).setUnits('commands').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiLuInCommands.setStatus('current')
ciscoScsiLuReadMegaBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 1, 1, 11), Counter32()).setUnits('Megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiLuReadMegaBytes.setStatus('current')
ciscoScsiLuWrittenMegaBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 1, 1, 12), Counter32()).setUnits('Megabytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiLuWrittenMegaBytes.setStatus('current')
ciscoScsiLuInResets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 1, 1, 13), Counter32()).setUnits('resets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiLuInResets.setStatus('current')
ciscoScsiLuOutQueueFullStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiLuOutQueueFullStatus.setStatus('current')
ciscoScsiLuHSInCommands = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 1, 1, 15), Counter64()).setUnits('commands').setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiLuHSInCommands.setStatus('current')
ciscoScsiLuIdTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 2), )
if mibBuilder.loadTexts: ciscoScsiLuIdTable.setStatus('current')
ciscoScsiLuIdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 2, 1), ).setIndexNames((0, "CISCO-SCSI-MIB", "ciscoScsiInstIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDeviceIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiLuIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiLuIdIndex"))
if mibBuilder.loadTexts: ciscoScsiLuIdEntry.setStatus('current')
ciscoScsiLuIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 2, 1, 1), ScsiIndexValue())
if mibBuilder.loadTexts: ciscoScsiLuIdIndex.setStatus('current')
ciscoScsiLuIdCodeSet = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 2, 1, 2), ScsiIdCodeSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiLuIdCodeSet.setStatus('current')
ciscoScsiLuIdAssociation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 2, 1, 3), ScsiIdAssociation()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiLuIdAssociation.setStatus('current')
ciscoScsiLuIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 2, 1, 4), ScsiIdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiLuIdType.setStatus('current')
ciscoScsiLuIdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 2, 1, 5), ScsiIdValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoScsiLuIdValue.setStatus('current')
ciscoScsiLunMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 3), )
if mibBuilder.loadTexts: ciscoScsiLunMapTable.setStatus('current')
ciscoScsiLunMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 3, 1), ).setIndexNames((0, "CISCO-SCSI-MIB", "ciscoScsiInstIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiDeviceIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiLunMapIndex"), (0, "CISCO-SCSI-MIB", "ciscoScsiLunMapLun"))
if mibBuilder.loadTexts: ciscoScsiLunMapEntry.setStatus('current')
ciscoScsiLunMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 3, 1, 1), ScsiIndexValue())
if mibBuilder.loadTexts: ciscoScsiLunMapIndex.setStatus('current')
ciscoScsiLunMapLun = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 3, 1, 2), ScsiLUNOrZero())
if mibBuilder.loadTexts: ciscoScsiLunMapLun.setStatus('current')
ciscoScsiLunMapLuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 3, 1, 3), ScsiIndexValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoScsiLunMapLuIndex.setStatus('current')
ciscoScsiLunMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 95, 1, 5, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ciscoScsiLunMapRowStatus.setStatus('current')
ciscoScsiTgtDevStatusChanged = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 95, 2, 0, 1)).setObjects(("CISCO-SCSI-MIB", "ciscoScsiTgtDeviceStatus"))
if mibBuilder.loadTexts: ciscoScsiTgtDevStatusChanged.setStatus('current')
ciscoScsiLuStatusChanged = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 95, 2, 0, 2)).setObjects(("CISCO-SCSI-MIB", "ciscoScsiLuStatus"))
if mibBuilder.loadTexts: ciscoScsiLuStatusChanged.setStatus('current')
ciscoScsiCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 3, 1))
ciscoScsiGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 95, 3, 2))
ciscoScsiCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 95, 3, 1, 1)).setObjects(("CISCO-SCSI-MIB", "ciscoScsiDeviceGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoScsiCompliance = ciscoScsiCompliance.setStatus('current')
ciscoScsiDeviceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 95, 3, 2, 1)).setObjects(("CISCO-SCSI-MIB", "ciscoScsiInstAlias"), ("CISCO-SCSI-MIB", "ciscoScsiInstSoftwareIndex"), ("CISCO-SCSI-MIB", "ciscoScsiInstVendorVersion"), ("CISCO-SCSI-MIB", "ciscoScsiInstNotifEnable"), ("CISCO-SCSI-MIB", "ciscoScsiDeviceAlias"), ("CISCO-SCSI-MIB", "ciscoScsiDeviceRole"), ("CISCO-SCSI-MIB", "ciscoScsiDevicePortNumber"), ("CISCO-SCSI-MIB", "ciscoScsiPortRole"), ("CISCO-SCSI-MIB", "ciscoScsiPortTrnsptPtr"), ("CISCO-SCSI-MIB", "ciscoScsiTrnsptType"), ("CISCO-SCSI-MIB", "ciscoScsiTrnsptPointer"), ("CISCO-SCSI-MIB", "ciscoScsiTrnsptDevName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoScsiDeviceGroup = ciscoScsiDeviceGroup.setStatus('current')
ciscoScsiInitiatorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 95, 3, 2, 2)).setObjects(("CISCO-SCSI-MIB", "ciscoScsiIntrDevAccMode"), ("CISCO-SCSI-MIB", "ciscoScsiIntrPrtName"), ("CISCO-SCSI-MIB", "ciscoScsiIntrPrtIdentifier"), ("CISCO-SCSI-MIB", "ciscoScsiAttTgtPortDscTgtIdx"), ("CISCO-SCSI-MIB", "ciscoScsiAttTgtPortName"), ("CISCO-SCSI-MIB", "ciscoScsiAttTgtPortIdentifier"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoScsiInitiatorGroup = ciscoScsiInitiatorGroup.setStatus('current')
ciscoScsiDiscoveryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 95, 3, 2, 3)).setObjects(("CISCO-SCSI-MIB", "ciscoScsiDscTgtDevOrPort"), ("CISCO-SCSI-MIB", "ciscoScsiDscTgtName"), ("CISCO-SCSI-MIB", "ciscoScsiDscTgtConfigured"), ("CISCO-SCSI-MIB", "ciscoScsiDscTgtDiscovered"), ("CISCO-SCSI-MIB", "ciscoScsiDscTgtRowStatus"), ("CISCO-SCSI-MIB", "ciscoScsiDscTgtLastCreation"), ("CISCO-SCSI-MIB", "ciscoScsiDscLunLun"), ("CISCO-SCSI-MIB", "ciscoScsiDscLunIdCodeSet"), ("CISCO-SCSI-MIB", "ciscoScsiDscLunIdAssociation"), ("CISCO-SCSI-MIB", "ciscoScsiDscLunIdType"), ("CISCO-SCSI-MIB", "ciscoScsiDscLunIdValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoScsiDiscoveryGroup = ciscoScsiDiscoveryGroup.setStatus('current')
ciscoScsiTargetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 95, 3, 2, 4)).setObjects(("CISCO-SCSI-MIB", "ciscoScsiTgtDevNumberOfLUs"), ("CISCO-SCSI-MIB", "ciscoScsiTgtDeviceStatus"), ("CISCO-SCSI-MIB", "ciscoScsiTgtDevNonAccLUs"), ("CISCO-SCSI-MIB", "ciscoScsiTgtPortName"), ("CISCO-SCSI-MIB", "ciscoScsiTgtPortIdentifier"), ("CISCO-SCSI-MIB", "ciscoScsiAttIntrPrtAuthIntrIdx"), ("CISCO-SCSI-MIB", "ciscoScsiAttIntrPrtName"), ("CISCO-SCSI-MIB", "ciscoScsiAttIntrPrtId"), ("CISCO-SCSI-MIB", "ciscoScsiLuDefaultLun"), ("CISCO-SCSI-MIB", "ciscoScsiLuWwnName"), ("CISCO-SCSI-MIB", "ciscoScsiLuVendorId"), ("CISCO-SCSI-MIB", "ciscoScsiLuProductId"), ("CISCO-SCSI-MIB", "ciscoScsiLuRevisionId"), ("CISCO-SCSI-MIB", "ciscoScsiLuPeripheralType"), ("CISCO-SCSI-MIB", "ciscoScsiLuStatus"), ("CISCO-SCSI-MIB", "ciscoScsiLuState"), ("CISCO-SCSI-MIB", "ciscoScsiLuIdCodeSet"), ("CISCO-SCSI-MIB", "ciscoScsiLuIdAssociation"), ("CISCO-SCSI-MIB", "ciscoScsiLuIdType"), ("CISCO-SCSI-MIB", "ciscoScsiLuIdValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoScsiTargetGroup = ciscoScsiTargetGroup.setStatus('current')
ciscoScsiLunMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 95, 3, 2, 5)).setObjects(("CISCO-SCSI-MIB", "ciscoScsiLunMapLuIndex"), ("CISCO-SCSI-MIB", "ciscoScsiLunMapRowStatus"), ("CISCO-SCSI-MIB", "ciscoScsiAuthIntrDevOrPort"), ("CISCO-SCSI-MIB", "ciscoScsiAuthIntrName"), ("CISCO-SCSI-MIB", "ciscoScsiAuthIntrLunMapIndex"), ("CISCO-SCSI-MIB", "ciscoScsiAuthIntrLastCreation"), ("CISCO-SCSI-MIB", "ciscoScsiAuthIntrRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoScsiLunMapGroup = ciscoScsiLunMapGroup.setStatus('current')
ciscoScsiTargetStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 95, 3, 2, 6)).setObjects(("CISCO-SCSI-MIB", "ciscoScsiTgtPortInCommands"), ("CISCO-SCSI-MIB", "ciscoScsiTgtPortWrMegaBytes"), ("CISCO-SCSI-MIB", "ciscoScsiTgtPortReadMegaBytes"), ("CISCO-SCSI-MIB", "ciscoScsiLuInCommands"), ("CISCO-SCSI-MIB", "ciscoScsiLuReadMegaBytes"), ("CISCO-SCSI-MIB", "ciscoScsiLuWrittenMegaBytes"), ("CISCO-SCSI-MIB", "ciscoScsiLuInResets"), ("CISCO-SCSI-MIB", "ciscoScsiLuOutQueueFullStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoScsiTargetStatsGroup = ciscoScsiTargetStatsGroup.setStatus('current')
ciscoScsiTargetHSStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 95, 3, 2, 7)).setObjects(("CISCO-SCSI-MIB", "ciscoScsiTgtPortHSInCommands"), ("CISCO-SCSI-MIB", "ciscoScsiLuHSInCommands"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoScsiTargetHSStatsGroup = ciscoScsiTargetHSStatsGroup.setStatus('current')
ciscoScsiLunMapStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 95, 3, 2, 8)).setObjects(("CISCO-SCSI-MIB", "ciscoScsiAuthIntrAttachedTimes"), ("CISCO-SCSI-MIB", "ciscoScsiAuthIntrOutCommands"), ("CISCO-SCSI-MIB", "ciscoScsiAuthIntrReadMegaBytes"), ("CISCO-SCSI-MIB", "ciscoScsiAuthIntrWrMegaBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoScsiLunMapStatsGroup = ciscoScsiLunMapStatsGroup.setStatus('current')
ciscoScsiLunMapHSStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 95, 3, 2, 9)).setObjects(("CISCO-SCSI-MIB", "ciscoScsiAuthIntrHSOutCommands"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoScsiLunMapHSStatsGroup = ciscoScsiLunMapHSStatsGroup.setStatus('current')
ciscoScsiInitiatorStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 95, 3, 2, 10)).setObjects(("CISCO-SCSI-MIB", "ciscoScsiIntrDevOutResets"), ("CISCO-SCSI-MIB", "ciscoScsiIntrPrtOutCommands"), ("CISCO-SCSI-MIB", "ciscoScsiIntrPrtWrMegaBytes"), ("CISCO-SCSI-MIB", "ciscoScsiIntrPrtReadMegaBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoScsiInitiatorStatsGroup = ciscoScsiInitiatorStatsGroup.setStatus('current')
ciscoScsiInitiatorHSStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 95, 3, 2, 11)).setObjects(("CISCO-SCSI-MIB", "ciscoScsiIntrPrtHSOutCommands"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoScsiInitiatorHSStatsGroup = ciscoScsiInitiatorHSStatsGroup.setStatus('current')
ciscoScsiDiscoveryStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 95, 3, 2, 12)).setObjects(("CISCO-SCSI-MIB", "ciscoScsiDscTgtInCommands"), ("CISCO-SCSI-MIB", "ciscoScsiDscTgtReadMegaBytes"), ("CISCO-SCSI-MIB", "ciscoScsiDscTgtWrMegaBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoScsiDiscoveryStatsGroup = ciscoScsiDiscoveryStatsGroup.setStatus('current')
ciscoScsiDiscoveryHSStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 95, 3, 2, 13)).setObjects(("CISCO-SCSI-MIB", "ciscoScsiDscTgtHSInCommands"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoScsiDiscoveryHSStatsGroup = ciscoScsiDiscoveryHSStatsGroup.setStatus('current')
ciscoScsiDeviceStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 95, 3, 2, 14)).setObjects(("CISCO-SCSI-MIB", "ciscoScsiDeviceResets"), ("CISCO-SCSI-MIB", "ciscoScsiPortBusyStatuses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoScsiDeviceStatGroup = ciscoScsiDeviceStatGroup.setStatus('current')
ciscoScsiNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 10, 95, 3, 2, 15)).setObjects(("CISCO-SCSI-MIB", "ciscoScsiTgtDevStatusChanged"), ("CISCO-SCSI-MIB", "ciscoScsiLuStatusChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoScsiNotifGroup = ciscoScsiNotifGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-SCSI-MIB", ScsiName=ScsiName, ciscoScsiDscTgtReadMegaBytes=ciscoScsiDscTgtReadMegaBytes, ciscoScsiDscTgtHSInCommands=ciscoScsiDscTgtHSInCommands, ciscoScsiLuState=ciscoScsiLuState, ciscoScsiMIB=ciscoScsiMIB, ciscoScsiAttTgtPortTable=ciscoScsiAttTgtPortTable, ciscoScsiLuVendorId=ciscoScsiLuVendorId, ciscoScsiLuRevisionId=ciscoScsiLuRevisionId, ciscoScsiTgtDevTable=ciscoScsiTgtDevTable, ciscoScsiIntrDevTable=ciscoScsiIntrDevTable, ScsiIdCodeSet=ScsiIdCodeSet, ciscoScsiLuProductId=ciscoScsiLuProductId, ciscoScsiLunMapGroup=ciscoScsiLunMapGroup, ScsiIdType=ScsiIdType, ciscoScsiInstNotifEnable=ciscoScsiInstNotifEnable, ciscoScsiIntrPrtTable=ciscoScsiIntrPrtTable, ciscoScsiTgtDevNumberOfLUs=ciscoScsiTgtDevNumberOfLUs, ciscoScsiTrnsptType=ciscoScsiTrnsptType, ciscoScsiTargetStatsGroup=ciscoScsiTargetStatsGroup, ciscoScsiAuthorizedIntrEntry=ciscoScsiAuthorizedIntrEntry, ciscoScsiAuthIntrTgtPortIndex=ciscoScsiAuthIntrTgtPortIndex, ciscoScsiDscLunTable=ciscoScsiDscLunTable, ScsiIdAssociation=ScsiIdAssociation, ciscoScsiTranportOther=ciscoScsiTranportOther, ciscoScsiDscTgtName=ciscoScsiDscTgtName, ciscoScsiTrnsptIndex=ciscoScsiTrnsptIndex, ciscoScsiDscTgtWrMegaBytes=ciscoScsiDscTgtWrMegaBytes, ciscoScsiLuTable=ciscoScsiLuTable, ciscoScsiInstanceTable=ciscoScsiInstanceTable, ciscoScsiLuInCommands=ciscoScsiLuInCommands, ciscoScsiLuIdValue=ciscoScsiLuIdValue, ciscoScsiTrnsptDevName=ciscoScsiTrnsptDevName, ciscoScsiAuthIntrWrMegaBytes=ciscoScsiAuthIntrWrMegaBytes, ciscoScsiDscTgtLastCreation=ciscoScsiDscTgtLastCreation, ciscoScsiTrnsptTable=ciscoScsiTrnsptTable, ciscoScsiDscLunIdIndex=ciscoScsiDscLunIdIndex, ciscoScsiIntrDevAccMode=ciscoScsiIntrDevAccMode, ciscoScsiTgtDeviceStatus=ciscoScsiTgtDeviceStatus, ScsiNameIdOrZero=ScsiNameIdOrZero, ciscoScsiLuIdIndex=ciscoScsiLuIdIndex, ciscoScsiDevicePortNumber=ciscoScsiDevicePortNumber, ciscoScsiNotifGroup=ciscoScsiNotifGroup, ciscoScsiLuIndex=ciscoScsiLuIndex, ciscoScsiTarget=ciscoScsiTarget, ciscoScsiDscTgtEntry=ciscoScsiDscTgtEntry, PYSNMP_MODULE_ID=ciscoScsiMIB, ciscoScsiLunMapLuIndex=ciscoScsiLunMapLuIndex, ciscoScsiLuIdTable=ciscoScsiLuIdTable, ciscoScsiIntrPrtReadMegaBytes=ciscoScsiIntrPrtReadMegaBytes, ciscoScsiAttIntrPrtAuthIntrIdx=ciscoScsiAttIntrPrtAuthIntrIdx, ciscoScsiDscTgtIntrPortIndex=ciscoScsiDscTgtIntrPortIndex, ciscoScsiTransportISCSI=ciscoScsiTransportISCSI, ciscoScsiPortEntry=ciscoScsiPortEntry, ciscoScsiNotification=ciscoScsiNotification, ciscoScsiTargetGroup=ciscoScsiTargetGroup, ciscoScsiAuthIntrIndex=ciscoScsiAuthIntrIndex, ciscoScsiAuthIntrLunMapIndex=ciscoScsiAuthIntrLunMapIndex, ciscoScsiLuOutQueueFullStatus=ciscoScsiLuOutQueueFullStatus, ciscoScsiAttIntrPrtName=ciscoScsiAttIntrPrtName, ciscoScsiCompliances=ciscoScsiCompliances, HrSWInstalledIndexOrZero=HrSWInstalledIndexOrZero, ciscoScsiIntrPrtOutCommands=ciscoScsiIntrPrtOutCommands, ciscoScsiTransportSBP=ciscoScsiTransportSBP, ciscoScsiIntrPrtEntry=ciscoScsiIntrPrtEntry, ciscoScsiAttTgtPortEntry=ciscoScsiAttTgtPortEntry, ciscoScsiNotifications=ciscoScsiNotifications, ciscoScsiRemoteTarget=ciscoScsiRemoteTarget, ciscoScsiAuthIntrRowStatus=ciscoScsiAuthIntrRowStatus, ciscoScsiTrnsptPointer=ciscoScsiTrnsptPointer, ciscoScsiLunMapIndex=ciscoScsiLunMapIndex, ciscoScsiDeviceResets=ciscoScsiDeviceResets, ciscoScsiInitiator=ciscoScsiInitiator, ciscoScsiDscTgtTable=ciscoScsiDscTgtTable, ciscoScsiAuthIntrHSOutCommands=ciscoScsiAuthIntrHSOutCommands, ciscoScsiLuIdType=ciscoScsiLuIdType, ciscoScsiDscTgtInCommands=ciscoScsiDscTgtInCommands, ciscoScsiAttIntrPrtId=ciscoScsiAttIntrPrtId, ciscoScsiAttTgtPortDscTgtIdx=ciscoScsiAttTgtPortDscTgtIdx, ScsiIndexValueOrZero=ScsiIndexValueOrZero, ciscoScsiIntrDevOutResets=ciscoScsiIntrDevOutResets, ciscoScsiAuthIntrOutCommands=ciscoScsiAuthIntrOutCommands, ciscoScsiAttIntrPrtTable=ciscoScsiAttIntrPrtTable, ciscoScsiPortTrnsptPtr=ciscoScsiPortTrnsptPtr, ciscoScsiTgtPortEntry=ciscoScsiTgtPortEntry, ciscoScsiTgtPortReadMegaBytes=ciscoScsiTgtPortReadMegaBytes, ciscoScsiLuPeripheralType=ciscoScsiLuPeripheralType, ScsiDeviceOrPort=ScsiDeviceOrPort, ciscoScsiDeviceGroup=ciscoScsiDeviceGroup, ciscoScsiRemoteInitiators=ciscoScsiRemoteInitiators, ciscoScsiLuReadMegaBytes=ciscoScsiLuReadMegaBytes, ciscoScsiTgtDevNonAccLUs=ciscoScsiTgtDevNonAccLUs, ciscoScsiTgtPortWrMegaBytes=ciscoScsiTgtPortWrMegaBytes, ciscoScsiDscTgtConfigured=ciscoScsiDscTgtConfigured, ciscoScsiPortIndex=ciscoScsiPortIndex, ciscoScsiAttTgtPortIndex=ciscoScsiAttTgtPortIndex, ciscoScsiInstVendorVersion=ciscoScsiInstVendorVersion, ciscoScsiTransportTypes=ciscoScsiTransportTypes, ciscoScsiAuthIntrAttachedTimes=ciscoScsiAuthIntrAttachedTimes, ciscoScsiDiscoveryStatsGroup=ciscoScsiDiscoveryStatsGroup, ciscoScsiDeviceIndex=ciscoScsiDeviceIndex, ciscoScsiDscLunIdTable=ciscoScsiDscLunIdTable, ciscoScsiAttTgtPortIdentifier=ciscoScsiAttTgtPortIdentifier, ciscoScsiDscTgtIndex=ciscoScsiDscTgtIndex, ScsiIndexValue=ScsiIndexValue, ciscoScsiLuInResets=ciscoScsiLuInResets, ciscoScsiTgtDevStatusChanged=ciscoScsiTgtDevStatusChanged, ciscoScsiDiscoveryGroup=ciscoScsiDiscoveryGroup, ScsiIdValue=ScsiIdValue, ciscoScsiCompliance=ciscoScsiCompliance, ScsiIdentifier=ScsiIdentifier, ciscoScsiDscLunEntry=ciscoScsiDscLunEntry, ciscoScsiLunMapStatsGroup=ciscoScsiLunMapStatsGroup, ciscoScsiAttTgtPortName=ciscoScsiAttTgtPortName, ciscoScsiDscLunIdType=ciscoScsiDscLunIdType, ciscoScsiTgtPortHSInCommands=ciscoScsiTgtPortHSInCommands, ciscoScsiLuStatus=ciscoScsiLuStatus, ciscoScsiLunMapTable=ciscoScsiLunMapTable, ciscoScsiAuthorizedIntrTable=ciscoScsiAuthorizedIntrTable, ciscoScsiAttIntrPrtIdx=ciscoScsiAttIntrPrtIdx, ciscoScsiInitiatorGroup=ciscoScsiInitiatorGroup, ciscoScsiLunMapEntry=ciscoScsiLunMapEntry, ciscoScsiDscTgtRowStatus=ciscoScsiDscTgtRowStatus, ciscoScsiInstAlias=ciscoScsiInstAlias, ciscoScsiGeneral=ciscoScsiGeneral, ciscoScsiDscLunIdAssociation=ciscoScsiDscLunIdAssociation, ciscoScsiDeviceTable=ciscoScsiDeviceTable, ciscoScsiLunMapLun=ciscoScsiLunMapLun, ciscoScsiLuIdCodeSet=ciscoScsiLuIdCodeSet, ciscoScsiObjects=ciscoScsiObjects, ScsiLUNOrZero=ScsiLUNOrZero, ciscoScsiLuHSInCommands=ciscoScsiLuHSInCommands, ciscoScsiDscLunLun=ciscoScsiDscLunLun, ciscoScsiLuDefaultLun=ciscoScsiLuDefaultLun, ciscoScsiDeviceStatGroup=ciscoScsiDeviceStatGroup, ciscoScsiPortRole=ciscoScsiPortRole, ciscoScsiAuthIntrName=ciscoScsiAuthIntrName, ciscoScsiDscLunIdEntry=ciscoScsiDscLunIdEntry, ciscoScsiConformance=ciscoScsiConformance, ciscoScsiTargetHSStatsGroup=ciscoScsiTargetHSStatsGroup, ciscoScsiPortTable=ciscoScsiPortTable, ciscoScsiDeviceAlias=ciscoScsiDeviceAlias, ciscoScsiLuWrittenMegaBytes=ciscoScsiLuWrittenMegaBytes, ciscoScsiInitiatorStatsGroup=ciscoScsiInitiatorStatsGroup, ciscoScsiDscTgtDiscovered=ciscoScsiDscTgtDiscovered, ciscoScsiIntrPrtIdentifier=ciscoScsiIntrPrtIdentifier, ciscoScsiLuIdEntry=ciscoScsiLuIdEntry, ciscoScsiInstSoftwareIndex=ciscoScsiInstSoftwareIndex, ciscoScsiLuWwnName=ciscoScsiLuWwnName, ciscoScsiIntrPrtName=ciscoScsiIntrPrtName, ciscoScsiLuIdAssociation=ciscoScsiLuIdAssociation, ciscoScsiDeviceRole=ciscoScsiDeviceRole, ciscoScsiTranportSPI=ciscoScsiTranportSPI, ciscoScsiDscLunIdValue=ciscoScsiDscLunIdValue, ciscoScsiInitiatorHSStatsGroup=ciscoScsiInitiatorHSStatsGroup, ScsiPortIndexValueOrZero=ScsiPortIndexValueOrZero, ciscoScsiLogicalUnit=ciscoScsiLogicalUnit, ciscoScsiDeviceEntry=ciscoScsiDeviceEntry, ciscoScsiPortBusyStatuses=ciscoScsiPortBusyStatuses, ciscoScsiTrnsptEntry=ciscoScsiTrnsptEntry, ciscoScsiAttIntrPrtEntry=ciscoScsiAttIntrPrtEntry, ciscoScsiTgtPortName=ciscoScsiTgtPortName, ciscoScsiLunMapRowStatus=ciscoScsiLunMapRowStatus, ciscoScsiLuEntry=ciscoScsiLuEntry, ciscoScsiDscLunIdCodeSet=ciscoScsiDscLunIdCodeSet, ciscoScsiTgtPortInCommands=ciscoScsiTgtPortInCommands, ciscoScsiTransportFCP=ciscoScsiTransportFCP, ciscoScsiIntrDevEntry=ciscoScsiIntrDevEntry, ciscoScsiIntrPrtHSOutCommands=ciscoScsiIntrPrtHSOutCommands, ciscoScsiDscTgtDevOrPort=ciscoScsiDscTgtDevOrPort, ciscoScsiTgtDevEntry=ciscoScsiTgtDevEntry, ciscoScsiAuthIntrDevOrPort=ciscoScsiAuthIntrDevOrPort, ciscoScsiAuthIntrLastCreation=ciscoScsiAuthIntrLastCreation, ciscoScsiGroups=ciscoScsiGroups, ciscoScsiDiscoveryHSStatsGroup=ciscoScsiDiscoveryHSStatsGroup, ciscoScsiInstanceEntry=ciscoScsiInstanceEntry, ciscoScsiLunMapHSStatsGroup=ciscoScsiLunMapHSStatsGroup, ciscoScsiIntrPrtWrMegaBytes=ciscoScsiIntrPrtWrMegaBytes, ciscoScsiTgtPortIdentifier=ciscoScsiTgtPortIdentifier, ciscoScsiInstIndex=ciscoScsiInstIndex, ciscoScsiDscLunIndex=ciscoScsiDscLunIndex, ciscoScsiLuStatusChanged=ciscoScsiLuStatusChanged, ciscoScsiTransportSRP=ciscoScsiTransportSRP, ciscoScsiTgtPortTable=ciscoScsiTgtPortTable, ciscoScsiAuthIntrReadMegaBytes=ciscoScsiAuthIntrReadMegaBytes)
