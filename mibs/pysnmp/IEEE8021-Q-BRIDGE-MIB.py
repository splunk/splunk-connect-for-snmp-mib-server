#
# PySNMP MIB module IEEE8021-Q-BRIDGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IEEE8021-Q-BRIDGE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:40:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
ieee8021BridgeBasePortEntry, ieee8021BridgeBasePortComponentId, ieee8021BridgeBasePort = mibBuilder.importSymbols("IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortEntry", "ieee8021BridgeBasePortComponentId", "ieee8021BridgeBasePort")
IEEE8021PortAcceptableFrameTypes, IEEE8021PbbComponentIdentifier, IEEE8021VlanIndexOrWildcard, IEEE8021BridgePortNumber, IEEE8021VlanIndex, IEEE8021BridgePortNumberOrZero, ieee802dot1mibs = mibBuilder.importSymbols("IEEE8021-TC-MIB", "IEEE8021PortAcceptableFrameTypes", "IEEE8021PbbComponentIdentifier", "IEEE8021VlanIndexOrWildcard", "IEEE8021BridgePortNumber", "IEEE8021VlanIndex", "IEEE8021BridgePortNumberOrZero", "ieee802dot1mibs")
PortList, VlanId = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList", "VlanId")
TimeFilter, = mibBuilder.importSymbols("RMON2-MIB", "TimeFilter")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
NotificationType, IpAddress, Counter32, ObjectIdentity, Integer32, ModuleIdentity, Bits, Counter64, Unsigned32, TimeTicks, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "IpAddress", "Counter32", "ObjectIdentity", "Integer32", "ModuleIdentity", "Bits", "Counter64", "Unsigned32", "TimeTicks", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "MibIdentifier")
RowStatus, StorageType, TruthValue, TextualConvention, MacAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "StorageType", "TruthValue", "TextualConvention", "MacAddress", "DisplayString")
ieee8021QBridgeMib = ModuleIdentity((1, 3, 111, 2, 802, 1, 1, 4))
ieee8021QBridgeMib.setRevisions(('2014-12-15 00:00', '2011-12-12 00:00', '2011-02-27 00:00', '2008-10-15 00:00',))
if mibBuilder.loadTexts: ieee8021QBridgeMib.setLastUpdated('201412150000Z')
if mibBuilder.loadTexts: ieee8021QBridgeMib.setOrganization('IEEE 802.1 Working Group')
ieee8021QBridgeMibObjects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 4, 1))
ieee8021QBridgeBase = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 4, 1, 1))
ieee8021QBridgeTp = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 4, 1, 2))
ieee8021QBridgeStatic = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 4, 1, 3))
ieee8021QBridgeVlan = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 4, 1, 4))
ieee8021QBridgeProtocol = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 4, 1, 5))
ieee8021QBridgeVIDX = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 4, 1, 6))
ieee8021QBridgeTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 1, 1), )
if mibBuilder.loadTexts: ieee8021QBridgeTable.setStatus('current')
ieee8021QBridgeEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 1, 1, 1), ).setIndexNames((0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeComponentId"))
if mibBuilder.loadTexts: ieee8021QBridgeEntry.setStatus('current')
ieee8021QBridgeComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 1, 1, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021QBridgeComponentId.setStatus('current')
ieee8021QBridgeVlanVersionNumber = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("version1", 1), ("version2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeVlanVersionNumber.setStatus('current')
ieee8021QBridgeMaxVlanId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 1, 1, 1, 3), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeMaxVlanId.setStatus('current')
ieee8021QBridgeMaxSupportedVlans = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 1, 1, 1, 4), Unsigned32()).setUnits('vlans').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeMaxSupportedVlans.setStatus('current')
ieee8021QBridgeNumVlans = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 1, 1, 1, 5), Gauge32()).setUnits('vlans').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeNumVlans.setStatus('current')
ieee8021QBridgeMvrpEnabledStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 1, 1, 1, 6), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021QBridgeMvrpEnabledStatus.setStatus('current')
ieee8021QBridgeCVlanPortTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 1, 2), )
if mibBuilder.loadTexts: ieee8021QBridgeCVlanPortTable.setStatus('current')
ieee8021QBridgeCVlanPortEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 1, 2, 1), ).setIndexNames((0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeCVlanPortComponentId"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeCVlanPortNumber"))
if mibBuilder.loadTexts: ieee8021QBridgeCVlanPortEntry.setStatus('current')
ieee8021QBridgeCVlanPortComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 1, 2, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021QBridgeCVlanPortComponentId.setStatus('current')
ieee8021QBridgeCVlanPortNumber = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 1, 2, 1, 2), IEEE8021BridgePortNumber())
if mibBuilder.loadTexts: ieee8021QBridgeCVlanPortNumber.setStatus('current')
ieee8021QBridgeCVlanPortRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeCVlanPortRowStatus.setStatus('current')
ieee8021QBridgeFdbTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 1), )
if mibBuilder.loadTexts: ieee8021QBridgeFdbTable.setStatus('current')
ieee8021QBridgeFdbEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 1, 1), ).setIndexNames((0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeFdbComponentId"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeFdbId"))
if mibBuilder.loadTexts: ieee8021QBridgeFdbEntry.setStatus('current')
ieee8021QBridgeFdbComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 1, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021QBridgeFdbComponentId.setStatus('current')
ieee8021QBridgeFdbId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: ieee8021QBridgeFdbId.setStatus('current')
ieee8021QBridgeFdbDynamicCount = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 1, 1, 3), Gauge32()).setUnits('database entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeFdbDynamicCount.setStatus('current')
ieee8021QBridgeFdbLearnedEntryDiscards = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 1, 1, 4), Counter64()).setUnits('database entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeFdbLearnedEntryDiscards.setStatus('current')
ieee8021QBridgeFdbAgingTime = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000000))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021QBridgeFdbAgingTime.setStatus('current')
ieee8021QBridgeTpFdbTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 2), )
if mibBuilder.loadTexts: ieee8021QBridgeTpFdbTable.setStatus('current')
ieee8021QBridgeTpFdbEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 2, 1), ).setIndexNames((0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeFdbComponentId"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeFdbId"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeTpFdbAddress"))
if mibBuilder.loadTexts: ieee8021QBridgeTpFdbEntry.setStatus('current')
ieee8021QBridgeTpFdbAddress = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: ieee8021QBridgeTpFdbAddress.setStatus('current')
ieee8021QBridgeTpFdbPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 2, 1, 2), IEEE8021BridgePortNumberOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeTpFdbPort.setStatus('current')
ieee8021QBridgeTpFdbStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("learned", 3), ("self", 4), ("mgmt", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeTpFdbStatus.setStatus('current')
ieee8021QBridgeTpGroupTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 3), )
if mibBuilder.loadTexts: ieee8021QBridgeTpGroupTable.setStatus('current')
ieee8021QBridgeTpGroupEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 3, 1), ).setIndexNames((0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanCurrentComponentId"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanIndex"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeTpGroupAddress"))
if mibBuilder.loadTexts: ieee8021QBridgeTpGroupEntry.setStatus('current')
ieee8021QBridgeTpGroupAddress = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: ieee8021QBridgeTpGroupAddress.setStatus('current')
ieee8021QBridgeTpGroupEgressPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 3, 1, 2), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeTpGroupEgressPorts.setStatus('current')
ieee8021QBridgeTpGroupLearnt = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 3, 1, 3), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeTpGroupLearnt.setStatus('current')
ieee8021QBridgeForwardAllTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 4), )
if mibBuilder.loadTexts: ieee8021QBridgeForwardAllTable.setStatus('current')
ieee8021QBridgeForwardAllEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 4, 1), ).setIndexNames((0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanCurrentComponentId"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeForwardAllVlanIndex"))
if mibBuilder.loadTexts: ieee8021QBridgeForwardAllEntry.setStatus('current')
ieee8021QBridgeForwardAllVlanIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 4, 1, 1), IEEE8021VlanIndexOrWildcard())
if mibBuilder.loadTexts: ieee8021QBridgeForwardAllVlanIndex.setStatus('current')
ieee8021QBridgeForwardAllPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 4, 1, 2), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeForwardAllPorts.setStatus('current')
ieee8021QBridgeForwardAllStaticPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 4, 1, 3), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021QBridgeForwardAllStaticPorts.setStatus('current')
ieee8021QBridgeForwardAllForbiddenPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 4, 1, 4), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021QBridgeForwardAllForbiddenPorts.setStatus('current')
ieee8021QBridgeForwardUnregisteredTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 5), )
if mibBuilder.loadTexts: ieee8021QBridgeForwardUnregisteredTable.setStatus('current')
ieee8021QBridgeForwardUnregisteredEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 5, 1), ).setIndexNames((0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanCurrentComponentId"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeForwardUnregisteredVlanIndex"))
if mibBuilder.loadTexts: ieee8021QBridgeForwardUnregisteredEntry.setStatus('current')
ieee8021QBridgeForwardUnregisteredVlanIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 5, 1, 1), IEEE8021VlanIndexOrWildcard())
if mibBuilder.loadTexts: ieee8021QBridgeForwardUnregisteredVlanIndex.setStatus('current')
ieee8021QBridgeForwardUnregisteredPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 5, 1, 2), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeForwardUnregisteredPorts.setStatus('current')
ieee8021QBridgeForwardUnregisteredStaticPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 5, 1, 3), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021QBridgeForwardUnregisteredStaticPorts.setStatus('current')
ieee8021QBridgeForwardUnregisteredForbiddenPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 2, 5, 1, 4), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021QBridgeForwardUnregisteredForbiddenPorts.setStatus('current')
ieee8021QBridgeStaticUnicastTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 3, 1), )
if mibBuilder.loadTexts: ieee8021QBridgeStaticUnicastTable.setStatus('current')
ieee8021QBridgeStaticUnicastEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 3, 1, 1), ).setIndexNames((0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeStaticUnicastComponentId"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeStaticUnicastVlanIndex"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeStaticUnicastAddress"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeStaticUnicastReceivePort"))
if mibBuilder.loadTexts: ieee8021QBridgeStaticUnicastEntry.setStatus('current')
ieee8021QBridgeStaticUnicastComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 3, 1, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021QBridgeStaticUnicastComponentId.setStatus('current')
ieee8021QBridgeStaticUnicastVlanIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 3, 1, 1, 2), IEEE8021VlanIndexOrWildcard())
if mibBuilder.loadTexts: ieee8021QBridgeStaticUnicastVlanIndex.setStatus('current')
ieee8021QBridgeStaticUnicastAddress = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 3, 1, 1, 3), MacAddress())
if mibBuilder.loadTexts: ieee8021QBridgeStaticUnicastAddress.setStatus('current')
ieee8021QBridgeStaticUnicastReceivePort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 3, 1, 1, 4), IEEE8021BridgePortNumberOrZero())
if mibBuilder.loadTexts: ieee8021QBridgeStaticUnicastReceivePort.setStatus('current')
ieee8021QBridgeStaticUnicastStaticEgressPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 3, 1, 1, 5), PortList().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeStaticUnicastStaticEgressPorts.setStatus('current')
ieee8021QBridgeStaticUnicastForbiddenEgressPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 3, 1, 1, 6), PortList().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeStaticUnicastForbiddenEgressPorts.setStatus('current')
ieee8021QBridgeStaticUnicastStorageType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 3, 1, 1, 7), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeStaticUnicastStorageType.setStatus('current')
ieee8021QBridgeStaticUnicastRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 3, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeStaticUnicastRowStatus.setStatus('current')
ieee8021QBridgeStaticMulticastTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 3, 2), )
if mibBuilder.loadTexts: ieee8021QBridgeStaticMulticastTable.setStatus('current')
ieee8021QBridgeStaticMulticastEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 3, 2, 1), ).setIndexNames((0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanCurrentComponentId"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanIndex"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeStaticMulticastAddress"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeStaticMulticastReceivePort"))
if mibBuilder.loadTexts: ieee8021QBridgeStaticMulticastEntry.setStatus('current')
ieee8021QBridgeStaticMulticastAddress = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 3, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: ieee8021QBridgeStaticMulticastAddress.setStatus('current')
ieee8021QBridgeStaticMulticastReceivePort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 3, 2, 1, 2), IEEE8021BridgePortNumberOrZero())
if mibBuilder.loadTexts: ieee8021QBridgeStaticMulticastReceivePort.setStatus('current')
ieee8021QBridgeStaticMulticastStaticEgressPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 3, 2, 1, 3), PortList().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeStaticMulticastStaticEgressPorts.setStatus('current')
ieee8021QBridgeStaticMulticastForbiddenEgressPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 3, 2, 1, 4), PortList().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeStaticMulticastForbiddenEgressPorts.setStatus('current')
ieee8021QBridgeStaticMulticastStorageType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 3, 2, 1, 5), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeStaticMulticastStorageType.setStatus('current')
ieee8021QBridgeStaticMulticastRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 3, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeStaticMulticastRowStatus.setStatus('current')
ieee8021QBridgeVlanNumDeletes = MibScalar((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 1), Counter64()).setUnits('vlan deletions').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeVlanNumDeletes.setStatus('current')
ieee8021QBridgeVlanCurrentTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 2), )
if mibBuilder.loadTexts: ieee8021QBridgeVlanCurrentTable.setStatus('current')
ieee8021QBridgeVlanCurrentEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 2, 1), ).setIndexNames((0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanTimeMark"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanCurrentComponentId"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanIndex"))
if mibBuilder.loadTexts: ieee8021QBridgeVlanCurrentEntry.setStatus('current')
ieee8021QBridgeVlanTimeMark = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 2, 1, 1), TimeFilter())
if mibBuilder.loadTexts: ieee8021QBridgeVlanTimeMark.setStatus('current')
ieee8021QBridgeVlanCurrentComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 2, 1, 2), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021QBridgeVlanCurrentComponentId.setStatus('current')
ieee8021QBridgeVlanIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 2, 1, 3), IEEE8021VlanIndex())
if mibBuilder.loadTexts: ieee8021QBridgeVlanIndex.setStatus('current')
ieee8021QBridgeVlanFdbId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeVlanFdbId.setStatus('current')
ieee8021QBridgeVlanCurrentEgressPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 2, 1, 5), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeVlanCurrentEgressPorts.setStatus('current')
ieee8021QBridgeVlanCurrentUntaggedPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 2, 1, 6), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeVlanCurrentUntaggedPorts.setStatus('current')
ieee8021QBridgeVlanStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("permanent", 2), ("dynamicMvrp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeVlanStatus.setStatus('current')
ieee8021QBridgeVlanCreationTime = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 2, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeVlanCreationTime.setStatus('current')
ieee8021QBridgeVlanStaticTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 3), )
if mibBuilder.loadTexts: ieee8021QBridgeVlanStaticTable.setStatus('current')
ieee8021QBridgeVlanStaticEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 3, 1), ).setIndexNames((0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanStaticComponentId"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanStaticVlanIndex"))
if mibBuilder.loadTexts: ieee8021QBridgeVlanStaticEntry.setStatus('current')
ieee8021QBridgeVlanStaticComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 3, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021QBridgeVlanStaticComponentId.setStatus('current')
ieee8021QBridgeVlanStaticVlanIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 3, 1, 2), IEEE8021VlanIndex())
if mibBuilder.loadTexts: ieee8021QBridgeVlanStaticVlanIndex.setStatus('current')
ieee8021QBridgeVlanStaticName = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 3, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeVlanStaticName.setStatus('current')
ieee8021QBridgeVlanStaticEgressPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 3, 1, 4), PortList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeVlanStaticEgressPorts.setStatus('current')
ieee8021QBridgeVlanForbiddenEgressPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 3, 1, 5), PortList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeVlanForbiddenEgressPorts.setStatus('current')
ieee8021QBridgeVlanStaticUntaggedPorts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 3, 1, 6), PortList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeVlanStaticUntaggedPorts.setStatus('current')
ieee8021QBridgeVlanStaticRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 3, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeVlanStaticRowStatus.setStatus('current')
ieee8021QBridgeNextFreeLocalVlanTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 4), )
if mibBuilder.loadTexts: ieee8021QBridgeNextFreeLocalVlanTable.setStatus('current')
ieee8021QBridgeNextFreeLocalVlanEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 4, 1), ).setIndexNames((0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeNextFreeLocalVlanComponentId"))
if mibBuilder.loadTexts: ieee8021QBridgeNextFreeLocalVlanEntry.setStatus('current')
ieee8021QBridgeNextFreeLocalVlanComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 4, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021QBridgeNextFreeLocalVlanComponentId.setStatus('current')
ieee8021QBridgeNextFreeLocalVlanIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4096, 4294967295), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeNextFreeLocalVlanIndex.setStatus('current')
ieee8021QBridgePortVlanTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 5), )
if mibBuilder.loadTexts: ieee8021QBridgePortVlanTable.setStatus('current')
ieee8021QBridgePortVlanEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 5, 1), )
ieee8021BridgeBasePortEntry.registerAugmentions(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgePortVlanEntry"))
ieee8021QBridgePortVlanEntry.setIndexNames(*ieee8021BridgeBasePortEntry.getIndexNames())
if mibBuilder.loadTexts: ieee8021QBridgePortVlanEntry.setStatus('current')
ieee8021QBridgePvid = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 5, 1, 1), IEEE8021VlanIndex().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021QBridgePvid.setStatus('current')
ieee8021QBridgePortAcceptableFrameTypes = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 5, 1, 2), IEEE8021PortAcceptableFrameTypes().clone('admitAll')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021QBridgePortAcceptableFrameTypes.setStatus('current')
ieee8021QBridgePortIngressFiltering = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 5, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021QBridgePortIngressFiltering.setStatus('current')
ieee8021QBridgePortMvrpEnabledStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 5, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021QBridgePortMvrpEnabledStatus.setStatus('current')
ieee8021QBridgePortMvrpFailedRegistrations = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 5, 1, 5), Counter64()).setUnits('failed MVRP registrations').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgePortMvrpFailedRegistrations.setStatus('current')
ieee8021QBridgePortMvrpLastPduOrigin = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 5, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgePortMvrpLastPduOrigin.setStatus('current')
ieee8021QBridgePortRestrictedVlanRegistration = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 5, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021QBridgePortRestrictedVlanRegistration.setStatus('current')
ieee8021QBridgePortVlanStatisticsTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 6), )
if mibBuilder.loadTexts: ieee8021QBridgePortVlanStatisticsTable.setStatus('current')
ieee8021QBridgePortVlanStatisticsEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 6, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortComponentId"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePort"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanIndex"))
if mibBuilder.loadTexts: ieee8021QBridgePortVlanStatisticsEntry.setStatus('current')
ieee8021QBridgeTpVlanPortInFrames = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 6, 1, 1), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeTpVlanPortInFrames.setStatus('current')
ieee8021QBridgeTpVlanPortOutFrames = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 6, 1, 2), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeTpVlanPortOutFrames.setStatus('current')
ieee8021QBridgeTpVlanPortInDiscards = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 6, 1, 3), Counter64()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021QBridgeTpVlanPortInDiscards.setStatus('current')
ieee8021QBridgeLearningConstraintsTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 8), )
if mibBuilder.loadTexts: ieee8021QBridgeLearningConstraintsTable.setStatus('deprecated')
ieee8021QBridgeLearningConstraintsEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 8, 1), ).setIndexNames((0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeLearningConstraintsComponentId"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeLearningConstraintsVlan"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeLearningConstraintsSet"))
if mibBuilder.loadTexts: ieee8021QBridgeLearningConstraintsEntry.setStatus('deprecated')
ieee8021QBridgeLearningConstraintsComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 8, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021QBridgeLearningConstraintsComponentId.setStatus('deprecated')
ieee8021QBridgeLearningConstraintsVlan = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 8, 1, 2), IEEE8021VlanIndex())
if mibBuilder.loadTexts: ieee8021QBridgeLearningConstraintsVlan.setStatus('deprecated')
ieee8021QBridgeLearningConstraintsSet = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 8, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: ieee8021QBridgeLearningConstraintsSet.setStatus('deprecated')
ieee8021QBridgeLearningConstraintsType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("independent", 1), ("shared", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeLearningConstraintsType.setStatus('deprecated')
ieee8021QBridgeLearningConstraintsStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 8, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeLearningConstraintsStatus.setStatus('deprecated')
ieee8021QBridgeLearningConstraintDefaultsTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 9), )
if mibBuilder.loadTexts: ieee8021QBridgeLearningConstraintDefaultsTable.setStatus('deprecated')
ieee8021QBridgeLearningConstraintDefaultsEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 9, 1), ).setIndexNames((0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeLearningConstraintDefaultsComponentId"))
if mibBuilder.loadTexts: ieee8021QBridgeLearningConstraintDefaultsEntry.setStatus('deprecated')
ieee8021QBridgeLearningConstraintDefaultsComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 9, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021QBridgeLearningConstraintDefaultsComponentId.setStatus('deprecated')
ieee8021QBridgeLearningConstraintDefaultsSet = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021QBridgeLearningConstraintDefaultsSet.setStatus('deprecated')
ieee8021QBridgeLearningConstraintDefaultsType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 4, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("independent", 1), ("shared", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021QBridgeLearningConstraintDefaultsType.setStatus('deprecated')
ieee8021QBridgeProtocolGroupTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 5, 1), )
if mibBuilder.loadTexts: ieee8021QBridgeProtocolGroupTable.setStatus('current')
ieee8021QBridgeProtocolGroupEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 5, 1, 1), ).setIndexNames((0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeProtocolGroupComponentId"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeProtocolTemplateFrameType"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeProtocolTemplateProtocolValue"))
if mibBuilder.loadTexts: ieee8021QBridgeProtocolGroupEntry.setStatus('current')
ieee8021QBridgeProtocolGroupComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 5, 1, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021QBridgeProtocolGroupComponentId.setStatus('current')
ieee8021QBridgeProtocolTemplateFrameType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ethernet", 1), ("rfc1042", 2), ("snap8021H", 3), ("snapOther", 4), ("llcOther", 5))))
if mibBuilder.loadTexts: ieee8021QBridgeProtocolTemplateFrameType.setStatus('current')
ieee8021QBridgeProtocolTemplateProtocolValue = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 5, 1, 1, 3), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(2, 2), ValueSizeConstraint(5, 5), )))
if mibBuilder.loadTexts: ieee8021QBridgeProtocolTemplateProtocolValue.setStatus('current')
ieee8021QBridgeProtocolGroupId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeProtocolGroupId.setStatus('current')
ieee8021QBridgeProtocolGroupRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 5, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeProtocolGroupRowStatus.setStatus('current')
ieee8021QBridgeProtocolPortTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 5, 2), )
if mibBuilder.loadTexts: ieee8021QBridgeProtocolPortTable.setStatus('current')
ieee8021QBridgeProtocolPortEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 5, 2, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortComponentId"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePort"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeProtocolPortGroupId"))
if mibBuilder.loadTexts: ieee8021QBridgeProtocolPortEntry.setStatus('current')
ieee8021QBridgeProtocolPortGroupId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: ieee8021QBridgeProtocolPortGroupId.setStatus('current')
ieee8021QBridgeProtocolPortGroupVid = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 5, 2, 1, 2), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeProtocolPortGroupVid.setStatus('current')
ieee8021QBridgeProtocolPortRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 5, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeProtocolPortRowStatus.setStatus('current')
ieee8021QBridgeVIDXTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 6, 1), )
if mibBuilder.loadTexts: ieee8021QBridgeVIDXTable.setStatus('current')
ieee8021QBridgeVIDXEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 6, 1, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortComponentId"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePort"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVIDXLocalVid"))
if mibBuilder.loadTexts: ieee8021QBridgeVIDXEntry.setStatus('current')
ieee8021QBridgeVIDXLocalVid = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 6, 1, 1, 1), VlanId())
if mibBuilder.loadTexts: ieee8021QBridgeVIDXLocalVid.setStatus('current')
ieee8021QBridgeVIDXRelayVid = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 6, 1, 1, 2), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeVIDXRelayVid.setStatus('current')
ieee8021QBridgeVIDXRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 6, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeVIDXRowStatus.setStatus('current')
ieee8021QBridgeEgressVidXTable = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 6, 2), )
if mibBuilder.loadTexts: ieee8021QBridgeEgressVidXTable.setStatus('deprecated')
ieee8021QBridgeEgressVidXEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 6, 2, 1), ).setIndexNames((0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021BridgeBaseEgressPortComponentId"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021BridgeEgressBasePort"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeEgressVidXRelayVid"))
if mibBuilder.loadTexts: ieee8021QBridgeEgressVidXEntry.setStatus('deprecated')
ieee8021QBridgeEgressVidXRelayVid = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 6, 2, 1, 1), VlanId())
if mibBuilder.loadTexts: ieee8021QBridgeEgressVidXRelayVid.setStatus('deprecated')
ieee8021QBridgeEgressVidXLocalVid = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 6, 2, 1, 2), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeEgressVidXLocalVid.setStatus('deprecated')
ieee8021QBridgeEgressVidXRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 6, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeEgressVidXRowStatus.setStatus('deprecated')
ieee8021QBridgeEgressVidXV2Table = MibTable((1, 3, 111, 2, 802, 1, 1, 4, 1, 6, 3), )
if mibBuilder.loadTexts: ieee8021QBridgeEgressVidXV2Table.setStatus('current')
ieee8021QBridgeEgressVidXV2Entry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 4, 1, 6, 3, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePortComponentId"), (0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgeBasePort"), (0, "IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeEgressVidXV2RelayVid"))
if mibBuilder.loadTexts: ieee8021QBridgeEgressVidXV2Entry.setStatus('current')
ieee8021QBridgeEgressVidXV2RelayVid = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 6, 3, 1, 1), VlanId())
if mibBuilder.loadTexts: ieee8021QBridgeEgressVidXV2RelayVid.setStatus('current')
ieee8021QBridgeEgressVidXV2LocalVid = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 6, 3, 1, 2), VlanId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeEgressVidXV2LocalVid.setStatus('current')
ieee8021QBridgeEgressVidXV2RowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 4, 1, 6, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021QBridgeEgressVidXV2RowStatus.setStatus('current')
ieee8021QBridgeConformance = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 4, 2))
ieee8021QBridgeGroups = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 4, 2, 1))
ieee8021QBridgeCompliances = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 4, 2, 2))
ieee8021QBridgeBaseGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 4, 2, 1, 1)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanVersionNumber"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeMaxVlanId"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeMaxSupportedVlans"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeNumVlans"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeMvrpEnabledStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgeBaseGroup = ieee8021QBridgeBaseGroup.setStatus('current')
ieee8021QBridgeFdbUnicastGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 4, 2, 1, 2)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeFdbDynamicCount"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeFdbLearnedEntryDiscards"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeFdbAgingTime"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeTpFdbPort"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeTpFdbStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgeFdbUnicastGroup = ieee8021QBridgeFdbUnicastGroup.setStatus('current')
ieee8021QBridgeFdbMulticastGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 4, 2, 1, 3)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeTpGroupEgressPorts"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeTpGroupLearnt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgeFdbMulticastGroup = ieee8021QBridgeFdbMulticastGroup.setStatus('current')
ieee8021QBridgeServiceRequirementsGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 4, 2, 1, 4)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeForwardAllPorts"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeForwardAllStaticPorts"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeForwardAllForbiddenPorts"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeForwardUnregisteredPorts"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeForwardUnregisteredStaticPorts"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeForwardUnregisteredForbiddenPorts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgeServiceRequirementsGroup = ieee8021QBridgeServiceRequirementsGroup.setStatus('current')
ieee8021QBridgeFdbStaticGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 4, 2, 1, 5)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeStaticUnicastStaticEgressPorts"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeStaticUnicastForbiddenEgressPorts"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeStaticUnicastStorageType"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeStaticUnicastRowStatus"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeStaticMulticastStaticEgressPorts"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeStaticMulticastForbiddenEgressPorts"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeStaticMulticastStorageType"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeStaticMulticastRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgeFdbStaticGroup = ieee8021QBridgeFdbStaticGroup.setStatus('current')
ieee8021QBridgeVlanGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 4, 2, 1, 6)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanNumDeletes"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanFdbId"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanCurrentEgressPorts"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanCurrentUntaggedPorts"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanStatus"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanCreationTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgeVlanGroup = ieee8021QBridgeVlanGroup.setStatus('current')
ieee8021QBridgeVlanStaticGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 4, 2, 1, 7)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanStaticName"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanStaticEgressPorts"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanForbiddenEgressPorts"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanStaticUntaggedPorts"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanStaticRowStatus"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeNextFreeLocalVlanIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgeVlanStaticGroup = ieee8021QBridgeVlanStaticGroup.setStatus('current')
ieee8021QBridgeVlanStatisticsGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 4, 2, 1, 8)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeTpVlanPortInFrames"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeTpVlanPortOutFrames"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeTpVlanPortInDiscards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgeVlanStatisticsGroup = ieee8021QBridgeVlanStatisticsGroup.setStatus('current')
ieee8021QBridgeLearningConstraintsGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 4, 2, 1, 9)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeLearningConstraintsType"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeLearningConstraintsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgeLearningConstraintsGroup = ieee8021QBridgeLearningConstraintsGroup.setStatus('deprecated')
ieee8021QBridgeLearningConstraintDefaultGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 4, 2, 1, 10)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeLearningConstraintDefaultsSet"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeLearningConstraintDefaultsType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgeLearningConstraintDefaultGroup = ieee8021QBridgeLearningConstraintDefaultGroup.setStatus('deprecated')
ieee8021QBridgeClassificationDeviceGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 4, 2, 1, 11)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeProtocolGroupId"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeProtocolGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgeClassificationDeviceGroup = ieee8021QBridgeClassificationDeviceGroup.setStatus('current')
ieee8021QBridgeClassificationPortGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 4, 2, 1, 12)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeProtocolPortGroupVid"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeProtocolPortRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgeClassificationPortGroup = ieee8021QBridgeClassificationPortGroup.setStatus('current')
ieee8021QBridgePortGroup2 = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 4, 2, 1, 13)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgePvid"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgePortAcceptableFrameTypes"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgePortIngressFiltering"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgePortMvrpEnabledStatus"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgePortMvrpFailedRegistrations"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgePortMvrpLastPduOrigin"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgePortRestrictedVlanRegistration"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgePortGroup2 = ieee8021QBridgePortGroup2.setStatus('current')
ieee8021QBridgeCVlanPortGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 4, 2, 1, 14)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeCVlanPortRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgeCVlanPortGroup = ieee8021QBridgeCVlanPortGroup.setStatus('current')
ieee8021QBridgeVIDXGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 4, 2, 1, 15)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVIDXRelayVid"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVIDXRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgeVIDXGroup = ieee8021QBridgeVIDXGroup.setStatus('current')
ieee8021QBridgeEgressVIDXGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 4, 2, 1, 16)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeEgressVidXLocalVid"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeEgressVidXRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgeEgressVIDXGroup = ieee8021QBridgeEgressVIDXGroup.setStatus('deprecated')
ieee8021QBridgeEgressVIDXV2Group = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 4, 2, 1, 17)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeEgressVidXV2LocalVid"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeEgressVidXV2RowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgeEgressVIDXV2Group = ieee8021QBridgeEgressVIDXV2Group.setStatus('current')
ieee8021QBridgeCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 4, 2, 2, 1)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeBaseGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanStaticGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgePortGroup2"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeFdbUnicastGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeFdbMulticastGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeServiceRequirementsGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeFdbStaticGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanStatisticsGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeClassificationDeviceGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeClassificationPortGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeCVlanPortGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVIDXGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeEgressVIDXGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgeCompliance = ieee8021QBridgeCompliance.setStatus('deprecated')
ieee8021QBridgeComplianceV2 = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 4, 2, 2, 2)).setObjects(("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeBaseGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanStaticGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgePortGroup2"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeFdbUnicastGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeFdbMulticastGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeServiceRequirementsGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeFdbStaticGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVlanStatisticsGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeClassificationDeviceGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeClassificationPortGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeCVlanPortGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeVIDXGroup"), ("IEEE8021-Q-BRIDGE-MIB", "ieee8021QBridgeEgressVIDXV2Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021QBridgeComplianceV2 = ieee8021QBridgeComplianceV2.setStatus('current')
mibBuilder.exportSymbols("IEEE8021-Q-BRIDGE-MIB", ieee8021QBridgeNextFreeLocalVlanEntry=ieee8021QBridgeNextFreeLocalVlanEntry, ieee8021QBridgeForwardAllStaticPorts=ieee8021QBridgeForwardAllStaticPorts, ieee8021QBridgeStaticUnicastForbiddenEgressPorts=ieee8021QBridgeStaticUnicastForbiddenEgressPorts, ieee8021QBridgePortMvrpLastPduOrigin=ieee8021QBridgePortMvrpLastPduOrigin, ieee8021QBridgeVlanStatisticsGroup=ieee8021QBridgeVlanStatisticsGroup, ieee8021QBridgeStaticMulticastForbiddenEgressPorts=ieee8021QBridgeStaticMulticastForbiddenEgressPorts, ieee8021QBridgeLearningConstraintsSet=ieee8021QBridgeLearningConstraintsSet, ieee8021QBridgeVlanCurrentEgressPorts=ieee8021QBridgeVlanCurrentEgressPorts, ieee8021QBridgeLearningConstraintsGroup=ieee8021QBridgeLearningConstraintsGroup, ieee8021QBridgeStaticUnicastStorageType=ieee8021QBridgeStaticUnicastStorageType, ieee8021QBridgeCVlanPortGroup=ieee8021QBridgeCVlanPortGroup, ieee8021QBridgeLearningConstraintsEntry=ieee8021QBridgeLearningConstraintsEntry, ieee8021QBridgeLearningConstraintsType=ieee8021QBridgeLearningConstraintsType, ieee8021QBridgeVIDX=ieee8021QBridgeVIDX, ieee8021QBridgeStaticUnicastRowStatus=ieee8021QBridgeStaticUnicastRowStatus, ieee8021QBridgeForwardUnregisteredPorts=ieee8021QBridgeForwardUnregisteredPorts, ieee8021QBridgeVlanStaticEgressPorts=ieee8021QBridgeVlanStaticEgressPorts, ieee8021QBridgeFdbTable=ieee8021QBridgeFdbTable, ieee8021QBridgeTpGroupAddress=ieee8021QBridgeTpGroupAddress, ieee8021QBridgeFdbDynamicCount=ieee8021QBridgeFdbDynamicCount, ieee8021QBridgeLearningConstraintDefaultsComponentId=ieee8021QBridgeLearningConstraintDefaultsComponentId, ieee8021QBridgeCompliance=ieee8021QBridgeCompliance, ieee8021QBridgeProtocolPortTable=ieee8021QBridgeProtocolPortTable, ieee8021QBridgeProtocolPortGroupId=ieee8021QBridgeProtocolPortGroupId, ieee8021QBridgeCVlanPortEntry=ieee8021QBridgeCVlanPortEntry, ieee8021QBridgeTpGroupEgressPorts=ieee8021QBridgeTpGroupEgressPorts, ieee8021QBridgeCVlanPortComponentId=ieee8021QBridgeCVlanPortComponentId, ieee8021QBridgeStaticMulticastStorageType=ieee8021QBridgeStaticMulticastStorageType, ieee8021QBridgeTpGroupEntry=ieee8021QBridgeTpGroupEntry, ieee8021QBridgeVlanStaticName=ieee8021QBridgeVlanStaticName, ieee8021QBridgeProtocolGroupComponentId=ieee8021QBridgeProtocolGroupComponentId, ieee8021QBridgeProtocolGroupTable=ieee8021QBridgeProtocolGroupTable, ieee8021QBridgeNumVlans=ieee8021QBridgeNumVlans, ieee8021QBridgeForwardAllForbiddenPorts=ieee8021QBridgeForwardAllForbiddenPorts, ieee8021QBridgeStatic=ieee8021QBridgeStatic, ieee8021QBridgeVlanStatus=ieee8021QBridgeVlanStatus, ieee8021QBridgePortVlanStatisticsEntry=ieee8021QBridgePortVlanStatisticsEntry, ieee8021QBridgeVlanGroup=ieee8021QBridgeVlanGroup, ieee8021QBridgeVlanVersionNumber=ieee8021QBridgeVlanVersionNumber, ieee8021QBridgeVIDXGroup=ieee8021QBridgeVIDXGroup, ieee8021QBridgeVlanStaticUntaggedPorts=ieee8021QBridgeVlanStaticUntaggedPorts, ieee8021QBridgeStaticUnicastComponentId=ieee8021QBridgeStaticUnicastComponentId, ieee8021QBridgeTp=ieee8021QBridgeTp, ieee8021QBridgeNextFreeLocalVlanComponentId=ieee8021QBridgeNextFreeLocalVlanComponentId, ieee8021QBridgeEgressVidXV2LocalVid=ieee8021QBridgeEgressVidXV2LocalVid, ieee8021QBridgeEgressVIDXV2Group=ieee8021QBridgeEgressVIDXV2Group, PYSNMP_MODULE_ID=ieee8021QBridgeMib, ieee8021QBridgeTpGroupTable=ieee8021QBridgeTpGroupTable, ieee8021QBridgePortVlanStatisticsTable=ieee8021QBridgePortVlanStatisticsTable, ieee8021QBridgeVlanForbiddenEgressPorts=ieee8021QBridgeVlanForbiddenEgressPorts, ieee8021QBridgeLearningConstraintDefaultsSet=ieee8021QBridgeLearningConstraintDefaultsSet, ieee8021QBridgeVIDXRowStatus=ieee8021QBridgeVIDXRowStatus, ieee8021QBridgeVlanNumDeletes=ieee8021QBridgeVlanNumDeletes, ieee8021QBridgeEgressVidXV2RowStatus=ieee8021QBridgeEgressVidXV2RowStatus, ieee8021QBridgeVlanCurrentTable=ieee8021QBridgeVlanCurrentTable, ieee8021QBridgeClassificationPortGroup=ieee8021QBridgeClassificationPortGroup, ieee8021QBridgeFdbAgingTime=ieee8021QBridgeFdbAgingTime, ieee8021QBridgeLearningConstraintsStatus=ieee8021QBridgeLearningConstraintsStatus, ieee8021QBridgeTable=ieee8021QBridgeTable, ieee8021QBridgeProtocolGroupEntry=ieee8021QBridgeProtocolGroupEntry, ieee8021QBridgeVlanIndex=ieee8021QBridgeVlanIndex, ieee8021QBridgeForwardUnregisteredForbiddenPorts=ieee8021QBridgeForwardUnregisteredForbiddenPorts, ieee8021QBridgeStaticMulticastEntry=ieee8021QBridgeStaticMulticastEntry, ieee8021QBridgeForwardAllPorts=ieee8021QBridgeForwardAllPorts, ieee8021QBridgeTpVlanPortInFrames=ieee8021QBridgeTpVlanPortInFrames, ieee8021QBridgeProtocolPortGroupVid=ieee8021QBridgeProtocolPortGroupVid, ieee8021QBridgeFdbId=ieee8021QBridgeFdbId, ieee8021QBridgeProtocol=ieee8021QBridgeProtocol, ieee8021QBridgeTpGroupLearnt=ieee8021QBridgeTpGroupLearnt, ieee8021QBridgeEgressVidXRowStatus=ieee8021QBridgeEgressVidXRowStatus, ieee8021QBridgeLearningConstraintsComponentId=ieee8021QBridgeLearningConstraintsComponentId, ieee8021QBridgeFdbUnicastGroup=ieee8021QBridgeFdbUnicastGroup, ieee8021QBridgeProtocolPortRowStatus=ieee8021QBridgeProtocolPortRowStatus, ieee8021QBridgeEgressVidXRelayVid=ieee8021QBridgeEgressVidXRelayVid, ieee8021QBridgeEgressVidXLocalVid=ieee8021QBridgeEgressVidXLocalVid, ieee8021QBridgeForwardUnregisteredEntry=ieee8021QBridgeForwardUnregisteredEntry, ieee8021QBridgeStaticUnicastAddress=ieee8021QBridgeStaticUnicastAddress, ieee8021QBridgeVlanStaticTable=ieee8021QBridgeVlanStaticTable, ieee8021QBridgeMvrpEnabledStatus=ieee8021QBridgeMvrpEnabledStatus, ieee8021QBridgeForwardUnregisteredTable=ieee8021QBridgeForwardUnregisteredTable, ieee8021QBridgeLearningConstraintDefaultsTable=ieee8021QBridgeLearningConstraintDefaultsTable, ieee8021QBridgeForwardAllVlanIndex=ieee8021QBridgeForwardAllVlanIndex, ieee8021QBridgePortAcceptableFrameTypes=ieee8021QBridgePortAcceptableFrameTypes, ieee8021QBridgeVlanStaticComponentId=ieee8021QBridgeVlanStaticComponentId, ieee8021QBridgeLearningConstraintsVlan=ieee8021QBridgeLearningConstraintsVlan, ieee8021QBridgeTpFdbPort=ieee8021QBridgeTpFdbPort, ieee8021QBridgeStaticMulticastStaticEgressPorts=ieee8021QBridgeStaticMulticastStaticEgressPorts, ieee8021QBridgeFdbEntry=ieee8021QBridgeFdbEntry, ieee8021QBridgeBaseGroup=ieee8021QBridgeBaseGroup, ieee8021QBridgePortIngressFiltering=ieee8021QBridgePortIngressFiltering, ieee8021QBridgeFdbStaticGroup=ieee8021QBridgeFdbStaticGroup, ieee8021QBridgePortMvrpEnabledStatus=ieee8021QBridgePortMvrpEnabledStatus, ieee8021QBridgeNextFreeLocalVlanIndex=ieee8021QBridgeNextFreeLocalVlanIndex, ieee8021QBridgeMib=ieee8021QBridgeMib, ieee8021QBridgeClassificationDeviceGroup=ieee8021QBridgeClassificationDeviceGroup, ieee8021QBridgeMaxVlanId=ieee8021QBridgeMaxVlanId, ieee8021QBridgeStaticMulticastAddress=ieee8021QBridgeStaticMulticastAddress, ieee8021QBridgeForwardUnregisteredStaticPorts=ieee8021QBridgeForwardUnregisteredStaticPorts, ieee8021QBridgeVIDXLocalVid=ieee8021QBridgeVIDXLocalVid, ieee8021QBridgeEgressVidXTable=ieee8021QBridgeEgressVidXTable, ieee8021QBridgePortRestrictedVlanRegistration=ieee8021QBridgePortRestrictedVlanRegistration, ieee8021QBridgeEgressVidXV2Table=ieee8021QBridgeEgressVidXV2Table, ieee8021QBridgeLearningConstraintDefaultsEntry=ieee8021QBridgeLearningConstraintDefaultsEntry, ieee8021QBridgeForwardAllEntry=ieee8021QBridgeForwardAllEntry, ieee8021QBridgeStaticUnicastEntry=ieee8021QBridgeStaticUnicastEntry, ieee8021QBridgePvid=ieee8021QBridgePvid, ieee8021QBridgeVlanStaticVlanIndex=ieee8021QBridgeVlanStaticVlanIndex, ieee8021QBridgeBase=ieee8021QBridgeBase, ieee8021QBridgeTpVlanPortInDiscards=ieee8021QBridgeTpVlanPortInDiscards, ieee8021QBridgeVIDXTable=ieee8021QBridgeVIDXTable, ieee8021QBridgeCVlanPortRowStatus=ieee8021QBridgeCVlanPortRowStatus, ieee8021QBridgeProtocolTemplateFrameType=ieee8021QBridgeProtocolTemplateFrameType, ieee8021QBridgeCVlanPortNumber=ieee8021QBridgeCVlanPortNumber, ieee8021QBridgeVIDXRelayVid=ieee8021QBridgeVIDXRelayVid, ieee8021QBridgeProtocolPortEntry=ieee8021QBridgeProtocolPortEntry, ieee8021QBridgeTpFdbTable=ieee8021QBridgeTpFdbTable, ieee8021QBridgeEgressVidXEntry=ieee8021QBridgeEgressVidXEntry, ieee8021QBridgeMibObjects=ieee8021QBridgeMibObjects, ieee8021QBridgeForwardUnregisteredVlanIndex=ieee8021QBridgeForwardUnregisteredVlanIndex, ieee8021QBridgeMaxSupportedVlans=ieee8021QBridgeMaxSupportedVlans, ieee8021QBridgeStaticMulticastRowStatus=ieee8021QBridgeStaticMulticastRowStatus, ieee8021QBridgeVlanTimeMark=ieee8021QBridgeVlanTimeMark, ieee8021QBridgeTpVlanPortOutFrames=ieee8021QBridgeTpVlanPortOutFrames, ieee8021QBridgeVlanStaticGroup=ieee8021QBridgeVlanStaticGroup, ieee8021QBridgeCVlanPortTable=ieee8021QBridgeCVlanPortTable, ieee8021QBridgeStaticUnicastStaticEgressPorts=ieee8021QBridgeStaticUnicastStaticEgressPorts, ieee8021QBridgeProtocolGroupRowStatus=ieee8021QBridgeProtocolGroupRowStatus, ieee8021QBridgeLearningConstraintDefaultGroup=ieee8021QBridgeLearningConstraintDefaultGroup, ieee8021QBridgeComplianceV2=ieee8021QBridgeComplianceV2, ieee8021QBridgeEgressVIDXGroup=ieee8021QBridgeEgressVIDXGroup, ieee8021QBridgeConformance=ieee8021QBridgeConformance, ieee8021QBridgeVlanFdbId=ieee8021QBridgeVlanFdbId, ieee8021QBridgeFdbLearnedEntryDiscards=ieee8021QBridgeFdbLearnedEntryDiscards, ieee8021QBridgeVIDXEntry=ieee8021QBridgeVIDXEntry, ieee8021QBridgeProtocolGroupId=ieee8021QBridgeProtocolGroupId, ieee8021QBridgeServiceRequirementsGroup=ieee8021QBridgeServiceRequirementsGroup, ieee8021QBridgeVlanCurrentUntaggedPorts=ieee8021QBridgeVlanCurrentUntaggedPorts, ieee8021QBridgeComponentId=ieee8021QBridgeComponentId, ieee8021QBridgeTpFdbStatus=ieee8021QBridgeTpFdbStatus, ieee8021QBridgeTpFdbAddress=ieee8021QBridgeTpFdbAddress, ieee8021QBridgeTpFdbEntry=ieee8021QBridgeTpFdbEntry, ieee8021QBridgeVlan=ieee8021QBridgeVlan, ieee8021QBridgeVlanCurrentComponentId=ieee8021QBridgeVlanCurrentComponentId, ieee8021QBridgePortMvrpFailedRegistrations=ieee8021QBridgePortMvrpFailedRegistrations, ieee8021QBridgeVlanCurrentEntry=ieee8021QBridgeVlanCurrentEntry, ieee8021QBridgeEgressVidXV2Entry=ieee8021QBridgeEgressVidXV2Entry, ieee8021QBridgeLearningConstraintDefaultsType=ieee8021QBridgeLearningConstraintDefaultsType, ieee8021QBridgeStaticMulticastReceivePort=ieee8021QBridgeStaticMulticastReceivePort, ieee8021QBridgeGroups=ieee8021QBridgeGroups, ieee8021QBridgeVlanCreationTime=ieee8021QBridgeVlanCreationTime, ieee8021QBridgePortGroup2=ieee8021QBridgePortGroup2, ieee8021QBridgeProtocolTemplateProtocolValue=ieee8021QBridgeProtocolTemplateProtocolValue, ieee8021QBridgeEgressVidXV2RelayVid=ieee8021QBridgeEgressVidXV2RelayVid, ieee8021QBridgeStaticMulticastTable=ieee8021QBridgeStaticMulticastTable, ieee8021QBridgeFdbMulticastGroup=ieee8021QBridgeFdbMulticastGroup, ieee8021QBridgeFdbComponentId=ieee8021QBridgeFdbComponentId, ieee8021QBridgeStaticUnicastReceivePort=ieee8021QBridgeStaticUnicastReceivePort, ieee8021QBridgePortVlanEntry=ieee8021QBridgePortVlanEntry, ieee8021QBridgeForwardAllTable=ieee8021QBridgeForwardAllTable, ieee8021QBridgeStaticUnicastTable=ieee8021QBridgeStaticUnicastTable, ieee8021QBridgePortVlanTable=ieee8021QBridgePortVlanTable, ieee8021QBridgeVlanStaticRowStatus=ieee8021QBridgeVlanStaticRowStatus, ieee8021QBridgeStaticUnicastVlanIndex=ieee8021QBridgeStaticUnicastVlanIndex, ieee8021QBridgeCompliances=ieee8021QBridgeCompliances, ieee8021QBridgeVlanStaticEntry=ieee8021QBridgeVlanStaticEntry, ieee8021QBridgeNextFreeLocalVlanTable=ieee8021QBridgeNextFreeLocalVlanTable, ieee8021QBridgeLearningConstraintsTable=ieee8021QBridgeLearningConstraintsTable, ieee8021QBridgeEntry=ieee8021QBridgeEntry)
