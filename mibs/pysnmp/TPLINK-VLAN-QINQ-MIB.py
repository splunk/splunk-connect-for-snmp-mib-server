#
# PySNMP MIB module TPLINK-VLAN-QINQ-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPLINK-VLAN-QINQ-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:18:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, NotificationType, IpAddress, MibIdentifier, Unsigned32, Bits, TimeTicks, iso, Integer32, ObjectIdentity, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "NotificationType", "IpAddress", "MibIdentifier", "Unsigned32", "Bits", "TimeTicks", "iso", "Integer32", "ObjectIdentity", "Gauge32")
TextualConvention, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress")
tplinkMgmt, = mibBuilder.importSymbols("TPLINK-MIB", "tplinkMgmt")
TPRowStatus, = mibBuilder.importSymbols("TPLINK-TC-MIB", "TPRowStatus")
tplinkQinqVlanMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 11863, 6, 17))
tplinkQinqVlanMIB.setRevisions(('2008-12-16 00:00',))
if mibBuilder.loadTexts: tplinkQinqVlanMIB.setLastUpdated('200812160000Z')
if mibBuilder.loadTexts: tplinkQinqVlanMIB.setOrganization('TPLINK')
tplinkQinqVlanMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1))
tplinkQinqVlanMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 17, 2))
vpnConfigVpnMode = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpnConfigVpnMode.setStatus('current')
vpnConfigTpid = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpnConfigTpid.setStatus('current')
vpnConfigUplinkPortTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1, 3), )
if mibBuilder.loadTexts: vpnConfigUplinkPortTable.setStatus('current')
vpnConfigUplinkPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: vpnConfigUplinkPortEntry.setStatus('current')
vpnConfigUplinkPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpnConfigUplinkPortEnable.setStatus('current')
vpnConfigPort = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1, 4))
vpnConfigPortEnableTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1, 4, 1), )
if mibBuilder.loadTexts: vpnConfigPortEnableTable.setStatus('current')
vpnConfigPortEnableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: vpnConfigPortEnableEntry.setStatus('current')
vpnConfigPortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpnConfigPortEnable.setStatus('current')
vpnConfigVlanMapping = MibIdentifier((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1, 5))
vpnConfigVlanMappingMode = MibScalar((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vpnConfigVlanMappingMode.setStatus('current')
vpnConfigVlanMappingTable = MibTable((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1, 5, 2), )
if mibBuilder.loadTexts: vpnConfigVlanMappingTable.setStatus('current')
vpnConfigVlanMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1, 5, 2, 1), ).setIndexNames((0, "TPLINK-VLAN-QINQ-MIB", "vpnConfigVlanMappingCVlan"), (0, "TPLINK-VLAN-QINQ-MIB", "vpnConfigVlanMappingPort"))
if mibBuilder.loadTexts: vpnConfigVlanMappingEntry.setStatus('current')
vpnConfigVlanMappingPort = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1, 5, 2, 1, 1), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vpnConfigVlanMappingPort.setStatus('current')
vpnConfigVlanMappingCVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vpnConfigVlanMappingCVlan.setStatus('current')
vpnConfigVlanMappingSPVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vpnConfigVlanMappingSPVlan.setStatus('current')
vpnConfigVlanMappingDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1, 5, 2, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vpnConfigVlanMappingDesc.setStatus('current')
vpnConfigVlanMappingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11863, 6, 17, 1, 5, 2, 1, 5), TPRowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vpnConfigVlanMappingStatus.setStatus('current')
mibBuilder.exportSymbols("TPLINK-VLAN-QINQ-MIB", tplinkQinqVlanMIBNotifications=tplinkQinqVlanMIBNotifications, vpnConfigPortEnableTable=vpnConfigPortEnableTable, vpnConfigVlanMappingDesc=vpnConfigVlanMappingDesc, vpnConfigPort=vpnConfigPort, vpnConfigVlanMappingCVlan=vpnConfigVlanMappingCVlan, vpnConfigVlanMappingStatus=vpnConfigVlanMappingStatus, vpnConfigVlanMappingEntry=vpnConfigVlanMappingEntry, vpnConfigVlanMappingMode=vpnConfigVlanMappingMode, vpnConfigVpnMode=vpnConfigVpnMode, tplinkQinqVlanMIBObjects=tplinkQinqVlanMIBObjects, vpnConfigUplinkPortEntry=vpnConfigUplinkPortEntry, vpnConfigPortEnableEntry=vpnConfigPortEnableEntry, vpnConfigUplinkPortTable=vpnConfigUplinkPortTable, vpnConfigVlanMapping=vpnConfigVlanMapping, vpnConfigUplinkPortEnable=vpnConfigUplinkPortEnable, tplinkQinqVlanMIB=tplinkQinqVlanMIB, vpnConfigVlanMappingSPVlan=vpnConfigVlanMappingSPVlan, PYSNMP_MODULE_ID=tplinkQinqVlanMIB, vpnConfigTpid=vpnConfigTpid, vpnConfigPortEnable=vpnConfigPortEnable, vpnConfigVlanMappingPort=vpnConfigVlanMappingPort, vpnConfigVlanMappingTable=vpnConfigVlanMappingTable)
