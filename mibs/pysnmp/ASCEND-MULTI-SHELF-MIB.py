#
# PySNMP MIB module ASCEND-MULTI-SHELF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MULTI-SHELF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:13:01 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
multiShelf, = mibBuilder.importSymbols("ASCEND-MIB", "multiShelf")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Counter64, NotificationType, Bits, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, ObjectIdentity, Counter32, ModuleIdentity, MibIdentifier, TimeTicks, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "NotificationType", "Bits", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "ObjectIdentity", "Counter32", "ModuleIdentity", "MibIdentifier", "TimeTicks", "IpAddress", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
myShelfNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 19, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: myShelfNumber.setStatus('mandatory')
myShelfOperation = MibScalar((1, 3, 6, 1, 4, 1, 529, 19, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("slave", 2), ("master", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: myShelfOperation.setStatus('mandatory')
masterShelfNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 19, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: masterShelfNumber.setStatus('mandatory')
multiShelfTableSize = MibScalar((1, 3, 6, 1, 4, 1, 529, 19, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: multiShelfTableSize.setStatus('mandatory')
multiShelfTable = MibTable((1, 3, 6, 1, 4, 1, 529, 19, 5), )
if mibBuilder.loadTexts: multiShelfTable.setStatus('mandatory')
multiShelfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 19, 5, 1), ).setIndexNames((0, "ASCEND-MULTI-SHELF-MIB", "multiShelfIndex"))
if mibBuilder.loadTexts: multiShelfEntry.setStatus('mandatory')
multiShelfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 19, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: multiShelfIndex.setStatus('mandatory')
multiShelfState = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 19, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 1), ("outGoing", 2), ("inComing", 3), ("up", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: multiShelfState.setStatus('mandatory')
multiShelfResentFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 19, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: multiShelfResentFrames.setStatus('mandatory')
multiShelfNLinkUp = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 19, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: multiShelfNLinkUp.setStatus('mandatory')
multiShelfTxQs = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 19, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: multiShelfTxQs.setStatus('mandatory')
multiShelfTxSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 19, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: multiShelfTxSeq.setStatus('mandatory')
multiShelfRxSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 19, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: multiShelfRxSeq.setStatus('mandatory')
multiShelfTimerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 529, 19, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: multiShelfTimerValue.setStatus('mandatory')
multiShelfStateTrapState = MibScalar((1, 3, 6, 1, 4, 1, 529, 19, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: multiShelfStateTrapState.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-MULTI-SHELF-MIB", multiShelfResentFrames=multiShelfResentFrames, myShelfOperation=myShelfOperation, multiShelfTableSize=multiShelfTableSize, multiShelfRxSeq=multiShelfRxSeq, multiShelfTxSeq=multiShelfTxSeq, multiShelfTxQs=multiShelfTxQs, myShelfNumber=myShelfNumber, multiShelfEntry=multiShelfEntry, multiShelfIndex=multiShelfIndex, masterShelfNumber=masterShelfNumber, multiShelfTable=multiShelfTable, multiShelfNLinkUp=multiShelfNLinkUp, multiShelfTimerValue=multiShelfTimerValue, multiShelfState=multiShelfState, multiShelfStateTrapState=multiShelfStateTrapState)
