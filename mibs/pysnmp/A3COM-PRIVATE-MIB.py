#
# PySNMP MIB module A3COM-PRIVATE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-PRIVATE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:53:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, NotificationType, enterprises, Gauge32, MibIdentifier, IpAddress, ObjectIdentity, mgmt, Counter64, iso, Unsigned32, Integer32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "NotificationType", "enterprises", "Gauge32", "MibIdentifier", "IpAddress", "ObjectIdentity", "mgmt", "Counter64", "iso", "Unsigned32", "Integer32", "TimeTicks")
TextualConvention, RowStatus, DisplayString, MacAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "MacAddress", "TruthValue")
a3Com = MibIdentifier((1, 3, 6, 1, 4, 1, 43))
wlan_mib = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35)).setLabel("wlan-mib")
rivet = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 35, 8))
rivet.setRevisions(('2004-04-27 07:55', '2004-09-01 00:00', '2004-10-12 00:00',))
if mibBuilder.loadTexts: rivet.setLastUpdated('200410120000Z')
if mibBuilder.loadTexts: rivet.setOrganization('3COM Networks, Inc')
enterpriseApSys = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35, 8, 1))
enterpriseApLineMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35, 8, 2))
enterpriseApPortMgnt = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35, 8, 3))
enterpriseApFileTransferMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35, 8, 4))
enterpriseApResetMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35, 8, 5))
enterpriseApIpMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35, 8, 6))
enterpriseAPdot11 = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35, 8, 7))
enterpriseApAdmin = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35, 8, 8))
enterpriseApSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35, 8, 9))
enterpriseApRadio = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35, 8, 10))
enterpriseApWebRedirection = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35, 8, 11))
enterpriseApProxyArp = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35, 8, 12))
enterpriseApRogueAp = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35, 8, 13))
apNotificationTrapTree = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35, 8, 100))
swHardwareVer = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swHardwareVer.setStatus('current')
swBootRomVer = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swBootRomVer.setStatus('current')
swOpCodeVer = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swOpCodeVer.setStatus('current')
swSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSerialNumber.setStatus('current')
lineTable = MibTable((1, 3, 6, 1, 4, 1, 43, 35, 8, 2, 1), )
if mibBuilder.loadTexts: lineTable.setStatus('current')
lineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 35, 8, 2, 1, 1), ).setIndexNames((0, "A3COM-PRIVATE-MIB", "lineIndex"))
if mibBuilder.loadTexts: lineEntry.setStatus('current')
lineIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: lineIndex.setStatus('current')
lineDataBits = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lineDataBits.setStatus('current')
lineParity = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(99, 1, 2))).clone(namedValues=NamedValues(("none", 99), ("odd", 1), ("even", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lineParity.setStatus('current')
lineSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lineSpeed.setStatus('current')
lineStopBits = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lineStopBits.setStatus('current')
portTable = MibTable((1, 3, 6, 1, 4, 1, 43, 35, 8, 3, 1), )
if mibBuilder.loadTexts: portTable.setStatus('current')
portEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 35, 8, 3, 1, 1), ).setIndexNames((0, "A3COM-PRIVATE-MIB", "portIndex"))
if mibBuilder.loadTexts: portEntry.setStatus('current')
portIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: portIndex.setStatus('current')
portName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portName.setStatus('current')
portType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("hundredBaseTX", 2), ("hundredBaseFX", 3), ("thousandBaseSX", 4), ("thousandBaseLX", 5), ("thousandBaseT", 6), ("thousandBaseGBIC", 7), ("thousandBaseMiniGBIC", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portType.setStatus('current')
portSpeedDpxCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("reserved", 1), ("halfDuplex10", 2), ("fullDuplex10", 3), ("halfDuplex100", 4), ("fullDuplex100", 5), ("halfDuplex1000", 6), ("fullDuplex1000", 7))).clone('halfDuplex10')).setMaxAccess("readonly")
if mibBuilder.loadTexts: portSpeedDpxCfg.setStatus('current')
portFlowCtrlCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("backPressure", 3), ("dot3xFlowControl", 4))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: portFlowCtrlCfg.setStatus('current')
portCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(99, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("portCap10half", 99), ("portCap10full", 1), ("portCap100half", 2), ("portCap100full", 3), ("portCap1000half", 4), ("portCap1000full", 5), ("reserved6", 6), ("reserved7", 7), ("reserved8", 8), ("reserved9", 9), ("reserved10", 10), ("reserved11", 11), ("reserved12", 12), ("reserved13", 13), ("portCapSym", 14), ("portCapFlowCtrl", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portCapabilities.setStatus('current')
portAutonegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portAutonegotiation.setStatus('current')
portSpeedDpxStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("error", 1), ("halfDuplex10", 2), ("fullDuplex10", 3), ("halfDuplex100", 4), ("fullDuplex100", 5), ("halfDuplex1000", 6), ("fullDuplex1000", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portSpeedDpxStatus.setStatus('current')
portFlowCtrlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("error", 1), ("backPressure", 2), ("dot3xFlowControl", 3), ("none", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portFlowCtrlStatus.setStatus('current')
transferType = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ftp", 1), ("tftp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: transferType.setStatus('current')
fileType = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("application", 1), ("config", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fileType.setStatus('current')
srcFile = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 4, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: srcFile.setStatus('current')
destFile = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 4, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destFile.setStatus('current')
fileServer = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 4, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fileServer.setStatus('current')
userName = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 4, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userName.setStatus('current')
password = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 4, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: password.setStatus('current')
status = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 10, 11, 12, 13, 20, 30))).clone(namedValues=NamedValues(("running", 1), ("success", 2), ("failureGeneric", 3), ("flashOpenError", 10), ("flashMallocError", 11), ("flashReadError", 12), ("flashFtypeError", 13), ("socketWriteError", 20), ("protocolError", 30)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: status.setStatus('current')
transferStart = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 4, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("download", 1), ("upload", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: transferStart.setStatus('current')
restartOpCodeFile = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: restartOpCodeFile.setStatus('current')
restartControl = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("running", 1), ("warmBoot", 2), ("coldBoot", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: restartControl.setStatus('current')
netConfigIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 6, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigIPAddress.setStatus('current')
netConfigSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 6, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigSubnetMask.setStatus('current')
netConfigDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 6, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigDefaultGateway.setStatus('current')
netConfigHttpState = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigHttpState.setStatus('current')
netConfigHttpPort = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 6, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigHttpPort.setStatus('current')
netConfigHttpsState = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 6, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigHttpsState.setStatus('current')
netConfigHttpsPort = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 6, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigHttpsPort.setStatus('current')
netConfigDHCPState = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 6, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netConfigDHCPState.setStatus('current')
dot11AuthenticationEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 5))
dot118021xState = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("supported", 1), ("required", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot118021xState.setStatus('current')
dot118021xBroadcastKeyRefreshRate = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot118021xBroadcastKeyRefreshRate.setStatus('current')
dot118021xSessionKeyRefreshRate = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot118021xSessionKeyRefreshRate.setStatus('current')
dot118021xReauthenticationTimeout = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 5, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot118021xReauthenticationTimeout.setStatus('current')
dot11MACAuthenticationType = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("local", 1), ("radius", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11MACAuthenticationType.setStatus('current')
dot11AuthenticationServerTable = MibTable((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 6), )
if mibBuilder.loadTexts: dot11AuthenticationServerTable.setStatus('current')
dot11AuthenticationServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 6, 1), ).setIndexNames((0, "A3COM-PRIVATE-MIB", "dot11AuthenticationServerIndex"))
if mibBuilder.loadTexts: dot11AuthenticationServerEntry.setStatus('current')
dot11AuthenticationServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 6, 1, 1), Integer32())
if mibBuilder.loadTexts: dot11AuthenticationServerIndex.setStatus('current')
dot11AuthenticationServer = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 6, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11AuthenticationServer.setStatus('current')
dot11AuthenticationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11AuthenticationPort.setStatus('current')
dot11AuthenticationKey = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 6, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11AuthenticationKey.setStatus('current')
dot11AuthenticationRetransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11AuthenticationRetransmit.setStatus('current')
dot11AuthenticationTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11AuthenticationTimeout.setStatus('current')
dot11AuthenticationAcctPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1024, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11AuthenticationAcctPort.setStatus('current')
dot11AuthenticationInterimUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11AuthenticationInterimUpdate.setStatus('current')
dot11Filter = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 7))
dot11FilterDefault = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11FilterDefault.setStatus('current')
dot11FilterTable = MibTable((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 7, 2), )
if mibBuilder.loadTexts: dot11FilterTable.setStatus('current')
dot11FilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 7, 2, 1), ).setIndexNames((0, "A3COM-PRIVATE-MIB", "dot11FilterAddress"))
if mibBuilder.loadTexts: dot11FilterEntry.setStatus('current')
dot11FilterAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 7, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: dot11FilterAddress.setStatus('current')
dot11FilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(30, 31, 32))).clone(namedValues=NamedValues(("allowed", 30), ("denied", 31), ("delete", 32)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot11FilterStatus.setStatus('current')
dot11AuthenticationSupplicantTable = MibTable((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 8), )
if mibBuilder.loadTexts: dot11AuthenticationSupplicantTable.setStatus('current')
dot11AuthenticationSupplicantEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 8, 1), ).setIndexNames((0, "A3COM-PRIVATE-MIB", "dot118021xSuppIndex"))
if mibBuilder.loadTexts: dot11AuthenticationSupplicantEntry.setStatus('current')
dot118021xSuppIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 8, 1, 1), Integer32())
if mibBuilder.loadTexts: dot118021xSuppIndex.setStatus('current')
dot118021xSuppState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot118021xSuppState.setStatus('current')
dot118021xSuppUser = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 8, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot118021xSuppUser.setStatus('current')
dot118021xSuppPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 7, 8, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot118021xSuppPasswd.setStatus('current')
enterpriseApAdminUser = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 8, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApAdminUser.setStatus('current')
enterpriseApAdminPassword = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 8, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(3, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApAdminPassword.setStatus('current')
enterpriseApSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 43, 35, 8, 9, 1), )
if mibBuilder.loadTexts: enterpriseApSecurityTable.setStatus('current')
enterpriseApSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 35, 8, 9, 1, 1), ).setIndexNames((0, "A3COM-PRIVATE-MIB", "enterpriseApSecurityIndex"))
if mibBuilder.loadTexts: enterpriseApSecurityEntry.setStatus('current')
enterpriseApSecurityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 9, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: enterpriseApSecurityIndex.setStatus('current')
enterpriseApSecurityAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("open", 0), ("shared", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityAuthType.setStatus('current')
enterpriseApSecuritySharedKeyLen = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("sixtyFour", 1), ("oneHundredTwentyEight", 2), ("oneHundredFiftyTwo", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: enterpriseApSecuritySharedKeyLen.setStatus('current')
enterpriseApSecurityWPAMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("supported", 0), ("required", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityWPAMode.setStatus('current')
enterpriseApSecurityWPAKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("dot1x", 0), ("presharedkey", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityWPAKeyType.setStatus('current')
enterpriseApSecurityWPACipher = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 9, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("wep", 0), ("tkip", 1), ("aes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityWPACipher.setStatus('current')
enterpriseApSecurityWPAPSKType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 9, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("hex", 0), ("alphanumeric", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityWPAPSKType.setStatus('current')
enterpriseApSecurityWPAPSK = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 9, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityWPAPSK.setStatus('current')
enterpriseApSecurityWEPKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 9, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("hexadecimal", 0), ("alphanumeric", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityWEPKeyType.setStatus('current')
enterpriseApSecurityWEPEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 9, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApSecurityWEPEnabled.setStatus('current')
enterpriseApRadioTable = MibTable((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 1), )
if mibBuilder.loadTexts: enterpriseApRadioTable.setStatus('current')
enterpriseApRadioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 1, 1), ).setIndexNames((0, "A3COM-PRIVATE-MIB", "enterpriseApRadioIndex"))
if mibBuilder.loadTexts: enterpriseApRadioEntry.setStatus('current')
enterpriseApRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: enterpriseApRadioIndex.setStatus('current')
enterpriseApRadioAutoChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioAutoChannel.setStatus('current')
enterpriseApRadioTransmitPower = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("full", 1), ("half", 2), ("middle", 3), ("quarter", 4), ("eighth", 5), ("min", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioTransmitPower.setStatus('current')
enterpriseApRadioTurboMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("invalid", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioTurboMode.setStatus('current')
enterpriseApRadioDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 5, 6, 9, 11, 12, 18, 24, 36, 48, 54, 255))).clone(namedValues=NamedValues(("oneMbps", 1), ("twoMbps", 2), ("fiveAndHalfMbps", 5), ("sixMbps", 6), ("nineMbps", 9), ("elevenMbps", 11), ("twelveMbps", 12), ("eighteenMbps", 18), ("twentyFourMbps", 24), ("thirtySixMbps", 36), ("fourtyEightMbps", 48), ("fiftyFourMbps", 54), ("auto", 255)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioDataRate.setStatus('current')
enterpriseApRadioGMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bOnly", 1), ("gOnly", 2), ("bg", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioGMode.setStatus('current')
enterpriseApRadioAntennaMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("both", 1), ("left", 2), ("right", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApRadioAntennaMode.setStatus('current')
rogueApState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rogueApState.setStatus('current')
rogueApInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 10080))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rogueApInterval.setStatus('current')
rogueApDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rogueApDuration.setStatus('current')
rogueApScanNow = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rogueApScanNow.setStatus('current')
enterpriseApVapRadioTable = MibTable((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 2), )
if mibBuilder.loadTexts: enterpriseApVapRadioTable.setStatus('current')
enterpriseApVapRadioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 2, 1), ).setIndexNames((0, "A3COM-PRIVATE-MIB", "enterpriseApVapRadioIndex"))
if mibBuilder.loadTexts: enterpriseApVapRadioEntry.setStatus('current')
enterpriseApVapRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: enterpriseApVapRadioIndex.setStatus('current')
enterpriseApVapRadioState = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApVapRadioState.setStatus('current')
enterpriseApVapRadioClosedSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApVapRadioClosedSystem.setStatus('current')
enterpriseApVapRadioMaxAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApVapRadioMaxAssoc.setStatus('current')
enterpriseApVapRadioTransmitKey = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApVapRadioTransmitKey.setStatus('current')
enterpriseApVapRadioDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: enterpriseApVapRadioDescription.setStatus('current')
radioWdsTable = MibTable((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 3), )
if mibBuilder.loadTexts: radioWdsTable.setStatus('current')
radioWdsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 3, 1), ).setIndexNames((0, "A3COM-PRIVATE-MIB", "enterpriseApRadioIndex"))
if mibBuilder.loadTexts: radioWdsEntry.setStatus('current')
wdsApRole = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("roleAp", 1), ("roleBridgeMaster", 2), ("roleRepeater", 3), ("roleBridge", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsApRole.setStatus('current')
radioWdsPeerTable = MibTable((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 4), )
if mibBuilder.loadTexts: radioWdsPeerTable.setStatus('current')
radioWdsPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 4, 1), ).setIndexNames((0, "A3COM-PRIVATE-MIB", "enterpriseApRadioIndex"), (0, "A3COM-PRIVATE-MIB", "wdsPeerIndex"))
if mibBuilder.loadTexts: radioWdsPeerEntry.setStatus('current')
wdsPeerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: wdsPeerIndex.setStatus('current')
wdsPeerBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 10, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wdsPeerBssid.setStatus('current')
webRedirectionEnabled = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: webRedirectionEnabled.setStatus('current')
proxyArpEnabled = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: proxyArpEnabled.setStatus('current')
rogueApDetectionTable = MibTable((1, 3, 6, 1, 4, 1, 43, 35, 8, 13, 1), )
if mibBuilder.loadTexts: rogueApDetectionTable.setStatus('current')
rogueApEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 35, 8, 13, 1, 1), ).setIndexNames((0, "A3COM-PRIVATE-MIB", "rogueApIndex"))
if mibBuilder.loadTexts: rogueApEntry.setStatus('current')
rogueApIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128)))
if mibBuilder.loadTexts: rogueApIndex.setStatus('current')
rogueApBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 13, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueApBssid.setStatus('current')
rogueApSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 13, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueApSsid.setStatus('current')
rogueApPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 13, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueApPortNumber.setStatus('current')
rogueApChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 13, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueApChannelNumber.setStatus('current')
rogueApRSSIValue = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 35, 8, 13, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rogueApRSSIValue.setStatus('current')
apNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 1))
apNotificationDot11MacAddr = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 1, 1), MacAddress())
if mibBuilder.loadTexts: apNotificationDot11MacAddr.setStatus('current')
apNotificationDot11Station = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 1, 2), MacAddress())
if mibBuilder.loadTexts: apNotificationDot11Station.setStatus('current')
apNotificationDot11RequestType = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("association", 2), ("reAssociation", 3), ("authentication", 4))))
if mibBuilder.loadTexts: apNotificationDot11RequestType.setStatus('current')
apNotificationDot11ReasonCode = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("invalidModeOrState", 1), ("unAuthenticatedStation", 2), ("internalError", 3), ("outOfSequenceFrame", 4), ("unsupportedAlgorithm", 5), ("invalidFrameLngth", 6), ("wepRequiredOnAP", 7), ("wepNotAllowed", 8), ("challengeTextMismatch", 9))))
if mibBuilder.loadTexts: apNotificationDot11ReasonCode.setStatus('current')
apNotificationDot11IpAddress = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 1, 5), IpAddress())
if mibBuilder.loadTexts: apNotificationDot11IpAddress.setStatus('current')
apNotificationDot11AuthenticatorMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 1, 6), MacAddress())
if mibBuilder.loadTexts: apNotificationDot11AuthenticatorMacAddr.setStatus('current')
apNotificationTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2))
sysSystemUp = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 1))
if mibBuilder.loadTexts: sysSystemUp.setStatus('current')
sysSystemDown = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 2))
if mibBuilder.loadTexts: sysSystemDown.setStatus('current')
sysRadiusServerChanged = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 3))
if mibBuilder.loadTexts: sysRadiusServerChanged.setStatus('current')
dot11StationAssociation = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 4)).setObjects(("A3COM-PRIVATE-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: dot11StationAssociation.setStatus('current')
dot11StationReAssociation = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 5)).setObjects(("A3COM-PRIVATE-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: dot11StationReAssociation.setStatus('current')
dot11StationAuthentication = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 6)).setObjects(("A3COM-PRIVATE-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: dot11StationAuthentication.setStatus('current')
dot11StationRequestFail = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 7)).setObjects(("A3COM-PRIVATE-MIB", "apNotificationDot11Station"), ("A3COM-PRIVATE-MIB", "apNotificationDot11RequestType"), ("A3COM-PRIVATE-MIB", "apNotificationDot11ReasonCode"))
if mibBuilder.loadTexts: dot11StationRequestFail.setStatus('current')
dot11InterfaceAGFail = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 8))
if mibBuilder.loadTexts: dot11InterfaceAGFail.setStatus('current')
dot1xMacAddrAuthSuccess = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 9)).setObjects(("A3COM-PRIVATE-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: dot1xMacAddrAuthSuccess.setStatus('current')
dot1xMacAddrAuthFail = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 10)).setObjects(("A3COM-PRIVATE-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: dot1xMacAddrAuthFail.setStatus('current')
dot1xAuthNotInitiated = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 11)).setObjects(("A3COM-PRIVATE-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: dot1xAuthNotInitiated.setStatus('current')
dot1xAuthSuccess = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 12)).setObjects(("A3COM-PRIVATE-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: dot1xAuthSuccess.setStatus('current')
dot1xAuthFail = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 13)).setObjects(("A3COM-PRIVATE-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: dot1xAuthFail.setStatus('current')
localMacAddrAuthSuccess = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 14)).setObjects(("A3COM-PRIVATE-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: localMacAddrAuthSuccess.setStatus('current')
localMacAddrAuthFail = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 15)).setObjects(("A3COM-PRIVATE-MIB", "apNotificationDot11Station"))
if mibBuilder.loadTexts: localMacAddrAuthFail.setStatus('current')
pppLogonFail = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 16))
if mibBuilder.loadTexts: pppLogonFail.setStatus('current')
iappStationRoamedFrom = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 17)).setObjects(("A3COM-PRIVATE-MIB", "apNotificationDot11Station"), ("A3COM-PRIVATE-MIB", "apNotificationDot11IpAddress"))
if mibBuilder.loadTexts: iappStationRoamedFrom.setStatus('current')
iappStationRoamedTo = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 18)).setObjects(("A3COM-PRIVATE-MIB", "apNotificationDot11Station"), ("A3COM-PRIVATE-MIB", "apNotificationDot11IpAddress"))
if mibBuilder.loadTexts: iappStationRoamedTo.setStatus('current')
iappContextDataSent = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 19)).setObjects(("A3COM-PRIVATE-MIB", "apNotificationDot11Station"), ("A3COM-PRIVATE-MIB", "apNotificationDot11IpAddress"))
if mibBuilder.loadTexts: iappContextDataSent.setStatus('current')
sntpServerFail = NotificationType((1, 3, 6, 1, 4, 1, 43, 35, 8, 100, 2, 20))
if mibBuilder.loadTexts: sntpServerFail.setStatus('current')
mibBuilder.exportSymbols("A3COM-PRIVATE-MIB", apNotificationDot11ReasonCode=apNotificationDot11ReasonCode, rogueApScanNow=rogueApScanNow, transferStart=transferStart, dot11AuthenticationRetransmit=dot11AuthenticationRetransmit, netConfigDefaultGateway=netConfigDefaultGateway, enterpriseApRadioAutoChannel=enterpriseApRadioAutoChannel, lineParity=lineParity, localMacAddrAuthFail=localMacAddrAuthFail, srcFile=srcFile, rogueApSsid=rogueApSsid, enterpriseApSecurityTable=enterpriseApSecurityTable, apNotificationDot11IpAddress=apNotificationDot11IpAddress, enterpriseApRadioGMode=enterpriseApRadioGMode, dot11FilterAddress=dot11FilterAddress, enterpriseApIpMgt=enterpriseApIpMgt, enterpriseApSecurityWEPEnabled=enterpriseApSecurityWEPEnabled, enterpriseApSecurityWPAPSK=enterpriseApSecurityWPAPSK, dot118021xSuppPasswd=dot118021xSuppPasswd, rogueApDuration=rogueApDuration, rogueApEntry=rogueApEntry, rogueApIndex=rogueApIndex, dot11StationRequestFail=dot11StationRequestFail, sysSystemUp=sysSystemUp, enterpriseApRadioEntry=enterpriseApRadioEntry, radioWdsPeerTable=radioWdsPeerTable, dot11AuthenticationInterimUpdate=dot11AuthenticationInterimUpdate, proxyArpEnabled=proxyArpEnabled, enterpriseApRadioTransmitPower=enterpriseApRadioTransmitPower, portSpeedDpxCfg=portSpeedDpxCfg, enterpriseApSecurityAuthType=enterpriseApSecurityAuthType, rogueApDetectionTable=rogueApDetectionTable, dot1xMacAddrAuthSuccess=dot1xMacAddrAuthSuccess, enterpriseApVapRadioTable=enterpriseApVapRadioTable, enterpriseApSecurityWEPKeyType=enterpriseApSecurityWEPKeyType, enterpriseApSecurity=enterpriseApSecurity, enterpriseApRadioTable=enterpriseApRadioTable, enterpriseApVapRadioEntry=enterpriseApVapRadioEntry, portTable=portTable, dot1xAuthNotInitiated=dot1xAuthNotInitiated, dot11Filter=dot11Filter, enterpriseApSecurityWPACipher=enterpriseApSecurityWPACipher, dot1xAuthFail=dot1xAuthFail, dot11AuthenticationKey=dot11AuthenticationKey, swHardwareVer=swHardwareVer, dot118021xState=dot118021xState, wdsPeerBssid=wdsPeerBssid, rogueApBssid=rogueApBssid, netConfigHttpsState=netConfigHttpsState, enterpriseApRadioTurboMode=enterpriseApRadioTurboMode, dot11StationAuthentication=dot11StationAuthentication, lineSpeed=lineSpeed, wlan_mib=wlan_mib, apNotificationDot11AuthenticatorMacAddr=apNotificationDot11AuthenticatorMacAddr, enterpriseApSecurityWPAPSKType=enterpriseApSecurityWPAPSKType, enterpriseApSecurityWPAKeyType=enterpriseApSecurityWPAKeyType, dot11StationReAssociation=dot11StationReAssociation, enterpriseApVapRadioDescription=enterpriseApVapRadioDescription, iappStationRoamedTo=iappStationRoamedTo, password=password, enterpriseAPdot11=enterpriseAPdot11, rogueApChannelNumber=rogueApChannelNumber, radioWdsEntry=radioWdsEntry, wdsPeerIndex=wdsPeerIndex, wdsApRole=wdsApRole, radioWdsPeerEntry=radioWdsPeerEntry, portFlowCtrlStatus=portFlowCtrlStatus, dot11AuthenticationSupplicantEntry=dot11AuthenticationSupplicantEntry, enterpriseApPortMgnt=enterpriseApPortMgnt, localMacAddrAuthSuccess=localMacAddrAuthSuccess, enterpriseApProxyArp=enterpriseApProxyArp, enterpriseApRadioIndex=enterpriseApRadioIndex, apNotificationTrapTree=apNotificationTrapTree, enterpriseApFileTransferMgt=enterpriseApFileTransferMgt, iappStationRoamedFrom=iappStationRoamedFrom, swBootRomVer=swBootRomVer, dot11FilterTable=dot11FilterTable, swOpCodeVer=swOpCodeVer, netConfigDHCPState=netConfigDHCPState, dot118021xSessionKeyRefreshRate=dot118021xSessionKeyRefreshRate, pppLogonFail=pppLogonFail, dot1xAuthSuccess=dot1xAuthSuccess, restartOpCodeFile=restartOpCodeFile, dot118021xReauthenticationTimeout=dot118021xReauthenticationTimeout, enterpriseApRadioDataRate=enterpriseApRadioDataRate, apNotificationDot11Station=apNotificationDot11Station, destFile=destFile, dot11FilterStatus=dot11FilterStatus, lineEntry=lineEntry, a3Com=a3Com, dot11AuthenticationPort=dot11AuthenticationPort, fileType=fileType, netConfigSubnetMask=netConfigSubnetMask, enterpriseApSecurityEntry=enterpriseApSecurityEntry, enterpriseApAdminUser=enterpriseApAdminUser, enterpriseApRogueAp=enterpriseApRogueAp, dot11AuthenticationTimeout=dot11AuthenticationTimeout, userName=userName, enterpriseApResetMgt=enterpriseApResetMgt, apNotificationObjects=apNotificationObjects, rivet=rivet, radioWdsTable=radioWdsTable, sysSystemDown=sysSystemDown, enterpriseApSecurityWPAMode=enterpriseApSecurityWPAMode, enterpriseApAdminPassword=enterpriseApAdminPassword, enterpriseApWebRedirection=enterpriseApWebRedirection, portEntry=portEntry, dot11AuthenticationAcctPort=dot11AuthenticationAcctPort, dot1xMacAddrAuthFail=dot1xMacAddrAuthFail, iappContextDataSent=iappContextDataSent, dot11AuthenticationServer=dot11AuthenticationServer, portName=portName, netConfigHttpsPort=netConfigHttpsPort, portFlowCtrlCfg=portFlowCtrlCfg, rogueApState=rogueApState, dot118021xSuppIndex=dot118021xSuppIndex, lineStopBits=lineStopBits, sysRadiusServerChanged=sysRadiusServerChanged, portIndex=portIndex, lineTable=lineTable, portSpeedDpxStatus=portSpeedDpxStatus, enterpriseApAdmin=enterpriseApAdmin, enterpriseApVapRadioMaxAssoc=enterpriseApVapRadioMaxAssoc, enterpriseApVapRadioState=enterpriseApVapRadioState, enterpriseApSys=enterpriseApSys, netConfigHttpPort=netConfigHttpPort, dot118021xBroadcastKeyRefreshRate=dot118021xBroadcastKeyRefreshRate, dot11AuthenticationEntry=dot11AuthenticationEntry, dot11FilterDefault=dot11FilterDefault, rogueApRSSIValue=rogueApRSSIValue, enterpriseApRadio=enterpriseApRadio, webRedirectionEnabled=webRedirectionEnabled, apNotificationDot11MacAddr=apNotificationDot11MacAddr, dot11InterfaceAGFail=dot11InterfaceAGFail, transferType=transferType, apNotificationTrapObjects=apNotificationTrapObjects, swSerialNumber=swSerialNumber, status=status, dot118021xSuppState=dot118021xSuppState, dot11AuthenticationSupplicantTable=dot11AuthenticationSupplicantTable, enterpriseApVapRadioIndex=enterpriseApVapRadioIndex, dot11AuthenticationServerTable=dot11AuthenticationServerTable, dot11AuthenticationServerIndex=dot11AuthenticationServerIndex, rogueApPortNumber=rogueApPortNumber, portCapabilities=portCapabilities, dot118021xSuppUser=dot118021xSuppUser, lineIndex=lineIndex, enterpriseApSecuritySharedKeyLen=enterpriseApSecuritySharedKeyLen, PYSNMP_MODULE_ID=rivet, netConfigIPAddress=netConfigIPAddress, netConfigHttpState=netConfigHttpState, lineDataBits=lineDataBits, enterpriseApRadioAntennaMode=enterpriseApRadioAntennaMode, enterpriseApVapRadioTransmitKey=enterpriseApVapRadioTransmitKey, dot11MACAuthenticationType=dot11MACAuthenticationType, dot11FilterEntry=dot11FilterEntry, restartControl=restartControl, enterpriseApLineMgnt=enterpriseApLineMgnt, dot11StationAssociation=dot11StationAssociation, portType=portType, rogueApInterval=rogueApInterval, enterpriseApSecurityIndex=enterpriseApSecurityIndex, dot11AuthenticationServerEntry=dot11AuthenticationServerEntry, portAutonegotiation=portAutonegotiation, enterpriseApVapRadioClosedSystem=enterpriseApVapRadioClosedSystem, sntpServerFail=sntpServerFail, fileServer=fileServer, apNotificationDot11RequestType=apNotificationDot11RequestType)
