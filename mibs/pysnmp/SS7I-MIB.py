#
# PySNMP MIB module SS7I-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SS7I-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:02:48 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter64, ModuleIdentity, NotificationType, Counter32, ObjectIdentity, iso, Unsigned32, enterprises, Integer32, MibIdentifier, Gauge32, experimental, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter64", "ModuleIdentity", "NotificationType", "Counter32", "ObjectIdentity", "iso", "Unsigned32", "enterprises", "Integer32", "MibIdentifier", "Gauge32", "experimental", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
usr = MibIdentifier((1, 3, 6, 1, 4, 1, 429))
nas = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1))
ss7i = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 35))
ss7iCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 35, 1))
ss7iCfgTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 35, 1, 1), )
if mibBuilder.loadTexts: ss7iCfgTable.setStatus('mandatory')
ss7iCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 35, 1, 1, 1), ).setIndexNames((0, "SS7I-MIB", "ss7iCfgIndex"))
if mibBuilder.loadTexts: ss7iCfgEntry.setStatus('mandatory')
ss7iCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iCfgIndex.setStatus('mandatory')
ss7iCfgIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 1, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCfgIpAddr.setStatus('mandatory')
ss7iCfgNetmask = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCfgNetmask.setStatus('mandatory')
ss7iCfgDfltGwIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 1, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCfgDfltGwIpAddr.setStatus('mandatory')
ss7iCfgProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("slapV2", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCfgProtocol.setStatus('mandatory')
ss7iCfgGwConnStartMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lsAuto", 1), ("lsManual", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCfgGwConnStartMethod.setStatus('mandatory')
ss7iCfgGwIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 1, 1, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCfgGwIpAddr.setStatus('mandatory')
ss7iCfgGwPort = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 1, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCfgGwPort.setStatus('mandatory')
ss7iCfgSecGwIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 1, 1, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCfgSecGwIpAddr.setStatus('mandatory')
ss7iCfgSecGwPort = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 1, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCfgSecGwPort.setStatus('mandatory')
ss7iCfgHrtbtTimerNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 86400000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCfgHrtbtTimerNearEnd.setStatus('mandatory')
ss7iCfgHrtbtTimerFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 86400000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCfgHrtbtTimerFarEnd.setStatus('mandatory')
ss7iCfgChassisId = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 1, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCfgChassisId.setStatus('mandatory')
ss7iCfgGwConnRetryCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 1, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCfgGwConnRetryCnt.setStatus('mandatory')
ss7iCfgGwConnRetryIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 1, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCfgGwConnRetryIntvl.setStatus('mandatory')
ss7iCfgGwMssdHrtbtThrsh = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 1, 1, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCfgGwMssdHrtbtThrsh.setStatus('mandatory')
ss7iCmd = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 35, 2))
ss7iCmdTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 35, 2, 1), )
if mibBuilder.loadTexts: ss7iCmdTable.setStatus('mandatory')
ss7iCmdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 35, 2, 1, 1), ).setIndexNames((0, "SS7I-MIB", "ss7iCmdIndex"))
if mibBuilder.loadTexts: ss7iCmdEntry.setStatus('mandatory')
ss7iCmdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iCmdIndex.setStatus('mandatory')
ss7iCmdMgtStationId = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 2, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCmdMgtStationId.setStatus('mandatory')
ss7iCmdReqId = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iCmdReqId.setStatus('mandatory')
ss7iCmdFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("noCommand", 1), ("saveToNVRAM", 2), ("restoreFromNVRAM", 3), ("restoreFromDefault", 4), ("softwareReset", 5), ("startSS7GwConn", 6), ("shutDownSS7GwConn", 7), ("resetSS7Counters", 8), ("resetPbusCounters", 9), ("startPbusConnToAll", 10), ("stopPbusConnToAll", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCmdFunction.setStatus('mandatory')
ss7iCmdForce = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("force", 1), ("noForce", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCmdForce.setStatus('mandatory')
ss7iCmdParam = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 2, 1, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iCmdParam.setStatus('mandatory')
ss7iCmdResult = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("success", 2), ("inProgress", 3), ("notSupported", 4), ("unAbleToRun", 5), ("aborted", 6), ("failed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iCmdResult.setStatus('mandatory')
ss7iCmdCode = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6, 8, 12, 20, 22, 25, 58, 73))).clone(namedValues=NamedValues(("noError", 1), ("unable", 2), ("unrecognizedCommand", 6), ("slotEmpty", 8), ("noResponse", 12), ("unsupportedCommand", 20), ("deviceDisabled", 22), ("testFailed", 25), ("userInterfaceActive", 58), ("pendingSoftwareDownload", 73)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iCmdCode.setStatus('mandatory')
ss7iTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 35, 3))
ss7iTrapTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 35, 3, 1), )
if mibBuilder.loadTexts: ss7iTrapTable.setStatus('mandatory')
ss7iTrapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 35, 3, 1, 1), ).setIndexNames((0, "SS7I-MIB", "ss7iTrapIndex"))
if mibBuilder.loadTexts: ss7iTrapEntry.setStatus('mandatory')
ss7iTrapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iTrapIndex.setStatus('mandatory')
ss7iTrapPbusLinkUp = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iTrapPbusLinkUp.setStatus('mandatory')
ss7iTrapPbusLinkDown = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iTrapPbusLinkDown.setStatus('mandatory')
ss7iTrapGwConnUp = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iTrapGwConnUp.setStatus('mandatory')
ss7iTrapGwConnDown = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enableTrap", 1), ("disableAll", 2), ("enableLog", 3), ("enableAll", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iTrapGwConnDown.setStatus('mandatory')
ss7iStat = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 35, 4))
ss7iStatTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 35, 4, 1), )
if mibBuilder.loadTexts: ss7iStatTable.setStatus('mandatory')
ss7iStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 35, 4, 1, 1), ).setIndexNames((0, "SS7I-MIB", "ss7iStatIndex"))
if mibBuilder.loadTexts: ss7iStatEntry.setStatus('mandatory')
ss7iStatIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iStatIndex.setStatus('mandatory')
ss7iStatGwConnStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iStatGwConnStatus.setStatus('mandatory')
ss7iStatGwNumMsgsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iStatGwNumMsgsRcvd.setStatus('mandatory')
ss7iStatGwNumBytesRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iStatGwNumBytesRcvd.setStatus('mandatory')
ss7iStatGwNumMsgsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iStatGwNumMsgsSent.setStatus('mandatory')
ss7iStatGwNumBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 4, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iStatGwNumBytesSent.setStatus('mandatory')
ss7iStatGwMssdHrtbtCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 4, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iStatGwMssdHrtbtCnt.setStatus('mandatory')
ss7iStatGwLinkLostCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 4, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iStatGwLinkLostCnt.setStatus('mandatory')
ss7iStatGwLinkErrCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 4, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iStatGwLinkErrCnt.setStatus('mandatory')
ss7iStatGwLinkDownCause = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("heartbeatTimeout", 2), ("socketSndRcvError", 3), ("physicalLinkSevered", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iStatGwLinkDownCause.setStatus('mandatory')
ss7iHdm = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 35, 5))
ss7iHdmTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 35, 5, 1), )
if mibBuilder.loadTexts: ss7iHdmTable.setStatus('mandatory')
ss7iHdmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 35, 5, 1, 1), ).setIndexNames((0, "SS7I-MIB", "ss7iHdmIndex"), (0, "SS7I-MIB", "ss7iHdmIndex2"))
if mibBuilder.loadTexts: ss7iHdmEntry.setStatus('mandatory')
ss7iHdmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iHdmIndex.setStatus('mandatory')
ss7iHdmIndex2 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iHdmIndex2.setStatus('mandatory')
ss7iHdmConnState = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("closed", 1), ("opening", 2), ("opened", 3), ("configuring", 4), ("ready", 5), ("closing", 6), ("loopback", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iHdmConnState.setStatus('mandatory')
ss7iHdmSndPktsOkCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 5, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iHdmSndPktsOkCnt.setStatus('mandatory')
ss7iHdmSndPktsFailCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 5, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iHdmSndPktsFailCnt.setStatus('mandatory')
ss7iHdmRcvPktsOkCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 5, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iHdmRcvPktsOkCnt.setStatus('mandatory')
ss7iHdmRcvPktsFailCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 5, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iHdmRcvPktsFailCnt.setStatus('mandatory')
ss7iHdmLinkDownCause = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("missingHdm", 2), ("ss7GwLinkDown", 3), ("pbusSndRcvError", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iHdmLinkDownCause.setStatus('mandatory')
ss7iSigPb = MibIdentifier((1, 3, 6, 1, 4, 1, 429, 1, 35, 6))
ss7iSigPbTable = MibTable((1, 3, 6, 1, 4, 1, 429, 1, 35, 6, 1), )
if mibBuilder.loadTexts: ss7iSigPbTable.setStatus('mandatory')
ss7iSigPbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 429, 1, 35, 6, 1, 1), ).setIndexNames((0, "SS7I-MIB", "ss7iSigPbIndex"), (0, "SS7I-MIB", "ss7iSigPbIndex2"))
if mibBuilder.loadTexts: ss7iSigPbEntry.setStatus('mandatory')
ss7iSigPbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 6, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iSigPbIndex.setStatus('mandatory')
ss7iSigPbIndex2 = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 6, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss7iSigPbIndex2.setStatus('mandatory')
ss7iSigPbConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iSigPbConnection.setStatus('mandatory')
ss7iSigPbLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 429, 1, 35, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ss7iSigPbLoopback.setStatus('mandatory')
mibBuilder.exportSymbols("SS7I-MIB", ss7iCfgHrtbtTimerFarEnd=ss7iCfgHrtbtTimerFarEnd, ss7iCmdMgtStationId=ss7iCmdMgtStationId, ss7iCfgTable=ss7iCfgTable, ss7iCfgHrtbtTimerNearEnd=ss7iCfgHrtbtTimerNearEnd, ss7iTrapPbusLinkDown=ss7iTrapPbusLinkDown, ss7iStat=ss7iStat, ss7iTrapGwConnDown=ss7iTrapGwConnDown, ss7iStatTable=ss7iStatTable, ss7iHdmSndPktsFailCnt=ss7iHdmSndPktsFailCnt, ss7iSigPbConnection=ss7iSigPbConnection, ss7iCmdReqId=ss7iCmdReqId, ss7iCfgSecGwPort=ss7iCfgSecGwPort, ss7iCfgChassisId=ss7iCfgChassisId, ss7iHdmConnState=ss7iHdmConnState, ss7iStatGwNumBytesRcvd=ss7iStatGwNumBytesRcvd, ss7iHdmIndex2=ss7iHdmIndex2, ss7iStatGwConnStatus=ss7iStatGwConnStatus, nas=nas, ss7iStatIndex=ss7iStatIndex, ss7iCfgIpAddr=ss7iCfgIpAddr, ss7iCmdCode=ss7iCmdCode, ss7iHdmEntry=ss7iHdmEntry, ss7iTrapPbusLinkUp=ss7iTrapPbusLinkUp, ss7iCfg=ss7iCfg, ss7iCfgGwPort=ss7iCfgGwPort, ss7iCfgGwConnRetryCnt=ss7iCfgGwConnRetryCnt, ss7iCfgSecGwIpAddr=ss7iCfgSecGwIpAddr, ss7iCmdParam=ss7iCmdParam, ss7iCmd=ss7iCmd, ss7iTrapTable=ss7iTrapTable, ss7iTrapGwConnUp=ss7iTrapGwConnUp, ss7iCfgNetmask=ss7iCfgNetmask, ss7iHdmTable=ss7iHdmTable, ss7iStatEntry=ss7iStatEntry, ss7iHdm=ss7iHdm, ss7iCmdEntry=ss7iCmdEntry, ss7iCmdResult=ss7iCmdResult, ss7iSigPbEntry=ss7iSigPbEntry, ss7iCfgGwIpAddr=ss7iCfgGwIpAddr, ss7iSigPb=ss7iSigPb, ss7i=ss7i, ss7iCmdFunction=ss7iCmdFunction, ss7iSigPbTable=ss7iSigPbTable, ss7iHdmRcvPktsFailCnt=ss7iHdmRcvPktsFailCnt, ss7iSigPbIndex=ss7iSigPbIndex, ss7iCfgEntry=ss7iCfgEntry, ss7iCfgGwConnStartMethod=ss7iCfgGwConnStartMethod, ss7iHdmRcvPktsOkCnt=ss7iHdmRcvPktsOkCnt, ss7iSigPbLoopback=ss7iSigPbLoopback, ss7iCmdTable=ss7iCmdTable, ss7iSigPbIndex2=ss7iSigPbIndex2, ss7iHdmSndPktsOkCnt=ss7iHdmSndPktsOkCnt, ss7iStatGwMssdHrtbtCnt=ss7iStatGwMssdHrtbtCnt, ss7iCfgIndex=ss7iCfgIndex, ss7iCmdIndex=ss7iCmdIndex, ss7iStatGwNumBytesSent=ss7iStatGwNumBytesSent, ss7iStatGwNumMsgsRcvd=ss7iStatGwNumMsgsRcvd, ss7iStatGwLinkLostCnt=ss7iStatGwLinkLostCnt, ss7iStatGwLinkDownCause=ss7iStatGwLinkDownCause, ss7iTrap=ss7iTrap, ss7iCfgGwMssdHrtbtThrsh=ss7iCfgGwMssdHrtbtThrsh, ss7iHdmLinkDownCause=ss7iHdmLinkDownCause, ss7iCfgGwConnRetryIntvl=ss7iCfgGwConnRetryIntvl, ss7iCmdForce=ss7iCmdForce, ss7iStatGwLinkErrCnt=ss7iStatGwLinkErrCnt, ss7iStatGwNumMsgsSent=ss7iStatGwNumMsgsSent, ss7iCfgDfltGwIpAddr=ss7iCfgDfltGwIpAddr, ss7iHdmIndex=ss7iHdmIndex, ss7iTrapIndex=ss7iTrapIndex, ss7iTrapEntry=ss7iTrapEntry, ss7iCfgProtocol=ss7iCfgProtocol, usr=usr)
