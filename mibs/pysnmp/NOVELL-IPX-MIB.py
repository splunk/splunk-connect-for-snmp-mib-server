#
# PySNMP MIB module NOVELL-IPX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NOVELL-IPX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:14:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Integer32, Unsigned32, IpAddress, Bits, TimeTicks, Counter64, iso, ModuleIdentity, ObjectIdentity, NotificationType, Counter32, Gauge32, enterprises, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Integer32", "Unsigned32", "IpAddress", "Bits", "TimeTicks", "Counter64", "iso", "ModuleIdentity", "ObjectIdentity", "NotificationType", "Counter32", "Gauge32", "enterprises", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "PhysAddress")
novellMib = MibIdentifier((1, 3, 6, 1, 4, 1, 23))
mibDoc = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2))
ipx = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 5))
ipxSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 5, 1))
ipxCircuit = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 5, 2))
ipxForwarding = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 5, 3))
ipxServices = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 5, 4))
ipxTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 23, 2, 5, 5))
class NetNumber(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

ipxBasicSysTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1), )
if mibBuilder.loadTexts: ipxBasicSysTable.setStatus('mandatory')
ipxBasicSysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1), ).setIndexNames((0, "NOVELL-IPX-MIB", "ipxBasicSysInstance"))
if mibBuilder.loadTexts: ipxBasicSysEntry.setStatus('mandatory')
ipxBasicSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxBasicSysInstance.setStatus('mandatory')
ipxBasicSysExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxBasicSysExistState.setStatus('mandatory')
ipxBasicSysNetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 3), NetNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxBasicSysNetNumber.setStatus('mandatory')
ipxBasicSysNode = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxBasicSysNode.setStatus('mandatory')
ipxBasicSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxBasicSysName.setStatus('mandatory')
ipxBasicSysInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxBasicSysInReceives.setStatus('mandatory')
ipxBasicSysInHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxBasicSysInHdrErrors.setStatus('mandatory')
ipxBasicSysInUnknownSockets = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxBasicSysInUnknownSockets.setStatus('mandatory')
ipxBasicSysInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxBasicSysInDiscards.setStatus('mandatory')
ipxBasicSysInBadChecksums = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxBasicSysInBadChecksums.setStatus('mandatory')
ipxBasicSysInDelivers = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxBasicSysInDelivers.setStatus('mandatory')
ipxBasicSysNoRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxBasicSysNoRoutes.setStatus('mandatory')
ipxBasicSysOutRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxBasicSysOutRequests.setStatus('mandatory')
ipxBasicSysOutMalformedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxBasicSysOutMalformedRequests.setStatus('mandatory')
ipxBasicSysOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxBasicSysOutDiscards.setStatus('mandatory')
ipxBasicSysOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxBasicSysOutPackets.setStatus('mandatory')
ipxBasicSysConfigSockets = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxBasicSysConfigSockets.setStatus('mandatory')
ipxBasicSysOpenSocketFails = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxBasicSysOpenSocketFails.setStatus('mandatory')
ipxAdvSysTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2), )
if mibBuilder.loadTexts: ipxAdvSysTable.setStatus('mandatory')
ipxAdvSysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1), ).setIndexNames((0, "NOVELL-IPX-MIB", "ipxAdvSysInstance"))
if mibBuilder.loadTexts: ipxAdvSysEntry.setStatus('mandatory')
ipxAdvSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAdvSysInstance.setStatus('mandatory')
ipxAdvSysMaxPathSplits = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAdvSysMaxPathSplits.setStatus('mandatory')
ipxAdvSysMaxHops = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 3), Integer32().clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxAdvSysMaxHops.setStatus('mandatory')
ipxAdvSysInTooManyHops = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxAdvSysInTooManyHops.setStatus('mandatory')
ipxAdvSysInFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxAdvSysInFiltered.setStatus('mandatory')
ipxAdvSysInCompressDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxAdvSysInCompressDiscards.setStatus('mandatory')
ipxAdvSysNETBIOSPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxAdvSysNETBIOSPackets.setStatus('mandatory')
ipxAdvSysForwPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxAdvSysForwPackets.setStatus('mandatory')
ipxAdvSysOutFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxAdvSysOutFiltered.setStatus('mandatory')
ipxAdvSysOutCompressDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxAdvSysOutCompressDiscards.setStatus('mandatory')
ipxAdvSysCircCount = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxAdvSysCircCount.setStatus('mandatory')
ipxAdvSysDestCount = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxAdvSysDestCount.setStatus('mandatory')
ipxAdvSysServCount = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 1, 2, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxAdvSysServCount.setStatus('mandatory')
ipxCircTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1), )
if mibBuilder.loadTexts: ipxCircTable.setStatus('mandatory')
ipxCircEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1), ).setIndexNames((0, "NOVELL-IPX-MIB", "ipxCircSysInstance"), (0, "NOVELL-IPX-MIB", "ipxCircIndex"))
if mibBuilder.loadTexts: ipxCircEntry.setStatus('mandatory')
ipxCircSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircSysInstance.setStatus('mandatory')
ipxCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircIndex.setStatus('mandatory')
ipxCircExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircExistState.setStatus('mandatory')
ipxCircOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("down", 1), ("up", 2), ("sleeping", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircOperState.setStatus('mandatory')
ipxCircIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircIfIndex.setStatus('mandatory')
ipxCircName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircName.setStatus('mandatory')
ipxCircType = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("broadcast", 2), ("ptToPt", 3), ("wanRIP", 4), ("unnumberedRIP", 5), ("dynamic", 6), ("wanWS", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircType.setStatus('mandatory')
ipxCircDialName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircDialName.setStatus('mandatory')
ipxCircLocalMaxPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircLocalMaxPacketSize.setStatus('mandatory')
ipxCircCompressState = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircCompressState.setStatus('mandatory')
ipxCircCompressSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 11), Integer32().clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircCompressSlots.setStatus('mandatory')
ipxCircStaticStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("currentt", 2), ("changed", 3), ("read", 4), ("reading", 5), ("write", 6), ("writing", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircStaticStatus.setStatus('mandatory')
ipxCircCompressedSent = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircCompressedSent.setStatus('mandatory')
ipxCircCompressedInitSent = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircCompressedInitSent.setStatus('mandatory')
ipxCircCompressedRejectsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircCompressedRejectsSent.setStatus('mandatory')
ipxCircUncompressedSent = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircUncompressedSent.setStatus('mandatory')
ipxCircCompressedReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircCompressedReceived.setStatus('mandatory')
ipxCircCompressedInitReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircCompressedInitReceived.setStatus('mandatory')
ipxCircCompressedRejectsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircCompressedRejectsReceived.setStatus('mandatory')
ipxCircUncompressedReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircUncompressedReceived.setStatus('mandatory')
ipxCircMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircMediaType.setStatus('mandatory')
ipxCircNetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 22), NetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircNetNumber.setStatus('mandatory')
ipxCircStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircStateChanges.setStatus('mandatory')
ipxCircInitFails = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircInitFails.setStatus('mandatory')
ipxCircDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircDelay.setStatus('mandatory')
ipxCircThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircThroughput.setStatus('mandatory')
ipxCircNeighRouterName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 27), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircNeighRouterName.setStatus('mandatory')
ipxCircNeighInternalNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 2, 1, 1, 28), NetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircNeighInternalNetNum.setStatus('mandatory')
ipxDestTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1), )
if mibBuilder.loadTexts: ipxDestTable.setStatus('mandatory')
ipxDestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1, 1), ).setIndexNames((0, "NOVELL-IPX-MIB", "ipxDestSysInstance"), (0, "NOVELL-IPX-MIB", "ipxDestNetNum"))
if mibBuilder.loadTexts: ipxDestEntry.setStatus('mandatory')
ipxDestSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDestSysInstance.setStatus('mandatory')
ipxDestNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1, 1, 2), NetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDestNetNum.setStatus('mandatory')
ipxDestProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("rip", 3), ("nlsp", 4), ("static", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDestProtocol.setStatus('mandatory')
ipxDestTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDestTicks.setStatus('mandatory')
ipxDestHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDestHopCount.setStatus('mandatory')
ipxDestNextHopCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDestNextHopCircIndex.setStatus('mandatory')
ipxDestNextHopNICAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1, 1, 7), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDestNextHopNICAddress.setStatus('mandatory')
ipxDestNextHopNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 1, 1, 8), NetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDestNextHopNetNum.setStatus('mandatory')
ipxStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 2), )
if mibBuilder.loadTexts: ipxStaticRouteTable.setStatus('mandatory')
ipxStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 2, 1), ).setIndexNames((0, "NOVELL-IPX-MIB", "ipxStaticRouteSysInstance"), (0, "NOVELL-IPX-MIB", "ipxStaticRouteCircIndex"), (0, "NOVELL-IPX-MIB", "ipxStaticRouteNetNum"))
if mibBuilder.loadTexts: ipxStaticRouteEntry.setStatus('mandatory')
ipxStaticRouteSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 2, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxStaticRouteSysInstance.setStatus('mandatory')
ipxStaticRouteCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxStaticRouteCircIndex.setStatus('mandatory')
ipxStaticRouteNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 2, 1, 3), NetNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxStaticRouteNetNum.setStatus('mandatory')
ipxStaticRouteExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxStaticRouteExistState.setStatus('mandatory')
ipxStaticRouteTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxStaticRouteTicks.setStatus('mandatory')
ipxStaticRouteHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 3, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxStaticRouteHopCount.setStatus('mandatory')
ipxServTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 1), )
if mibBuilder.loadTexts: ipxServTable.setStatus('mandatory')
ipxServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 1, 1), ).setIndexNames((0, "NOVELL-IPX-MIB", "ipxServSysInstance"), (0, "NOVELL-IPX-MIB", "ipxServType"), (0, "NOVELL-IPX-MIB", "ipxServName"))
if mibBuilder.loadTexts: ipxServEntry.setStatus('mandatory')
ipxServSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxServSysInstance.setStatus('mandatory')
ipxServType = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxServType.setStatus('mandatory')
ipxServName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxServName.setStatus('mandatory')
ipxServProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("nlsp", 4), ("static", 5), ("sap", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxServProtocol.setStatus('mandatory')
ipxServNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 1, 1, 5), NetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxServNetNum.setStatus('mandatory')
ipxServNode = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxServNode.setStatus('mandatory')
ipxServSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxServSocket.setStatus('mandatory')
ipxServHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxServHopCount.setStatus('mandatory')
ipxDestServTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 2), )
if mibBuilder.loadTexts: ipxDestServTable.setStatus('mandatory')
ipxDestServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 2, 1), ).setIndexNames((0, "NOVELL-IPX-MIB", "ipxDestServSysInstance"), (0, "NOVELL-IPX-MIB", "ipxDestServNetNum"), (0, "NOVELL-IPX-MIB", "ipxDestServNode"), (0, "NOVELL-IPX-MIB", "ipxDestServSocket"), (0, "NOVELL-IPX-MIB", "ipxDestServName"), (0, "NOVELL-IPX-MIB", "ipxDestServType"))
if mibBuilder.loadTexts: ipxDestServEntry.setStatus('mandatory')
ipxDestServSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDestServSysInstance.setStatus('mandatory')
ipxDestServNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 2, 1, 2), NetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDestServNetNum.setStatus('mandatory')
ipxDestServNode = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDestServNode.setStatus('mandatory')
ipxDestServSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDestServSocket.setStatus('mandatory')
ipxDestServName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDestServName.setStatus('mandatory')
ipxDestServType = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDestServType.setStatus('mandatory')
ipxDestServProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("nlsp", 4), ("static", 5), ("sap", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDestServProtocol.setStatus('mandatory')
ipxDestServHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDestServHopCount.setStatus('mandatory')
ipxStaticServTable = MibTable((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 3), )
if mibBuilder.loadTexts: ipxStaticServTable.setStatus('mandatory')
ipxStaticServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 3, 1), ).setIndexNames((0, "NOVELL-IPX-MIB", "ipxStaticServSysInstance"), (0, "NOVELL-IPX-MIB", "ipxStaticServCircIndex"), (0, "NOVELL-IPX-MIB", "ipxStaticServName"), (0, "NOVELL-IPX-MIB", "ipxStaticServType"))
if mibBuilder.loadTexts: ipxStaticServEntry.setStatus('mandatory')
ipxStaticServSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 3, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxStaticServSysInstance.setStatus('mandatory')
ipxStaticServCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxStaticServCircIndex.setStatus('mandatory')
ipxStaticServName = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxStaticServName.setStatus('mandatory')
ipxStaticServType = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxStaticServType.setStatus('mandatory')
ipxStaticServExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxStaticServExistState.setStatus('mandatory')
ipxStaticServNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 3, 1, 6), NetNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxStaticServNetNum.setStatus('mandatory')
ipxStaticServNode = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 3, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxStaticServNode.setStatus('mandatory')
ipxStaticServSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxStaticServSocket.setStatus('mandatory')
ipxStaticServHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 23, 2, 5, 4, 3, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxStaticServHopCount.setStatus('mandatory')
ipxTrapCircuitDown = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 5, 5) + (0,1)).setObjects(("NOVELL-IPX-MIB", "ipxCircSysInstance"), ("NOVELL-IPX-MIB", "ipxCircIndex"))
ipxTrapCircuitUp = NotificationType((1, 3, 6, 1, 4, 1, 23, 2, 5, 5) + (0,2)).setObjects(("NOVELL-IPX-MIB", "ipxCircSysInstance"), ("NOVELL-IPX-MIB", "ipxCircIndex"))
mibBuilder.exportSymbols("NOVELL-IPX-MIB", ipxBasicSysInDelivers=ipxBasicSysInDelivers, ipxCircNetNumber=ipxCircNetNumber, ipxStaticRouteCircIndex=ipxStaticRouteCircIndex, ipxCircEntry=ipxCircEntry, ipxCircUncompressedReceived=ipxCircUncompressedReceived, ipxCircCompressedInitSent=ipxCircCompressedInitSent, ipxBasicSysOutRequests=ipxBasicSysOutRequests, NetNumber=NetNumber, ipxBasicSysTable=ipxBasicSysTable, ipxBasicSysOutDiscards=ipxBasicSysOutDiscards, ipxServices=ipxServices, ipxStaticRouteHopCount=ipxStaticRouteHopCount, ipxDestProtocol=ipxDestProtocol, ipxBasicSysInBadChecksums=ipxBasicSysInBadChecksums, ipxCircSysInstance=ipxCircSysInstance, ipxBasicSysEntry=ipxBasicSysEntry, ipxDestNetNum=ipxDestNetNum, ipxDestServNode=ipxDestServNode, ipxAdvSysMaxPathSplits=ipxAdvSysMaxPathSplits, ipxStaticServExistState=ipxStaticServExistState, ipxCircName=ipxCircName, ipxBasicSysOpenSocketFails=ipxBasicSysOpenSocketFails, ipxAdvSysOutCompressDiscards=ipxAdvSysOutCompressDiscards, ipxServType=ipxServType, ipxAdvSysInTooManyHops=ipxAdvSysInTooManyHops, ipxAdvSysInCompressDiscards=ipxAdvSysInCompressDiscards, ipxForwarding=ipxForwarding, ipxCircInitFails=ipxCircInitFails, ipxSystem=ipxSystem, ipxDestServNetNum=ipxDestServNetNum, ipxDestServEntry=ipxDestServEntry, ipxAdvSysForwPackets=ipxAdvSysForwPackets, ipxCircOperState=ipxCircOperState, ipxCircNeighInternalNetNum=ipxCircNeighInternalNetNum, ipxStaticRouteNetNum=ipxStaticRouteNetNum, ipxCircCompressedRejectsReceived=ipxCircCompressedRejectsReceived, ipxCircCompressedInitReceived=ipxCircCompressedInitReceived, ipxStaticServSocket=ipxStaticServSocket, ipxAdvSysDestCount=ipxAdvSysDestCount, ipxCircCompressState=ipxCircCompressState, ipxBasicSysNode=ipxBasicSysNode, ipxBasicSysOutMalformedRequests=ipxBasicSysOutMalformedRequests, ipxServSysInstance=ipxServSysInstance, ipxBasicSysNoRoutes=ipxBasicSysNoRoutes, ipxDestServTable=ipxDestServTable, ipxTrapCircuitUp=ipxTrapCircuitUp, ipxStaticServTable=ipxStaticServTable, ipxBasicSysInDiscards=ipxBasicSysInDiscards, ipxStaticRouteTable=ipxStaticRouteTable, ipxStaticRouteSysInstance=ipxStaticRouteSysInstance, ipxAdvSysInFiltered=ipxAdvSysInFiltered, ipxStaticServNode=ipxStaticServNode, ipxAdvSysServCount=ipxAdvSysServCount, ipxAdvSysNETBIOSPackets=ipxAdvSysNETBIOSPackets, ipxDestTicks=ipxDestTicks, ipxDestNextHopNetNum=ipxDestNextHopNetNum, ipxDestServName=ipxDestServName, ipxAdvSysOutFiltered=ipxAdvSysOutFiltered, ipxBasicSysOutPackets=ipxBasicSysOutPackets, ipxServNetNum=ipxServNetNum, ipxCircStateChanges=ipxCircStateChanges, ipxDestServHopCount=ipxDestServHopCount, ipxStaticServType=ipxStaticServType, ipxCircStaticStatus=ipxCircStaticStatus, ipxBasicSysExistState=ipxBasicSysExistState, ipxStaticRouteExistState=ipxStaticRouteExistState, ipxCircCompressedRejectsSent=ipxCircCompressedRejectsSent, ipxBasicSysInReceives=ipxBasicSysInReceives, ipxDestServSocket=ipxDestServSocket, ipxCircDialName=ipxCircDialName, ipxCircCompressedSent=ipxCircCompressedSent, ipxCircCompressedReceived=ipxCircCompressedReceived, ipxStaticServEntry=ipxStaticServEntry, ipxDestTable=ipxDestTable, ipxStaticServNetNum=ipxStaticServNetNum, ipxStaticRouteTicks=ipxStaticRouteTicks, ipxBasicSysInHdrErrors=ipxBasicSysInHdrErrors, mibDoc=mibDoc, ipxCircMediaType=ipxCircMediaType, ipxAdvSysInstance=ipxAdvSysInstance, ipxServNode=ipxServNode, ipxAdvSysTable=ipxAdvSysTable, ipxServSocket=ipxServSocket, ipxAdvSysCircCount=ipxAdvSysCircCount, ipxStaticServSysInstance=ipxStaticServSysInstance, ipxDestSysInstance=ipxDestSysInstance, ipxCircuit=ipxCircuit, ipxCircType=ipxCircType, ipxStaticServHopCount=ipxStaticServHopCount, ipxCircLocalMaxPacketSize=ipxCircLocalMaxPacketSize, ipxCircExistState=ipxCircExistState, ipxDestServType=ipxDestServType, ipxCircIndex=ipxCircIndex, ipxDestEntry=ipxDestEntry, ipxDestServSysInstance=ipxDestServSysInstance, ipxCircCompressSlots=ipxCircCompressSlots, ipxServHopCount=ipxServHopCount, ipxCircTable=ipxCircTable, ipxCircIfIndex=ipxCircIfIndex, ipxBasicSysNetNumber=ipxBasicSysNetNumber, ipxServEntry=ipxServEntry, ipxStaticServCircIndex=ipxStaticServCircIndex, ipxAdvSysEntry=ipxAdvSysEntry, ipxStaticServName=ipxStaticServName, ipxBasicSysConfigSockets=ipxBasicSysConfigSockets, ipxTraps=ipxTraps, ipxCircUncompressedSent=ipxCircUncompressedSent, ipxStaticRouteEntry=ipxStaticRouteEntry, ipxServName=ipxServName, ipxTrapCircuitDown=ipxTrapCircuitDown, ipxDestServProtocol=ipxDestServProtocol, ipxBasicSysInstance=ipxBasicSysInstance, ipxServProtocol=ipxServProtocol, ipxBasicSysName=ipxBasicSysName, novellMib=novellMib, ipxAdvSysMaxHops=ipxAdvSysMaxHops, ipxDestNextHopNICAddress=ipxDestNextHopNICAddress, ipx=ipx, ipxCircThroughput=ipxCircThroughput, ipxDestHopCount=ipxDestHopCount, ipxServTable=ipxServTable, ipxBasicSysInUnknownSockets=ipxBasicSysInUnknownSockets, ipxCircDelay=ipxCircDelay, ipxDestNextHopCircIndex=ipxDestNextHopCircIndex, ipxCircNeighRouterName=ipxCircNeighRouterName)
