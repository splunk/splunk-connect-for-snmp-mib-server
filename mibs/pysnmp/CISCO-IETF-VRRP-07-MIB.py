#
# PySNMP MIB module CISCO-IETF-VRRP-07-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-IETF-VRRP-07-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:44:04 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ModuleIdentity, NotificationType, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Gauge32, MibIdentifier, ObjectIdentity, TimeTicks, Integer32, iso, Counter64, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "NotificationType", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Gauge32", "MibIdentifier", "ObjectIdentity", "TimeTicks", "Integer32", "iso", "Counter64", "IpAddress", "Unsigned32")
TimeInterval, TruthValue, TextualConvention, MacAddress, DisplayString, RowStatus, StorageType, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TimeInterval", "TruthValue", "TextualConvention", "MacAddress", "DisplayString", "RowStatus", "StorageType", "TimeStamp")
ciscoVrrp07MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 143))
ciscoVrrp07MIB.setRevisions(('2010-02-23 00:00', '2009-03-10 00:00', '2000-03-03 00:00',))
if mibBuilder.loadTexts: ciscoVrrp07MIB.setLastUpdated('201002230000Z')
if mibBuilder.loadTexts: ciscoVrrp07MIB.setOrganization('Cisco Systems, Inc')
class C07VrId(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 255)

c07vrrpOperations = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 143, 1))
c07vrrpStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 143, 2))
c07vrrpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 143, 3))
c07vrrpNodeVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpNodeVersion.setStatus('deprecated')
c07vrrpNotificationCntl = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c07vrrpNotificationCntl.setStatus('deprecated')
c07vrrpOperationsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 7), )
if mibBuilder.loadTexts: c07vrrpOperationsTable.setStatus('current')
c07vrrpOperationsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 7, 1), ).setIndexNames((0, "CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsInetAddrType"), (0, "CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsVrId"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: c07vrrpOperationsEntry.setStatus('current')
c07vrrpOperationsInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 7, 1, 1), InetAddressType())
if mibBuilder.loadTexts: c07vrrpOperationsInetAddrType.setStatus('current')
c07vrrpOperationsVrId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 7, 1, 2), C07VrId())
if mibBuilder.loadTexts: c07vrrpOperationsVrId.setStatus('current')
c07vrrpOperationsVirtualMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 7, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpOperationsVirtualMacAddr.setStatus('current')
c07vrrpOperationsState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("initialize", 1), ("backup", 2), ("master", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpOperationsState.setStatus('current')
c07vrrpOperationsPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 7, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpOperationsPriority.setStatus('current')
c07vrrpOperationsAddrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpOperationsAddrCount.setStatus('current')
c07vrrpOperationsMasterIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 7, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpOperationsMasterIpAddr.setStatus('current')
c07vrrpOperationsPrimaryIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 7, 1, 8), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpOperationsPrimaryIpAddr.setStatus('current')
c07vrrpOperationsAdvInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 7, 1, 9), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)).clone(100)).setUnits('centiseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpOperationsAdvInterval.setStatus('current')
c07vrrpOperationsPreemptMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 7, 1, 10), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpOperationsPreemptMode.setStatus('current')
c07vrrpOperationsAcceptMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 7, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpOperationsAcceptMode.setStatus('current')
c07vrrpOperationsUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 7, 1, 12), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpOperationsUpTime.setStatus('current')
c07vrrpOperationsStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 7, 1, 13), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpOperationsStorageType.setStatus('current')
c07vrrpOperationsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 7, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpOperationsRowStatus.setStatus('current')
c07vrrpAssociatedIpAddrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 8), )
if mibBuilder.loadTexts: c07vrrpAssociatedIpAddrTable.setStatus('current')
c07vrrpAssociatedIpAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 8, 1), ).setIndexNames((0, "CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsInetAddrType"), (0, "CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsVrId"), (0, "IF-MIB", "ifIndex"), (0, "CISCO-IETF-VRRP-07-MIB", "c07vrrpAssociatedIpAddr"))
if mibBuilder.loadTexts: c07vrrpAssociatedIpAddrEntry.setStatus('current')
c07vrrpAssociatedIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 8, 1, 1), InetAddress())
if mibBuilder.loadTexts: c07vrrpAssociatedIpAddr.setStatus('current')
c07vrrpAssociatedStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 8, 1, 2), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpAssociatedStorageType.setStatus('current')
c07vrrpAssociatedIpAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 8, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpAssociatedIpAddrRowStatus.setStatus('current')
c07vrrpRouterChecksumErrors = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpRouterChecksumErrors.setStatus('current')
c07vrrpRouterVersionErrors = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpRouterVersionErrors.setStatus('current')
c07vrrpRouterVrIdErrors = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpRouterVrIdErrors.setStatus('current')
c07vrrpRouterStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 5), )
if mibBuilder.loadTexts: c07vrrpRouterStatisticsTable.setStatus('current')
c07vrrpRouterStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 5, 1), )
c07vrrpOperationsEntry.registerAugmentions(("CISCO-IETF-VRRP-07-MIB", "c07vrrpRouterStatisticsEntry"))
c07vrrpRouterStatisticsEntry.setIndexNames(*c07vrrpOperationsEntry.getIndexNames())
if mibBuilder.loadTexts: c07vrrpRouterStatisticsEntry.setStatus('current')
c07vrrpStatisticsMasterTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatisticsMasterTransitions.setStatus('current')
c07vrrpStatisticsRcvdAdvertisements = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatisticsRcvdAdvertisements.setStatus('current')
c07vrrpStatisticsAdvIntervalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatisticsAdvIntervalErrors.setStatus('current')
c07vrrpStatisticsIpTtlErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatisticsIpTtlErrors.setStatus('current')
c07vrrpStatisticsRcvdPriZeroPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatisticsRcvdPriZeroPackets.setStatus('current')
c07vrrpStatisticsSentPriZeroPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatisticsSentPriZeroPackets.setStatus('current')
c07vrrpStatisticsRcvdInvalidTypePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatisticsRcvdInvalidTypePkts.setStatus('current')
c07vrrpStatisticsAddressListErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatisticsAddressListErrors.setStatus('current')
c07vrrpStatisticsPacketLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatisticsPacketLengthErrors.setStatus('current')
c07vrrpStatisticsRcvdInvalidAuthentications = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatisticsRcvdInvalidAuthentications.setStatus('current')
c07vrrpStatisticsDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 5, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatisticsDiscontinuityTime.setStatus('current')
c07vrrpStatisticsRefreshRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 5, 1, 12), Unsigned32()).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatisticsRefreshRate.setStatus('current')
c07vrrpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 143, 0))
c07vrrpNewMasterReason = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notmaster", 0), ("priority", 1), ("preempted", 2), ("masterNoResponse", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: c07vrrpNewMasterReason.setStatus('current')
c07vrrpTrapProtoErrReason = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ipTtlError", 0), ("versionError", 1), ("checksumError", 2), ("vridError", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: c07vrrpTrapProtoErrReason.setStatus('current')
c07vrrpTrapNewMasterCntl = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c07vrrpTrapNewMasterCntl.setStatus('current')
c07vrrpTrapProtoErrorCntl = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c07vrrpTrapProtoErrorCntl.setStatus('current')
c07vrrpTrapNewMaster = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 143, 0, 1)).setObjects(("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsMasterIpAddr"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpNewMasterReason"))
if mibBuilder.loadTexts: c07vrrpTrapNewMaster.setStatus('current')
c07vrrpTrapProtoError = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 143, 0, 3)).setObjects(("CISCO-IETF-VRRP-07-MIB", "c07vrrpTrapProtoErrReason"))
if mibBuilder.loadTexts: c07vrrpTrapProtoError.setStatus('current')
c07vrrpOperTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 3), )
if mibBuilder.loadTexts: c07vrrpOperTable.setStatus('deprecated')
c07vrrpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-IETF-VRRP-07-MIB", "c07vrrpOperVrId"))
if mibBuilder.loadTexts: c07vrrpOperEntry.setStatus('deprecated')
c07vrrpOperVrId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 3, 1, 1), C07VrId())
if mibBuilder.loadTexts: c07vrrpOperVrId.setStatus('deprecated')
c07vrrpOperVirtualMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpOperVirtualMacAddr.setStatus('deprecated')
c07vrrpOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("initialize", 1), ("backup", 2), ("master", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpOperState.setStatus('deprecated')
c07vrrpOperAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpOperAdminState.setStatus('deprecated')
c07vrrpOperPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpOperPriority.setStatus('deprecated')
c07vrrpOperIpAddrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpOperIpAddrCount.setStatus('deprecated')
c07vrrpOperMasterIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 3, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpOperMasterIpAddr.setStatus('deprecated')
c07vrrpOperPrimaryIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 3, 1, 8), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpOperPrimaryIpAddr.setStatus('deprecated')
c07vrrpOperAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAuthentication", 1), ("simpleTextPassword", 2), ("ipAuthenticationHeader", 3))).clone('noAuthentication')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpOperAuthType.setStatus('deprecated')
c07vrrpOperAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 3, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpOperAuthKey.setStatus('deprecated')
c07vrrpOperAdvertisementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpOperAdvertisementInterval.setStatus('deprecated')
c07vrrpOperPreemptMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 3, 1, 12), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpOperPreemptMode.setStatus('deprecated')
c07vrrpOperVirtualRouterUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 3, 1, 13), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpOperVirtualRouterUpTime.setStatus('deprecated')
c07vrrpOperProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ip", 1), ("bridge", 2), ("decnet", 3), ("other", 4))).clone('ip')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpOperProtocol.setStatus('deprecated')
c07vrrpOperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 3, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpOperRowStatus.setStatus('deprecated')
c07vrrpAssoIpAddrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 4), )
if mibBuilder.loadTexts: c07vrrpAssoIpAddrTable.setStatus('deprecated')
c07vrrpAssoIpAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-IETF-VRRP-07-MIB", "c07vrrpOperVrId"), (0, "CISCO-IETF-VRRP-07-MIB", "c07vrrpAssoIpAddr"))
if mibBuilder.loadTexts: c07vrrpAssoIpAddrEntry.setStatus('deprecated')
c07vrrpAssoIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 4, 1, 1), IpAddress())
if mibBuilder.loadTexts: c07vrrpAssoIpAddr.setStatus('deprecated')
c07vrrpAssoIpAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c07vrrpAssoIpAddrRowStatus.setStatus('deprecated')
c07vrrpRouterStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 4), )
if mibBuilder.loadTexts: c07vrrpRouterStatsTable.setStatus('deprecated')
c07vrrpRouterStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 4, 1), )
c07vrrpOperEntry.registerAugmentions(("CISCO-IETF-VRRP-07-MIB", "c07vrrpRouterStatsEntry"))
c07vrrpRouterStatsEntry.setIndexNames(*c07vrrpOperEntry.getIndexNames())
if mibBuilder.loadTexts: c07vrrpRouterStatsEntry.setStatus('deprecated')
c07vrrpStatsBecomeMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatsBecomeMaster.setStatus('deprecated')
c07vrrpStatsAdvertiseRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatsAdvertiseRcvd.setStatus('deprecated')
c07vrrpStatsAdvertiseIntervalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatsAdvertiseIntervalErrors.setStatus('deprecated')
c07vrrpStatsAuthFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatsAuthFailures.setStatus('deprecated')
c07vrrpStatsIpTtlErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatsIpTtlErrors.setStatus('deprecated')
c07vrrpStatsPriorityZeroPktsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatsPriorityZeroPktsRcvd.setStatus('deprecated')
c07vrrpStatsPriorityZeroPktsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatsPriorityZeroPktsSent.setStatus('deprecated')
c07vrrpStatsInvalidTypePktsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatsInvalidTypePktsRcvd.setStatus('deprecated')
c07vrrpStatsAddressListErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatsAddressListErrors.setStatus('deprecated')
c07vrrpStatsInvalidAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatsInvalidAuthType.setStatus('deprecated')
c07vrrpStatsAuthTypeMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatsAuthTypeMismatch.setStatus('deprecated')
c07vrrpStatsPacketLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 143, 2, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c07vrrpStatsPacketLengthErrors.setStatus('deprecated')
c07vrrpTrapPacketSrc = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 5), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: c07vrrpTrapPacketSrc.setStatus('deprecated')
c07vrrpTrapAuthErrorType = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 143, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("invalidAuthType", 1), ("authTypeMismatch", 2), ("authFailure", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: c07vrrpTrapAuthErrorType.setStatus('deprecated')
c07vrrpTrapAuthFailure = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 143, 0, 2)).setObjects(("CISCO-IETF-VRRP-07-MIB", "c07vrrpTrapPacketSrc"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpTrapAuthErrorType"))
if mibBuilder.loadTexts: c07vrrpTrapAuthFailure.setStatus('deprecated')
c07vrrpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 143, 3, 1))
c07vrrpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 143, 3, 2))
c07vrrpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 143, 3, 1, 1)).setObjects(("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperGroup"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatsGroup"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpTrapGroup"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    c07vrrpMIBCompliance = c07vrrpMIBCompliance.setStatus('deprecated')
c07vrrpModuleFullCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 143, 3, 1, 2)).setObjects(("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsGroup"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatisticsGroup"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpTrapInfoGroup"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    c07vrrpModuleFullCompliance = c07vrrpModuleFullCompliance.setStatus('current')
c07vrrpModuleReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 143, 3, 1, 3)).setObjects(("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsGroup"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatisticsGroup"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpTrapInfoGroup"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    c07vrrpModuleReadOnlyCompliance = c07vrrpModuleReadOnlyCompliance.setStatus('current')
c07vrrpOperGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 143, 3, 2, 1)).setObjects(("CISCO-IETF-VRRP-07-MIB", "c07vrrpNodeVersion"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpNotificationCntl"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperVirtualMacAddr"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperState"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperAdminState"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperPriority"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperIpAddrCount"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperMasterIpAddr"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperPrimaryIpAddr"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperAuthType"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperAuthKey"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperAdvertisementInterval"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperPreemptMode"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperVirtualRouterUpTime"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperProtocol"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperRowStatus"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpAssoIpAddrRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    c07vrrpOperGroup = c07vrrpOperGroup.setStatus('deprecated')
c07vrrpStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 143, 3, 2, 2)).setObjects(("CISCO-IETF-VRRP-07-MIB", "c07vrrpRouterChecksumErrors"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpRouterVersionErrors"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpRouterVrIdErrors"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatsBecomeMaster"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatsAdvertiseRcvd"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatsAdvertiseIntervalErrors"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatsAuthFailures"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatsIpTtlErrors"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatsPriorityZeroPktsRcvd"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatsPriorityZeroPktsSent"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatsInvalidTypePktsRcvd"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatsAddressListErrors"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatsInvalidAuthType"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatsAuthTypeMismatch"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatsPacketLengthErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    c07vrrpStatsGroup = c07vrrpStatsGroup.setStatus('deprecated')
c07vrrpTrapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 143, 3, 2, 3)).setObjects(("CISCO-IETF-VRRP-07-MIB", "c07vrrpTrapPacketSrc"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpTrapAuthErrorType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    c07vrrpTrapGroup = c07vrrpTrapGroup.setStatus('deprecated')
c07vrrpNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 10, 143, 3, 2, 4)).setObjects(("CISCO-IETF-VRRP-07-MIB", "c07vrrpTrapAuthFailure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    c07vrrpNotificationGroup = c07vrrpNotificationGroup.setStatus('deprecated')
c07vrrpOperationsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 143, 3, 2, 5)).setObjects(("CISCO-IETF-VRRP-07-MIB", "c07vrrpTrapNewMasterCntl"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpTrapProtoErrorCntl"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsVirtualMacAddr"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsState"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsPriority"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsMasterIpAddr"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsAdvInterval"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsPreemptMode"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsAcceptMode"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsUpTime"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsStorageType"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsRowStatus"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsAddrCount"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpOperationsPrimaryIpAddr"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpAssociatedStorageType"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpAssociatedIpAddrRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    c07vrrpOperationsGroup = c07vrrpOperationsGroup.setStatus('current')
c07vrrpStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 143, 3, 2, 6)).setObjects(("CISCO-IETF-VRRP-07-MIB", "c07vrrpRouterChecksumErrors"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpRouterVersionErrors"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpRouterVrIdErrors"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatisticsMasterTransitions"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatisticsRcvdAdvertisements"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatisticsAdvIntervalErrors"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatisticsRcvdPriZeroPackets"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatisticsSentPriZeroPackets"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatisticsRcvdInvalidTypePkts"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatisticsIpTtlErrors"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatisticsAddressListErrors"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatisticsPacketLengthErrors"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatisticsRcvdInvalidAuthentications"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatisticsDiscontinuityTime"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpStatisticsRefreshRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    c07vrrpStatisticsGroup = c07vrrpStatisticsGroup.setStatus('current')
c07vrrpTrapInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 143, 3, 2, 8)).setObjects(("CISCO-IETF-VRRP-07-MIB", "c07vrrpTrapProtoErrReason"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpNewMasterReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    c07vrrpTrapInfoGroup = c07vrrpTrapInfoGroup.setStatus('current')
c07vrrpNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 10, 143, 3, 2, 9)).setObjects(("CISCO-IETF-VRRP-07-MIB", "c07vrrpTrapNewMaster"), ("CISCO-IETF-VRRP-07-MIB", "c07vrrpTrapProtoError"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    c07vrrpNotificationsGroup = c07vrrpNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-IETF-VRRP-07-MIB", c07vrrpTrapNewMasterCntl=c07vrrpTrapNewMasterCntl, c07vrrpOperationsStorageType=c07vrrpOperationsStorageType, c07vrrpOperationsAddrCount=c07vrrpOperationsAddrCount, c07vrrpStatisticsSentPriZeroPackets=c07vrrpStatisticsSentPriZeroPackets, c07vrrpNotificationCntl=c07vrrpNotificationCntl, c07vrrpStatsPriorityZeroPktsSent=c07vrrpStatsPriorityZeroPktsSent, c07vrrpStatsPriorityZeroPktsRcvd=c07vrrpStatsPriorityZeroPktsRcvd, c07vrrpOperationsInetAddrType=c07vrrpOperationsInetAddrType, c07vrrpOperIpAddrCount=c07vrrpOperIpAddrCount, c07vrrpOperAuthKey=c07vrrpOperAuthKey, c07vrrpAssoIpAddrEntry=c07vrrpAssoIpAddrEntry, c07vrrpRouterVrIdErrors=c07vrrpRouterVrIdErrors, c07vrrpStatsIpTtlErrors=c07vrrpStatsIpTtlErrors, c07vrrpRouterChecksumErrors=c07vrrpRouterChecksumErrors, c07vrrpRouterStatsEntry=c07vrrpRouterStatsEntry, c07vrrpOperRowStatus=c07vrrpOperRowStatus, c07vrrpTrapAuthFailure=c07vrrpTrapAuthFailure, c07vrrpAssoIpAddr=c07vrrpAssoIpAddr, c07vrrpStatsAuthTypeMismatch=c07vrrpStatsAuthTypeMismatch, c07vrrpOperPreemptMode=c07vrrpOperPreemptMode, c07vrrpOperGroup=c07vrrpOperGroup, c07vrrpStatisticsGroup=c07vrrpStatisticsGroup, c07vrrpAssociatedIpAddrRowStatus=c07vrrpAssociatedIpAddrRowStatus, c07vrrpModuleFullCompliance=c07vrrpModuleFullCompliance, c07vrrpNotifications=c07vrrpNotifications, c07vrrpStatisticsAddressListErrors=c07vrrpStatisticsAddressListErrors, c07vrrpMIBCompliance=c07vrrpMIBCompliance, c07vrrpTrapInfoGroup=c07vrrpTrapInfoGroup, c07vrrpOperPriority=c07vrrpOperPriority, c07vrrpOperAdminState=c07vrrpOperAdminState, c07vrrpStatsInvalidAuthType=c07vrrpStatsInvalidAuthType, c07vrrpOperationsPriority=c07vrrpOperationsPriority, c07vrrpAssociatedStorageType=c07vrrpAssociatedStorageType, c07vrrpStatisticsRcvdInvalidTypePkts=c07vrrpStatisticsRcvdInvalidTypePkts, c07vrrpStatsBecomeMaster=c07vrrpStatsBecomeMaster, c07vrrpNotificationsGroup=c07vrrpNotificationsGroup, PYSNMP_MODULE_ID=ciscoVrrp07MIB, c07vrrpOperations=c07vrrpOperations, c07vrrpOperationsAcceptMode=c07vrrpOperationsAcceptMode, c07vrrpAssociatedIpAddr=c07vrrpAssociatedIpAddr, c07vrrpRouterStatsTable=c07vrrpRouterStatsTable, c07vrrpMIBCompliances=c07vrrpMIBCompliances, c07vrrpRouterStatisticsTable=c07vrrpRouterStatisticsTable, c07vrrpStatisticsDiscontinuityTime=c07vrrpStatisticsDiscontinuityTime, c07vrrpStatistics=c07vrrpStatistics, c07vrrpStatisticsRefreshRate=c07vrrpStatisticsRefreshRate, c07vrrpStatisticsPacketLengthErrors=c07vrrpStatisticsPacketLengthErrors, C07VrId=C07VrId, c07vrrpOperationsState=c07vrrpOperationsState, ciscoVrrp07MIB=ciscoVrrp07MIB, c07vrrpOperMasterIpAddr=c07vrrpOperMasterIpAddr, c07vrrpOperVirtualRouterUpTime=c07vrrpOperVirtualRouterUpTime, c07vrrpOperationsGroup=c07vrrpOperationsGroup, c07vrrpStatsGroup=c07vrrpStatsGroup, c07vrrpStatisticsAdvIntervalErrors=c07vrrpStatisticsAdvIntervalErrors, c07vrrpTrapGroup=c07vrrpTrapGroup, c07vrrpTrapPacketSrc=c07vrrpTrapPacketSrc, c07vrrpOperState=c07vrrpOperState, c07vrrpAssociatedIpAddrEntry=c07vrrpAssociatedIpAddrEntry, c07vrrpStatsAdvertiseIntervalErrors=c07vrrpStatsAdvertiseIntervalErrors, c07vrrpOperationsMasterIpAddr=c07vrrpOperationsMasterIpAddr, c07vrrpNewMasterReason=c07vrrpNewMasterReason, c07vrrpOperationsPrimaryIpAddr=c07vrrpOperationsPrimaryIpAddr, c07vrrpOperVrId=c07vrrpOperVrId, c07vrrpStatsAdvertiseRcvd=c07vrrpStatsAdvertiseRcvd, c07vrrpOperAuthType=c07vrrpOperAuthType, c07vrrpConformance=c07vrrpConformance, c07vrrpOperAdvertisementInterval=c07vrrpOperAdvertisementInterval, c07vrrpTrapNewMaster=c07vrrpTrapNewMaster, c07vrrpStatsInvalidTypePktsRcvd=c07vrrpStatsInvalidTypePktsRcvd, c07vrrpAssoIpAddrRowStatus=c07vrrpAssoIpAddrRowStatus, c07vrrpOperationsVrId=c07vrrpOperationsVrId, c07vrrpTrapProtoErrorCntl=c07vrrpTrapProtoErrorCntl, c07vrrpRouterStatisticsEntry=c07vrrpRouterStatisticsEntry, c07vrrpOperationsPreemptMode=c07vrrpOperationsPreemptMode, c07vrrpOperPrimaryIpAddr=c07vrrpOperPrimaryIpAddr, c07vrrpStatsAuthFailures=c07vrrpStatsAuthFailures, c07vrrpTrapProtoErrReason=c07vrrpTrapProtoErrReason, c07vrrpAssociatedIpAddrTable=c07vrrpAssociatedIpAddrTable, c07vrrpMIBGroups=c07vrrpMIBGroups, c07vrrpOperationsVirtualMacAddr=c07vrrpOperationsVirtualMacAddr, c07vrrpAssoIpAddrTable=c07vrrpAssoIpAddrTable, c07vrrpStatsAddressListErrors=c07vrrpStatsAddressListErrors, c07vrrpOperEntry=c07vrrpOperEntry, c07vrrpOperVirtualMacAddr=c07vrrpOperVirtualMacAddr, c07vrrpStatisticsIpTtlErrors=c07vrrpStatisticsIpTtlErrors, c07vrrpTrapAuthErrorType=c07vrrpTrapAuthErrorType, c07vrrpStatisticsRcvdPriZeroPackets=c07vrrpStatisticsRcvdPriZeroPackets, c07vrrpOperationsTable=c07vrrpOperationsTable, c07vrrpModuleReadOnlyCompliance=c07vrrpModuleReadOnlyCompliance, c07vrrpOperationsEntry=c07vrrpOperationsEntry, c07vrrpNotificationGroup=c07vrrpNotificationGroup, c07vrrpStatsPacketLengthErrors=c07vrrpStatsPacketLengthErrors, c07vrrpOperationsRowStatus=c07vrrpOperationsRowStatus, c07vrrpOperProtocol=c07vrrpOperProtocol, c07vrrpTrapProtoError=c07vrrpTrapProtoError, c07vrrpOperTable=c07vrrpOperTable, c07vrrpOperationsAdvInterval=c07vrrpOperationsAdvInterval, c07vrrpStatisticsMasterTransitions=c07vrrpStatisticsMasterTransitions, c07vrrpNodeVersion=c07vrrpNodeVersion, c07vrrpRouterVersionErrors=c07vrrpRouterVersionErrors, c07vrrpStatisticsRcvdAdvertisements=c07vrrpStatisticsRcvdAdvertisements, c07vrrpStatisticsRcvdInvalidAuthentications=c07vrrpStatisticsRcvdInvalidAuthentications, c07vrrpOperationsUpTime=c07vrrpOperationsUpTime)
