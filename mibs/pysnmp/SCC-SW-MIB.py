#
# PySNMP MIB module SCC-SW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SCC-SW-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:53:08 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
sccSidewinder, sccMibSw = mibBuilder.importSymbols("SCC-MIB", "sccSidewinder", "sccMibSw")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
sysUpTime, sysDescr = mibBuilder.importSymbols("SNMPv2-MIB", "sysUpTime", "sysDescr")
Integer32, ModuleIdentity, Counter32, Gauge32, IpAddress, NotificationType, ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, iso, NotificationType, Bits, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ModuleIdentity", "Counter32", "Gauge32", "IpAddress", "NotificationType", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "iso", "NotificationType", "Bits", "Counter64", "MibIdentifier")
DisplayString, TextualConvention, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "PhysAddress")
swProxy = MibIdentifier((1, 3, 6, 1, 4, 1, 1573, 3, 1, 5))
swBurb = MibIdentifier((1, 3, 6, 1, 4, 1, 1573, 3, 1, 6))
swBurbedMib2 = MibIdentifier((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7))
swTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 1573, 3, 1, 10))
swProxyTable = MibTable((1, 3, 6, 1, 4, 1, 1573, 3, 1, 5, 1), )
if mibBuilder.loadTexts: swProxyTable.setStatus('mandatory')
swProxyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1573, 3, 1, 5, 1, 1), ).setIndexNames((0, "SCC-SW-MIB", "swProxyIndex"))
if mibBuilder.loadTexts: swProxyEntry.setStatus('mandatory')
swProxyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swProxyIndex.setStatus('mandatory')
swProxyName = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 5, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swProxyName.setStatus('mandatory')
swProxyAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swProxyAdminStatus.setStatus('mandatory')
swProxyOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swProxyOperStatus.setStatus('mandatory')
swBurbTotal = MibScalar((1, 3, 6, 1, 4, 1, 1573, 3, 1, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swBurbTotal.setStatus('mandatory')
swBurbViewTable = MibTable((1, 3, 6, 1, 4, 1, 1573, 3, 1, 6, 2), )
if mibBuilder.loadTexts: swBurbViewTable.setStatus('mandatory')
swBurbViewEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1573, 3, 1, 6, 2, 1), ).setIndexNames((0, "SCC-SW-MIB", "swBurbIndex"))
if mibBuilder.loadTexts: swBurbViewEntry.setStatus('mandatory')
swBurbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 6, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swBurbIndex.setStatus('mandatory')
swBurbViewName = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 6, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swBurbViewName.setStatus('mandatory')
swInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1))
swIp = MibIdentifier((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2))
swTcp = MibIdentifier((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 3))
swUdp = MibIdentifier((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 4))
swIfNumber = MibScalar((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfNumber.setStatus('mandatory')
swIfTable = MibTable((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2), )
if mibBuilder.loadTexts: swIfTable.setStatus('mandatory')
swIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1), ).setIndexNames((0, "SCC-SW-MIB", "swIfBurbIndex"), (0, "SCC-SW-MIB", "swIfIndex"))
if mibBuilder.loadTexts: swIfEntry.setStatus('mandatory')
swIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfIndex.setStatus('mandatory')
swIfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfDescr.setStatus('mandatory')
swIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32))).clone(namedValues=NamedValues(("other", 1), ("regular1822", 2), ("hdh1822", 3), ("ddn-x25", 4), ("rfc877-x25", 5), ("ethernet-csmacd", 6), ("iso88023-csmacd", 7), ("iso88024-tokenBus", 8), ("iso88025-tokenRing", 9), ("iso88026-man", 10), ("starLan", 11), ("proteon-10Mbit", 12), ("proteon-80Mbit", 13), ("hyperchannel", 14), ("fddi", 15), ("lapb", 16), ("sdlc", 17), ("ds1", 18), ("e1", 19), ("basicISDN", 20), ("primaryISDN", 21), ("propPointToPointSerial", 22), ("ppp", 23), ("softwareLoopback", 24), ("eon", 25), ("ethernet-3Mbit", 26), ("nsip", 27), ("slip", 28), ("ultra", 29), ("ds3", 30), ("sip", 31), ("frame-relay", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfType.setStatus('mandatory')
swIfMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfMtu.setStatus('mandatory')
swIfSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfSpeed.setStatus('mandatory')
swIfPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 6), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfPhysAddress.setStatus('mandatory')
swIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swIfAdminStatus.setStatus('mandatory')
swIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfOperStatus.setStatus('mandatory')
swIfLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfLastChange.setStatus('mandatory')
swIfInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfInOctets.setStatus('mandatory')
swIfInUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfInUcastPkts.setStatus('mandatory')
swIfInNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfInNUcastPkts.setStatus('mandatory')
swIfInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfInDiscards.setStatus('mandatory')
swIfInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfInErrors.setStatus('mandatory')
swIfInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfInUnknownProtos.setStatus('mandatory')
swIfOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfOutOctets.setStatus('mandatory')
swIfOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfOutUcastPkts.setStatus('mandatory')
swIfOutNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfOutNUcastPkts.setStatus('mandatory')
swIfOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfOutDiscards.setStatus('mandatory')
swIfOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfOutErrors.setStatus('mandatory')
swIfOutQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfOutQLen.setStatus('mandatory')
swIfSpecific = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 22), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfSpecific.setStatus('mandatory')
swIfBurbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 1, 2, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIfBurbIndex.setStatus('mandatory')
swIpAddrTable = MibTable((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 1), )
if mibBuilder.loadTexts: swIpAddrTable.setStatus('mandatory')
swIpAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 1, 1), ).setIndexNames((0, "SCC-SW-MIB", "swIpAdEntBurbIndex"), (0, "SCC-SW-MIB", "swIpAdEntAddr"))
if mibBuilder.loadTexts: swIpAddrEntry.setStatus('mandatory')
swIpAdEntAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIpAdEntAddr.setStatus('mandatory')
swIpAdEntIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIpAdEntIfIndex.setStatus('mandatory')
swIpAdEntNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIpAdEntNetMask.setStatus('mandatory')
swIpAdEntBcastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIpAdEntBcastAddr.setStatus('mandatory')
swIpAdEntReasmMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIpAdEntReasmMaxSize.setStatus('mandatory')
swIpAdEntBurbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIpAdEntBurbIndex.setStatus('mandatory')
swIpRouteTable = MibTable((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 2), )
if mibBuilder.loadTexts: swIpRouteTable.setStatus('mandatory')
swIpRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 2, 1), ).setIndexNames((0, "SCC-SW-MIB", "swIpRouteBurbIndex"), (0, "SCC-SW-MIB", "swIpRouteDest"))
if mibBuilder.loadTexts: swIpRouteEntry.setStatus('mandatory')
swIpRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swIpRouteDest.setStatus('mandatory')
swIpRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swIpRouteIfIndex.setStatus('mandatory')
swIpRouteMetric1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swIpRouteMetric1.setStatus('mandatory')
swIpRouteMetric2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swIpRouteMetric2.setStatus('mandatory')
swIpRouteMetric3 = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swIpRouteMetric3.setStatus('mandatory')
swIpRouteMetric4 = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swIpRouteMetric4.setStatus('mandatory')
swIpRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 2, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swIpRouteNextHop.setStatus('mandatory')
swIpRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("invalid", 2), ("direct", 3), ("indirect", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swIpRouteType.setStatus('mandatory')
swIpRouteProto = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("netmgmt", 3), ("icmp", 4), ("egp", 5), ("ggp", 6), ("hello", 7), ("rip", 8), ("is-is", 9), ("es-is", 10), ("ciscoIgrp", 11), ("bbnSpfIgp", 12), ("ospf", 13), ("bgp", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIpRouteProto.setStatus('mandatory')
swIpRouteAge = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 2, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swIpRouteAge.setStatus('mandatory')
swIpRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 2, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swIpRouteMask.setStatus('mandatory')
swIpRouteMetric5 = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 2, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swIpRouteMetric5.setStatus('mandatory')
swIpRouteInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 2, 1, 13), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIpRouteInfo.setStatus('mandatory')
swIpRouteBurbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 2, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swIpRouteBurbIndex.setStatus('mandatory')
swTcpConnTable = MibTable((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 3, 1), )
if mibBuilder.loadTexts: swTcpConnTable.setStatus('mandatory')
swTcpConnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 3, 1, 1), ).setIndexNames((0, "SCC-SW-MIB", "swTcpConnBurbIndex"), (0, "SCC-SW-MIB", "swTcpConnLocalAddress"), (0, "SCC-SW-MIB", "swTcpConnLocalPort"), (0, "SCC-SW-MIB", "swTcpConnRemAddress"), (0, "SCC-SW-MIB", "swTcpConnRemPort"))
if mibBuilder.loadTexts: swTcpConnEntry.setStatus('mandatory')
swTcpConnState = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("closed", 1), ("listen", 2), ("synSent", 3), ("synReceived", 4), ("established", 5), ("finWait1", 6), ("finWait2", 7), ("closeWait", 8), ("lastAck", 9), ("closing", 10), ("timeWait", 11), ("deleteTCB", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swTcpConnState.setStatus('mandatory')
swTcpConnLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 3, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swTcpConnLocalAddress.setStatus('mandatory')
swTcpConnLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swTcpConnLocalPort.setStatus('mandatory')
swTcpConnRemAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 3, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swTcpConnRemAddress.setStatus('mandatory')
swTcpConnRemPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swTcpConnRemPort.setStatus('mandatory')
swTcpConnBurbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 3, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swTcpConnBurbIndex.setStatus('mandatory')
swUdpTable = MibTable((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 4, 1), )
if mibBuilder.loadTexts: swUdpTable.setStatus('mandatory')
swUdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 4, 1, 1), ).setIndexNames((0, "SCC-SW-MIB", "swUdpBurbIndex"), (0, "SCC-SW-MIB", "swUdpLocalAddress"), (0, "SCC-SW-MIB", "swUdpLocalPort"))
if mibBuilder.loadTexts: swUdpEntry.setStatus('mandatory')
swUdpLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 4, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swUdpLocalAddress.setStatus('mandatory')
swUdpLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swUdpLocalPort.setStatus('mandatory')
swUdpBurbIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1573, 3, 1, 7, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swUdpBurbIndex.setStatus('mandatory')
sccAuthenFailSrcIp = MibScalar((1, 3, 6, 1, 4, 1, 1573, 3, 1, 10, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sccAuthenFailSrcIp.setStatus('mandatory')
sccAuthenFailSrcCommName = MibScalar((1, 3, 6, 1, 4, 1, 1573, 3, 1, 10, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sccAuthenFailSrcCommName.setStatus('mandatory')
swUser = MibScalar((1, 3, 6, 1, 4, 1, 1573, 3, 1, 10, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swUser.setStatus('mandatory')
swSRoleUser = MibScalar((1, 3, 6, 1, 4, 1, 1573, 3, 1, 10, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSRoleUser.setStatus('mandatory')
swSRoleName = MibScalar((1, 3, 6, 1, 4, 1, 1573, 3, 1, 10, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swSRoleName.setStatus('mandatory')
swColdStart = NotificationType((1, 3, 6, 1, 4, 1, 1573, 2, 1) + (0,0)).setObjects(("SNMPv2-MIB", "sysDescr"), ("SNMPv2-MIB", "sysUpTime"))
swAuthenticationFailure = NotificationType((1, 3, 6, 1, 4, 1, 1573, 2, 1) + (0,4)).setObjects(("SCC-SW-MIB", "sccAuthenFailSrcIp"), ("SCC-SW-MIB", "sccAuthenFailSrcCommName"))
swNetTrafficThresholds = NotificationType((1, 3, 6, 1, 4, 1, 1573, 2, 1) + (0,201))
swAttackAttempt = NotificationType((1, 3, 6, 1, 4, 1, 1573, 2, 1) + (0,202))
swTeViolation = NotificationType((1, 3, 6, 1, 4, 1, 1573, 2, 1) + (0,203))
swAclThresholds = NotificationType((1, 3, 6, 1, 4, 1, 1573, 2, 1) + (0,204))
swBadProxyAuth = NotificationType((1, 3, 6, 1, 4, 1, 1573, 2, 1) + (0,205))
swNetProbeAttempt = NotificationType((1, 3, 6, 1, 4, 1, 1573, 2, 1) + (0,206))
swMailFilterFailure = NotificationType((1, 3, 6, 1, 4, 1, 1573, 2, 1) + (0,207))
swIPSECFailure = NotificationType((1, 3, 6, 1, 4, 1, 1573, 2, 1) + (0,208))
swFAILOVEREvent = NotificationType((1, 3, 6, 1, 4, 1, 1573, 2, 1) + (0,209))
mibBuilder.exportSymbols("SCC-SW-MIB", swIpRouteMetric3=swIpRouteMetric3, swIfInUcastPkts=swIfInUcastPkts, swProxyTable=swProxyTable, swFAILOVEREvent=swFAILOVEREvent, swIpAdEntBurbIndex=swIpAdEntBurbIndex, swSRoleName=swSRoleName, swIfType=swIfType, swIpAdEntReasmMaxSize=swIpAdEntReasmMaxSize, swIPSECFailure=swIPSECFailure, swSRoleUser=swSRoleUser, swTcpConnLocalAddress=swTcpConnLocalAddress, swIfInNUcastPkts=swIfInNUcastPkts, swUdpBurbIndex=swUdpBurbIndex, swIfEntry=swIfEntry, swIpRouteMetric4=swIpRouteMetric4, swProxyAdminStatus=swProxyAdminStatus, swMailFilterFailure=swMailFilterFailure, swIfOutNUcastPkts=swIfOutNUcastPkts, swIpRouteEntry=swIpRouteEntry, swIfOutOctets=swIfOutOctets, swInterfaces=swInterfaces, swIpAdEntIfIndex=swIpAdEntIfIndex, swIpRouteIfIndex=swIpRouteIfIndex, swIfMtu=swIfMtu, swIpRouteNextHop=swIpRouteNextHop, swTcpConnEntry=swTcpConnEntry, swNetProbeAttempt=swNetProbeAttempt, swBadProxyAuth=swBadProxyAuth, swIfAdminStatus=swIfAdminStatus, swIfInUnknownProtos=swIfInUnknownProtos, swIfTable=swIfTable, swIfBurbIndex=swIfBurbIndex, swTcpConnLocalPort=swTcpConnLocalPort, swBurbTotal=swBurbTotal, swIpRouteType=swIpRouteType, swNetTrafficThresholds=swNetTrafficThresholds, swIfSpecific=swIfSpecific, swIpRouteMetric2=swIpRouteMetric2, swTcpConnState=swTcpConnState, swBurbIndex=swBurbIndex, swAttackAttempt=swAttackAttempt, swTcpConnRemPort=swTcpConnRemPort, swUdpLocalAddress=swUdpLocalAddress, swTcpConnTable=swTcpConnTable, swTcpConnRemAddress=swTcpConnRemAddress, swIpAdEntBcastAddr=swIpAdEntBcastAddr, swTcpConnBurbIndex=swTcpConnBurbIndex, swIfInDiscards=swIfInDiscards, swIpRouteMetric5=swIpRouteMetric5, swProxy=swProxy, swIfSpeed=swIfSpeed, swIpRouteBurbIndex=swIpRouteBurbIndex, sccAuthenFailSrcCommName=sccAuthenFailSrcCommName, swUser=swUser, swColdStart=swColdStart, swBurb=swBurb, swBurbViewTable=swBurbViewTable, swUdpLocalPort=swUdpLocalPort, swUdpEntry=swUdpEntry, swIfLastChange=swIfLastChange, swIfDescr=swIfDescr, swAuthenticationFailure=swAuthenticationFailure, swIpRouteMask=swIpRouteMask, swBurbedMib2=swBurbedMib2, swProxyOperStatus=swProxyOperStatus, swIfOutUcastPkts=swIfOutUcastPkts, swIfInErrors=swIfInErrors, swUdpTable=swUdpTable, swIpRouteTable=swIpRouteTable, swIfIndex=swIfIndex, swIpAdEntAddr=swIpAdEntAddr, swProxyName=swProxyName, swIpRouteDest=swIpRouteDest, swAclThresholds=swAclThresholds, swIfOutErrors=swIfOutErrors, swIfPhysAddress=swIfPhysAddress, swIfInOctets=swIfInOctets, swIpAddrEntry=swIpAddrEntry, swIp=swIp, swTcp=swTcp, swIfNumber=swIfNumber, swIpAddrTable=swIpAddrTable, swIpAdEntNetMask=swIpAdEntNetMask, swIfOperStatus=swIfOperStatus, swIpRouteProto=swIpRouteProto, swIfOutDiscards=swIfOutDiscards, swIpRouteMetric1=swIpRouteMetric1, swBurbViewName=swBurbViewName, swProxyIndex=swProxyIndex, swIpRouteInfo=swIpRouteInfo, swIpRouteAge=swIpRouteAge, swTeViolation=swTeViolation, swBurbViewEntry=swBurbViewEntry, sccAuthenFailSrcIp=sccAuthenFailSrcIp, swIfOutQLen=swIfOutQLen, swUdp=swUdp, swProxyEntry=swProxyEntry, swTrap=swTrap)
