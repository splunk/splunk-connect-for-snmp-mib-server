#
# PySNMP MIB module NETSCREEN-BGP4-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NETSCREEN-BGP4-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:10:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
netscreenVR, = mibBuilder.importSymbols("NETSCREEN-SMI", "netscreenVR")
netscreenTrapType, netscreenTrapDesc = mibBuilder.importSymbols("NETSCREEN-TRAP-MIB", "netscreenTrapType", "netscreenTrapDesc")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Gauge32, Unsigned32, iso, TimeTicks, Counter64, Counter32, Integer32, Bits, ModuleIdentity, ObjectIdentity, NotificationType, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Gauge32", "Unsigned32", "iso", "TimeTicks", "Counter64", "Counter32", "Integer32", "Bits", "ModuleIdentity", "ObjectIdentity", "NotificationType", "MibIdentifier")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
nsBgp = ModuleIdentity((1, 3, 6, 1, 4, 1, 3224, 18, 3))
if mibBuilder.loadTexts: nsBgp.setLastUpdated('200506032022Z')
if mibBuilder.loadTexts: nsBgp.setOrganization('Juniper Networks, Inc.')
nsBgpInfoTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 3, 1), )
if mibBuilder.loadTexts: nsBgpInfoTable.setStatus('deprecated')
nsBgpInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 3, 1, 1), ).setIndexNames((0, "NETSCREEN-BGP4-MIB", "nsBgpInfoVRID"))
if mibBuilder.loadTexts: nsBgpInfoEntry.setStatus('deprecated')
nsBgpInfoVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpInfoVersion.setStatus('deprecated')
nsBgpInfoLocalAs = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpInfoLocalAs.setStatus('deprecated')
nsBgpInfoIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpInfoIdentifier.setStatus('deprecated')
nsBgpInfoVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpInfoVRID.setStatus('deprecated')
nsBgpPeerTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3), )
if mibBuilder.loadTexts: nsBgpPeerTable.setStatus('deprecated')
nsBgpPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1), ).setIndexNames((0, "NETSCREEN-BGP4-MIB", "nsBgpPeerRemoteAddr"), (0, "NETSCREEN-BGP4-MIB", "nsBgpPeerVRID"))
if mibBuilder.loadTexts: nsBgpPeerEntry.setStatus('deprecated')
nsBgpPeerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerIdentifier.setStatus('deprecated')
nsBgpPeerState = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("idle", 1), ("connect", 2), ("active", 3), ("opensent", 4), ("openconfirm", 5), ("established", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerState.setStatus('deprecated')
nsBgpPeerAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stop", 1), ("start", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerAdminStatus.setStatus('deprecated')
nsBgpPeerNegotiatedVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerNegotiatedVersion.setStatus('deprecated')
nsBgpPeerLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerLocalAddr.setStatus('deprecated')
nsBgpPeerLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerLocalPort.setStatus('deprecated')
nsBgpPeerRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerRemoteAddr.setStatus('deprecated')
nsBgpPeerRemotePort = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerRemotePort.setStatus('deprecated')
nsBgpPeerRemoteAs = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerRemoteAs.setStatus('deprecated')
nsBgpPeerInUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerInUpdates.setStatus('deprecated')
nsBgpPeerOutUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerOutUpdates.setStatus('deprecated')
nsBgpPeerInTotalMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerInTotalMessages.setStatus('deprecated')
nsBgpPeerOutTotalMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerOutTotalMessages.setStatus('deprecated')
nsBgpPeerLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerLastError.setStatus('deprecated')
nsBgpPeerFsmEstablishedTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerFsmEstablishedTransitions.setStatus('deprecated')
nsBgpPeerFsmEstablishedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerFsmEstablishedTime.setStatus('deprecated')
nsBgpPeerConnectRetryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerConnectRetryInterval.setStatus('deprecated')
nsBgpPeerHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerHoldTime.setStatus('deprecated')
nsBgpPeerKeepAlive = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 21845), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerKeepAlive.setStatus('deprecated')
nsBgpPeerHoldTimeConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerHoldTimeConfigured.setStatus('deprecated')
nsBgpPeerKeepAliveConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 21845), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerKeepAliveConfigured.setStatus('deprecated')
nsBgpPeerMinASOriginationInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerMinASOriginationInterval.setStatus('deprecated')
nsBgpPeerMinRouteAdvertisementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerMinRouteAdvertisementInterval.setStatus('deprecated')
nsBgpPeerInUpdateElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerInUpdateElapsedTime.setStatus('deprecated')
nsBgpPeerVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 3, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgpPeerVRID.setStatus('deprecated')
nsBgp4PathAttrTable = MibTable((1, 3, 6, 1, 4, 1, 3224, 18, 3, 6), )
if mibBuilder.loadTexts: nsBgp4PathAttrTable.setStatus('deprecated')
nsBgp4PathAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3224, 18, 3, 6, 1), ).setIndexNames((0, "NETSCREEN-BGP4-MIB", "nsBgp4PathAttrIpAddrPrefix"), (0, "NETSCREEN-BGP4-MIB", "nsBgp4PathAttrIpAddrPrefixLen"), (0, "NETSCREEN-BGP4-MIB", "nsBgp4PathAttrPeer"), (0, "NETSCREEN-BGP4-MIB", "nsBgp4PathAttrVRID"))
if mibBuilder.loadTexts: nsBgp4PathAttrEntry.setStatus('deprecated')
nsBgp4PathAttrPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 6, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgp4PathAttrPeer.setStatus('deprecated')
nsBgp4PathAttrIpAddrPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgp4PathAttrIpAddrPrefixLen.setStatus('deprecated')
nsBgp4PathAttrIpAddrPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgp4PathAttrIpAddrPrefix.setStatus('deprecated')
nsBgp4PathAttrOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("igp", 1), ("egp", 2), ("incomplete", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgp4PathAttrOrigin.setStatus('deprecated')
nsBgp4PathAttrASPathSegment = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgp4PathAttrASPathSegment.setStatus('deprecated')
nsBgp4PathAttrNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 6, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgp4PathAttrNextHop.setStatus('deprecated')
nsBgp4PathAttrMultiExitDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgp4PathAttrMultiExitDisc.setStatus('deprecated')
nsBgp4PathAttrLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgp4PathAttrLocalPref.setStatus('deprecated')
nsBgp4PathAttrAtomicAggregate = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lessSpecificRrouteNotSelected", 1), ("lessSpecificRouteSelected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgp4PathAttrAtomicAggregate.setStatus('deprecated')
nsBgp4PathAttrAggregatorAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgp4PathAttrAggregatorAS.setStatus('deprecated')
nsBgp4PathAttrAggregatorAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 6, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgp4PathAttrAggregatorAddr.setStatus('deprecated')
nsBgp4PathAttrCalcLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 6, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgp4PathAttrCalcLocalPref.setStatus('deprecated')
nsBgp4PathAttrBest = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 6, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgp4PathAttrBest.setStatus('deprecated')
nsBgp4PathAttrUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 6, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgp4PathAttrUnknown.setStatus('deprecated')
nsBgp4PathAttrVRID = MibTableColumn((1, 3, 6, 1, 4, 1, 3224, 18, 3, 6, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nsBgp4PathAttrVRID.setStatus('deprecated')
nsBgpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 3224, 18, 3, 7))
nsBgpEstablished = NotificationType((1, 3, 6, 1, 4, 1, 3224, 18, 3, 7, 1)).setObjects(("NETSCREEN-TRAP-MIB", "netscreenTrapType"), ("NETSCREEN-TRAP-MIB", "netscreenTrapDesc"), ("NETSCREEN-BGP4-MIB", "nsBgpPeerIdentifier"), ("NETSCREEN-BGP4-MIB", "nsBgpPeerVRID"), ("NETSCREEN-BGP4-MIB", "nsBgpPeerLastError"), ("NETSCREEN-BGP4-MIB", "nsBgpPeerState"))
if mibBuilder.loadTexts: nsBgpEstablished.setStatus('deprecated')
mibBuilder.exportSymbols("NETSCREEN-BGP4-MIB", nsBgpPeerMinASOriginationInterval=nsBgpPeerMinASOriginationInterval, nsBgpTraps=nsBgpTraps, nsBgpInfoEntry=nsBgpInfoEntry, nsBgp4PathAttrVRID=nsBgp4PathAttrVRID, nsBgpPeerRemotePort=nsBgpPeerRemotePort, nsBgpPeerHoldTimeConfigured=nsBgpPeerHoldTimeConfigured, nsBgp4PathAttrAggregatorAS=nsBgp4PathAttrAggregatorAS, nsBgpInfoVersion=nsBgpInfoVersion, nsBgpPeerHoldTime=nsBgpPeerHoldTime, nsBgpPeerRemoteAs=nsBgpPeerRemoteAs, nsBgp4PathAttrLocalPref=nsBgp4PathAttrLocalPref, nsBgp4PathAttrTable=nsBgp4PathAttrTable, nsBgp=nsBgp, nsBgpPeerInUpdateElapsedTime=nsBgpPeerInUpdateElapsedTime, nsBgpPeerInTotalMessages=nsBgpPeerInTotalMessages, nsBgpPeerMinRouteAdvertisementInterval=nsBgpPeerMinRouteAdvertisementInterval, nsBgpPeerVRID=nsBgpPeerVRID, nsBgp4PathAttrPeer=nsBgp4PathAttrPeer, nsBgpPeerConnectRetryInterval=nsBgpPeerConnectRetryInterval, nsBgpPeerFsmEstablishedTransitions=nsBgpPeerFsmEstablishedTransitions, nsBgp4PathAttrAggregatorAddr=nsBgp4PathAttrAggregatorAddr, nsBgpPeerTable=nsBgpPeerTable, nsBgp4PathAttrCalcLocalPref=nsBgp4PathAttrCalcLocalPref, nsBgpInfoVRID=nsBgpInfoVRID, nsBgp4PathAttrOrigin=nsBgp4PathAttrOrigin, nsBgp4PathAttrAtomicAggregate=nsBgp4PathAttrAtomicAggregate, nsBgp4PathAttrBest=nsBgp4PathAttrBest, nsBgpPeerIdentifier=nsBgpPeerIdentifier, nsBgpPeerOutTotalMessages=nsBgpPeerOutTotalMessages, nsBgpPeerLastError=nsBgpPeerLastError, nsBgpInfoLocalAs=nsBgpInfoLocalAs, nsBgpPeerEntry=nsBgpPeerEntry, nsBgpPeerLocalPort=nsBgpPeerLocalPort, nsBgp4PathAttrIpAddrPrefixLen=nsBgp4PathAttrIpAddrPrefixLen, nsBgpEstablished=nsBgpEstablished, nsBgpPeerAdminStatus=nsBgpPeerAdminStatus, nsBgpInfoTable=nsBgpInfoTable, nsBgpPeerNegotiatedVersion=nsBgpPeerNegotiatedVersion, nsBgpPeerKeepAliveConfigured=nsBgpPeerKeepAliveConfigured, nsBgp4PathAttrUnknown=nsBgp4PathAttrUnknown, nsBgp4PathAttrMultiExitDisc=nsBgp4PathAttrMultiExitDisc, nsBgpPeerLocalAddr=nsBgpPeerLocalAddr, nsBgpPeerFsmEstablishedTime=nsBgpPeerFsmEstablishedTime, nsBgpInfoIdentifier=nsBgpInfoIdentifier, nsBgp4PathAttrNextHop=nsBgp4PathAttrNextHop, nsBgpPeerKeepAlive=nsBgpPeerKeepAlive, nsBgpPeerRemoteAddr=nsBgpPeerRemoteAddr, nsBgp4PathAttrIpAddrPrefix=nsBgp4PathAttrIpAddrPrefix, nsBgpPeerState=nsBgpPeerState, nsBgpPeerInUpdates=nsBgpPeerInUpdates, nsBgp4PathAttrASPathSegment=nsBgp4PathAttrASPathSegment, nsBgpPeerOutUpdates=nsBgpPeerOutUpdates, PYSNMP_MODULE_ID=nsBgp, nsBgp4PathAttrEntry=nsBgp4PathAttrEntry)
