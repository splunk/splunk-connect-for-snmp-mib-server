#
# PySNMP MIB module LLDP-EXT-DOT3-V2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LLDP-EXT-DOT3-V2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:57:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ifGeneralInformationGroup, = mibBuilder.importSymbols("IF-MIB", "ifGeneralInformationGroup")
lldpV2LocPortIfIndex, lldpV2RemLocalIfIndex, lldpV2RemIndex, lldpV2PortConfigEntry, lldpV2RemTimeMark, lldpV2RemLocalDestMACAddress, lldpV2Extensions = mibBuilder.importSymbols("LLDP-V2-MIB", "lldpV2LocPortIfIndex", "lldpV2RemLocalIfIndex", "lldpV2RemIndex", "lldpV2PortConfigEntry", "lldpV2RemTimeMark", "lldpV2RemLocalDestMACAddress", "lldpV2Extensions")
LldpV2PowerPortClass, = mibBuilder.importSymbols("LLDP-V2-TC-MIB", "LldpV2PowerPortClass")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Bits, Unsigned32, ObjectIdentity, Integer32, iso, ModuleIdentity, NotificationType, MibIdentifier, Counter64, TimeTicks, Counter32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Bits", "Unsigned32", "ObjectIdentity", "Integer32", "iso", "ModuleIdentity", "NotificationType", "MibIdentifier", "Counter64", "TimeTicks", "Counter32", "Gauge32")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
lldpV2Xdot3MIB = ModuleIdentity((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623))
lldpV2Xdot3MIB.setRevisions(('2009-06-08 00:00',))
if mibBuilder.loadTexts: lldpV2Xdot3MIB.setLastUpdated('200906080000Z')
if mibBuilder.loadTexts: lldpV2Xdot3MIB.setOrganization('IEEE 802.1 Working Group')
lldpV2Xdot3Objects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1))
lldpV2Xdot3Config = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 1))
lldpV2Xdot3LocalData = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2))
lldpV2Xdot3RemoteData = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3))
lldpV2Xdot3PortConfigTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 1, 1), )
if mibBuilder.loadTexts: lldpV2Xdot3PortConfigTable.setStatus('current')
lldpV2Xdot3PortConfigEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 1, 1, 1), )
lldpV2PortConfigEntry.registerAugmentions(("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3PortConfigEntry"))
lldpV2Xdot3PortConfigEntry.setIndexNames(*lldpV2PortConfigEntry.getIndexNames())
if mibBuilder.loadTexts: lldpV2Xdot3PortConfigEntry.setStatus('current')
lldpV2Xdot3PortConfigTLVsTxEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 1, 1, 1, 1), Bits().clone(namedValues=NamedValues(("macPhyConfigStatus", 0), ("powerViaMDI", 1), ("unused", 2), ("maxFrameSize", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lldpV2Xdot3PortConfigTLVsTxEnable.setStatus('current')
lldpV2Xdot3LocPortTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 1), )
if mibBuilder.loadTexts: lldpV2Xdot3LocPortTable.setStatus('current')
lldpV2Xdot3LocPortEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"))
if mibBuilder.loadTexts: lldpV2Xdot3LocPortEntry.setStatus('current')
lldpV2Xdot3LocPortAutoNegSupported = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPortAutoNegSupported.setStatus('current')
lldpV2Xdot3LocPortAutoNegEnabled = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPortAutoNegEnabled.setStatus('current')
lldpV2Xdot3LocPortAutoNegAdvertisedCap = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPortAutoNegAdvertisedCap.setStatus('current')
lldpV2Xdot3LocPortOperMauType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPortOperMauType.setStatus('current')
lldpV2Xdot3LocPowerTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 2), )
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerTable.setStatus('current')
lldpV2Xdot3LocPowerEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 2, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"))
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerEntry.setStatus('current')
lldpV2Xdot3LocPowerPortClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 2, 1, 1), LldpV2PowerPortClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerPortClass.setStatus('current')
lldpV2Xdot3LocPowerMDISupported = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerMDISupported.setStatus('current')
lldpV2Xdot3LocPowerMDIEnabled = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerMDIEnabled.setStatus('current')
lldpV2Xdot3LocPowerPairControlable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerPairControlable.setStatus('current')
lldpV2Xdot3LocPowerPairs = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerPairs.setStatus('current')
lldpV2Xdot3LocPowerClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), ValueRangeConstraint(5, 5), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocPowerClass.setStatus('current')
lldpV2Xdot3LocMaxFrameSizeTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 3), )
if mibBuilder.loadTexts: lldpV2Xdot3LocMaxFrameSizeTable.setStatus('current')
lldpV2Xdot3LocMaxFrameSizeEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 3, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2LocPortIfIndex"))
if mibBuilder.loadTexts: lldpV2Xdot3LocMaxFrameSizeEntry.setStatus('current')
lldpV2Xdot3LocMaxFrameSize = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 2, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3LocMaxFrameSize.setStatus('current')
lldpV2Xdot3RemPortTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 1), )
if mibBuilder.loadTexts: lldpV2Xdot3RemPortTable.setStatus('current')
lldpV2Xdot3RemPortEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 1, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"))
if mibBuilder.loadTexts: lldpV2Xdot3RemPortEntry.setStatus('current')
lldpV2Xdot3RemPortAutoNegSupported = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPortAutoNegSupported.setStatus('current')
lldpV2Xdot3RemPortAutoNegEnabled = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPortAutoNegEnabled.setStatus('current')
lldpV2Xdot3RemPortAutoNegAdvertisedCap = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPortAutoNegAdvertisedCap.setStatus('current')
lldpV2Xdot3RemPortOperMauType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPortOperMauType.setStatus('current')
lldpV2Xdot3RemPowerTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 2), )
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerTable.setStatus('current')
lldpV2Xdot3RemPowerEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 2, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"))
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerEntry.setStatus('current')
lldpV2Xdot3RemPowerPortClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 2, 1, 1), LldpV2PowerPortClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerPortClass.setStatus('current')
lldpV2Xdot3RemPowerMDISupported = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerMDISupported.setStatus('current')
lldpV2Xdot3RemPowerMDIEnabled = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerMDIEnabled.setStatus('current')
lldpV2Xdot3RemPowerPairControlable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerPairControlable.setStatus('current')
lldpV2Xdot3RemPowerPairs = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerPairs.setStatus('current')
lldpV2Xdot3RemPowerClass = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 1), ValueRangeConstraint(2, 2), ValueRangeConstraint(3, 3), ValueRangeConstraint(4, 4), ValueRangeConstraint(5, 5), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemPowerClass.setStatus('current')
lldpV2Xdot3RemMaxFrameSizeTable = MibTable((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 3), )
if mibBuilder.loadTexts: lldpV2Xdot3RemMaxFrameSizeTable.setStatus('current')
lldpV2Xdot3RemMaxFrameSizeEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 3, 1), ).setIndexNames((0, "LLDP-V2-MIB", "lldpV2RemTimeMark"), (0, "LLDP-V2-MIB", "lldpV2RemLocalIfIndex"), (0, "LLDP-V2-MIB", "lldpV2RemLocalDestMACAddress"), (0, "LLDP-V2-MIB", "lldpV2RemIndex"))
if mibBuilder.loadTexts: lldpV2Xdot3RemMaxFrameSizeEntry.setStatus('current')
lldpV2Xdot3RemMaxFrameSize = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 1, 3, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: lldpV2Xdot3RemMaxFrameSize.setStatus('current')
lldpV2Xdot3Conformance = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 2))
lldpV2Xdot3Compliances = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 2, 1))
lldpV2Xdot3Groups = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 2, 2))
lldpV2Xdot3TxRxCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 2, 1, 1)).setObjects(("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3ConfigGroup"), ("LLDP-EXT-DOT3-V2-MIB", "ifGeneralInformationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot3TxRxCompliance = lldpV2Xdot3TxRxCompliance.setStatus('current')
lldpV2Xdot3TxCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 2, 1, 2)).setObjects(("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocSysGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot3TxCompliance = lldpV2Xdot3TxCompliance.setStatus('current')
lldpV2Xdot3RxCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 2, 1, 3)).setObjects(("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemSysGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot3RxCompliance = lldpV2Xdot3RxCompliance.setStatus('current')
lldpV2Xdot3ConfigGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 2, 2, 1)).setObjects(("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3PortConfigTLVsTxEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot3ConfigGroup = lldpV2Xdot3ConfigGroup.setStatus('current')
lldpV2Xdot3LocSysGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 2, 2, 2)).setObjects(("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPortAutoNegSupported"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPortAutoNegEnabled"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPortAutoNegAdvertisedCap"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPortOperMauType"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPowerPortClass"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPowerMDISupported"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPowerMDIEnabled"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPowerPairControlable"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPowerPairs"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocPowerClass"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3LocMaxFrameSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot3LocSysGroup = lldpV2Xdot3LocSysGroup.setStatus('current')
lldpV2Xdot3RemSysGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 13, 1, 5, 4623, 2, 2, 3)).setObjects(("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPortAutoNegSupported"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPortAutoNegEnabled"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPortAutoNegAdvertisedCap"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPortOperMauType"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPowerPortClass"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPowerMDISupported"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPowerMDIEnabled"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPowerPairControlable"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPowerPairs"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemPowerClass"), ("LLDP-EXT-DOT3-V2-MIB", "lldpV2Xdot3RemMaxFrameSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lldpV2Xdot3RemSysGroup = lldpV2Xdot3RemSysGroup.setStatus('current')
mibBuilder.exportSymbols("LLDP-EXT-DOT3-V2-MIB", lldpV2Xdot3RemPowerEntry=lldpV2Xdot3RemPowerEntry, lldpV2Xdot3RemPowerPairs=lldpV2Xdot3RemPowerPairs, PYSNMP_MODULE_ID=lldpV2Xdot3MIB, lldpV2Xdot3RemPortTable=lldpV2Xdot3RemPortTable, lldpV2Xdot3PortConfigTable=lldpV2Xdot3PortConfigTable, lldpV2Xdot3LocalData=lldpV2Xdot3LocalData, lldpV2Xdot3RemPortAutoNegEnabled=lldpV2Xdot3RemPortAutoNegEnabled, lldpV2Xdot3LocPowerPairs=lldpV2Xdot3LocPowerPairs, lldpV2Xdot3RemPowerPairControlable=lldpV2Xdot3RemPowerPairControlable, lldpV2Xdot3TxRxCompliance=lldpV2Xdot3TxRxCompliance, lldpV2Xdot3TxCompliance=lldpV2Xdot3TxCompliance, lldpV2Xdot3RxCompliance=lldpV2Xdot3RxCompliance, lldpV2Xdot3RemPortAutoNegSupported=lldpV2Xdot3RemPortAutoNegSupported, lldpV2Xdot3LocPowerPairControlable=lldpV2Xdot3LocPowerPairControlable, lldpV2Xdot3RemoteData=lldpV2Xdot3RemoteData, lldpV2Xdot3LocPowerMDIEnabled=lldpV2Xdot3LocPowerMDIEnabled, lldpV2Xdot3LocPortAutoNegAdvertisedCap=lldpV2Xdot3LocPortAutoNegAdvertisedCap, lldpV2Xdot3Compliances=lldpV2Xdot3Compliances, lldpV2Xdot3RemPowerMDISupported=lldpV2Xdot3RemPowerMDISupported, lldpV2Xdot3LocPowerEntry=lldpV2Xdot3LocPowerEntry, lldpV2Xdot3LocPortOperMauType=lldpV2Xdot3LocPortOperMauType, lldpV2Xdot3LocPowerTable=lldpV2Xdot3LocPowerTable, lldpV2Xdot3LocPortAutoNegSupported=lldpV2Xdot3LocPortAutoNegSupported, lldpV2Xdot3Groups=lldpV2Xdot3Groups, lldpV2Xdot3MIB=lldpV2Xdot3MIB, lldpV2Xdot3RemPowerMDIEnabled=lldpV2Xdot3RemPowerMDIEnabled, lldpV2Xdot3Conformance=lldpV2Xdot3Conformance, lldpV2Xdot3RemPortAutoNegAdvertisedCap=lldpV2Xdot3RemPortAutoNegAdvertisedCap, lldpV2Xdot3LocSysGroup=lldpV2Xdot3LocSysGroup, lldpV2Xdot3RemPortEntry=lldpV2Xdot3RemPortEntry, lldpV2Xdot3RemMaxFrameSizeTable=lldpV2Xdot3RemMaxFrameSizeTable, lldpV2Xdot3Config=lldpV2Xdot3Config, lldpV2Xdot3LocPortAutoNegEnabled=lldpV2Xdot3LocPortAutoNegEnabled, lldpV2Xdot3ConfigGroup=lldpV2Xdot3ConfigGroup, lldpV2Xdot3RemSysGroup=lldpV2Xdot3RemSysGroup, lldpV2Xdot3RemPowerTable=lldpV2Xdot3RemPowerTable, lldpV2Xdot3RemPortOperMauType=lldpV2Xdot3RemPortOperMauType, lldpV2Xdot3RemMaxFrameSize=lldpV2Xdot3RemMaxFrameSize, lldpV2Xdot3LocPortTable=lldpV2Xdot3LocPortTable, lldpV2Xdot3PortConfigEntry=lldpV2Xdot3PortConfigEntry, lldpV2Xdot3RemPowerClass=lldpV2Xdot3RemPowerClass, lldpV2Xdot3LocMaxFrameSizeTable=lldpV2Xdot3LocMaxFrameSizeTable, lldpV2Xdot3LocPowerPortClass=lldpV2Xdot3LocPowerPortClass, lldpV2Xdot3LocMaxFrameSize=lldpV2Xdot3LocMaxFrameSize, lldpV2Xdot3LocPowerClass=lldpV2Xdot3LocPowerClass, lldpV2Xdot3RemMaxFrameSizeEntry=lldpV2Xdot3RemMaxFrameSizeEntry, lldpV2Xdot3LocPowerMDISupported=lldpV2Xdot3LocPowerMDISupported, lldpV2Xdot3RemPowerPortClass=lldpV2Xdot3RemPowerPortClass, lldpV2Xdot3LocMaxFrameSizeEntry=lldpV2Xdot3LocMaxFrameSizeEntry, lldpV2Xdot3Objects=lldpV2Xdot3Objects, lldpV2Xdot3PortConfigTLVsTxEnable=lldpV2Xdot3PortConfigTLVsTxEnable, lldpV2Xdot3LocPortEntry=lldpV2Xdot3LocPortEntry)
