#
# PySNMP MIB module TPT-PORT-MAPPING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TPT-PORT-MAPPING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:19:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, Gauge32, IpAddress, ObjectIdentity, Unsigned32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, TimeTicks, NotificationType, MibIdentifier, Integer32, Counter64, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Gauge32", "IpAddress", "ObjectIdentity", "Unsigned32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "TimeTicks", "NotificationType", "MibIdentifier", "Integer32", "Counter64", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
tpt_tpa_objs, = mibBuilder.importSymbols("TPT-TPAMIBS-MIB", "tpt-tpa-objs")
tpt_port_mapping_objs = ModuleIdentity((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 16)).setLabel("tpt-port-mapping-objs")
tpt_port_mapping_objs.setRevisions(('2016-10-03 12:00', '2016-05-25 18:54',))
if mibBuilder.loadTexts: tpt_port_mapping_objs.setLastUpdated('201610031200Z')
if mibBuilder.loadTexts: tpt_port_mapping_objs.setOrganization('Trend Micro, Inc.')
portMappingTable = MibTable((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 16, 1), )
if mibBuilder.loadTexts: portMappingTable.setStatus('current')
portMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 16, 1, 1), ).setIndexNames((0, "TPT-PORT-MAPPING-MIB", "portMappingLogicalSlot"), (0, "TPT-PORT-MAPPING-MIB", "portMappingLogicalPort"))
if mibBuilder.loadTexts: portMappingEntry.setStatus('current')
portMappingLogicalSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 16, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portMappingLogicalSlot.setStatus('current')
portMappingLogicalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 16, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portMappingLogicalPort.setStatus('current')
portMappingLogicalIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 16, 1, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portMappingLogicalIfIndex.setStatus('current')
portMappingPhysicalSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 16, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portMappingPhysicalSlot.setStatus('current')
portMappingPhysicalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 16, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portMappingPhysicalPort.setStatus('current')
portMappingPhysicalIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 16, 1, 1, 6), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portMappingPhysicalIfIndex.setStatus('current')
portMappingSegmentName = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 16, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portMappingSegmentName.setStatus('obsolete')
portMappingPhysicalVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 10734, 3, 3, 2, 16, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portMappingPhysicalVlanId.setStatus('current')
mibBuilder.exportSymbols("TPT-PORT-MAPPING-MIB", tpt_port_mapping_objs=tpt_port_mapping_objs, portMappingPhysicalPort=portMappingPhysicalPort, portMappingPhysicalSlot=portMappingPhysicalSlot, PYSNMP_MODULE_ID=tpt_port_mapping_objs, portMappingPhysicalVlanId=portMappingPhysicalVlanId, portMappingEntry=portMappingEntry, portMappingTable=portMappingTable, portMappingPhysicalIfIndex=portMappingPhysicalIfIndex, portMappingLogicalPort=portMappingLogicalPort, portMappingLogicalSlot=portMappingLogicalSlot, portMappingLogicalIfIndex=portMappingLogicalIfIndex, portMappingSegmentName=portMappingSegmentName)
