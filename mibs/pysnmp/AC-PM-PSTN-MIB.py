#
# PySNMP MIB module AC-PM-PSTN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/AC-PM-PSTN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:54:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
acPerformance, audioCodes, acProducts, acBoardMibs, acGeneric, acRegistrations = mibBuilder.importSymbols("AUDIOCODES-TYPES-MIB", "acPerformance", "audioCodes", "acProducts", "acBoardMibs", "acGeneric", "acRegistrations")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, iso, TimeTicks, Counter64, Counter32, NotificationType, Gauge32, ObjectIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, enterprises, ModuleIdentity, Bits, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "TimeTicks", "Counter64", "Counter32", "NotificationType", "Gauge32", "ObjectIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "enterprises", "ModuleIdentity", "Bits", "Unsigned32")
DateAndTime, TAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TAddress", "DisplayString", "TextualConvention")
acPMPSTN = ModuleIdentity((1, 3, 6, 1, 4, 1, 5003, 10, 10))
if mibBuilder.loadTexts: acPMPSTN.setLastUpdated('200902050516Z')
if mibBuilder.loadTexts: acPMPSTN.setOrganization('AudioCodes Ltd')
acPMPSTNConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 10, 1))
acPMPSTNConfigurationPeriodLength = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 894780))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMPSTNConfigurationPeriodLength.setStatus('current')
acPMPSTNConfigurationResetTotalCounters = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("resetCountersDone", 1), ("resetTotalCounters", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMPSTNConfigurationResetTotalCounters.setStatus('current')
acPMTrunkUtilizationAttributes = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 10, 1, 31))
acPMTrunkUtilizationAttributesHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 10, 1, 31, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMTrunkUtilizationAttributesHighThreshold.setStatus('current')
acPMTrunkUtilizationAttributesLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 10, 1, 31, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMTrunkUtilizationAttributesLowThreshold.setStatus('current')
acPMPSTNChannelsAttributes = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 10, 1, 32))
acPMPSTNChannelsAttributesInServiceHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 10, 1, 32, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMPSTNChannelsAttributesInServiceHighThreshold.setStatus('current')
acPMPSTNChannelsAttributesInServiceLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 10, 1, 32, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMPSTNChannelsAttributesInServiceLowThreshold.setStatus('current')
acPMPSTNChannelsAttributesOutOfServiceHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 10, 1, 32, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMPSTNChannelsAttributesOutOfServiceHighThreshold.setStatus('current')
acPMPSTNChannelsAttributesOutOfServiceLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 10, 1, 32, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMPSTNChannelsAttributesOutOfServiceLowThreshold.setStatus('current')
acPMPSTNChannelsAttributesInMaintenanceHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 10, 1, 32, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMPSTNChannelsAttributesInMaintenanceHighThreshold.setStatus('current')
acPMPSTNChannelsAttributesInMaintenanceLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 10, 1, 32, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acPMPSTNChannelsAttributesInMaintenanceLowThreshold.setStatus('current')
acPMPSTNData = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2))
acPMPSTNDataAcPMPSTNTimeFromStartOfInterval = MibScalar((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNDataAcPMPSTNTimeFromStartOfInterval.setStatus('current')
acPMTrunkUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 21), )
if mibBuilder.loadTexts: acPMTrunkUtilizationTable.setStatus('current')
acPMTrunkUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 21, 1), ).setIndexNames((0, "AC-PM-PSTN-MIB", "acPMTrunkUtilizationTrunkNum"), (0, "AC-PM-PSTN-MIB", "acPMTrunkUtilizationInterval"))
if mibBuilder.loadTexts: acPMTrunkUtilizationEntry.setStatus('current')
acPMTrunkUtilizationTrunkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 83)))
if mibBuilder.loadTexts: acPMTrunkUtilizationTrunkNum.setStatus('current')
acPMTrunkUtilizationInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 21, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMTrunkUtilizationInterval.setStatus('current')
acPMTrunkUtilizationVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 21, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTrunkUtilizationVal.setStatus('current')
acPMTrunkUtilizationAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 21, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTrunkUtilizationAverage.setStatus('current')
acPMTrunkUtilizationMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 21, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTrunkUtilizationMax.setStatus('current')
acPMTrunkUtilizationMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 21, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTrunkUtilizationMin.setStatus('current')
acPMTrunkUtilizationVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 21, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTrunkUtilizationVolume.setStatus('current')
acPMTrunkUtilizationTimeBelowLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 21, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTrunkUtilizationTimeBelowLowThreshold.setStatus('current')
acPMTrunkUtilizationTimeBetweenThresholds = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 21, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTrunkUtilizationTimeBetweenThresholds.setStatus('current')
acPMTrunkUtilizationTimeAboveHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 21, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTrunkUtilizationTimeAboveHighThreshold.setStatus('current')
acPMTrunkUtilizationFullDayAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 21, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTrunkUtilizationFullDayAverage.setStatus('current')
acPMTrunkUtilizationTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 21, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMTrunkUtilizationTotal.setStatus('current')
acPMPSTNTrunkActivitySecondsTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 22), )
if mibBuilder.loadTexts: acPMPSTNTrunkActivitySecondsTable.setStatus('current')
acPMPSTNTrunkActivitySecondsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 22, 1), ).setIndexNames((0, "AC-PM-PSTN-MIB", "acPMPSTNTrunkActivitySecondsTrunkNum"), (0, "AC-PM-PSTN-MIB", "acPMPSTNTrunkActivitySecondsInterval"))
if mibBuilder.loadTexts: acPMPSTNTrunkActivitySecondsEntry.setStatus('current')
acPMPSTNTrunkActivitySecondsTrunkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 22, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 83)))
if mibBuilder.loadTexts: acPMPSTNTrunkActivitySecondsTrunkNum.setStatus('current')
acPMPSTNTrunkActivitySecondsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 22, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMPSTNTrunkActivitySecondsInterval.setStatus('current')
acPMPSTNTrunkActivitySecondsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 22, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNTrunkActivitySecondsVal.setStatus('current')
acPMPSTNTrunkActivitySecondsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 22, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNTrunkActivitySecondsTotal.setStatus('current')
acPMPSTNTrunkActivitySecondsVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 22, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNTrunkActivitySecondsVolume.setStatus('current')
acPMPSTNChannels = MibIdentifier((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31))
acPMPSTNNumOfChannelsInServiceTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 1), )
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsInServiceTable.setStatus('current')
acPMPSTNNumOfChannelsInServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 1, 1), ).setIndexNames((0, "AC-PM-PSTN-MIB", "acPMPSTNNumOfChannelsInServiceTrunkNum"), (0, "AC-PM-PSTN-MIB", "acPMPSTNNumOfChannelsInServiceInterval"))
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsInServiceEntry.setStatus('current')
acPMPSTNNumOfChannelsInServiceTrunkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 83)))
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsInServiceTrunkNum.setStatus('current')
acPMPSTNNumOfChannelsInServiceInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsInServiceInterval.setStatus('current')
acPMPSTNNumOfChannelsInServiceVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 1, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsInServiceVal.setStatus('current')
acPMPSTNNumOfChannelsInServiceAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsInServiceAverage.setStatus('current')
acPMPSTNNumOfChannelsInServiceMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsInServiceMax.setStatus('current')
acPMPSTNNumOfChannelsInServiceMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsInServiceMin.setStatus('current')
acPMPSTNNumOfChannelsInServiceVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsInServiceVolume.setStatus('current')
acPMPSTNNumOfChannelsOutOfServiceTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 2), )
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsOutOfServiceTable.setStatus('current')
acPMPSTNNumOfChannelsOutOfServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 2, 1), ).setIndexNames((0, "AC-PM-PSTN-MIB", "acPMPSTNNumOfChannelsOutOfServiceTrunkNum"), (0, "AC-PM-PSTN-MIB", "acPMPSTNNumOfChannelsOutOfServiceInterval"))
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsOutOfServiceEntry.setStatus('current')
acPMPSTNNumOfChannelsOutOfServiceTrunkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 83)))
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsOutOfServiceTrunkNum.setStatus('current')
acPMPSTNNumOfChannelsOutOfServiceInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsOutOfServiceInterval.setStatus('current')
acPMPSTNNumOfChannelsOutOfServiceVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsOutOfServiceVal.setStatus('current')
acPMPSTNNumOfChannelsOutOfServiceAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsOutOfServiceAverage.setStatus('current')
acPMPSTNNumOfChannelsOutOfServiceMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsOutOfServiceMax.setStatus('current')
acPMPSTNNumOfChannelsOutOfServiceMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsOutOfServiceMin.setStatus('current')
acPMPSTNNumOfChannelsOutOfServiceVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsOutOfServiceVolume.setStatus('current')
acPMPSTNNumOfChannelsInMaintenanceTable = MibTable((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 3), )
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsInMaintenanceTable.setStatus('current')
acPMPSTNNumOfChannelsInMaintenanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 3, 1), ).setIndexNames((0, "AC-PM-PSTN-MIB", "acPMPSTNNumOfChannelsInMaintenanceTrunkNum"), (0, "AC-PM-PSTN-MIB", "acPMPSTNNumOfChannelsInMaintenanceInterval"))
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsInMaintenanceEntry.setStatus('current')
acPMPSTNNumOfChannelsInMaintenanceTrunkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 83)))
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsInMaintenanceTrunkNum.setStatus('current')
acPMPSTNNumOfChannelsInMaintenanceInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2)))
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsInMaintenanceInterval.setStatus('current')
acPMPSTNNumOfChannelsInMaintenanceVal = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsInMaintenanceVal.setStatus('current')
acPMPSTNNumOfChannelsInMaintenanceAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsInMaintenanceAverage.setStatus('current')
acPMPSTNNumOfChannelsInMaintenanceMax = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsInMaintenanceMax.setStatus('current')
acPMPSTNNumOfChannelsInMaintenanceMin = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsInMaintenanceMin.setStatus('current')
acPMPSTNNumOfChannelsInMaintenanceVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 5003, 10, 10, 2, 31, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acPMPSTNNumOfChannelsInMaintenanceVolume.setStatus('current')
mibBuilder.exportSymbols("AC-PM-PSTN-MIB", acPMTrunkUtilizationMin=acPMTrunkUtilizationMin, acPMPSTNChannelsAttributesInMaintenanceHighThreshold=acPMPSTNChannelsAttributesInMaintenanceHighThreshold, acPMPSTNNumOfChannelsOutOfServiceMin=acPMPSTNNumOfChannelsOutOfServiceMin, acPMPSTNNumOfChannelsInMaintenanceTrunkNum=acPMPSTNNumOfChannelsInMaintenanceTrunkNum, acPMPSTNNumOfChannelsOutOfServiceTrunkNum=acPMPSTNNumOfChannelsOutOfServiceTrunkNum, acPMPSTNConfigurationResetTotalCounters=acPMPSTNConfigurationResetTotalCounters, acPMTrunkUtilizationAttributesHighThreshold=acPMTrunkUtilizationAttributesHighThreshold, acPMPSTNTrunkActivitySecondsTotal=acPMPSTNTrunkActivitySecondsTotal, acPMPSTNNumOfChannelsInServiceMin=acPMPSTNNumOfChannelsInServiceMin, acPMPSTNChannelsAttributesInMaintenanceLowThreshold=acPMPSTNChannelsAttributesInMaintenanceLowThreshold, acPMPSTNTrunkActivitySecondsVal=acPMPSTNTrunkActivitySecondsVal, acPMTrunkUtilizationTimeBetweenThresholds=acPMTrunkUtilizationTimeBetweenThresholds, acPMPSTNTrunkActivitySecondsTable=acPMPSTNTrunkActivitySecondsTable, acPMPSTNNumOfChannelsInServiceVolume=acPMPSTNNumOfChannelsInServiceVolume, acPMPSTNChannelsAttributes=acPMPSTNChannelsAttributes, acPMTrunkUtilizationVal=acPMTrunkUtilizationVal, acPMPSTNNumOfChannelsInMaintenanceTable=acPMPSTNNumOfChannelsInMaintenanceTable, acPMPSTNNumOfChannelsInServiceAverage=acPMPSTNNumOfChannelsInServiceAverage, acPMPSTNChannelsAttributesInServiceHighThreshold=acPMPSTNChannelsAttributesInServiceHighThreshold, acPMTrunkUtilizationTimeAboveHighThreshold=acPMTrunkUtilizationTimeAboveHighThreshold, acPMTrunkUtilizationTotal=acPMTrunkUtilizationTotal, acPMTrunkUtilizationVolume=acPMTrunkUtilizationVolume, acPMPSTNChannelsAttributesOutOfServiceLowThreshold=acPMPSTNChannelsAttributesOutOfServiceLowThreshold, acPMPSTNNumOfChannelsInMaintenanceMin=acPMPSTNNumOfChannelsInMaintenanceMin, acPMTrunkUtilizationInterval=acPMTrunkUtilizationInterval, acPMPSTNNumOfChannelsInServiceVal=acPMPSTNNumOfChannelsInServiceVal, acPMPSTNNumOfChannelsInMaintenanceMax=acPMPSTNNumOfChannelsInMaintenanceMax, acPMTrunkUtilizationAttributesLowThreshold=acPMTrunkUtilizationAttributesLowThreshold, acPMPSTNNumOfChannelsOutOfServiceVal=acPMPSTNNumOfChannelsOutOfServiceVal, acPMTrunkUtilizationAverage=acPMTrunkUtilizationAverage, acPMPSTNTrunkActivitySecondsTrunkNum=acPMPSTNTrunkActivitySecondsTrunkNum, acPMPSTNNumOfChannelsOutOfServiceMax=acPMPSTNNumOfChannelsOutOfServiceMax, acPMPSTNNumOfChannelsInMaintenanceInterval=acPMPSTNNumOfChannelsInMaintenanceInterval, acPMPSTNTrunkActivitySecondsInterval=acPMPSTNTrunkActivitySecondsInterval, acPMPSTNNumOfChannelsInMaintenanceVolume=acPMPSTNNumOfChannelsInMaintenanceVolume, PYSNMP_MODULE_ID=acPMPSTN, acPMPSTNTrunkActivitySecondsEntry=acPMPSTNTrunkActivitySecondsEntry, acPMTrunkUtilizationTable=acPMTrunkUtilizationTable, acPMTrunkUtilizationMax=acPMTrunkUtilizationMax, acPMTrunkUtilizationTimeBelowLowThreshold=acPMTrunkUtilizationTimeBelowLowThreshold, acPMPSTNNumOfChannelsOutOfServiceEntry=acPMPSTNNumOfChannelsOutOfServiceEntry, acPMTrunkUtilizationTrunkNum=acPMTrunkUtilizationTrunkNum, acPMPSTN=acPMPSTN, acPMPSTNNumOfChannelsOutOfServiceTable=acPMPSTNNumOfChannelsOutOfServiceTable, acPMPSTNNumOfChannelsOutOfServiceInterval=acPMPSTNNumOfChannelsOutOfServiceInterval, acPMPSTNNumOfChannelsInServiceEntry=acPMPSTNNumOfChannelsInServiceEntry, acPMPSTNNumOfChannelsInServiceTable=acPMPSTNNumOfChannelsInServiceTable, acPMTrunkUtilizationEntry=acPMTrunkUtilizationEntry, acPMPSTNDataAcPMPSTNTimeFromStartOfInterval=acPMPSTNDataAcPMPSTNTimeFromStartOfInterval, acPMPSTNChannelsAttributesOutOfServiceHighThreshold=acPMPSTNChannelsAttributesOutOfServiceHighThreshold, acPMTrunkUtilizationAttributes=acPMTrunkUtilizationAttributes, acPMTrunkUtilizationFullDayAverage=acPMTrunkUtilizationFullDayAverage, acPMPSTNChannels=acPMPSTNChannels, acPMPSTNNumOfChannelsInServiceTrunkNum=acPMPSTNNumOfChannelsInServiceTrunkNum, acPMPSTNNumOfChannelsInServiceMax=acPMPSTNNumOfChannelsInServiceMax, acPMPSTNNumOfChannelsOutOfServiceAverage=acPMPSTNNumOfChannelsOutOfServiceAverage, acPMPSTNNumOfChannelsOutOfServiceVolume=acPMPSTNNumOfChannelsOutOfServiceVolume, acPMPSTNData=acPMPSTNData, acPMPSTNConfiguration=acPMPSTNConfiguration, acPMPSTNNumOfChannelsInServiceInterval=acPMPSTNNumOfChannelsInServiceInterval, acPMPSTNNumOfChannelsInMaintenanceAverage=acPMPSTNNumOfChannelsInMaintenanceAverage, acPMPSTNConfigurationPeriodLength=acPMPSTNConfigurationPeriodLength, acPMPSTNChannelsAttributesInServiceLowThreshold=acPMPSTNChannelsAttributesInServiceLowThreshold, acPMPSTNTrunkActivitySecondsVolume=acPMPSTNTrunkActivitySecondsVolume, acPMPSTNNumOfChannelsInMaintenanceEntry=acPMPSTNNumOfChannelsInMaintenanceEntry, acPMPSTNNumOfChannelsInMaintenanceVal=acPMPSTNNumOfChannelsInMaintenanceVal)
