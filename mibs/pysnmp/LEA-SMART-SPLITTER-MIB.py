#
# PySNMP MIB module LEA-SMART-SPLITTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LEA-SMART-SPLITTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:55:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint")
leaSplitters, = mibBuilder.importSymbols("LEA-MIB", "leaSplitters")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ObjectIdentity, MibIdentifier, Counter32, IpAddress, Bits, Gauge32, iso, ModuleIdentity, TimeTicks, Unsigned32, Counter64, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ObjectIdentity", "MibIdentifier", "Counter32", "IpAddress", "Bits", "Gauge32", "iso", "ModuleIdentity", "TimeTicks", "Unsigned32", "Counter64", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
leaSmartSplitter = ModuleIdentity((1, 3, 6, 1, 4, 1, 14841, 1, 1))
leaSmartSplitter.setRevisions(('2002-09-26 00:00',))
if mibBuilder.loadTexts: leaSmartSplitter.setLastUpdated('200210040000Z')
if mibBuilder.loadTexts: leaSmartSplitter.setOrganization('www.leacom.fr')
splitterRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 14841, 1, 1, 1))
relayActiveDuration = MibScalar((1, 3, 6, 1, 4, 1, 14841, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: relayActiveDuration.setStatus('current')
numberOfActiveRelays = MibScalar((1, 3, 6, 1, 4, 1, 14841, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberOfActiveRelays.setStatus('current')
heartBeat = MibScalar((1, 3, 6, 1, 4, 1, 14841, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ack", 1))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: heartBeat.setStatus('current')
relayTable = MibTable((1, 3, 6, 1, 4, 1, 14841, 1, 1, 1, 4), )
if mibBuilder.loadTexts: relayTable.setStatus('current')
relayTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 14841, 1, 1, 1, 4, 1), ).setIndexNames((0, "LEA-SMART-SPLITTER-MIB", "relayIndex"))
if mibBuilder.loadTexts: relayTableEntry.setStatus('current')
relayIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 14841, 1, 1, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: relayIndex.setStatus('current')
relaySlot = MibTableColumn((1, 3, 6, 1, 4, 1, 14841, 1, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("Slot-1", 1), ("Slot-2", 2), ("Slot-3", 3), ("Slot-4", 4), ("Slot-5", 5), ("Slot-6", 6), ("Slot-7", 7), ("Slot-8", 8), ("Slot-9", 9), ("Slot-10", 10), ("Slot-11", 11), ("Slot-12", 12), ("Slot-13", 13), ("Slot-14", 14), ("Slot-15", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: relaySlot.setStatus('current')
relayPort = MibTableColumn((1, 3, 6, 1, 4, 1, 14841, 1, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("Port-1", 1), ("Port-2", 2), ("Port-3", 3), ("Port-4", 4), ("Port-5", 5), ("Port-6", 6), ("Port-7", 7), ("Port-8", 8), ("Port-9", 9), ("Port-10", 10), ("Port-11", 11), ("Port-12", 12), ("Port-13", 13), ("Port-14", 14), ("Port-15", 15), ("Port-16", 16), ("Port-17", 17), ("Port-18", 18), ("Port-19", 19), ("Port-20", 20), ("Port-21", 21), ("Port-22", 22), ("Port-23", 23), ("Port-24", 24)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: relayPort.setStatus('current')
relayStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 14841, 1, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("closed", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: relayStatus.setStatus('current')
relayResetAll = MibScalar((1, 3, 6, 1, 4, 1, 14841, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unchanged", 1), ("reset", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: relayResetAll.setStatus('current')
relayChangeNotification = MibScalar((1, 3, 6, 1, 4, 1, 14841, 1, 1, 1, 6), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: relayChangeNotification.setStatus('current')
mibBuilder.exportSymbols("LEA-SMART-SPLITTER-MIB", relayIndex=relayIndex, PYSNMP_MODULE_ID=leaSmartSplitter, relayChangeNotification=relayChangeNotification, relayStatus=relayStatus, leaSmartSplitter=leaSmartSplitter, splitterRelay=splitterRelay, relayResetAll=relayResetAll, relaySlot=relaySlot, numberOfActiveRelays=numberOfActiveRelays, relayTable=relayTable, relayPort=relayPort, relayTableEntry=relayTableEntry, relayActiveDuration=relayActiveDuration, heartBeat=heartBeat)
