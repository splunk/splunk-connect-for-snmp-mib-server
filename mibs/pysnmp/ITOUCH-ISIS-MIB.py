#
# PySNMP MIB module ITOUCH-ISIS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ITOUCH-ISIS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:46:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
iTouch, = mibBuilder.importSymbols("ITOUCH-MIB", "iTouch")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, ModuleIdentity, ObjectIdentity, iso, Counter64, NotificationType, IpAddress, Bits, Gauge32, MibIdentifier, Counter32, Unsigned32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ModuleIdentity", "ObjectIdentity", "iso", "Counter64", "NotificationType", "IpAddress", "Bits", "Gauge32", "MibIdentifier", "Counter32", "Unsigned32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class ExistState(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("off", 1), ("on", 2))

class SupportedProtocol(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(129, 204))
    namedValues = NamedValues(("iso8473", 129), ("ip", 204))

xIsis = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 26))
xIsisSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 26, 1))
xIsisCirc = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 26, 2))
xIsisISAdj = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 26, 3))
xIsisESAdj = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 26, 4))
xIsisReachAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 26, 5))
xIsisCLNPDest = MibIdentifier((1, 3, 6, 1, 4, 1, 33, 26, 7))
xIsisSysTable = MibTable((1, 3, 6, 1, 4, 1, 33, 26, 1, 1), )
if mibBuilder.loadTexts: xIsisSysTable.setStatus('mandatory')
xIsisSysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1), ).setIndexNames((0, "ITOUCH-ISIS-MIB", "xIsisSysInstance"))
if mibBuilder.loadTexts: xIsisSysEntry.setStatus('mandatory')
xIsisSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisSysInstance.setStatus('mandatory')
xIsisSysExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisSysExistState.setStatus('mandatory')
xIsisSysVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisSysVersion.setStatus('mandatory')
xIsisSysType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1IS", 1), ("level2IS", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisSysType.setStatus('mandatory')
xIsisSysNET = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisSysNET.setStatus('mandatory')
xIsisSysMaxPathSplits = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisSysMaxPathSplits.setStatus('mandatory')
xIsisSysMinLSPTransInt = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisSysMinLSPTransInt.setStatus('mandatory')
xIsisSysMaxLSPGenInt = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisSysMaxLSPGenInt.setStatus('mandatory')
xIsisSysMinBroadLSPTransInt = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisSysMinBroadLSPTransInt.setStatus('mandatory')
xIsisSysCompSNPInt = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisSysCompSNPInt.setStatus('mandatory')
xIsisSysOrigL1LSPBuffSize = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 1492))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisSysOrigL1LSPBuffSize.setStatus('mandatory')
xIsisSysMaxAreaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 254))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisSysMaxAreaAddr.setStatus('mandatory')
xIsisSysMinLSPGenInt = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisSysMinLSPGenInt.setStatus('mandatory')
xIsisSysPollESHelloRate = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisSysPollESHelloRate.setStatus('mandatory')
xIsisSysPartSNPInt = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisSysPartSNPInt.setStatus('mandatory')
xIsisSysWaitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisSysWaitTime.setStatus('mandatory')
xIsisSysDRISISHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisSysDRISISHelloTimer.setStatus('mandatory')
xIsisSysOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisSysOperState.setStatus('mandatory')
xIsisSysL1State = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("waiting", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisSysL1State.setStatus('mandatory')
xIsisSysCorrLSPs = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisSysCorrLSPs.setStatus('mandatory')
xIsisSysL1LSPDbaseOloads = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisSysL1LSPDbaseOloads.setStatus('mandatory')
xIsisSysManAddrsDropFromArea = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisSysManAddrsDropFromArea.setStatus('mandatory')
xIsisSysAttmptsToExMaxSeqNum = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisSysAttmptsToExMaxSeqNum.setStatus('mandatory')
xIsisSysSeqNumSkips = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisSysSeqNumSkips.setStatus('mandatory')
xIsisSysOwnLSPPurges = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisSysOwnLSPPurges.setStatus('mandatory')
xIsisSysIDFieldLenMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisSysIDFieldLenMismatches.setStatus('mandatory')
xIsisSysMaxAreaMis = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisSysMaxAreaMis.setStatus('mandatory')
xIsisSysOrigL2LSPBuffSize = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 1492))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisSysOrigL2LSPBuffSize.setStatus('mandatory')
xIsisSysL2State = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("waiting", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisSysL2State.setStatus('mandatory')
xIsisSysL2LSPDbaseOloads = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisSysL2LSPDbaseOloads.setStatus('mandatory')
xIsisSysMaxAreaCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 1, 1, 31), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisSysMaxAreaCheck.setStatus('mandatory')
xIsisManAreaAddrTable = MibTable((1, 3, 6, 1, 4, 1, 33, 26, 1, 2), )
if mibBuilder.loadTexts: xIsisManAreaAddrTable.setStatus('mandatory')
xIsisManAreaAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 26, 1, 2, 1), ).setIndexNames((0, "ITOUCH-ISIS-MIB", "xIsisManAreaAddrSysInstance"), (0, "ITOUCH-ISIS-MIB", "xIsisManAreaAddr"))
if mibBuilder.loadTexts: xIsisManAreaAddrEntry.setStatus('mandatory')
xIsisManAreaAddrSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisManAreaAddrSysInstance.setStatus('mandatory')
xIsisManAreaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisManAreaAddr.setStatus('mandatory')
xIsisManAreaAddrExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisManAreaAddrExistState.setStatus('mandatory')
xIsisAreaAddrTable = MibTable((1, 3, 6, 1, 4, 1, 33, 26, 1, 3), )
if mibBuilder.loadTexts: xIsisAreaAddrTable.setStatus('mandatory')
xIsisAreaAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 26, 1, 3, 1), ).setIndexNames((0, "ITOUCH-ISIS-MIB", "xIsisAreaAddrSysInstance"), (0, "ITOUCH-ISIS-MIB", "xIsisAreaAddr"))
if mibBuilder.loadTexts: xIsisAreaAddrEntry.setStatus('mandatory')
xIsisAreaAddrSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisAreaAddrSysInstance.setStatus('mandatory')
xIsisAreaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisAreaAddr.setStatus('mandatory')
xIsisSysProtSuppTable = MibTable((1, 3, 6, 1, 4, 1, 33, 26, 1, 4), )
if mibBuilder.loadTexts: xIsisSysProtSuppTable.setStatus('mandatory')
xIsisSysProtSuppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 26, 1, 4, 1), ).setIndexNames((0, "ITOUCH-ISIS-MIB", "xIsisSysProtSuppSysInstance"), (0, "ITOUCH-ISIS-MIB", "xIsisSysProtSuppProtocol"))
if mibBuilder.loadTexts: xIsisSysProtSuppEntry.setStatus('mandatory')
xIsisSysProtSuppSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisSysProtSuppSysInstance.setStatus('mandatory')
xIsisSysProtSuppProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 4, 1, 2), SupportedProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisSysProtSuppProtocol.setStatus('mandatory')
xIsisSysProtSuppExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 1, 4, 1, 3), ExistState().clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisSysProtSuppExistState.setStatus('mandatory')
xIsisCircTable = MibTable((1, 3, 6, 1, 4, 1, 33, 26, 2, 1), )
if mibBuilder.loadTexts: xIsisCircTable.setStatus('mandatory')
xIsisCircEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1), ).setIndexNames((0, "ITOUCH-ISIS-MIB", "xIsisCircSysInstance"), (0, "ITOUCH-ISIS-MIB", "xIsisCircIndex"))
if mibBuilder.loadTexts: xIsisCircEntry.setStatus('mandatory')
xIsisCircSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircSysInstance.setStatus('mandatory')
xIsisCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircIndex.setStatus('mandatory')
xIsisCircIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircIfIndex.setStatus('mandatory')
xIsisCircOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircOperState.setStatus('mandatory')
xIsisCircExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircExistState.setStatus('mandatory')
xIsisCircType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("broadcast", 2), ("ptToPt", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircType.setStatus('mandatory')
xIsisCircHelloTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircHelloTimer.setStatus('mandatory')
xIsisCircL1DefaultMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircL1DefaultMetric.setStatus('mandatory')
xIsisCircL1DelayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircL1DelayMetric.setStatus('mandatory')
xIsisCircL1ExpenseMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircL1ExpenseMetric.setStatus('mandatory')
xIsisCircL1ErrorMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircL1ErrorMetric.setStatus('mandatory')
xIsisCircExtDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircExtDomain.setStatus('mandatory')
xIsisCircAdjChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircAdjChanges.setStatus('mandatory')
xIsisCircInitFails = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircInitFails.setStatus('mandatory')
xIsisCircRejAdjs = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircRejAdjs.setStatus('mandatory')
xIsisCircOutCtrlPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircOutCtrlPDUs.setStatus('mandatory')
xIsisCircInCtrlPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircInCtrlPDUs.setStatus('mandatory')
xIsisCircIDFieldLenMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircIDFieldLenMismatches.setStatus('mandatory')
xIsisCircL2DefaultMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircL2DefaultMetric.setStatus('mandatory')
xIsisCircL2DelayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircL2DelayMetric.setStatus('mandatory')
xIsisCircL2ExpenseMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircL2ExpenseMetric.setStatus('mandatory')
xIsisCircL2ErrorMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircL2ErrorMetric.setStatus('mandatory')
xIsisCircManL2Only = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircManL2Only.setStatus('mandatory')
xIsisCircL1ISPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircL1ISPriority.setStatus('mandatory')
xIsisCircL1CircID = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 26), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircL1CircID.setStatus('mandatory')
xIsisCircL1DesIS = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 27), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircL1DesIS.setStatus('mandatory')
xIsisCircLANL1DesISChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircLANL1DesISChanges.setStatus('mandatory')
xIsisCircL2ISPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircL2ISPriority.setStatus('mandatory')
xIsisCircL2CircID = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 30), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircL2CircID.setStatus('mandatory')
xIsisCircL2DesIS = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 31), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircL2DesIS.setStatus('mandatory')
xIsisCircLANL2DesISChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircLANL2DesISChanges.setStatus('mandatory')
xIsisCircISTable = MibTable((1, 3, 6, 1, 4, 1, 33, 26, 2, 2), )
if mibBuilder.loadTexts: xIsisCircISTable.setStatus('mandatory')
xIsisCircISEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 26, 2, 2, 1), ).setIndexNames((0, "ITOUCH-ISIS-MIB", "xIsisCircISIndex"))
if mibBuilder.loadTexts: xIsisCircISEntry.setStatus('mandatory')
xIsisCircISSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircISSysInstance.setStatus('mandatory')
xIsisCircISIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircISIndex.setStatus('mandatory')
xIsisCircISExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircISExistState.setStatus('mandatory')
xIsisCircISOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircISOperState.setStatus('mandatory')
xIsisCircISHoldTimerMult = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircISHoldTimerMult.setStatus('mandatory')
xIsisCircISConfTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 2, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircISConfTimer.setStatus('mandatory')
xIsisCircISSuggESConfTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircISSuggESConfTimer.setStatus('mandatory')
xIsisCircISRedHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircISRedHoldTime.setStatus('mandatory')
xIsisCircISESReachChgs = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircISESReachChgs.setStatus('mandatory')
xIsisCircISInv9542PDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircISInv9542PDUs.setStatus('mandatory')
xIsisISAdjTable = MibTable((1, 3, 6, 1, 4, 1, 33, 26, 3, 1), )
if mibBuilder.loadTexts: xIsisISAdjTable.setStatus('mandatory')
xIsisISAdjEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 26, 3, 1, 1), ).setIndexNames((0, "ITOUCH-ISIS-MIB", "xIsisISAdjSysInstance"), (0, "ITOUCH-ISIS-MIB", "xIsisISAdjCircIndex"), (0, "ITOUCH-ISIS-MIB", "xIsisISAdjIndex"))
if mibBuilder.loadTexts: xIsisISAdjEntry.setStatus('mandatory')
xIsisISAdjSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjSysInstance.setStatus('mandatory')
xIsisISAdjCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjCircIndex.setStatus('mandatory')
xIsisISAdjIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjIndex.setStatus('mandatory')
xIsisISAdjState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("initializing", 1), ("up", 2), ("failed", 3), ("down", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjState.setStatus('mandatory')
xIsisISAdjNeighSNPAAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjNeighSNPAAddress.setStatus('mandatory')
xIsisISAdjNeighSysType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("intermediateSystem", 3), ("l1IntermediateSystem", 4), ("l2IntermediateSystem", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjNeighSysType.setStatus('mandatory')
xIsisISAdjNeighSysID = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 1, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjNeighSysID.setStatus('mandatory')
xIsisISAdjUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 1), ("level1", 2), ("level2", 3), ("level1and2", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjUsage.setStatus('mandatory')
xIsisISAdjHoldTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjHoldTimer.setStatus('mandatory')
xIsisISAdjNeighPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjNeighPriority.setStatus('mandatory')
xIsisISAdjAreaAddrTable = MibTable((1, 3, 6, 1, 4, 1, 33, 26, 3, 2), )
if mibBuilder.loadTexts: xIsisISAdjAreaAddrTable.setStatus('mandatory')
xIsisISAdjAreaAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 26, 3, 2, 1), ).setIndexNames((0, "ITOUCH-ISIS-MIB", "xIsisISAdjAreaAddrSysInstance"), (0, "ITOUCH-ISIS-MIB", "xIsisISAdjAreaAddrCircIndex"), (0, "ITOUCH-ISIS-MIB", "xIsisISAdjAreaAddrAdjIndex"), (0, "ITOUCH-ISIS-MIB", "xIsisISAdjAreaAddress"))
if mibBuilder.loadTexts: xIsisISAdjAreaAddrEntry.setStatus('mandatory')
xIsisISAdjAreaAddrSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjAreaAddrSysInstance.setStatus('mandatory')
xIsisISAdjAreaAddrCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjAreaAddrCircIndex.setStatus('mandatory')
xIsisISAdjAreaAddrAdjIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjAreaAddrAdjIndex.setStatus('mandatory')
xIsisISAdjAreaAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjAreaAddress.setStatus('mandatory')
xIsisISAdjIPAddrTable = MibTable((1, 3, 6, 1, 4, 1, 33, 26, 3, 3), )
if mibBuilder.loadTexts: xIsisISAdjIPAddrTable.setStatus('mandatory')
xIsisISAdjIPAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 26, 3, 3, 1), ).setIndexNames((0, "ITOUCH-ISIS-MIB", "xIsisISAdjIPAddrSysInstance"), (0, "ITOUCH-ISIS-MIB", "xIsisISAdjIPAddrCircIndex"), (0, "ITOUCH-ISIS-MIB", "xIsisISAdjIPAddrAdjIndex"))
if mibBuilder.loadTexts: xIsisISAdjIPAddrEntry.setStatus('mandatory')
xIsisISAdjIPAddrSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjIPAddrSysInstance.setStatus('mandatory')
xIsisISAdjIPAddrCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjIPAddrCircIndex.setStatus('mandatory')
xIsisISAdjIPAddrAdjIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjIPAddrAdjIndex.setStatus('mandatory')
xIsisISAdjIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjIPAddress.setStatus('mandatory')
xIsisISAdjProtSuppTable = MibTable((1, 3, 6, 1, 4, 1, 33, 26, 3, 4), )
if mibBuilder.loadTexts: xIsisISAdjProtSuppTable.setStatus('mandatory')
xIsisISAdjProtSuppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 26, 3, 4, 1), ).setIndexNames((0, "ITOUCH-ISIS-MIB", "xIsisISAdjProtSuppSysInstance"), (0, "ITOUCH-ISIS-MIB", "xIsisISAdjProtSuppCircIndex"), (0, "ITOUCH-ISIS-MIB", "xIsisISAdjProtSuppAdjIndex"), (0, "ITOUCH-ISIS-MIB", "xIsisISAdjProtSuppProtocol"))
if mibBuilder.loadTexts: xIsisISAdjProtSuppEntry.setStatus('mandatory')
xIsisISAdjProtSuppSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjProtSuppSysInstance.setStatus('mandatory')
xIsisISAdjProtSuppCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjProtSuppCircIndex.setStatus('mandatory')
xIsisISAdjProtSuppAdjIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjProtSuppAdjIndex.setStatus('mandatory')
xIsisISAdjProtSuppProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 3, 4, 1, 4), SupportedProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisISAdjProtSuppProtocol.setStatus('mandatory')
xIsisESAdjTable = MibTable((1, 3, 6, 1, 4, 1, 33, 26, 4, 1), )
if mibBuilder.loadTexts: xIsisESAdjTable.setStatus('mandatory')
xIsisESAdjEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 26, 4, 1, 1), ).setIndexNames((0, "ITOUCH-ISIS-MIB", "xIsisESAdjSysInstance"), (0, "ITOUCH-ISIS-MIB", "xIsisESAdjCircIndex"), (0, "ITOUCH-ISIS-MIB", "xIsisESAdjIndex"), (0, "ITOUCH-ISIS-MIB", "xIsisESAdjESID"))
if mibBuilder.loadTexts: xIsisESAdjEntry.setStatus('mandatory')
xIsisESAdjSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisESAdjSysInstance.setStatus('mandatory')
xIsisESAdjCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 4, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisESAdjCircIndex.setStatus('mandatory')
xIsisESAdjIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisESAdjIndex.setStatus('mandatory')
xIsisESAdjType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("auto", 1), ("manual", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisESAdjType.setStatus('mandatory')
xIsisESAdjState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("initializing", 1), ("up", 2), ("failed", 3), ("down", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisESAdjState.setStatus('mandatory')
xIsisESAdjNeighSNPAAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 4, 1, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisESAdjNeighSNPAAddress.setStatus('mandatory')
xIsisESAdjExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisESAdjExistState.setStatus('mandatory')
xIsisESAdjESID = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 4, 1, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisESAdjESID.setStatus('mandatory')
xIsisRATable = MibTable((1, 3, 6, 1, 4, 1, 33, 26, 5, 1), )
if mibBuilder.loadTexts: xIsisRATable.setStatus('mandatory')
xIsisRAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1), ).setIndexNames((0, "ITOUCH-ISIS-MIB", "xIsisRASysInstance"), (0, "ITOUCH-ISIS-MIB", "xIsisRACircIndex"), (0, "ITOUCH-ISIS-MIB", "xIsisRAIndex"))
if mibBuilder.loadTexts: xIsisRAEntry.setStatus('mandatory')
xIsisRASysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisRASysInstance.setStatus('mandatory')
xIsisRACircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisRACircIndex.setStatus('mandatory')
xIsisRAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisRAIndex.setStatus('mandatory')
xIsisRAExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisRAExistState.setStatus('mandatory')
xIsisRAOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisRAOperState.setStatus('mandatory')
xIsisRAAddrPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisRAAddrPrefix.setStatus('mandatory')
xIsisRAMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("explicit", 2), ("extractIDI", 3), ("extractDSP", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisRAMapType.setStatus('mandatory')
xIsisRADefMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisRADefMetric.setStatus('mandatory')
xIsisRADelMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisRADelMetric.setStatus('mandatory')
xIsisRAExpMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisRAExpMetric.setStatus('mandatory')
xIsisRAErrMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisRAErrMetric.setStatus('mandatory')
xIsisRADefMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisRADefMetricType.setStatus('mandatory')
xIsisRADelMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisRADelMetricType.setStatus('mandatory')
xIsisRAExpMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisRAExpMetricType.setStatus('mandatory')
xIsisRAErrMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisRAErrMetricType.setStatus('mandatory')
xIsisRASNPAAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 16), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisRASNPAAddress.setStatus('mandatory')
xIsisRASNPAMask = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 17), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisRASNPAMask.setStatus('mandatory')
xIsisRASNPAPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 18), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisRASNPAPrefix.setStatus('mandatory')
xIsisRAType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 5, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("automatic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisRAType.setStatus('mandatory')
xIsisL1CLNPDestTable = MibTable((1, 3, 6, 1, 4, 1, 33, 26, 7, 1), )
if mibBuilder.loadTexts: xIsisL1CLNPDestTable.setStatus('mandatory')
xIsisL1CLNPDestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 26, 7, 1, 1), ).setIndexNames((0, "ITOUCH-ISIS-MIB", "xIsisL1CLNPSysInstance"), (0, "ITOUCH-ISIS-MIB", "xIsisL1CLNPRouteMetricQOS"), (0, "ITOUCH-ISIS-MIB", "xIsisL1CLNPRouteDest"), (0, "ITOUCH-ISIS-MIB", "xIsisL1CLNPRouteForw"))
if mibBuilder.loadTexts: xIsisL1CLNPDestEntry.setStatus('mandatory')
xIsisL1CLNPRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL1CLNPRouteDest.setStatus('mandatory')
xIsisL1CLNPRouteMetricQOS = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("default", 1), ("delay", 2), ("expense", 3), ("error", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL1CLNPRouteMetricQOS.setStatus('mandatory')
xIsisL1CLNPRouteMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL1CLNPRouteMetricType.setStatus('mandatory')
xIsisL1CLNPRouteMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL1CLNPRouteMetricValue.setStatus('mandatory')
xIsisL1CLNPRouteForw = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 1, 1, 6), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL1CLNPRouteForw.setStatus('mandatory')
xIsisL1CLNPRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("manual", 1), ("level1", 2), ("esis", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL1CLNPRouteSource.setStatus('mandatory')
xIsisL1CLNPSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL1CLNPSysInstance.setStatus('mandatory')
xIsisL2CLNPDestTable = MibTable((1, 3, 6, 1, 4, 1, 33, 26, 7, 2), )
if mibBuilder.loadTexts: xIsisL2CLNPDestTable.setStatus('mandatory')
xIsisL2CLNPDestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 26, 7, 2, 1), ).setIndexNames((0, "ITOUCH-ISIS-MIB", "xIsisL2CLNPSysInstance"), (0, "ITOUCH-ISIS-MIB", "xIsisL2CLNPRouteMetricQOS"), (0, "ITOUCH-ISIS-MIB", "xIsisL2CLNPRouteDest"), (0, "ITOUCH-ISIS-MIB", "xIsisL2CLNPRouteForw"))
if mibBuilder.loadTexts: xIsisL2CLNPDestEntry.setStatus('mandatory')
xIsisL2CLNPRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL2CLNPRouteDest.setStatus('mandatory')
xIsisL2CLNPRouteMetricQOS = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("default", 1), ("delay", 2), ("expense", 3), ("error", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL2CLNPRouteMetricQOS.setStatus('mandatory')
xIsisL2CLNPRouteMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL2CLNPRouteMetricType.setStatus('mandatory')
xIsisL2CLNPRouteMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL2CLNPRouteMetricValue.setStatus('mandatory')
xIsisL2CLNPRouteForw = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 2, 1, 6), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL2CLNPRouteForw.setStatus('mandatory')
xIsisL2CLNPRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("level2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL2CLNPRouteSource.setStatus('mandatory')
xIsisL2CLNPSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL2CLNPSysInstance.setStatus('mandatory')
xIsisL3CLNPDestTable = MibTable((1, 3, 6, 1, 4, 1, 33, 26, 7, 3), )
if mibBuilder.loadTexts: xIsisL3CLNPDestTable.setStatus('mandatory')
xIsisL3CLNPDestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 26, 7, 3, 1), ).setIndexNames((0, "ITOUCH-ISIS-MIB", "xIsisL3CLNPSysInstance"), (0, "ITOUCH-ISIS-MIB", "xIsisL3CLNPRouteMetricQOS"), (0, "ITOUCH-ISIS-MIB", "xIsisL3CLNPRouteDest"), (0, "ITOUCH-ISIS-MIB", "xIsisL3CLNPRouteForw"))
if mibBuilder.loadTexts: xIsisL3CLNPDestEntry.setStatus('mandatory')
xIsisL3CLNPRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL3CLNPRouteDest.setStatus('mandatory')
xIsisL3CLNPRouteMetricQOS = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("default", 1), ("delay", 2), ("expense", 3), ("error", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL3CLNPRouteMetricQOS.setStatus('mandatory')
xIsisL3CLNPRouteMetricType = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL3CLNPRouteMetricType.setStatus('mandatory')
xIsisL3CLNPRouteMetricValue = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL3CLNPRouteMetricValue.setStatus('mandatory')
xIsisL3CLNPRouteForw = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 3, 1, 6), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL3CLNPRouteForw.setStatus('mandatory')
xIsisL3CLNPRouteSource = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("level2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL3CLNPRouteSource.setStatus('mandatory')
xIsisL3CLNPSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 7, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisL3CLNPSysInstance.setStatus('mandatory')
xIsisCircClnsTable = MibTable((1, 3, 6, 1, 4, 1, 33, 26, 2, 3), )
if mibBuilder.loadTexts: xIsisCircClnsTable.setStatus('mandatory')
xIsisCircClnsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33, 26, 2, 3, 1), ).setIndexNames((0, "ITOUCH-ISIS-MIB", "xIsisCircClnsIndex"))
if mibBuilder.loadTexts: xIsisCircClnsEntry.setStatus('mandatory')
xIsisCircClnsSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircClnsSysInstance.setStatus('mandatory')
xIsisCircClnsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircClnsIndex.setStatus('mandatory')
xIsisCircClnsExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircClnsExistState.setStatus('mandatory')
xIsisCircClnsOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xIsisCircClnsOperState.setStatus('mandatory')
xIsisCircClnsRxPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircClnsRxPDUs.setStatus('mandatory')
xIsisCircClnsTxPDUs = MibTableColumn((1, 3, 6, 1, 4, 1, 33, 26, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xIsisCircClnsTxPDUs.setStatus('mandatory')
mibBuilder.exportSymbols("ITOUCH-ISIS-MIB", xIsisRADelMetric=xIsisRADelMetric, xIsisCircClnsOperState=xIsisCircClnsOperState, xIsisCircL1DelayMetric=xIsisCircL1DelayMetric, xIsisSysOrigL1LSPBuffSize=xIsisSysOrigL1LSPBuffSize, xIsisL2CLNPRouteMetricValue=xIsisL2CLNPRouteMetricValue, xIsisSysDRISISHelloTimer=xIsisSysDRISISHelloTimer, xIsisISAdjAreaAddrEntry=xIsisISAdjAreaAddrEntry, xIsisCircISConfTimer=xIsisCircISConfTimer, xIsisRAIndex=xIsisRAIndex, xIsisCircL1ISPriority=xIsisCircL1ISPriority, xIsisRAAddrPrefix=xIsisRAAddrPrefix, xIsisCircHelloTimer=xIsisCircHelloTimer, xIsisCircL2DesIS=xIsisCircL2DesIS, xIsisISAdjNeighSysType=xIsisISAdjNeighSysType, xIsisISAdjUsage=xIsisISAdjUsage, xIsisISAdjProtSuppCircIndex=xIsisISAdjProtSuppCircIndex, xIsisESAdj=xIsisESAdj, xIsisCircSysInstance=xIsisCircSysInstance, xIsisRATable=xIsisRATable, xIsisRAType=xIsisRAType, xIsisISAdjIPAddrTable=xIsisISAdjIPAddrTable, xIsisSysSeqNumSkips=xIsisSysSeqNumSkips, xIsisCircIDFieldLenMismatches=xIsisCircIDFieldLenMismatches, xIsisISAdjTable=xIsisISAdjTable, xIsisCircIfIndex=xIsisCircIfIndex, xIsisCircInitFails=xIsisCircInitFails, xIsisISAdjHoldTimer=xIsisISAdjHoldTimer, xIsisSysMaxAreaAddr=xIsisSysMaxAreaAddr, xIsisManAreaAddrEntry=xIsisManAreaAddrEntry, xIsisSysMinLSPTransInt=xIsisSysMinLSPTransInt, xIsisISAdjAreaAddress=xIsisISAdjAreaAddress, xIsisCircExtDomain=xIsisCircExtDomain, xIsisRAMapType=xIsisRAMapType, xIsisCircISOperState=xIsisCircISOperState, xIsisCircL2DefaultMetric=xIsisCircL2DefaultMetric, xIsisISAdjNeighPriority=xIsisISAdjNeighPriority, xIsisAreaAddrSysInstance=xIsisAreaAddrSysInstance, xIsisESAdjNeighSNPAAddress=xIsisESAdjNeighSNPAAddress, xIsisCircOutCtrlPDUs=xIsisCircOutCtrlPDUs, xIsisSysL1State=xIsisSysL1State, xIsisCircISESReachChgs=xIsisCircISESReachChgs, xIsisL2CLNPRouteSource=xIsisL2CLNPRouteSource, xIsisESAdjESID=xIsisESAdjESID, xIsisISAdjProtSuppSysInstance=xIsisISAdjProtSuppSysInstance, xIsisRASNPAPrefix=xIsisRASNPAPrefix, xIsisSysL1LSPDbaseOloads=xIsisSysL1LSPDbaseOloads, xIsisISAdjProtSuppEntry=xIsisISAdjProtSuppEntry, xIsisISAdj=xIsisISAdj, xIsisCircISSysInstance=xIsisCircISSysInstance, xIsisSysEntry=xIsisSysEntry, xIsisAreaAddrEntry=xIsisAreaAddrEntry, xIsisRAExpMetric=xIsisRAExpMetric, xIsisCircOperState=xIsisCircOperState, xIsisSysMaxAreaCheck=xIsisSysMaxAreaCheck, xIsisL1CLNPRouteDest=xIsisL1CLNPRouteDest, ExistState=ExistState, xIsisSysProtSuppEntry=xIsisSysProtSuppEntry, xIsisESAdjType=xIsisESAdjType, xIsisL2CLNPDestEntry=xIsisL2CLNPDestEntry, xIsisCircL1CircID=xIsisCircL1CircID, xIsisSystem=xIsisSystem, xIsisISAdjIPAddress=xIsisISAdjIPAddress, xIsisCircL2ISPriority=xIsisCircL2ISPriority, xIsisESAdjState=xIsisESAdjState, SupportedProtocol=SupportedProtocol, xIsisRADelMetricType=xIsisRADelMetricType, xIsisCircL2CircID=xIsisCircL2CircID, xIsisManAreaAddr=xIsisManAreaAddr, xIsisManAreaAddrTable=xIsisManAreaAddrTable, xIsisISAdjProtSuppProtocol=xIsisISAdjProtSuppProtocol, xIsisSysNET=xIsisSysNET, xIsisISAdjIPAddrCircIndex=xIsisISAdjIPAddrCircIndex, xIsisCircType=xIsisCircType, xIsisISAdjAreaAddrTable=xIsisISAdjAreaAddrTable, xIsisSysType=xIsisSysType, xIsisSysOperState=xIsisSysOperState, xIsisSysIDFieldLenMismatches=xIsisSysIDFieldLenMismatches, xIsisCircLANL2DesISChanges=xIsisCircLANL2DesISChanges, xIsisISAdjIPAddrSysInstance=xIsisISAdjIPAddrSysInstance, xIsisCircClnsTxPDUs=xIsisCircClnsTxPDUs, xIsis=xIsis, xIsisSysMaxAreaMis=xIsisSysMaxAreaMis, xIsisCircInCtrlPDUs=xIsisCircInCtrlPDUs, xIsisL3CLNPRouteMetricQOS=xIsisL3CLNPRouteMetricQOS, xIsisRAEntry=xIsisRAEntry, xIsisCircClnsIndex=xIsisCircClnsIndex, xIsisSysMinBroadLSPTransInt=xIsisSysMinBroadLSPTransInt, xIsisISAdjAreaAddrAdjIndex=xIsisISAdjAreaAddrAdjIndex, xIsisCircL1DefaultMetric=xIsisCircL1DefaultMetric, xIsisRAErrMetric=xIsisRAErrMetric, xIsisESAdjCircIndex=xIsisESAdjCircIndex, xIsisL1CLNPDestEntry=xIsisL1CLNPDestEntry, xIsisSysTable=xIsisSysTable, xIsisRADefMetricType=xIsisRADefMetricType, xIsisCircL2ErrorMetric=xIsisCircL2ErrorMetric, xIsisCircLANL1DesISChanges=xIsisCircLANL1DesISChanges, xIsisESAdjExistState=xIsisESAdjExistState, xIsisSysAttmptsToExMaxSeqNum=xIsisSysAttmptsToExMaxSeqNum, xIsisL3CLNPSysInstance=xIsisL3CLNPSysInstance, xIsisRADefMetric=xIsisRADefMetric, xIsisCircL1DesIS=xIsisCircL1DesIS, xIsisCircISSuggESConfTimer=xIsisCircISSuggESConfTimer, xIsisISAdjSysInstance=xIsisISAdjSysInstance, xIsisSysProtSuppSysInstance=xIsisSysProtSuppSysInstance, xIsisCircL2ExpenseMetric=xIsisCircL2ExpenseMetric, xIsisL3CLNPRouteSource=xIsisL3CLNPRouteSource, xIsisManAreaAddrExistState=xIsisManAreaAddrExistState, xIsisISAdjNeighSNPAAddress=xIsisISAdjNeighSNPAAddress, xIsisSysOwnLSPPurges=xIsisSysOwnLSPPurges, xIsisCircManL2Only=xIsisCircManL2Only, xIsisSysMinLSPGenInt=xIsisSysMinLSPGenInt, xIsisRAOperState=xIsisRAOperState, xIsisRAExistState=xIsisRAExistState, xIsisL2CLNPDestTable=xIsisL2CLNPDestTable, xIsisCirc=xIsisCirc, xIsisESAdjIndex=xIsisESAdjIndex, xIsisCircClnsExistState=xIsisCircClnsExistState, xIsisCircRejAdjs=xIsisCircRejAdjs, xIsisSysL2LSPDbaseOloads=xIsisSysL2LSPDbaseOloads, xIsisSysCompSNPInt=xIsisSysCompSNPInt, xIsisRACircIndex=xIsisRACircIndex, xIsisSysL2State=xIsisSysL2State, xIsisESAdjTable=xIsisESAdjTable, xIsisISAdjProtSuppAdjIndex=xIsisISAdjProtSuppAdjIndex, xIsisReachAddr=xIsisReachAddr, xIsisCircL1ErrorMetric=xIsisCircL1ErrorMetric, xIsisL2CLNPRouteDest=xIsisL2CLNPRouteDest, xIsisCircL1ExpenseMetric=xIsisCircL1ExpenseMetric, xIsisL3CLNPRouteMetricValue=xIsisL3CLNPRouteMetricValue, xIsisCircClnsRxPDUs=xIsisCircClnsRxPDUs, xIsisISAdjProtSuppTable=xIsisISAdjProtSuppTable, xIsisL1CLNPDestTable=xIsisL1CLNPDestTable, xIsisCLNPDest=xIsisCLNPDest, xIsisESAdjEntry=xIsisESAdjEntry, xIsisCircClnsEntry=xIsisCircClnsEntry, xIsisL1CLNPRouteMetricValue=xIsisL1CLNPRouteMetricValue, xIsisSysWaitTime=xIsisSysWaitTime, xIsisCircIndex=xIsisCircIndex, xIsisISAdjIPAddrAdjIndex=xIsisISAdjIPAddrAdjIndex, xIsisCircISIndex=xIsisCircISIndex, xIsisISAdjNeighSysID=xIsisISAdjNeighSysID, xIsisRASNPAAddress=xIsisRASNPAAddress, xIsisL3CLNPRouteForw=xIsisL3CLNPRouteForw, xIsisL1CLNPRouteForw=xIsisL1CLNPRouteForw, xIsisAreaAddrTable=xIsisAreaAddrTable, xIsisISAdjAreaAddrCircIndex=xIsisISAdjAreaAddrCircIndex, xIsisL1CLNPRouteMetricQOS=xIsisL1CLNPRouteMetricQOS, xIsisISAdjIPAddrEntry=xIsisISAdjIPAddrEntry, xIsisRAExpMetricType=xIsisRAExpMetricType, xIsisCircTable=xIsisCircTable, xIsisSysInstance=xIsisSysInstance, xIsisL2CLNPSysInstance=xIsisL2CLNPSysInstance, xIsisESAdjSysInstance=xIsisESAdjSysInstance, xIsisCircISRedHoldTime=xIsisCircISRedHoldTime, xIsisISAdjCircIndex=xIsisISAdjCircIndex, xIsisRASysInstance=xIsisRASysInstance, xIsisCircClnsTable=xIsisCircClnsTable, xIsisSysPollESHelloRate=xIsisSysPollESHelloRate, xIsisCircISTable=xIsisCircISTable, xIsisISAdjIndex=xIsisISAdjIndex, xIsisCircISInv9542PDUs=xIsisCircISInv9542PDUs, xIsisL1CLNPRouteSource=xIsisL1CLNPRouteSource, xIsisL1CLNPSysInstance=xIsisL1CLNPSysInstance, xIsisISAdjEntry=xIsisISAdjEntry, xIsisSysPartSNPInt=xIsisSysPartSNPInt, xIsisSysVersion=xIsisSysVersion, xIsisCircEntry=xIsisCircEntry, xIsisCircISEntry=xIsisCircISEntry, xIsisSysCorrLSPs=xIsisSysCorrLSPs, xIsisCircL2DelayMetric=xIsisCircL2DelayMetric, xIsisSysExistState=xIsisSysExistState, xIsisCircExistState=xIsisCircExistState, xIsisL2CLNPRouteMetricType=xIsisL2CLNPRouteMetricType, xIsisRAErrMetricType=xIsisRAErrMetricType, xIsisL3CLNPDestEntry=xIsisL3CLNPDestEntry, xIsisL3CLNPDestTable=xIsisL3CLNPDestTable, xIsisSysProtSuppTable=xIsisSysProtSuppTable, xIsisISAdjState=xIsisISAdjState, xIsisAreaAddr=xIsisAreaAddr, xIsisRASNPAMask=xIsisRASNPAMask, xIsisL2CLNPRouteMetricQOS=xIsisL2CLNPRouteMetricQOS, xIsisL2CLNPRouteForw=xIsisL2CLNPRouteForw, xIsisSysOrigL2LSPBuffSize=xIsisSysOrigL2LSPBuffSize, xIsisL3CLNPRouteMetricType=xIsisL3CLNPRouteMetricType, xIsisSysMaxPathSplits=xIsisSysMaxPathSplits, xIsisISAdjAreaAddrSysInstance=xIsisISAdjAreaAddrSysInstance, xIsisSysProtSuppExistState=xIsisSysProtSuppExistState, xIsisCircAdjChanges=xIsisCircAdjChanges, xIsisCircClnsSysInstance=xIsisCircClnsSysInstance, xIsisCircISExistState=xIsisCircISExistState, xIsisL3CLNPRouteDest=xIsisL3CLNPRouteDest, xIsisCircISHoldTimerMult=xIsisCircISHoldTimerMult, xIsisL1CLNPRouteMetricType=xIsisL1CLNPRouteMetricType, xIsisSysManAddrsDropFromArea=xIsisSysManAddrsDropFromArea, xIsisSysProtSuppProtocol=xIsisSysProtSuppProtocol, xIsisSysMaxLSPGenInt=xIsisSysMaxLSPGenInt, xIsisManAreaAddrSysInstance=xIsisManAreaAddrSysInstance)
