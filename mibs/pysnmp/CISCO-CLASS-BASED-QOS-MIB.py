#
# PySNMP MIB module CISCO-CLASS-BASED-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-CLASS-BASED-QOS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:36:11 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
DlciNumber, = mibBuilder.importSymbols("CISCO-FRAME-RELAY-MIB", "DlciNumber")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
Unsigned64, EntPhysicalIndexOrZero = mibBuilder.importSymbols("CISCO-TC", "Unsigned64", "EntPhysicalIndexOrZero")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Gauge32, MibIdentifier, Counter64, ModuleIdentity, Integer32, IpAddress, Bits, Unsigned32, dod, iso, TimeTicks, NotificationType, ObjectIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibIdentifier", "Counter64", "ModuleIdentity", "Integer32", "IpAddress", "Bits", "Unsigned32", "dod", "iso", "TimeTicks", "NotificationType", "ObjectIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TruthValue, TimeStamp, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TimeStamp", "DisplayString", "TextualConvention")
ciscoCBQosMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 166))
ciscoCBQosMIB.setRevisions(('2014-01-24 00:00', '2013-10-10 00:00', '2013-06-20 00:00', '2013-02-15 00:00', '2012-07-24 00:00', '2012-03-22 00:00', '2009-11-25 00:00', '2009-09-16 00:00', '2009-04-24 00:00', '2009-01-26 00:00', '2008-11-20 00:00', '2008-06-17 00:00', '2007-10-09 00:00', '2007-08-30 00:00', '2007-07-10 00:00', '2004-09-20 00:00', '2004-04-12 00:00', '2003-07-24 00:00', '2003-06-09 00:00', '2003-01-21 00:00', '2002-12-03 00:00', '2002-07-24 00:00', '2001-03-14 00:00', '2000-12-08 00:00', '2000-07-13 00:00',))
if mibBuilder.loadTexts: ciscoCBQosMIB.setLastUpdated('201401240000Z')
if mibBuilder.loadTexts: ciscoCBQosMIB.setOrganization('Cisco Systems, Inc.')
class QueueMechanism(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("precedence", 1), ("dscp", 2), ("discardClass", 3), ("qosGroup", 4), ("atmClp", 5), ("mplsExp", 6))

class QosObjectType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))
    namedValues = NamedValues(("policymap", 1), ("classmap", 2), ("matchStatement", 3), ("queueing", 4), ("randomDetect", 5), ("trafficShaping", 6), ("police", 7), ("set", 8), ("compression", 9), ("ipslaMeasure", 10), ("account", 11))

class TrafficDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("input", 1), ("output", 2))

class QosClassInfo(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("none", 1), ("matchAll", 2), ("matchAny", 3))

class QosMatchInfo(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("none", 1), ("matchNot", 2))

class InterfaceType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("mainInterface", 1), ("subInterface", 2), ("frDLCI", 3), ("atmPVC", 4), ("controlPlane", 5), ("vlanPort", 6), ("evc", 7))

class QueueingBandwidthUnits(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("kbps", 1), ("percentage", 2), ("percentageRemaining", 3), ("ratioRemaining", 4), ("perThousand", 5), ("perMillion", 6))

class TrafficShapingLimit(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("average", 1), ("peak", 2))

class PoliceAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))
    namedValues = NamedValues(("transmit", 1), ("setIpDSCP", 2), ("setIpPrecedence", 3), ("setQosGroup", 4), ("drop", 5), ("setMplsExp", 6), ("setAtmClp", 7), ("setFrDe", 8), ("setL2Cos", 9), ("setDiscardClass", 10), ("setMplsExpTopMost", 11), ("setIpDscpTunnel", 12), ("setIpPrecedenceTunnel", 13), ("setL2CosInner", 14), ("unconfigured", 15), ("setDei", 16), ("setDeiImposition", 17), ("setSrpPriority", 18))

class SetFeatureType(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("ipDscp", 0), ("ipPrecedence", 1), ("qosGroupNumber", 2), ("frDeBit", 3), ("atmClpBit", 4), ("l2Cos", 5), ("mplsExp", 6), ("discardClass", 7), ("mplsExpTopMost", 8), ("srpPriority", 9), ("frFecnBecn", 10), ("ipDscpTunnel", 11), ("ipPrecedenceTunnel", 12), ("l2CosInner", 13), ("dei", 14), ("deiImposition", 15))

class REDMechanism(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("precedence", 1), ("dscp", 2), ("discardClass", 3), ("l2Cos", 4), ("atmClp", 5), ("mplsExp", 6), ("redDefault", 7), ("redUserDefault", 8), ("dei", 9))

class CbQosQueueUnitType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("packets", 1), ("cells", 2), ("bytes", 3), ("ms", 4), ("us", 5), ("percentage", 6))

class CbQosQueueDepth(TextualConvention, Unsigned32):
    status = 'current'

class CbQosRateType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("bps", 1), ("percentage", 2), ("cps", 3), ("perThousand", 4), ("perMillion", 5))

class IPHCOption(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("rtp", 1), ("tcp", 2), ("bothRtpTcp", 3))

class CbQosTMSetType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("none", 0), ("ipDscp", 1), ("ipPrecedence", 2), ("qosGroup", 3), ("l2Cos", 4), ("mplsExpImp", 5), ("mplsExpTop", 6))

class CbQosEBType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("typeNone", 0), ("typeCorvil", 1))

class CbQosEBCtd(TextualConvention, OctetString):
    status = 'current'

class SetC3plAccountFeatureType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("queueing", 0), ("wred", 1), ("police", 2))

ciscoCBQosMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1))
ciscocbQosMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 2))
cbQosServicePolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1))
cbQosInterfacePolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 2))
cbQosFrameRelayVCPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 3))
cbQosATMPVCPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 4))
cbQosObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 5))
cbQosPolicyMapCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 6))
cbQosClassMapCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 7))
cbQosMatchStmtCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 8))
cbQosQueueingCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9))
cbQosREDCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 10))
cbQosREDClassCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11))
cbQosPoliceCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12))
cbQosTSCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13))
cbQosSetCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14))
cbQosClassMapStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15))
cbQosMatchStmtStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16))
cbQosPoliceStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17))
cbQosQueueingStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18))
cbQosTSStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19))
cbQosREDClassStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20))
cbQosPoliceActionCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21))
cbQosIPHCCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 22))
cbQosIPHCStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23))
cbQosSetStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24))
cbQosPoliceColorStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25))
cbQosTableMapCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 26))
cbQosTableMapValueCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 27))
cbQosTableMapSetCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28))
cbQosEBCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 29))
cbQosEBStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 30))
cbQosMeasureIPSLACfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 31))
cbQosQueueingClassCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 32))
cbQosC3plAccountCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 33))
cbQosC3plAccountStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34))
cbQosQueueingClassCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 32, 1), )
if mibBuilder.loadTexts: cbQosQueueingClassCfgTable.setStatus('current')
cbQosQueueingClassCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 32, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassConfigIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosQlimitWeightValue"))
if mibBuilder.loadTexts: cbQosQueueingClassCfgEntry.setStatus('current')
cbQosQueueingClassConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 32, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: cbQosQueueingClassConfigIndex.setStatus('current')
cbQosQlimitWeightValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 32, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: cbQosQlimitWeightValue.setStatus('current')
cbQosQueueingClassCfgThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 32, 1, 1, 3), CbQosQueueDepth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingClassCfgThreshold.setStatus('current')
cbQosQueueingClassCfgThresholdUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 32, 1, 1, 4), CbQosQueueUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingClassCfgThresholdUnit.setStatus('current')
cbQosQueueingClassCfgQLimitWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 32, 1, 1, 5), QueueMechanism()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingClassCfgQLimitWeight.setStatus('current')
cbQosMeasureIPSLACfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 31, 1), )
if mibBuilder.loadTexts: cbQosMeasureIPSLACfgTable.setStatus('current')
cbQosMeasureIPSLACfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 31, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroupIndex"))
if mibBuilder.loadTexts: cbQosMeasureIPSLACfgEntry.setStatus('current')
cbQosMeasureIPSLACfgGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 31, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosMeasureIPSLACfgGroupIndex.setStatus('current')
cbQosMeasureIPSLACfgGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 31, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosMeasureIPSLACfgGroupName.setStatus('current')
cbQosServicePolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1), )
if mibBuilder.loadTexts: cbQosServicePolicyTable.setStatus('current')
cbQosServicePolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"))
if mibBuilder.loadTexts: cbQosServicePolicyEntry.setStatus('current')
cbQosPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cbQosPolicyIndex.setStatus('current')
cbQosIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 2), InterfaceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIfType.setStatus('current')
cbQosPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 3), TrafficDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPolicyDirection.setStatus('current')
cbQosIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIfIndex.setStatus('current')
cbQosFrDLCI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 5), DlciNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosFrDLCI.setStatus('current')
cbQosAtmVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosAtmVPI.setStatus('current')
cbQosAtmVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosAtmVCI.setStatus('current')
cbQosEntityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 8), EntPhysicalIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosEntityIndex.setStatus('current')
cbQosVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 9), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosVlanIndex.setStatus('current')
cbQosEVC = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosEVC.setStatus('current')
cbQosPolicyDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPolicyDiscontinuityTime.setStatus('current')
cbQosParentPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosParentPolicyIndex.setStatus('current')
cbQosInterfacePolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 2, 1), )
if mibBuilder.loadTexts: cbQosInterfacePolicyTable.setStatus('current')
cbQosInterfacePolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyDirection"))
if mibBuilder.loadTexts: cbQosInterfacePolicyEntry.setStatus('current')
cbQosIFPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIFPolicyIndex.setStatus('current')
cbQosFrameRelayPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 3, 1), )
if mibBuilder.loadTexts: cbQosFrameRelayPolicyTable.setStatus('current')
cbQosFrameRelayPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosFrDLCI"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyDirection"))
if mibBuilder.loadTexts: cbQosFrameRelayPolicyEntry.setStatus('current')
cbQosFRPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 3, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosFRPolicyIndex.setStatus('current')
cbQosATMPVCPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 4, 1), )
if mibBuilder.loadTexts: cbQosATMPVCPolicyTable.setStatus('current')
cbQosATMPVCPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosAtmVPI"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosAtmVCI"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyDirection"))
if mibBuilder.loadTexts: cbQosATMPVCPolicyEntry.setStatus('current')
cbQosATMPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 4, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosATMPolicyIndex.setStatus('current')
cbQosObjectsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 5, 1), )
if mibBuilder.loadTexts: cbQosObjectsTable.setStatus('current')
cbQosObjectsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
if mibBuilder.loadTexts: cbQosObjectsEntry.setStatus('current')
cbQosObjectsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 5, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cbQosObjectsIndex.setStatus('current')
cbQosConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 5, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosConfigIndex.setStatus('current')
cbQosObjectsType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 5, 1, 1, 3), QosObjectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosObjectsType.setStatus('current')
cbQosParentObjectsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 5, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosParentObjectsIndex.setStatus('current')
cbQosPolicyMapCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 6, 1), )
if mibBuilder.loadTexts: cbQosPolicyMapCfgTable.setStatus('current')
cbQosPolicyMapCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 6, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
if mibBuilder.loadTexts: cbQosPolicyMapCfgEntry.setStatus('current')
cbQosPolicyMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 6, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPolicyMapName.setStatus('current')
cbQosPolicyMapDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 6, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPolicyMapDesc.setStatus('current')
cbQosCMCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 7, 1), )
if mibBuilder.loadTexts: cbQosCMCfgTable.setStatus('current')
cbQosCMCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 7, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
if mibBuilder.loadTexts: cbQosCMCfgEntry.setStatus('current')
cbQosCMName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 7, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMName.setStatus('current')
cbQosCMDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 7, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMDesc.setStatus('current')
cbQosCMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 7, 1, 1, 3), QosClassInfo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMInfo.setStatus('current')
cbQosMatchStmtCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 8, 1), )
if mibBuilder.loadTexts: cbQosMatchStmtCfgTable.setStatus('current')
cbQosMatchStmtCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 8, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
if mibBuilder.loadTexts: cbQosMatchStmtCfgEntry.setStatus('current')
cbQosMatchStmtName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 8, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosMatchStmtName.setStatus('current')
cbQosMatchStmtInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 8, 1, 1, 2), QosMatchInfo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosMatchStmtInfo.setStatus('current')
cbQosQueueingCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1), )
if mibBuilder.loadTexts: cbQosQueueingCfgTable.setStatus('current')
cbQosQueueingCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
if mibBuilder.loadTexts: cbQosQueueingCfgEntry.setStatus('current')
cbQosQueueingCfgBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingCfgBandwidth.setStatus('deprecated')
cbQosQueueingCfgBandwidthUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 2), QueueingBandwidthUnits()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingCfgBandwidthUnits.setStatus('current')
cbQosQueueingCfgFlowEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingCfgFlowEnabled.setStatus('current')
cbQosQueueingCfgPriorityEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingCfgPriorityEnabled.setStatus('current')
cbQosQueueingCfgAggregateQSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingCfgAggregateQSize.setStatus('deprecated')
cbQosQueueingCfgIndividualQSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32768))).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingCfgIndividualQSize.setStatus('deprecated')
cbQosQueueingCfgDynamicQNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32768))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingCfgDynamicQNumber.setStatus('current')
cbQosQueueingCfgPrioBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(32, 64000000))).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingCfgPrioBurstSize.setStatus('current')
cbQosQueueingCfgQLimitUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 9), CbQosQueueUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingCfgQLimitUnits.setStatus('current')
cbQosQueueingCfgAggregateQLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 10), CbQosQueueDepth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingCfgAggregateQLimit.setStatus('current')
cbQosQueueingCfgAggrQLimitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 11), Unsigned32()).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingCfgAggrQLimitTime.setStatus('current')
cbQosQueueingCfgPriorityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingCfgPriorityLevel.setStatus('current')
cbQosQueueingCfgBandwidth64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 13), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingCfgBandwidth64.setStatus('current')
cbQosQueueingCfgIndividualQSize64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 14), Unsigned64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingCfgIndividualQSize64.setStatus('current')
cbQosREDCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 10, 1), )
if mibBuilder.loadTexts: cbQosREDCfgTable.setStatus('current')
cbQosREDCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 10, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
if mibBuilder.loadTexts: cbQosREDCfgEntry.setStatus('current')
cbQosREDCfgExponWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDCfgExponWeight.setStatus('current')
cbQosREDCfgMeanQsize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDCfgMeanQsize.setStatus('deprecated')
cbQosREDCfgDscpPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 10, 1, 1, 3), REDMechanism()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDCfgDscpPrec.setStatus('current')
cbQosREDCfgECNEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 10, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDCfgECNEnabled.setStatus('current')
cbQosREDClassCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1), )
if mibBuilder.loadTexts: cbQosREDClassCfgTable.setStatus('current')
cbQosREDClassCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosREDValue"))
if mibBuilder.loadTexts: cbQosREDClassCfgEntry.setStatus('current')
cbQosREDValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: cbQosREDValue.setStatus('current')
cbQosREDCfgMinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32768))).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDCfgMinThreshold.setStatus('deprecated')
cbQosREDCfgMaxThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32768))).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDCfgMaxThreshold.setStatus('deprecated')
cbQosREDCfgPktDropProb = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDCfgPktDropProb.setStatus('current')
cbQosREDClassCfgThresholdUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 5), CbQosQueueUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDClassCfgThresholdUnit.setStatus('deprecated')
cbQosREDClassCfgMinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 6), CbQosQueueDepth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDClassCfgMinThreshold.setStatus('current')
cbQosREDClassCfgMaxThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 7), CbQosQueueDepth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDClassCfgMaxThreshold.setStatus('current')
cbQosREDClassCfgMinThresholdTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 8), Unsigned32()).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDClassCfgMinThresholdTime.setStatus('current')
cbQosREDClassCfgMaxThresholdTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 9), Unsigned32()).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDClassCfgMaxThresholdTime.setStatus('current')
cbQosREDClassCfgMaxThresholdUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 10), CbQosQueueUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDClassCfgMaxThresholdUnit.setStatus('current')
cbQosREDClassCfgMinThresholdUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 11), CbQosQueueUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDClassCfgMinThresholdUnit.setStatus('current')
cbQosPoliceCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1), )
if mibBuilder.loadTexts: cbQosPoliceCfgTable.setStatus('current')
cbQosPoliceCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
if mibBuilder.loadTexts: cbQosPoliceCfgEntry.setStatus('current')
cbQosPoliceCfgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgRate.setStatus('current')
cbQosPoliceCfgBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 512000000))).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgBurstSize.setStatus('deprecated')
cbQosPoliceCfgExtBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 512000000))).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgExtBurstSize.setStatus('deprecated')
cbQosPoliceCfgConformAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 4), PoliceAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgConformAction.setStatus('deprecated')
cbQosPoliceCfgConformSetValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgConformSetValue.setStatus('deprecated')
cbQosPoliceCfgExceedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 6), PoliceAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgExceedAction.setStatus('deprecated')
cbQosPoliceCfgExceedSetValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgExceedSetValue.setStatus('deprecated')
cbQosPoliceCfgViolateAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 8), PoliceAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgViolateAction.setStatus('deprecated')
cbQosPoliceCfgViolateSetValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgViolateSetValue.setStatus('deprecated')
cbQosPoliceCfgPir = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(8000, 2000000000))).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgPir.setStatus('deprecated')
cbQosPoliceCfgRate64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 11), Unsigned64()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgRate64.setStatus('current')
cbQosPoliceCfgRateType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 12), CbQosRateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgRateType.setStatus('current')
cbQosPoliceCfgPercentRateValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('% of Interface Bandwidth').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgPercentRateValue.setStatus('current')
cbQosPoliceCfgPercentPirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('% of Interface Bandwidth').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgPercentPirValue.setStatus('current')
cbQosPoliceCfgCellRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 15), Unsigned32()).setUnits('cells/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgCellRate.setStatus('current')
cbQosPoliceCfgCellPir = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 16), Unsigned32()).setUnits('cells/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgCellPir.setStatus('current')
cbQosPoliceCfgBurstCell = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('Cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgBurstCell.setStatus('current')
cbQosPoliceCfgExtBurstCell = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('Cells').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgExtBurstCell.setStatus('current')
cbQosPoliceCfgBurstTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgBurstTime.setStatus('current')
cbQosPoliceCfgExtBurstTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgExtBurstTime.setStatus('current')
cbQosPoliceCfgCdvt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('micro-second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgCdvt.setStatus('current')
cbQosPoliceCfgConformColor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgConformColor.setStatus('current')
cbQosPoliceCfgExceedColor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgExceedColor.setStatus('current')
cbQosPoliceCfgConditional = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 24), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgConditional.setStatus('current')
cbQosPoliceCfgBurstSize64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 25), Unsigned64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgBurstSize64.setStatus('current')
cbQosPoliceCfgExtBurstSize64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 26), Unsigned64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgExtBurstSize64.setStatus('current')
cbQosPoliceCfgPir64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 27), Unsigned64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfgPir64.setStatus('current')
cbQosPoliceActionCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21, 1), )
if mibBuilder.loadTexts: cbQosPoliceActionCfgTable.setStatus('current')
cbQosPoliceActionCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgIndex"))
if mibBuilder.loadTexts: cbQosPoliceActionCfgEntry.setStatus('current')
cbQosPoliceActionCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cbQosPoliceActionCfgIndex.setStatus('current')
cbQosPoliceActionCfgConform = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21, 1, 1, 2), PoliceAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceActionCfgConform.setStatus('current')
cbQosPoliceActionCfgConformSetValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceActionCfgConformSetValue.setStatus('current')
cbQosPoliceActionCfgExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21, 1, 1, 4), PoliceAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceActionCfgExceed.setStatus('current')
cbQosPoliceActionCfgExceedSetValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceActionCfgExceedSetValue.setStatus('current')
cbQosPoliceActionCfgViolate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21, 1, 1, 6), PoliceAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceActionCfgViolate.setStatus('current')
cbQosPoliceActionCfgViolateSetValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceActionCfgViolateSetValue.setStatus('current')
cbQosTSCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1), )
if mibBuilder.loadTexts: cbQosTSCfgTable.setStatus('current')
cbQosTSCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
if mibBuilder.loadTexts: cbQosTSCfgEntry.setStatus('current')
cbQosTSCfgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSCfgRate.setStatus('current')
cbQosTSCfgBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256, 154400000))).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSCfgBurstSize.setStatus('deprecated')
cbQosTSCfgExtBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 154400000))).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSCfgExtBurstSize.setStatus('deprecated')
cbQosTSCfgAdaptiveEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSCfgAdaptiveEnabled.setStatus('current')
cbQosTSCfgAdaptiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8000, 154400000))).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSCfgAdaptiveRate.setStatus('current')
cbQosTSCfgLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 6), TrafficShapingLimit()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSCfgLimitType.setStatus('current')
cbQosTSCfgRateType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 7), CbQosRateType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSCfgRateType.setStatus('current')
cbQosTSCfgPercentRateValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('% of Interface Bandwidth').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSCfgPercentRateValue.setStatus('current')
cbQosTSCfgBurstTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSCfgBurstTime.setStatus('current')
cbQosTSCfgExtBurstTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('milli-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSCfgExtBurstTime.setStatus('current')
cbQosTSCfgRate64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 11), Unsigned64()).setUnits('bits/second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSCfgRate64.setStatus('current')
cbQosTSCfgBurstSize64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 12), Unsigned64()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSCfgBurstSize64.setStatus('current')
cbQosTSCfgExtBurstSize64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 13), Unsigned64()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSCfgExtBurstSize64.setStatus('current')
cbQosSetCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1), )
if mibBuilder.loadTexts: cbQosSetCfgTable.setStatus('current')
cbQosSetCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
if mibBuilder.loadTexts: cbQosSetCfgEntry.setStatus('current')
cbQosSetCfgFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 1), SetFeatureType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetCfgFeature.setStatus('current')
cbQosSetCfgIpDSCPValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetCfgIpDSCPValue.setStatus('current')
cbQosSetCfgIpPrecedenceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetCfgIpPrecedenceValue.setStatus('current')
cbQosSetCfgQosGroupValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetCfgQosGroupValue.setStatus('current')
cbQosSetCfgL2CosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetCfgL2CosValue.setStatus('current')
cbQosSetCfgMplsExpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetCfgMplsExpValue.setStatus('current')
cbQosSetCfgDiscardClassValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetCfgDiscardClassValue.setStatus('current')
cbQosSetCfgMplsExpTopMostValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetCfgMplsExpTopMostValue.setStatus('current')
cbQosSetCfgSrpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetCfgSrpPriority.setStatus('current')
cbQosSetCfgFrFecnBecn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetCfgFrFecnBecn.setStatus('current')
cbQosSetCfgL2CosInnerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetCfgL2CosInnerValue.setStatus('current')
cbQosSetCfgFrDe = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetCfgFrDe.setStatus('current')
cbQosSetCfgIpPrecedenceTunnelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetCfgIpPrecedenceTunnelValue.setStatus('current')
cbQosSetCfgIpDSCPTunnelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetCfgIpDSCPTunnelValue.setStatus('current')
cbQosSetCfgDei = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetCfgDei.setStatus('current')
cbQosSetCfgDeiImposition = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetCfgDeiImposition.setStatus('current')
cbQosCMStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1), )
if mibBuilder.loadTexts: cbQosCMStatsTable.setStatus('current')
cbQosCMStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
if mibBuilder.loadTexts: cbQosCMStatsEntry.setStatus('current')
cbQosCMPrePolicyPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMPrePolicyPktOverflow.setStatus('current')
cbQosCMPrePolicyPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMPrePolicyPkt.setStatus('current')
cbQosCMPrePolicyPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMPrePolicyPkt64.setStatus('current')
cbQosCMPrePolicyByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMPrePolicyByteOverflow.setStatus('current')
cbQosCMPrePolicyByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMPrePolicyByte.setStatus('current')
cbQosCMPrePolicyByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMPrePolicyByte64.setStatus('current')
cbQosCMPrePolicyBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 7), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMPrePolicyBitRate.setStatus('current')
cbQosCMPostPolicyByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMPostPolicyByteOverflow.setStatus('current')
cbQosCMPostPolicyByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMPostPolicyByte.setStatus('current')
cbQosCMPostPolicyByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMPostPolicyByte64.setStatus('current')
cbQosCMPostPolicyBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 11), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMPostPolicyBitRate.setStatus('current')
cbQosCMDropPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMDropPktOverflow.setStatus('current')
cbQosCMDropPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMDropPkt.setStatus('current')
cbQosCMDropPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMDropPkt64.setStatus('current')
cbQosCMDropByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMDropByteOverflow.setStatus('current')
cbQosCMDropByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMDropByte.setStatus('current')
cbQosCMDropByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMDropByte64.setStatus('current')
cbQosCMDropBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 18), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMDropBitRate.setStatus('current')
cbQosCMNoBufDropPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMNoBufDropPktOverflow.setStatus('current')
cbQosCMNoBufDropPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMNoBufDropPkt.setStatus('current')
cbQosCMNoBufDropPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMNoBufDropPkt64.setStatus('current')
cbQosCMFragmentPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMFragmentPktOverflow.setStatus('current')
cbQosCMFragmentPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMFragmentPkt.setStatus('current')
cbQosCMFragmentPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMFragmentPkt64.setStatus('current')
cbQosCMFragmentByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMFragmentByteOverflow.setStatus('current')
cbQosCMFragmentByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMFragmentByte.setStatus('current')
cbQosCMFragmentByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMFragmentByte64.setStatus('current')
cbQosCMPrePolicyBitRate64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 28), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMPrePolicyBitRate64.setStatus('current')
cbQosCMPostPolicyBitRate64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 29), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMPostPolicyBitRate64.setStatus('current')
cbQosCMDropBitRate64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 30), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosCMDropBitRate64.setStatus('current')
cbQosMatchStmtStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16, 1), )
if mibBuilder.loadTexts: cbQosMatchStmtStatsTable.setStatus('current')
cbQosMatchStmtStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
if mibBuilder.loadTexts: cbQosMatchStmtStatsEntry.setStatus('current')
cbQosMatchPrePolicyPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosMatchPrePolicyPktOverflow.setStatus('current')
cbQosMatchPrePolicyPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosMatchPrePolicyPkt.setStatus('current')
cbQosMatchPrePolicyPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosMatchPrePolicyPkt64.setStatus('current')
cbQosMatchPrePolicyByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosMatchPrePolicyByteOverflow.setStatus('current')
cbQosMatchPrePolicyByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosMatchPrePolicyByte.setStatus('current')
cbQosMatchPrePolicyByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosMatchPrePolicyByte64.setStatus('current')
cbQosMatchPrePolicyBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16, 1, 1, 7), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosMatchPrePolicyBitRate.setStatus('current')
cbQosPoliceStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1), )
if mibBuilder.loadTexts: cbQosPoliceStatsTable.setStatus('current')
cbQosPoliceStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
if mibBuilder.loadTexts: cbQosPoliceStatsEntry.setStatus('current')
cbQosPoliceConformedPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 1), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceConformedPktOverflow.setStatus('current')
cbQosPoliceConformedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 2), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceConformedPkt.setStatus('current')
cbQosPoliceConformedPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceConformedPkt64.setStatus('current')
cbQosPoliceConformedByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 4), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceConformedByteOverflow.setStatus('current')
cbQosPoliceConformedByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 5), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceConformedByte.setStatus('current')
cbQosPoliceConformedByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 6), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceConformedByte64.setStatus('current')
cbQosPoliceConformedBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 7), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceConformedBitRate.setStatus('current')
cbQosPoliceExceededPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 8), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceExceededPktOverflow.setStatus('current')
cbQosPoliceExceededPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 9), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceExceededPkt.setStatus('current')
cbQosPoliceExceededPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 10), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceExceededPkt64.setStatus('current')
cbQosPoliceExceededByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 11), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceExceededByteOverflow.setStatus('current')
cbQosPoliceExceededByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 12), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceExceededByte.setStatus('current')
cbQosPoliceExceededByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 13), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceExceededByte64.setStatus('current')
cbQosPoliceExceededBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 14), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceExceededBitRate.setStatus('current')
cbQosPoliceViolatedPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 15), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceViolatedPktOverflow.setStatus('current')
cbQosPoliceViolatedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 16), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceViolatedPkt.setStatus('current')
cbQosPoliceViolatedPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 17), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceViolatedPkt64.setStatus('current')
cbQosPoliceViolatedByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 18), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceViolatedByteOverflow.setStatus('current')
cbQosPoliceViolatedByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 19), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceViolatedByte.setStatus('current')
cbQosPoliceViolatedByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 20), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceViolatedByte64.setStatus('current')
cbQosPoliceViolatedBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 21), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceViolatedBitRate.setStatus('current')
cbQosPoliceConformedBitRate64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 22), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceConformedBitRate64.setStatus('current')
cbQosPoliceExceededBitRate64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 23), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceExceededBitRate64.setStatus('current')
cbQosPoliceViolatedBitRate64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 24), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceViolatedBitRate64.setStatus('current')
cbQosQueueingStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1), )
if mibBuilder.loadTexts: cbQosQueueingStatsTable.setStatus('current')
cbQosQueueingStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
if mibBuilder.loadTexts: cbQosQueueingStatsEntry.setStatus('current')
cbQosQueueingCurrentQDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 1), Gauge32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingCurrentQDepth.setStatus('current')
cbQosQueueingMaxQDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 2), Gauge32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingMaxQDepth.setStatus('current')
cbQosQueueingDiscardByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 3), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingDiscardByteOverflow.setStatus('current')
cbQosQueueingDiscardByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 4), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingDiscardByte.setStatus('current')
cbQosQueueingDiscardByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 5), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingDiscardByte64.setStatus('current')
cbQosQueueingDiscardPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 6), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingDiscardPktOverflow.setStatus('current')
cbQosQueueingDiscardPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 7), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingDiscardPkt.setStatus('current')
cbQosQueueingDiscardPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 8), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingDiscardPkt64.setStatus('current')
cbQosQueueingCurrentQDepthPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 9), Gauge32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingCurrentQDepthPkt.setStatus('current')
cbQosQueueingMaxQDepthPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 10), Gauge32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingMaxQDepthPkt.setStatus('current')
cbQosQueueingTransmitByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 11), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingTransmitByte64.setStatus('current')
cbQosQueueingTransmitPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 12), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosQueueingTransmitPkt64.setStatus('current')
cbQosTSStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1), )
if mibBuilder.loadTexts: cbQosTSStatsTable.setStatus('current')
cbQosTSStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
if mibBuilder.loadTexts: cbQosTSStatsEntry.setStatus('current')
cbQosTSStatsDelayedByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 1), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSStatsDelayedByteOverflow.setStatus('current')
cbQosTSStatsDelayedByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 2), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSStatsDelayedByte.setStatus('current')
cbQosTSStatsDelayedByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 3), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSStatsDelayedByte64.setStatus('current')
cbQosTSStatsDelayedPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSStatsDelayedPktOverflow.setStatus('current')
cbQosTSStatsDelayedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSStatsDelayedPkt.setStatus('current')
cbQosTSStatsDelayedPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 6), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSStatsDelayedPkt64.setStatus('current')
cbQosTSStatsDropByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 7), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSStatsDropByteOverflow.setStatus('current')
cbQosTSStatsDropByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 8), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSStatsDropByte.setStatus('current')
cbQosTSStatsDropByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 9), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSStatsDropByte64.setStatus('current')
cbQosTSStatsDropPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSStatsDropPktOverflow.setStatus('current')
cbQosTSStatsDropPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 11), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSStatsDropPkt.setStatus('current')
cbQosTSStatsDropPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 12), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSStatsDropPkt64.setStatus('current')
cbQosTSStatsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSStatsActive.setStatus('current')
cbQosTSStatsCurrentQSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 14), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTSStatsCurrentQSize.setStatus('current')
cbQosREDClassStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1), )
if mibBuilder.loadTexts: cbQosREDClassStatsTable.setStatus('current')
cbQosREDClassStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosREDValue"))
if mibBuilder.loadTexts: cbQosREDClassStatsEntry.setStatus('current')
cbQosREDRandomDropPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 1), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDRandomDropPktOverflow.setStatus('current')
cbQosREDRandomDropPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 2), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDRandomDropPkt.setStatus('current')
cbQosREDRandomDropPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDRandomDropPkt64.setStatus('current')
cbQosREDRandomDropByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 4), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDRandomDropByteOverflow.setStatus('current')
cbQosREDRandomDropByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 5), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDRandomDropByte.setStatus('current')
cbQosREDRandomDropByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 6), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDRandomDropByte64.setStatus('current')
cbQosREDTailDropPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 7), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDTailDropPktOverflow.setStatus('current')
cbQosREDTailDropPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 8), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDTailDropPkt.setStatus('current')
cbQosREDTailDropPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 9), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDTailDropPkt64.setStatus('current')
cbQosREDTailDropByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 10), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDTailDropByteOverflow.setStatus('current')
cbQosREDTailDropByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 11), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDTailDropByte.setStatus('current')
cbQosREDTailDropByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 12), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDTailDropByte64.setStatus('current')
cbQosREDTransmitPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 13), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDTransmitPktOverflow.setStatus('current')
cbQosREDTransmitPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 14), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDTransmitPkt.setStatus('current')
cbQosREDTransmitPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 15), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDTransmitPkt64.setStatus('current')
cbQosREDTransmitByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 16), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDTransmitByteOverflow.setStatus('current')
cbQosREDTransmitByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 17), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDTransmitByte.setStatus('current')
cbQosREDTransmitByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 18), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDTransmitByte64.setStatus('current')
cbQosREDECNMarkPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 19), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDECNMarkPktOverflow.setStatus('current')
cbQosREDECNMarkPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 20), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDECNMarkPkt.setStatus('current')
cbQosREDECNMarkPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 21), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDECNMarkPkt64.setStatus('current')
cbQosREDECNMarkByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 22), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDECNMarkByteOverflow.setStatus('current')
cbQosREDECNMarkByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 23), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDECNMarkByte.setStatus('current')
cbQosREDECNMarkByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 24), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDECNMarkByte64.setStatus('current')
cbQosREDMeanQSizeUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 25), CbQosQueueUnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDMeanQSizeUnits.setStatus('current')
cbQosREDMeanQSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 26), CbQosQueueDepth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosREDMeanQSize.setStatus('current')
cbQosIPHCCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 22, 1), )
if mibBuilder.loadTexts: cbQosIPHCCfgTable.setStatus('current')
cbQosIPHCCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 22, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
if mibBuilder.loadTexts: cbQosIPHCCfgEntry.setStatus('current')
cbQosIPHCCfgOption = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 22, 1, 1, 1), IPHCOption()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCCfgOption.setStatus('current')
cbQosIPHCCfgEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 22, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCCfgEnabled.setStatus('current')
cbQosIPHCStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1), )
if mibBuilder.loadTexts: cbQosIPHCStatsTable.setStatus('current')
cbQosIPHCStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
if mibBuilder.loadTexts: cbQosIPHCStatsEntry.setStatus('current')
cbQosIPHCRtpSentPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 1), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCRtpSentPktOverflow.setStatus('current')
cbQosIPHCRtpSentPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 2), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCRtpSentPkt.setStatus('current')
cbQosIPHCRtpSentPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCRtpSentPkt64.setStatus('current')
cbQosIPHCRtpCmprsOutPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 4), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCRtpCmprsOutPktOverflow.setStatus('current')
cbQosIPHCRtpCmprsOutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 5), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCRtpCmprsOutPkt.setStatus('current')
cbQosIPHCRtpCmprsOutPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 6), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCRtpCmprsOutPkt64.setStatus('current')
cbQosIPHCRtpSavedByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 7), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCRtpSavedByteOverflow.setStatus('current')
cbQosIPHCRtpSavedByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 8), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCRtpSavedByte.setStatus('current')
cbQosIPHCRtpSavedByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 9), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCRtpSavedByte64.setStatus('current')
cbQosIPHCRtpSentByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 10), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCRtpSentByteOverflow.setStatus('current')
cbQosIPHCRtpSentByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 11), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCRtpSentByte.setStatus('current')
cbQosIPHCRtpSentByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 12), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCRtpSentByte64.setStatus('current')
cbQosIPHCRtpSentByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 13), Gauge32()).setUnits('Octets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCRtpSentByteRate.setStatus('current')
cbQosIPHCTcpSentPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 14), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCTcpSentPktOverflow.setStatus('current')
cbQosIPHCTcpSentPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 15), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCTcpSentPkt.setStatus('current')
cbQosIPHCTcpSentPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 16), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCTcpSentPkt64.setStatus('current')
cbQosIPHCTcpCmprsOutPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 17), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCTcpCmprsOutPktOverflow.setStatus('current')
cbQosIPHCTcpCmprsOutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 18), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCTcpCmprsOutPkt.setStatus('current')
cbQosIPHCTcpCmprsOutPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 19), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCTcpCmprsOutPkt64.setStatus('current')
cbQosIPHCTcpSavedByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 20), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCTcpSavedByteOverflow.setStatus('current')
cbQosIPHCTcpSavedByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 21), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCTcpSavedByte.setStatus('current')
cbQosIPHCTcpSavedByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 22), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCTcpSavedByte64.setStatus('current')
cbQosIPHCTcpSentByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 23), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCTcpSentByteOverflow.setStatus('current')
cbQosIPHCTcpSentByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 24), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCTcpSentByte.setStatus('current')
cbQosIPHCTcpSentByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 25), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCTcpSentByte64.setStatus('current')
cbQosIPHCTcpSentByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 26), Gauge32()).setUnits('Octets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCTcpSentByteRate.setStatus('current')
cbQosIPHCRtpFullHdrSentPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 27), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCRtpFullHdrSentPktOverflow.setStatus('current')
cbQosIPHCRtpFullHdrSentPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 28), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCRtpFullHdrSentPkt.setStatus('current')
cbQosIPHCRtpFullHdrSentPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 29), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCRtpFullHdrSentPkt64.setStatus('current')
cbQosIPHCTcpFullHdrSentPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 30), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCTcpFullHdrSentPktOverflow.setStatus('current')
cbQosIPHCTcpFullHdrSentPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 31), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCTcpFullHdrSentPkt.setStatus('current')
cbQosIPHCTcpFullHdrSentPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 32), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosIPHCTcpFullHdrSentPkt64.setStatus('current')
cbQosSetStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1), )
if mibBuilder.loadTexts: cbQosSetStatsTable.setStatus('current')
cbQosSetStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
if mibBuilder.loadTexts: cbQosSetStatsEntry.setStatus('current')
cbQosSetDscpPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 1), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetDscpPkt64.setStatus('current')
cbQosSetPrecedencePkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 2), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetPrecedencePkt64.setStatus('current')
cbQosSetQosGroupPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetQosGroupPkt64.setStatus('current')
cbQosSetFrDePkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetFrDePkt64.setStatus('current')
cbQosSetAtmClpPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 5), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetAtmClpPkt64.setStatus('current')
cbQosSetL2CosPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 6), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetL2CosPkt64.setStatus('current')
cbQosSetMplsExpImpositionPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 7), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetMplsExpImpositionPkt64.setStatus('current')
cbQosSetDiscardClassPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 8), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetDiscardClassPkt64.setStatus('current')
cbQosSetMplsExpTopMostPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 9), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetMplsExpTopMostPkt64.setStatus('current')
cbQosSetSrpPriorityPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 10), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetSrpPriorityPkt64.setStatus('current')
cbQosSetFrFecnBecnPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 11), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetFrFecnBecnPkt64.setStatus('current')
cbQosSetDscpTunnelPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 12), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetDscpTunnelPkt64.setStatus('current')
cbQosSetPrecedenceTunnelPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 13), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosSetPrecedenceTunnelPkt64.setStatus('current')
cbQosPoliceColorStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1), )
if mibBuilder.loadTexts: cbQosPoliceColorStatsTable.setStatus('current')
cbQosPoliceColorStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
if mibBuilder.loadTexts: cbQosPoliceColorStatsEntry.setStatus('current')
cbQosPoliceCfmColorCfmPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 1), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfmColorCfmPkt64.setStatus('current')
cbQosPoliceCfmColorCfmByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 2), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfmColorCfmByte64.setStatus('current')
cbQosPoliceCfmColorExdPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfmColorExdPkt64.setStatus('current')
cbQosPoliceCfmColorExdByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 4), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfmColorExdByte64.setStatus('current')
cbQosPoliceCfmColorVltPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 5), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfmColorVltPkt64.setStatus('current')
cbQosPoliceCfmColorVltByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 6), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfmColorVltByte64.setStatus('current')
cbQosPoliceExdColorExdPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 7), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceExdColorExdPkt64.setStatus('current')
cbQosPoliceExdColorExdByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 8), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceExdColorExdByte64.setStatus('current')
cbQosPoliceExdColorVltPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 9), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceExdColorVltPkt64.setStatus('current')
cbQosPoliceExdColorVltByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 10), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceExdColorVltByte64.setStatus('current')
cbQosPoliceVltColorVltPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 11), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceVltColorVltPkt64.setStatus('current')
cbQosPoliceVltColorVltByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 12), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceVltColorVltByte64.setStatus('current')
cbQosPoliceCfmColorCfmBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 13), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfmColorCfmBitRate.setStatus('current')
cbQosPoliceCfmColorExdBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 14), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfmColorExdBitRate.setStatus('current')
cbQosPoliceCfmColorVltBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 15), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceCfmColorVltBitRate.setStatus('current')
cbQosPoliceExdColorExdBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 16), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceExdColorExdBitRate.setStatus('current')
cbQosPoliceExdColorVltBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 17), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceExdColorVltBitRate.setStatus('current')
cbQosPoliceVltColorVltBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 18), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosPoliceVltColorVltBitRate.setStatus('current')
cbQosTableMapCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 26, 1), )
if mibBuilder.loadTexts: cbQosTableMapCfgTable.setStatus('current')
cbQosTableMapCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 26, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgIndex"))
if mibBuilder.loadTexts: cbQosTableMapCfgEntry.setStatus('current')
cbQosTableMapCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 26, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cbQosTableMapCfgIndex.setStatus('current')
cbQosTableMapCfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 26, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTableMapCfgName.setStatus('current')
cbQosTableMapCfgBehavior = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 26, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("value", 1), ("copy", 2), ("ignore", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTableMapCfgBehavior.setStatus('current')
cbQosTableMapCfgDftValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 26, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTableMapCfgDftValue.setStatus('current')
cbQosTableMapValueCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 27, 1), )
if mibBuilder.loadTexts: cbQosTableMapValueCfgTable.setStatus('current')
cbQosTableMapValueCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 27, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapValueCfgFrom"))
if mibBuilder.loadTexts: cbQosTableMapValueCfgEntry.setStatus('current')
cbQosTableMapValueCfgFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 27, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cbQosTableMapValueCfgFrom.setStatus('current')
cbQosTableMapValueCfgTo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 27, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTableMapValueCfgTo.setStatus('current')
cbQosTableMapSetCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1), )
if mibBuilder.loadTexts: cbQosTableMapSetCfgTable.setStatus('current')
cbQosTableMapSetCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
if mibBuilder.loadTexts: cbQosTableMapSetCfgEntry.setStatus('current')
cbQosTMSetIpDscpFromType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 1), CbQosTMSetType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTMSetIpDscpFromType.setStatus('current')
cbQosTMSetIpDscpMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTMSetIpDscpMapName.setStatus('current')
cbQosTMSetIpPrecedenceFromType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 3), CbQosTMSetType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTMSetIpPrecedenceFromType.setStatus('current')
cbQosTMSetIpPrecedenceMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTMSetIpPrecedenceMapName.setStatus('current')
cbQosTMSetQosGroupFromType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 5), CbQosTMSetType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTMSetQosGroupFromType.setStatus('current')
cbQosTMSetQosGroupMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTMSetQosGroupMapName.setStatus('current')
cbQosTMSetL2CosFromType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 7), CbQosTMSetType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTMSetL2CosFromType.setStatus('current')
cbQosTMSetL2CosMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTMSetL2CosMapName.setStatus('current')
cbQosTMSetMplsExpImpFromType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 9), CbQosTMSetType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTMSetMplsExpImpFromType.setStatus('current')
cbQosTMSetMplsExpImpMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTMSetMplsExpImpMapName.setStatus('current')
cbQosTMSetMplsExpTopFromType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 11), CbQosTMSetType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTMSetMplsExpTopFromType.setStatus('current')
cbQosTMSetMplsExpTopMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosTMSetMplsExpTopMapName.setStatus('current')
cbQosEBCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 29, 1), )
if mibBuilder.loadTexts: cbQosEBCfgTable.setStatus('current')
cbQosEBCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 29, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
if mibBuilder.loadTexts: cbQosEBCfgEntry.setStatus('current')
cbQosEBCfgMechanism = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 29, 1, 1, 1), CbQosEBType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosEBCfgMechanism.setStatus('current')
cbQosEBCfgDropTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 29, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(50, 1000000))).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosEBCfgDropTarget.setStatus('current')
cbQosEBCfgDelayTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 29, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(50, 1000000))).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosEBCfgDelayTarget.setStatus('current')
cbQosEBCfgDelayThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 29, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16, 1000))).setUnits('millisecond').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosEBCfgDelayThreshold.setStatus('current')
cbQosEBStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 30, 1), )
if mibBuilder.loadTexts: cbQosEBStatsTable.setStatus('current')
cbQosEBStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 30, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
if mibBuilder.loadTexts: cbQosEBStatsEntry.setStatus('current')
cbQosEBStatsCorvilEBValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 30, 1, 1, 1), Gauge32()).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosEBStatsCorvilEBValue.setStatus('current')
cbQosEBStatsCorvilEBStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 30, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosEBStatsCorvilEBStatus.setStatus('current')
cbQosEBStatsCorvilCTD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 30, 1, 1, 3), CbQosEBCtd()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosEBStatsCorvilCTD.setStatus('current')
cbQosC3plAccountCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 33, 1), )
if mibBuilder.loadTexts: cbQosC3plAccountCfgTable.setStatus('current')
cbQosC3plAccountCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 33, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
if mibBuilder.loadTexts: cbQosC3plAccountCfgEntry.setStatus('current')
cbQosC3plAccountFeatureType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 33, 1, 1, 1), SetC3plAccountFeatureType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosC3plAccountFeatureType.setStatus('current')
cbQosC3plAccountStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1), )
if mibBuilder.loadTexts: cbQosC3plAccountStatsTable.setStatus('current')
cbQosC3plAccountStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountFeatureType"))
if mibBuilder.loadTexts: cbQosC3plAccountStatsEntry.setStatus('current')
cbQosC3plAccountDropPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 1), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosC3plAccountDropPktOverflow.setStatus('current')
cbQosC3plAccountDropPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 2), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosC3plAccountDropPkt.setStatus('current')
cbQosC3plAccountDropPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosC3plAccountDropPkt64.setStatus('current')
cbQosC3plAccountDropByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 4), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosC3plAccountDropByteOverflow.setStatus('current')
cbQosC3plAccountDropByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 5), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosC3plAccountDropByte.setStatus('current')
cbQosC3plAccountDropByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 6), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosC3plAccountDropByte64.setStatus('current')
cbQosC3plAccountTailDropPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 7), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosC3plAccountTailDropPktOverflow.setStatus('current')
cbQosC3plAccountTailDropPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 8), Counter32()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosC3plAccountTailDropPkt.setStatus('current')
cbQosC3plAccountTailDropPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 9), Counter64()).setUnits('Packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosC3plAccountTailDropPkt64.setStatus('current')
cbQosC3plAccountTailDropByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 10), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosC3plAccountTailDropByteOverflow.setStatus('current')
cbQosC3plAccountTailDropByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 11), Counter32()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosC3plAccountTailDropByte.setStatus('current')
cbQosC3plAccountTailDropByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 12), Counter64()).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cbQosC3plAccountTailDropByte64.setStatus('current')
ciscocbQosMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1))
ciscocbQosMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2))
ciscocbQosMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 1)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscocbQosMIBCompliance = ciscocbQosMIBCompliance.setStatus('deprecated')
ciscocbQosMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 2)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscocbQosMIBComplianceRev1 = ciscocbQosMIBComplianceRev1.setStatus('deprecated')
ciscocbQosMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 3)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNewSetCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscocbQosMIBComplianceRev2 = ciscocbQosMIBComplianceRev2.setStatus('deprecated')
ciscocbQosMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 4)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNewSetCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscocbQosMIBComplianceRev3 = ciscocbQosMIBComplianceRev3.setStatus('deprecated')
ciscocbQosMIBComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 5)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNewSetCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscocbQosMIBComplianceRev4 = ciscocbQosMIBComplianceRev4.setStatus('deprecated')
ciscocbQosMIBComplianceRev5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 6)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNewSetCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscocbQosMIBComplianceRev5 = ciscocbQosMIBComplianceRev5.setStatus('deprecated')
ciscocbQosMIBComplianceRev6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 7)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev3"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2Group"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyExtGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscocbQosMIBComplianceRev6 = ciscocbQosMIBComplianceRev6.setStatus('deprecated')
ciscocbQosMIBComplianceRev7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 8)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev3"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2Group"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscocbQosMIBComplianceRev7 = ciscocbQosMIBComplianceRev7.setStatus('deprecated')
ciscocbQosMIBComplianceRev8 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 9)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev3"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2Group"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrDeGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscocbQosMIBComplianceRev8 = ciscocbQosMIBComplianceRev8.setStatus('current')
ciscocbQosMIBComplianceRev9 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 10)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev3"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2Group"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEVCGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFragmentGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscocbQosMIBComplianceRev9 = ciscocbQosMIBComplianceRev9.setStatus('current')
ciscocbQosMIBComplianceRev10 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 11)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev3"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2Group"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEVCGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFragmentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsExt"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscocbQosMIBComplianceRev10 = ciscocbQosMIBComplianceRev10.setStatus('deprecated')
ciscocbQosMIBComplianceRev11 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 12)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev3"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQos421XRCfgExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2Group"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEVCGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFragmentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsExt"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscocbQosMIBComplianceRev11 = ciscocbQosMIBComplianceRev11.setStatus('deprecated')
ciscocbQosMIBComplianceRev12 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 13)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev3"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQos421XRCfgExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosBitRateExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2Group"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEVCGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFragmentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsExt"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscocbQosMIBComplianceRev12 = ciscocbQosMIBComplianceRev12.setStatus('deprecated')
ciscocbQosMIBComplianceRev13 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 14)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev3"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQos421XRCfgExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosBitRateExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2Group"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEVCGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFragmentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroupRev1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscocbQosMIBComplianceRev13 = ciscocbQosMIBComplianceRev13.setStatus('current')
cbQosServicePolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 1)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosIfType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyDirection"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIfIndex"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrDLCI"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAtmVPI"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAtmVCI"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosServicePolicyGroup = cbQosServicePolicyGroup.setStatus('deprecated')
cbQosInterfacePolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 2)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosIFPolicyIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosInterfacePolicyGroup = cbQosInterfacePolicyGroup.setStatus('current')
cbQosFrameRelayVCPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 3)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosFRPolicyIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosFrameRelayVCPolicyGroup = cbQosFrameRelayVCPolicyGroup.setStatus('current')
cbQosATMPVCPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 4)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPolicyIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosATMPVCPolicyGroup = cbQosATMPVCPolicyGroup.setStatus('current')
cbQosObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 5)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosParentObjectsIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosObjectsGroup = cbQosObjectsGroup.setStatus('current')
cbQosPolicyMapCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 6)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapName"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapDesc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosPolicyMapCfgGroup = cbQosPolicyMapCfgGroup.setStatus('current')
cbQosClassMapCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 7)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMName"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMDesc"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMInfo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosClassMapCfgGroup = cbQosClassMapCfgGroup.setStatus('current')
cbQosMatchStmtCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 8)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtName"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtInfo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosMatchStmtCfgGroup = cbQosMatchStmtCfgGroup.setStatus('current')
cbQosQueueingCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 9)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgBandwidth"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgBandwidthUnits"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgFlowEnabled"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgPriorityEnabled"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgAggregateQSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgIndividualQSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgPrioBurstSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosQueueingCfgGroup = cbQosQueueingCfgGroup.setStatus('deprecated')
cbQosREDCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 10)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgExponWeight"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgMeanQsize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosREDCfgGroup = cbQosREDCfgGroup.setStatus('deprecated')
cbQosREDClassCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 11)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgMinThreshold"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgMaxThreshold"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgPktDropProb"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosREDClassCfgGroup = cbQosREDClassCfgGroup.setStatus('deprecated')
cbQosPoliceCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 12)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgConformAction"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgConformSetValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExceedAction"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExceedSetValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPir"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosPoliceCfgGroup = cbQosPoliceCfgGroup.setStatus('deprecated')
cbQosTSCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 13)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgAdaptiveEnabled"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgAdaptiveRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgLimitType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosTSCfgGroup = cbQosTSCfgGroup.setStatus('current')
cbQosSetCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 14)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFeature"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgIpDSCPValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgIpPrecedenceValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgQosGroupValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2CosValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsExpValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosSetCfgGroup = cbQosSetCfgGroup.setStatus('deprecated')
cbQosClassMapStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 15)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPrePolicyPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPrePolicyPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPrePolicyPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPrePolicyByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPrePolicyByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPrePolicyByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPrePolicyBitRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPostPolicyByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPostPolicyByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPostPolicyByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPostPolicyBitRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMDropPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMDropPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMDropPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMDropByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMDropByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMDropByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMDropBitRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosClassMapStatsGroup = cbQosClassMapStatsGroup.setStatus('current')
cbQosNoBufferDropGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 16)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMNoBufDropPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMNoBufDropPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMNoBufDropPkt64"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosNoBufferDropGroup = cbQosNoBufferDropGroup.setStatus('current')
cbQosQueueingDynamicQNumberGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 17)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgDynamicQNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosQueueingDynamicQNumberGroup = cbQosQueueingDynamicQNumberGroup.setStatus('current')
cbQosTrafficShapingDelayCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 18)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDelayedByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDelayedByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDelayedByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDelayedPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDelayedPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDelayedPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsActive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosTrafficShapingDelayCountersGroup = cbQosTrafficShapingDelayCountersGroup.setStatus('current')
cbQosMatchStmtStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 19)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchPrePolicyPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchPrePolicyPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchPrePolicyPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchPrePolicyByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchPrePolicyByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchPrePolicyByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchPrePolicyBitRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosMatchStmtStatsGroup = cbQosMatchStmtStatsGroup.setStatus('current')
cbQosPoliceStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 20)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceConformedPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceConformedPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceConformedPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceConformedByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceConformedByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceConformedByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceConformedBitRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExceededPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExceededPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExceededPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExceededByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExceededByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExceededByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExceededBitRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosPoliceStatsGroup = cbQosPoliceStatsGroup.setStatus('current')
cbQosQueueingStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 21)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCurrentQDepth"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingMaxQDepth"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDiscardByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDiscardByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDiscardByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDiscardPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDiscardPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDiscardPkt64"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosQueueingStatsGroup = cbQosQueueingStatsGroup.setStatus('current')
cbQosTSStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 22)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDropByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDropByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDropByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDropPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDropPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDropPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsCurrentQSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosTSStatsGroup = cbQosTSStatsGroup.setStatus('current')
cbQosREDClassStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 23)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDRandomDropPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDRandomDropPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDRandomDropPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDRandomDropByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDRandomDropByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDRandomDropByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTailDropPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTailDropPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTailDropPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTailDropByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTailDropByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTailDropByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDMeanQSizeUnits"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDMeanQSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosREDClassStatsGroup = cbQosREDClassStatsGroup.setStatus('current')
cbQosREDClassXmitCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 24)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTransmitPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTransmitPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTransmitPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTransmitByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTransmitByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTransmitByte64"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosREDClassXmitCountersGroup = cbQosREDClassXmitCountersGroup.setStatus('current')
cbQosAFPoliceStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 25)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceViolatedPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceViolatedPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceViolatedPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceViolatedByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceViolatedByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceViolatedByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceViolatedBitRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosAFPoliceStatsGroup = cbQosAFPoliceStatsGroup.setStatus('current')
cbQosAFPoliceCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 26)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgViolateAction"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgViolateSetValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosAFPoliceCfgGroup = cbQosAFPoliceCfgGroup.setStatus('deprecated')
cbQosREDDscpCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 27)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgDscpPrec"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosREDDscpCfgGroup = cbQosREDDscpCfgGroup.setStatus('current')
cbQosNewSetCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 28)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2CosValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosNewSetCfgGroup = cbQosNewSetCfgGroup.setStatus('deprecated')
cbQosQueueingCfgGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 29)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgBandwidth"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgBandwidthUnits"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgFlowEnabled"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgPriorityEnabled"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgIndividualQSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgPrioBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitUnits"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgAggregateQLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosQueueingCfgGroupRev1 = cbQosQueueingCfgGroupRev1.setStatus('deprecated')
cbQosREDCfgGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 30)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgExponWeight"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosREDCfgGroupRev1 = cbQosREDCfgGroupRev1.setStatus('current')
cbQosREDClassCfgGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 31)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgPktDropProb"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgThresholdUnit"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMinThreshold"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMaxThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosREDClassCfgGroupRev1 = cbQosREDClassCfgGroupRev1.setStatus('deprecated')
cbQosPoliceCfgGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 32)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPir"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosPoliceCfgGroupRev1 = cbQosPoliceCfgGroupRev1.setStatus('deprecated')
cbQosPoliceActionCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 33)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgConform"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgConformSetValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgExceed"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgExceedSetValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosPoliceActionCfgGroup = cbQosPoliceActionCfgGroup.setStatus('current')
cbQosAFPoliceViolateCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 34)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgViolate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgViolateSetValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosAFPoliceViolateCfgGroup = cbQosAFPoliceViolateCfgGroup.setStatus('current')
cbQosREDECNCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 35)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgECNEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosREDECNCfgGroup = cbQosREDECNCfgGroup.setStatus('current')
cbQosREDClassECNMarkCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 36)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNMarkPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNMarkPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNMarkPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNMarkByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNMarkByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNMarkByte64"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosREDClassECNMarkCountersGroup = cbQosREDClassECNMarkCountersGroup.setStatus('current')
cbQosPoliceCfgExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 37)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgRate64"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosPoliceCfgExtGroup = cbQosPoliceCfgExtGroup.setStatus('current')
cbQosSetCfgGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 38)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFeature"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgIpDSCPValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgIpPrecedenceValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgQosGroupValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosSetCfgGroupRev1 = cbQosSetCfgGroupRev1.setStatus('current')
cbQosSetCfgMplsImpositionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 39)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsExpValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosSetCfgMplsImpositionGroup = cbQosSetCfgMplsImpositionGroup.setStatus('current')
cbQosSetCfgDiscardClassGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 40)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosSetCfgDiscardClassGroup = cbQosSetCfgDiscardClassGroup.setStatus('current')
cbQosSetCfgMPLSTopMostGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 41)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsExpTopMostValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosSetCfgMPLSTopMostGroup = cbQosSetCfgMPLSTopMostGroup.setStatus('current')
cbQosPoliceCfgGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 42)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtBurstSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosPoliceCfgGroupRev2 = cbQosPoliceCfgGroupRev2.setStatus('current')
cbQosPoliceCfgPirGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 43)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPir"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosPoliceCfgPirGroup = cbQosPoliceCfgPirGroup.setStatus('current')
cbQosPoliceCfgPercentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 44)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgRateType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentRateValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentPirValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosPoliceCfgPercentGroup = cbQosPoliceCfgPercentGroup.setStatus('current')
cbQosTSCfgPercentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 45)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgRateType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentRateValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosTSCfgPercentGroup = cbQosTSCfgPercentGroup.setStatus('current')
cbQosIPHCCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 46)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgOption"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosIPHCCfgGroup = cbQosIPHCCfgGroup.setStatus('current')
cbQosIPHCStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 47)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSentPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSentPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSentPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpCmprsOutPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpCmprsOutPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpCmprsOutPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSavedByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSavedByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSavedByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSentByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSentByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSentByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSentByteRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSentPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSentPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSentPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpCmprsOutPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpCmprsOutPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpCmprsOutPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSavedByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSavedByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSavedByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSentByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSentByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSentByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSentByteRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosIPHCStatsGroup = cbQosIPHCStatsGroup.setStatus('current')
cbQosServicePolicyGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 48)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosIfType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyDirection"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIfIndex"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrDLCI"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAtmVPI"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAtmVCI"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEntityIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosServicePolicyGroupRev1 = cbQosServicePolicyGroupRev1.setStatus('current')
cbQosQueueingCfgQLimitTimeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 49)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgAggrQLimitTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosQueueingCfgQLimitTimeGroup = cbQosQueueingCfgQLimitTimeGroup.setStatus('current')
cbQosREDCfgThresholdTimeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 50)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMinThresholdTime"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMaxThresholdTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosREDCfgThresholdTimeGroup = cbQosREDCfgThresholdTimeGroup.setStatus('current')
cbQosPoliceCfgCellGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 51)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellPir"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgBurstCell"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtBurstCell"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosPoliceCfgCellGroup = cbQosPoliceCfgCellGroup.setStatus('current')
cbQosPoliceCfgTimeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 52)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgBurstTime"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtBurstTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosPoliceCfgTimeGroup = cbQosPoliceCfgTimeGroup.setStatus('current')
cbQosPoliceCfgCdvtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 53)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosPoliceCfgCdvtGroup = cbQosPoliceCfgCdvtGroup.setStatus('current')
cbQosPoliceCfgColorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 54)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgConformColor"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExceedColor"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosPoliceCfgColorGroup = cbQosPoliceCfgColorGroup.setStatus('current')
cbQosTSCfgTimeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 55)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgBurstTime"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtBurstTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosTSCfgTimeGroup = cbQosTSCfgTimeGroup.setStatus('current')
cbQosSetCfgSrpPriorityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 56)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosSetCfgSrpPriorityGroup = cbQosSetCfgSrpPriorityGroup.setStatus('current')
cbQosSetCfgFrFecnBecnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 57)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosSetCfgFrFecnBecnGroup = cbQosSetCfgFrFecnBecnGroup.setStatus('current')
cbQosSetStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 58)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetDscpPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetPrecedencePkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetQosGroupPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetFrDePkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetAtmClpPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetL2CosPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetMplsExpImpositionPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetDiscardClassPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetMplsExpTopMostPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetSrpPriorityPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetFrFecnBecnPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetDscpTunnelPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetPrecedenceTunnelPkt64"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosSetStatsGroup = cbQosSetStatsGroup.setStatus('current')
cbQosPoliceColorStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 59)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfmColorCfmPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfmColorCfmByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfmColorExdPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfmColorExdByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfmColorVltPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfmColorVltByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExdColorExdPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExdColorExdByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExdColorVltPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExdColorVltByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceVltColorVltPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceVltColorVltByte64"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosPoliceColorStatsGroup = cbQosPoliceColorStatsGroup.setStatus('current')
cbQosTableMapCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 60)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgName"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgBehavior"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgDftValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapValueCfgTo"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetIpDscpFromType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetIpDscpMapName"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetIpPrecedenceFromType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetIpPrecedenceMapName"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetQosGroupFromType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetQosGroupMapName"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetL2CosFromType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetL2CosMapName"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetMplsExpImpFromType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetMplsExpImpMapName"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetMplsExpTopFromType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetMplsExpTopMapName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosTableMapCfgGroup = cbQosTableMapCfgGroup.setStatus('current')
cbQosEBCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 61)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgMechanism"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgDropTarget"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgDelayTarget"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgDelayThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosEBCfgGroup = cbQosEBCfgGroup.setStatus('current')
cbQosEBStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 62)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsCorvilEBValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsCorvilEBStatus"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsCorvilCTD"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosEBStatsGroup = cbQosEBStatsGroup.setStatus('current')
cbQosServicePolicyExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 63)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosVlanIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosServicePolicyExtGroup = cbQosServicePolicyExtGroup.setStatus('current')
cbQosMeasureIPSLACfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 64)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroupIndex"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroupName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosMeasureIPSLACfgGroup = cbQosMeasureIPSLACfgGroup.setStatus('current')
cbQosTSCfgExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 65)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgRate64"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosTSCfgExtGroup = cbQosTSCfgExtGroup.setStatus('current')
cbQosQueueingCfgGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 66)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgBandwidth"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgBandwidthUnits"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgFlowEnabled"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgPriorityEnabled"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgIndividualQSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgPrioBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitUnits"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgAggregateQLimit"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgPriorityLevel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosQueueingCfgGroupRev2 = cbQosQueueingCfgGroupRev2.setStatus('current')
cbQosSetCfgL2Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 67)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2CosValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2CosInnerValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosSetCfgL2Group = cbQosSetCfgL2Group.setStatus('current')
cbQosREDClassCfgGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 68)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgPktDropProb"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMinThreshold"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMaxThreshold"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMinThresholdTime"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMaxThresholdTime"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMaxThresholdUnit"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMinThresholdUnit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosREDClassCfgGroupRev2 = cbQosREDClassCfgGroupRev2.setStatus('current')
cbQosQueueingClassCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 69)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgThreshold"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgThresholdUnit"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgQLimitWeight"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosQueueingClassCfgGroup = cbQosQueueingClassCfgGroup.setStatus('current')
cbQosPoliceCfgGroupRev3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 70)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgConditional"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosPoliceCfgGroupRev3 = cbQosPoliceCfgGroupRev3.setStatus('current')
cbQosC3plAccountCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 71)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountFeatureType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosC3plAccountCfgGroup = cbQosC3plAccountCfgGroup.setStatus('current')
cbQosC3plAccountStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 72)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountDropPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountDropPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountDropPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountDropByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountDropByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountDropByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountTailDropPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountTailDropPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountTailDropPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountTailDropByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountTailDropByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountTailDropByte64"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosC3plAccountStatsGroup = cbQosC3plAccountStatsGroup.setStatus('current')
cbQosSetCfgFrDeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 73)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrDe"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosSetCfgFrDeGroup = cbQosSetCfgFrDeGroup.setStatus('current')
cbQosEVCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 74)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosEVC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosEVCGroup = cbQosEVCGroup.setStatus('current')
cbQosFragmentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 75)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMFragmentPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMFragmentPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMFragmentPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMFragmentByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMFragmentByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMFragmentByte64"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosFragmentGroup = cbQosFragmentGroup.setStatus('current')
cbQosSetCfgExt = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 76)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgIpPrecedenceTunnelValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgIpDSCPTunnelValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDei"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDeiImposition"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosSetCfgExt = cbQosSetCfgExt.setStatus('current')
cbQosPoliceColorStatsExt = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 77)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExdColorExdBitRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfmColorCfmBitRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfmColorExdBitRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfmColorVltBitRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExdColorVltBitRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceVltColorVltBitRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosPoliceColorStatsExt = cbQosPoliceColorStatsExt.setStatus('current')
cbQosIPHCCfgExt = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 78)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosIPHCCfgExt = cbQosIPHCCfgExt.setStatus('current')
cbQosIPHCStatsExt = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 79)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpFullHdrSentPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpFullHdrSentPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpFullHdrSentPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpFullHdrSentPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpFullHdrSentPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpFullHdrSentPkt64"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosIPHCStatsExt = cbQosIPHCStatsExt.setStatus('current')
cbQos421XRCfgExt = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 80)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyDiscontinuityTime"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgBandwidth64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgIndividualQSize64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgBurstSize64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtBurstSize64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPir64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgBurstSize64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtBurstSize64"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQos421XRCfgExt = cbQos421XRCfgExt.setStatus('current')
cbQosBitRateExt = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 81)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPrePolicyBitRate64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPostPolicyBitRate64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMDropBitRate64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceConformedBitRate64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExceededBitRate64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceViolatedBitRate64"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosBitRateExt = cbQosBitRateExt.setStatus('current')
cbQosQueueingStatsGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 82)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCurrentQDepthPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingMaxQDepthPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingTransmitByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingTransmitPkt64"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosQueueingStatsGroupRev1 = cbQosQueueingStatsGroupRev1.setStatus('current')
cbQosServicePolicyExtGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 83)).setObjects(("CISCO-CLASS-BASED-QOS-MIB", "cbQosParentPolicyIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cbQosServicePolicyExtGroupRev2 = cbQosServicePolicyExtGroupRev2.setStatus('current')
mibBuilder.exportSymbols("CISCO-CLASS-BASED-QOS-MIB", cbQosPoliceCfgPercentRateValue=cbQosPoliceCfgPercentRateValue, cbQosQueueingStatsTable=cbQosQueueingStatsTable, cbQosTSCfgExtBurstSize64=cbQosTSCfgExtBurstSize64, cbQosREDTailDropPkt64=cbQosREDTailDropPkt64, cbQosSetCfgTable=cbQosSetCfgTable, cbQosSetStatsGroup=cbQosSetStatsGroup, ciscocbQosMIBComplianceRev6=ciscocbQosMIBComplianceRev6, cbQosQueueingClassCfgThresholdUnit=cbQosQueueingClassCfgThresholdUnit, cbQosSetCfgIpDSCPValue=cbQosSetCfgIpDSCPValue, cbQosIPHCTcpFullHdrSentPkt=cbQosIPHCTcpFullHdrSentPkt, cbQosObjectsTable=cbQosObjectsTable, cbQosQueueingStatsEntry=cbQosQueueingStatsEntry, cbQosSetCfgIpPrecedenceValue=cbQosSetCfgIpPrecedenceValue, cbQosC3plAccountFeatureType=cbQosC3plAccountFeatureType, cbQosREDClassCfg=cbQosREDClassCfg, cbQosPoliceExceededByte=cbQosPoliceExceededByte, cbQosObjectsGroup=cbQosObjectsGroup, cbQosQueueingCfgBandwidthUnits=cbQosQueueingCfgBandwidthUnits, cbQosCMFragmentPkt=cbQosCMFragmentPkt, cbQosSetCfgFrDe=cbQosSetCfgFrDe, cbQosPolicyMapName=cbQosPolicyMapName, cbQosServicePolicy=cbQosServicePolicy, cbQosSetCfgDiscardClassValue=cbQosSetCfgDiscardClassValue, cbQosTSStatsDropPkt64=cbQosTSStatsDropPkt64, cbQosPoliceExdColorVltByte64=cbQosPoliceExdColorVltByte64, cbQosPoliceCfgBurstTime=cbQosPoliceCfgBurstTime, cbQosIFPolicyIndex=cbQosIFPolicyIndex, cbQosQueueingCfgDynamicQNumber=cbQosQueueingCfgDynamicQNumber, cbQosSetCfgDiscardClassGroup=cbQosSetCfgDiscardClassGroup, cbQosCMPrePolicyPktOverflow=cbQosCMPrePolicyPktOverflow, cbQos421XRCfgExt=cbQos421XRCfgExt, cbQosQueueingClassConfigIndex=cbQosQueueingClassConfigIndex, cbQosPoliceCfgRateType=cbQosPoliceCfgRateType, cbQosTSCfgBurstSize64=cbQosTSCfgBurstSize64, cbQosSetAtmClpPkt64=cbQosSetAtmClpPkt64, cbQosQueueingMaxQDepthPkt=cbQosQueueingMaxQDepthPkt, cbQosTSStatsGroup=cbQosTSStatsGroup, cbQosEBCfgDelayThreshold=cbQosEBCfgDelayThreshold, cbQosQueueingStatsGroupRev1=cbQosQueueingStatsGroupRev1, cbQosPoliceConformedByte=cbQosPoliceConformedByte, cbQosCMPostPolicyByte=cbQosCMPostPolicyByte, cbQosQueueingClassCfgEntry=cbQosQueueingClassCfgEntry, cbQosPolicyMapCfgTable=cbQosPolicyMapCfgTable, InterfaceType=InterfaceType, cbQosPoliceCfgGroup=cbQosPoliceCfgGroup, cbQosREDECNMarkByte64=cbQosREDECNMarkByte64, cbQosTableMapCfgGroup=cbQosTableMapCfgGroup, cbQosSetDiscardClassPkt64=cbQosSetDiscardClassPkt64, cbQosTSCfgAdaptiveRate=cbQosTSCfgAdaptiveRate, cbQosPoliceCfgRate=cbQosPoliceCfgRate, ciscocbQosMIBConformance=ciscocbQosMIBConformance, cbQosIPHCRtpSentByte=cbQosIPHCRtpSentByte, cbQosTSCfgTable=cbQosTSCfgTable, cbQosC3plAccountStats=cbQosC3plAccountStats, QosObjectType=QosObjectType, cbQosCMPrePolicyByte=cbQosCMPrePolicyByte, cbQosCMPostPolicyByteOverflow=cbQosCMPostPolicyByteOverflow, cbQosSetCfgDeiImposition=cbQosSetCfgDeiImposition, cbQosPoliceColorStatsEntry=cbQosPoliceColorStatsEntry, cbQosFrameRelayVCPolicy=cbQosFrameRelayVCPolicy, cbQosMatchPrePolicyPkt64=cbQosMatchPrePolicyPkt64, cbQosQueueingCfgFlowEnabled=cbQosQueueingCfgFlowEnabled, cbQosPoliceCfmColorVltPkt64=cbQosPoliceCfmColorVltPkt64, cbQosPoliceActionCfgIndex=cbQosPoliceActionCfgIndex, QueueingBandwidthUnits=QueueingBandwidthUnits, cbQosIPHCTcpSentByteOverflow=cbQosIPHCTcpSentByteOverflow, cbQosQueueingCfgPrioBurstSize=cbQosQueueingCfgPrioBurstSize, cbQosMeasureIPSLACfgEntry=cbQosMeasureIPSLACfgEntry, cbQosIfType=cbQosIfType, cbQosREDMeanQSize=cbQosREDMeanQSize, cbQosREDECNMarkByteOverflow=cbQosREDECNMarkByteOverflow, cbQosCMDropPkt=cbQosCMDropPkt, cbQosIPHCRtpFullHdrSentPkt=cbQosIPHCRtpFullHdrSentPkt, cbQosPoliceCfgCdvtGroup=cbQosPoliceCfgCdvtGroup, cbQosTSStatsDropByteOverflow=cbQosTSStatsDropByteOverflow, ciscocbQosMIBComplianceRev11=ciscocbQosMIBComplianceRev11, cbQosMatchStmtInfo=cbQosMatchStmtInfo, cbQosTMSetMplsExpImpMapName=cbQosTMSetMplsExpImpMapName, cbQosTSCfgLimitType=cbQosTSCfgLimitType, cbQosPoliceCfgViolateAction=cbQosPoliceCfgViolateAction, cbQosAtmVCI=cbQosAtmVCI, QosMatchInfo=QosMatchInfo, cbQosQueueingTransmitPkt64=cbQosQueueingTransmitPkt64, cbQosObjectsType=cbQosObjectsType, cbQosMatchPrePolicyPktOverflow=cbQosMatchPrePolicyPktOverflow, cbQosIPHCTcpCmprsOutPkt64=cbQosIPHCTcpCmprsOutPkt64, cbQosPoliceColorStatsExt=cbQosPoliceColorStatsExt, cbQosSetCfgDei=cbQosSetCfgDei, cbQosC3plAccountDropPktOverflow=cbQosC3plAccountDropPktOverflow, cbQosPolicyMapCfg=cbQosPolicyMapCfg, cbQosREDClassCfgTable=cbQosREDClassCfgTable, cbQosQueueingDiscardByteOverflow=cbQosQueueingDiscardByteOverflow, cbQosIPHCCfgTable=cbQosIPHCCfgTable, cbQosIPHCRtpCmprsOutPkt=cbQosIPHCRtpCmprsOutPkt, cbQosQueueingClassCfgTable=cbQosQueueingClassCfgTable, cbQosIPHCTcpSavedByte64=cbQosIPHCTcpSavedByte64, cbQosSetPrecedencePkt64=cbQosSetPrecedencePkt64, cbQosC3plAccountCfgGroup=cbQosC3plAccountCfgGroup, cbQosATMPVCPolicyEntry=cbQosATMPVCPolicyEntry, ciscocbQosMIBComplianceRev12=ciscocbQosMIBComplianceRev12, QosClassInfo=QosClassInfo, cbQosSetCfgFeature=cbQosSetCfgFeature, cbQosPoliceExceededPkt64=cbQosPoliceExceededPkt64, cbQosC3plAccountCfg=cbQosC3plAccountCfg, cbQosIPHCRtpSentByte64=cbQosIPHCRtpSentByte64, cbQosEBCfgGroup=cbQosEBCfgGroup, cbQosCMNoBufDropPkt=cbQosCMNoBufDropPkt, cbQosPoliceExceededByteOverflow=cbQosPoliceExceededByteOverflow, cbQosSetCfgExt=cbQosSetCfgExt, cbQosREDCfgGroupRev1=cbQosREDCfgGroupRev1, cbQosTSCfgBurstTime=cbQosTSCfgBurstTime, cbQosCMPrePolicyBitRate=cbQosCMPrePolicyBitRate, cbQosPoliceCfgExtBurstSize64=cbQosPoliceCfgExtBurstSize64, cbQosMatchPrePolicyPkt=cbQosMatchPrePolicyPkt, cbQosObjectsIndex=cbQosObjectsIndex, cbQosTSStatsActive=cbQosTSStatsActive, cbQosSetCfgMplsExpValue=cbQosSetCfgMplsExpValue, cbQosIPHCCfgOption=cbQosIPHCCfgOption, cbQosPoliceViolatedByte=cbQosPoliceViolatedByte, cbQosMatchStmtCfg=cbQosMatchStmtCfg, cbQosPoliceCfgEntry=cbQosPoliceCfgEntry, cbQosPoliceCfmColorExdPkt64=cbQosPoliceCfmColorExdPkt64, ciscoCBQosMIB=ciscoCBQosMIB, cbQosTSCfgEntry=cbQosTSCfgEntry, cbQosPoliceCfgExtBurstSize=cbQosPoliceCfgExtBurstSize, cbQosSetCfgL2CosValue=cbQosSetCfgL2CosValue, cbQosPoliceViolatedPkt64=cbQosPoliceViolatedPkt64, cbQosPoliceViolatedByteOverflow=cbQosPoliceViolatedByteOverflow, cbQosPoliceExceededPktOverflow=cbQosPoliceExceededPktOverflow, cbQosPoliceVltColorVltByte64=cbQosPoliceVltColorVltByte64, cbQosPoliceViolatedPktOverflow=cbQosPoliceViolatedPktOverflow, cbQosPoliceCfgTimeGroup=cbQosPoliceCfgTimeGroup, cbQosTableMapCfgIndex=cbQosTableMapCfgIndex, cbQosPoliceViolatedByte64=cbQosPoliceViolatedByte64, cbQosQueueingClassCfgQLimitWeight=cbQosQueueingClassCfgQLimitWeight, cbQosTSCfgPercentRateValue=cbQosTSCfgPercentRateValue, cbQosIPHCRtpSavedByte=cbQosIPHCRtpSavedByte, cbQosQueueingCfgGroupRev2=cbQosQueueingCfgGroupRev2, cbQosSetCfgQosGroupValue=cbQosSetCfgQosGroupValue, cbQosPoliceCfmColorVltBitRate=cbQosPoliceCfmColorVltBitRate, cbQosC3plAccountCfgEntry=cbQosC3plAccountCfgEntry, cbQosREDValue=cbQosREDValue, cbQosPoliceColorStatsTable=cbQosPoliceColorStatsTable, cbQosIfIndex=cbQosIfIndex, cbQosCMPostPolicyBitRate64=cbQosCMPostPolicyBitRate64, cbQosTSStats=cbQosTSStats, cbQosSetCfgL2CosInnerValue=cbQosSetCfgL2CosInnerValue, cbQosTableMapSetCfgEntry=cbQosTableMapSetCfgEntry, cbQosPoliceViolatedPkt=cbQosPoliceViolatedPkt, ciscocbQosMIBComplianceRev13=ciscocbQosMIBComplianceRev13, cbQosIPHCTcpSentPkt=cbQosIPHCTcpSentPkt, cbQosIPHCTcpCmprsOutPktOverflow=cbQosIPHCTcpCmprsOutPktOverflow, cbQosPoliceCfg=cbQosPoliceCfg, cbQosPoliceCfmColorExdByte64=cbQosPoliceCfmColorExdByte64, cbQosCMStatsTable=cbQosCMStatsTable, cbQosQueueingCfgAggregateQLimit=cbQosQueueingCfgAggregateQLimit, cbQosTableMapCfg=cbQosTableMapCfg, CbQosEBCtd=CbQosEBCtd, cbQosREDRandomDropPkt=cbQosREDRandomDropPkt, cbQosIPHCRtpSentByteRate=cbQosIPHCRtpSentByteRate, cbQosMatchPrePolicyBitRate=cbQosMatchPrePolicyBitRate, cbQosClassMapStatsGroup=cbQosClassMapStatsGroup, cbQosREDClassCfgGroupRev1=cbQosREDClassCfgGroupRev1, cbQosCMDropByte=cbQosCMDropByte, cbQosC3plAccountStatsTable=cbQosC3plAccountStatsTable, cbQosFragmentGroup=cbQosFragmentGroup, cbQosTSCfgExtGroup=cbQosTSCfgExtGroup, cbQosTableMapValueCfg=cbQosTableMapValueCfg, cbQosREDClassECNMarkCountersGroup=cbQosREDClassECNMarkCountersGroup, cbQosPoliceActionCfgViolateSetValue=cbQosPoliceActionCfgViolateSetValue, cbQosSetCfg=cbQosSetCfg, cbQosMatchStmtStatsGroup=cbQosMatchStmtStatsGroup, cbQosQueueingStatsGroup=cbQosQueueingStatsGroup, cbQosREDCfgExponWeight=cbQosREDCfgExponWeight, cbQosQueueingCfgIndividualQSize64=cbQosQueueingCfgIndividualQSize64, cbQosSetCfgGroupRev1=cbQosSetCfgGroupRev1, cbQosPolicyDirection=cbQosPolicyDirection, cbQosREDClassStatsGroup=cbQosREDClassStatsGroup, cbQosQueueingCfgBandwidth=cbQosQueueingCfgBandwidth, cbQosTMSetIpPrecedenceMapName=cbQosTMSetIpPrecedenceMapName, cbQosTSStatsDelayedPkt64=cbQosTSStatsDelayedPkt64, ciscocbQosMIBComplianceRev4=ciscocbQosMIBComplianceRev4, CbQosQueueUnitType=CbQosQueueUnitType, cbQosREDTransmitPkt64=cbQosREDTransmitPkt64, cbQosTSStatsEntry=cbQosTSStatsEntry, cbQosSetCfgEntry=cbQosSetCfgEntry, cbQosPoliceCfgCellGroup=cbQosPoliceCfgCellGroup, cbQosTMSetL2CosFromType=cbQosTMSetL2CosFromType, cbQosTSStatsDropPkt=cbQosTSStatsDropPkt, cbQosClassMapCfg=cbQosClassMapCfg, cbQosQueueingCfgBandwidth64=cbQosQueueingCfgBandwidth64, cbQosCMPrePolicyByte64=cbQosCMPrePolicyByte64, cbQosSetCfgGroup=cbQosSetCfgGroup, cbQosFrameRelayVCPolicyGroup=cbQosFrameRelayVCPolicyGroup, cbQosServicePolicyExtGroup=cbQosServicePolicyExtGroup, cbQosPoliceCfgPir=cbQosPoliceCfgPir, cbQosTSStatsDropPktOverflow=cbQosTSStatsDropPktOverflow, cbQosFrameRelayPolicyEntry=cbQosFrameRelayPolicyEntry, cbQosREDClassStatsTable=cbQosREDClassStatsTable, cbQosTMSetQosGroupFromType=cbQosTMSetQosGroupFromType, cbQosSetFrDePkt64=cbQosSetFrDePkt64, cbQosPoliceCfgGroupRev2=cbQosPoliceCfgGroupRev2, cbQosTSStatsDropByte=cbQosTSStatsDropByte, cbQosREDRandomDropPktOverflow=cbQosREDRandomDropPktOverflow, ciscocbQosMIBComplianceRev8=ciscocbQosMIBComplianceRev8, cbQosTSCfgRateType=cbQosTSCfgRateType, cbQosClassMapStats=cbQosClassMapStats, cbQosREDRandomDropPkt64=cbQosREDRandomDropPkt64, cbQosMatchStmtStats=cbQosMatchStmtStats, cbQosTMSetIpDscpMapName=cbQosTMSetIpDscpMapName, cbQosQueueingCfgGroup=cbQosQueueingCfgGroup, QueueMechanism=QueueMechanism, cbQosPoliceExdColorVltBitRate=cbQosPoliceExdColorVltBitRate, cbQosC3plAccountTailDropPkt=cbQosC3plAccountTailDropPkt, cbQosSetCfgSrpPriority=cbQosSetCfgSrpPriority, cbQosTableMapValueCfgEntry=cbQosTableMapValueCfgEntry, cbQosPoliceExdColorExdByte64=cbQosPoliceExdColorExdByte64, cbQosTSStatsDropByte64=cbQosTSStatsDropByte64, ciscocbQosMIBGroups=ciscocbQosMIBGroups, cbQosPoliceStats=cbQosPoliceStats, cbQosIPHCRtpCmprsOutPktOverflow=cbQosIPHCRtpCmprsOutPktOverflow, cbQosREDRandomDropByte64=cbQosREDRandomDropByte64, cbQosInterfacePolicyGroup=cbQosInterfacePolicyGroup, cbQosREDCfgTable=cbQosREDCfgTable, cbQosTableMapValueCfgFrom=cbQosTableMapValueCfgFrom, cbQosREDTransmitByte=cbQosREDTransmitByte, cbQosTableMapCfgBehavior=cbQosTableMapCfgBehavior, cbQosIPHCRtpSavedByte64=cbQosIPHCRtpSavedByte64, cbQosEBStatsCorvilEBStatus=cbQosEBStatsCorvilEBStatus, ciscocbQosMIBComplianceRev5=ciscocbQosMIBComplianceRev5, cbQosPoliceViolatedBitRate=cbQosPoliceViolatedBitRate, cbQosPoliceStatsGroup=cbQosPoliceStatsGroup, cbQosREDECNMarkPkt=cbQosREDECNMarkPkt, ciscocbQosMIBCompliances=ciscocbQosMIBCompliances, ciscocbQosMIBComplianceRev2=ciscocbQosMIBComplianceRev2, cbQosQueueingCfgEntry=cbQosQueueingCfgEntry, cbQosIPHCTcpFullHdrSentPktOverflow=cbQosIPHCTcpFullHdrSentPktOverflow, cbQosREDDscpCfgGroup=cbQosREDDscpCfgGroup, cbQosQueueingDynamicQNumberGroup=cbQosQueueingDynamicQNumberGroup, cbQosEBStatsTable=cbQosEBStatsTable, ciscocbQosMIBComplianceRev3=ciscocbQosMIBComplianceRev3, cbQosCMCfgTable=cbQosCMCfgTable, cbQosMeasureIPSLACfg=cbQosMeasureIPSLACfg, cbQosAtmVPI=cbQosAtmVPI, cbQosTSStatsCurrentQSize=cbQosTSStatsCurrentQSize, cbQosPoliceConformedBitRate64=cbQosPoliceConformedBitRate64, cbQosCMDropPkt64=cbQosCMDropPkt64, cbQosPoliceConformedByteOverflow=cbQosPoliceConformedByteOverflow, cbQosREDCfgThresholdTimeGroup=cbQosREDCfgThresholdTimeGroup, cbQosObjects=cbQosObjects, cbQosREDClassCfgMinThresholdUnit=cbQosREDClassCfgMinThresholdUnit, cbQosIPHCCfg=cbQosIPHCCfg, cbQosSetMplsExpTopMostPkt64=cbQosSetMplsExpTopMostPkt64, cbQosCMNoBufDropPkt64=cbQosCMNoBufDropPkt64)
mibBuilder.exportSymbols("CISCO-CLASS-BASED-QOS-MIB", cbQosQueueingCurrentQDepthPkt=cbQosQueueingCurrentQDepthPkt, cbQosQlimitWeightValue=cbQosQlimitWeightValue, cbQosPoliceColorStatsGroup=cbQosPoliceColorStatsGroup, cbQosC3plAccountDropByteOverflow=cbQosC3plAccountDropByteOverflow, cbQosC3plAccountTailDropPktOverflow=cbQosC3plAccountTailDropPktOverflow, cbQosREDCfgMaxThreshold=cbQosREDCfgMaxThreshold, cbQosPoliceCfgBurstSize64=cbQosPoliceCfgBurstSize64, cbQosEBCfg=cbQosEBCfg, cbQosTableMapSetCfgTable=cbQosTableMapSetCfgTable, ciscocbQosMIBComplianceRev1=ciscocbQosMIBComplianceRev1, cbQosTSStatsDelayedPktOverflow=cbQosTSStatsDelayedPktOverflow, cbQosQueueingDiscardPkt=cbQosQueueingDiscardPkt, cbQosIPHCStatsTable=cbQosIPHCStatsTable, cbQosPolicyMapDesc=cbQosPolicyMapDesc, cbQosPoliceCfgCdvt=cbQosPoliceCfgCdvt, cbQosPoliceExceededPkt=cbQosPoliceExceededPkt, cbQosFrDLCI=cbQosFrDLCI, cbQosTMSetMplsExpImpFromType=cbQosTMSetMplsExpImpFromType, cbQosIPHCRtpFullHdrSentPkt64=cbQosIPHCRtpFullHdrSentPkt64, cbQosQueueingCfgQLimitUnits=cbQosQueueingCfgQLimitUnits, cbQosIPHCRtpFullHdrSentPktOverflow=cbQosIPHCRtpFullHdrSentPktOverflow, cbQosREDTransmitPktOverflow=cbQosREDTransmitPktOverflow, cbQosEBStatsCorvilEBValue=cbQosEBStatsCorvilEBValue, cbQosIPHCStatsEntry=cbQosIPHCStatsEntry, cbQosMeasureIPSLACfgTable=cbQosMeasureIPSLACfgTable, ciscocbQosMIBComplianceRev7=ciscocbQosMIBComplianceRev7, cbQosPoliceActionCfg=cbQosPoliceActionCfg, cbQosATMPVCPolicy=cbQosATMPVCPolicy, cbQosQueueingCfgQLimitTimeGroup=cbQosQueueingCfgQLimitTimeGroup, cbQosCMFragmentPktOverflow=cbQosCMFragmentPktOverflow, cbQosREDECNMarkPkt64=cbQosREDECNMarkPkt64, cbQosIPHCStatsGroup=cbQosIPHCStatsGroup, cbQosTSCfgRate64=cbQosTSCfgRate64, cbQosTSCfgRate=cbQosTSCfgRate, cbQosSetCfgMPLSTopMostGroup=cbQosSetCfgMPLSTopMostGroup, cbQosC3plAccountTailDropByte64=cbQosC3plAccountTailDropByte64, cbQosREDClassCfgThresholdUnit=cbQosREDClassCfgThresholdUnit, cbQosMatchPrePolicyByte=cbQosMatchPrePolicyByte, cbQosSetCfgL2Group=cbQosSetCfgL2Group, cbQosPolicyMapCfgEntry=cbQosPolicyMapCfgEntry, cbQosREDClassCfgMinThreshold=cbQosREDClassCfgMinThreshold, cbQosIPHCTcpFullHdrSentPkt64=cbQosIPHCTcpFullHdrSentPkt64, cbQosCMFragmentByte=cbQosCMFragmentByte, cbQosC3plAccountTailDropByte=cbQosC3plAccountTailDropByte, cbQosQueueingCfgPriorityEnabled=cbQosQueueingCfgPriorityEnabled, cbQosSetFrFecnBecnPkt64=cbQosSetFrFecnBecnPkt64, cbQosQueueingCfgIndividualQSize=cbQosQueueingCfgIndividualQSize, cbQosEBStatsEntry=cbQosEBStatsEntry, cbQosSetCfgFrFecnBecn=cbQosSetCfgFrFecnBecn, cbQosSetStats=cbQosSetStats, cbQosPoliceCfmColorVltByte64=cbQosPoliceCfmColorVltByte64, cbQosTSStatsDelayedByteOverflow=cbQosTSStatsDelayedByteOverflow, cbQosPoliceActionCfgExceed=cbQosPoliceActionCfgExceed, cbQosSetStatsTable=cbQosSetStatsTable, cbQosIPHCCfgEntry=cbQosIPHCCfgEntry, cbQosREDCfgPktDropProb=cbQosREDCfgPktDropProb, CbQosQueueDepth=CbQosQueueDepth, cbQosCMDropByte64=cbQosCMDropByte64, cbQosSetCfgIpPrecedenceTunnelValue=cbQosSetCfgIpPrecedenceTunnelValue, cbQosTSCfgTimeGroup=cbQosTSCfgTimeGroup, cbQosPoliceViolatedBitRate64=cbQosPoliceViolatedBitRate64, cbQosTableMapValueCfgTable=cbQosTableMapValueCfgTable, ciscoCBQosMIBObjects=ciscoCBQosMIBObjects, cbQosTSCfgAdaptiveEnabled=cbQosTSCfgAdaptiveEnabled, cbQosMeasureIPSLACfgGroup=cbQosMeasureIPSLACfgGroup, cbQosServicePolicyGroupRev1=cbQosServicePolicyGroupRev1, cbQosTSCfgExtBurstSize=cbQosTSCfgExtBurstSize, cbQosCMPrePolicyByteOverflow=cbQosCMPrePolicyByteOverflow, cbQosPoliceCfgRate64=cbQosPoliceCfgRate64, cbQosEBCfgTable=cbQosEBCfgTable, cbQosIPHCTcpSavedByteOverflow=cbQosIPHCTcpSavedByteOverflow, cbQosIPHCTcpSentByteRate=cbQosIPHCTcpSentByteRate, cbQosPoliceCfgViolateSetValue=cbQosPoliceCfgViolateSetValue, cbQosMatchPrePolicyByte64=cbQosMatchPrePolicyByte64, cbQosREDMeanQSizeUnits=cbQosREDMeanQSizeUnits, cbQosParentObjectsIndex=cbQosParentObjectsIndex, cbQosCMCfgEntry=cbQosCMCfgEntry, SetC3plAccountFeatureType=SetC3plAccountFeatureType, cbQosIPHCCfgGroup=cbQosIPHCCfgGroup, cbQosPoliceConformedByte64=cbQosPoliceConformedByte64, cbQosFRPolicyIndex=cbQosFRPolicyIndex, cbQosPoliceCfmColorCfmPkt64=cbQosPoliceCfmColorCfmPkt64, cbQosREDECNCfgGroup=cbQosREDECNCfgGroup, cbQosPoliceCfgExceedAction=cbQosPoliceCfgExceedAction, cbQosEBCfgMechanism=cbQosEBCfgMechanism, cbQosC3plAccountDropByte64=cbQosC3plAccountDropByte64, cbQosServicePolicyGroup=cbQosServicePolicyGroup, cbQosPolicyMapCfgGroup=cbQosPolicyMapCfgGroup, cbQosCMStatsEntry=cbQosCMStatsEntry, cbQosQueueingCfgTable=cbQosQueueingCfgTable, PoliceAction=PoliceAction, cbQosMatchStmtCfgTable=cbQosMatchStmtCfgTable, cbQosREDClassCfgEntry=cbQosREDClassCfgEntry, cbQosTrafficShapingDelayCountersGroup=cbQosTrafficShapingDelayCountersGroup, cbQosSetStatsEntry=cbQosSetStatsEntry, PYSNMP_MODULE_ID=ciscoCBQosMIB, cbQosPoliceCfmColorExdBitRate=cbQosPoliceCfmColorExdBitRate, cbQosPoliceExceededBitRate64=cbQosPoliceExceededBitRate64, cbQosCMPrePolicyPkt64=cbQosCMPrePolicyPkt64, cbQosCMName=cbQosCMName, cbQosCMDropBitRate=cbQosCMDropBitRate, cbQosTableMapValueCfgTo=cbQosTableMapValueCfgTo, cbQosInterfacePolicyEntry=cbQosInterfacePolicyEntry, cbQosPoliceCfgCellPir=cbQosPoliceCfgCellPir, cbQosServicePolicyEntry=cbQosServicePolicyEntry, cbQosSetCfgIpDSCPTunnelValue=cbQosSetCfgIpDSCPTunnelValue, cbQosSetCfgSrpPriorityGroup=cbQosSetCfgSrpPriorityGroup, cbQosQueueingDiscardPktOverflow=cbQosQueueingDiscardPktOverflow, cbQosTSStatsDelayedByte64=cbQosTSStatsDelayedByte64, cbQosSetDscpPkt64=cbQosSetDscpPkt64, cbQosNewSetCfgGroup=cbQosNewSetCfgGroup, cbQosIPHCRtpSentPkt64=cbQosIPHCRtpSentPkt64, cbQosREDTransmitByteOverflow=cbQosREDTransmitByteOverflow, cbQosTSCfg=cbQosTSCfg, cbQosPoliceExdColorExdBitRate=cbQosPoliceExdColorExdBitRate, cbQosPoliceConformedPkt64=cbQosPoliceConformedPkt64, cbQosQueueingDiscardByte=cbQosQueueingDiscardByte, cbQosC3plAccountDropByte=cbQosC3plAccountDropByte, cbQosSetPrecedenceTunnelPkt64=cbQosSetPrecedenceTunnelPkt64, cbQosPoliceVltColorVltPkt64=cbQosPoliceVltColorVltPkt64, ciscocbQosMIBCompliance=ciscocbQosMIBCompliance, cbQosPoliceCfgCellRate=cbQosPoliceCfgCellRate, cbQosNoBufferDropGroup=cbQosNoBufferDropGroup, cbQosIPHCStatsExt=cbQosIPHCStatsExt, cbQosCMFragmentPkt64=cbQosCMFragmentPkt64, cbQosQueueingStats=cbQosQueueingStats, cbQosQueueingCfgPriorityLevel=cbQosQueueingCfgPriorityLevel, cbQosCMDropBitRate64=cbQosCMDropBitRate64, cbQosCMPrePolicyBitRate64=cbQosCMPrePolicyBitRate64, cbQosREDTailDropByte64=cbQosREDTailDropByte64, cbQosPoliceCfgConformAction=cbQosPoliceCfgConformAction, cbQosEBStatsGroup=cbQosEBStatsGroup, cbQosServicePolicyExtGroupRev2=cbQosServicePolicyExtGroupRev2, cbQosREDClassCfgMinThresholdTime=cbQosREDClassCfgMinThresholdTime, cbQosQueueingDiscardByte64=cbQosQueueingDiscardByte64, cbQosTableMapCfgDftValue=cbQosTableMapCfgDftValue, cbQosMatchPrePolicyByteOverflow=cbQosMatchPrePolicyByteOverflow, cbQosVlanIndex=cbQosVlanIndex, cbQosREDClassCfgMaxThresholdUnit=cbQosREDClassCfgMaxThresholdUnit, ciscocbQosMIBComplianceRev10=ciscocbQosMIBComplianceRev10, cbQosQueueingMaxQDepth=cbQosQueueingMaxQDepth, TrafficDirection=TrafficDirection, cbQosREDClassCfgGroup=cbQosREDClassCfgGroup, cbQosPoliceCfmColorCfmBitRate=cbQosPoliceCfmColorCfmBitRate, cbQosREDECNMarkPktOverflow=cbQosREDECNMarkPktOverflow, cbQosPoliceCfgColorGroup=cbQosPoliceCfgColorGroup, cbQosPoliceActionCfgViolate=cbQosPoliceActionCfgViolate, cbQosEBCfgDelayTarget=cbQosEBCfgDelayTarget, cbQosTSCfgGroup=cbQosTSCfgGroup, cbQosPolicyIndex=cbQosPolicyIndex, cbQosMatchStmtCfgEntry=cbQosMatchStmtCfgEntry, cbQosPoliceActionCfgGroup=cbQosPoliceActionCfgGroup, cbQosSetQosGroupPkt64=cbQosSetQosGroupPkt64, IPHCOption=IPHCOption, cbQosIPHCRtpSentPktOverflow=cbQosIPHCRtpSentPktOverflow, CbQosRateType=CbQosRateType, cbQosTableMapCfgName=cbQosTableMapCfgName, cbQosSetDscpTunnelPkt64=cbQosSetDscpTunnelPkt64, cbQosMatchStmtName=cbQosMatchStmtName, REDMechanism=REDMechanism, cbQosPoliceColorStats=cbQosPoliceColorStats, cbQosTSStatsDelayedPkt=cbQosTSStatsDelayedPkt, cbQosC3plAccountCfgTable=cbQosC3plAccountCfgTable, cbQosREDCfgGroup=cbQosREDCfgGroup, cbQosAFPoliceStatsGroup=cbQosAFPoliceStatsGroup, cbQosC3plAccountStatsGroup=cbQosC3plAccountStatsGroup, cbQosPoliceExceededBitRate=cbQosPoliceExceededBitRate, cbQosQueueingTransmitByte64=cbQosQueueingTransmitByte64, cbQosREDTailDropByteOverflow=cbQosREDTailDropByteOverflow, cbQosPoliceExdColorExdPkt64=cbQosPoliceExdColorExdPkt64, cbQosIPHCRtpSentPkt=cbQosIPHCRtpSentPkt, cbQosTMSetMplsExpTopFromType=cbQosTMSetMplsExpTopFromType, cbQosSetCfgFrDeGroup=cbQosSetCfgFrDeGroup, cbQosIPHCTcpCmprsOutPkt=cbQosIPHCTcpCmprsOutPkt, cbQosQueueingCfgGroupRev1=cbQosQueueingCfgGroupRev1, cbQosREDCfgEntry=cbQosREDCfgEntry, cbQosMeasureIPSLACfgGroupIndex=cbQosMeasureIPSLACfgGroupIndex, cbQosTMSetL2CosMapName=cbQosTMSetL2CosMapName, cbQosPoliceCfgPercentPirValue=cbQosPoliceCfgPercentPirValue, cbQosREDTailDropByte=cbQosREDTailDropByte, cbQosREDCfgMinThreshold=cbQosREDCfgMinThreshold, cbQosQueueingCurrentQDepth=cbQosQueueingCurrentQDepth, cbQosCMPrePolicyPkt=cbQosCMPrePolicyPkt, cbQosREDRandomDropByteOverflow=cbQosREDRandomDropByteOverflow, cbQosTableMapSetCfg=cbQosTableMapSetCfg, cbQosFrameRelayPolicyTable=cbQosFrameRelayPolicyTable, cbQosATMPVCPolicyGroup=cbQosATMPVCPolicyGroup, cbQosTMSetMplsExpTopMapName=cbQosTMSetMplsExpTopMapName, cbQosPoliceConformedPkt=cbQosPoliceConformedPkt, cbQosQueueingClassCfgGroup=cbQosQueueingClassCfgGroup, cbQosQueueingDiscardPkt64=cbQosQueueingDiscardPkt64, cbQosPoliceCfgExtBurstTime=cbQosPoliceCfgExtBurstTime, cbQosTableMapCfgTable=cbQosTableMapCfgTable, cbQosTMSetQosGroupMapName=cbQosTMSetQosGroupMapName, cbQosMeasureIPSLACfgGroupName=cbQosMeasureIPSLACfgGroupName, cbQosPoliceCfgBurstSize=cbQosPoliceCfgBurstSize, cbQosREDClassStats=cbQosREDClassStats, cbQosEBCfgDropTarget=cbQosEBCfgDropTarget, cbQosREDClassCfgMaxThreshold=cbQosREDClassCfgMaxThreshold, cbQosSetSrpPriorityPkt64=cbQosSetSrpPriorityPkt64, cbQosPoliceConformedBitRate=cbQosPoliceConformedBitRate, cbQosAFPoliceViolateCfgGroup=cbQosAFPoliceViolateCfgGroup, cbQosInterfacePolicy=cbQosInterfacePolicy, cbQosSetMplsExpImpositionPkt64=cbQosSetMplsExpImpositionPkt64, cbQosC3plAccountStatsEntry=cbQosC3plAccountStatsEntry, cbQosPoliceConformedPktOverflow=cbQosPoliceConformedPktOverflow, cbQosPoliceActionCfgTable=cbQosPoliceActionCfgTable, cbQosAFPoliceCfgGroup=cbQosAFPoliceCfgGroup, cbQosPoliceCfgExceedSetValue=cbQosPoliceCfgExceedSetValue, cbQosCMDropByteOverflow=cbQosCMDropByteOverflow, cbQosPoliceExdColorVltPkt64=cbQosPoliceExdColorVltPkt64, cbQosInterfacePolicyTable=cbQosInterfacePolicyTable, cbQosPoliceCfgGroupRev1=cbQosPoliceCfgGroupRev1, cbQosCMPostPolicyBitRate=cbQosCMPostPolicyBitRate, cbQosEVCGroup=cbQosEVCGroup, cbQosPoliceCfgPercentGroup=cbQosPoliceCfgPercentGroup, cbQosServicePolicyTable=cbQosServicePolicyTable, cbQosBitRateExt=cbQosBitRateExt, cbQosTSCfgBurstSize=cbQosTSCfgBurstSize, cbQosCMNoBufDropPktOverflow=cbQosCMNoBufDropPktOverflow, cbQosPoliceActionCfgConformSetValue=cbQosPoliceActionCfgConformSetValue, SetFeatureType=SetFeatureType, cbQosQueueingClassCfgThreshold=cbQosQueueingClassCfgThreshold, cbQosPoliceCfgPirGroup=cbQosPoliceCfgPirGroup, cbQosREDECNMarkByte=cbQosREDECNMarkByte, cbQosQueueingCfgAggrQLimitTime=cbQosQueueingCfgAggrQLimitTime, cbQosPoliceActionCfgEntry=cbQosPoliceActionCfgEntry, cbQosCMDropPktOverflow=cbQosCMDropPktOverflow, cbQosQueueingCfgAggregateQSize=cbQosQueueingCfgAggregateQSize, cbQosSetCfgMplsImpositionGroup=cbQosSetCfgMplsImpositionGroup, cbQosEVC=cbQosEVC, cbQosREDTailDropPkt=cbQosREDTailDropPkt, cbQosATMPolicyIndex=cbQosATMPolicyIndex, cbQosQueueingClassCfg=cbQosQueueingClassCfg, cbQosIPHCTcpSentPkt64=cbQosIPHCTcpSentPkt64, cbQosTMSetIpPrecedenceFromType=cbQosTMSetIpPrecedenceFromType, cbQosPoliceStatsEntry=cbQosPoliceStatsEntry, cbQosIPHCStats=cbQosIPHCStats, cbQosREDCfgDscpPrec=cbQosREDCfgDscpPrec, CbQosTMSetType=CbQosTMSetType, cbQosTSCfgPercentGroup=cbQosTSCfgPercentGroup, cbQosIPHCTcpSentByte=cbQosIPHCTcpSentByte, cbQosPoliceCfgPir64=cbQosPoliceCfgPir64, cbQosREDCfg=cbQosREDCfg, cbQosC3plAccountTailDropByteOverflow=cbQosC3plAccountTailDropByteOverflow, cbQosPoliceActionCfgExceedSetValue=cbQosPoliceActionCfgExceedSetValue, cbQosCMFragmentByteOverflow=cbQosCMFragmentByteOverflow, cbQosTSCfgExtBurstTime=cbQosTSCfgExtBurstTime, cbQosPoliceCfgExtBurstCell=cbQosPoliceCfgExtBurstCell, cbQosIPHCTcpSavedByte=cbQosIPHCTcpSavedByte, cbQosCMInfo=cbQosCMInfo, cbQosPoliceCfgGroupRev3=cbQosPoliceCfgGroupRev3, cbQosPoliceCfgTable=cbQosPoliceCfgTable, cbQosC3plAccountTailDropPkt64=cbQosC3plAccountTailDropPkt64)
mibBuilder.exportSymbols("CISCO-CLASS-BASED-QOS-MIB", cbQosEntityIndex=cbQosEntityIndex, cbQosEBStatsCorvilCTD=cbQosEBStatsCorvilCTD, cbQosTSStatsDelayedByte=cbQosTSStatsDelayedByte, cbQosREDClassCfgMaxThresholdTime=cbQosREDClassCfgMaxThresholdTime, CbQosEBType=CbQosEBType, cbQosClassMapCfgGroup=cbQosClassMapCfgGroup, TrafficShapingLimit=TrafficShapingLimit, cbQosParentPolicyIndex=cbQosParentPolicyIndex, cbQosTSStatsTable=cbQosTSStatsTable, cbQosCMFragmentByte64=cbQosCMFragmentByte64, cbQosTMSetIpDscpFromType=cbQosTMSetIpDscpFromType, cbQosSetCfgMplsExpTopMostValue=cbQosSetCfgMplsExpTopMostValue, cbQosPoliceExceededByte64=cbQosPoliceExceededByte64, cbQosConfigIndex=cbQosConfigIndex, cbQosREDTailDropPktOverflow=cbQosREDTailDropPktOverflow, cbQosPoliceCfmColorCfmByte64=cbQosPoliceCfmColorCfmByte64, cbQosREDClassStatsEntry=cbQosREDClassStatsEntry, cbQosREDClassXmitCountersGroup=cbQosREDClassXmitCountersGroup, cbQosC3plAccountDropPkt=cbQosC3plAccountDropPkt, cbQosSetCfgFrFecnBecnGroup=cbQosSetCfgFrFecnBecnGroup, cbQosPoliceStatsTable=cbQosPoliceStatsTable, cbQosIPHCRtpCmprsOutPkt64=cbQosIPHCRtpCmprsOutPkt64, cbQosREDCfgMeanQsize=cbQosREDCfgMeanQsize, cbQosPoliceCfgConformColor=cbQosPoliceCfgConformColor, cbQosIPHCCfgEnabled=cbQosIPHCCfgEnabled, cbQosIPHCRtpSentByteOverflow=cbQosIPHCRtpSentByteOverflow, cbQosREDCfgECNEnabled=cbQosREDCfgECNEnabled, cbQosPoliceVltColorVltBitRate=cbQosPoliceVltColorVltBitRate, cbQosREDClassCfgGroupRev2=cbQosREDClassCfgGroupRev2, cbQosMatchStmtStatsTable=cbQosMatchStmtStatsTable, cbQosPoliceCfgExtGroup=cbQosPoliceCfgExtGroup, cbQosObjectsEntry=cbQosObjectsEntry, cbQosREDTransmitPkt=cbQosREDTransmitPkt, cbQosPolicyDiscontinuityTime=cbQosPolicyDiscontinuityTime, cbQosIPHCRtpSavedByteOverflow=cbQosIPHCRtpSavedByteOverflow, cbQosCMPostPolicyByte64=cbQosCMPostPolicyByte64, cbQosATMPVCPolicyTable=cbQosATMPVCPolicyTable, ciscocbQosMIBComplianceRev9=ciscocbQosMIBComplianceRev9, cbQosEBCfgEntry=cbQosEBCfgEntry, cbQosMatchStmtCfgGroup=cbQosMatchStmtCfgGroup, cbQosPoliceCfgExceedColor=cbQosPoliceCfgExceedColor, cbQosIPHCTcpSentByte64=cbQosIPHCTcpSentByte64, cbQosC3plAccountDropPkt64=cbQosC3plAccountDropPkt64, cbQosSetL2CosPkt64=cbQosSetL2CosPkt64, cbQosCMDesc=cbQosCMDesc, cbQosPoliceCfgConditional=cbQosPoliceCfgConditional, cbQosPoliceActionCfgConform=cbQosPoliceActionCfgConform, cbQosREDTransmitByte64=cbQosREDTransmitByte64, cbQosREDRandomDropByte=cbQosREDRandomDropByte, cbQosEBStats=cbQosEBStats, cbQosIPHCTcpSentPktOverflow=cbQosIPHCTcpSentPktOverflow, cbQosTableMapCfgEntry=cbQosTableMapCfgEntry, cbQosIPHCCfgExt=cbQosIPHCCfgExt, cbQosPoliceCfgConformSetValue=cbQosPoliceCfgConformSetValue, cbQosQueueingCfg=cbQosQueueingCfg, cbQosPoliceCfgBurstCell=cbQosPoliceCfgBurstCell, cbQosMatchStmtStatsEntry=cbQosMatchStmtStatsEntry)
