#
# PySNMP MIB module HPN-ICF-PBR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-PBR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:28:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
hpnicfCommon, = mibBuilder.importSymbols("HPN-ICF-OID-MIB", "hpnicfCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, MibIdentifier, TimeTicks, NotificationType, iso, Bits, Gauge32, Unsigned32, Integer32, IpAddress, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibIdentifier", "TimeTicks", "NotificationType", "iso", "Bits", "Gauge32", "Unsigned32", "Integer32", "IpAddress", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ModuleIdentity")
DisplayString, RowStatus, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TruthValue")
hpnicfPBR = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113))
hpnicfPBR.setRevisions(('2010-12-10 15:58',))
if mibBuilder.loadTexts: hpnicfPBR.setLastUpdated('201012101558Z')
if mibBuilder.loadTexts: hpnicfPBR.setOrganization('')
hpnicfPBRObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 1))
hpnicfPBRGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 1, 1))
hpnicfPBRNexthopTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 1, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPBRNexthopTrapEnabled.setStatus('current')
hpnicfPBRLocalPolicy = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPBRLocalPolicy.setStatus('current')
hpnicfPBRIPv6NexthopTrapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 1, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPBRIPv6NexthopTrapEnabled.setStatus('current')
hpnicfPBRMibTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 1, 2))
hpnicfPBRTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 1, 2, 1))
hpnicfPBRNexthopAddrType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 1, 2, 1, 1), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfPBRNexthopAddrType.setStatus('current')
hpnicfPBRNexthopAddr = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 1, 2, 1, 2), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfPBRNexthopAddr.setStatus('current')
hpnicfPBRTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 1, 2, 2))
hpnicfPBRTrapsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 1, 2, 2, 0))
hpnicfPBRNexthopFailedTrap = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 1, 2, 2, 0, 1)).setObjects(("HPN-ICF-PBR-MIB", "hpnicfPBRNexthopAddrType"), ("HPN-ICF-PBR-MIB", "hpnicfPBRNexthopAddr"))
if mibBuilder.loadTexts: hpnicfPBRNexthopFailedTrap.setStatus('current')
hpnicfPBRTables = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2))
hpnicfPBRMibPolicyNodeTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 1), )
if mibBuilder.loadTexts: hpnicfPBRMibPolicyNodeTable.setStatus('current')
hpnicfPBRMibPolicyNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-PBR-MIB", "hpnicfPBRMibPolicyNodeAddrType"), (0, "HPN-ICF-PBR-MIB", "hpnicfPBRMibPolicyName"), (0, "HPN-ICF-PBR-MIB", "hpnicfPBRMibPolicyNodeId"))
if mibBuilder.loadTexts: hpnicfPBRMibPolicyNodeEntry.setStatus('current')
hpnicfPBRMibPolicyNodeAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpnicfPBRMibPolicyNodeAddrType.setStatus('current')
hpnicfPBRMibPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 19)))
if mibBuilder.loadTexts: hpnicfPBRMibPolicyName.setStatus('current')
hpnicfPBRMibPolicyNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: hpnicfPBRMibPolicyNodeId.setStatus('current')
hpnicfPBRMibPolicyNodeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 1, 1, 4), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPBRMibPolicyNodeMode.setStatus('current')
hpnicfPBRMibPolicyNodeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPBRMibPolicyNodeRowStatus.setStatus('current')
hpnicfPBRMibIfPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 2), )
if mibBuilder.loadTexts: hpnicfPBRMibIfPolicyTable.setStatus('current')
hpnicfPBRMibIfPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 2, 1), ).setIndexNames((0, "HPN-ICF-PBR-MIB", "hpnicfPBRMibPolicyAddressType"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hpnicfPBRMibIfPolicyEntry.setStatus('current')
hpnicfPBRMibPolicyAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: hpnicfPBRMibPolicyAddressType.setStatus('current')
hpnicfPBRMibAppliedPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 19))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPBRMibAppliedPolicyName.setStatus('current')
hpnicfPBRMibIfPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPBRMibIfPolicyRowStatus.setStatus('current')
hpnicfPBRMibMatchAclTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 3), )
if mibBuilder.loadTexts: hpnicfPBRMibMatchAclTable.setStatus('current')
hpnicfPBRMibMatchAclEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 3, 1), ).setIndexNames((0, "HPN-ICF-PBR-MIB", "hpnicfPBRMibPolicyNodeAddrType"), (0, "HPN-ICF-PBR-MIB", "hpnicfPBRMibPolicyName"), (0, "HPN-ICF-PBR-MIB", "hpnicfPBRMibPolicyNodeId"))
if mibBuilder.loadTexts: hpnicfPBRMibMatchAclEntry.setStatus('current')
hpnicfPBRMibAclGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 3, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPBRMibAclGroupId.setStatus('current')
hpnicfPBRMibApplyPrecedenceTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 4), )
if mibBuilder.loadTexts: hpnicfPBRMibApplyPrecedenceTable.setStatus('current')
hpnicfPBRMibApplyPrecedenceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 4, 1), ).setIndexNames((0, "HPN-ICF-PBR-MIB", "hpnicfPBRMibPolicyNodeAddrType"), (0, "HPN-ICF-PBR-MIB", "hpnicfPBRMibPolicyName"), (0, "HPN-ICF-PBR-MIB", "hpnicfPBRMibPolicyNodeId"))
if mibBuilder.loadTexts: hpnicfPBRMibApplyPrecedenceEntry.setStatus('current')
hpnicfPBRMibApplyPrecedenceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 4, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hpnicfPBRMibApplyPrecedenceValue.setStatus('current')
hpnicfPBRMibApplyNexthopTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 5), )
if mibBuilder.loadTexts: hpnicfPBRMibApplyNexthopTable.setStatus('current')
hpnicfPBRMibApplyNexthopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 5, 1), ).setIndexNames((0, "HPN-ICF-PBR-MIB", "hpnicfPBRMibPolicyNodeAddrType"), (0, "HPN-ICF-PBR-MIB", "hpnicfPBRMibPolicyName"), (0, "HPN-ICF-PBR-MIB", "hpnicfPBRMibPolicyNodeId"), (0, "HPN-ICF-PBR-MIB", "hpnicfPBRMibApplyNexthopIndex"))
if mibBuilder.loadTexts: hpnicfPBRMibApplyNexthopEntry.setStatus('current')
hpnicfPBRMibApplyNexthopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpnicfPBRMibApplyNexthopIndex.setStatus('current')
hpnicfPBRMibApplyNexthopVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 5, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPBRMibApplyNexthopVpnName.setStatus('current')
hpnicfPBRMibApplyNexthopAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 5, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPBRMibApplyNexthopAddressType.setStatus('current')
hpnicfPBRMibApplyNexthopAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 5, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPBRMibApplyNexthopAddress.setStatus('current')
hpnicfPBRMibApplyNexthopTrackId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 5, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPBRMibApplyNexthopTrackId.setStatus('current')
hpnicfPBRMibApplyNexthopDirect = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 5, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPBRMibApplyNexthopDirect.setStatus('current')
hpnicfPBRMibApplyNexthopRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 5, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPBRMibApplyNexthopRowStatus.setStatus('current')
hpnicfPBRMibApplyDefaultNexthopTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 6), )
if mibBuilder.loadTexts: hpnicfPBRMibApplyDefaultNexthopTable.setStatus('current')
hpnicfPBRMibApplyDefaultNexthopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 6, 1), ).setIndexNames((0, "HPN-ICF-PBR-MIB", "hpnicfPBRMibPolicyNodeAddrType"), (0, "HPN-ICF-PBR-MIB", "hpnicfPBRMibPolicyName"), (0, "HPN-ICF-PBR-MIB", "hpnicfPBRMibPolicyNodeId"), (0, "HPN-ICF-PBR-MIB", "hpnicfPBRMibApplyDefaultNexthopIndex"))
if mibBuilder.loadTexts: hpnicfPBRMibApplyDefaultNexthopEntry.setStatus('current')
hpnicfPBRMibApplyDefaultNexthopIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: hpnicfPBRMibApplyDefaultNexthopIndex.setStatus('current')
hpnicfPBRMibApplyDefaultNexthopVpnName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPBRMibApplyDefaultNexthopVpnName.setStatus('current')
hpnicfPBRMibApplyDefaultNexthopAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 6, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPBRMibApplyDefaultNexthopAddressType.setStatus('current')
hpnicfPBRMibApplyDefaultNexthopAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 6, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPBRMibApplyDefaultNexthopAddress.setStatus('current')
hpnicfPBRMibApplyDefaultNexthopTrackId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 6, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPBRMibApplyDefaultNexthopTrackId.setStatus('current')
hpnicfPBRMibApplyDefaultNexthopDirect = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 6, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPBRMibApplyDefaultNexthopDirect.setStatus('current')
hpnicfPBRMibApplyDefaultNexthopRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 113, 2, 6, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfPBRMibApplyDefaultNexthopRowStatus.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-PBR-MIB", hpnicfPBRMibPolicyNodeMode=hpnicfPBRMibPolicyNodeMode, hpnicfPBRMibPolicyNodeRowStatus=hpnicfPBRMibPolicyNodeRowStatus, hpnicfPBRTraps=hpnicfPBRTraps, hpnicfPBRMibIfPolicyRowStatus=hpnicfPBRMibIfPolicyRowStatus, hpnicfPBRMibPolicyNodeId=hpnicfPBRMibPolicyNodeId, hpnicfPBRMibPolicyNodeEntry=hpnicfPBRMibPolicyNodeEntry, hpnicfPBRMibApplyDefaultNexthopDirect=hpnicfPBRMibApplyDefaultNexthopDirect, hpnicfPBRMibApplyNexthopAddress=hpnicfPBRMibApplyNexthopAddress, hpnicfPBR=hpnicfPBR, hpnicfPBRGlobal=hpnicfPBRGlobal, hpnicfPBRMibTrap=hpnicfPBRMibTrap, hpnicfPBRMibMatchAclTable=hpnicfPBRMibMatchAclTable, hpnicfPBRNexthopAddr=hpnicfPBRNexthopAddr, hpnicfPBRMibApplyDefaultNexthopVpnName=hpnicfPBRMibApplyDefaultNexthopVpnName, hpnicfPBRNexthopFailedTrap=hpnicfPBRNexthopFailedTrap, PYSNMP_MODULE_ID=hpnicfPBR, hpnicfPBRMibMatchAclEntry=hpnicfPBRMibMatchAclEntry, hpnicfPBRMibApplyNexthopVpnName=hpnicfPBRMibApplyNexthopVpnName, hpnicfPBRMibApplyNexthopAddressType=hpnicfPBRMibApplyNexthopAddressType, hpnicfPBRMibApplyNexthopEntry=hpnicfPBRMibApplyNexthopEntry, hpnicfPBRTrapObjects=hpnicfPBRTrapObjects, hpnicfPBRMibApplyNexthopTable=hpnicfPBRMibApplyNexthopTable, hpnicfPBRMibApplyDefaultNexthopRowStatus=hpnicfPBRMibApplyDefaultNexthopRowStatus, hpnicfPBRMibApplyPrecedenceValue=hpnicfPBRMibApplyPrecedenceValue, hpnicfPBRMibPolicyNodeTable=hpnicfPBRMibPolicyNodeTable, hpnicfPBRMibIfPolicyEntry=hpnicfPBRMibIfPolicyEntry, hpnicfPBRMibApplyDefaultNexthopAddressType=hpnicfPBRMibApplyDefaultNexthopAddressType, hpnicfPBRNexthopTrapEnabled=hpnicfPBRNexthopTrapEnabled, hpnicfPBRMibAppliedPolicyName=hpnicfPBRMibAppliedPolicyName, hpnicfPBRMibApplyPrecedenceTable=hpnicfPBRMibApplyPrecedenceTable, hpnicfPBRObjects=hpnicfPBRObjects, hpnicfPBRMibApplyDefaultNexthopEntry=hpnicfPBRMibApplyDefaultNexthopEntry, hpnicfPBRTrapsPrefix=hpnicfPBRTrapsPrefix, hpnicfPBRNexthopAddrType=hpnicfPBRNexthopAddrType, hpnicfPBRTables=hpnicfPBRTables, hpnicfPBRMibIfPolicyTable=hpnicfPBRMibIfPolicyTable, hpnicfPBRMibApplyNexthopRowStatus=hpnicfPBRMibApplyNexthopRowStatus, hpnicfPBRMibApplyDefaultNexthopAddress=hpnicfPBRMibApplyDefaultNexthopAddress, hpnicfPBRMibAclGroupId=hpnicfPBRMibAclGroupId, hpnicfPBRMibApplyDefaultNexthopIndex=hpnicfPBRMibApplyDefaultNexthopIndex, hpnicfPBRMibPolicyAddressType=hpnicfPBRMibPolicyAddressType, hpnicfPBRMibApplyNexthopTrackId=hpnicfPBRMibApplyNexthopTrackId, hpnicfPBRMibApplyNexthopDirect=hpnicfPBRMibApplyNexthopDirect, hpnicfPBRMibApplyNexthopIndex=hpnicfPBRMibApplyNexthopIndex, hpnicfPBRMibApplyDefaultNexthopTrackId=hpnicfPBRMibApplyDefaultNexthopTrackId, hpnicfPBRMibPolicyNodeAddrType=hpnicfPBRMibPolicyNodeAddrType, hpnicfPBRMibApplyPrecedenceEntry=hpnicfPBRMibApplyPrecedenceEntry, hpnicfPBRMibPolicyName=hpnicfPBRMibPolicyName, hpnicfPBRIPv6NexthopTrapEnabled=hpnicfPBRIPv6NexthopTrapEnabled, hpnicfPBRMibApplyDefaultNexthopTable=hpnicfPBRMibApplyDefaultNexthopTable, hpnicfPBRLocalPolicy=hpnicfPBRLocalPolicy)
