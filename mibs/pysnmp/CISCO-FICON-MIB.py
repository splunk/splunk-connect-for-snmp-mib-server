#
# PySNMP MIB module CISCO-FICON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-FICON-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:41:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
FcAddressId, = mibBuilder.importSymbols("CISCO-ST-TC", "FcAddressId")
vsanIndex, = mibBuilder.importSymbols("CISCO-VSAN-MIB", "vsanIndex")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibIdentifier, Gauge32, ModuleIdentity, Integer32, Counter32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, iso, ObjectIdentity, Unsigned32, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Gauge32", "ModuleIdentity", "Integer32", "Counter32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "iso", "ObjectIdentity", "Unsigned32", "IpAddress", "TimeTicks")
TextualConvention, RowStatus, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "TruthValue", "DisplayString")
ciscoFiconMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 375))
ciscoFiconMIB.setRevisions(('2006-04-07 00:00', '2006-03-14 00:00', '2005-10-21 00:00', '2005-10-06 00:00', '2005-06-01 00:00',))
if mibBuilder.loadTexts: ciscoFiconMIB.setLastUpdated('200604070000Z')
if mibBuilder.loadTexts: ciscoFiconMIB.setOrganization('Cisco Systems, Inc.')
ciscoFiconMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 375, 0))
ciscoFiconMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 375, 1))
ciscoFiconMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 375, 2))
ciscoFiconConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1))
ciscoFiconGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 2))
class CficonPortNumOrAddr(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 255)

cficonDefaultPortBlock = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 2, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cficonDefaultPortBlock.setStatus('current')
cficonPortSwapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 1), )
if mibBuilder.loadTexts: cficonPortSwapTable.setStatus('current')
cficonPortSwapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-FICON-MIB", "cficonPortSwapIndex"))
if mibBuilder.loadTexts: cficonPortSwapEntry.setStatus('current')
cficonPortSwapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cficonPortSwapIndex.setStatus('current')
cficonSwapPortNumberFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 1, 1, 2), CficonPortNumOrAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonSwapPortNumberFirst.setStatus('current')
cficonSwapPortNumberSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 1, 1, 3), CficonPortNumOrAddr()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonSwapPortNumberSecond.setStatus('current')
cficonSwapPortEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonSwapPortEntryStatus.setStatus('current')
cficonVsanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2), )
if mibBuilder.loadTexts: cficonVsanTable.setStatus('current')
cficonVsanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-VSAN-MIB", "vsanIndex"))
if mibBuilder.loadTexts: cficonVsanEntry.setStatus('current')
cficonVsanHostControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 1), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonVsanHostControl.setStatus('current')
cficonVsanHostControlSwOffline = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 2), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonVsanHostControlSwOffline.setStatus('current')
cficonVsanHostControlClkAlrtMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonVsanHostControlClkAlrtMode.setStatus('current')
cficonVsanSnmpControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 4), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonVsanSnmpControl.setStatus('current')
cficonVsanAutoSavePortAddrCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonVsanAutoSavePortAddrCfg.setStatus('current')
cficonVsanEnableCup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 6), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonVsanEnableCup.setStatus('current')
cficonVsanCodePage = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(37, 273, 275, 280, 281, 284, 285, 297, 500))).clone(namedValues=NamedValues(("usa", 37), ("germany", 273), ("brazil", 275), ("italy", 280), ("japan", 281), ("spain", 284), ("uk", 285), ("france", 297), ("interNational", 500))).clone('usa')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonVsanCodePage.setStatus('current')
cficonVsanCharSet = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("charSet697", 1))).clone('charSet697')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonVsanCharSet.setStatus('current')
cficonVsanKeyCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonVsanKeyCounter.setStatus('current')
cficonVsanUserAlertMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonVsanUserAlertMode.setStatus('current')
cficonVsanDeviceAllegience = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("lockedByCLI", 1), ("lockedBySnmp", 2), ("lockedByHost", 3), ("unlocked", 4))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonVsanDeviceAllegience.setStatus('current')
cficonVsanTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonVsanTime.setStatus('current')
cficonVsanHostOrDefaultTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 13), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonVsanHostOrDefaultTime.setStatus('current')
cficonVsanCupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 14), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonVsanCupName.setStatus('current')
cficonSetHostTimeControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 15), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonSetHostTimeControl.setStatus('current')
cficonVsanClearAllegience = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonVsanClearAllegience.setStatus('current')
cficonVsanEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonVsanEntryStatus.setStatus('current')
cficonVsanFiconState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("offline", 1), ("online", 2))).clone('online')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonVsanFiconState.setStatus('current')
cficonVsanSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 2, 1, 19), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonVsanSerialNum.setStatus('current')
cficonPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 3), )
if mibBuilder.loadTexts: cficonPortTable.setStatus('current')
cficonPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-VSAN-MIB", "vsanIndex"), (0, "CISCO-FICON-MIB", "cficonCfgFilename"), (0, "CISCO-FICON-MIB", "cficonPortAddr"))
if mibBuilder.loadTexts: cficonPortEntry.setStatus('current')
cficonPortAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 3, 1, 1), CficonPortNumOrAddr())
if mibBuilder.loadTexts: cficonPortAddr.setStatus('current')
cficonPortBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 3, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cficonPortBlock.setStatus('current')
cficonPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 3, 1, 3), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cficonPortName.setStatus('current')
cficonProhibitPortNumbers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cficonProhibitPortNumbers.setStatus('current')
cficonPortRunCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 4), )
if mibBuilder.loadTexts: cficonPortRunCfgTable.setStatus('current')
cficonPortRunCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-VSAN-MIB", "vsanIndex"), (0, "CISCO-FICON-MIB", "cficonPortRunCfgAddr"))
if mibBuilder.loadTexts: cficonPortRunCfgEntry.setStatus('current')
cficonPortRunCfgAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 4, 1, 1), CficonPortNumOrAddr())
if mibBuilder.loadTexts: cficonPortRunCfgAddr.setStatus('current')
cficonPortRunCfgBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 4, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cficonPortRunCfgBlock.setStatus('current')
cficonPortRunCfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 4, 1, 3), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cficonPortRunCfgName.setStatus('current')
cficonRunCfgProhibitPrtNums = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(256, 256)).setFixedLength(256)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cficonRunCfgProhibitPrtNums.setStatus('current')
cficonRunCfgTypeNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 4, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonRunCfgTypeNumber.setStatus('current')
cficonRunCfgModelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonRunCfgModelNumber.setStatus('current')
cficonRunCfgManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 4, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonRunCfgManufacturer.setStatus('current')
cficonRunCfgPlantOfMfg = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 4, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonRunCfgPlantOfMfg.setStatus('current')
cficonRunCfgSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 4, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonRunCfgSerialNumber.setStatus('current')
cficonRunCfgUnitType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("channel", 1), ("controlUnit", 2), ("fabric", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonRunCfgUnitType.setStatus('current')
cficonRunCfgPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonRunCfgPortId.setStatus('current')
cficonRunCfgStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2), ("old", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cficonRunCfgStatus.setStatus('current')
cficonCfgFileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 5), )
if mibBuilder.loadTexts: cficonCfgFileTable.setStatus('current')
cficonCfgFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-VSAN-MIB", "vsanIndex"), (0, "CISCO-FICON-MIB", "cficonCfgFilename"))
if mibBuilder.loadTexts: cficonCfgFileEntry.setStatus('current')
cficonCfgFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 5, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cficonCfgFilename.setStatus('current')
cficonCfgFileDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 5, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonCfgFileDescr.setStatus('current')
cficonCfgFileStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("locked", 1), ("unlocked", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonCfgFileStatus.setStatus('current')
cficonCfgFileLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 5, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonCfgFileLastUpdated.setStatus('current')
cficonCfgFileCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("apply", 1), ("noOp", 2), ("open", 3), ("close", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonCfgFileCmd.setStatus('current')
cficonCfgFileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 5, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonCfgFileRowStatus.setStatus('current')
cficonCfgFileCmdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("success", 1), ("inProgress", 2), ("failed", 3), ("notApplicable", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonCfgFileCmdStatus.setStatus('current')
cficonCfgFileCmdErrorString = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 5, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonCfgFileCmdErrorString.setStatus('current')
cficonPortNumIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 6), )
if mibBuilder.loadTexts: cficonPortNumIfTable.setStatus('current')
cficonPortNumIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 6, 1), ).setIndexNames((0, "CISCO-FICON-MIB", "cficonPortNumber"))
if mibBuilder.loadTexts: cficonPortNumIfEntry.setStatus('current')
cficonPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 6, 1, 1), CficonPortNumOrAddr())
if mibBuilder.loadTexts: cficonPortNumber.setStatus('current')
cficonPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 6, 1, 2), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cficonPortIfIndex.setStatus('current')
cficonPortAddrNumTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 7), )
if mibBuilder.loadTexts: cficonPortAddrNumTable.setStatus('current')
cficonPortAddrNumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 7, 1), ).setIndexNames((0, "CISCO-FICON-MIB", "cficonPortAddrPortAddr"))
if mibBuilder.loadTexts: cficonPortAddrNumEntry.setStatus('current')
cficonPortAddrPortAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 7, 1, 1), CficonPortNumOrAddr())
if mibBuilder.loadTexts: cficonPortAddrPortAddr.setStatus('current')
cficonPortAddrPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 7, 1, 2), CficonPortNumOrAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonPortAddrPortNumber.setStatus('current')
cficonPortNumAddrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 8), )
if mibBuilder.loadTexts: cficonPortNumAddrTable.setStatus('current')
cficonPortNumAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 8, 1), ).setIndexNames((0, "CISCO-FICON-MIB", "portAddrPortNumber"))
if mibBuilder.loadTexts: cficonPortNumAddrEntry.setStatus('current')
portAddrPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 8, 1, 1), CficonPortNumOrAddr())
if mibBuilder.loadTexts: portAddrPortNumber.setStatus('current')
portAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 8, 1, 2), CficonPortNumOrAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portAddress.setStatus('current')
cficonDirHistTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 9), )
if mibBuilder.loadTexts: cficonDirHistTable.setStatus('current')
cficonDirHistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 9, 1), ).setIndexNames((0, "CISCO-VSAN-MIB", "vsanIndex"), (0, "CISCO-FICON-MIB", "cficonDirHistKeyCounter"))
if mibBuilder.loadTexts: cficonDirHistEntry.setStatus('current')
cficonDirHistKeyCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cficonDirHistKeyCounter.setStatus('current')
cficonDirHistPortNumbers = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 9, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonDirHistPortNumbers.setStatus('current')
cficonStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 10), )
if mibBuilder.loadTexts: cficonStatsTable.setStatus('current')
cficonStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 10, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cficonStatsEntry.setStatus('current')
cfStatsFramePacingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 10, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfStatsFramePacingTime.setStatus('current')
cfStatsDispErrorsInFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfStatsDispErrorsInFrame.setStatus('current')
cfStatsEOFErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfStatsEOFErrs.setStatus('current')
cfStatsDispErrsOutOfFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfStatsDispErrsOutOfFrame.setStatus('current')
cfStatsInvalidOrderSets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfStatsInvalidOrderSets.setStatus('current')
cfStatsErrorSummary = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfStatsErrorSummary.setStatus('current')
cficonShowPorts = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("all", 1), ("installed", 2))).clone('installed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cficonShowPorts.setStatus('current')
cficonLinkIncidentTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 12), )
if mibBuilder.loadTexts: cficonLinkIncidentTable.setStatus('current')
cficonLinkIncidentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 12, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cficonLinkIncidentEntry.setStatus('current')
cficonLinkIncident = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("bitErrThreshExceeded", 2), ("lossOfSignalOrSync", 3), ("nosReceived", 4), ("primitiveSeqTimeOut", 5), ("invalidPrimitiveSeq", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonLinkIncident.setStatus('current')
cficonLinkIncidentTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 12, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonLinkIncidentTime.setStatus('current')
cficonLinkIncidentClear = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cficonLinkIncidentClear.setStatus('current')
cficonCfgFileCupNameTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 13), )
if mibBuilder.loadTexts: cficonCfgFileCupNameTable.setStatus('current')
cficonCfgFileCupNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 13, 1), ).setIndexNames((0, "CISCO-VSAN-MIB", "vsanIndex"), (0, "CISCO-FICON-MIB", "cficonCfgFilename"))
if mibBuilder.loadTexts: cficonCfgFileCupNameEntry.setStatus('current')
cficonCfgFileCupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 13, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cficonCfgFileCupName.setStatus('current')
cficonConfigCopyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 14), )
if mibBuilder.loadTexts: cficonConfigCopyTable.setStatus('current')
cficonConfigCopyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 14, 1), ).setIndexNames((0, "CISCO-FICON-MIB", "cficonConfigCopyIndex"))
if mibBuilder.loadTexts: cficonConfigCopyEntry.setStatus('current')
cficonConfigCopyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cficonConfigCopyIndex.setStatus('current')
cficonCopyState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 14, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inProgress", 1), ("success", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonCopyState.setStatus('current')
cficonCopyFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 14, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonCopyFailReason.setStatus('current')
cficonCopyEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 14, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonCopyEntryRowStatus.setStatus('current')
cficonAutoSaveState = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 15), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonAutoSaveState.setStatus('current')
ciscoFiconPortMap = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 16))
cficonPortMap1 = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 16, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonPortMap1.setStatus('deprecated')
cficonPortMap2 = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 16, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonPortMap2.setStatus('deprecated')
cficonPortMap3 = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 16, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonPortMap3.setStatus('deprecated')
cficonPortMap4 = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 16, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonPortMap4.setStatus('deprecated')
cficonPortMap5 = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 16, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonPortMap5.setStatus('deprecated')
cficonPortMap6 = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 16, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonPortMap6.setStatus('deprecated')
cficonPortMapMax = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 16, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonPortMapMax.setStatus('current')
cficonPortMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 16, 8), )
if mibBuilder.loadTexts: cficonPortMapTable.setStatus('current')
cficonPortMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 16, 8, 1), ).setIndexNames((0, "CISCO-FICON-MIB", "cficonPortMapIndex"))
if mibBuilder.loadTexts: cficonPortMapEntry.setStatus('current')
cficonPortMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 16, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: cficonPortMapIndex.setStatus('current')
cficonPortMapObj = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 16, 8, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonPortMapObj.setStatus('current')
cficonSlotPortNumTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 17), )
if mibBuilder.loadTexts: cficonSlotPortNumTable.setStatus('current')
cficonSlotPortNumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 17, 1), ).setIndexNames((0, "CISCO-FICON-MIB", "cficonSlotIndex"))
if mibBuilder.loadTexts: cficonSlotPortNumEntry.setStatus('current')
cficonSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: cficonSlotIndex.setStatus('current')
cficonSlotReservedPN = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 17, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cficonSlotReservedPN.setStatus('current')
cficonLogicReservedPN = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cficonLogicReservedPN.setStatus('current')
cficonRlirErlTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 19), )
if mibBuilder.loadTexts: cficonRlirErlTable.setStatus('current')
cficonRlirErlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 19, 1), ).setIndexNames((0, "CISCO-VSAN-MIB", "vsanIndex"), (0, "CISCO-FICON-MIB", "cficonRlirErlFcId"), (0, "CISCO-FICON-MIB", "cficonRlirErlFormat"))
if mibBuilder.loadTexts: cficonRlirErlEntry.setStatus('current')
cficonRlirErlFcId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 19, 1, 1), FcAddressId())
if mibBuilder.loadTexts: cficonRlirErlFcId.setStatus('current')
cficonRlirErlFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 19, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cficonRlirErlFormat.setStatus('current')
cficonRlirErlRegType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 19, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("conditionalRx", 1), ("alwaysRx", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonRlirErlRegType.setStatus('current')
cficonInterfaceSwapNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonInterfaceSwapNextIndex.setStatus('current')
cficonInterfaceSwapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 20), )
if mibBuilder.loadTexts: cficonInterfaceSwapTable.setStatus('current')
cficonInterfaceSwapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 20, 1), ).setIndexNames((0, "CISCO-FICON-MIB", "cficonInterfaceSwapIndex"))
if mibBuilder.loadTexts: cficonInterfaceSwapEntry.setStatus('current')
cficonInterfaceSwapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 20, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cficonInterfaceSwapIndex.setStatus('current')
cficonSwapInterfaceIndexFirst = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 20, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonSwapInterfaceIndexFirst.setStatus('current')
cficonSwapInterfaceIndexSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 20, 1, 3), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonSwapInterfaceIndexSecond.setStatus('current')
cficonSwapInterfaceActionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 20, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("pending", 1), ("executing", 2), ("success", 3), ("failure", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonSwapInterfaceActionStatus.setStatus('current')
cficonSwapInterfaceFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 20, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("other", 1), ("none", 2), ("dmFailure", 3), ("ficonFailure", 4), ("pmFailure", 5), ("psmFailure", 6), ("qosFailure", 7), ("spanFailure", 8), ("zsFailure", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonSwapInterfaceFailReason.setStatus('current')
cficonSwapInterfaceSystemError = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 20, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cficonSwapInterfaceSystemError.setStatus('current')
cficonSwapInterfaceEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 375, 1, 1, 20, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cficonSwapInterfaceEntryStatus.setStatus('current')
cficonPortInfoChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 375, 0, 1)).setObjects(("CISCO-FICON-MIB", "cficonRunCfgUnitType"), ("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cficonPortInfoChange.setStatus('current')
ciscoFiconCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 1))
ciscoFiconGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2))
ciscoFiconCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 1, 1)).setObjects(("CISCO-FICON-MIB", "cficonPortSwapGroup"), ("CISCO-FICON-MIB", "cficonVsanGroup"), ("CISCO-FICON-MIB", "cficonPortGroup"), ("CISCO-FICON-MIB", "cficonPortRunCfgGroup"), ("CISCO-FICON-MIB", "cficonCfgFileGroup"), ("CISCO-FICON-MIB", "cficonPortNumIfGroup"), ("CISCO-FICON-MIB", "cficonPortAddrNumGroup"), ("CISCO-FICON-MIB", "cficonPortNumAddrGroup"), ("CISCO-FICON-MIB", "cficonDirHistGroup"), ("CISCO-FICON-MIB", "cficonStatsGroup"), ("CISCO-FICON-MIB", "cifconShowPortGroup"), ("CISCO-FICON-MIB", "cficonLinkIncidentGroup"), ("CISCO-FICON-MIB", "cficonCfgFileCupNameGroup"), ("CISCO-FICON-MIB", "cficonConfigCopyGroup"), ("CISCO-FICON-MIB", "cficonAutoSaveStateGroup"), ("CISCO-FICON-MIB", "cficonPortMapGroup"), ("CISCO-FICON-MIB", "cficonNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFiconCompliance = ciscoFiconCompliance.setStatus('deprecated')
ciscoFiconComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 1, 2)).setObjects(("CISCO-FICON-MIB", "cficonPortSwapGroup"), ("CISCO-FICON-MIB", "cficonVsanGroup"), ("CISCO-FICON-MIB", "cficonPortGroup"), ("CISCO-FICON-MIB", "cficonPortRunCfgGroup"), ("CISCO-FICON-MIB", "cficonCfgFileGroup"), ("CISCO-FICON-MIB", "cficonPortNumIfGroup"), ("CISCO-FICON-MIB", "cficonPortAddrNumGroup"), ("CISCO-FICON-MIB", "cficonPortNumAddrGroup"), ("CISCO-FICON-MIB", "cficonDirHistGroup"), ("CISCO-FICON-MIB", "cficonStatsGroup"), ("CISCO-FICON-MIB", "cifconShowPortGroup"), ("CISCO-FICON-MIB", "cficonLinkIncidentGroup"), ("CISCO-FICON-MIB", "cficonCfgFileCupNameGroup"), ("CISCO-FICON-MIB", "cficonConfigCopyGroup"), ("CISCO-FICON-MIB", "cficonAutoSaveStateGroup"), ("CISCO-FICON-MIB", "cficonNotificationGroup"), ("CISCO-FICON-MIB", "cficonPortMapGroupRev1"), ("CISCO-FICON-MIB", "cficonReservedPortNumGroup"), ("CISCO-FICON-MIB", "cficonRlirErlGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFiconComplianceRev1 = ciscoFiconComplianceRev1.setStatus('deprecated')
ciscoFiconComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 1, 3)).setObjects(("CISCO-FICON-MIB", "cficonPortSwapGroup"), ("CISCO-FICON-MIB", "cficonVsanGroup"), ("CISCO-FICON-MIB", "cficonPortGroup"), ("CISCO-FICON-MIB", "cficonPortRunCfgGroup"), ("CISCO-FICON-MIB", "cficonCfgFileGroup"), ("CISCO-FICON-MIB", "cficonPortNumIfGroup"), ("CISCO-FICON-MIB", "cficonPortAddrNumGroup"), ("CISCO-FICON-MIB", "cficonPortNumAddrGroup"), ("CISCO-FICON-MIB", "cficonDirHistGroup"), ("CISCO-FICON-MIB", "cficonStatsGroup"), ("CISCO-FICON-MIB", "cifconShowPortGroup"), ("CISCO-FICON-MIB", "cficonLinkIncidentGroup"), ("CISCO-FICON-MIB", "cficonCfgFileCupNameGroup"), ("CISCO-FICON-MIB", "cficonConfigCopyGroup"), ("CISCO-FICON-MIB", "cficonAutoSaveStateGroup"), ("CISCO-FICON-MIB", "cficonNotificationGroup"), ("CISCO-FICON-MIB", "cficonPortMapGroupRev1"), ("CISCO-FICON-MIB", "cficonReservedPortNumGroup"), ("CISCO-FICON-MIB", "cficonRlirErlGroup"), ("CISCO-FICON-MIB", "cficonInterfaceSwapGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFiconComplianceRev2 = ciscoFiconComplianceRev2.setStatus('deprecated')
ciscoFiconComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 1, 4)).setObjects(("CISCO-FICON-MIB", "cficonPortSwapGroup"), ("CISCO-FICON-MIB", "cficonVsanGroup"), ("CISCO-FICON-MIB", "cficonPortGroup"), ("CISCO-FICON-MIB", "cficonPortRunCfgGroup"), ("CISCO-FICON-MIB", "cficonCfgFileGroup"), ("CISCO-FICON-MIB", "cficonPortNumIfGroup"), ("CISCO-FICON-MIB", "cficonPortAddrNumGroup"), ("CISCO-FICON-MIB", "cficonPortNumAddrGroup"), ("CISCO-FICON-MIB", "cficonDirHistGroup"), ("CISCO-FICON-MIB", "cficonStatsGroup"), ("CISCO-FICON-MIB", "cifconShowPortGroup"), ("CISCO-FICON-MIB", "cficonLinkIncidentGroup"), ("CISCO-FICON-MIB", "cficonCfgFileCupNameGroup"), ("CISCO-FICON-MIB", "cficonConfigCopyGroup"), ("CISCO-FICON-MIB", "cficonAutoSaveStateGroup"), ("CISCO-FICON-MIB", "cficonNotificationGroup"), ("CISCO-FICON-MIB", "cficonPortMapGroupRev1"), ("CISCO-FICON-MIB", "cficonReservedPortNumGroup"), ("CISCO-FICON-MIB", "cficonRlirErlGroup"), ("CISCO-FICON-MIB", "cficonInterfaceSwapGroup"), ("CISCO-FICON-MIB", "cficonDefaultPortBlockGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFiconComplianceRev3 = ciscoFiconComplianceRev3.setStatus('current')
cficonPortSwapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 1)).setObjects(("CISCO-FICON-MIB", "cficonSwapPortNumberFirst"), ("CISCO-FICON-MIB", "cficonSwapPortNumberSecond"), ("CISCO-FICON-MIB", "cficonSwapPortEntryStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonPortSwapGroup = cficonPortSwapGroup.setStatus('current')
cficonVsanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 2)).setObjects(("CISCO-FICON-MIB", "cficonVsanHostControl"), ("CISCO-FICON-MIB", "cficonVsanHostControlSwOffline"), ("CISCO-FICON-MIB", "cficonVsanHostControlClkAlrtMode"), ("CISCO-FICON-MIB", "cficonVsanSnmpControl"), ("CISCO-FICON-MIB", "cficonVsanAutoSavePortAddrCfg"), ("CISCO-FICON-MIB", "cficonVsanEnableCup"), ("CISCO-FICON-MIB", "cficonVsanCodePage"), ("CISCO-FICON-MIB", "cficonVsanCharSet"), ("CISCO-FICON-MIB", "cficonVsanKeyCounter"), ("CISCO-FICON-MIB", "cficonVsanUserAlertMode"), ("CISCO-FICON-MIB", "cficonVsanDeviceAllegience"), ("CISCO-FICON-MIB", "cficonVsanTime"), ("CISCO-FICON-MIB", "cficonVsanHostOrDefaultTime"), ("CISCO-FICON-MIB", "cficonVsanCupName"), ("CISCO-FICON-MIB", "cficonSetHostTimeControl"), ("CISCO-FICON-MIB", "cficonVsanClearAllegience"), ("CISCO-FICON-MIB", "cficonVsanEntryStatus"), ("CISCO-FICON-MIB", "cficonVsanFiconState"), ("CISCO-FICON-MIB", "cficonVsanSerialNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonVsanGroup = cficonVsanGroup.setStatus('current')
cficonPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 3)).setObjects(("CISCO-FICON-MIB", "cficonPortBlock"), ("CISCO-FICON-MIB", "cficonPortName"), ("CISCO-FICON-MIB", "cficonProhibitPortNumbers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonPortGroup = cficonPortGroup.setStatus('current')
cficonPortRunCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 4)).setObjects(("CISCO-FICON-MIB", "cficonPortRunCfgBlock"), ("CISCO-FICON-MIB", "cficonPortRunCfgName"), ("CISCO-FICON-MIB", "cficonRunCfgProhibitPrtNums"), ("CISCO-FICON-MIB", "cficonRunCfgTypeNumber"), ("CISCO-FICON-MIB", "cficonRunCfgModelNumber"), ("CISCO-FICON-MIB", "cficonRunCfgManufacturer"), ("CISCO-FICON-MIB", "cficonRunCfgPlantOfMfg"), ("CISCO-FICON-MIB", "cficonRunCfgSerialNumber"), ("CISCO-FICON-MIB", "cficonRunCfgUnitType"), ("CISCO-FICON-MIB", "cficonRunCfgPortId"), ("CISCO-FICON-MIB", "cficonRunCfgStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonPortRunCfgGroup = cficonPortRunCfgGroup.setStatus('current')
cficonCfgFileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 5)).setObjects(("CISCO-FICON-MIB", "cficonCfgFileDescr"), ("CISCO-FICON-MIB", "cficonCfgFileStatus"), ("CISCO-FICON-MIB", "cficonCfgFileLastUpdated"), ("CISCO-FICON-MIB", "cficonCfgFileCmd"), ("CISCO-FICON-MIB", "cficonCfgFileRowStatus"), ("CISCO-FICON-MIB", "cficonCfgFileCmdStatus"), ("CISCO-FICON-MIB", "cficonCfgFileCmdErrorString"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonCfgFileGroup = cficonCfgFileGroup.setStatus('current')
cficonPortNumIfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 6)).setObjects(("CISCO-FICON-MIB", "cficonPortIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonPortNumIfGroup = cficonPortNumIfGroup.setStatus('current')
cficonPortAddrNumGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 7)).setObjects(("CISCO-FICON-MIB", "cficonPortAddrPortNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonPortAddrNumGroup = cficonPortAddrNumGroup.setStatus('current')
cficonPortNumAddrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 8)).setObjects(("CISCO-FICON-MIB", "portAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonPortNumAddrGroup = cficonPortNumAddrGroup.setStatus('current')
cficonDirHistGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 9)).setObjects(("CISCO-FICON-MIB", "cficonDirHistPortNumbers"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonDirHistGroup = cficonDirHistGroup.setStatus('current')
cficonStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 10)).setObjects(("CISCO-FICON-MIB", "cfStatsFramePacingTime"), ("CISCO-FICON-MIB", "cfStatsDispErrorsInFrame"), ("CISCO-FICON-MIB", "cfStatsEOFErrs"), ("CISCO-FICON-MIB", "cfStatsDispErrsOutOfFrame"), ("CISCO-FICON-MIB", "cfStatsInvalidOrderSets"), ("CISCO-FICON-MIB", "cfStatsErrorSummary"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonStatsGroup = cficonStatsGroup.setStatus('current')
cifconShowPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 11)).setObjects(("CISCO-FICON-MIB", "cficonShowPorts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cifconShowPortGroup = cifconShowPortGroup.setStatus('current')
cficonLinkIncidentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 12)).setObjects(("CISCO-FICON-MIB", "cficonLinkIncident"), ("CISCO-FICON-MIB", "cficonLinkIncidentTime"), ("CISCO-FICON-MIB", "cficonLinkIncidentClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonLinkIncidentGroup = cficonLinkIncidentGroup.setStatus('current')
cficonCfgFileCupNameGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 13)).setObjects(("CISCO-FICON-MIB", "cficonCfgFileCupName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonCfgFileCupNameGroup = cficonCfgFileCupNameGroup.setStatus('current')
cficonConfigCopyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 14)).setObjects(("CISCO-FICON-MIB", "cficonCopyState"), ("CISCO-FICON-MIB", "cficonCopyFailReason"), ("CISCO-FICON-MIB", "cficonCopyEntryRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonConfigCopyGroup = cficonConfigCopyGroup.setStatus('current')
cficonAutoSaveStateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 15)).setObjects(("CISCO-FICON-MIB", "cficonAutoSaveState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonAutoSaveStateGroup = cficonAutoSaveStateGroup.setStatus('current')
cficonPortMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 16)).setObjects(("CISCO-FICON-MIB", "cficonPortMap1"), ("CISCO-FICON-MIB", "cficonPortMap2"), ("CISCO-FICON-MIB", "cficonPortMap3"), ("CISCO-FICON-MIB", "cficonPortMap4"), ("CISCO-FICON-MIB", "cficonPortMap5"), ("CISCO-FICON-MIB", "cficonPortMap6"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonPortMapGroup = cficonPortMapGroup.setStatus('deprecated')
cficonNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 17)).setObjects(("CISCO-FICON-MIB", "cficonPortInfoChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonNotificationGroup = cficonNotificationGroup.setStatus('current')
cficonPortMapGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 18)).setObjects(("CISCO-FICON-MIB", "cficonPortMapMax"), ("CISCO-FICON-MIB", "cficonPortMapObj"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonPortMapGroupRev1 = cficonPortMapGroupRev1.setStatus('current')
cficonReservedPortNumGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 19)).setObjects(("CISCO-FICON-MIB", "cficonSlotReservedPN"), ("CISCO-FICON-MIB", "cficonLogicReservedPN"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonReservedPortNumGroup = cficonReservedPortNumGroup.setStatus('current')
cficonRlirErlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 20)).setObjects(("CISCO-FICON-MIB", "cficonRlirErlRegType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonRlirErlGroup = cficonRlirErlGroup.setStatus('current')
cficonInterfaceSwapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 21)).setObjects(("CISCO-FICON-MIB", "cficonSwapInterfaceIndexFirst"), ("CISCO-FICON-MIB", "cficonSwapInterfaceIndexSecond"), ("CISCO-FICON-MIB", "cficonSwapInterfaceActionStatus"), ("CISCO-FICON-MIB", "cficonSwapInterfaceFailReason"), ("CISCO-FICON-MIB", "cficonSwapInterfaceSystemError"), ("CISCO-FICON-MIB", "cficonSwapInterfaceEntryStatus"), ("CISCO-FICON-MIB", "cficonInterfaceSwapNextIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonInterfaceSwapGroup = cficonInterfaceSwapGroup.setStatus('current')
cficonDefaultPortBlockGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 375, 2, 2, 22)).setObjects(("CISCO-FICON-MIB", "cficonDefaultPortBlock"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cficonDefaultPortBlockGroup = cficonDefaultPortBlockGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-FICON-MIB", cficonSwapInterfaceIndexFirst=cficonSwapInterfaceIndexFirst, CficonPortNumOrAddr=CficonPortNumOrAddr, cficonInterfaceSwapNextIndex=cficonInterfaceSwapNextIndex, cficonShowPorts=cficonShowPorts, cficonStatsTable=cficonStatsTable, cficonSlotReservedPN=cficonSlotReservedPN, cficonSlotPortNumTable=cficonSlotPortNumTable, cficonPortMap2=cficonPortMap2, cficonPortAddr=cficonPortAddr, cficonCfgFileCmdErrorString=cficonCfgFileCmdErrorString, cficonLinkIncidentTable=cficonLinkIncidentTable, cficonPortRunCfgName=cficonPortRunCfgName, cficonRlirErlTable=cficonRlirErlTable, cficonRlirErlFcId=cficonRlirErlFcId, ciscoFiconComplianceRev2=ciscoFiconComplianceRev2, cficonVsanCharSet=cficonVsanCharSet, cficonVsanTable=cficonVsanTable, cficonPortRunCfgEntry=cficonPortRunCfgEntry, cficonLogicReservedPN=cficonLogicReservedPN, cficonSwapPortEntryStatus=cficonSwapPortEntryStatus, cficonPortInfoChange=cficonPortInfoChange, cficonSwapPortNumberFirst=cficonSwapPortNumberFirst, ciscoFiconMIBNotifications=ciscoFiconMIBNotifications, cficonNotificationGroup=cficonNotificationGroup, cficonDefaultPortBlockGroup=cficonDefaultPortBlockGroup, ciscoFiconConfig=ciscoFiconConfig, cficonSwapInterfaceActionStatus=cficonSwapInterfaceActionStatus, cficonRunCfgProhibitPrtNums=cficonRunCfgProhibitPrtNums, cficonPortAddrNumEntry=cficonPortAddrNumEntry, cficonCfgFileEntry=cficonCfgFileEntry, cficonPortMapTable=cficonPortMapTable, cficonLinkIncidentClear=cficonLinkIncidentClear, cficonVsanCodePage=cficonVsanCodePage, cficonRunCfgPlantOfMfg=cficonRunCfgPlantOfMfg, cficonVsanEnableCup=cficonVsanEnableCup, ciscoFiconMIB=ciscoFiconMIB, cficonRlirErlRegType=cficonRlirErlRegType, cfStatsInvalidOrderSets=cfStatsInvalidOrderSets, ciscoFiconPortMap=ciscoFiconPortMap, cficonStatsEntry=cficonStatsEntry, ciscoFiconMIBObjects=ciscoFiconMIBObjects, cficonCfgFileCupName=cficonCfgFileCupName, cficonRunCfgPortId=cficonRunCfgPortId, ciscoFiconCompliances=ciscoFiconCompliances, cficonPortNumber=cficonPortNumber, cficonVsanCupName=cficonVsanCupName, cficonRunCfgTypeNumber=cficonRunCfgTypeNumber, cficonPortNumIfTable=cficonPortNumIfTable, cficonPortMap6=cficonPortMap6, cficonVsanFiconState=cficonVsanFiconState, ciscoFiconGroups=ciscoFiconGroups, cficonPortNumAddrGroup=cficonPortNumAddrGroup, cficonCfgFileCupNameGroup=cficonCfgFileCupNameGroup, cficonCopyFailReason=cficonCopyFailReason, cficonCfgFileDescr=cficonCfgFileDescr, cficonConfigCopyIndex=cficonConfigCopyIndex, cficonPortMapGroup=cficonPortMapGroup, cficonDefaultPortBlock=cficonDefaultPortBlock, cficonVsanUserAlertMode=cficonVsanUserAlertMode, cficonRunCfgStatus=cficonRunCfgStatus, cficonDirHistGroup=cficonDirHistGroup, cficonPortMapObj=cficonPortMapObj, cficonPortTable=cficonPortTable, cficonPortRunCfgTable=cficonPortRunCfgTable, cficonLinkIncidentTime=cficonLinkIncidentTime, cficonConfigCopyTable=cficonConfigCopyTable, cficonRunCfgSerialNumber=cficonRunCfgSerialNumber, cficonCopyState=cficonCopyState, cficonPortEntry=cficonPortEntry, ciscoFiconCompliance=ciscoFiconCompliance, ciscoFiconComplianceRev3=ciscoFiconComplianceRev3, cficonInterfaceSwapGroup=cficonInterfaceSwapGroup, cficonCfgFileLastUpdated=cficonCfgFileLastUpdated, cficonPortSwapIndex=cficonPortSwapIndex, cficonRlirErlEntry=cficonRlirErlEntry, cficonPortMap3=cficonPortMap3, cficonCfgFileStatus=cficonCfgFileStatus, PYSNMP_MODULE_ID=ciscoFiconMIB, cficonVsanKeyCounter=cficonVsanKeyCounter, cficonVsanSerialNum=cficonVsanSerialNum, cficonPortRunCfgAddr=cficonPortRunCfgAddr, cficonPortAddrNumTable=cficonPortAddrNumTable, cficonPortMap5=cficonPortMap5, cfStatsErrorSummary=cfStatsErrorSummary, cficonInterfaceSwapTable=cficonInterfaceSwapTable, cficonSlotIndex=cficonSlotIndex, cficonCfgFilename=cficonCfgFilename, cficonVsanAutoSavePortAddrCfg=cficonVsanAutoSavePortAddrCfg, cficonPortIfIndex=cficonPortIfIndex, cficonRlirErlFormat=cficonRlirErlFormat, cficonPortNumIfGroup=cficonPortNumIfGroup, cficonVsanClearAllegience=cficonVsanClearAllegience, cficonPortMapMax=cficonPortMapMax, ciscoFiconGlobal=ciscoFiconGlobal, cficonVsanSnmpControl=cficonVsanSnmpControl, cficonCfgFileCmd=cficonCfgFileCmd, cficonDirHistEntry=cficonDirHistEntry, cficonCfgFileGroup=cficonCfgFileGroup, cficonCopyEntryRowStatus=cficonCopyEntryRowStatus, cfStatsFramePacingTime=cfStatsFramePacingTime, cficonSwapInterfaceIndexSecond=cficonSwapInterfaceIndexSecond, cficonVsanEntryStatus=cficonVsanEntryStatus, cficonPortMapEntry=cficonPortMapEntry, cficonInterfaceSwapIndex=cficonInterfaceSwapIndex, cficonPortMapGroupRev1=cficonPortMapGroupRev1, cficonPortBlock=cficonPortBlock, cficonStatsGroup=cficonStatsGroup, cficonConfigCopyGroup=cficonConfigCopyGroup, cficonCfgFileCupNameEntry=cficonCfgFileCupNameEntry, cficonRunCfgUnitType=cficonRunCfgUnitType, cficonPortSwapGroup=cficonPortSwapGroup, cficonPortGroup=cficonPortGroup, cfStatsDispErrorsInFrame=cfStatsDispErrorsInFrame, cficonVsanHostControl=cficonVsanHostControl, ciscoFiconComplianceRev1=ciscoFiconComplianceRev1, cficonPortRunCfgGroup=cficonPortRunCfgGroup, cficonRlirErlGroup=cficonRlirErlGroup, cficonVsanHostControlSwOffline=cficonVsanHostControlSwOffline, cficonCfgFileRowStatus=cficonCfgFileRowStatus, cficonDirHistPortNumbers=cficonDirHistPortNumbers, ciscoFiconMIBConform=ciscoFiconMIBConform, cficonAutoSaveStateGroup=cficonAutoSaveStateGroup, cficonInterfaceSwapEntry=cficonInterfaceSwapEntry, cficonLinkIncidentGroup=cficonLinkIncidentGroup, cficonPortMapIndex=cficonPortMapIndex, cficonPortAddrPortNumber=cficonPortAddrPortNumber, cficonVsanGroup=cficonVsanGroup, cficonVsanHostControlClkAlrtMode=cficonVsanHostControlClkAlrtMode, cficonRunCfgModelNumber=cficonRunCfgModelNumber, cficonCfgFileTable=cficonCfgFileTable, cficonVsanDeviceAllegience=cficonVsanDeviceAllegience, cficonConfigCopyEntry=cficonConfigCopyEntry, cficonLinkIncidentEntry=cficonLinkIncidentEntry, cficonSetHostTimeControl=cficonSetHostTimeControl, cficonSwapInterfaceFailReason=cficonSwapInterfaceFailReason, cficonProhibitPortNumbers=cficonProhibitPortNumbers, cficonCfgFileCupNameTable=cficonCfgFileCupNameTable, cficonPortNumIfEntry=cficonPortNumIfEntry, cficonPortNumAddrTable=cficonPortNumAddrTable, cficonPortAddrNumGroup=cficonPortAddrNumGroup, cficonDirHistTable=cficonDirHistTable, cficonPortRunCfgBlock=cficonPortRunCfgBlock, cficonPortMap1=cficonPortMap1, cficonVsanEntry=cficonVsanEntry, cficonReservedPortNumGroup=cficonReservedPortNumGroup, cficonPortName=cficonPortName, cficonPortNumAddrEntry=cficonPortNumAddrEntry, cficonSwapPortNumberSecond=cficonSwapPortNumberSecond, cficonRunCfgManufacturer=cficonRunCfgManufacturer, cfStatsDispErrsOutOfFrame=cfStatsDispErrsOutOfFrame, cficonAutoSaveState=cficonAutoSaveState, cficonDirHistKeyCounter=cficonDirHistKeyCounter, cficonSwapInterfaceSystemError=cficonSwapInterfaceSystemError, cficonVsanHostOrDefaultTime=cficonVsanHostOrDefaultTime, cficonPortAddrPortAddr=cficonPortAddrPortAddr, portAddress=portAddress, cifconShowPortGroup=cifconShowPortGroup, cficonSlotPortNumEntry=cficonSlotPortNumEntry, cficonLinkIncident=cficonLinkIncident, cficonCfgFileCmdStatus=cficonCfgFileCmdStatus, cfStatsEOFErrs=cfStatsEOFErrs, portAddrPortNumber=portAddrPortNumber, cficonPortMap4=cficonPortMap4, cficonSwapInterfaceEntryStatus=cficonSwapInterfaceEntryStatus, cficonPortSwapTable=cficonPortSwapTable, cficonVsanTime=cficonVsanTime, cficonPortSwapEntry=cficonPortSwapEntry)
