#
# PySNMP MIB module DNOS-ROUTING6-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DNOS-ROUTING6-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:37:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
dnOS, = mibBuilder.importSymbols("DELL-REF-MIB", "dnOS")
Ipv6IfIndexOrZero, Ipv6AddressIfIdentifier, Ipv6IfIndex, Ipv6AddressPrefix, Ipv6Address = mibBuilder.importSymbols("IPV6-TC", "Ipv6IfIndexOrZero", "Ipv6AddressIfIdentifier", "Ipv6IfIndex", "Ipv6AddressPrefix", "Ipv6Address")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Bits, ModuleIdentity, Integer32, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Gauge32, Unsigned32, NotificationType, IpAddress, iso, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "ModuleIdentity", "Integer32", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Gauge32", "Unsigned32", "NotificationType", "IpAddress", "iso", "MibIdentifier", "Counter32")
PhysAddress, TimeStamp, MacAddress, TruthValue, TextualConvention, RowStatus, DisplayString, RowPointer, VariablePointer = mibBuilder.importSymbols("SNMPv2-TC", "PhysAddress", "TimeStamp", "MacAddress", "TruthValue", "TextualConvention", "RowStatus", "DisplayString", "RowPointer", "VariablePointer")
fastPathRoutingIpv6 = ModuleIdentity((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30))
fastPathRoutingIpv6.setRevisions(('2011-01-26 00:00', '2007-05-23 00:00', '2005-09-21 17:00',))
if mibBuilder.loadTexts: fastPathRoutingIpv6.setLastUpdated('201101260000Z')
if mibBuilder.loadTexts: fastPathRoutingIpv6.setOrganization('Dell, Inc.')
agentIpv6Group = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1))
agentIpv6RoutingMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6RoutingMode.setStatus('current')
agentIpv6InterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2), )
if mibBuilder.loadTexts: agentIpv6InterfaceTable.setStatus('current')
agentIpv6InterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1), ).setIndexNames((0, "DNOS-ROUTING6-MIB", "agentIpv6InterfaceIfIndex"))
if mibBuilder.loadTexts: agentIpv6InterfaceEntry.setStatus('current')
agentIpv6InterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6InterfaceIfIndex.setStatus('current')
agentIpv6InterfaceMtuValue = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1280, 1500), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6InterfaceMtuValue.setStatus('current')
agentIpv6InterfaceDadTransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6InterfaceDadTransmits.setStatus('current')
agentIpv6InterfaceLinkLocalOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6InterfaceLinkLocalOnly.setStatus('current')
agentIpv6InterfaceIcmpUnreachables = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6InterfaceIcmpUnreachables.setStatus('current')
agentIpv6InterfaceAutoconfig = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6InterfaceAutoconfig.setStatus('current')
agentIpv6InterfaceDhcpClient = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6InterfaceDhcpClient.setStatus('current')
agentIpv6InterfaceIcmpRedirects = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6InterfaceIcmpRedirects.setStatus('current')
agentIpv6RouterAdvertisementTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3), )
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementTable.setStatus('current')
agentIpv6RouterAdvertisementEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1), ).setIndexNames((0, "DNOS-ROUTING6-MIB", "agentIpv6RouterAdvertisementIfIndex"))
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementEntry.setStatus('current')
agentIpv6RouterAdvertisementIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementIfIndex.setStatus('current')
agentIpv6RouterAdvertisementSuppressMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementSuppressMode.setStatus('current')
agentIpv6RouterAdvertisementMaxAdvertisementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 1800)).clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementMaxAdvertisementInterval.setStatus('current')
agentIpv6RouterAdvertisementAdvertisementLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 65520)).clone(1800)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementAdvertisementLifetime.setStatus('current')
agentIpv6RouterAdvertisementNbrSolicitInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementNbrSolicitInterval.setStatus('current')
agentIpv6RouterAdvertisementReachableTime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementReachableTime.setStatus('current')
agentIpv6RouterAdvertisementManagedFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementManagedFlag.setStatus('current')
agentIpv6RouterAdvertisementOtherFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementOtherFlag.setStatus('current')
agentIpv6RouterAdvertisementHopLimitUnspecifiedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6RouterAdvertisementHopLimitUnspecifiedMode.setStatus('current')
agentIpv6AddrPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4), )
if mibBuilder.loadTexts: agentIpv6AddrPrefixTable.setStatus('current')
agentIpv6AddrPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1), ).setIndexNames((0, "DNOS-ROUTING6-MIB", "agentIpv6InterfaceIfIndex"), (0, "DNOS-ROUTING6-MIB", "agentIpv6AddrPrefix"), (0, "DNOS-ROUTING6-MIB", "agentIpv6AddrPrefixLength"))
if mibBuilder.loadTexts: agentIpv6AddrPrefixEntry.setStatus('current')
agentIpv6AddrPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1, 1), Ipv6AddressPrefix())
if mibBuilder.loadTexts: agentIpv6AddrPrefix.setStatus('current')
agentIpv6AddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setUnits('bits')
if mibBuilder.loadTexts: agentIpv6AddrPrefixLength.setStatus('current')
agentIpv6AddrPrefixOnLinkFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6AddrPrefixOnLinkFlag.setStatus('current')
agentIpv6AddrPrefixAutonomousFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6AddrPrefixAutonomousFlag.setStatus('current')
agentIpv6AddrPrefixAdvPreferredLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6AddrPrefixAdvPreferredLifetime.setStatus('current')
agentIpv6AddrPrefixAdvValidLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 4, 1, 6), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6AddrPrefixAdvValidLifetime.setStatus('current')
agentIpv6AddrTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 5), )
if mibBuilder.loadTexts: agentIpv6AddrTable.setStatus('current')
agentIpv6AddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 5, 1), ).setIndexNames((0, "DNOS-ROUTING6-MIB", "agentIpv6InterfaceIfIndex"), (0, "DNOS-ROUTING6-MIB", "agentIpv6AddrAddress"))
if mibBuilder.loadTexts: agentIpv6AddrEntry.setStatus('current')
agentIpv6AddrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 5, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: agentIpv6AddrAddress.setStatus('current')
agentIpv6AddrPfxLength = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setUnits('bits').setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpv6AddrPfxLength.setStatus('current')
agentIpv6AddrEui64Flag = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 5, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpv6AddrEui64Flag.setStatus('current')
agentIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 5, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpv6AddrStatus.setStatus('current')
agentIpv6StaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6), )
if mibBuilder.loadTexts: agentIpv6StaticRouteTable.setStatus('current')
agentIpv6StaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1), ).setIndexNames((0, "DNOS-ROUTING6-MIB", "agentIpv6StaticRouteDest"), (0, "DNOS-ROUTING6-MIB", "agentIpv6StaticRoutePfxLength"), (0, "DNOS-ROUTING6-MIB", "agentIpv6StaticRouteIfIndex"), (0, "DNOS-ROUTING6-MIB", "agentIpv6StaticRouteNextHop"))
if mibBuilder.loadTexts: agentIpv6StaticRouteEntry.setStatus('current')
agentIpv6StaticRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1, 1), Ipv6AddressPrefix())
if mibBuilder.loadTexts: agentIpv6StaticRouteDest.setStatus('current')
agentIpv6StaticRoutePfxLength = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setUnits('bits')
if mibBuilder.loadTexts: agentIpv6StaticRoutePfxLength.setStatus('current')
agentIpv6StaticRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1, 3), Ipv6IfIndexOrZero())
if mibBuilder.loadTexts: agentIpv6StaticRouteIfIndex.setStatus('current')
agentIpv6StaticRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1, 4), Ipv6Address())
if mibBuilder.loadTexts: agentIpv6StaticRouteNextHop.setStatus('current')
agentIpv6StaticRoutePreference = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpv6StaticRoutePreference.setStatus('current')
agentIpv6StaticRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 6, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpv6StaticRouteStatus.setStatus('current')
agentIpv6ServicePortGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7))
agentIpv6ServicePortPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 1), )
if mibBuilder.loadTexts: agentIpv6ServicePortPrefixTable.setStatus('current')
agentIpv6ServicePortPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 1, 1), ).setIndexNames((0, "DNOS-ROUTING6-MIB", "agentIpv6ServicePortPrefixIndex"))
if mibBuilder.loadTexts: agentIpv6ServicePortPrefixEntry.setStatus('current')
agentIpv6ServicePortPrefixIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentIpv6ServicePortPrefixIndex.setStatus('current')
agentIpv6ServicePortPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 1, 1, 2), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6ServicePortPrefix.setStatus('current')
agentIpv6ServicePortPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6ServicePortPrefixLength.setStatus('current')
agentIpv6ServicePortDefaultRouterTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 2), )
if mibBuilder.loadTexts: agentIpv6ServicePortDefaultRouterTable.setStatus('current')
agentIpv6ServicePortDefaultRouterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 2, 1), ).setIndexNames((0, "DNOS-ROUTING6-MIB", "agentIpv6ServicePortDefaultRouterIndex"))
if mibBuilder.loadTexts: agentIpv6ServicePortDefaultRouterEntry.setStatus('current')
agentIpv6ServicePortDefaultRouterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: agentIpv6ServicePortDefaultRouterIndex.setStatus('current')
agentIpv6ServicePortDefaultRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 2, 1, 2), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6ServicePortDefaultRouter.setStatus('current')
agentIpv6ServicePortNbrTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3), )
if mibBuilder.loadTexts: agentIpv6ServicePortNbrTable.setStatus('current')
agentIpv6ServicePortNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1), ).setIndexNames((0, "DNOS-ROUTING6-MIB", "agentIpv6ServicePortNbrAddr"))
if mibBuilder.loadTexts: agentIpv6ServicePortNbrEntry.setStatus('current')
agentIpv6ServicePortNbrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: agentIpv6ServicePortNbrAddr.setStatus('current')
agentIpv6ServicePortNbrPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6ServicePortNbrPhysAddr.setStatus('current')
agentIpv6ServicePortNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("reachable", 1), ("stale", 2), ("delay", 3), ("probe", 4), ("unknown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6ServicePortNbrState.setStatus('current')
agentIpv6ServicePortNbrUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6ServicePortNbrUpdated.setStatus('current')
agentIpv6ServicePortNbrIsRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6ServicePortNbrIsRouter.setStatus('current')
agentIpv6ServicePortNbrType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("dynamic", 2), ("static", 3), ("local", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6ServicePortNbrType.setStatus('current')
agentIpv6ServicePortNbrCfgTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 4), )
if mibBuilder.loadTexts: agentIpv6ServicePortNbrCfgTable.setStatus('current')
agentIpv6ServicePortNbrCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 4, 1), ).setIndexNames((0, "DNOS-ROUTING6-MIB", "agentIpv6ServicePortNbrCfgAddr"))
if mibBuilder.loadTexts: agentIpv6ServicePortNbrCfgEntry.setStatus('current')
agentIpv6ServicePortNbrCfgAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 4, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: agentIpv6ServicePortNbrCfgAddr.setStatus('current')
agentIpv6ServicePortNbrCfgPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 4, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpv6ServicePortNbrCfgPhysAddr.setStatus('current')
agentIpv6ServicePortNbrCfgEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 7, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpv6ServicePortNbrCfgEntryStatus.setStatus('current')
agentIpv6IcmpControlGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 8))
agentIpv6IcmpRateLimitInterval = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6IcmpRateLimitInterval.setStatus('current')
agentIpv6IcmpRateLimitBurstSize = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6IcmpRateLimitBurstSize.setStatus('current')
agentDhcp6ClientParametersTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 9), )
if mibBuilder.loadTexts: agentDhcp6ClientParametersTable.setStatus('current')
agentDhcp6ClientParametersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 9, 1), ).setIndexNames((0, "DNOS-ROUTING6-MIB", "agentDhcp6ClientInterfaceIndex"))
if mibBuilder.loadTexts: agentDhcp6ClientParametersEntry.setStatus('current')
agentDhcp6ClientInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 9, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ClientInterfaceIndex.setStatus('current')
agentDhcp6ClientPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 9, 1, 2), Ipv6AddressPrefix()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ClientPrefix.setStatus('current')
agentDhcp6ClientPrefixlength = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 9, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ClientPrefixlength.setStatus('current')
agentDhcp6ClientState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("inactive", 0), ("solicit", 1), ("request", 2), ("active", 3), ("renew", 4), ("rebind", 5), ("release", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ClientState.setStatus('current')
agentDhcp6ClientServerDUID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 9, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ClientServerDUID.setStatus('current')
agentDhcp6ClientT1Time = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 9, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ClientT1Time.setStatus('current')
agentDhcp6ClientT2Time = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 9, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ClientT2Time.setStatus('current')
agentDhcp6ClientIAID = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 9, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ClientIAID.setStatus('current')
agentDhcp6ClientPreferredLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 9, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ClientPreferredLifeTime.setStatus('current')
agentDhcp6ClientValidLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 9, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ClientValidLifeTime.setStatus('current')
agentDhcp6ClientRenewTime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 9, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ClientRenewTime.setStatus('current')
agentDhcp6ClientExpireTime = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 9, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentDhcp6ClientExpireTime.setStatus('current')
agentIpv6RoutingTableSummaryGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10))
agentIpv6ConnectedRoutes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6ConnectedRoutes.setStatus('current')
agentIpv6StaticRoutes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6StaticRoutes.setStatus('current')
agentIpv66to4Routes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv66to4Routes.setStatus('current')
agentIpv6OspfRoutes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6OspfRoutes.setStatus('current')
agentIpv6OspfIntraRoutes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6OspfIntraRoutes.setStatus('current')
agentIpv6OspfInterRoutes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6OspfInterRoutes.setStatus('current')
agentIpv6OspfExt1Routes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6OspfExt1Routes.setStatus('current')
agentIpv6OspfExt2Routes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6OspfExt2Routes.setStatus('current')
agentIpv6BgpRoutes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6BgpRoutes.setStatus('current')
agentIpv6EbgpRoutes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6EbgpRoutes.setStatus('current')
agentIpv6IbgpRoutes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6IbgpRoutes.setStatus('current')
agentIpv6LocalBgpRoutes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6LocalBgpRoutes.setStatus('current')
agentIpv6RejectRoutes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6RejectRoutes.setStatus('current')
agentIpv6TotalRoutes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6TotalRoutes.setStatus('current')
agentIpv6BestRoutes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6BestRoutes.setStatus('current')
agentIpv6BestRoutesHigh = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6BestRoutesHigh.setStatus('current')
agentIpv6AlternateRoutes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6AlternateRoutes.setStatus('current')
agentIpv6RouteAdds = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6RouteAdds.setStatus('current')
agentIpv6RouteModifies = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6RouteModifies.setStatus('current')
agentIpv6RouteDeletes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6RouteDeletes.setStatus('current')
agentIpv6UnresolvedRouteAdds = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6UnresolvedRouteAdds.setStatus('current')
agentIpv6InvalidRouteAdds = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6InvalidRouteAdds.setStatus('current')
agentIpv6FailedRouteAdds = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6FailedRouteAdds.setStatus('current')
agentIpv6ReservedLocals = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6ReservedLocals.setStatus('current')
agentIpv6UniqueNextHops = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6UniqueNextHops.setStatus('current')
agentIpv6UniqueNextHopsHigh = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6UniqueNextHopsHigh.setStatus('current')
agentIpv6NextHopGroups = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6NextHopGroups.setStatus('current')
agentIpv6NextHopGroupsHigh = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6NextHopGroupsHigh.setStatus('current')
agentIpv6EcmpGroups = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6EcmpGroups.setStatus('current')
agentIpv6EcmpGroupsHigh = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6EcmpGroupsHigh.setStatus('current')
agentIpv6EcmpRoutes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6EcmpRoutes.setStatus('current')
agentIpv6TruncEcmpRoutes = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6TruncEcmpRoutes.setStatus('current')
agentIpv6EcmpRetries = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 10, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6EcmpRetries.setStatus('current')
agentIpv6EcmpCountTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 11), )
if mibBuilder.loadTexts: agentIpv6EcmpCountTable.setStatus('current')
agentIpv6EcmpCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 11, 1), ).setIndexNames((0, "DNOS-ROUTING6-MIB", "agentIpv6EcmpNextHopCount"))
if mibBuilder.loadTexts: agentIpv6EcmpCountEntry.setStatus('current')
agentIpv6EcmpNextHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: agentIpv6EcmpNextHopCount.setStatus('current')
agentIpv6EcmpRouteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 11, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6EcmpRouteCount.setStatus('current')
agentIpv6NetworkPortGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 12))
agentIpv6NetworkPortNbrTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 12, 1), )
if mibBuilder.loadTexts: agentIpv6NetworkPortNbrTable.setStatus('current')
agentIpv6NetworkPortNbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 12, 1, 1), ).setIndexNames((0, "DNOS-ROUTING6-MIB", "agentIpv6NetworkPortNbrAddr"))
if mibBuilder.loadTexts: agentIpv6NetworkPortNbrEntry.setStatus('current')
agentIpv6NetworkPortNbrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 12, 1, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: agentIpv6NetworkPortNbrAddr.setStatus('current')
agentIpv6NetworkPortNbrPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 12, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6NetworkPortNbrPhysAddr.setStatus('current')
agentIpv6NetworkPortNbrState = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6))).clone(namedValues=NamedValues(("reachable", 1), ("stale", 2), ("delay", 3), ("probe", 4), ("unknown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6NetworkPortNbrState.setStatus('current')
agentIpv6NetworkPortNbrUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 12, 1, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6NetworkPortNbrUpdated.setStatus('current')
agentIpv6NetworkPortNbrIsRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 12, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6NetworkPortNbrIsRouter.setStatus('current')
agentIpv6NetworkPortNbrType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 12, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("dynamic", 2), ("static", 3), ("local", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentIpv6NetworkPortNbrType.setStatus('current')
agentIpv6NetworkPortNbrCfgTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 12, 2), )
if mibBuilder.loadTexts: agentIpv6NetworkPortNbrCfgTable.setStatus('current')
agentIpv6NetworkPortNbrCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 12, 2, 1), ).setIndexNames((0, "DNOS-ROUTING6-MIB", "agentIpv6NetworkPortNbrCfgAddr"))
if mibBuilder.loadTexts: agentIpv6NetworkPortNbrCfgEntry.setStatus('current')
agentIpv6NetworkPortNbrCfgAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 12, 2, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: agentIpv6NetworkPortNbrCfgAddr.setStatus('current')
agentIpv6NetworkPortNbrCfgPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 12, 2, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpv6NetworkPortNbrCfgPhysAddr.setStatus('current')
agentIpv6NetworkPortNbrCfgEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 12, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpv6NetworkPortNbrCfgEntryStatus.setStatus('current')
agentIpv6NbrCfgTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 13), )
if mibBuilder.loadTexts: agentIpv6NbrCfgTable.setStatus('current')
agentIpv6NbrCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 13, 1), ).setIndexNames((0, "DNOS-ROUTING6-MIB", "agentIpv6IfIndex"), (0, "DNOS-ROUTING6-MIB", "agentIpv6NbrCfgAddr"))
if mibBuilder.loadTexts: agentIpv6NbrCfgEntry.setStatus('current')
agentIpv6IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 13, 1, 1), Ipv6IfIndex())
if mibBuilder.loadTexts: agentIpv6IfIndex.setStatus('current')
agentIpv6NbrCfgAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 13, 1, 2), Ipv6Address())
if mibBuilder.loadTexts: agentIpv6NbrCfgAddr.setStatus('current')
agentIpv6NbrCfgPhysAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 13, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpv6NbrCfgPhysAddr.setStatus('current')
agentIpv6NbrCfgEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 13, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentIpv6NbrCfgEntryStatus.setStatus('current')
agentIpv6NeighborsDynamicRenew = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6NeighborsDynamicRenew.setStatus('current')
agentIpv6UnresolvedDataRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 1024)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6UnresolvedDataRateLimit.setStatus('current')
agentIpv6NUDMaxUnicastSolicits = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6NUDMaxUnicastSolicits.setStatus('current')
agentIpv6NUDMaxMulticastSolicits = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 255)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6NUDMaxMulticastSolicits.setStatus('current')
agentIpv6NUDBackoffMultiple = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 30, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentIpv6NUDBackoffMultiple.setStatus('current')
mibBuilder.exportSymbols("DNOS-ROUTING6-MIB", agentIpv6ServicePortPrefixTable=agentIpv6ServicePortPrefixTable, agentIpv6ServicePortNbrPhysAddr=agentIpv6ServicePortNbrPhysAddr, agentIpv6ServicePortPrefixLength=agentIpv6ServicePortPrefixLength, agentIpv6ServicePortNbrIsRouter=agentIpv6ServicePortNbrIsRouter, agentIpv6NetworkPortNbrIsRouter=agentIpv6NetworkPortNbrIsRouter, agentIpv6ServicePortNbrAddr=agentIpv6ServicePortNbrAddr, agentIpv6RouterAdvertisementManagedFlag=agentIpv6RouterAdvertisementManagedFlag, agentIpv6StaticRoutePreference=agentIpv6StaticRoutePreference, agentDhcp6ClientInterfaceIndex=agentDhcp6ClientInterfaceIndex, agentIpv6ServicePortNbrType=agentIpv6ServicePortNbrType, agentIpv6ServicePortDefaultRouterEntry=agentIpv6ServicePortDefaultRouterEntry, agentIpv6InterfaceTable=agentIpv6InterfaceTable, agentIpv6RouteModifies=agentIpv6RouteModifies, agentIpv6NetworkPortNbrTable=agentIpv6NetworkPortNbrTable, agentIpv6EcmpGroupsHigh=agentIpv6EcmpGroupsHigh, agentIpv6AddrPrefixAdvValidLifetime=agentIpv6AddrPrefixAdvValidLifetime, agentIpv6NetworkPortGroup=agentIpv6NetworkPortGroup, agentDhcp6ClientT2Time=agentDhcp6ClientT2Time, agentIpv6IcmpRateLimitBurstSize=agentIpv6IcmpRateLimitBurstSize, agentDhcp6ClientPrefixlength=agentDhcp6ClientPrefixlength, agentIpv6EcmpRetries=agentIpv6EcmpRetries, agentIpv6NetworkPortNbrEntry=agentIpv6NetworkPortNbrEntry, agentIpv6NbrCfgEntryStatus=agentIpv6NbrCfgEntryStatus, agentIpv6OspfRoutes=agentIpv6OspfRoutes, agentDhcp6ClientState=agentDhcp6ClientState, agentIpv6TotalRoutes=agentIpv6TotalRoutes, agentIpv6AddrEntry=agentIpv6AddrEntry, agentIpv6ServicePortNbrState=agentIpv6ServicePortNbrState, agentIpv6ServicePortNbrCfgPhysAddr=agentIpv6ServicePortNbrCfgPhysAddr, agentIpv6IcmpControlGroup=agentIpv6IcmpControlGroup, agentIpv6NUDMaxUnicastSolicits=agentIpv6NUDMaxUnicastSolicits, agentIpv6NbrCfgEntry=agentIpv6NbrCfgEntry, agentIpv6AddrTable=agentIpv6AddrTable, agentIpv6UniqueNextHopsHigh=agentIpv6UniqueNextHopsHigh, agentIpv6AddrAddress=agentIpv6AddrAddress, agentIpv6IfIndex=agentIpv6IfIndex, agentIpv6RouterAdvertisementHopLimitUnspecifiedMode=agentIpv6RouterAdvertisementHopLimitUnspecifiedMode, agentIpv6EbgpRoutes=agentIpv6EbgpRoutes, agentIpv6RouteAdds=agentIpv6RouteAdds, agentIpv6AddrPrefixEntry=agentIpv6AddrPrefixEntry, agentIpv6RouterAdvertisementReachableTime=agentIpv6RouterAdvertisementReachableTime, agentIpv6TruncEcmpRoutes=agentIpv6TruncEcmpRoutes, agentDhcp6ClientIAID=agentDhcp6ClientIAID, agentIpv6InterfaceMtuValue=agentIpv6InterfaceMtuValue, agentIpv6ServicePortPrefix=agentIpv6ServicePortPrefix, agentIpv6NetworkPortNbrPhysAddr=agentIpv6NetworkPortNbrPhysAddr, agentDhcp6ClientPrefix=agentDhcp6ClientPrefix, agentIpv6RouterAdvertisementMaxAdvertisementInterval=agentIpv6RouterAdvertisementMaxAdvertisementInterval, agentIpv6ServicePortNbrUpdated=agentIpv6ServicePortNbrUpdated, agentIpv6StaticRoutePfxLength=agentIpv6StaticRoutePfxLength, agentIpv6OspfExt1Routes=agentIpv6OspfExt1Routes, agentIpv6NetworkPortNbrType=agentIpv6NetworkPortNbrType, agentIpv6OspfIntraRoutes=agentIpv6OspfIntraRoutes, agentIpv6BestRoutesHigh=agentIpv6BestRoutesHigh, agentIpv6OspfExt2Routes=agentIpv6OspfExt2Routes, agentIpv6NetworkPortNbrCfgPhysAddr=agentIpv6NetworkPortNbrCfgPhysAddr, agentIpv6StaticRouteTable=agentIpv6StaticRouteTable, agentIpv6RouterAdvertisementOtherFlag=agentIpv6RouterAdvertisementOtherFlag, agentIpv6NetworkPortNbrCfgEntryStatus=agentIpv6NetworkPortNbrCfgEntryStatus, agentIpv6EcmpRouteCount=agentIpv6EcmpRouteCount, agentIpv6RoutingMode=agentIpv6RoutingMode, agentIpv6NbrCfgAddr=agentIpv6NbrCfgAddr, agentIpv6ConnectedRoutes=agentIpv6ConnectedRoutes, agentIpv6StaticRouteStatus=agentIpv6StaticRouteStatus, agentIpv6ServicePortGroup=agentIpv6ServicePortGroup, agentIpv6RouterAdvertisementTable=agentIpv6RouterAdvertisementTable, agentIpv66to4Routes=agentIpv66to4Routes, agentIpv6EcmpNextHopCount=agentIpv6EcmpNextHopCount, agentDhcp6ClientT1Time=agentDhcp6ClientT1Time, agentDhcp6ClientServerDUID=agentDhcp6ClientServerDUID, agentIpv6NextHopGroupsHigh=agentIpv6NextHopGroupsHigh, agentDhcp6ClientPreferredLifeTime=agentDhcp6ClientPreferredLifeTime, agentIpv6InterfaceDadTransmits=agentIpv6InterfaceDadTransmits, PYSNMP_MODULE_ID=fastPathRoutingIpv6, agentIpv6StaticRouteIfIndex=agentIpv6StaticRouteIfIndex, agentIpv6NeighborsDynamicRenew=agentIpv6NeighborsDynamicRenew, agentIpv6NbrCfgTable=agentIpv6NbrCfgTable, agentIpv6NetworkPortNbrCfgEntry=agentIpv6NetworkPortNbrCfgEntry, agentIpv6NbrCfgPhysAddr=agentIpv6NbrCfgPhysAddr, agentIpv6NetworkPortNbrUpdated=agentIpv6NetworkPortNbrUpdated, agentIpv6NetworkPortNbrState=agentIpv6NetworkPortNbrState, agentIpv6EcmpRoutes=agentIpv6EcmpRoutes, agentDhcp6ClientParametersTable=agentDhcp6ClientParametersTable, agentDhcp6ClientParametersEntry=agentDhcp6ClientParametersEntry, agentIpv6NetworkPortNbrCfgAddr=agentIpv6NetworkPortNbrCfgAddr, agentIpv6LocalBgpRoutes=agentIpv6LocalBgpRoutes, agentDhcp6ClientValidLifeTime=agentDhcp6ClientValidLifeTime, agentIpv6OspfInterRoutes=agentIpv6OspfInterRoutes, agentIpv6ServicePortDefaultRouterIndex=agentIpv6ServicePortDefaultRouterIndex, agentIpv6RouterAdvertisementIfIndex=agentIpv6RouterAdvertisementIfIndex, agentIpv6ServicePortDefaultRouter=agentIpv6ServicePortDefaultRouter, agentIpv6ServicePortPrefixIndex=agentIpv6ServicePortPrefixIndex, agentIpv6NextHopGroups=agentIpv6NextHopGroups, agentIpv6EcmpCountEntry=agentIpv6EcmpCountEntry, agentIpv6AddrPrefixOnLinkFlag=agentIpv6AddrPrefixOnLinkFlag, agentIpv6ServicePortNbrEntry=agentIpv6ServicePortNbrEntry, agentIpv6EcmpGroups=agentIpv6EcmpGroups, agentIpv6NetworkPortNbrAddr=agentIpv6NetworkPortNbrAddr, agentIpv6ServicePortNbrCfgAddr=agentIpv6ServicePortNbrCfgAddr, agentIpv6EcmpCountTable=agentIpv6EcmpCountTable, agentIpv6AddrStatus=agentIpv6AddrStatus, agentIpv6StaticRouteDest=agentIpv6StaticRouteDest, agentIpv6InterfaceIcmpRedirects=agentIpv6InterfaceIcmpRedirects, agentIpv6AddrEui64Flag=agentIpv6AddrEui64Flag, agentIpv6RejectRoutes=agentIpv6RejectRoutes, agentIpv6InterfaceIcmpUnreachables=agentIpv6InterfaceIcmpUnreachables, agentIpv6RouterAdvertisementAdvertisementLifetime=agentIpv6RouterAdvertisementAdvertisementLifetime, agentIpv6ServicePortNbrCfgEntry=agentIpv6ServicePortNbrCfgEntry, agentIpv6Group=agentIpv6Group, agentIpv6AddrPrefixAdvPreferredLifetime=agentIpv6AddrPrefixAdvPreferredLifetime, agentIpv6RouterAdvertisementEntry=agentIpv6RouterAdvertisementEntry, agentIpv6RouterAdvertisementNbrSolicitInterval=agentIpv6RouterAdvertisementNbrSolicitInterval, agentIpv6RouteDeletes=agentIpv6RouteDeletes, agentIpv6BestRoutes=agentIpv6BestRoutes, agentIpv6StaticRouteNextHop=agentIpv6StaticRouteNextHop, agentIpv6UnresolvedRouteAdds=agentIpv6UnresolvedRouteAdds, agentIpv6NUDBackoffMultiple=agentIpv6NUDBackoffMultiple, agentIpv6BgpRoutes=agentIpv6BgpRoutes, agentIpv6IcmpRateLimitInterval=agentIpv6IcmpRateLimitInterval, agentIpv6ServicePortNbrCfgTable=agentIpv6ServicePortNbrCfgTable, agentIpv6AddrPrefix=agentIpv6AddrPrefix, agentIpv6RoutingTableSummaryGroup=agentIpv6RoutingTableSummaryGroup, agentIpv6UniqueNextHops=agentIpv6UniqueNextHops, agentIpv6IbgpRoutes=agentIpv6IbgpRoutes, agentIpv6InvalidRouteAdds=agentIpv6InvalidRouteAdds, agentIpv6ServicePortNbrCfgEntryStatus=agentIpv6ServicePortNbrCfgEntryStatus, agentIpv6ServicePortNbrTable=agentIpv6ServicePortNbrTable, agentIpv6RouterAdvertisementSuppressMode=agentIpv6RouterAdvertisementSuppressMode, agentIpv6StaticRoutes=agentIpv6StaticRoutes, agentIpv6FailedRouteAdds=agentIpv6FailedRouteAdds, agentIpv6AddrPrefixTable=agentIpv6AddrPrefixTable, agentDhcp6ClientRenewTime=agentDhcp6ClientRenewTime, agentIpv6StaticRouteEntry=agentIpv6StaticRouteEntry, agentDhcp6ClientExpireTime=agentDhcp6ClientExpireTime, fastPathRoutingIpv6=fastPathRoutingIpv6, agentIpv6InterfaceEntry=agentIpv6InterfaceEntry, agentIpv6AddrPrefixLength=agentIpv6AddrPrefixLength, agentIpv6ServicePortPrefixEntry=agentIpv6ServicePortPrefixEntry, agentIpv6InterfaceDhcpClient=agentIpv6InterfaceDhcpClient, agentIpv6NUDMaxMulticastSolicits=agentIpv6NUDMaxMulticastSolicits, agentIpv6InterfaceLinkLocalOnly=agentIpv6InterfaceLinkLocalOnly, agentIpv6AddrPfxLength=agentIpv6AddrPfxLength, agentIpv6InterfaceIfIndex=agentIpv6InterfaceIfIndex, agentIpv6AlternateRoutes=agentIpv6AlternateRoutes, agentIpv6ServicePortDefaultRouterTable=agentIpv6ServicePortDefaultRouterTable, agentIpv6NetworkPortNbrCfgTable=agentIpv6NetworkPortNbrCfgTable, agentIpv6AddrPrefixAutonomousFlag=agentIpv6AddrPrefixAutonomousFlag, agentIpv6InterfaceAutoconfig=agentIpv6InterfaceAutoconfig, agentIpv6ReservedLocals=agentIpv6ReservedLocals, agentIpv6UnresolvedDataRateLimit=agentIpv6UnresolvedDataRateLimit)
