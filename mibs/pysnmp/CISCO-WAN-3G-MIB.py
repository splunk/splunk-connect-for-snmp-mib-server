#
# PySNMP MIB module CISCO-WAN-3G-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-WAN-3G-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:03:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
entPhysicalName, entPhysicalIndex = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalName", "entPhysicalIndex")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibIdentifier, NotificationType, Gauge32, iso, Counter32, Unsigned32, Bits, Counter64, TimeTicks, IpAddress, ObjectIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "NotificationType", "Gauge32", "iso", "Counter32", "Unsigned32", "Bits", "Counter64", "TimeTicks", "IpAddress", "ObjectIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity")
TextualConvention, RowStatus, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "TruthValue")
ciscoWan3gMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 661))
ciscoWan3gMIB.setRevisions(('2013-08-12 00:00', '2012-07-25 00:00', '2012-07-10 00:00', '2010-08-11 00:00', '2010-08-04 00:00', '2009-02-05 00:00',))
if mibBuilder.loadTexts: ciscoWan3gMIB.setLastUpdated('201308120000Z')
if mibBuilder.loadTexts: ciscoWan3gMIB.setOrganization('Cisco Systems, Inc.')
class C3gServiceCapability(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("oneXRtt", 0), ("evDoRel0", 1), ("evDoRelA", 2), ("evDoRelB", 3), ("gprs", 4), ("edge", 5), ("umtsWcdma", 6), ("hsdpa", 7), ("hsupa", 8), ("hspa", 9), ("hspaPlus", 10), ("lteTdd", 11), ("lteFdd", 12))

class C3gRssi(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(-150, 0)

class C3gEcIo(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(-150, 0)

class C3gTemperature(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(-50, 100)

class C3gPdpType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("unknown", 1), ("ipV4", 2), ("ppp", 3), ("ipV6", 4), ("ipV4V6", 5))

class C3gUmtsQosTrafficClass(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("subscription", 1), ("conversational", 2), ("streaming", 3), ("interactive", 4), ("background", 5))

class C3gUmtsQosLinkBitRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))
    namedValues = NamedValues(("subscription", 1), ("rate16kbps", 2), ("rate32kbps", 3), ("rate64kbps", 4), ("rate128kbps", 5), ("rate256kbps", 6), ("rate384kbps", 7), ("rate1dot8mbps", 8), ("rate3dot6mbps", 9), ("rate7dot2mbps", 10), ("rate14dot4mbps", 11), ("rate56kbps", 12), ("rate1dot15mbps", 13), ("rate1dot6mbps", 14), ("rate2dot1mbps", 15), ("rate2dot8mbps", 16), ("rate4dot2mbps", 17), ("rate8dot4mbps", 18))

class C3gUmtsQosOrder(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("subscription", 1), ("withDeliverOrder", 2), ("withoutDeliverOrder", 3))

class C3gUmtsQosErroneousSdu(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("subscription", 1), ("noDetect", 2), ("errSduDeliver", 3), ("errSduNotDeliver", 4))

class C3gUmtsQosSer(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("subscription", 1), ("oneExpMinus2", 2), ("sevenExpMinus3", 3), ("oneExpMinus3", 4), ("oneExpMinus4", 5), ("oneExpMinus5", 6), ("oneExpMinus6", 7), ("oneExpMinus1", 8))

class C3gUmtsQosBer(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("subscription", 1), ("fiveExpMinus2", 2), ("oneExpMinus2", 3), ("fiveExpMinus3", 4), ("fourExpMinus3", 5), ("oneExpMinus3", 6), ("oneExpMinus4", 7), ("oneExpMinus5", 8), ("oneExpMinus6", 9), ("sixExpMinus8", 10))

class C3gUmtsQosPriority(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("subscription", 1), ("level1", 2), ("level2", 3), ("level3", 4))

class C3gUmtsQosSrcStatDescriptor(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("unknown", 1), ("speech", 2))

class C3gUmtsQosSignalIndication(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("notOptimized", 1), ("optimized", 2))

class C3gGprsQosPrecedence(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("subscription", 1), ("highPriority", 2), ("normalPriority", 3), ("lowPriority", 4))

class C3gGprsQosDelay(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("subscription", 1), ("delayClass1", 2), ("delayClass2", 3), ("delayClass3", 4), ("delayClass4", 5))

class C3gGprsQosReliability(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("subscription", 1), ("ackGtpLlcRlcProtData", 2), ("unAckGtpAckLlcRlcProtData", 3), ("unAckGtpLlcAckRlcProtData", 4), ("unAckGtpLlcRlcProtData", 5), ("unAckGtpLlcRlcUnProtData", 6))

class C3gGprsQosPeakRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("subscription", 1), ("upTo1kops", 2), ("upTo2kops", 3), ("upTo4kops", 4), ("upTo8kops", 5), ("upTo16kops", 6), ("upTo32kops", 7), ("upTo64kops", 8), ("upTo128kops", 9), ("upTo256kops", 10))

class C3gGprsQosMeanRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32))
    namedValues = NamedValues(("subscription", 1), ("rate100", 2), ("rate200", 3), ("rate500", 4), ("rate1k", 5), ("rate2k", 6), ("rate5k", 7), ("rate10k", 8), ("rate20k", 9), ("rate50k", 10), ("rate100k", 11), ("rate200k", 12), ("rate500k", 13), ("rate1m", 14), ("rate2m", 15), ("rate5m", 16), ("rate10m", 17), ("rate20m", 18), ("rate50m", 19), ("resv1", 20), ("resv2", 21), ("resv3", 22), ("resv4", 23), ("resv5", 24), ("resv6", 25), ("resv7", 26), ("resv8", 27), ("resv9", 28), ("resv10", 29), ("resv11", 30), ("resv12", 31), ("bestEffort", 32))

ciscoWan3gMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 661, 0))
ciscoWan3gMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 661, 1))
ciscoWan3gMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 661, 2))
c3gWanCommonTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1), )
if mibBuilder.loadTexts: c3gWanCommonTable.setStatus('current')
c3gWanCommonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: c3gWanCommonEntry.setStatus('current')
c3gStandard = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cdma", 1), ("gsm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gStandard.setStatus('current')
c3gCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 2), C3gServiceCapability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCapability.setStatus('current')
c3gModemState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("up", 2), ("down", 3))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gModemState.setStatus('current')
c3gPreviousServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 4), C3gServiceCapability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gPreviousServiceType.setStatus('current')
c3gCurrentServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 5), C3gServiceCapability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCurrentServiceType.setStatus('current')
c3gRoamingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("roaming", 2), ("home", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gRoamingStatus.setStatus('current')
c3gCurrentSystemTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCurrentSystemTime.setStatus('current')
c3gConnectionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknown", 1), ("error", 2), ("connecting", 3), ("dormant", 4), ("connected", 5), ("disconnected", 6), ("idle", 7), ("active", 8), ("inactive", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gConnectionStatus.setStatus('current')
c3gNotifRadioService = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 9), C3gServiceCapability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gNotifRadioService.setStatus('current')
c3gNotifRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 10), C3gRssi()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gNotifRssi.setStatus('current')
c3gNotifEcIo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 11), C3gEcIo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gNotifEcIo.setStatus('current')
c3gModemTemperature = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 12), C3gTemperature()).setUnits('degrees Celsius').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gModemTemperature.setStatus('current')
c3gRssiOnsetNotifThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 13), C3gRssi().clone(-150)).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gRssiOnsetNotifThreshold.setStatus('current')
c3gRssiAbateNotifThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 14), C3gRssi()).setUnits('dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gRssiAbateNotifThreshold.setStatus('current')
c3gEcIoOnsetNotifThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 15), C3gEcIo().clone(-150)).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gEcIoOnsetNotifThreshold.setStatus('current')
c3gEcIoAbateNotifThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 16), C3gEcIo()).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gEcIoAbateNotifThreshold.setStatus('current')
c3gModemTemperOnsetNotifThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 17), C3gTemperature().clone(100)).setUnits('degrees Celsius').setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gModemTemperOnsetNotifThreshold.setStatus('current')
c3gModemTemperAbateNotifThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 18), C3gTemperature().clone(-50)).setUnits('degrees Celsius').setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gModemTemperAbateNotifThreshold.setStatus('current')
c3gModemReset = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("powerCycle", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gModemReset.setStatus('current')
c3gModemUpNotifEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 20), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gModemUpNotifEnabled.setStatus('current')
c3gModemDownNotifEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 21), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gModemDownNotifEnabled.setStatus('current')
c3gServiceChangedNotifEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 22), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gServiceChangedNotifEnabled.setStatus('current')
c3gNetworkChangedNotifEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 23), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gNetworkChangedNotifEnabled.setStatus('current')
c3gConnectionStatusChangedNotifFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 24), Bits().clone(namedValues=NamedValues(("unknown", 0), ("error", 1), ("connecting", 2), ("dormant", 3), ("connected", 4), ("disconnected", 5), ("idle", 6), ("active", 7), ("inactive", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gConnectionStatusChangedNotifFlag.setStatus('current')
c3gRssiOnsetNotifFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 25), C3gServiceCapability()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gRssiOnsetNotifFlag.setStatus('current')
c3gRssiAbateNotifFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 26), C3gServiceCapability()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gRssiAbateNotifFlag.setStatus('current')
c3gEcIoOnsetNotifFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 27), C3gServiceCapability()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gEcIoOnsetNotifFlag.setStatus('current')
c3gEcIoAbateNotifFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 28), C3gServiceCapability()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gEcIoAbateNotifFlag.setStatus('current')
c3gModemTemperOnsetNotifEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 29), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gModemTemperOnsetNotifEnabled.setStatus('current')
c3gModemTemperAbateNotifEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 30), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gModemTemperAbateNotifEnabled.setStatus('current')
c3gGpsState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 1, 1, 31), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gGpsState.setStatus('current')
c3gWanCdma = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2))
c3gWanGsm = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3))
c3gWanLbs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4))
c3gWanSmsCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5))
c3gCdmaSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 1), )
if mibBuilder.loadTexts: c3gCdmaSessionTable.setStatus('current')
c3gCdmaSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: c3gCdmaSessionEntry.setStatus('current')
c3gCdmaTotalCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 1, 1, 1), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCdmaTotalCallDuration.setStatus('current')
c3gCdmaTotalTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 1, 1, 2), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCdmaTotalTransmitted.setStatus('current')
c3gCdmaTotalReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 1, 1, 3), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCdmaTotalReceived.setStatus('current')
c3gHdrDdtmPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("off", 2), ("on", 3), ("noChange", 4))).clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gHdrDdtmPreference.setStatus('current')
c3gCdmaConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2), )
if mibBuilder.loadTexts: c3gCdmaConnectionTable.setStatus('current')
c3gCdmaConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: c3gCdmaConnectionEntry.setStatus('current')
c3gOutgoingCallNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gOutgoingCallNumber.setStatus('current')
c3gHdrAtState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("inactive", 2), ("acquisition", 3), ("sync", 4), ("idle", 5), ("access", 6), ("connected", 7))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gHdrAtState.setStatus('current')
c3gHdrSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("open", 2), ("close", 3), ("addressManagementProtocolSetup", 4), ("atInitiated", 5), ("anInitiated", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gHdrSessionState.setStatus('current')
c3gUati = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gUati.setStatus('current')
c3gColorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gColorCode.setStatus('current')
c3gRati = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gRati.setStatus('current')
c3gHdrSessionDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 7), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gHdrSessionDuration.setStatus('current')
c3gHdrSessionStart = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 8), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gHdrSessionStart.setStatus('current')
c3gHdrSessionEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 9), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gHdrSessionEnd.setStatus('current')
c3gAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("notAuthenticated", 2), ("authenticated", 3), ("failed", 4), ("authenticationDisabled", 5))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gAuthStatus.setStatus('current')
c3gHdrDrc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gHdrDrc.setStatus('current')
c3gHdrDrcCover = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gHdrDrcCover.setStatus('current')
c3gHdrRri = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("pilotOnly", 2), ("rri9dot6kbps", 3), ("rri19dot2kbps", 4), ("rri38dot4kbps", 5), ("rri76dot8kbps", 6), ("rri153dot6kbps", 7))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gHdrRri.setStatus('current')
c3gMobileIpErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gMobileIpErrorCode.setStatus('current')
c3gCdmaCurrentTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 15), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCdmaCurrentTransmitted.setStatus('current')
c3gCdmaCurrentReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 16), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCdmaCurrentReceived.setStatus('current')
c3gCdmaCurrentCallStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("error", 2), ("connecting", 3), ("dormant", 4), ("connected", 5), ("disconnected", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCdmaCurrentCallStatus.setStatus('current')
c3gCdmaCurrentCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 18), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCdmaCurrentCallDuration.setStatus('current')
c3gCdmaCurrentCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("unknown", 1), ("asyncData", 2), ("voiceCall", 3), ("packet1xRttCall", 4), ("atAsyncDataCall", 5), ("atVoiceCall", 6), ("atPacketCall", 7), ("faxCall", 8), ("smsCall", 9), ("otaCall", 10), ("testCall", 11), ("callWaiting", 12), ("positionDetermination", 13), ("dormant", 14), ("e911Call", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCdmaCurrentCallType.setStatus('current')
c3gCdmaLastCallDisconnReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37))).clone(namedValues=NamedValues(("unknown", 1), ("modemOffline", 2), ("modemCdmaLocTilPowCyc", 3), ("noService", 4), ("abnormalCallEnd", 5), ("baseStatIntercept", 6), ("baseStatRelease", 7), ("baseStatReleaseNoReas", 8), ("baseStatReleaseSoRej", 9), ("incomingCall", 10), ("baseStatAlertStop", 11), ("clientEndedCall", 12), ("activationEndedOtasp", 13), ("ndssFailure", 14), ("maxAccesProbTransmit", 15), ("persistTestFailure", 16), ("ruimNotPresent", 17), ("accessAttemptInProg", 18), ("reasonUnspecified", 19), ("recdRetryOrder", 20), ("modemLocked", 21), ("gpsCallEnded", 22), ("smsCallEnded", 23), ("noConcurrentService", 24), ("noResponseFromBs", 25), ("rejectedByBs", 26), ("notCompatConcurServ", 27), ("accessBlockedByBs", 28), ("alreadyOnTraffChann", 29), ("emergencyCall", 30), ("dataCallEnded", 31), ("busyHdr", 32), ("billingOrAuthErrHdr", 33), ("sysChangeDueToPrlHdr", 34), ("hdrExitDueToPrl", 35), ("noSessionHdr", 36), ("callEndedHdr", 37)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCdmaLastCallDisconnReason.setStatus('current')
c3gCdmaLastConnError = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30))).clone(namedValues=NamedValues(("none", 1), ("invalidClientId", 2), ("badCallType", 3), ("badServiceType", 4), ("expectingNumber", 5), ("nullNumberBuffer", 6), ("invalidDigits", 7), ("outOfRangeNumber", 8), ("nullAalphaBuffer", 9), ("outOfRangeAlphaNumber", 10), ("invalidOtaspActivatCode", 11), ("modemOffline", 12), ("modemLocked", 13), ("unsupportedFlash", 14), ("dialedNumberProhibited", 15), ("onlyE911Calls", 16), ("modemInUse", 17), ("unsupportedServiceType", 18), ("wrongCallType", 19), ("invalidCommandCallState", 20), ("invalidCommandModemState", 21), ("noValidService", 22), ("cannotAnswerIncomingCall", 23), ("badPrivacySetting", 24), ("noCommandBuffers", 25), ("communicationProblem", 26), ("unspecifiedError", 27), ("invalidLastActiveNetwork", 28), ("noCollocatedHdr", 29), ("uimNotPresent", 30)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCdmaLastConnError.setStatus('current')
c3gCdmaIdentityTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 3), )
if mibBuilder.loadTexts: c3gCdmaIdentityTable.setStatus('current')
c3gCdmaIdentityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: c3gCdmaIdentityEntry.setStatus('current')
c3gEsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gEsn.setStatus('current')
c3gModemActivationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("activated", 2), ("notActivated", 3))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gModemActivationStatus.setStatus('current')
c3gAccountActivationDate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gAccountActivationDate.setStatus('current')
c3gCdmaRoamingPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("home", 2), ("affiliated", 3), ("any", 4))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gCdmaRoamingPreference.setStatus('current')
c3gPrlVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gPrlVersion.setStatus('current')
c3gMdn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 3, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gMdn.setStatus('current')
c3gMsid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gMsid.setStatus('current')
c3gMsl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 3, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gMsl.setStatus('current')
c3gCdmaNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 4), )
if mibBuilder.loadTexts: c3gCdmaNetworkTable.setStatus('current')
c3gCdmaNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 4, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: c3gCdmaNetworkEntry.setStatus('current')
c3gCdmaCurrentServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCdmaCurrentServiceStatus.setStatus('current')
c3gCdmaHybridModePreference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("hybrid", 2), ("evDoOnly", 3), ("oneXRttOnly", 4))).clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gCdmaHybridModePreference.setStatus('current')
c3gCdmaCurrentRoamingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("home", 2), ("roamingWithSid", 3), ("roamingWithoutSid", 4))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCdmaCurrentRoamingStatus.setStatus('current')
c3gCurrentIdleDigitalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknown", 1), ("noService", 2), ("amps", 3), ("cdma", 4), ("gsm", 5), ("hdr", 6), ("wcdma", 7), ("gps", 8), ("lte", 9))).clone('noService')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCurrentIdleDigitalMode.setStatus('current')
c3gCurrentSid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gCurrentSid.setStatus('current')
c3gCurrentNid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gCurrentNid.setStatus('current')
c3gCurrentCallSetupMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("simpleIpOnly", 2), ("mobileIpPreferWithSipFallback", 3), ("mobileIpOnly", 4))).clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gCurrentCallSetupMode.setStatus('current')
c3gSipUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 4, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gSipUsername.setStatus('current')
c3gSipPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 4, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gSipPassword.setStatus('current')
c3gServingBaseStationLongitude = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 4, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gServingBaseStationLongitude.setStatus('current')
c3gServingBaseStationLatitude = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 4, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gServingBaseStationLatitude.setStatus('current')
c3gCdmaProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5))
c3gCdmaProfileCommonTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 1), )
if mibBuilder.loadTexts: c3gCdmaProfileCommonTable.setStatus('current')
c3gCdmaProfileCommonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: c3gCdmaProfileCommonEntry.setStatus('current')
c3gNumberOfDataProfileConfigurable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 1, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gNumberOfDataProfileConfigurable.setStatus('current')
c3gCurrentActiveDataProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 1, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gCurrentActiveDataProfile.setStatus('current')
c3gCdmaProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 2), )
if mibBuilder.loadTexts: c3gCdmaProfileTable.setStatus('current')
c3gCdmaProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-WAN-3G-MIB", "c3gCdmaProfileIndex"))
if mibBuilder.loadTexts: c3gCdmaProfileEntry.setStatus('current')
c3gCdmaProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: c3gCdmaProfileIndex.setStatus('current')
c3gNai = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gNai.setStatus('current')
c3gAaaPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gAaaPassword.setStatus('current')
c3gMnHaSs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("set", 1), ("notSet", 2))).clone('notSet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gMnHaSs.setStatus('current')
c3gMnHaSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 2, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gMnHaSpi.setStatus('current')
c3gMnAaaSs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("set", 1), ("notSet", 2))).clone('notSet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gMnAaaSs.setStatus('current')
c3gMnAaaSpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 2, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gMnAaaSpi.setStatus('current')
c3gReverseTunnelPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("set", 1), ("notSet", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gReverseTunnelPreference.setStatus('current')
c3gHomeAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 2, 1, 9), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gHomeAddrType.setStatus('current')
c3gHomeAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 2, 1, 10), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gHomeAddr.setStatus('current')
c3gPriHaAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 2, 1, 11), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gPriHaAddrType.setStatus('current')
c3gPriHaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 2, 1, 12), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gPriHaAddr.setStatus('current')
c3gSecHaAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 2, 1, 13), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gSecHaAddrType.setStatus('current')
c3gSecHaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 5, 2, 1, 14), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gSecHaAddr.setStatus('current')
c3gCdmaRadio = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6))
c3gCdma1xRttRadioTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 1), )
if mibBuilder.loadTexts: c3gCdma1xRttRadioTable.setStatus('current')
c3gCdma1xRttRadioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: c3gCdma1xRttRadioEntry.setStatus('current')
c3gCurrent1xRttRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 1, 1, 1), C3gRssi()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCurrent1xRttRssi.setStatus('current')
c3gCurrent1xRttEcIo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 1, 1, 2), C3gEcIo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCurrent1xRttEcIo.setStatus('current')
c3gCurrent1xRttChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCurrent1xRttChannelNumber.setStatus('current')
c3gCurrent1xRttChannelState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("notAcquired", 2), ("acquired", 3), ("scanning", 4))).clone('notAcquired')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCurrent1xRttChannelState.setStatus('current')
c3gCdma1xRttBandClassTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 2), )
if mibBuilder.loadTexts: c3gCdma1xRttBandClassTable.setStatus('current')
c3gCdma1xRttBandClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-WAN-3G-MIB", "c3gBandClassIndex"))
if mibBuilder.loadTexts: c3gCdma1xRttBandClassEntry.setStatus('current')
c3gBandClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: c3gBandClassIndex.setStatus('current')
c3g1xRttBandClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3g1xRttBandClass.setStatus('current')
c3gCdmaEvDoRadioTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 3), )
if mibBuilder.loadTexts: c3gCdmaEvDoRadioTable.setStatus('current')
c3gCdmaEvDoRadioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: c3gCdmaEvDoRadioEntry.setStatus('current')
c3gCurrentEvDoRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 3, 1, 1), C3gRssi()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCurrentEvDoRssi.setStatus('current')
c3gCurrentEvDoEcIo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 3, 1, 2), C3gEcIo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCurrentEvDoEcIo.setStatus('current')
c3gCurrentEvDoChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCurrentEvDoChannelNumber.setStatus('current')
c3gSectorId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSectorId.setStatus('current')
c3gSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSubnetMask.setStatus('current')
c3gHdrColorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gHdrColorCode.setStatus('current')
c3gPnOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gPnOffset.setStatus('current')
c3gRxMainGainControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 3, 1, 8), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gRxMainGainControl.setStatus('current')
c3gRxDiversityGainControl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 3, 1, 9), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gRxDiversityGainControl.setStatus('current')
c3gTxTotalPower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 3, 1, 10), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gTxTotalPower.setStatus('current')
c3gTxGainAdjust = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 3, 1, 11), Integer32()).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gTxGainAdjust.setStatus('current')
c3gCarrierToInterferenceRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 3, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCarrierToInterferenceRatio.setStatus('current')
c3gCdmaEvDoBandClassTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 4), )
if mibBuilder.loadTexts: c3gCdmaEvDoBandClassTable.setStatus('current')
c3gCdmaEvDoBandClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 4, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-WAN-3G-MIB", "c3gBandClassIndex"))
if mibBuilder.loadTexts: c3gCdmaEvDoBandClassEntry.setStatus('current')
c3gEvDoBandClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gEvDoBandClass.setStatus('current')
c3gCdmaHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 5), )
if mibBuilder.loadTexts: c3gCdmaHistoryTable.setStatus('current')
c3gCdmaHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 5, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: c3gCdmaHistoryEntry.setStatus('current')
c3gCdmaHistory1xRttRssiPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 5, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(60, 60)).setFixedLength(60)).setUnits('-dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCdmaHistory1xRttRssiPerSecond.setStatus('current')
c3gCdmaHistory1xRttRssiPerMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(60, 60)).setFixedLength(60)).setUnits('-dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCdmaHistory1xRttRssiPerMinute.setStatus('current')
c3gCdmaHistory1xRttRssiPerHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(72, 72)).setFixedLength(72)).setUnits('-dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCdmaHistory1xRttRssiPerHour.setStatus('current')
c3gCdmaHistoryEvDoRssiPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(60, 60)).setFixedLength(60)).setUnits('-dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCdmaHistoryEvDoRssiPerSecond.setStatus('current')
c3gCdmaHistoryEvDoRssiPerMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(60, 60)).setFixedLength(60)).setUnits('-dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCdmaHistoryEvDoRssiPerMinute.setStatus('current')
c3gCdmaHistoryEvDoRssiPerHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 6, 5, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(72, 72)).setFixedLength(72)).setUnits('-dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCdmaHistoryEvDoRssiPerHour.setStatus('current')
c3gCdmaSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 7))
c3gCdmaSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 7, 1), )
if mibBuilder.loadTexts: c3gCdmaSecurityTable.setStatus('current')
c3gCdmaSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 7, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: c3gCdmaSecurityEntry.setStatus('current')
c3gCdmaPinSecurityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("locked", 2), ("unlocked", 3))).clone('unlocked')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gCdmaPinSecurityStatus.setStatus('current')
c3gCdmaPowerUpLockStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 2, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("enabled", 2), ("disabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gCdmaPowerUpLockStatus.setStatus('current')
c3gGsmIdentityTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 1), )
if mibBuilder.loadTexts: c3gGsmIdentityTable.setStatus('current')
c3gGsmIdentityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: c3gGsmIdentityEntry.setStatus('current')
c3gImsi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gImsi.setStatus('current')
c3gImei = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gImei.setStatus('current')
c3gIccId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gIccId.setStatus('current')
c3gMsisdn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gMsisdn.setStatus('current')
c3gFsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gFsn.setStatus('current')
c3gModemStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("offLine", 2), ("onLine", 3), ("lowPowerMode", 4))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gModemStatus.setStatus('current')
c3gGsmRoamingPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("home", 2), ("roaming", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gGsmRoamingPreference.setStatus('current')
c3gGsmNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2), )
if mibBuilder.loadTexts: c3gGsmNetworkTable.setStatus('current')
c3gGsmNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: c3gGsmNetworkEntry.setStatus('current')
c3gGsmLac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmLac.setStatus('current')
c3gGsmCurrentServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("noService", 2), ("normal", 3), ("emergencyOnly", 4))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmCurrentServiceStatus.setStatus('current')
c3gGsmCurrentServiceError = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29))).clone(namedValues=NamedValues(("unknown", 1), ("none", 2), ("imsiUnknownInHlr", 3), ("illegalMs", 4), ("imsiUnknownInVlr", 5), ("imeiNotAccepted", 6), ("illegalMe", 7), ("gprsServNotAllowed", 8), ("gprsNonGprsServNotAllow", 9), ("msIdentUnknown", 10), ("implicitlyDetached", 11), ("plmnNotAllowed", 12), ("lacNotAllowed", 13), ("roamingNotAllowed", 14), ("gprsServNotAllowInPlmn", 15), ("noSuitableCellInLa", 16), ("mscTempNotReachable", 17), ("networkFailure", 18), ("macFailure", 19), ("synchFailure", 20), ("congestion", 21), ("gsmAuthenNotAccept", 22), ("servOptionNotSupport", 23), ("reqServOptionNotSub", 24), ("servOptionOutOfOrder", 25), ("callCannotIdentified", 26), ("noPdpContextActivated", 27), ("invalidMandatInfo", 28), ("unpsecProtErr", 29)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmCurrentServiceError.setStatus('current')
c3gGsmCurrentService = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("invalid", 2), ("circuitSwitched", 3), ("packetSwitched", 4), ("combined", 5))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmCurrentService.setStatus('current')
c3gGsmPacketService = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("unknown", 1), ("none", 2), ("gprs", 3), ("edge", 4), ("umtsWcdma", 5), ("hsdpa", 6), ("hsupa", 7), ("hspa", 8), ("hspaPlus", 9), ("lte", 10))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmPacketService.setStatus('current')
c3gGsmCurrentRoamingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("roaming", 2), ("home", 3))).clone('home')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmCurrentRoamingStatus.setStatus('current')
c3gGsmNetworkSelectionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("automatic", 2), ("manual", 3))).clone('automatic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gGsmNetworkSelectionMode.setStatus('current')
c3gGsmCountry = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmCountry.setStatus('current')
c3gGsmNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNetwork.setStatus('current')
c3gGsmMcc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gGsmMcc.setStatus('current')
c3gGsmMnc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gGsmMnc.setStatus('current')
c3gGsmRac = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmRac.setStatus('current')
c3gGsmCurrentCellId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmCurrentCellId.setStatus('current')
c3gGsmCurrentPrimaryScramblingCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmCurrentPrimaryScramblingCode.setStatus('current')
c3gGsmPlmnSelection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("manual", 2), ("automatic", 3))).clone('automatic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gGsmPlmnSelection.setStatus('current')
c3gGsmRegPlmn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmRegPlmn.setStatus('current')
c3gGsmPlmnAbbr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmPlmnAbbr.setStatus('current')
c3gGsmServiceProvider = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmServiceProvider.setStatus('current')
c3gGsmTotalByteTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 19), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmTotalByteTransmitted.setStatus('current')
c3gGsmTotalByteReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 2, 1, 20), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmTotalByteReceived.setStatus('current')
c3gGsmPdpProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3))
c3gGsmPdpProfileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 1), )
if mibBuilder.loadTexts: c3gGsmPdpProfileTable.setStatus('current')
c3gGsmPdpProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-WAN-3G-MIB", "c3gGsmPdpProfileIndex"))
if mibBuilder.loadTexts: c3gGsmPdpProfileEntry.setStatus('current')
c3gGsmPdpProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: c3gGsmPdpProfileIndex.setStatus('current')
c3gGsmPdpProfileType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 1, 1, 2), C3gPdpType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmPdpProfileType.setStatus('current')
c3gGsmPdpProfileAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmPdpProfileAddr.setStatus('current')
c3gGsmPdpProfileApn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmPdpProfileApn.setStatus('current')
c3gGsmPdpProfileAuthenType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("none", 2), ("chap", 3), ("pap", 4))).clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmPdpProfileAuthenType.setStatus('current')
c3gGsmPdpProfileUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmPdpProfileUsername.setStatus('current')
c3gGsmPdpProfilePassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmPdpProfilePassword.setStatus('current')
c3gGsmPdpProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmPdpProfileRowStatus.setStatus('current')
c3gGsmPacketSessionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 2), )
if mibBuilder.loadTexts: c3gGsmPacketSessionTable.setStatus('current')
c3gGsmPacketSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-WAN-3G-MIB", "c3gGsmPdpProfileIndex"))
if mibBuilder.loadTexts: c3gGsmPacketSessionEntry.setStatus('current')
c3gGsmPacketSessionStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("active", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmPacketSessionStatus.setStatus('current')
c3gGsmPdpType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 2, 1, 2), C3gPdpType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmPdpType.setStatus('current')
c3gGsmPdpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmPdpAddress.setStatus('current')
c3gGsmReqUmtsQosTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 3), )
if mibBuilder.loadTexts: c3gGsmReqUmtsQosTable.setStatus('current')
c3gGsmReqUmtsQosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-WAN-3G-MIB", "c3gGsmPdpProfileIndex"))
if mibBuilder.loadTexts: c3gGsmReqUmtsQosEntry.setStatus('current')
c3gGsmReqUmtsQosTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 3, 1, 2), C3gUmtsQosTrafficClass()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqUmtsQosTrafficClass.setStatus('current')
c3gGsmReqUmtsQosMaxUpLinkBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 3, 1, 3), C3gUmtsQosLinkBitRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqUmtsQosMaxUpLinkBitRate.setStatus('current')
c3gGsmReqUmtsQosMaxDownLinkBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 3, 1, 4), C3gUmtsQosLinkBitRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqUmtsQosMaxDownLinkBitRate.setStatus('current')
c3gGsmReqUmtsQosGuaUpLinkBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 3, 1, 5), C3gUmtsQosLinkBitRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqUmtsQosGuaUpLinkBitRate.setStatus('current')
c3gGsmReqUmtsQosGuaDownLinkBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 3, 1, 6), C3gUmtsQosLinkBitRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqUmtsQosGuaDownLinkBitRate.setStatus('current')
c3gGsmReqUmtsQosOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 3, 1, 7), C3gUmtsQosOrder()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqUmtsQosOrder.setStatus('current')
c3gGsmReqUmtsQosErroneousSdu = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 3, 1, 8), C3gUmtsQosErroneousSdu()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqUmtsQosErroneousSdu.setStatus('current')
c3gGsmReqUmtsQosMaxSduSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 3, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1520))).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqUmtsQosMaxSduSize.setStatus('current')
c3gGsmReqUmtsQosSer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 3, 1, 10), C3gUmtsQosSer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqUmtsQosSer.setStatus('current')
c3gGsmReqUmtsQosBer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 3, 1, 11), C3gUmtsQosBer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqUmtsQosBer.setStatus('current')
c3gGsmReqUmtsQosDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 3, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4000))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqUmtsQosDelay.setStatus('current')
c3gGsmReqUmtsQosPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 3, 1, 13), C3gUmtsQosPriority()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqUmtsQosPriority.setStatus('current')
c3gGsmReqUmtsQosSrcStatDescriptor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 3, 1, 14), C3gUmtsQosSrcStatDescriptor()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqUmtsQosSrcStatDescriptor.setStatus('current')
c3gGsmReqUmtsQosSignalIndication = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 3, 1, 15), C3gUmtsQosSignalIndication()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqUmtsQosSignalIndication.setStatus('current')
c3gGsmReqUmtsQosRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 3, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqUmtsQosRowStatus.setStatus('current')
c3gGsmMinUmtsQosTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 4), )
if mibBuilder.loadTexts: c3gGsmMinUmtsQosTable.setStatus('current')
c3gGsmMinUmtsQosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 4, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-WAN-3G-MIB", "c3gGsmPdpProfileIndex"))
if mibBuilder.loadTexts: c3gGsmMinUmtsQosEntry.setStatus('current')
c3gGsmMinUmtsQosTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 4, 1, 1), C3gUmtsQosTrafficClass()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinUmtsQosTrafficClass.setStatus('current')
c3gGsmMinUmtsQosMaxUpLinkBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 4, 1, 2), C3gUmtsQosLinkBitRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinUmtsQosMaxUpLinkBitRate.setStatus('current')
c3gGsmMinUmtsQosMaxDownLinkBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 4, 1, 3), C3gUmtsQosLinkBitRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinUmtsQosMaxDownLinkBitRate.setStatus('current')
c3gGsmMinUmtsQosGuaUpLinkBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 4, 1, 4), C3gUmtsQosLinkBitRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinUmtsQosGuaUpLinkBitRate.setStatus('current')
c3gGsmMinUmtsQosGuaDownLinkBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 4, 1, 5), C3gUmtsQosLinkBitRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinUmtsQosGuaDownLinkBitRate.setStatus('current')
c3gGsmMinUmtsQosOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 4, 1, 6), C3gUmtsQosOrder()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinUmtsQosOrder.setStatus('current')
c3gGsmMinUmtsQosErroneousSdu = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 4, 1, 7), C3gUmtsQosErroneousSdu()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinUmtsQosErroneousSdu.setStatus('current')
c3gGsmMinUmtsQosMaxSduSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 4, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1520))).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinUmtsQosMaxSduSize.setStatus('current')
c3gGsmMinUmtsQosSer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 4, 1, 9), C3gUmtsQosSer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinUmtsQosSer.setStatus('current')
c3gGsmMinUmtsQosBer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 4, 1, 10), C3gUmtsQosBer()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinUmtsQosBer.setStatus('current')
c3gGsmMinUmtsQosDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 4, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4000))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinUmtsQosDelay.setStatus('current')
c3gGsmMinUmtsQosPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 4, 1, 12), C3gUmtsQosPriority()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinUmtsQosPriority.setStatus('current')
c3gGsmMinUmtsQosSrcStatDescriptor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 4, 1, 13), C3gUmtsQosSrcStatDescriptor()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinUmtsQosSrcStatDescriptor.setStatus('current')
c3gGsmMinUmtsQosSignalIndication = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 4, 1, 14), C3gUmtsQosSignalIndication()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinUmtsQosSignalIndication.setStatus('current')
c3gGsmMinUmtsQosRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 4, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinUmtsQosRowStatus.setStatus('current')
c3gGsmNegoUmtsQosTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 5), )
if mibBuilder.loadTexts: c3gGsmNegoUmtsQosTable.setStatus('current')
c3gGsmNegoUmtsQosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 5, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-WAN-3G-MIB", "c3gGsmPdpProfileIndex"))
if mibBuilder.loadTexts: c3gGsmNegoUmtsQosEntry.setStatus('current')
c3gGsmNegoUmtsQosTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 5, 1, 1), C3gUmtsQosTrafficClass()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoUmtsQosTrafficClass.setStatus('current')
c3gGsmNegoUmtsQosMaxUpLinkBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 5, 1, 2), C3gUmtsQosLinkBitRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoUmtsQosMaxUpLinkBitRate.setStatus('current')
c3gGsmNegoUmtsQosMaxDownLinkBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 5, 1, 3), C3gUmtsQosLinkBitRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoUmtsQosMaxDownLinkBitRate.setStatus('current')
c3gGsmNegoUmtsQosGuaUpLinkBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 5, 1, 4), C3gUmtsQosLinkBitRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoUmtsQosGuaUpLinkBitRate.setStatus('current')
c3gGsmNegoUmtsQosGuaDownLinkBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 5, 1, 5), C3gUmtsQosLinkBitRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoUmtsQosGuaDownLinkBitRate.setStatus('current')
c3gGsmNegoUmtsQosOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 5, 1, 6), C3gUmtsQosOrder()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoUmtsQosOrder.setStatus('current')
c3gGsmNegoUmtsQosErroneousSdu = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 5, 1, 7), C3gUmtsQosErroneousSdu()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoUmtsQosErroneousSdu.setStatus('current')
c3gGsmNegoUmtsQosMaxSduSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 5, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1520))).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoUmtsQosMaxSduSize.setStatus('current')
c3gGsmNegoUmtsQosSer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 5, 1, 9), C3gUmtsQosSer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoUmtsQosSer.setStatus('current')
c3gGsmNegoUmtsQosBer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 5, 1, 10), C3gUmtsQosBer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoUmtsQosBer.setStatus('current')
c3gGsmNegoUmtsQosDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 5, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoUmtsQosDelay.setStatus('current')
c3gGsmNegoUmtsQosPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 5, 1, 12), C3gUmtsQosPriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoUmtsQosPriority.setStatus('current')
c3gGsmNegoUmtsQosSrcStatDescriptor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 5, 1, 13), C3gUmtsQosSrcStatDescriptor()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoUmtsQosSrcStatDescriptor.setStatus('current')
c3gGsmNegoUmtsQosSignalIndication = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 5, 1, 14), C3gUmtsQosSignalIndication()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoUmtsQosSignalIndication.setStatus('current')
c3gGsmReqGprsQosTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 6), )
if mibBuilder.loadTexts: c3gGsmReqGprsQosTable.setStatus('current')
c3gGsmReqGprsQosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 6, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-WAN-3G-MIB", "c3gGsmPdpProfileIndex"))
if mibBuilder.loadTexts: c3gGsmReqGprsQosEntry.setStatus('current')
c3gGsmReqGprsQosPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 6, 1, 1), C3gGprsQosPrecedence()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqGprsQosPrecedence.setStatus('current')
c3gGsmReqGprsQosDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 6, 1, 2), C3gGprsQosDelay()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqGprsQosDelay.setStatus('current')
c3gGsmReqGprsQosReliability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 6, 1, 3), C3gGprsQosReliability()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqGprsQosReliability.setStatus('current')
c3gGsmReqGprsQosPeakRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 6, 1, 4), C3gGprsQosPeakRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqGprsQosPeakRate.setStatus('current')
c3gGsmReqGprsQosMeanRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 6, 1, 5), C3gGprsQosMeanRate()).setUnits('octet-per-hour').setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqGprsQosMeanRate.setStatus('current')
c3gGsmReqGprsQosRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 6, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmReqGprsQosRowStatus.setStatus('current')
c3gGsmMinGprsQosTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 7), )
if mibBuilder.loadTexts: c3gGsmMinGprsQosTable.setStatus('current')
c3gGsmMinGprsQosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 7, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-WAN-3G-MIB", "c3gGsmPdpProfileIndex"))
if mibBuilder.loadTexts: c3gGsmMinGprsQosEntry.setStatus('current')
c3gGsmMinGprsQosPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 7, 1, 1), C3gGprsQosPrecedence()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinGprsQosPrecedence.setStatus('current')
c3gGsmMinGprsQosDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 7, 1, 2), C3gGprsQosDelay()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinGprsQosDelay.setStatus('current')
c3gGsmMinGprsQosReliability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 7, 1, 3), C3gGprsQosReliability()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinGprsQosReliability.setStatus('current')
c3gGsmMinGprsQosPeakRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 7, 1, 4), C3gGprsQosPeakRate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinGprsQosPeakRate.setStatus('current')
c3gGsmMinGprsQosMeanRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 7, 1, 5), C3gGprsQosMeanRate()).setUnits('octet-per-hour').setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinGprsQosMeanRate.setStatus('current')
c3gGsmMinGprsQosRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 7, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gGsmMinGprsQosRowStatus.setStatus('current')
c3gGsmNegoGprsQosTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 8), )
if mibBuilder.loadTexts: c3gGsmNegoGprsQosTable.setStatus('current')
c3gGsmNegoGprsQosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 8, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-WAN-3G-MIB", "c3gGsmPdpProfileIndex"))
if mibBuilder.loadTexts: c3gGsmNegoGprsQosEntry.setStatus('current')
c3gGsmNegoGprsQosPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 8, 1, 1), C3gGprsQosPrecedence()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoGprsQosPrecedence.setStatus('current')
c3gGsmNegoGprsQosDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 8, 1, 2), C3gGprsQosDelay()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoGprsQosDelay.setStatus('current')
c3gGsmNegoGprsQosReliability = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 8, 1, 3), C3gGprsQosReliability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoGprsQosReliability.setStatus('current')
c3gGsmNegoGprsQosPeakRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 8, 1, 4), C3gGprsQosPeakRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoGprsQosPeakRate.setStatus('current')
c3gGsmNegoGprsQosMeanRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 3, 8, 1, 5), C3gGprsQosMeanRate()).setUnits('octet-per-hour').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNegoGprsQosMeanRate.setStatus('current')
c3gGsmRadio = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4))
c3gGsmRadioTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4, 1), )
if mibBuilder.loadTexts: c3gGsmRadioTable.setStatus('current')
c3gGsmRadioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: c3gGsmRadioEntry.setStatus('current')
c3gCurrentGsmRssi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4, 1, 1, 1), C3gRssi()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCurrentGsmRssi.setStatus('current')
c3gCurrentGsmEcIo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4, 1, 1, 2), C3gEcIo()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gCurrentGsmEcIo.setStatus('current')
c3gGsmCurrentBand = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("unknown", 1), ("invalid", 2), ("none", 3), ("gsm850", 4), ("gsm900", 5), ("gsm1800", 6), ("gsm1900", 7), ("wcdma800", 8), ("wcdma850", 9), ("wcdma1900", 10), ("wcdma2100", 11), ("lteBand", 12))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmCurrentBand.setStatus('current')
c3gGsmChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmChannelNumber.setStatus('current')
c3gGsmNumberOfNearbyCell = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNumberOfNearbyCell.setStatus('current')
c3gGsmNearbyCellTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4, 2), )
if mibBuilder.loadTexts: c3gGsmNearbyCellTable.setStatus('current')
c3gGsmNearbyCellEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-WAN-3G-MIB", "c3gGsmNearbyCellIndex"))
if mibBuilder.loadTexts: c3gGsmNearbyCellEntry.setStatus('current')
c3gGsmNearbyCellIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: c3gGsmNearbyCellIndex.setStatus('current')
c3gGsmNearbyCellPrimaryScramblingCode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNearbyCellPrimaryScramblingCode.setStatus('current')
c3gGsmNearbyCellRscp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-150, 0))).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNearbyCellRscp.setStatus('current')
c3gGsmNearbyCellEcIoMeasurement = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4, 2, 1, 4), C3gEcIo()).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNearbyCellEcIoMeasurement.setStatus('current')
c3gGsmHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4, 3), )
if mibBuilder.loadTexts: c3gGsmHistoryTable.setStatus('current')
c3gGsmHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: c3gGsmHistoryEntry.setStatus('current')
c3gGsmHistoryRssiPerSecond = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(60, 60)).setFixedLength(60)).setUnits('-dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmHistoryRssiPerSecond.setStatus('current')
c3gGsmHistoryRssiPerMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(60, 60)).setFixedLength(60)).setUnits('-dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmHistoryRssiPerMinute.setStatus('current')
c3gGsmHistoryRssiPerHour = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 4, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(72, 72)).setFixedLength(72)).setUnits('-dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmHistoryRssiPerHour.setStatus('current')
c3gGsmSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 5))
c3gGsmSecurityTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 5, 1), )
if mibBuilder.loadTexts: c3gGsmSecurityTable.setStatus('current')
c3gGsmSecurityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 5, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: c3gGsmSecurityEntry.setStatus('current')
c3gGsmChv1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("disabled", 2), ("enabled", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: c3gGsmChv1.setStatus('current')
c3gGsmSimStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("unknown", 1), ("ok", 2), ("notInserted", 3), ("removed", 4), ("initFailure", 5), ("generalFailure", 6), ("locked", 7), ("chv1Blocked", 8), ("chv2Blocked", 9), ("chv1Rejected", 10), ("chv2Rejected", 11), ("mepLocked", 12), ("networkRejected", 13))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmSimStatus.setStatus('current')
c3gGsmSimUserOperationRequired = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("none", 2), ("enterChv1", 3), ("enterChv2", 4), ("enterUnblockChv1", 5), ("enterUnblockChv2", 6), ("enterMepCode", 7))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmSimUserOperationRequired.setStatus('current')
c3gGsmNumberOfRetriesRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 3, 5, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gGsmNumberOfRetriesRemaining.setStatus('current')
c3gWanLbsCommon = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1))
c3gWanLbsCommonTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1), )
if mibBuilder.loadTexts: c3gWanLbsCommonTable.setStatus('current')
c3gWanLbsCommonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: c3gWanLbsCommonEntry.setStatus('current')
c3gLbsModeSelected = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unKnown", 1), ("standAlone", 2), ("msBased", 3), ("msAssist", 4), ("reserved", 5))).clone('unKnown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsModeSelected.setStatus('current')
c3gLbsState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("gpsDisabled", 1), ("gpsAcquiring", 2), ("gpsEnabled", 3), ("gpsLocError", 4))).clone('gpsDisabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsState.setStatus('current')
c3gLbsLocFixError = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48))).clone(namedValues=NamedValues(("offline", 1), ("noService", 2), ("noConnection", 3), ("noData", 4), ("sessionBusy", 5), ("reserved", 6), ("gpsDisabled", 7), ("connectionFailed", 8), ("errorState", 9), ("clientEnded", 10), ("uiEnded", 11), ("networkEnded", 12), ("timeout", 13), ("privacyLevel", 14), ("networkAccessError", 15), ("fixError", 16), ("pdeRejected", 17), ("trafficChannelExited", 18), ("e911", 19), ("serverError", 20), ("staleBSinformation", 21), ("resourceContention", 22), ("authenticationParameterFailed", 23), ("authenticationFailedLocal", 24), ("authenticationFailedNetwork", 25), ("vxLcsAgentAuthFail", 26), ("unknownSystemError", 27), ("unsupportedService", 28), ("subscriptionViolation", 29), ("desiredFixMethodFailed", 30), ("antennaSwitch", 31), ("noTxConfirmationReceived", 32), ("normalEndOfSession", 33), ("noErrorFromNetwork", 34), ("noResourcesLeftOnNetwork", 35), ("positionServerNotAvailable", 36), ("unsupportedProtocolVersion", 37), ("ssmolrErrorSystemFailure", 38), ("ssmolrErrorUnexpectedDataValue", 39), ("ssmolrErrorDataMissing", 40), ("ssmolrErrorFacilityNotSupported", 41), ("ssmolrErrorSsSubscriptionViolation", 42), ("ssmolrErrorPositionMethodFailure", 43), ("ssmolrErrorUndefined", 44), ("smlcTimeout", 45), ("mtGguardTimeExpired", 46), ("additionalAssistanceNeeded", 47), ("noFixError", 48))).clone('noFixError')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsLocFixError.setStatus('current')
c3gLbsLatitude = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsLatitude.setStatus('current')
c3gLbsLongitude = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsLongitude.setStatus('current')
c3gLbsTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsTimeStamp.setStatus('current')
c3gLbsLocUncertaintyAngle = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 7), Unsigned32()).setUnits('degrees').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsLocUncertaintyAngle.setStatus('current')
c3gLbsLocUncertaintyA = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 8), Unsigned32()).setUnits('meters').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsLocUncertaintyA.setStatus('current')
c3gLbsLocUncertaintyPos = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 9), Unsigned32()).setUnits('meters').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsLocUncertaintyPos.setStatus('current')
c3gLbsFixtype = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("twoDimension", 2), ("threeDimension", 3))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsFixtype.setStatus('current')
c3gLbsHeightValid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsHeightValid.setStatus('current')
c3gLbsHeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-500, 500))).setUnits('meters').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsHeight.setStatus('current')
c3gLbsLocUncertaintyVertical = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 13), Unsigned32()).setUnits('meters').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsLocUncertaintyVertical.setStatus('current')
c3gLbsVelocityValid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 14), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsVelocityValid.setStatus('current')
c3gLbsHeading = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 15), Unsigned32()).setUnits('degrees').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsHeading.setStatus('current')
c3gLbsVelocityHorizontal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 16), Unsigned32()).setUnits('meters per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsVelocityHorizontal.setStatus('current')
c3gLbsVelocityVertical = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 17), Unsigned32()).setUnits('meters per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsVelocityVertical.setStatus('current')
c3gLbsHepe = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 18), Unsigned32()).setUnits('centimeters').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsHepe.setStatus('current')
c3gLbsNumSatellites = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 1, 1, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gLbsNumSatellites.setStatus('current')
c3gWanLbsSatelliteInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 2))
c3gWanLbsSatelliteInfoTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 2, 1), )
if mibBuilder.loadTexts: c3gWanLbsSatelliteInfoTable.setStatus('current')
c3gWanLbsSatelliteInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 2, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-WAN-3G-MIB", "c3gWanLbsSatelliteInfoIndex"))
if mibBuilder.loadTexts: c3gWanLbsSatelliteInfoEntry.setStatus('current')
c3gWanLbsSatelliteInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: c3gWanLbsSatelliteInfoIndex.setStatus('current')
c3gWanLbsSatelliteNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gWanLbsSatelliteNumber.setStatus('current')
c3gWanLbsSatelliteElevation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 2, 1, 1, 3), Integer32()).setUnits('degrees').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gWanLbsSatelliteElevation.setStatus('current')
c3gWanLbsSatelliteAzimuth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 2, 1, 1, 4), Integer32()).setUnits('degrees').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gWanLbsSatelliteAzimuth.setStatus('current')
c3gWanLbsSatelliteInfoSignalNoiseRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 2, 1, 1, 5), Integer32()).setUnits('db').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gWanLbsSatelliteInfoSignalNoiseRatio.setStatus('current')
c3gWanLbsSatelliteUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 2, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gWanLbsSatelliteUsed.setStatus('current')
c3gWanLbsSatelliteInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 4, 2, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: c3gWanLbsSatelliteInfoRowStatus.setStatus('current')
c3gWanSms = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1))
c3gSmsCommonTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1), )
if mibBuilder.loadTexts: c3gSmsCommonTable.setStatus('current')
c3gSmsCommonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: c3gSmsCommonEntry.setStatus('current')
c3gSmsServiceAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSmsServiceAvailable.setStatus('current')
c3gSmsOutSmsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1, 1, 2), Counter32()).setUnits('msgs').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSmsOutSmsCount.setStatus('current')
c3gSmsOutSmsErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1, 1, 3), Counter32()).setUnits('msgs').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSmsOutSmsErrorCount.setStatus('current')
c3gSmsInSmsStorageUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1, 1, 4), Gauge32()).setUnits('msgs').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSmsInSmsStorageUsed.setStatus('current')
c3gSmsInSmsStorageUnused = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1, 1, 5), Gauge32()).setUnits('msgs').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSmsInSmsStorageUnused.setStatus('current')
c3gSmsInSmsArchiveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1, 1, 6), Gauge32()).setUnits('msgs').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSmsInSmsArchiveCount.setStatus('current')
c3gSmsInSmsArchiveErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1, 1, 7), Gauge32()).setUnits('msgs').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSmsInSmsArchiveErrorCount.setStatus('current')
c3gSmsArchiveUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1, 1, 8), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSmsArchiveUrl.setStatus('current')
c3gSmsOutSmsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 1), ("success", 2), ("copySmsHeader", 3), ("copySmsBody", 4), ("sent", 5), ("receivedSentNotification", 6), ("receivedOutMsgNumber", 7), ("receivedOutMsgStatus", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSmsOutSmsStatus.setStatus('current')
c3gSmsInSmsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSmsInSmsCount.setStatus('current')
c3gSmsInSmsDeleted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSmsInSmsDeleted.setStatus('current')
c3gSmsInSmsStorageMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1, 1, 12), Counter64()).setUnits('msgs').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSmsInSmsStorageMax.setStatus('current')
c3gSmsInSmsCallBack = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1, 1, 13), Counter32()).setUnits('msgs').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSmsInSmsCallBack.setStatus('current')
c3gSmsOutSmsPendingCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1, 1, 14), Gauge32()).setUnits('msgs').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSmsOutSmsPendingCount.setStatus('current')
c3gSmsOutSmsArchiveCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1, 1, 15), Gauge32()).setUnits('msgs').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSmsOutSmsArchiveCount.setStatus('current')
c3gSmsOutSmsArchiveErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1, 1, 16), Gauge32()).setUnits('msgs').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSmsOutSmsArchiveErrorCount.setStatus('current')
c3gSmsInSmsArchived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 661, 1, 5, 1, 1, 1, 17), Gauge32()).setUnits('msgs').setMaxAccess("readonly")
if mibBuilder.loadTexts: c3gSmsInSmsArchived.setStatus('current')
c3gModemUpNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 661, 0, 1)).setObjects(("ENTITY-MIB", "entPhysicalName"))
if mibBuilder.loadTexts: c3gModemUpNotif.setStatus('current')
c3gModemDownNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 661, 0, 2)).setObjects(("ENTITY-MIB", "entPhysicalName"))
if mibBuilder.loadTexts: c3gModemDownNotif.setStatus('current')
c3gServiceChangedNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 661, 0, 3)).setObjects(("CISCO-WAN-3G-MIB", "c3gPreviousServiceType"), ("CISCO-WAN-3G-MIB", "c3gCurrentServiceType"))
if mibBuilder.loadTexts: c3gServiceChangedNotif.setStatus('current')
c3gNetworkChangedNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 661, 0, 4)).setObjects(("CISCO-WAN-3G-MIB", "c3gCurrentSid"), ("CISCO-WAN-3G-MIB", "c3gCurrentNid"), ("CISCO-WAN-3G-MIB", "c3gGsmMcc"), ("CISCO-WAN-3G-MIB", "c3gGsmMnc"), ("CISCO-WAN-3G-MIB", "c3gRoamingStatus"))
if mibBuilder.loadTexts: c3gNetworkChangedNotif.setStatus('current')
c3gConnectionStatusChangedNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 661, 0, 5)).setObjects(("CISCO-WAN-3G-MIB", "c3gConnectionStatus"), ("CISCO-WAN-3G-MIB", "c3gCurrentServiceType"))
if mibBuilder.loadTexts: c3gConnectionStatusChangedNotif.setStatus('current')
c3gRssiOnsetNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 661, 0, 6)).setObjects(("CISCO-WAN-3G-MIB", "c3gNotifRadioService"), ("CISCO-WAN-3G-MIB", "c3gNotifRssi"))
if mibBuilder.loadTexts: c3gRssiOnsetNotif.setStatus('current')
c3gRssiAbateNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 661, 0, 7)).setObjects(("CISCO-WAN-3G-MIB", "c3gNotifRadioService"), ("CISCO-WAN-3G-MIB", "c3gNotifRssi"))
if mibBuilder.loadTexts: c3gRssiAbateNotif.setStatus('current')
c3gEcIoOnsetNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 661, 0, 8)).setObjects(("CISCO-WAN-3G-MIB", "c3gNotifRadioService"), ("CISCO-WAN-3G-MIB", "c3gNotifEcIo"))
if mibBuilder.loadTexts: c3gEcIoOnsetNotif.setStatus('current')
c3gEcIoAbateNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 661, 0, 9)).setObjects(("CISCO-WAN-3G-MIB", "c3gNotifRadioService"), ("CISCO-WAN-3G-MIB", "c3gNotifEcIo"))
if mibBuilder.loadTexts: c3gEcIoAbateNotif.setStatus('current')
c3gModemTemperOnsetNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 661, 0, 10)).setObjects(("CISCO-WAN-3G-MIB", "c3gModemTemperature"))
if mibBuilder.loadTexts: c3gModemTemperOnsetNotif.setStatus('current')
c3gModemTemperAbateNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 661, 0, 11)).setObjects(("CISCO-WAN-3G-MIB", "c3gModemTemperature"))
if mibBuilder.loadTexts: c3gModemTemperAbateNotif.setStatus('current')
c3gModemTemperOnsetRecoveryNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 661, 0, 12)).setObjects(("CISCO-WAN-3G-MIB", "c3gModemTemperature"))
if mibBuilder.loadTexts: c3gModemTemperOnsetRecoveryNotif.setStatus('current')
c3gModemTemperAbateRecoveryNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 661, 0, 13)).setObjects(("CISCO-WAN-3G-MIB", "c3gModemTemperature"))
if mibBuilder.loadTexts: c3gModemTemperAbateRecoveryNotif.setStatus('current')
ciscoWan3gMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 661, 2, 1))
ciscoWan3gMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 661, 2, 2))
ciscoWan3gMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 661, 2, 1, 1)).setObjects(("CISCO-WAN-3G-MIB", "ciscoWan3gMIBNotificationGroup"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBCommonObjectGroup"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBCdmaObjectGroup"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBGsmObjectGroup"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBSmsObjectGroup"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBLbsObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWan3gMIBCompliance = ciscoWan3gMIBCompliance.setStatus('deprecated')
ciscoWan3gMIBCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 661, 2, 1, 2)).setObjects(("CISCO-WAN-3G-MIB", "ciscoWan3gMIBNotificationGroup"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBCommonObjectGroup"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBCdmaObjectGroup"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBGsmObjectGroup"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBSmsObjectGroup"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBLbsObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWan3gMIBCompliance1 = ciscoWan3gMIBCompliance1.setStatus('deprecated')
ciscoWan3gMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 661, 2, 1, 3)).setObjects(("CISCO-WAN-3G-MIB", "ciscoWan3gMIBNotificationGroupRev1"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBCommonObjectGroup"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBCdmaObjectGroup"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBGsmObjectGroup"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBSmsObjectGroup"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBLbsObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWan3gMIBComplianceRev1 = ciscoWan3gMIBComplianceRev1.setStatus('current')
ciscoWan3gMIBCompliance1Rev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 661, 2, 1, 4)).setObjects(("CISCO-WAN-3G-MIB", "ciscoWan3gMIBNotificationGroupRev1"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBCommonObjectGroup"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBCdmaObjectGroup"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBGsmObjectGroup"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBSmsObjectGroup"), ("CISCO-WAN-3G-MIB", "ciscoWan3gMIBLbsObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWan3gMIBCompliance1Rev1 = ciscoWan3gMIBCompliance1Rev1.setStatus('current')
ciscoWan3gMIBCommonObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 661, 2, 2, 1)).setObjects(("CISCO-WAN-3G-MIB", "c3gStandard"), ("CISCO-WAN-3G-MIB", "c3gCapability"), ("CISCO-WAN-3G-MIB", "c3gModemState"), ("CISCO-WAN-3G-MIB", "c3gPreviousServiceType"), ("CISCO-WAN-3G-MIB", "c3gCurrentServiceType"), ("CISCO-WAN-3G-MIB", "c3gRoamingStatus"), ("CISCO-WAN-3G-MIB", "c3gCurrentSystemTime"), ("CISCO-WAN-3G-MIB", "c3gConnectionStatus"), ("CISCO-WAN-3G-MIB", "c3gNotifRadioService"), ("CISCO-WAN-3G-MIB", "c3gNotifRssi"), ("CISCO-WAN-3G-MIB", "c3gNotifEcIo"), ("CISCO-WAN-3G-MIB", "c3gModemTemperature"), ("CISCO-WAN-3G-MIB", "c3gRssiOnsetNotifThreshold"), ("CISCO-WAN-3G-MIB", "c3gRssiAbateNotifThreshold"), ("CISCO-WAN-3G-MIB", "c3gEcIoOnsetNotifThreshold"), ("CISCO-WAN-3G-MIB", "c3gEcIoAbateNotifThreshold"), ("CISCO-WAN-3G-MIB", "c3gModemTemperOnsetNotifThreshold"), ("CISCO-WAN-3G-MIB", "c3gModemTemperAbateNotifThreshold"), ("CISCO-WAN-3G-MIB", "c3gModemReset"), ("CISCO-WAN-3G-MIB", "c3gModemUpNotifEnabled"), ("CISCO-WAN-3G-MIB", "c3gModemDownNotifEnabled"), ("CISCO-WAN-3G-MIB", "c3gServiceChangedNotifEnabled"), ("CISCO-WAN-3G-MIB", "c3gNetworkChangedNotifEnabled"), ("CISCO-WAN-3G-MIB", "c3gConnectionStatusChangedNotifFlag"), ("CISCO-WAN-3G-MIB", "c3gRssiOnsetNotifFlag"), ("CISCO-WAN-3G-MIB", "c3gRssiAbateNotifFlag"), ("CISCO-WAN-3G-MIB", "c3gEcIoOnsetNotifFlag"), ("CISCO-WAN-3G-MIB", "c3gEcIoAbateNotifFlag"), ("CISCO-WAN-3G-MIB", "c3gModemTemperOnsetNotifEnabled"), ("CISCO-WAN-3G-MIB", "c3gModemTemperAbateNotifEnabled"), ("CISCO-WAN-3G-MIB", "c3gGpsState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWan3gMIBCommonObjectGroup = ciscoWan3gMIBCommonObjectGroup.setStatus('current')
ciscoWan3gMIBCdmaObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 661, 2, 2, 2)).setObjects(("CISCO-WAN-3G-MIB", "c3gCdmaTotalCallDuration"), ("CISCO-WAN-3G-MIB", "c3gCdmaTotalTransmitted"), ("CISCO-WAN-3G-MIB", "c3gCdmaTotalReceived"), ("CISCO-WAN-3G-MIB", "c3gHdrDdtmPreference"), ("CISCO-WAN-3G-MIB", "c3gOutgoingCallNumber"), ("CISCO-WAN-3G-MIB", "c3gHdrAtState"), ("CISCO-WAN-3G-MIB", "c3gHdrSessionState"), ("CISCO-WAN-3G-MIB", "c3gUati"), ("CISCO-WAN-3G-MIB", "c3gColorCode"), ("CISCO-WAN-3G-MIB", "c3gRati"), ("CISCO-WAN-3G-MIB", "c3gHdrSessionDuration"), ("CISCO-WAN-3G-MIB", "c3gHdrSessionStart"), ("CISCO-WAN-3G-MIB", "c3gHdrSessionEnd"), ("CISCO-WAN-3G-MIB", "c3gAuthStatus"), ("CISCO-WAN-3G-MIB", "c3gHdrDrc"), ("CISCO-WAN-3G-MIB", "c3gHdrDrcCover"), ("CISCO-WAN-3G-MIB", "c3gHdrRri"), ("CISCO-WAN-3G-MIB", "c3gCdmaCurrentTransmitted"), ("CISCO-WAN-3G-MIB", "c3gCdmaCurrentReceived"), ("CISCO-WAN-3G-MIB", "c3gCdmaCurrentCallStatus"), ("CISCO-WAN-3G-MIB", "c3gCdmaCurrentCallDuration"), ("CISCO-WAN-3G-MIB", "c3gCdmaCurrentCallType"), ("CISCO-WAN-3G-MIB", "c3gCdmaLastCallDisconnReason"), ("CISCO-WAN-3G-MIB", "c3gCdmaLastConnError"), ("CISCO-WAN-3G-MIB", "c3gMobileIpErrorCode"), ("CISCO-WAN-3G-MIB", "c3gEsn"), ("CISCO-WAN-3G-MIB", "c3gModemActivationStatus"), ("CISCO-WAN-3G-MIB", "c3gAccountActivationDate"), ("CISCO-WAN-3G-MIB", "c3gCdmaRoamingPreference"), ("CISCO-WAN-3G-MIB", "c3gPrlVersion"), ("CISCO-WAN-3G-MIB", "c3gMdn"), ("CISCO-WAN-3G-MIB", "c3gMsid"), ("CISCO-WAN-3G-MIB", "c3gMsl"), ("CISCO-WAN-3G-MIB", "c3gCdmaCurrentServiceStatus"), ("CISCO-WAN-3G-MIB", "c3gCdmaHybridModePreference"), ("CISCO-WAN-3G-MIB", "c3gCdmaCurrentRoamingStatus"), ("CISCO-WAN-3G-MIB", "c3gCurrentIdleDigitalMode"), ("CISCO-WAN-3G-MIB", "c3gCurrentSid"), ("CISCO-WAN-3G-MIB", "c3gCurrentNid"), ("CISCO-WAN-3G-MIB", "c3gCurrentCallSetupMode"), ("CISCO-WAN-3G-MIB", "c3gSipUsername"), ("CISCO-WAN-3G-MIB", "c3gSipPassword"), ("CISCO-WAN-3G-MIB", "c3gServingBaseStationLongitude"), ("CISCO-WAN-3G-MIB", "c3gServingBaseStationLatitude"), ("CISCO-WAN-3G-MIB", "c3gNumberOfDataProfileConfigurable"), ("CISCO-WAN-3G-MIB", "c3gCurrentActiveDataProfile"), ("CISCO-WAN-3G-MIB", "c3gNai"), ("CISCO-WAN-3G-MIB", "c3gAaaPassword"), ("CISCO-WAN-3G-MIB", "c3gMnHaSs"), ("CISCO-WAN-3G-MIB", "c3gMnHaSpi"), ("CISCO-WAN-3G-MIB", "c3gMnAaaSs"), ("CISCO-WAN-3G-MIB", "c3gMnAaaSpi"), ("CISCO-WAN-3G-MIB", "c3gReverseTunnelPreference"), ("CISCO-WAN-3G-MIB", "c3gHomeAddrType"), ("CISCO-WAN-3G-MIB", "c3gHomeAddr"), ("CISCO-WAN-3G-MIB", "c3gPriHaAddrType"), ("CISCO-WAN-3G-MIB", "c3gPriHaAddr"), ("CISCO-WAN-3G-MIB", "c3gSecHaAddrType"), ("CISCO-WAN-3G-MIB", "c3gSecHaAddr"), ("CISCO-WAN-3G-MIB", "c3gCurrent1xRttRssi"), ("CISCO-WAN-3G-MIB", "c3gCurrent1xRttEcIo"), ("CISCO-WAN-3G-MIB", "c3gCurrent1xRttChannelNumber"), ("CISCO-WAN-3G-MIB", "c3gCurrent1xRttChannelState"), ("CISCO-WAN-3G-MIB", "c3gCurrentEvDoRssi"), ("CISCO-WAN-3G-MIB", "c3gCurrentEvDoEcIo"), ("CISCO-WAN-3G-MIB", "c3gCurrentEvDoChannelNumber"), ("CISCO-WAN-3G-MIB", "c3gSectorId"), ("CISCO-WAN-3G-MIB", "c3gSubnetMask"), ("CISCO-WAN-3G-MIB", "c3gHdrColorCode"), ("CISCO-WAN-3G-MIB", "c3gPnOffset"), ("CISCO-WAN-3G-MIB", "c3gRxMainGainControl"), ("CISCO-WAN-3G-MIB", "c3gRxDiversityGainControl"), ("CISCO-WAN-3G-MIB", "c3gTxTotalPower"), ("CISCO-WAN-3G-MIB", "c3gTxGainAdjust"), ("CISCO-WAN-3G-MIB", "c3gCarrierToInterferenceRatio"), ("CISCO-WAN-3G-MIB", "c3g1xRttBandClass"), ("CISCO-WAN-3G-MIB", "c3gEvDoBandClass"), ("CISCO-WAN-3G-MIB", "c3gCdmaHistory1xRttRssiPerSecond"), ("CISCO-WAN-3G-MIB", "c3gCdmaHistory1xRttRssiPerMinute"), ("CISCO-WAN-3G-MIB", "c3gCdmaHistory1xRttRssiPerHour"), ("CISCO-WAN-3G-MIB", "c3gCdmaHistoryEvDoRssiPerSecond"), ("CISCO-WAN-3G-MIB", "c3gCdmaHistoryEvDoRssiPerMinute"), ("CISCO-WAN-3G-MIB", "c3gCdmaHistoryEvDoRssiPerHour"), ("CISCO-WAN-3G-MIB", "c3gCdmaPinSecurityStatus"), ("CISCO-WAN-3G-MIB", "c3gCdmaPowerUpLockStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWan3gMIBCdmaObjectGroup = ciscoWan3gMIBCdmaObjectGroup.setStatus('current')
ciscoWan3gMIBGsmObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 661, 2, 2, 3)).setObjects(("CISCO-WAN-3G-MIB", "c3gGsmTotalByteTransmitted"), ("CISCO-WAN-3G-MIB", "c3gGsmTotalByteReceived"), ("CISCO-WAN-3G-MIB", "c3gGsmPacketSessionStatus"), ("CISCO-WAN-3G-MIB", "c3gGsmPdpType"), ("CISCO-WAN-3G-MIB", "c3gGsmPdpAddress"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoUmtsQosTrafficClass"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoUmtsQosMaxUpLinkBitRate"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoUmtsQosMaxDownLinkBitRate"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoUmtsQosGuaUpLinkBitRate"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoUmtsQosGuaDownLinkBitRate"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoUmtsQosOrder"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoUmtsQosErroneousSdu"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoUmtsQosMaxSduSize"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoUmtsQosSer"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoUmtsQosBer"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoUmtsQosDelay"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoUmtsQosPriority"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoUmtsQosSrcStatDescriptor"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoUmtsQosSignalIndication"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoGprsQosPrecedence"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoGprsQosDelay"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoGprsQosReliability"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoGprsQosPeakRate"), ("CISCO-WAN-3G-MIB", "c3gGsmNegoGprsQosMeanRate"), ("CISCO-WAN-3G-MIB", "c3gImsi"), ("CISCO-WAN-3G-MIB", "c3gImei"), ("CISCO-WAN-3G-MIB", "c3gIccId"), ("CISCO-WAN-3G-MIB", "c3gMsisdn"), ("CISCO-WAN-3G-MIB", "c3gFsn"), ("CISCO-WAN-3G-MIB", "c3gModemStatus"), ("CISCO-WAN-3G-MIB", "c3gGsmRoamingPreference"), ("CISCO-WAN-3G-MIB", "c3gGsmLac"), ("CISCO-WAN-3G-MIB", "c3gGsmCurrentServiceStatus"), ("CISCO-WAN-3G-MIB", "c3gGsmCurrentServiceError"), ("CISCO-WAN-3G-MIB", "c3gGsmCurrentService"), ("CISCO-WAN-3G-MIB", "c3gGsmPacketService"), ("CISCO-WAN-3G-MIB", "c3gGsmCurrentRoamingStatus"), ("CISCO-WAN-3G-MIB", "c3gGsmNetworkSelectionMode"), ("CISCO-WAN-3G-MIB", "c3gGsmCountry"), ("CISCO-WAN-3G-MIB", "c3gGsmNetwork"), ("CISCO-WAN-3G-MIB", "c3gGsmMcc"), ("CISCO-WAN-3G-MIB", "c3gGsmMnc"), ("CISCO-WAN-3G-MIB", "c3gGsmRac"), ("CISCO-WAN-3G-MIB", "c3gGsmCurrentCellId"), ("CISCO-WAN-3G-MIB", "c3gGsmCurrentPrimaryScramblingCode"), ("CISCO-WAN-3G-MIB", "c3gGsmPlmnSelection"), ("CISCO-WAN-3G-MIB", "c3gGsmRegPlmn"), ("CISCO-WAN-3G-MIB", "c3gGsmPlmnAbbr"), ("CISCO-WAN-3G-MIB", "c3gGsmServiceProvider"), ("CISCO-WAN-3G-MIB", "c3gGsmPdpProfileType"), ("CISCO-WAN-3G-MIB", "c3gGsmPdpProfileAddr"), ("CISCO-WAN-3G-MIB", "c3gGsmPdpProfileApn"), ("CISCO-WAN-3G-MIB", "c3gGsmPdpProfileAuthenType"), ("CISCO-WAN-3G-MIB", "c3gGsmPdpProfileUsername"), ("CISCO-WAN-3G-MIB", "c3gGsmPdpProfilePassword"), ("CISCO-WAN-3G-MIB", "c3gGsmPdpProfileRowStatus"), ("CISCO-WAN-3G-MIB", "c3gGsmReqUmtsQosTrafficClass"), ("CISCO-WAN-3G-MIB", "c3gGsmReqUmtsQosMaxUpLinkBitRate"), ("CISCO-WAN-3G-MIB", "c3gGsmReqUmtsQosMaxDownLinkBitRate"), ("CISCO-WAN-3G-MIB", "c3gGsmReqUmtsQosGuaUpLinkBitRate"), ("CISCO-WAN-3G-MIB", "c3gGsmReqUmtsQosGuaDownLinkBitRate"), ("CISCO-WAN-3G-MIB", "c3gGsmReqUmtsQosOrder"), ("CISCO-WAN-3G-MIB", "c3gGsmReqUmtsQosErroneousSdu"), ("CISCO-WAN-3G-MIB", "c3gGsmReqUmtsQosMaxSduSize"), ("CISCO-WAN-3G-MIB", "c3gGsmReqUmtsQosSer"), ("CISCO-WAN-3G-MIB", "c3gGsmReqUmtsQosBer"), ("CISCO-WAN-3G-MIB", "c3gGsmReqUmtsQosDelay"), ("CISCO-WAN-3G-MIB", "c3gGsmReqUmtsQosPriority"), ("CISCO-WAN-3G-MIB", "c3gGsmReqUmtsQosSrcStatDescriptor"), ("CISCO-WAN-3G-MIB", "c3gGsmReqUmtsQosSignalIndication"), ("CISCO-WAN-3G-MIB", "c3gGsmReqUmtsQosRowStatus"), ("CISCO-WAN-3G-MIB", "c3gGsmMinUmtsQosTrafficClass"), ("CISCO-WAN-3G-MIB", "c3gGsmMinUmtsQosMaxUpLinkBitRate"), ("CISCO-WAN-3G-MIB", "c3gGsmMinUmtsQosMaxDownLinkBitRate"), ("CISCO-WAN-3G-MIB", "c3gGsmMinUmtsQosGuaUpLinkBitRate"), ("CISCO-WAN-3G-MIB", "c3gGsmMinUmtsQosGuaDownLinkBitRate"), ("CISCO-WAN-3G-MIB", "c3gGsmMinUmtsQosOrder"), ("CISCO-WAN-3G-MIB", "c3gGsmMinUmtsQosErroneousSdu"), ("CISCO-WAN-3G-MIB", "c3gGsmMinUmtsQosMaxSduSize"), ("CISCO-WAN-3G-MIB", "c3gGsmMinUmtsQosSer"), ("CISCO-WAN-3G-MIB", "c3gGsmMinUmtsQosBer"), ("CISCO-WAN-3G-MIB", "c3gGsmMinUmtsQosDelay"), ("CISCO-WAN-3G-MIB", "c3gGsmMinUmtsQosPriority"), ("CISCO-WAN-3G-MIB", "c3gGsmMinUmtsQosSrcStatDescriptor"), ("CISCO-WAN-3G-MIB", "c3gGsmMinUmtsQosSignalIndication"), ("CISCO-WAN-3G-MIB", "c3gGsmMinUmtsQosRowStatus"), ("CISCO-WAN-3G-MIB", "c3gGsmReqGprsQosPrecedence"), ("CISCO-WAN-3G-MIB", "c3gGsmReqGprsQosDelay"), ("CISCO-WAN-3G-MIB", "c3gGsmReqGprsQosReliability"), ("CISCO-WAN-3G-MIB", "c3gGsmReqGprsQosPeakRate"), ("CISCO-WAN-3G-MIB", "c3gGsmReqGprsQosMeanRate"), ("CISCO-WAN-3G-MIB", "c3gGsmReqGprsQosRowStatus"), ("CISCO-WAN-3G-MIB", "c3gGsmMinGprsQosPrecedence"), ("CISCO-WAN-3G-MIB", "c3gGsmMinGprsQosDelay"), ("CISCO-WAN-3G-MIB", "c3gGsmMinGprsQosReliability"), ("CISCO-WAN-3G-MIB", "c3gGsmMinGprsQosPeakRate"), ("CISCO-WAN-3G-MIB", "c3gGsmMinGprsQosMeanRate"), ("CISCO-WAN-3G-MIB", "c3gGsmMinGprsQosRowStatus"), ("CISCO-WAN-3G-MIB", "c3gCurrentGsmRssi"), ("CISCO-WAN-3G-MIB", "c3gCurrentGsmEcIo"), ("CISCO-WAN-3G-MIB", "c3gGsmCurrentBand"), ("CISCO-WAN-3G-MIB", "c3gGsmChannelNumber"), ("CISCO-WAN-3G-MIB", "c3gGsmNumberOfNearbyCell"), ("CISCO-WAN-3G-MIB", "c3gGsmNearbyCellPrimaryScramblingCode"), ("CISCO-WAN-3G-MIB", "c3gGsmNearbyCellRscp"), ("CISCO-WAN-3G-MIB", "c3gGsmNearbyCellEcIoMeasurement"), ("CISCO-WAN-3G-MIB", "c3gGsmHistoryRssiPerSecond"), ("CISCO-WAN-3G-MIB", "c3gGsmHistoryRssiPerMinute"), ("CISCO-WAN-3G-MIB", "c3gGsmHistoryRssiPerHour"), ("CISCO-WAN-3G-MIB", "c3gGsmChv1"), ("CISCO-WAN-3G-MIB", "c3gGsmSimStatus"), ("CISCO-WAN-3G-MIB", "c3gGsmSimUserOperationRequired"), ("CISCO-WAN-3G-MIB", "c3gGsmNumberOfRetriesRemaining"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWan3gMIBGsmObjectGroup = ciscoWan3gMIBGsmObjectGroup.setStatus('current')
ciscoWan3gMIBNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 661, 2, 2, 4)).setObjects(("CISCO-WAN-3G-MIB", "c3gModemUpNotif"), ("CISCO-WAN-3G-MIB", "c3gModemDownNotif"), ("CISCO-WAN-3G-MIB", "c3gServiceChangedNotif"), ("CISCO-WAN-3G-MIB", "c3gNetworkChangedNotif"), ("CISCO-WAN-3G-MIB", "c3gConnectionStatusChangedNotif"), ("CISCO-WAN-3G-MIB", "c3gRssiOnsetNotif"), ("CISCO-WAN-3G-MIB", "c3gEcIoOnsetNotif"), ("CISCO-WAN-3G-MIB", "c3gRssiAbateNotif"), ("CISCO-WAN-3G-MIB", "c3gEcIoAbateNotif"), ("CISCO-WAN-3G-MIB", "c3gModemTemperOnsetNotif"), ("CISCO-WAN-3G-MIB", "c3gModemTemperAbateNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWan3gMIBNotificationGroup = ciscoWan3gMIBNotificationGroup.setStatus('deprecated')
ciscoWan3gMIBLbsObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 661, 2, 2, 5)).setObjects(("CISCO-WAN-3G-MIB", "c3gLbsModeSelected"), ("CISCO-WAN-3G-MIB", "c3gLbsState"), ("CISCO-WAN-3G-MIB", "c3gLbsLocFixError"), ("CISCO-WAN-3G-MIB", "c3gLbsLatitude"), ("CISCO-WAN-3G-MIB", "c3gLbsLongitude"), ("CISCO-WAN-3G-MIB", "c3gLbsTimeStamp"), ("CISCO-WAN-3G-MIB", "c3gLbsLocUncertaintyAngle"), ("CISCO-WAN-3G-MIB", "c3gLbsLocUncertaintyA"), ("CISCO-WAN-3G-MIB", "c3gLbsLocUncertaintyPos"), ("CISCO-WAN-3G-MIB", "c3gLbsFixtype"), ("CISCO-WAN-3G-MIB", "c3gLbsHeightValid"), ("CISCO-WAN-3G-MIB", "c3gLbsHeight"), ("CISCO-WAN-3G-MIB", "c3gLbsLocUncertaintyVertical"), ("CISCO-WAN-3G-MIB", "c3gLbsVelocityValid"), ("CISCO-WAN-3G-MIB", "c3gLbsHeading"), ("CISCO-WAN-3G-MIB", "c3gLbsVelocityHorizontal"), ("CISCO-WAN-3G-MIB", "c3gLbsVelocityVertical"), ("CISCO-WAN-3G-MIB", "c3gLbsHepe"), ("CISCO-WAN-3G-MIB", "c3gLbsNumSatellites"), ("CISCO-WAN-3G-MIB", "c3gWanLbsSatelliteNumber"), ("CISCO-WAN-3G-MIB", "c3gWanLbsSatelliteElevation"), ("CISCO-WAN-3G-MIB", "c3gWanLbsSatelliteAzimuth"), ("CISCO-WAN-3G-MIB", "c3gWanLbsSatelliteUsed"), ("CISCO-WAN-3G-MIB", "c3gWanLbsSatelliteInfoSignalNoiseRatio"), ("CISCO-WAN-3G-MIB", "c3gWanLbsSatelliteInfoRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWan3gMIBLbsObjectGroup = ciscoWan3gMIBLbsObjectGroup.setStatus('current')
ciscoWan3gMIBSmsObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 661, 2, 2, 6)).setObjects(("CISCO-WAN-3G-MIB", "c3gSmsServiceAvailable"), ("CISCO-WAN-3G-MIB", "c3gSmsOutSmsCount"), ("CISCO-WAN-3G-MIB", "c3gSmsOutSmsErrorCount"), ("CISCO-WAN-3G-MIB", "c3gSmsInSmsStorageUsed"), ("CISCO-WAN-3G-MIB", "c3gSmsInSmsStorageUnused"), ("CISCO-WAN-3G-MIB", "c3gSmsInSmsArchiveCount"), ("CISCO-WAN-3G-MIB", "c3gSmsInSmsArchiveErrorCount"), ("CISCO-WAN-3G-MIB", "c3gSmsInSmsArchived"), ("CISCO-WAN-3G-MIB", "c3gSmsArchiveUrl"), ("CISCO-WAN-3G-MIB", "c3gSmsOutSmsStatus"), ("CISCO-WAN-3G-MIB", "c3gSmsInSmsCount"), ("CISCO-WAN-3G-MIB", "c3gSmsInSmsDeleted"), ("CISCO-WAN-3G-MIB", "c3gSmsInSmsStorageMax"), ("CISCO-WAN-3G-MIB", "c3gSmsInSmsCallBack"), ("CISCO-WAN-3G-MIB", "c3gSmsOutSmsPendingCount"), ("CISCO-WAN-3G-MIB", "c3gSmsOutSmsArchiveCount"), ("CISCO-WAN-3G-MIB", "c3gSmsOutSmsArchiveErrorCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWan3gMIBSmsObjectGroup = ciscoWan3gMIBSmsObjectGroup.setStatus('current')
ciscoWan3gMIBNotificationGroupRev1 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 661, 2, 2, 7)).setObjects(("CISCO-WAN-3G-MIB", "c3gModemUpNotif"), ("CISCO-WAN-3G-MIB", "c3gModemDownNotif"), ("CISCO-WAN-3G-MIB", "c3gServiceChangedNotif"), ("CISCO-WAN-3G-MIB", "c3gNetworkChangedNotif"), ("CISCO-WAN-3G-MIB", "c3gConnectionStatusChangedNotif"), ("CISCO-WAN-3G-MIB", "c3gRssiOnsetNotif"), ("CISCO-WAN-3G-MIB", "c3gEcIoOnsetNotif"), ("CISCO-WAN-3G-MIB", "c3gRssiAbateNotif"), ("CISCO-WAN-3G-MIB", "c3gEcIoAbateNotif"), ("CISCO-WAN-3G-MIB", "c3gModemTemperOnsetNotif"), ("CISCO-WAN-3G-MIB", "c3gModemTemperAbateNotif"), ("CISCO-WAN-3G-MIB", "c3gModemTemperOnsetRecoveryNotif"), ("CISCO-WAN-3G-MIB", "c3gModemTemperAbateRecoveryNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWan3gMIBNotificationGroupRev1 = ciscoWan3gMIBNotificationGroupRev1.setStatus('current')
mibBuilder.exportSymbols("CISCO-WAN-3G-MIB", c3gTxGainAdjust=c3gTxGainAdjust, c3gAuthStatus=c3gAuthStatus, c3gCdmaLastCallDisconnReason=c3gCdmaLastCallDisconnReason, c3gGsmRegPlmn=c3gGsmRegPlmn, c3gGsmCurrentPrimaryScramblingCode=c3gGsmCurrentPrimaryScramblingCode, c3gGsmReqUmtsQosMaxSduSize=c3gGsmReqUmtsQosMaxSduSize, ciscoWan3gMIBConform=ciscoWan3gMIBConform, c3gGsmMinUmtsQosMaxUpLinkBitRate=c3gGsmMinUmtsQosMaxUpLinkBitRate, c3gCurrentActiveDataProfile=c3gCurrentActiveDataProfile, c3gModemTemperOnsetNotifEnabled=c3gModemTemperOnsetNotifEnabled, c3gSmsInSmsStorageMax=c3gSmsInSmsStorageMax, c3gCdmaCurrentServiceStatus=c3gCdmaCurrentServiceStatus, C3gServiceCapability=C3gServiceCapability, c3gCdmaProfileEntry=c3gCdmaProfileEntry, c3gHdrRri=c3gHdrRri, c3gModemUpNotifEnabled=c3gModemUpNotifEnabled, c3gGsmNegoUmtsQosSer=c3gGsmNegoUmtsQosSer, c3gGsmNegoGprsQosReliability=c3gGsmNegoGprsQosReliability, c3gRoamingStatus=c3gRoamingStatus, c3gNotifRadioService=c3gNotifRadioService, c3gSipUsername=c3gSipUsername, c3gPrlVersion=c3gPrlVersion, C3gUmtsQosSer=C3gUmtsQosSer, c3gCdmaEvDoRadioEntry=c3gCdmaEvDoRadioEntry, c3gGsmReqUmtsQosMaxDownLinkBitRate=c3gGsmReqUmtsQosMaxDownLinkBitRate, c3gCdmaNetworkEntry=c3gCdmaNetworkEntry, c3gGsmRadioTable=c3gGsmRadioTable, c3gMnAaaSs=c3gMnAaaSs, c3gWanLbsSatelliteInfoEntry=c3gWanLbsSatelliteInfoEntry, c3gGsmMinUmtsQosOrder=c3gGsmMinUmtsQosOrder, c3gWanLbsSatelliteAzimuth=c3gWanLbsSatelliteAzimuth, c3gImsi=c3gImsi, c3gHdrDrcCover=c3gHdrDrcCover, c3gGsmNearbyCellEcIoMeasurement=c3gGsmNearbyCellEcIoMeasurement, c3gGsmCurrentCellId=c3gGsmCurrentCellId, c3gSmsCommonTable=c3gSmsCommonTable, c3gGsmMinUmtsQosMaxDownLinkBitRate=c3gGsmMinUmtsQosMaxDownLinkBitRate, c3gRssiAbateNotifFlag=c3gRssiAbateNotifFlag, c3gHdrColorCode=c3gHdrColorCode, c3gMnHaSpi=c3gMnHaSpi, c3gGsmReqGprsQosPrecedence=c3gGsmReqGprsQosPrecedence, c3gSmsInSmsArchiveCount=c3gSmsInSmsArchiveCount, c3g1xRttBandClass=c3g1xRttBandClass, c3gLbsVelocityHorizontal=c3gLbsVelocityHorizontal, c3gGsmReqUmtsQosDelay=c3gGsmReqUmtsQosDelay, c3gGsmCountry=c3gGsmCountry, c3gGsmNetwork=c3gGsmNetwork, c3gHdrAtState=c3gHdrAtState, c3gGsmPdpType=c3gGsmPdpType, c3gSmsOutSmsCount=c3gSmsOutSmsCount, c3gGsmMinUmtsQosDelay=c3gGsmMinUmtsQosDelay, c3gGsmMinGprsQosRowStatus=c3gGsmMinGprsQosRowStatus, c3gGsmReqUmtsQosGuaDownLinkBitRate=c3gGsmReqUmtsQosGuaDownLinkBitRate, c3gGsmCurrentBand=c3gGsmCurrentBand, C3gUmtsQosTrafficClass=C3gUmtsQosTrafficClass, c3gCdmaCurrentCallDuration=c3gCdmaCurrentCallDuration, c3gCdmaHistory1xRttRssiPerHour=c3gCdmaHistory1xRttRssiPerHour, c3gCurrent1xRttChannelNumber=c3gCurrent1xRttChannelNumber, c3gCdmaHistory1xRttRssiPerMinute=c3gCdmaHistory1xRttRssiPerMinute, c3gCurrent1xRttRssi=c3gCurrent1xRttRssi, c3gGsmChv1=c3gGsmChv1, c3gWanLbsSatelliteUsed=c3gWanLbsSatelliteUsed, c3gTxTotalPower=c3gTxTotalPower, c3gCdmaCurrentReceived=c3gCdmaCurrentReceived, c3gGsmNegoGprsQosPeakRate=c3gGsmNegoGprsQosPeakRate, c3gGsmPdpProfileAuthenType=c3gGsmPdpProfileAuthenType, c3gModemTemperOnsetRecoveryNotif=c3gModemTemperOnsetRecoveryNotif, c3gGsmReqUmtsQosBer=c3gGsmReqUmtsQosBer, c3gGsmMcc=c3gGsmMcc, c3gCurrent1xRttEcIo=c3gCurrent1xRttEcIo, c3gGsmReqUmtsQosTrafficClass=c3gGsmReqUmtsQosTrafficClass, c3gCdmaCurrentCallStatus=c3gCdmaCurrentCallStatus, c3gSubnetMask=c3gSubnetMask, c3gRati=c3gRati, c3gCurrentCallSetupMode=c3gCurrentCallSetupMode, c3gLbsLocUncertaintyVertical=c3gLbsLocUncertaintyVertical, c3gLbsHepe=c3gLbsHepe, c3gPriHaAddrType=c3gPriHaAddrType, c3gGsmReqGprsQosEntry=c3gGsmReqGprsQosEntry, c3gSmsInSmsStorageUnused=c3gSmsInSmsStorageUnused, c3gGsmMinUmtsQosEntry=c3gGsmMinUmtsQosEntry, c3gWanLbsCommon=c3gWanLbsCommon, c3gGsmSimStatus=c3gGsmSimStatus, c3gLbsVelocityValid=c3gLbsVelocityValid, c3gGsmMinUmtsQosGuaDownLinkBitRate=c3gGsmMinUmtsQosGuaDownLinkBitRate, c3gGsmSecurityEntry=c3gGsmSecurityEntry, c3gNai=c3gNai, c3gCdmaEvDoBandClassEntry=c3gCdmaEvDoBandClassEntry, ciscoWan3gMIBCommonObjectGroup=ciscoWan3gMIBCommonObjectGroup, c3gGsmTotalByteTransmitted=c3gGsmTotalByteTransmitted, c3gCdmaLastConnError=c3gCdmaLastConnError, c3gCdmaSessionTable=c3gCdmaSessionTable, c3gGsmHistoryRssiPerHour=c3gGsmHistoryRssiPerHour, c3gGsmIdentityTable=c3gGsmIdentityTable, c3gRssiAbateNotif=c3gRssiAbateNotif, c3gCdmaIdentityTable=c3gCdmaIdentityTable, c3gCurrentSystemTime=c3gCurrentSystemTime, c3gHdrDdtmPreference=c3gHdrDdtmPreference, c3gEsn=c3gEsn, c3gModemStatus=c3gModemStatus, c3gEcIoOnsetNotifThreshold=c3gEcIoOnsetNotifThreshold, c3gCdmaHistoryEvDoRssiPerHour=c3gCdmaHistoryEvDoRssiPerHour, c3gEcIoAbateNotifFlag=c3gEcIoAbateNotifFlag, c3gLbsModeSelected=c3gLbsModeSelected, c3gGsmNegoGprsQosDelay=c3gGsmNegoGprsQosDelay, c3gModemTemperAbateRecoveryNotif=c3gModemTemperAbateRecoveryNotif, C3gUmtsQosSignalIndication=C3gUmtsQosSignalIndication, c3gWanLbs=c3gWanLbs, c3gGsmIdentityEntry=c3gGsmIdentityEntry, c3gGsmMinUmtsQosErroneousSdu=c3gGsmMinUmtsQosErroneousSdu, c3gCdmaProfileCommonTable=c3gCdmaProfileCommonTable, C3gGprsQosReliability=C3gGprsQosReliability, c3gWanCommonTable=c3gWanCommonTable, c3gCdmaPowerUpLockStatus=c3gCdmaPowerUpLockStatus, c3gRssiOnsetNotifThreshold=c3gRssiOnsetNotifThreshold, c3gGsmNegoGprsQosEntry=c3gGsmNegoGprsQosEntry, c3gCdmaSessionEntry=c3gCdmaSessionEntry, c3gGsmReqUmtsQosOrder=c3gGsmReqUmtsQosOrder, c3gGsmNetworkSelectionMode=c3gGsmNetworkSelectionMode, c3gGsmReqUmtsQosTable=c3gGsmReqUmtsQosTable, c3gGsmCurrentServiceError=c3gGsmCurrentServiceError, c3gSmsOutSmsArchiveCount=c3gSmsOutSmsArchiveCount, c3gCdmaSecurity=c3gCdmaSecurity, c3gGsmCurrentService=c3gGsmCurrentService, c3gCurrentSid=c3gCurrentSid, c3gGsmNumberOfNearbyCell=c3gGsmNumberOfNearbyCell, c3gGsmNegoUmtsQosSignalIndication=c3gGsmNegoUmtsQosSignalIndication, c3gSmsInSmsStorageUsed=c3gSmsInSmsStorageUsed, c3gSmsOutSmsErrorCount=c3gSmsOutSmsErrorCount, c3gSmsInSmsCallBack=c3gSmsInSmsCallBack, C3gGprsQosDelay=C3gGprsQosDelay, ciscoWan3gMIBComplianceRev1=ciscoWan3gMIBComplianceRev1, ciscoWan3gMIBNotificationGroup=ciscoWan3gMIBNotificationGroup, c3gEvDoBandClass=c3gEvDoBandClass, c3gWanSmsCommon=c3gWanSmsCommon, c3gFsn=c3gFsn, c3gBandClassIndex=c3gBandClassIndex, c3gCdma1xRttBandClassTable=c3gCdma1xRttBandClassTable, c3gHdrSessionStart=c3gHdrSessionStart, c3gNetworkChangedNotif=c3gNetworkChangedNotif, c3gGsmPdpProfileIndex=c3gGsmPdpProfileIndex, c3gSmsOutSmsPendingCount=c3gSmsOutSmsPendingCount, c3gCurrentGsmEcIo=c3gCurrentGsmEcIo, c3gGsmPdpProfileAddr=c3gGsmPdpProfileAddr, c3gCdmaHybridModePreference=c3gCdmaHybridModePreference, c3gGsmPacketSessionTable=c3gGsmPacketSessionTable, c3gLbsHeading=c3gLbsHeading, c3gCdma1xRttBandClassEntry=c3gCdma1xRttBandClassEntry, c3gGsmNumberOfRetriesRemaining=c3gGsmNumberOfRetriesRemaining, c3gWanCdma=c3gWanCdma, c3gGsmNegoUmtsQosTable=c3gGsmNegoUmtsQosTable, c3gGsmNegoUmtsQosPriority=c3gGsmNegoUmtsQosPriority, c3gSmsOutSmsStatus=c3gSmsOutSmsStatus, ciscoWan3gMIB=ciscoWan3gMIB, c3gGsmSimUserOperationRequired=c3gGsmSimUserOperationRequired, C3gUmtsQosLinkBitRate=C3gUmtsQosLinkBitRate, c3gCdma1xRttRadioEntry=c3gCdma1xRttRadioEntry, ciscoWan3gMIBSmsObjectGroup=ciscoWan3gMIBSmsObjectGroup, C3gRssi=C3gRssi, c3gCdmaPinSecurityStatus=c3gCdmaPinSecurityStatus, ciscoWan3gMIBCompliance1Rev1=ciscoWan3gMIBCompliance1Rev1, c3gEcIoOnsetNotif=c3gEcIoOnsetNotif, c3gCapability=c3gCapability, c3gModemTemperAbateNotifThreshold=c3gModemTemperAbateNotifThreshold, c3gNotifRssi=c3gNotifRssi, c3gGsmReqUmtsQosSrcStatDescriptor=c3gGsmReqUmtsQosSrcStatDescriptor, c3gWanLbsSatelliteNumber=c3gWanLbsSatelliteNumber, c3gGsmReqUmtsQosSignalIndication=c3gGsmReqUmtsQosSignalIndication, c3gWanLbsSatelliteInfoTable=c3gWanLbsSatelliteInfoTable, c3gGsmNegoUmtsQosDelay=c3gGsmNegoUmtsQosDelay, c3gHdrSessionState=c3gHdrSessionState, c3gEcIoOnsetNotifFlag=c3gEcIoOnsetNotifFlag, ciscoWan3gMIBCompliance=ciscoWan3gMIBCompliance, c3gCurrentGsmRssi=c3gCurrentGsmRssi, c3gModemTemperAbateNotif=c3gModemTemperAbateNotif, c3gConnectionStatus=c3gConnectionStatus, c3gGsmMinGprsQosTable=c3gGsmMinGprsQosTable, c3gGsmPdpProfileUsername=c3gGsmPdpProfileUsername, c3gGsmNegoUmtsQosOrder=c3gGsmNegoUmtsQosOrder, c3gPnOffset=c3gPnOffset, c3gGsmNetworkTable=c3gGsmNetworkTable, c3gGsmPdpProfileEntry=c3gGsmPdpProfileEntry, c3gSmsInSmsCount=c3gSmsInSmsCount, c3gConnectionStatusChangedNotifFlag=c3gConnectionStatusChangedNotifFlag, C3gGprsQosPeakRate=C3gGprsQosPeakRate, ciscoWan3gMIBCompliance1=ciscoWan3gMIBCompliance1, c3gRssiOnsetNotifFlag=c3gRssiOnsetNotifFlag, C3gGprsQosMeanRate=C3gGprsQosMeanRate, c3gCdmaNetworkTable=c3gCdmaNetworkTable, ciscoWan3gMIBNotificationGroupRev1=ciscoWan3gMIBNotificationGroupRev1, c3gModemDownNotifEnabled=c3gModemDownNotifEnabled, c3gServiceChangedNotifEnabled=c3gServiceChangedNotifEnabled, c3gGsmHistoryRssiPerSecond=c3gGsmHistoryRssiPerSecond, c3gModemState=c3gModemState, c3gGsmReqGprsQosReliability=c3gGsmReqGprsQosReliability, c3gWanLbsSatelliteInfo=c3gWanLbsSatelliteInfo, c3gLbsVelocityVertical=c3gLbsVelocityVertical, c3gLbsLocUncertaintyPos=c3gLbsLocUncertaintyPos, c3gLbsLongitude=c3gLbsLongitude, c3gSmsCommonEntry=c3gSmsCommonEntry, C3gEcIo=C3gEcIo, c3gPreviousServiceType=c3gPreviousServiceType, c3gCdmaTotalTransmitted=c3gCdmaTotalTransmitted, c3gCdmaHistoryEvDoRssiPerMinute=c3gCdmaHistoryEvDoRssiPerMinute, c3gGsmCurrentRoamingStatus=c3gGsmCurrentRoamingStatus, c3gGsmReqGprsQosPeakRate=c3gGsmReqGprsQosPeakRate, c3gGsmNegoUmtsQosMaxUpLinkBitRate=c3gGsmNegoUmtsQosMaxUpLinkBitRate, c3gCurrentEvDoChannelNumber=c3gCurrentEvDoChannelNumber, c3gGsmNegoUmtsQosSrcStatDescriptor=c3gGsmNegoUmtsQosSrcStatDescriptor, C3gUmtsQosBer=C3gUmtsQosBer, c3gSipPassword=c3gSipPassword, c3gGsmReqUmtsQosErroneousSdu=c3gGsmReqUmtsQosErroneousSdu, c3gGsmNegoGprsQosPrecedence=c3gGsmNegoGprsQosPrecedence, c3gStandard=c3gStandard, c3gNotifEcIo=c3gNotifEcIo, c3gCdmaProfileIndex=c3gCdmaProfileIndex, c3gConnectionStatusChangedNotif=c3gConnectionStatusChangedNotif, c3gNumberOfDataProfileConfigurable=c3gNumberOfDataProfileConfigurable, C3gTemperature=C3gTemperature, c3gWanLbsCommonTable=c3gWanLbsCommonTable, c3gGsmReqUmtsQosMaxUpLinkBitRate=c3gGsmReqUmtsQosMaxUpLinkBitRate, c3gGsmReqGprsQosRowStatus=c3gGsmReqGprsQosRowStatus, c3gLbsLocUncertaintyA=c3gLbsLocUncertaintyA, c3gGsmReqGprsQosMeanRate=c3gGsmReqGprsQosMeanRate, c3gGsmPdpProfileType=c3gGsmPdpProfileType, c3gCdmaHistoryTable=c3gCdmaHistoryTable, c3gGsmPdpProfileApn=c3gGsmPdpProfileApn, c3gHomeAddrType=c3gHomeAddrType, c3gCdmaHistoryEntry=c3gCdmaHistoryEntry, c3gGsmNearbyCellTable=c3gGsmNearbyCellTable, ciscoWan3gMIBCdmaObjectGroup=ciscoWan3gMIBCdmaObjectGroup, c3gGsmSecurity=c3gGsmSecurity, c3gCdmaConnectionTable=c3gCdmaConnectionTable, C3gGprsQosPrecedence=C3gGprsQosPrecedence, c3gGsmTotalByteReceived=c3gGsmTotalByteReceived, c3gWanLbsSatelliteInfoSignalNoiseRatio=c3gWanLbsSatelliteInfoSignalNoiseRatio, ciscoWan3gMIBLbsObjectGroup=ciscoWan3gMIBLbsObjectGroup, c3gGsmReqUmtsQosSer=c3gGsmReqUmtsQosSer, c3gGsmNegoUmtsQosGuaUpLinkBitRate=c3gGsmNegoUmtsQosGuaUpLinkBitRate, c3gCdmaCurrentRoamingStatus=c3gCdmaCurrentRoamingStatus, c3gLbsLatitude=c3gLbsLatitude, c3gSmsServiceAvailable=c3gSmsServiceAvailable, c3gGsmNearbyCellEntry=c3gGsmNearbyCellEntry, c3gCurrentIdleDigitalMode=c3gCurrentIdleDigitalMode, c3gModemTemperOnsetNotif=c3gModemTemperOnsetNotif, c3gGsmNegoUmtsQosErroneousSdu=c3gGsmNegoUmtsQosErroneousSdu, c3gCarrierToInterferenceRatio=c3gCarrierToInterferenceRatio, c3gCdmaHistory1xRttRssiPerSecond=c3gCdmaHistory1xRttRssiPerSecond, c3gGsmPlmnSelection=c3gGsmPlmnSelection, c3gGsmNegoUmtsQosGuaDownLinkBitRate=c3gGsmNegoUmtsQosGuaDownLinkBitRate, c3gCurrentEvDoRssi=c3gCurrentEvDoRssi, c3gLbsLocUncertaintyAngle=c3gLbsLocUncertaintyAngle, ciscoWan3gMIBGroups=ciscoWan3gMIBGroups, c3gGsmReqGprsQosTable=c3gGsmReqGprsQosTable)
mibBuilder.exportSymbols("CISCO-WAN-3G-MIB", c3gRxDiversityGainControl=c3gRxDiversityGainControl, c3gMnAaaSpi=c3gMnAaaSpi, c3gModemTemperAbateNotifEnabled=c3gModemTemperAbateNotifEnabled, C3gUmtsQosPriority=C3gUmtsQosPriority, c3gGpsState=c3gGpsState, c3gCdmaProfileTable=c3gCdmaProfileTable, c3gGsmNegoUmtsQosTrafficClass=c3gGsmNegoUmtsQosTrafficClass, c3gWanLbsCommonEntry=c3gWanLbsCommonEntry, ciscoWan3gMIBNotifs=ciscoWan3gMIBNotifs, c3gMsl=c3gMsl, c3gSecHaAddrType=c3gSecHaAddrType, c3gGsmNetworkEntry=c3gGsmNetworkEntry, c3gGsmPdpAddress=c3gGsmPdpAddress, c3gPriHaAddr=c3gPriHaAddr, c3gModemTemperature=c3gModemTemperature, c3gReverseTunnelPreference=c3gReverseTunnelPreference, c3gEcIoAbateNotif=c3gEcIoAbateNotif, c3gGsmMinGprsQosReliability=c3gGsmMinGprsQosReliability, c3gCurrent1xRttChannelState=c3gCurrent1xRttChannelState, c3gRssiAbateNotifThreshold=c3gRssiAbateNotifThreshold, c3gGsmNegoUmtsQosBer=c3gGsmNegoUmtsQosBer, c3gLbsHeightValid=c3gLbsHeightValid, c3gGsmMinGprsQosPrecedence=c3gGsmMinGprsQosPrecedence, c3gGsmMinUmtsQosTrafficClass=c3gGsmMinUmtsQosTrafficClass, c3gCdmaProfileCommonEntry=c3gCdmaProfileCommonEntry, C3gPdpType=C3gPdpType, c3gGsmPdpProfile=c3gGsmPdpProfile, c3gGsmHistoryTable=c3gGsmHistoryTable, c3gGsmHistoryEntry=c3gGsmHistoryEntry, c3gCdmaRadio=c3gCdmaRadio, c3gGsmMinUmtsQosSignalIndication=c3gGsmMinUmtsQosSignalIndication, PYSNMP_MODULE_ID=ciscoWan3gMIB, c3gWanSms=c3gWanSms, c3gSmsOutSmsArchiveErrorCount=c3gSmsOutSmsArchiveErrorCount, c3gColorCode=c3gColorCode, c3gServingBaseStationLongitude=c3gServingBaseStationLongitude, c3gGsmReqUmtsQosRowStatus=c3gGsmReqUmtsQosRowStatus, c3gServiceChangedNotif=c3gServiceChangedNotif, c3gGsmSecurityTable=c3gGsmSecurityTable, c3gGsmNegoUmtsQosMaxSduSize=c3gGsmNegoUmtsQosMaxSduSize, c3gCdmaHistoryEvDoRssiPerSecond=c3gCdmaHistoryEvDoRssiPerSecond, c3gLbsLocFixError=c3gLbsLocFixError, c3gGsmHistoryRssiPerMinute=c3gGsmHistoryRssiPerMinute, c3gGsmReqGprsQosDelay=c3gGsmReqGprsQosDelay, c3gCdmaTotalCallDuration=c3gCdmaTotalCallDuration, c3gGsmNegoGprsQosMeanRate=c3gGsmNegoGprsQosMeanRate, c3gWanGsm=c3gWanGsm, c3gGsmPdpProfilePassword=c3gGsmPdpProfilePassword, c3gCdma1xRttRadioTable=c3gCdma1xRttRadioTable, c3gEcIoAbateNotifThreshold=c3gEcIoAbateNotifThreshold, c3gCdmaTotalReceived=c3gCdmaTotalReceived, c3gGsmRadioEntry=c3gGsmRadioEntry, c3gGsmPacketService=c3gGsmPacketService, c3gGsmMinUmtsQosTable=c3gGsmMinUmtsQosTable, c3gMdn=c3gMdn, c3gGsmPdpProfileRowStatus=c3gGsmPdpProfileRowStatus, c3gGsmMinUmtsQosSer=c3gGsmMinUmtsQosSer, c3gGsmMinUmtsQosMaxSduSize=c3gGsmMinUmtsQosMaxSduSize, c3gGsmPacketSessionEntry=c3gGsmPacketSessionEntry, c3gCurrentServiceType=c3gCurrentServiceType, ciscoWan3gMIBObjects=ciscoWan3gMIBObjects, c3gGsmMinUmtsQosPriority=c3gGsmMinUmtsQosPriority, c3gSmsInSmsArchived=c3gSmsInSmsArchived, C3gUmtsQosSrcStatDescriptor=C3gUmtsQosSrcStatDescriptor, c3gGsmRadio=c3gGsmRadio, c3gModemActivationStatus=c3gModemActivationStatus, c3gLbsNumSatellites=c3gLbsNumSatellites, c3gGsmReqUmtsQosPriority=c3gGsmReqUmtsQosPriority, c3gGsmPacketSessionStatus=c3gGsmPacketSessionStatus, c3gCdmaSecurityEntry=c3gCdmaSecurityEntry, c3gGsmNearbyCellRscp=c3gGsmNearbyCellRscp, c3gModemUpNotif=c3gModemUpNotif, c3gGsmLac=c3gGsmLac, c3gSmsArchiveUrl=c3gSmsArchiveUrl, c3gGsmMinGprsQosEntry=c3gGsmMinGprsQosEntry, c3gSmsInSmsDeleted=c3gSmsInSmsDeleted, c3gGsmNegoUmtsQosEntry=c3gGsmNegoUmtsQosEntry, c3gGsmNearbyCellIndex=c3gGsmNearbyCellIndex, c3gModemDownNotif=c3gModemDownNotif, c3gNetworkChangedNotifEnabled=c3gNetworkChangedNotifEnabled, c3gImei=c3gImei, c3gGsmNearbyCellPrimaryScramblingCode=c3gGsmNearbyCellPrimaryScramblingCode, c3gGsmPdpProfileTable=c3gGsmPdpProfileTable, c3gGsmMinUmtsQosRowStatus=c3gGsmMinUmtsQosRowStatus, c3gCdmaSecurityTable=c3gCdmaSecurityTable, c3gGsmRac=c3gGsmRac, C3gUmtsQosOrder=C3gUmtsQosOrder, c3gMnHaSs=c3gMnHaSs, c3gGsmMinGprsQosDelay=c3gGsmMinGprsQosDelay, c3gCdmaIdentityEntry=c3gCdmaIdentityEntry, c3gHomeAddr=c3gHomeAddr, c3gCdmaConnectionEntry=c3gCdmaConnectionEntry, ciscoWan3gMIBGsmObjectGroup=ciscoWan3gMIBGsmObjectGroup, c3gSmsInSmsArchiveErrorCount=c3gSmsInSmsArchiveErrorCount, c3gWanCommonEntry=c3gWanCommonEntry, c3gGsmPlmnAbbr=c3gGsmPlmnAbbr, c3gWanLbsSatelliteInfoRowStatus=c3gWanLbsSatelliteInfoRowStatus, c3gHdrSessionEnd=c3gHdrSessionEnd, c3gAaaPassword=c3gAaaPassword, c3gCdmaEvDoBandClassTable=c3gCdmaEvDoBandClassTable, c3gRxMainGainControl=c3gRxMainGainControl, c3gCurrentNid=c3gCurrentNid, c3gModemTemperOnsetNotifThreshold=c3gModemTemperOnsetNotifThreshold, c3gGsmCurrentServiceStatus=c3gGsmCurrentServiceStatus, c3gWanLbsSatelliteInfoIndex=c3gWanLbsSatelliteInfoIndex, c3gHdrDrc=c3gHdrDrc, c3gSectorId=c3gSectorId, c3gGsmMinGprsQosPeakRate=c3gGsmMinGprsQosPeakRate, c3gHdrSessionDuration=c3gHdrSessionDuration, c3gCurrentEvDoEcIo=c3gCurrentEvDoEcIo, c3gGsmMinUmtsQosSrcStatDescriptor=c3gGsmMinUmtsQosSrcStatDescriptor, c3gLbsTimeStamp=c3gLbsTimeStamp, c3gServingBaseStationLatitude=c3gServingBaseStationLatitude, c3gLbsState=c3gLbsState, c3gCdmaRoamingPreference=c3gCdmaRoamingPreference, c3gGsmMnc=c3gGsmMnc, c3gAccountActivationDate=c3gAccountActivationDate, c3gMsisdn=c3gMsisdn, c3gLbsFixtype=c3gLbsFixtype, c3gGsmReqUmtsQosEntry=c3gGsmReqUmtsQosEntry, c3gOutgoingCallNumber=c3gOutgoingCallNumber, c3gLbsHeight=c3gLbsHeight, c3gUati=c3gUati, c3gCdmaCurrentCallType=c3gCdmaCurrentCallType, C3gUmtsQosErroneousSdu=C3gUmtsQosErroneousSdu, c3gCdmaProfile=c3gCdmaProfile, c3gGsmMinGprsQosMeanRate=c3gGsmMinGprsQosMeanRate, c3gRssiOnsetNotif=c3gRssiOnsetNotif, c3gGsmMinUmtsQosBer=c3gGsmMinUmtsQosBer, ciscoWan3gMIBCompliances=ciscoWan3gMIBCompliances, c3gIccId=c3gIccId, c3gCdmaEvDoRadioTable=c3gCdmaEvDoRadioTable, c3gCdmaCurrentTransmitted=c3gCdmaCurrentTransmitted, c3gWanLbsSatelliteElevation=c3gWanLbsSatelliteElevation, c3gMsid=c3gMsid, c3gGsmNegoGprsQosTable=c3gGsmNegoGprsQosTable, c3gGsmNegoUmtsQosMaxDownLinkBitRate=c3gGsmNegoUmtsQosMaxDownLinkBitRate, c3gGsmChannelNumber=c3gGsmChannelNumber, c3gMobileIpErrorCode=c3gMobileIpErrorCode, c3gModemReset=c3gModemReset, c3gGsmMinUmtsQosGuaUpLinkBitRate=c3gGsmMinUmtsQosGuaUpLinkBitRate, c3gGsmRoamingPreference=c3gGsmRoamingPreference, c3gGsmReqUmtsQosGuaUpLinkBitRate=c3gGsmReqUmtsQosGuaUpLinkBitRate, c3gSecHaAddr=c3gSecHaAddr, c3gGsmServiceProvider=c3gGsmServiceProvider)
