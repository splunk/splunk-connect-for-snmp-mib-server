#
# PySNMP MIB module BIANCA-BRICK-HDSL2SHDSL2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BIANCA-BRICK-HDSL2SHDSL2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:21:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
DisplayString, = mibBuilder.importSymbols("RFC1158-MIB", "DisplayString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Counter64, ModuleIdentity, MibIdentifier, TimeTicks, iso, Integer32, Unsigned32, ObjectIdentity, Bits, Gauge32, IpAddress, Counter32, NotificationType, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter64", "ModuleIdentity", "MibIdentifier", "TimeTicks", "iso", "Integer32", "Unsigned32", "ObjectIdentity", "Bits", "Gauge32", "IpAddress", "Counter32", "NotificationType", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
bintec = MibIdentifier((1, 3, 6, 1, 4, 1, 272))
bibo = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4))
hdsl2shdsl = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 35))
hdsl2ShdslLineMib = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 35, 1))
hdsl2ShdslMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1))
hdsl2ShdslInventoryTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 3), )
if mibBuilder.loadTexts: hdsl2ShdslInventoryTable.setStatus('mandatory')
hdsl2ShdslInventoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 3, 1), ).setIndexNames((0, "BIANCA-BRICK-HDSL2SHDSL2-MIB", "hdsl2ShdslInvIfIndex"))
if mibBuilder.loadTexts: hdsl2ShdslInventoryEntry.setStatus('mandatory')
hdsl2ShdslInvIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvIfIndex.setStatus('mandatory')
hdsl2ShdslInvIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("xtuC", 1), ("xtuR", 2), ("xru1", 3), ("xru2", 4), ("xru3", 5), ("xru4", 6), ("xru5", 7), ("xru6", 8), ("xru7", 9), ("xru8", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvIndex.setStatus('mandatory')
hdsl2ShdslInvVendorID = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvVendorID.setStatus('mandatory')
hdsl2ShdslInvVendorModelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvVendorModelNumber.setStatus('mandatory')
hdsl2ShdslInvVendorSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvVendorSerialNumber.setStatus('mandatory')
hdsl2ShdslInvVendorEOCSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvVendorEOCSoftwareVersion.setStatus('mandatory')
hdsl2ShdslInvStandardVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvStandardVersion.setStatus('mandatory')
hdsl2ShdslInvVendorListNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvVendorListNumber.setStatus('mandatory')
hdsl2ShdslInvVendorIssueNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 3, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvVendorIssueNumber.setStatus('mandatory')
hdsl2ShdslInvVendorSoftwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 3, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvVendorSoftwareVersion.setStatus('mandatory')
hdsl2ShdslInvEquipmentCode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 3, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvEquipmentCode.setStatus('mandatory')
hdsl2ShdslInvVendorOther = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 3, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvVendorOther.setStatus('mandatory')
hdsl2ShdslInvTransmissionModeCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("region1", 1), ("region2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvTransmissionModeCapability.setStatus('mandatory')
hdsl2ShdslEndpointConfTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 4), )
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfTable.setStatus('mandatory')
hdsl2ShdslEndpointConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 4, 1), ).setIndexNames((0, "BIANCA-BRICK-HDSL2SHDSL2-MIB", "hdsl2ShdslEndpointConfIfIndex"))
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfEntry.setStatus('mandatory')
hdsl2ShdslEndpointConfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfIfIndex.setStatus('mandatory')
hdsl2ShdslEndpointConfSide = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("networkSide", 1), ("customerSide", 2))).clone('customerSide')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfSide.setStatus('mandatory')
hdsl2ShdslEndpointConfWireInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("twoWire", 1), ("fourWire", 2), ("fourWireStandard", 3), ("fourWireIMA", 4), ("sixWire", 5), ("sixWireIMA", 6), ("eightWire", 7), ("eightWireIMA", 8), ("not-used", 9), ("groupMember", 10), ("twoWireEFM", 11), ("fourWireEFM", 12), ("sixWireEFM", 13), ("eightWireEFM", 14))).clone('twoWire')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfWireInterface.setStatus('mandatory')
hdsl2ShdslEndpointConfMinLineRate = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 22784000)).clone(1552000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfMinLineRate.setStatus('mandatory')
hdsl2ShdslEndpointConfMaxLineRate = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 22784000)).clone(1552000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfMaxLineRate.setStatus('mandatory')
hdsl2ShdslEndpointConfTransmissionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("region1", 1), ("region2", 2), ("region1or2", 3))).clone('region1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfTransmissionMode.setStatus('mandatory')
hdsl2ShdslEndpointConfWorstCaseTargetMarginDown = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfWorstCaseTargetMarginDown.setStatus('mandatory')
hdsl2ShdslEndpointConfWorstCaseTargetMarginUp = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10, 21))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfWorstCaseTargetMarginUp.setStatus('mandatory')
hdsl2ShdslEndpointConfGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 4, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfGroupId.setStatus('mandatory')
hdsl2ShdslEndpointConfLineProbeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("auto", 1), ("disable", 2), ("enable", 3), ("enable-std", 4))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfLineProbeEnable.setStatus('mandatory')
hdsl2ShdslEndpointConfLicenseUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 4, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("missing", 2), ("shdsl", 3))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfLicenseUsage.setStatus('mandatory')
hdsl2ShdslEndpointConfPamMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 252)).clone(48)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfPamMode.setStatus('mandatory')
hdsl2ShdslEndpointConfTotalMinLineRate = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 4, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50000000)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfTotalMinLineRate.setStatus('mandatory')
hdsl2ShdslEndpointConfMinWirePairs = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 4, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfMinWirePairs.setStatus('mandatory')
hdsl2ShdslEndpointConfCapListStyle = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 4, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("old", 2), ("new", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfCapListStyle.setStatus('mandatory')
hdsl2ShdslEndpointCurrTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5), )
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurrTable.setStatus('mandatory')
hdsl2ShdslEndpointCurrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1), ).setIndexNames((0, "BIANCA-BRICK-HDSL2SHDSL2-MIB", "hdsl2ShdslEndpointCurrIfIndex"))
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurrEntry.setStatus('mandatory')
hdsl2ShdslEndpointCurrIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurrIfIndex.setStatus('mandatory')
hdsl2ShdslEndpointCurrReceivedBlks = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurrReceivedBlks.setStatus('mandatory')
hdsl2ShdslEndpointCurrTransmittedBlks = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurrTransmittedBlks.setStatus('mandatory')
hdsl2ShdslEndpointCurrCorrectedBlks = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurrCorrectedBlks.setStatus('mandatory')
hdsl2ShdslEndpointCurrUncorrectBlks = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurrUncorrectBlks.setStatus('mandatory')
hdsl2ShdslEndpointCurrAtn = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurrAtn.setStatus('mandatory')
hdsl2ShdslEndpointCurrSnrMgn = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurrSnrMgn.setStatus('mandatory')
hdsl2ShdslEndpointCurrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("noDefect", 1), ("powerBackoff", 2), ("deviceFault", 3), ("dcContinuityFault", 4), ("snrMarginAlarm", 5), ("loswFailureAlarm", 7), ("configInitFailure", 8), ("protocolInitFailure", 9), ("noNeighborPresent", 10), ("loopbackActive", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurrStatus.setStatus('mandatory')
hdsl2ShdslEndpointES = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointES.setStatus('mandatory')
hdsl2ShdslEndpointSES = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointSES.setStatus('mandatory')
hdsl2ShdslEndpointCRCanomalies = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCRCanomalies.setStatus('mandatory')
hdsl2ShdslEndpointLOSWS = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointLOSWS.setStatus('mandatory')
hdsl2ShdslEndpointUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointUAS.setStatus('mandatory')
hdsl2ShdslEndpointCurr15MinReceivedBlks = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr15MinReceivedBlks.setStatus('mandatory')
hdsl2ShdslEndpointCurr15MinTransmittedBlks = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr15MinTransmittedBlks.setStatus('mandatory')
hdsl2ShdslEndpointCurr15MinCorrectedBlks = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr15MinCorrectedBlks.setStatus('mandatory')
hdsl2ShdslEndpointCurr15MinUncorrectBlks = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr15MinUncorrectBlks.setStatus('mandatory')
hdsl2ShdslEndpointCurr15MinTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86399))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr15MinTimeElapsed.setStatus('mandatory')
hdsl2ShdslEndpointCurr15MinES = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr15MinES.setStatus('mandatory')
hdsl2ShdslEndpointCurr15MinSES = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr15MinSES.setStatus('mandatory')
hdsl2ShdslEndpointCurr15MinCRCanomalies = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr15MinCRCanomalies.setStatus('mandatory')
hdsl2ShdslEndpointCurr15MinLOSWS = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr15MinLOSWS.setStatus('mandatory')
hdsl2ShdslEndpointCurr15MinUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr15MinUAS.setStatus('mandatory')
hdsl2ShdslEndpointCurr1DayReceivedBlks = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr1DayReceivedBlks.setStatus('mandatory')
hdsl2ShdslEndpointCurr1DayTransmittedBlks = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr1DayTransmittedBlks.setStatus('mandatory')
hdsl2ShdslEndpointCurr1DayCorrectedBlks = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr1DayCorrectedBlks.setStatus('mandatory')
hdsl2ShdslEndpointCurr1DayUncorrectBlks = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr1DayUncorrectBlks.setStatus('mandatory')
hdsl2ShdslEndpointCurr1DayTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 86399))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr1DayTimeElapsed.setStatus('mandatory')
hdsl2ShdslEndpointCurr1DayES = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr1DayES.setStatus('mandatory')
hdsl2ShdslEndpointCurr1DaySES = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr1DaySES.setStatus('mandatory')
hdsl2ShdslEndpointCurr1DayCRCanomalies = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr1DayCRCanomalies.setStatus('mandatory')
hdsl2ShdslEndpointCurr1DayLOSWS = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr1DayLOSWS.setStatus('mandatory')
hdsl2ShdslEndpointCurr1DayUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 5, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr1DayUAS.setStatus('mandatory')
hdsl2ShdslSpanConfProfileTable = MibTable((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 10), )
if mibBuilder.loadTexts: hdsl2ShdslSpanConfProfileTable.setStatus('mandatory')
hdsl2ShdslSpanConfProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 10, 1), ).setIndexNames((0, "BIANCA-BRICK-HDSL2SHDSL2-MIB", "hdsl2ShdslSpanConfProfileName"))
if mibBuilder.loadTexts: hdsl2ShdslSpanConfProfileEntry.setStatus('mandatory')
hdsl2ShdslSpanConfProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfProfileName.setStatus('mandatory')
hdsl2ShdslSpanConfWireInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("twoWire", 1), ("fourWire", 2), ("fourWireStandard", 3), ("fourWireIMA", 4), ("sixWire", 5), ("sixWireIMA", 6), ("eightWire", 7), ("eightWireIMA", 8), ("not-used", 9), ("groupMember", 10), ("twoWireEFM", 11), ("fourWireEFM", 12), ("sixWireEFM", 13), ("eightWireEFM", 14))).clone('twoWire')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfWireInterface.setStatus('mandatory')
hdsl2ShdslSpanConfMinLineRate = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 22784000)).clone(1552000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfMinLineRate.setStatus('mandatory')
hdsl2ShdslSpanConfMaxLineRate = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 22784000)).clone(1552000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfMaxLineRate.setStatus('mandatory')
hdsl2ShdslSpanConfTransmissionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("region1", 1), ("region2", 2), ("region1or2", 3))).clone('region1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfTransmissionMode.setStatus('mandatory')
hdsl2ShdslSpanConfWorstCaseTargetMarginDown = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 10, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfWorstCaseTargetMarginDown.setStatus('mandatory')
hdsl2ShdslSpanConfWorstCaseTargetMarginUp = MibTableColumn((1, 3, 6, 1, 4, 1, 272, 4, 35, 1, 1, 10, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10, 21))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfWorstCaseTargetMarginUp.setStatus('mandatory')
mibBuilder.exportSymbols("BIANCA-BRICK-HDSL2SHDSL2-MIB", hdsl2ShdslEndpointConfTable=hdsl2ShdslEndpointConfTable, hdsl2ShdslInvIfIndex=hdsl2ShdslInvIfIndex, hdsl2ShdslEndpointCurrEntry=hdsl2ShdslEndpointCurrEntry, hdsl2ShdslEndpointSES=hdsl2ShdslEndpointSES, hdsl2ShdslSpanConfMaxLineRate=hdsl2ShdslSpanConfMaxLineRate, hdsl2ShdslEndpointConfMinWirePairs=hdsl2ShdslEndpointConfMinWirePairs, hdsl2ShdslSpanConfProfileTable=hdsl2ShdslSpanConfProfileTable, hdsl2ShdslEndpointCurr1DayTransmittedBlks=hdsl2ShdslEndpointCurr1DayTransmittedBlks, hdsl2ShdslEndpointCurr15MinES=hdsl2ShdslEndpointCurr15MinES, hdsl2ShdslEndpointCurr1DayLOSWS=hdsl2ShdslEndpointCurr1DayLOSWS, hdsl2ShdslSpanConfTransmissionMode=hdsl2ShdslSpanConfTransmissionMode, hdsl2ShdslEndpointConfIfIndex=hdsl2ShdslEndpointConfIfIndex, hdsl2ShdslEndpointConfSide=hdsl2ShdslEndpointConfSide, hdsl2ShdslEndpointConfWireInterface=hdsl2ShdslEndpointConfWireInterface, hdsl2ShdslInvVendorListNumber=hdsl2ShdslInvVendorListNumber, hdsl2ShdslEndpointCurr1DaySES=hdsl2ShdslEndpointCurr1DaySES, hdsl2ShdslEndpointCurr15MinCorrectedBlks=hdsl2ShdslEndpointCurr15MinCorrectedBlks, hdsl2ShdslInvVendorEOCSoftwareVersion=hdsl2ShdslInvVendorEOCSoftwareVersion, hdsl2ShdslInvEquipmentCode=hdsl2ShdslInvEquipmentCode, hdsl2ShdslInvVendorModelNumber=hdsl2ShdslInvVendorModelNumber, hdsl2ShdslEndpointConfLineProbeEnable=hdsl2ShdslEndpointConfLineProbeEnable, hdsl2ShdslSpanConfProfileName=hdsl2ShdslSpanConfProfileName, hdsl2ShdslEndpointCurr15MinTimeElapsed=hdsl2ShdslEndpointCurr15MinTimeElapsed, hdsl2ShdslEndpointConfWorstCaseTargetMarginUp=hdsl2ShdslEndpointConfWorstCaseTargetMarginUp, hdsl2ShdslSpanConfWorstCaseTargetMarginDown=hdsl2ShdslSpanConfWorstCaseTargetMarginDown, hdsl2ShdslEndpointCurr15MinReceivedBlks=hdsl2ShdslEndpointCurr15MinReceivedBlks, hdsl2ShdslInvTransmissionModeCapability=hdsl2ShdslInvTransmissionModeCapability, hdsl2ShdslEndpointCurr15MinSES=hdsl2ShdslEndpointCurr15MinSES, hdsl2ShdslSpanConfWireInterface=hdsl2ShdslSpanConfWireInterface, hdsl2ShdslEndpointCurr15MinUncorrectBlks=hdsl2ShdslEndpointCurr15MinUncorrectBlks, hdsl2ShdslEndpointConfWorstCaseTargetMarginDown=hdsl2ShdslEndpointConfWorstCaseTargetMarginDown, hdsl2ShdslInvVendorSoftwareVersion=hdsl2ShdslInvVendorSoftwareVersion, hdsl2ShdslEndpointConfMaxLineRate=hdsl2ShdslEndpointConfMaxLineRate, hdsl2ShdslEndpointCurr15MinCRCanomalies=hdsl2ShdslEndpointCurr15MinCRCanomalies, hdsl2ShdslEndpointConfMinLineRate=hdsl2ShdslEndpointConfMinLineRate, hdsl2ShdslEndpointCurr1DayTimeElapsed=hdsl2ShdslEndpointCurr1DayTimeElapsed, hdsl2ShdslEndpointES=hdsl2ShdslEndpointES, hdsl2ShdslEndpointConfGroupId=hdsl2ShdslEndpointConfGroupId, hdsl2ShdslInvVendorOther=hdsl2ShdslInvVendorOther, bintec=bintec, hdsl2ShdslEndpointCurrIfIndex=hdsl2ShdslEndpointCurrIfIndex, hdsl2ShdslEndpointConfTransmissionMode=hdsl2ShdslEndpointConfTransmissionMode, hdsl2ShdslEndpointConfLicenseUsage=hdsl2ShdslEndpointConfLicenseUsage, hdsl2ShdslEndpointCurrCorrectedBlks=hdsl2ShdslEndpointCurrCorrectedBlks, bibo=bibo, hdsl2ShdslEndpointCurrTable=hdsl2ShdslEndpointCurrTable, hdsl2ShdslInvVendorIssueNumber=hdsl2ShdslInvVendorIssueNumber, hdsl2ShdslEndpointConfTotalMinLineRate=hdsl2ShdslEndpointConfTotalMinLineRate, hdsl2ShdslEndpointConfEntry=hdsl2ShdslEndpointConfEntry, hdsl2ShdslSpanConfMinLineRate=hdsl2ShdslSpanConfMinLineRate, hdsl2ShdslEndpointConfPamMode=hdsl2ShdslEndpointConfPamMode, hdsl2ShdslInvIndex=hdsl2ShdslInvIndex, hdsl2ShdslEndpointCurrUncorrectBlks=hdsl2ShdslEndpointCurrUncorrectBlks, hdsl2ShdslEndpointCurr1DayES=hdsl2ShdslEndpointCurr1DayES, hdsl2ShdslSpanConfWorstCaseTargetMarginUp=hdsl2ShdslSpanConfWorstCaseTargetMarginUp, hdsl2ShdslEndpointConfCapListStyle=hdsl2ShdslEndpointConfCapListStyle, hdsl2ShdslEndpointCurrReceivedBlks=hdsl2ShdslEndpointCurrReceivedBlks, hdsl2ShdslEndpointCurr1DayUAS=hdsl2ShdslEndpointCurr1DayUAS, hdsl2ShdslInvVendorID=hdsl2ShdslInvVendorID, hdsl2ShdslEndpointCurrAtn=hdsl2ShdslEndpointCurrAtn, hdsl2ShdslEndpointLOSWS=hdsl2ShdslEndpointLOSWS, hdsl2ShdslMibObjects=hdsl2ShdslMibObjects, hdsl2ShdslEndpointCurr15MinTransmittedBlks=hdsl2ShdslEndpointCurr15MinTransmittedBlks, hdsl2ShdslEndpointCurrTransmittedBlks=hdsl2ShdslEndpointCurrTransmittedBlks, hdsl2ShdslEndpointCurr1DayReceivedBlks=hdsl2ShdslEndpointCurr1DayReceivedBlks, hdsl2ShdslEndpointCurr1DayCRCanomalies=hdsl2ShdslEndpointCurr1DayCRCanomalies, hdsl2ShdslEndpointCurr15MinUAS=hdsl2ShdslEndpointCurr15MinUAS, hdsl2ShdslEndpointCurr1DayUncorrectBlks=hdsl2ShdslEndpointCurr1DayUncorrectBlks, hdsl2ShdslEndpointCurrStatus=hdsl2ShdslEndpointCurrStatus, hdsl2ShdslEndpointUAS=hdsl2ShdslEndpointUAS, hdsl2ShdslInventoryTable=hdsl2ShdslInventoryTable, hdsl2ShdslEndpointCRCanomalies=hdsl2ShdslEndpointCRCanomalies, hdsl2shdsl=hdsl2shdsl, hdsl2ShdslLineMib=hdsl2ShdslLineMib, hdsl2ShdslEndpointCurr1DayCorrectedBlks=hdsl2ShdslEndpointCurr1DayCorrectedBlks, hdsl2ShdslInvVendorSerialNumber=hdsl2ShdslInvVendorSerialNumber, hdsl2ShdslInventoryEntry=hdsl2ShdslInventoryEntry, hdsl2ShdslEndpointCurrSnrMgn=hdsl2ShdslEndpointCurrSnrMgn, hdsl2ShdslEndpointCurr15MinLOSWS=hdsl2ShdslEndpointCurr15MinLOSWS, hdsl2ShdslInvStandardVersion=hdsl2ShdslInvStandardVersion, hdsl2ShdslSpanConfProfileEntry=hdsl2ShdslSpanConfProfileEntry)
