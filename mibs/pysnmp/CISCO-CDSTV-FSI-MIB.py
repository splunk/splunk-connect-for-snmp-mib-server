#
# PySNMP MIB module CISCO-CDSTV-FSI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-CDSTV-FSI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:35:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
CiscoURLString, = mibBuilder.importSymbols("CISCO-TC", "CiscoURLString")
InetAddressType, InetPortNumber, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetPortNumber", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, Counter32, Integer32, ObjectIdentity, MibIdentifier, iso, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ModuleIdentity, Counter64, Unsigned32, Bits, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "Integer32", "ObjectIdentity", "MibIdentifier", "iso", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ModuleIdentity", "Counter64", "Unsigned32", "Bits", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ciscoCdstvFsiMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 735))
ciscoCdstvFsiMIB.setRevisions(('2010-05-10 00:00',))
if mibBuilder.loadTexts: ciscoCdstvFsiMIB.setLastUpdated('201005100000Z')
if mibBuilder.loadTexts: ciscoCdstvFsiMIB.setOrganization('Cisco Systems, Inc.')
ciscoCdstvFsiMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 735, 0))
ciscoCdstvFsiMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 735, 1))
ciscoCdstvFsiMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 735, 2))
ciscoCdstvFsiMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 735, 2, 1))
cdstvFsiIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 735, 1, 1), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvFsiIpAddressType.setStatus('current')
cdstvFsiIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 735, 1, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvFsiIpAddress.setStatus('current')
cdstvFsiServerPort = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 735, 1, 3), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvFsiServerPort.setStatus('current')
cdstvFsiFtpClientPort = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 735, 1, 4), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvFsiFtpClientPort.setStatus('current')
cdstvFsiFtpOutServerPort = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 735, 1, 5), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvFsiFtpOutServerPort.setStatus('current')
cdstvFsiFtpOutLoginTTL = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 735, 1, 6), Unsigned32()).setUnits('hops').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvFsiFtpOutLoginTTL.setStatus('current')
cdstvFsiLogLevel = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 735, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("low", 2), ("high", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvFsiLogLevel.setStatus('current')
cdstvFsiContentRootPath = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 735, 1, 8), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvFsiContentRootPath.setStatus('current')
cdstvFsiAsyncCallbackURL = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 735, 1, 9), CiscoURLString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cdstvFsiAsyncCallbackURL.setStatus('current')
ciscoCdstvFsiMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 735, 2, 2))
ciscoCdstvFsiMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 735, 2, 1, 1)).setObjects(("CISCO-CDSTV-FSI-MIB", "ciscoCdstvFsiMIBMainObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdstvFsiMIBCompliance = ciscoCdstvFsiMIBCompliance.setStatus('current')
ciscoCdstvFsiMIBMainObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 735, 2, 2, 1)).setObjects(("CISCO-CDSTV-FSI-MIB", "cdstvFsiIpAddress"), ("CISCO-CDSTV-FSI-MIB", "cdstvFsiServerPort"), ("CISCO-CDSTV-FSI-MIB", "cdstvFsiFtpClientPort"), ("CISCO-CDSTV-FSI-MIB", "cdstvFsiFtpOutServerPort"), ("CISCO-CDSTV-FSI-MIB", "cdstvFsiFtpOutLoginTTL"), ("CISCO-CDSTV-FSI-MIB", "cdstvFsiLogLevel"), ("CISCO-CDSTV-FSI-MIB", "cdstvFsiContentRootPath"), ("CISCO-CDSTV-FSI-MIB", "cdstvFsiAsyncCallbackURL"), ("CISCO-CDSTV-FSI-MIB", "cdstvFsiIpAddressType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCdstvFsiMIBMainObjectGroup = ciscoCdstvFsiMIBMainObjectGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-CDSTV-FSI-MIB", ciscoCdstvFsiMIBConform=ciscoCdstvFsiMIBConform, PYSNMP_MODULE_ID=ciscoCdstvFsiMIB, cdstvFsiFtpClientPort=cdstvFsiFtpClientPort, ciscoCdstvFsiMIBObjects=ciscoCdstvFsiMIBObjects, cdstvFsiIpAddress=cdstvFsiIpAddress, cdstvFsiServerPort=cdstvFsiServerPort, cdstvFsiContentRootPath=cdstvFsiContentRootPath, ciscoCdstvFsiMIB=ciscoCdstvFsiMIB, ciscoCdstvFsiMIBCompliance=ciscoCdstvFsiMIBCompliance, ciscoCdstvFsiMIBMainObjectGroup=ciscoCdstvFsiMIBMainObjectGroup, cdstvFsiIpAddressType=cdstvFsiIpAddressType, ciscoCdstvFsiMIBCompliances=ciscoCdstvFsiMIBCompliances, ciscoCdstvFsiMIBNotifs=ciscoCdstvFsiMIBNotifs, cdstvFsiAsyncCallbackURL=cdstvFsiAsyncCallbackURL, cdstvFsiFtpOutServerPort=cdstvFsiFtpOutServerPort, cdstvFsiFtpOutLoginTTL=cdstvFsiFtpOutLoginTTL, cdstvFsiLogLevel=cdstvFsiLogLevel, ciscoCdstvFsiMIBGroups=ciscoCdstvFsiMIBGroups)
