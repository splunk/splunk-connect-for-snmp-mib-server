#
# PySNMP MIB module ASCEND-MIBL2TUNNEL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBL2TUNNEL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:11:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, IpAddress, ObjectIdentity, MibIdentifier, Gauge32, Counter32, NotificationType, Unsigned32, Integer32, Counter64, Bits, ModuleIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "IpAddress", "ObjectIdentity", "MibIdentifier", "Gauge32", "Counter32", "NotificationType", "Unsigned32", "Integer32", "Counter64", "Bits", "ModuleIdentity", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class DisplayString(OctetString):
    pass

mibtunnelServer = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 91))
mibl2TunnelGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 90))
mibtunnelServerTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 91, 1), )
if mibBuilder.loadTexts: mibtunnelServerTable.setStatus('mandatory')
mibtunnelServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 91, 1, 1), ).setIndexNames((0, "ASCEND-MIBL2TUNNEL-MIB", "tunnelServer-ServerEndpoint"))
if mibBuilder.loadTexts: mibtunnelServerEntry.setStatus('mandatory')
tunnelServer_ServerEndpoint = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 1, 1, 1), DisplayString()).setLabel("tunnelServer-ServerEndpoint").setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelServer_ServerEndpoint.setStatus('mandatory')
tunnelServer_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("tunnelServer-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunnelServer_Enabled.setStatus('mandatory')
tunnelServer_SharedSecret = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 1, 1, 3), DisplayString()).setLabel("tunnelServer-SharedSecret").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunnelServer_SharedSecret.setStatus('mandatory')
tunnelServer_MaxClients = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 1, 1, 4), Integer32()).setLabel("tunnelServer-MaxClients").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunnelServer_MaxClients.setStatus('mandatory')
tunnelServer_ValidCallTypes = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("allCalls", 1), ("analogCalls", 2), ("digitalCalls", 3)))).setLabel("tunnelServer-ValidCallTypes").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunnelServer_ValidCallTypes.setStatus('mandatory')
tunnelServer_IpsecProfile = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 1, 1, 6), DisplayString()).setLabel("tunnelServer-IpsecProfile").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunnelServer_IpsecProfile.setStatus('mandatory')
tunnelServer_ClientAuthId = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 1, 1, 7), DisplayString()).setLabel("tunnelServer-ClientAuthId").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunnelServer_ClientAuthId.setStatus('mandatory')
tunnelServer_ServerAuthId = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 1, 1, 8), DisplayString()).setLabel("tunnelServer-ServerAuthId").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunnelServer_ServerAuthId.setStatus('mandatory')
tunnelServer_DialoutOptions_Enabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("tunnelServer-DialoutOptions-Enabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunnelServer_DialoutOptions_Enabled.setStatus('mandatory')
tunnelServer_DialoutOptions_DialNumberLookup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("tunnelServer-DialoutOptions-DialNumberLookup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunnelServer_DialoutOptions_DialNumberLookup.setStatus('mandatory')
tunnelServer_DialoutOptions_LookupPrefix = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 1, 1, 18), DisplayString()).setLabel("tunnelServer-DialoutOptions-LookupPrefix").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunnelServer_DialoutOptions_LookupPrefix.setStatus('mandatory')
tunnelServer_DialoutOptions_DialNumberPrefix = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 1, 1, 19), DisplayString()).setLabel("tunnelServer-DialoutOptions-DialNumberPrefix").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunnelServer_DialoutOptions_DialNumberPrefix.setStatus('mandatory')
tunnelServer_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("tunnelServer-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunnelServer_Action_o.setStatus('mandatory')
mibtunnelServer_DialoutOptions_DefaultCallMappingTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 91, 2), ).setLabel("mibtunnelServer-DialoutOptions-DefaultCallMappingTable")
if mibBuilder.loadTexts: mibtunnelServer_DialoutOptions_DefaultCallMappingTable.setStatus('mandatory')
mibtunnelServer_DialoutOptions_DefaultCallMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 91, 2, 1), ).setLabel("mibtunnelServer-DialoutOptions-DefaultCallMappingEntry").setIndexNames((0, "ASCEND-MIBL2TUNNEL-MIB", "tunnelServer-DialoutOptions-DefaultCallMapping-ServerEndpoint"), (0, "ASCEND-MIBL2TUNNEL-MIB", "tunnelServer-DialoutOptions-DefaultCallMapping-Index-o"))
if mibBuilder.loadTexts: mibtunnelServer_DialoutOptions_DefaultCallMappingEntry.setStatus('mandatory')
tunnelServer_DialoutOptions_DefaultCallMapping_ServerEndpoint = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 2, 1, 1), DisplayString()).setLabel("tunnelServer-DialoutOptions-DefaultCallMapping-ServerEndpoint").setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelServer_DialoutOptions_DefaultCallMapping_ServerEndpoint.setStatus('mandatory')
tunnelServer_DialoutOptions_DefaultCallMapping_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 2, 1, 2), Integer32()).setLabel("tunnelServer-DialoutOptions-DefaultCallMapping-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: tunnelServer_DialoutOptions_DefaultCallMapping_Index_o.setStatus('mandatory')
tunnelServer_DialoutOptions_DefaultCallMapping_ValidEntry = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("tunnelServer-DialoutOptions-DefaultCallMapping-ValidEntry").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunnelServer_DialoutOptions_DefaultCallMapping_ValidEntry.setStatus('mandatory')
tunnelServer_DialoutOptions_DefaultCallMapping_BearerType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 2, 3))).clone(namedValues=NamedValues(("any", 4), ("digital", 2), ("analog", 3)))).setLabel("tunnelServer-DialoutOptions-DefaultCallMapping-BearerType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunnelServer_DialoutOptions_DefaultCallMapping_BearerType.setStatus('mandatory')
tunnelServer_DialoutOptions_DefaultCallMapping_FramingType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 2, 3))).clone(namedValues=NamedValues(("any", 4), ("sync", 2), ("async", 3)))).setLabel("tunnelServer-DialoutOptions-DefaultCallMapping-FramingType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunnelServer_DialoutOptions_DefaultCallMapping_FramingType.setStatus('mandatory')
tunnelServer_DialoutOptions_DefaultCallMapping_DataService = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 91, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 255, 263))).clone(namedValues=NamedValues(("voice", 1), ("n-56kRestricted", 2), ("n-64kClear", 3), ("n-64kRestricted", 4), ("n-56kClear", 5), ("n-384kRestricted", 6), ("n-384kClear", 7), ("n-1536kClear", 8), ("n-1536kRestricted", 9), ("n-128kClear", 10), ("n-192kClear", 11), ("n-256kClear", 12), ("n-320kClear", 13), ("dws384Clear", 14), ("n-448Clear", 15), ("n-512Clear", 16), ("n-576Clear", 17), ("n-640Clear", 18), ("n-704Clear", 19), ("n-768Clear", 20), ("n-832Clear", 21), ("n-896Clear", 22), ("n-960Clear", 23), ("n-1024Clear", 24), ("n-1088Clear", 25), ("n-1152Clear", 26), ("n-1216Clear", 27), ("n-1280Clear", 28), ("n-1344Clear", 29), ("n-1408Clear", 30), ("n-1472Clear", 31), ("n-1600Clear", 32), ("n-1664Clear", 33), ("n-1728Clear", 34), ("n-1792Clear", 35), ("n-1856Clear", 36), ("n-1920Clear", 37), ("x30RestrictedBearer", 39), ("v110ClearBearer", 40), ("n-64kX30Restricted", 41), ("n-56kV110Clear", 42), ("modem", 43), ("atmodem", 44), ("n-2456kV110", 46), ("n-4856kV110", 47), ("n-9656kV110", 48), ("n-19256kV110", 49), ("n-38456kV110", 50), ("n-2456krV110", 51), ("n-4856krV110", 52), ("n-9656krV110", 53), ("n-19256krV110", 54), ("n-38456krV110", 55), ("n-2464kV110", 56), ("n-4864kV110", 57), ("n-9664kV110", 58), ("n-19264kV110", 59), ("n-38464kV110", 60), ("n-2464krV110", 61), ("n-4864krV110", 62), ("n-9664krV110", 63), ("n-19264krV110", 64), ("n-38464krV110", 65), ("v32", 66), ("phs64k", 67), ("voiceOverIp", 68), ("atmSvc", 70), ("frameRelaySvc", 71), ("vpnTunnel", 72), ("wormarq", 73), ("n-14456kV110", 74), ("n-28856kV110", 75), ("n-14456krV110", 76), ("n-28856krV110", 77), ("n-14464kV110", 78), ("n-28864kV110", 79), ("n-14464krV110", 80), ("n-28864krV110", 81), ("modem31khzAudio", 82), ("x25Svc", 83), ("n-144kClear", 255), ("iptoip", 263)))).setLabel("tunnelServer-DialoutOptions-DefaultCallMapping-DataService").setMaxAccess("readwrite")
if mibBuilder.loadTexts: tunnelServer_DialoutOptions_DefaultCallMapping_DataService.setStatus('mandatory')
mibl2TunnelGlobalTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 90, 1), )
if mibBuilder.loadTexts: mibl2TunnelGlobalTable.setStatus('mandatory')
mibl2TunnelGlobalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1), ).setIndexNames((0, "ASCEND-MIBL2TUNNEL-MIB", "l2TunnelGlobal-Index-o"))
if mibBuilder.loadTexts: mibl2TunnelGlobalEntry.setStatus('mandatory')
l2TunnelGlobal_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 1), Integer32()).setLabel("l2TunnelGlobal-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: l2TunnelGlobal_Index_o.setStatus('mandatory')
l2TunnelGlobal_PptpEnabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("l2TunnelGlobal-PptpEnabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_PptpEnabled.setStatus('mandatory')
l2TunnelGlobal_ServerProfileRequired = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("l2TunnelGlobal-ServerProfileRequired").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_ServerProfileRequired.setStatus('mandatory')
l2TunnelGlobal_L2tpMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("lac", 2), ("lns", 3), ("lacAndLns", 4)))).setLabel("l2TunnelGlobal-L2tpMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpMode.setStatus('mandatory')
l2TunnelGlobal_L2tpAuthEnabled = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("l2TunnelGlobal-L2tpAuthEnabled").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpAuthEnabled.setStatus('mandatory')
l2TunnelGlobal_L2tpRxWindow = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 6), Integer32()).setLabel("l2TunnelGlobal-L2tpRxWindow").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpRxWindow.setStatus('mandatory')
l2TunnelGlobal_MaxLnsClients = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 7), Integer32()).setLabel("l2TunnelGlobal-MaxLnsClients").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_MaxLnsClients.setStatus('mandatory')
l2TunnelGlobal_L2tpSystemName = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 8), DisplayString()).setLabel("l2TunnelGlobal-L2tpSystemName").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpSystemName.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_RetryTimerMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("linear", 1), ("exponential", 2)))).setLabel("l2TunnelGlobal-L2tpConfig-RetryTimerMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_RetryTimerMode.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_FirstRetryTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 9), Integer32()).setLabel("l2TunnelGlobal-L2tpConfig-FirstRetryTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_FirstRetryTimer.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_MaxRetryTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 34), Integer32()).setLabel("l2TunnelGlobal-L2tpConfig-MaxRetryTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_MaxRetryTimer.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_RetryCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 10), Integer32()).setLabel("l2TunnelGlobal-L2tpConfig-RetryCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_RetryCount.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_HelloTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 11), Integer32()).setLabel("l2TunnelGlobal-L2tpConfig-HelloTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_HelloTimer.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_ControlConnectEstablishTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 12), Integer32()).setLabel("l2TunnelGlobal-L2tpConfig-ControlConnectEstablishTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_ControlConnectEstablishTimer.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_LacIncomingCallTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 13), Integer32()).setLabel("l2TunnelGlobal-L2tpConfig-LacIncomingCallTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_LacIncomingCallTimer.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_LnsIncomingCallTimer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 14), Integer32()).setLabel("l2TunnelGlobal-L2tpConfig-LnsIncomingCallTimer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_LnsIncomingCallTimer.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_BaseUdpPort = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 15), Integer32()).setLabel("l2TunnelGlobal-L2tpConfig-BaseUdpPort").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_BaseUdpPort.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_DataPktUdpCksum = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("l2TunnelGlobal-L2tpConfig-DataPktUdpCksum").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_DataPktUdpCksum.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_DialoutAuthLns = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("l2TunnelGlobal-L2tpConfig-DialoutAuthLns").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_DialoutAuthLns.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_DialoutSendProfileName = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("l2TunnelGlobal-L2tpConfig-DialoutSendProfileName").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_DialoutSendProfileName.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_VerifyRemoteHostName = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("l2TunnelGlobal-L2tpConfig-VerifyRemoteHostName").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_VerifyRemoteHostName.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_AcctTunnelConnectionEncoding = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("decimalCallSerialNumber", 2), ("hexadecimalCallSerialNumber", 3)))).setLabel("l2TunnelGlobal-L2tpConfig-AcctTunnelConnectionEncoding").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_AcctTunnelConnectionEncoding.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_DefaultTunnelServer = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 28), DisplayString()).setLabel("l2TunnelGlobal-L2tpConfig-DefaultTunnelServer").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_DefaultTunnelServer.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_TunnelServerPreSccrqLookup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("l2TunnelGlobal-L2tpConfig-TunnelServerPreSccrqLookup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_TunnelServerPreSccrqLookup.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_SuppressEndpointDiscriminator = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("l2TunnelGlobal-L2tpConfig-SuppressEndpointDiscriminator").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_SuppressEndpointDiscriminator.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_MaxCallsPerTunnel = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 36), Integer32()).setLabel("l2TunnelGlobal-L2tpConfig-MaxCallsPerTunnel").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_MaxCallsPerTunnel.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_LnsNasPortType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("virtual", 1), ("portTypeAvp", 2)))).setLabel("l2TunnelGlobal-L2tpConfig-LnsNasPortType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_LnsNasPortType.setStatus('mandatory')
l2TunnelGlobal_L2tpConfig_DigitalAsyncNasPortType = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4))).clone(namedValues=NamedValues(("v120", 3), ("v110", 4)))).setLabel("l2TunnelGlobal-L2tpConfig-DigitalAsyncNasPortType").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2tpConfig_DigitalAsyncNasPortType.setStatus('mandatory')
l2TunnelGlobal_L2fMode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("nas", 2), ("gw", 3), ("nasAndGw", 4)))).setLabel("l2TunnelGlobal-L2fMode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2fMode.setStatus('mandatory')
l2TunnelGlobal_L2fSystemName = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 21), DisplayString()).setLabel("l2TunnelGlobal-L2fSystemName").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2fSystemName.setStatus('mandatory')
l2TunnelGlobal_L2fRetryCount = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 22), Integer32()).setLabel("l2TunnelGlobal-L2fRetryCount").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2fRetryCount.setStatus('mandatory')
l2TunnelGlobal_L2fRetryInterval = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 23), Integer32()).setLabel("l2TunnelGlobal-L2fRetryInterval").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2fRetryInterval.setStatus('mandatory')
l2TunnelGlobal_L2fTunnelSecret = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("sharedTunnelSecret", 1), ("distinctTunnelSecrets", 2), ("eitherSharedOrDistinctTunnelSecret", 3)))).setLabel("l2TunnelGlobal-L2fTunnelSecret").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2fTunnelSecret.setStatus('mandatory')
l2TunnelGlobal_L2fIgnoreMidSequence = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("l2TunnelGlobal-L2fIgnoreMidSequence").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_L2fIgnoreMidSequence.setStatus('mandatory')
l2TunnelGlobal_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 90, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("l2TunnelGlobal-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: l2TunnelGlobal_Action_o.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-MIBL2TUNNEL-MIB", tunnelServer_IpsecProfile=tunnelServer_IpsecProfile, l2TunnelGlobal_L2tpConfig_DefaultTunnelServer=l2TunnelGlobal_L2tpConfig_DefaultTunnelServer, mibtunnelServer=mibtunnelServer, tunnelServer_DialoutOptions_DefaultCallMapping_FramingType=tunnelServer_DialoutOptions_DefaultCallMapping_FramingType, tunnelServer_DialoutOptions_DefaultCallMapping_ValidEntry=tunnelServer_DialoutOptions_DefaultCallMapping_ValidEntry, DisplayString=DisplayString, mibtunnelServer_DialoutOptions_DefaultCallMappingTable=mibtunnelServer_DialoutOptions_DefaultCallMappingTable, tunnelServer_DialoutOptions_DialNumberLookup=tunnelServer_DialoutOptions_DialNumberLookup, tunnelServer_Action_o=tunnelServer_Action_o, tunnelServer_ClientAuthId=tunnelServer_ClientAuthId, l2TunnelGlobal_L2tpConfig_DataPktUdpCksum=l2TunnelGlobal_L2tpConfig_DataPktUdpCksum, l2TunnelGlobal_L2fRetryInterval=l2TunnelGlobal_L2fRetryInterval, l2TunnelGlobal_PptpEnabled=l2TunnelGlobal_PptpEnabled, l2TunnelGlobal_L2tpConfig_LacIncomingCallTimer=l2TunnelGlobal_L2tpConfig_LacIncomingCallTimer, l2TunnelGlobal_L2tpMode=l2TunnelGlobal_L2tpMode, l2TunnelGlobal_L2tpConfig_FirstRetryTimer=l2TunnelGlobal_L2tpConfig_FirstRetryTimer, tunnelServer_DialoutOptions_DefaultCallMapping_DataService=tunnelServer_DialoutOptions_DefaultCallMapping_DataService, tunnelServer_DialoutOptions_DefaultCallMapping_ServerEndpoint=tunnelServer_DialoutOptions_DefaultCallMapping_ServerEndpoint, tunnelServer_Enabled=tunnelServer_Enabled, tunnelServer_DialoutOptions_DefaultCallMapping_BearerType=tunnelServer_DialoutOptions_DefaultCallMapping_BearerType, l2TunnelGlobal_L2tpConfig_DialoutAuthLns=l2TunnelGlobal_L2tpConfig_DialoutAuthLns, tunnelServer_DialoutOptions_LookupPrefix=tunnelServer_DialoutOptions_LookupPrefix, l2TunnelGlobal_L2tpConfig_AcctTunnelConnectionEncoding=l2TunnelGlobal_L2tpConfig_AcctTunnelConnectionEncoding, l2TunnelGlobal_ServerProfileRequired=l2TunnelGlobal_ServerProfileRequired, tunnelServer_DialoutOptions_DefaultCallMapping_Index_o=tunnelServer_DialoutOptions_DefaultCallMapping_Index_o, l2TunnelGlobal_L2tpConfig_VerifyRemoteHostName=l2TunnelGlobal_L2tpConfig_VerifyRemoteHostName, l2TunnelGlobal_L2fRetryCount=l2TunnelGlobal_L2fRetryCount, mibl2TunnelGlobal=mibl2TunnelGlobal, tunnelServer_ServerEndpoint=tunnelServer_ServerEndpoint, l2TunnelGlobal_L2tpConfig_MaxRetryTimer=l2TunnelGlobal_L2tpConfig_MaxRetryTimer, l2TunnelGlobal_L2tpConfig_RetryCount=l2TunnelGlobal_L2tpConfig_RetryCount, l2TunnelGlobal_L2fMode=l2TunnelGlobal_L2fMode, l2TunnelGlobal_L2tpConfig_MaxCallsPerTunnel=l2TunnelGlobal_L2tpConfig_MaxCallsPerTunnel, mibl2TunnelGlobalTable=mibl2TunnelGlobalTable, l2TunnelGlobal_Index_o=l2TunnelGlobal_Index_o, tunnelServer_MaxClients=tunnelServer_MaxClients, tunnelServer_SharedSecret=tunnelServer_SharedSecret, l2TunnelGlobal_L2tpAuthEnabled=l2TunnelGlobal_L2tpAuthEnabled, l2TunnelGlobal_L2fIgnoreMidSequence=l2TunnelGlobal_L2fIgnoreMidSequence, mibtunnelServerTable=mibtunnelServerTable, l2TunnelGlobal_L2fTunnelSecret=l2TunnelGlobal_L2fTunnelSecret, l2TunnelGlobal_L2tpSystemName=l2TunnelGlobal_L2tpSystemName, mibtunnelServerEntry=mibtunnelServerEntry, mibtunnelServer_DialoutOptions_DefaultCallMappingEntry=mibtunnelServer_DialoutOptions_DefaultCallMappingEntry, l2TunnelGlobal_L2tpConfig_ControlConnectEstablishTimer=l2TunnelGlobal_L2tpConfig_ControlConnectEstablishTimer, mibl2TunnelGlobalEntry=mibl2TunnelGlobalEntry, tunnelServer_DialoutOptions_Enabled=tunnelServer_DialoutOptions_Enabled, l2TunnelGlobal_L2tpConfig_RetryTimerMode=l2TunnelGlobal_L2tpConfig_RetryTimerMode, l2TunnelGlobal_MaxLnsClients=l2TunnelGlobal_MaxLnsClients, tunnelServer_ServerAuthId=tunnelServer_ServerAuthId, l2TunnelGlobal_L2tpConfig_SuppressEndpointDiscriminator=l2TunnelGlobal_L2tpConfig_SuppressEndpointDiscriminator, l2TunnelGlobal_L2fSystemName=l2TunnelGlobal_L2fSystemName, l2TunnelGlobal_L2tpConfig_BaseUdpPort=l2TunnelGlobal_L2tpConfig_BaseUdpPort, tunnelServer_DialoutOptions_DialNumberPrefix=tunnelServer_DialoutOptions_DialNumberPrefix, l2TunnelGlobal_L2tpConfig_DigitalAsyncNasPortType=l2TunnelGlobal_L2tpConfig_DigitalAsyncNasPortType, tunnelServer_ValidCallTypes=tunnelServer_ValidCallTypes, l2TunnelGlobal_L2tpConfig_LnsIncomingCallTimer=l2TunnelGlobal_L2tpConfig_LnsIncomingCallTimer, l2TunnelGlobal_L2tpConfig_DialoutSendProfileName=l2TunnelGlobal_L2tpConfig_DialoutSendProfileName, l2TunnelGlobal_L2tpConfig_HelloTimer=l2TunnelGlobal_L2tpConfig_HelloTimer, l2TunnelGlobal_L2tpConfig_TunnelServerPreSccrqLookup=l2TunnelGlobal_L2tpConfig_TunnelServerPreSccrqLookup, l2TunnelGlobal_L2tpRxWindow=l2TunnelGlobal_L2tpRxWindow, l2TunnelGlobal_L2tpConfig_LnsNasPortType=l2TunnelGlobal_L2tpConfig_LnsNasPortType, l2TunnelGlobal_Action_o=l2TunnelGlobal_Action_o)
