#
# PySNMP MIB module BCAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BCAM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:19:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
mgmt, ModuleIdentity, iso, NotificationType, TimeTicks, Integer32, NotificationType, Unsigned32, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, MibIdentifier, Gauge32, Bits, Counter64, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "mgmt", "ModuleIdentity", "iso", "NotificationType", "TimeTicks", "Integer32", "NotificationType", "Unsigned32", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "MibIdentifier", "Gauge32", "Bits", "Counter64", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sni = MibIdentifier((1, 3, 6, 1, 4, 1, 231))
sniProductMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2))
sniBcam = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 17))
class PhysAddress(OctetString):
    pass

bcamTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 17, 1))
bcamGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 17, 2))
bcamMemory = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 17, 3))
bcamTrace = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 17, 4))
bcamTsap = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 17, 5))
bcamCep = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 17, 6))
bcamRoute = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 17, 7))
bcamIf = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 17, 8))
bcamRouter = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 17, 9))
bcamHost = MibIdentifier((1, 3, 6, 1, 4, 1, 231, 2, 17, 10))
bcamTrapString = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 1, 1), DisplayString())
if mibBuilder.loadTexts: bcamTrapString.setStatus('mandatory')
bcamTrapOutPoolOverCurrent = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 1, 2), Integer32())
if mibBuilder.loadTexts: bcamTrapOutPoolOverCurrent.setStatus('mandatory')
bcamTrapOutPoolUnderCurrent = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 1, 3), Integer32())
if mibBuilder.loadTexts: bcamTrapOutPoolUnderCurrent.setStatus('mandatory')
bcamTrapInPoolOverCurrent = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 1, 4), Integer32())
if mibBuilder.loadTexts: bcamTrapInPoolOverCurrent.setStatus('mandatory')
bcamTrapInPoolUnderCurrent = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 1, 5), Integer32())
if mibBuilder.loadTexts: bcamTrapInPoolUnderCurrent.setStatus('mandatory')
bcamTrapOutPoolOver = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 17) + (0,301)).setObjects(("BCAM-MIB", "bcamGlobalUpTime"), ("BCAM-MIB", "bcamGlobalHostName"), ("BCAM-MIB", "bcamMemoryPoolOutputLimitTrap"), ("BCAM-MIB", "bcamTrapOutPoolOverCurrent"), ("BCAM-MIB", "bcamTrapString"))
bcamTrapOutPoolUnder = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 17) + (0,302)).setObjects(("BCAM-MIB", "bcamGlobalUpTime"), ("BCAM-MIB", "bcamGlobalHostName"), ("BCAM-MIB", "bcamMemoryPoolOutputLimitTrap"), ("BCAM-MIB", "bcamTrapOutPoolUnderCurrent"), ("BCAM-MIB", "bcamTrapString"))
bcamTrapInPoolOver = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 17) + (0,303)).setObjects(("BCAM-MIB", "bcamGlobalUpTime"), ("BCAM-MIB", "bcamGlobalHostName"), ("BCAM-MIB", "bcamMemoryPoolInputLimitTrap"), ("BCAM-MIB", "bcamTrapInPoolOverCurrent"), ("BCAM-MIB", "bcamTrapString"))
bcamTrapInPoolUnder = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 17) + (0,304)).setObjects(("BCAM-MIB", "bcamGlobalUpTime"), ("BCAM-MIB", "bcamGlobalHostName"), ("BCAM-MIB", "bcamMemoryPoolInputLimitTrap"), ("BCAM-MIB", "bcamTrapInPoolUnderCurrent"), ("BCAM-MIB", "bcamTrapString"))
bcamTrapLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 17) + (0,305)).setObjects(("BCAM-MIB", "bcamGlobalUpTime"), ("BCAM-MIB", "bcamGlobalHostName"), ("BCAM-MIB", "bcamIfTabNumbers"), ("BCAM-MIB", "bcamIfTabName"), ("BCAM-MIB", "bcamTrapString"))
bcamTrapLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 17) + (0,306)).setObjects(("BCAM-MIB", "bcamGlobalUpTime"), ("BCAM-MIB", "bcamGlobalHostName"), ("BCAM-MIB", "bcamIfTabNumbers"), ("BCAM-MIB", "bcamIfTabName"), ("BCAM-MIB", "bcamTrapString"))
bcamTrapSystemUp = NotificationType((1, 3, 6, 1, 4, 1, 231, 2, 17) + (0,307)).setObjects(("BCAM-MIB", "bcamGlobalUpTime"), ("BCAM-MIB", "bcamGlobalHostName"), ("BCAM-MIB", "bcamTrapString"))
bcamGlobalBcamVersion = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalBcamVersion.setStatus('mandatory')
bcamGlobalMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalMibVersion.setStatus('mandatory')
bcamGlobalUpTime = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalUpTime.setStatus('mandatory')
bcamGlobalPortNonpriv = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalPortNonpriv.setStatus('mandatory')
bcamGlobalPortFree = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalPortFree.setStatus('mandatory')
bcamGlobalNumBitmap = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalNumBitmap.setStatus('mandatory')
bcamGlobalMaxRemoteIp = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalMaxRemoteIp.setStatus('mandatory')
bcamGlobalEsCreationIp = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16))).clone(namedValues=NamedValues(("ipOff", 1), ("ipInData", 2), ("ipOutData", 4), ("ipRoutingProt", 8), ("ipRoutingData", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalEsCreationIp.setStatus('mandatory')
bcamGlobalEsCreationIso = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16))).clone(namedValues=NamedValues(("isoOff", 1), ("isoInData", 2), ("isoOutData", 4), ("isoRoutingProt", 8), ("isoRoutingData", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalEsCreationIso.setStatus('mandatory')
bcamGlobalBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalBroadcast.setStatus('mandatory')
bcamGlobalArp = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("off", 1), ("quiet", 2), ("on", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalArp.setStatus('mandatory')
bcamGlobalRarp = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalRarp.setStatus('mandatory')
bcamGlobalInWaitLimit1 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalInWaitLimit1.setStatus('mandatory')
bcamGlobalInWaitLimit2 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalInWaitLimit2.setStatus('mandatory')
bcamGlobalInWaitLimit3 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalInWaitLimit3.setStatus('mandatory')
bcamGlobalInWaitLimit4 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalInWaitLimit4.setStatus('mandatory')
bcamGlobalInWaitChange = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalInWaitChange.setStatus('mandatory')
bcamGlobalInWaitSet = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalInWaitSet.setStatus('mandatory')
bcamGlobalReactLimit1 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalReactLimit1.setStatus('mandatory')
bcamGlobalReactLimit2 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalReactLimit2.setStatus('mandatory')
bcamGlobalReactLimit3 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalReactLimit3.setStatus('mandatory')
bcamGlobalReactLimit4 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalReactLimit4.setStatus('mandatory')
bcamGlobalReactChange = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalReactChange.setStatus('mandatory')
bcamGlobalReactSet = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalReactSet.setStatus('mandatory')
bcamGlobalInProcLimit1 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalInProcLimit1.setStatus('mandatory')
bcamGlobalInProcLimit2 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 26), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalInProcLimit2.setStatus('mandatory')
bcamGlobalInProcLimit3 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 27), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalInProcLimit3.setStatus('mandatory')
bcamGlobalInProcLimit4 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 28), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalInProcLimit4.setStatus('mandatory')
bcamGlobalInProcChange = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalInProcChange.setStatus('mandatory')
bcamGlobalInProcSet = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalInProcSet.setStatus('mandatory')
bcamGlobalOutProcLimit1 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 31), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalOutProcLimit1.setStatus('mandatory')
bcamGlobalOutProcLimit2 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 32), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalOutProcLimit2.setStatus('mandatory')
bcamGlobalOutProcLimit3 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalOutProcLimit3.setStatus('mandatory')
bcamGlobalOutProcLimit4 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 34), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalOutProcLimit4.setStatus('mandatory')
bcamGlobalOutProcChange = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalOutProcChange.setStatus('mandatory')
bcamGlobalOutProcSet = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalOutProcSet.setStatus('mandatory')
bcamGlobalSnmpRelease = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalSnmpRelease.setStatus('mandatory')
bcamGlobalTrapPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32767))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamGlobalTrapPollInterval.setStatus('mandatory')
bcamGlobalFileApplTable = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(54, 54)).setFixedLength(54)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalFileApplTable.setStatus('mandatory')
bcamGlobalFileSocketHostTable = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(54, 54)).setFixedLength(54)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalFileSocketHostTable.setStatus('mandatory')
bcamGlobalFileProcTable = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(54, 54)).setFixedLength(54)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalFileProcTable.setStatus('mandatory')
bcamGlobalAccessProcTable = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("read", 1), ("update", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalAccessProcTable.setStatus('mandatory')
bcamGlobalHostName = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 2, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamGlobalHostName.setStatus('mandatory')
bcamMemoryClass3 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryClass3.setStatus('mandatory')
bcamMemoryClass4 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryClass4.setStatus('mandatory')
bcamMemoryLenLongEventSlot = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryLenLongEventSlot.setStatus('mandatory')
bcamMemoryOccLongEventSlot = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryOccLongEventSlot.setStatus('mandatory')
bcamMemoryLenShortEventSlot = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryLenShortEventSlot.setStatus('mandatory')
bcamMemoryOccShortEventSlot = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryOccShortEventSlot.setStatus('mandatory')
bcamMemoryLenTransParamSlot = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryLenTransParamSlot.setStatus('mandatory')
bcamMemoryOccTransParamSlot = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryOccTransParamSlot.setStatus('mandatory')
bcamMemoryLenSnmpParamSlot = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryLenSnmpParamSlot.setStatus('mandatory')
bcamMemoryOccSnmpParamSlot = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryOccSnmpParamSlot.setStatus('mandatory')
bcamMemoryLenApplCb = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryLenApplCb.setStatus('mandatory')
bcamMemoryOccApplCb = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryOccApplCb.setStatus('mandatory')
bcamMemoryLenEnaCb = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryLenEnaCb.setStatus('mandatory')
bcamMemoryOccEnaCb = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryOccEnaCb.setStatus('mandatory')
bcamMemoryLenExtApplCb = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryLenExtApplCb.setStatus('mandatory')
bcamMemoryOccExtApplCb = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryOccExtApplCb.setStatus('mandatory')
bcamMemoryLenShortResConn2 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryLenShortResConn2.setStatus('mandatory')
bcamMemoryOccShortResConn2 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryOccShortResConn2.setStatus('mandatory')
bcamMemoryLenLongResConn2 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryLenLongResConn2.setStatus('mandatory')
bcamMemoryOccLongResConn2 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryOccLongResConn2.setStatus('mandatory')
bcamMemoryLenShortPagConn1 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryLenShortPagConn1.setStatus('mandatory')
bcamMemoryOccShortPagConn1 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryOccShortPagConn1.setStatus('mandatory')
bcamMemoryLenSnmpConn = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryLenSnmpConn.setStatus('mandatory')
bcamMemoryOccSnmpConn = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryOccSnmpConn.setStatus('mandatory')
bcamMemoryLenLongPagConn1 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryLenLongPagConn1.setStatus('mandatory')
bcamMemoryOccLongPagConn1 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryOccLongPagConn1.setStatus('mandatory')
bcamMemoryLenShortPagConn2 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryLenShortPagConn2.setStatus('mandatory')
bcamMemoryOccShortPagConn2 = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryOccShortPagConn2.setStatus('mandatory')
bcamMemoryPoolInputCurrent = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolInputCurrent.setStatus('mandatory')
bcamMemoryPoolInputResume = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolInputResume.setStatus('mandatory')
bcamMemoryPoolInputMonMax = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolInputMonMax.setStatus('mandatory')
bcamMemoryPoolInputMonMin = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolInputMonMin.setStatus('mandatory')
bcamMemoryPoolInputLimit = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolInputLimit.setStatus('mandatory')
bcamMemoryPoolInputLimitTrap = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolInputLimitTrap.setStatus('mandatory')
bcamMemoryPoolMaxResident = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 35), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamMemoryPoolMaxResident.setStatus('mandatory')
bcamMemoryPoolMaxPageable = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 36), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bcamMemoryPoolMaxPageable.setStatus('mandatory')
bcamMemoryPoolInputMaxPageable = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolInputMaxPageable.setStatus('mandatory')
bcamMemoryPoolOutputCurrent = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolOutputCurrent.setStatus('mandatory')
bcamMemoryPoolOutputResume = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolOutputResume.setStatus('mandatory')
bcamMemoryPoolOutputMonMax = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolOutputMonMax.setStatus('mandatory')
bcamMemoryPoolOutputMonMin = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolOutputMonMin.setStatus('mandatory')
bcamMemoryPoolOutputLimit = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolOutputLimit.setStatus('mandatory')
bcamMemoryPoolOutputLimitTrap = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolOutputLimitTrap.setStatus('mandatory')
bcamMemoryPoolMaxCells = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolMaxCells.setStatus('mandatory')
bcamMemoryPoolOutputMaxPageable = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolOutputMaxPageable.setStatus('mandatory')
bcamMemoryPoolRoutingCurrent = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolRoutingCurrent.setStatus('mandatory')
bcamMemoryPoolRoutingLimit = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolRoutingLimit.setStatus('mandatory')
bcamMemoryPoolPageableCurrent = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolPageableCurrent.setStatus('mandatory')
bcamMemoryPoolPageableFixed = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryPoolPageableFixed.setStatus('mandatory')
bcamMemoryCellReqSucc = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryCellReqSucc.setStatus('mandatory')
bcamMemoryCellReqResOutExceed = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryCellReqResOutExceed.setStatus('mandatory')
bcamMemoryCellReqResInExceed = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryCellReqResInExceed.setStatus('mandatory')
bcamMemoryCellReqTempExceed = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryCellReqTempExceed.setStatus('mandatory')
bcamMemoryCellReqBitmapFull = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryCellReqBitmapFull.setStatus('mandatory')
bcamMemoryCellReqNoMemory = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryCellReqNoMemory.setStatus('mandatory')
bcamMemoryCellReqPagInExceed = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryCellReqPagInExceed.setStatus('mandatory')
bcamMemoryCellReqPagOutExceed = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 3, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamMemoryCellReqPagOutExceed.setStatus('mandatory')
bcamTraceSavingState = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("initiated", 1), ("active", 2), ("shutting", 4), ("passive", 8), ("waiting", 16), ("noSaving", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceSavingState.setStatus('mandatory')
bcamTraceFilename = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(54, 54)).setFixedLength(54)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceFilename.setStatus('mandatory')
bcamTraceMaxFilesize = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceMaxFilesize.setStatus('mandatory')
bcamTraceNumberFiles = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceNumberFiles.setStatus('mandatory')
bcamTraceAdmState = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("running", 1), ("save", 2), ("hold", 4), ("stopped", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceAdmState.setStatus('mandatory')
bcamTraceAdmNumberBuffer = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceAdmNumberBuffer.setStatus('mandatory')
bcamTraceAdmBufferLen = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceAdmBufferLen.setStatus('mandatory')
bcamTraceBasicState = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("running", 1), ("save", 2), ("hold", 4), ("stopped", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceBasicState.setStatus('mandatory')
bcamTraceBasicNumberBuffer = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceBasicNumberBuffer.setStatus('mandatory')
bcamTraceBasicBufferLen = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceBasicBufferLen.setStatus('mandatory')
bcamTraceConnState = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("running", 1), ("save", 2), ("hold", 4), ("stopped", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceConnState.setStatus('mandatory')
bcamTraceConnNumberBuffer = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceConnNumberBuffer.setStatus('mandatory')
bcamTraceConnBufferLen = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceConnBufferLen.setStatus('mandatory')
bcamTraceLocalState = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("running", 1), ("save", 2), ("hold", 4), ("stopped", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceLocalState.setStatus('mandatory')
bcamTraceLocalNumberBuffer = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceLocalNumberBuffer.setStatus('mandatory')
bcamTraceLocalBufferLen = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceLocalBufferLen.setStatus('mandatory')
bcamTraceMappingState = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("running", 1), ("save", 2), ("hold", 4), ("stopped", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceMappingState.setStatus('mandatory')
bcamTraceMappingNumberBuffer = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceMappingNumberBuffer.setStatus('mandatory')
bcamTraceMappingBufferLen = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceMappingBufferLen.setStatus('mandatory')
bcamTraceMgmtState = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("running", 1), ("save", 2), ("hold", 4), ("stopped", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceMgmtState.setStatus('mandatory')
bcamTraceMgmtNumberBuffer = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceMgmtNumberBuffer.setStatus('mandatory')
bcamTraceMgmtBufferLen = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceMgmtBufferLen.setStatus('mandatory')
bcamTraceNetState = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("running", 1), ("save", 2), ("hold", 4), ("stopped", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceNetState.setStatus('mandatory')
bcamTraceNetNumberBuffer = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceNetNumberBuffer.setStatus('mandatory')
bcamTraceNetBufferLen = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceNetBufferLen.setStatus('mandatory')
bcamTraceSnmpState = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("running", 1), ("save", 2), ("hold", 4), ("stopped", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceSnmpState.setStatus('mandatory')
bcamTraceSnmpNumberBuffer = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceSnmpNumberBuffer.setStatus('mandatory')
bcamTraceSnmpBufferLen = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceSnmpBufferLen.setStatus('mandatory')
bcamTraceTransState = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("running", 1), ("save", 2), ("hold", 4), ("stopped", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceTransState.setStatus('mandatory')
bcamTraceTransNumberBuffer = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceTransNumberBuffer.setStatus('mandatory')
bcamTraceTransBufferLen = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceTransBufferLen.setStatus('mandatory')
bcamTraceInfoState = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("running", 1), ("save", 2), ("hold", 4), ("stopped", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceInfoState.setStatus('mandatory')
bcamTraceInfoNumberBuffer = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceInfoNumberBuffer.setStatus('mandatory')
bcamTraceInfoBufferLen = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 4, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTraceInfoBufferLen.setStatus('mandatory')
bcamTsapCurrOpen = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapCurrOpen.setStatus('mandatory')
bcamTsapTotOpen = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTotOpen.setStatus('mandatory')
bcamTsapSendCall = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapSendCall.setStatus('mandatory')
bcamTsapSendByteHigh = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapSendByteHigh.setStatus('mandatory')
bcamTsapSendByteLow = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapSendByteLow.setStatus('mandatory')
bcamTsapRecvCall = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapRecvCall.setStatus('mandatory')
bcamTsapRecvByteHigh = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapRecvByteHigh.setStatus('mandatory')
bcamTsapRecvByteLow = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapRecvByteLow.setStatus('mandatory')
bcamTsapSendCallCless = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapSendCallCless.setStatus('mandatory')
bcamTsapSendByteClessHigh = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapSendByteClessHigh.setStatus('mandatory')
bcamTsapSendByteClessLow = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapSendByteClessLow.setStatus('mandatory')
bcamTsapRecvCallCless = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapRecvCallCless.setStatus('mandatory')
bcamTsapRecvByteClessHigh = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapRecvByteClessHigh.setStatus('mandatory')
bcamTsapRecvByteClessLow = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapRecvByteClessLow.setStatus('mandatory')
bcamTsapNumTable = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapNumTable.setStatus('mandatory')
bcamTsapMaxTsap = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapMaxTsap.setStatus('mandatory')
bcamTsapMaxTsapTask = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapMaxTsapTask.setStatus('mandatory')
bcamTsapMaxCepTsap = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapMaxCepTsap.setStatus('mandatory')
bcamTsapRejTsap = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapRejTsap.setStatus('mandatory')
bcamTsapRejTsapTask = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapRejTsapTask.setStatus('mandatory')
bcamTsapRejCepTsap = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapRejCepTsap.setStatus('mandatory')
bcamTsapTab = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22), )
if mibBuilder.loadTexts: bcamTsapTab.setStatus('mandatory')
bcamTsapTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1), ).setIndexNames((0, "BCAM-MIB", "bcamTsapTabNumbers"))
if mibBuilder.loadTexts: bcamTsapTabEntry.setStatus('mandatory')
bcamTsapTabNumbers = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabNumbers.setStatus('mandatory')
bcamTsapTabState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 8))).clone(namedValues=NamedValues(("opening", 1), ("open", 2), ("closing", 3), ("closed", 4), ("stopped", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabState.setStatus('mandatory')
bcamTsapTabDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabDuration.setStatus('mandatory')
bcamTsapTabDateApplEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabDateApplEnable.setStatus('mandatory')
bcamTsapTabTimeApplEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabTimeApplEnable.setStatus('mandatory')
bcamTsapTabTypName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("neaName", 1), ("socketName", 2), ("isoName", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabTypName.setStatus('mandatory')
bcamTsapTabName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 78))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabName.setStatus('mandatory')
bcamTsapTabPortnumber = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabPortnumber.setStatus('mandatory')
bcamTsapTabOsiTsel = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabOsiTsel.setStatus('mandatory')
bcamTsapTabNeaTsel = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabNeaTsel.setStatus('mandatory')
bcamTsapTabHost = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabHost.setStatus('mandatory')
bcamTsapTabDiagnostic = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabDiagnostic.setStatus('mandatory')
bcamTsapTabTsduSends = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabTsduSends.setStatus('mandatory')
bcamTsapTabByteSends = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabByteSends.setStatus('mandatory')
bcamTsapTabTsduReceiveds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabTsduReceiveds.setStatus('mandatory')
bcamTsapTabByteReceiveds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabByteReceiveds.setStatus('mandatory')
bcamTsapTabSendCallOverMaxs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabSendCallOverMaxs.setStatus('mandatory')
bcamTsapTabLetterTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabLetterTimeouts.setStatus('mandatory')
bcamTsapTabInWaitBuck1Hist = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabInWaitBuck1Hist.setStatus('mandatory')
bcamTsapTabInWaitBuck2Hist = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabInWaitBuck2Hist.setStatus('mandatory')
bcamTsapTabInWaitBuck3Hist = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabInWaitBuck3Hist.setStatus('mandatory')
bcamTsapTabInWaitBuck4Hist = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabInWaitBuck4Hist.setStatus('mandatory')
bcamTsapTabInWaitBuck5Hist = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabInWaitBuck5Hist.setStatus('mandatory')
bcamTsapTabReactBuck1Hist = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabReactBuck1Hist.setStatus('mandatory')
bcamTsapTabReactBuck2Hist = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabReactBuck2Hist.setStatus('mandatory')
bcamTsapTabReactBuck3Hist = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabReactBuck3Hist.setStatus('mandatory')
bcamTsapTabReactBuck4Hist = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabReactBuck4Hist.setStatus('mandatory')
bcamTsapTabReactBuck5Hist = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabReactBuck5Hist.setStatus('mandatory')
bcamTsapTabInWaitBuck1 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabInWaitBuck1.setStatus('mandatory')
bcamTsapTabInWaitBuck2 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabInWaitBuck2.setStatus('mandatory')
bcamTsapTabInWaitBuck3 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabInWaitBuck3.setStatus('mandatory')
bcamTsapTabInWaitBuck4 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabInWaitBuck4.setStatus('mandatory')
bcamTsapTabInWaitBuck5 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabInWaitBuck5.setStatus('mandatory')
bcamTsapTabReactBuck1 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabReactBuck1.setStatus('mandatory')
bcamTsapTabReactBuck2 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabReactBuck2.setStatus('mandatory')
bcamTsapTabReactBuck3 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabReactBuck3.setStatus('mandatory')
bcamTsapTabReactBuck4 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabReactBuck4.setStatus('mandatory')
bcamTsapTabReactBuck5 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabReactBuck5.setStatus('mandatory')
bcamTsapTabTsduSendHists = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabTsduSendHists.setStatus('mandatory')
bcamTsapTabByteSendHists = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabByteSendHists.setStatus('mandatory')
bcamTsapTabTsduReceivedHists = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabTsduReceivedHists.setStatus('mandatory')
bcamTsapTabByteReceivedHists = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabByteReceivedHists.setStatus('mandatory')
bcamTsapTabSendCallOverMaxHists = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabSendCallOverMaxHists.setStatus('mandatory')
bcamTsapTabLetterTimeoutHists = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabLetterTimeoutHists.setStatus('mandatory')
bcamTsapTabFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("nea", 1), ("iso", 2), ("streams", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabFunction.setStatus('mandatory')
bcamTsapTabCurrConn = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabCurrConn.setStatus('mandatory')
bcamTsapTabCloseConns = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabCloseConns.setStatus('mandatory')
bcamTsapTabClessSendBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabClessSendBytes.setStatus('mandatory')
bcamTsapTabClessRecvBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabClessRecvBytes.setStatus('mandatory')
bcamTsapTabClessSendCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabClessSendCalls.setStatus('mandatory')
bcamTsapTabClessRecvCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabClessRecvCalls.setStatus('mandatory')
bcamTsapTabOutbufTsdu = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabOutbufTsdu.setStatus('mandatory')
bcamTsapTabOutbufByte = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabOutbufByte.setStatus('mandatory')
bcamTsapTabInbufTsdu = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabInbufTsdu.setStatus('mandatory')
bcamTsapTabInbufByte = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabInbufByte.setStatus('mandatory')
bcamTsapTabOutbufTsduCless = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 56), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabOutbufTsduCless.setStatus('mandatory')
bcamTsapTabOutbufByteCless = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 57), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabOutbufByteCless.setStatus('mandatory')
bcamTsapTabInbufTsduCless = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 58), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabInbufTsduCless.setStatus('mandatory')
bcamTsapTabInbufByteCless = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 59), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabInbufByteCless.setStatus('mandatory')
bcamTsapTabClessTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 5, 22, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamTsapTabClessTimeout.setStatus('mandatory')
bcamCepCurrent = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepCurrent.setStatus('mandatory')
bcamCepClosed = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepClosed.setStatus('mandatory')
bcamCepNotClosed = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepNotClosed.setStatus('mandatory')
bcamCepRerouting = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepRerouting.setStatus('mandatory')
bcamCepActiveTrials = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepActiveTrials.setStatus('mandatory')
bcamCepActiveTrialFailures = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepActiveTrialFailures.setStatus('mandatory')
bcamCepPassiveTrials = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepPassiveTrials.setStatus('mandatory')
bcamCepPassiveTrialFailures = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepPassiveTrialFailures.setStatus('mandatory')
bcamCepNumTable = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepNumTable.setStatus('mandatory')
bcamCepTab = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10), )
if mibBuilder.loadTexts: bcamCepTab.setStatus('mandatory')
bcamCepTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1), ).setIndexNames((0, "BCAM-MIB", "bcamCepTabConnectionNumbers"))
if mibBuilder.loadTexts: bcamCepTabEntry.setStatus('mandatory')
bcamCepTabProtocolClass = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("local", 1), ("nea", 2), ("iso", 3), ("tcp", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabProtocolClass.setStatus('mandatory')
bcamCepTabConnectionNumbers = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabConnectionNumbers.setStatus('mandatory')
bcamCepTabDisconCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabDisconCommand.setStatus('mandatory')
bcamCepTabDisconInfoWord = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabDisconInfoWord.setStatus('mandatory')
bcamCepTabTsduSends = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabTsduSends.setStatus('mandatory')
bcamCepTabByteSends = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabByteSends.setStatus('mandatory')
bcamCepTabTsduReceiveds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabTsduReceiveds.setStatus('mandatory')
bcamCepTabByteReceiveds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabByteReceiveds.setStatus('mandatory')
bcamCepTabSendCallOverMaxs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabSendCallOverMaxs.setStatus('mandatory')
bcamCepTabLetterTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabLetterTimeouts.setStatus('mandatory')
bcamCepTabOutbufTsduSend = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabOutbufTsduSend.setStatus('mandatory')
bcamCepTabOutbufByteSend = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabOutbufByteSend.setStatus('mandatory')
bcamCepTabOutbufMaxTsduSend = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabOutbufMaxTsduSend.setStatus('mandatory')
bcamCepTabOutbufMaxByteSend = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabOutbufMaxByteSend.setStatus('mandatory')
bcamCepTabInbufTsdu = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabInbufTsdu.setStatus('mandatory')
bcamCepTabInbufByte = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabInbufByte.setStatus('mandatory')
bcamCepTabInbufMaxTsduReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabInbufMaxTsduReceived.setStatus('mandatory')
bcamCepTabInbufMaxByteReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabInbufMaxByteReceived.setStatus('mandatory')
bcamCepTabPacketsDataSends = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabPacketsDataSends.setStatus('mandatory')
bcamCepTabPacketsWindowSends = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabPacketsWindowSends.setStatus('mandatory')
bcamCepTabPacketsDataReceiveds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabPacketsDataReceiveds.setStatus('mandatory')
bcamCepTabPacketsWindowReceiveds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabPacketsWindowReceiveds.setStatus('mandatory')
bcamCepTabGlobalZeroWindowSends = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabGlobalZeroWindowSends.setStatus('mandatory')
bcamCepTabConnectionZeroWindowSends = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabConnectionZeroWindowSends.setStatus('mandatory')
bcamCepTabZeroWindowReceiveds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabZeroWindowReceiveds.setStatus('mandatory')
bcamCepTabRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabRoundTripTime.setStatus('mandatory')
bcamCepTabRetransmitPacketsSends = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabRetransmitPacketsSends.setStatus('mandatory')
bcamCepTabDetectedGapsReceiveds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabDetectedGapsReceiveds.setStatus('mandatory')
bcamCepTabDuplicatePacketsReceiveds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabDuplicatePacketsReceiveds.setStatus('mandatory')
bcamCepTabErrorPacketsReceiveds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabErrorPacketsReceiveds.setStatus('mandatory')
bcamCepTabConnectionState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("opening", 1), ("open", 2), ("closing", 3), ("closed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabConnectionState.setStatus('mandatory')
bcamCepTabApplicationNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabApplicationNumber.setStatus('mandatory')
bcamCepTabRouteNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabRouteNumber.setStatus('mandatory')
bcamCepTabDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabDuration.setStatus('mandatory')
bcamCepTabDateConnectionEstablishment = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabDateConnectionEstablishment.setStatus('mandatory')
bcamCepTabTimeConnectionEstablishment = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabTimeConnectionEstablishment.setStatus('mandatory')
bcamCepTabTypPartnerName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("neaName", 1), ("socketName", 2), ("isoName", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabTypPartnerName.setStatus('mandatory')
bcamCepTabPartnerName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 38), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 78))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabPartnerName.setStatus('mandatory')
bcamCepTabLocalName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 39), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 78))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabLocalName.setStatus('mandatory')
bcamCepTabTypeL4Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("portNumber", 1), ("neaTsel", 2), ("osiTsel", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabTypeL4Addr.setStatus('mandatory')
bcamCepTabL4AddrPartner = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 41), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabL4AddrPartner.setStatus('mandatory')
bcamCepTabL4AddrLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 42), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabL4AddrLocal.setStatus('mandatory')
bcamCepTabPartnerEndsystem = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabPartnerEndsystem.setStatus('mandatory')
bcamCepTabInWaitBuck1 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabInWaitBuck1.setStatus('mandatory')
bcamCepTabInWaitBuck2 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabInWaitBuck2.setStatus('mandatory')
bcamCepTabInWaitBuck3 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabInWaitBuck3.setStatus('mandatory')
bcamCepTabInWaitBuck4 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabInWaitBuck4.setStatus('mandatory')
bcamCepTabInWaitBuck5 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabInWaitBuck5.setStatus('mandatory')
bcamCepTabReactBuck1 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabReactBuck1.setStatus('mandatory')
bcamCepTabReactBuck2 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabReactBuck2.setStatus('mandatory')
bcamCepTabReactBuck3 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabReactBuck3.setStatus('mandatory')
bcamCepTabReactBuck4 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabReactBuck4.setStatus('mandatory')
bcamCepTabReactBuck5 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 53), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabReactBuck5.setStatus('mandatory')
bcamCepTabOutProcBuck1 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 54), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabOutProcBuck1.setStatus('mandatory')
bcamCepTabOutProcBuck2 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabOutProcBuck2.setStatus('mandatory')
bcamCepTabOutProcBuck3 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabOutProcBuck3.setStatus('mandatory')
bcamCepTabOutProcBuck4 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabOutProcBuck4.setStatus('mandatory')
bcamCepTabOutProcBuck5 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabOutProcBuck5.setStatus('mandatory')
bcamCepTabInProcBuck1 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 59), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabInProcBuck1.setStatus('mandatory')
bcamCepTabInProcBuck2 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabInProcBuck2.setStatus('mandatory')
bcamCepTabInProcBuck3 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 61), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabInProcBuck3.setStatus('mandatory')
bcamCepTabInProcBuck4 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 62), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabInProcBuck4.setStatus('mandatory')
bcamCepTabInProcBuck5 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabInProcBuck5.setStatus('mandatory')
bcamCepTabMaxSendLen = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabMaxSendLen.setStatus('mandatory')
bcamCepTabMaxIndLen = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabMaxIndLen.setStatus('mandatory')
bcamCepTabLocalEndsystem = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 6, 10, 1, 66), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamCepTabLocalEndsystem.setStatus('mandatory')
bcamRouteNumTable = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteNumTable.setStatus('mandatory')
bcamRouteActive = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteActive.setStatus('mandatory')
bcamRouteArpDefault = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("quiet", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteArpDefault.setStatus('mandatory')
bcamRouteRoutingReqIp = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteRoutingReqIp.setStatus('mandatory')
bcamRouteRoutingReqIso = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteRoutingReqIso.setStatus('mandatory')
bcamRouteRoutingReqNea = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteRoutingReqNea.setStatus('mandatory')
bcamRouteSuccRoutingReqIp = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteSuccRoutingReqIp.setStatus('mandatory')
bcamRouteSuccRoutingReqIso = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteSuccRoutingReqIso.setStatus('mandatory')
bcamRouteSuccRoutingReqNea = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteSuccRoutingReqNea.setStatus('mandatory')
bcamRouteTab = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10), )
if mibBuilder.loadTexts: bcamRouteTab.setStatus('mandatory')
bcamRouteTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1), ).setIndexNames((0, "BCAM-MIB", "bcamRouteTabNumbers"))
if mibBuilder.loadTexts: bcamRouteTabEntry.setStatus('mandatory')
bcamRouteTabNumbers = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabNumbers.setStatus('mandatory')
bcamRouteTabName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabName.setStatus('mandatory')
bcamRouteTabNumNeaConn = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabNumNeaConn.setStatus('mandatory')
bcamRouteTabNumIsoConn = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabNumIsoConn.setStatus('mandatory')
bcamRouteTabMaxNeaConn = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabMaxNeaConn.setStatus('mandatory')
bcamRouteTabMaxIsoConn = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabMaxIsoConn.setStatus('mandatory')
bcamRouteTabBadNeaElems = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabBadNeaElems.setStatus('mandatory')
bcamRouteTabBadIsoElems = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabBadIsoElems.setStatus('mandatory')
bcamRouteTabMaxL4Conn = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabMaxL4Conn.setStatus('mandatory')
bcamRouteTabMaxUnackTpdu = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabMaxUnackTpdu.setStatus('mandatory')
bcamRouteTabRouteNetTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("gatewayRouter", 1), ("neaRouter", 2), ("intfIpRouter", 4), ("int0Router", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabRouteNetTyp.setStatus('mandatory')
bcamRouteTabNumberIsoIpRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabNumberIsoIpRouter.setStatus('mandatory')
bcamRouteTabNumberNeaRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabNumberNeaRouter.setStatus('mandatory')
bcamRouteTabNumberGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabNumberGateway.setStatus('mandatory')
bcamRouteTabFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("onlyServerAccess", 1), ("transportRoute", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabFunction.setStatus('mandatory')
bcamRouteTabProcNetTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("gatewayProc", 1), ("neaProc", 2), ("isoIpProc", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabProcNetTyp.setStatus('mandatory')
bcamRouteTabMaxTsduLen = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabMaxTsduLen.setStatus('mandatory')
bcamRouteTabNameEndsystem = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabNameEndsystem.setStatus('mandatory')
bcamRouteTabIso4WindowTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabIso4WindowTimer.setStatus('mandatory')
bcamRouteTabIso4RetransTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabIso4RetransTimer.setStatus('mandatory')
bcamRouteTabAckTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabAckTimer.setStatus('mandatory')
bcamRouteTabErrorRecovTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabErrorRecovTimer.setStatus('mandatory')
bcamRouteTabRejectTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabRejectTimer.setStatus('mandatory')
bcamRouteTabExpedRetransTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabExpedRetransTimer.setStatus('mandatory')
bcamRouteTabNameGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabNameGateway.setStatus('mandatory')
bcamRouteTabNameX25Station = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabNameX25Station.setStatus('mandatory')
bcamRouteTabL3InputProfil = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nea", 1), ("int0", 2), ("intf", 3), ("gateway", 4), ("ip", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabL3InputProfil.setStatus('mandatory')
bcamRouteTabTransState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("waitForTransferInit", 1), ("waitForReadyToTransfer", 2), ("ready", 3), ("notReady", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabTransState.setStatus('mandatory')
bcamRouteTabOption = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("delayedAckAllowed", 1), ("optimalSegmentSizeOn", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabOption.setStatus('mandatory')
bcamRouteTabTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("direct", 1), ("remote", 2), ("node", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabTyp.setStatus('mandatory')
bcamRouteTabUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16))).clone(namedValues=NamedValues(("gatewayRoute", 1), ("intfIpRouter", 2), ("neaRouter", 4), ("int0Router", 8), ("noIntermediate", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabUsage.setStatus('mandatory')
bcamRouteTabL3Subprofile = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("rfc1042", 1), ("netConnLess", 2), ("neaNetConn", 4), ("neattNetConn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabL3Subprofile.setStatus('mandatory')
bcamRouteTabCommandState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("included", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabCommandState.setStatus('mandatory')
bcamRouteTabChangeState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16))).clone(namedValues=NamedValues(("dynamic", 1), ("defByProtocol", 2), ("switchByProtocol", 4), ("changed", 8), ("generated", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabChangeState.setStatus('mandatory')
bcamRouteTabIso9542 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("eshReceived", 1), ("ishReceived", 2), ("iso8473QueryReceived", 4), ("refreshRequired", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabIso9542.setStatus('mandatory')
bcamRouteTabMaxNetLength = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ethernet", 1), ("fddi", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabMaxNetLength.setStatus('mandatory')
bcamRouteTabState2 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16))).clone(namedValues=NamedValues(("testing", 1), ("working", 2), ("waitAddrResolution", 4), ("lifeSupervisionFailed", 8), ("silent", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabState2.setStatus('mandatory')
bcamRouteTabDeactReason = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("flush", 1), ("supposedDown", 2), ("noArpReply", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabDeactReason.setStatus('mandatory')
bcamRouteTabSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16))).clone(namedValues=NamedValues(("localRemote", 1), ("remoteLocal", 2), ("remoteRemote", 4), ("lsapChanged", 8), ("lanAddrChanged", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabSwitchType.setStatus('mandatory')
bcamRouteTabReasonCreation = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("incomingData", 1), ("outgoingData", 2), ("routingProtocol", 4), ("routingData", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabReasonCreation.setStatus('mandatory')
bcamRouteTabOrigLanAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 41), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabOrigLanAddress.setStatus('mandatory')
bcamRouteTabLanAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 42), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabLanAddress.setStatus('mandatory')
bcamRouteTabTypAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("nea", 1), ("intf", 2), ("streams", 3), ("int0", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabTypAddress.setStatus('mandatory')
bcamRouteTabLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 44), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabLocalAddr.setStatus('mandatory')
bcamRouteTabRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 45), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabRemoteAddr.setStatus('mandatory')
bcamRouteTabOutPacketsDatas = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabOutPacketsDatas.setStatus('mandatory')
bcamRouteTabOutPacketsFlowControls = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabOutPacketsFlowControls.setStatus('mandatory')
bcamRouteTabInPacketsDatas = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabInPacketsDatas.setStatus('mandatory')
bcamRouteTabInPacketsFlowControls = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabInPacketsFlowControls.setStatus('mandatory')
bcamRouteTabOutRetransPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabOutRetransPackets.setStatus('mandatory')
bcamRouteTabInDetectedGaps = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabInDetectedGaps.setStatus('mandatory')
bcamRouteTabInDuplicatedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabInDuplicatedPackets.setStatus('mandatory')
bcamRouteTabInIncorrectPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabInIncorrectPackets.setStatus('mandatory')
bcamRouteTabRoundTripTimeClosed = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 54), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabRoundTripTimeClosed.setStatus('mandatory')
bcamRouteTabRoundTripTimeCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabRoundTripTimeCurrent.setStatus('mandatory')
bcamRouteTabArpReqSend = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabArpReqSend.setStatus('mandatory')
bcamRouteTabArpRepSend = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabArpRepSend.setStatus('mandatory')
bcamRouteTabArpReqRec = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabArpReqRec.setStatus('mandatory')
bcamRouteTabArpRepRec = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabArpRepRec.setStatus('mandatory')
bcamRouteTabIcmpReq = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabIcmpReq.setStatus('mandatory')
bcamRouteTabIcmpReply = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabIcmpReply.setStatus('mandatory')
bcamRouteTabIcmpRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabIcmpRedirect.setStatus('mandatory')
bcamRouteTabSwitched = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabSwitched.setStatus('mandatory')
bcamRouteTabDown = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabDown.setStatus('mandatory')
bcamRouteTabOspfHello = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabOspfHello.setStatus('mandatory')
bcamRouteTabPacketNoConn = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 66), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabPacketNoConn.setStatus('mandatory')
bcamRouteTabPacketInternDiscon = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 67), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabPacketInternDiscon.setStatus('mandatory')
bcamRouteTabPacketBadProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 68), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabPacketBadProtocol.setStatus('mandatory')
bcamRouteTabConnReqOut = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 69), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabConnReqOut.setStatus('mandatory')
bcamRouteTabConnReqOutAck = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 70), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabConnReqOutAck.setStatus('mandatory')
bcamRouteTabConnReqOutRej = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 71), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabConnReqOutRej.setStatus('mandatory')
bcamRouteTabConnReqIn = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 72), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabConnReqIn.setStatus('mandatory')
bcamRouteTabConnReqInAck = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 73), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabConnReqInAck.setStatus('mandatory')
bcamRouteTabConnReqInRej = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 74), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabConnReqInRej.setStatus('mandatory')
bcamRouteTabDisconnOut = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 75), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabDisconnOut.setStatus('mandatory')
bcamRouteTabDisconnOutAck = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 76), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabDisconnOutAck.setStatus('mandatory')
bcamRouteTabDisconnIn = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 77), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabDisconnIn.setStatus('mandatory')
bcamRouteTabDisconnInAck = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 78), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabDisconnInAck.setStatus('mandatory')
bcamRouteTabNumberLink = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 79), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabNumberLink.setStatus('mandatory')
bcamRouteTabArpFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 80), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("quiet", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabArpFlag.setStatus('mandatory')
bcamRouteTabNsduLen = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabNsduLen.setStatus('mandatory')
bcamRouteTabMinNsduLen = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 82), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabMinNsduLen.setStatus('mandatory')
bcamRouteTabMaxNsduLen = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 7, 10, 1, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouteTabMaxNsduLen.setStatus('mandatory')
bcamIfNumTable = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfNumTable.setStatus('mandatory')
bcamIfTab = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2), )
if mibBuilder.loadTexts: bcamIfTab.setStatus('mandatory')
bcamIfTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1), ).setIndexNames((0, "BCAM-MIB", "bcamIfTabNumbers"))
if mibBuilder.loadTexts: bcamIfTabEntry.setStatus('mandatory')
bcamIfTabNumbers = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabNumbers.setStatus('mandatory')
bcamIfTabName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabName.setStatus('mandatory')
bcamIfTabProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("nealkp", 1), ("nealke", 2), ("nealkeS", 3), ("nealkh", 4), ("llc1", 5), ("sinix", 6), ("fddi", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabProfile.setStatus('mandatory')
bcamIfTabMnemonicWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMnemonicWrite.setStatus('mandatory')
bcamIfTabMnemonicRead = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMnemonicRead.setStatus('mandatory')
bcamIfTabLanAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 6), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabLanAddress.setStatus('mandatory')
bcamIfTabConfigUpdate = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("updateForbidden", 1), ("primaryRequested", 2), ("updateAllowed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabConfigUpdate.setStatus('mandatory')
bcamIfTabMaxLpdu = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1514, 4494, 65535, 65549, 4113, 16392))).clone(namedValues=NamedValues(("ethernet", 1514), ("fddi", 4494), ("atm", 65535), ("nealkh", 65549), ("nealkp", 4113), ("maxReass", 16392)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMaxLpdu.setStatus('mandatory')
bcamIfTabL2Monitoring = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabL2Monitoring.setStatus('mandatory')
bcamIfTabDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("esconCtc", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabDevice.setStatus('mandatory')
bcamIfTabAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("included", 1), ("active", 2), ("excluded", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabAdminState.setStatus('mandatory')
bcamIfTabCurrentState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("waitForAct", 1), ("working", 2), ("waitForDeact", 4), ("none", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabCurrentState.setStatus('mandatory')
bcamIfTabMode = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 8, 4, 2, 1))).clone(namedValues=NamedValues(("stopModeOn", 16), ("slowPollOn", 8), ("shortWaitOn", 4), ("multicastOn", 2), ("broadcastOn", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMode.setStatus('mandatory')
bcamIfTabPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabPortName.setStatus('mandatory')
bcamIfTabLenTraceOut = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabLenTraceOut.setStatus('mandatory')
bcamIfTabLenTraceIn = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabLenTraceIn.setStatus('mandatory')
bcamIfTabNumRouteSwitchings = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabNumRouteSwitchings.setStatus('mandatory')
bcamIfTabTimeLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabTimeLastChange.setStatus('mandatory')
bcamIfTabMnemonicDiag = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMnemonicDiag.setStatus('mandatory')
bcamIfTabNumMulticastAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabNumMulticastAddr.setStatus('mandatory')
bcamIfTabMulticastAddr1 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 21), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMulticastAddr1.setStatus('mandatory')
bcamIfTabMulticastAddr2 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 22), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMulticastAddr2.setStatus('mandatory')
bcamIfTabMulticastAddr3 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 23), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMulticastAddr3.setStatus('mandatory')
bcamIfTabMulticastAddr4 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 24), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMulticastAddr4.setStatus('mandatory')
bcamIfTabMulticastAddr5 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 25), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMulticastAddr5.setStatus('mandatory')
bcamIfTabMulticastAddr6 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 26), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMulticastAddr6.setStatus('mandatory')
bcamIfTabMulticastAddr7 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 27), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMulticastAddr7.setStatus('mandatory')
bcamIfTabMulticastAddr8 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 28), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMulticastAddr8.setStatus('mandatory')
bcamIfTabMulticastAddr9 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 29), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMulticastAddr9.setStatus('mandatory')
bcamIfTabMulticastAddr10 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 30), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMulticastAddr10.setStatus('mandatory')
bcamIfTabNumNeaAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabNumNeaAddress.setStatus('mandatory')
bcamIfTabNeaAddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 32), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabNeaAddress1.setStatus('mandatory')
bcamIfTabNeaAddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 33), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabNeaAddress2.setStatus('mandatory')
bcamIfTabNeaAddress3 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 34), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabNeaAddress3.setStatus('mandatory')
bcamIfTabNeaAddress4 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 35), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabNeaAddress4.setStatus('mandatory')
bcamIfTabNeaAddress5 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 36), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabNeaAddress5.setStatus('mandatory')
bcamIfTabNeaAddress6 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 37), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabNeaAddress6.setStatus('mandatory')
bcamIfTabNumIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabNumIpAddress.setStatus('mandatory')
bcamIfTabIpAddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 39), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabIpAddress1.setStatus('mandatory')
bcamIfTabIpAddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 40), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabIpAddress2.setStatus('mandatory')
bcamIfTabIpAddress3 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 41), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabIpAddress3.setStatus('mandatory')
bcamIfTabIpAddress4 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 42), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabIpAddress4.setStatus('mandatory')
bcamIfTabIpAddress5 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 43), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabIpAddress5.setStatus('mandatory')
bcamIfTabIpAddress6 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 44), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabIpAddress6.setStatus('mandatory')
bcamIfTabNumInt0Address = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabNumInt0Address.setStatus('mandatory')
bcamIfTabInt0Address1 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 46), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabInt0Address1.setStatus('mandatory')
bcamIfTabInt0Address2 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 47), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabInt0Address2.setStatus('mandatory')
bcamIfTabInt0Address3 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 48), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabInt0Address3.setStatus('mandatory')
bcamIfTabInt0Address4 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 49), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabInt0Address4.setStatus('mandatory')
bcamIfTabInt0Address5 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 50), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabInt0Address5.setStatus('mandatory')
bcamIfTabInt0Address6 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 51), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabInt0Address6.setStatus('mandatory')
bcamIfTabNumIntfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabNumIntfAddress.setStatus('mandatory')
bcamIfTabIntfAddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 53), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabIntfAddress1.setStatus('mandatory')
bcamIfTabIntfAddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 54), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabIntfAddress2.setStatus('mandatory')
bcamIfTabIntfAddress3 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 55), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabIntfAddress3.setStatus('mandatory')
bcamIfTabIntfAddress4 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 56), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabIntfAddress4.setStatus('mandatory')
bcamIfTabIntfAddress5 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 57), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabIntfAddress5.setStatus('mandatory')
bcamIfTabIntfAddress6 = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 58), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabIntfAddress6.setStatus('mandatory')
bcamIfTabBytesOutHighs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabBytesOutHighs.setStatus('mandatory')
bcamIfTabBytesOutLows = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabBytesOutLows.setStatus('mandatory')
bcamIfTabBytesInHighs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabBytesInHighs.setStatus('mandatory')
bcamIfTabBytesInLows = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabBytesInLows.setStatus('mandatory')
bcamIfTabIOsOutHighs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabIOsOutHighs.setStatus('mandatory')
bcamIfTabIOsOutLows = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabIOsOutLows.setStatus('mandatory')
bcamIfTabIOsInHighs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabIOsInHighs.setStatus('mandatory')
bcamIfTabIOsInLows = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabIOsInLows.setStatus('mandatory')
bcamIfTabOutputStops = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 67), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabOutputStops.setStatus('mandatory')
bcamIfTabInputStops = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 68), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabInputStops.setStatus('mandatory')
bcamIfTabIOErrorOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabIOErrorOuts.setStatus('mandatory')
bcamIfTabIOErrorIns = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 70), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabIOErrorIns.setStatus('mandatory')
bcamIfTabPacketsNotReceiveds = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 71), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabPacketsNotReceiveds.setStatus('mandatory')
bcamIfTabInPacketsLanHighs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 72), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabInPacketsLanHighs.setStatus('mandatory')
bcamIfTabInPacketsLanLows = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 73), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabInPacketsLanLows.setStatus('mandatory')
bcamIfTabOutPacketsLanHighs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 74), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabOutPacketsLanHighs.setStatus('mandatory')
bcamIfTabOutPacketsLanLows = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 75), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabOutPacketsLanLows.setStatus('mandatory')
bcamIfTabUnicastInHighs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 76), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabUnicastInHighs.setStatus('mandatory')
bcamIfTabUnicastInLows = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 77), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabUnicastInLows.setStatus('mandatory')
bcamIfTabUnicastOutHighs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 78), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabUnicastOutHighs.setStatus('mandatory')
bcamIfTabUnicastOutLows = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 79), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabUnicastOutLows.setStatus('mandatory')
bcamIfTabMulticastInHighs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 80), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMulticastInHighs.setStatus('mandatory')
bcamIfTabMulticastInLows = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 81), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMulticastInLows.setStatus('mandatory')
bcamIfTabMulticastOutHighs = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 82), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMulticastOutHighs.setStatus('mandatory')
bcamIfTabMulticastOutLows = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 83), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabMulticastOutLows.setStatus('mandatory')
bcamIfTabErrorPacketIns = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 84), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabErrorPacketIns.setStatus('mandatory')
bcamIfTabErrorPacketOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 85), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabErrorPacketOuts.setStatus('mandatory')
bcamIfTabDiscardIns = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 86), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabDiscardIns.setStatus('mandatory')
bcamIfTabDiscardOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 87), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabDiscardOuts.setStatus('mandatory')
bcamIfTabUnknownProtoIns = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 88), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabUnknownProtoIns.setStatus('mandatory')
bcamIfTabTraceState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 89), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("running", 1), ("save", 2), ("hold", 4), ("stopped", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabTraceState.setStatus('mandatory')
bcamIfTabTraceNumberBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 90), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabTraceNumberBuffer.setStatus('mandatory')
bcamIfTabTraceBufferLen = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 8, 2, 1, 91), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 16384))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamIfTabTraceBufferLen.setStatus('mandatory')
bcamRouterNumTable = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 9, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouterNumTable.setStatus('mandatory')
bcamRouterTab = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 17, 9, 2), )
if mibBuilder.loadTexts: bcamRouterTab.setStatus('mandatory')
bcamRouterTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 17, 9, 2, 1), ).setIndexNames((0, "BCAM-MIB", "bcamRouterTabIpLow"), (0, "BCAM-MIB", "bcamRouterTabIpHigh"), (0, "BCAM-MIB", "bcamRouterTabIpLocal"))
if mibBuilder.loadTexts: bcamRouterTabEntry.setStatus('mandatory')
bcamRouterTabIpLow = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 9, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouterTabIpLow.setStatus('mandatory')
bcamRouterTabIpHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 9, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouterTabIpHigh.setStatus('mandatory')
bcamRouterTabIpLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 9, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouterTabIpLocal.setStatus('mandatory')
bcamRouterTabIpRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 9, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouterTabIpRouter.setStatus('mandatory')
bcamRouterTabNumRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 9, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamRouterTabNumRouter.setStatus('mandatory')
bcamHostNumTable = MibScalar((1, 3, 6, 1, 4, 1, 231, 2, 17, 10, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamHostNumTable.setStatus('mandatory')
bcamHostTab = MibTable((1, 3, 6, 1, 4, 1, 231, 2, 17, 10, 2), )
if mibBuilder.loadTexts: bcamHostTab.setStatus('mandatory')
bcamHostTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 231, 2, 17, 10, 2, 1), ).setIndexNames((0, "BCAM-MIB", "bcamHostTabNumber"))
if mibBuilder.loadTexts: bcamHostTabEntry.setStatus('mandatory')
bcamHostTabNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 10, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamHostTabNumber.setStatus('mandatory')
bcamHostTabName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 10, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamHostTabName.setStatus('mandatory')
bcamHostTabSocketName = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 10, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamHostTabSocketName.setStatus('mandatory')
bcamHostTabTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 10, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("virtual", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamHostTabTyp.setStatus('mandatory')
bcamHostTabState = MibTableColumn((1, 3, 6, 1, 4, 1, 231, 2, 17, 10, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("included", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bcamHostTabState.setStatus('mandatory')
mibBuilder.exportSymbols("BCAM-MIB", bcamTraceInfoBufferLen=bcamTraceInfoBufferLen, bcamMemoryPoolInputMonMin=bcamMemoryPoolInputMonMin, bcamCepTabInProcBuck4=bcamCepTabInProcBuck4, bcamRouteTabMaxL4Conn=bcamRouteTabMaxL4Conn, bcamIfTabNeaAddress6=bcamIfTabNeaAddress6, bcamTsapTabName=bcamTsapTabName, bcamRouteTabDown=bcamRouteTabDown, bcamRouteTabRoundTripTimeCurrent=bcamRouteTabRoundTripTimeCurrent, bcamIfTabNeaAddress2=bcamIfTabNeaAddress2, bcamRouterTabEntry=bcamRouterTabEntry, bcamTsapRecvByteLow=bcamTsapRecvByteLow, bcamGlobalFileProcTable=bcamGlobalFileProcTable, bcamMemoryOccTransParamSlot=bcamMemoryOccTransParamSlot, bcamMemoryLenShortEventSlot=bcamMemoryLenShortEventSlot, bcamTsapTabDiagnostic=bcamTsapTabDiagnostic, bcamTsapTabTimeApplEnable=bcamTsapTabTimeApplEnable, bcamHostTab=bcamHostTab, bcamTraceAdmNumberBuffer=bcamTraceAdmNumberBuffer, bcamIfTabNeaAddress1=bcamIfTabNeaAddress1, bcamCepTabErrorPacketsReceiveds=bcamCepTabErrorPacketsReceiveds, bcamIfTabIpAddress3=bcamIfTabIpAddress3, bcamTsapTabReactBuck5Hist=bcamTsapTabReactBuck5Hist, bcamTraceNetBufferLen=bcamTraceNetBufferLen, bcamMemoryPoolOutputMonMax=bcamMemoryPoolOutputMonMax, bcamTrap=bcamTrap, bcamTsapTabInWaitBuck3=bcamTsapTabInWaitBuck3, bcamRouteTabTyp=bcamRouteTabTyp, bcamGlobalNumBitmap=bcamGlobalNumBitmap, bcamTsapTabSendCallOverMaxs=bcamTsapTabSendCallOverMaxs, bcamCepTabLocalEndsystem=bcamCepTabLocalEndsystem, bcamRouteTabNumberGateway=bcamRouteTabNumberGateway, bcamTraceMappingNumberBuffer=bcamTraceMappingNumberBuffer, bcamTsapCurrOpen=bcamTsapCurrOpen, bcamRouteTabConnReqOutRej=bcamRouteTabConnReqOutRej, bcamMemoryPoolRoutingCurrent=bcamMemoryPoolRoutingCurrent, bcamCepTabMaxSendLen=bcamCepTabMaxSendLen, bcamGlobalEsCreationIso=bcamGlobalEsCreationIso, bcamRouteTabConnReqOutAck=bcamRouteTabConnReqOutAck, bcamRouteTabRemoteAddr=bcamRouteTabRemoteAddr, bcamTsapRejCepTsap=bcamTsapRejCepTsap, bcamTsapTabOsiTsel=bcamTsapTabOsiTsel, bcamTsapMaxTsapTask=bcamTsapMaxTsapTask, bcamCepRerouting=bcamCepRerouting, bcamRouteTabOutPacketsDatas=bcamRouteTabOutPacketsDatas, bcamGlobalAccessProcTable=bcamGlobalAccessProcTable, bcamTsapRecvByteClessLow=bcamTsapRecvByteClessLow, bcamTraceMappingState=bcamTraceMappingState, bcamTraceAdmBufferLen=bcamTraceAdmBufferLen, bcamRouteTabSwitchType=bcamRouteTabSwitchType, bcamHostTabTyp=bcamHostTabTyp, bcamTsapSendByteHigh=bcamTsapSendByteHigh, bcamIfTabMulticastOutHighs=bcamIfTabMulticastOutHighs, bcamMemoryPoolInputLimit=bcamMemoryPoolInputLimit, bcamRouteTabOutRetransPackets=bcamRouteTabOutRetransPackets, bcamHostTabNumber=bcamHostTabNumber, bcamRouteTabOspfHello=bcamRouteTabOspfHello, bcamTraceFilename=bcamTraceFilename, bcamIfTabNumbers=bcamIfTabNumbers, bcamTsapTabReactBuck4Hist=bcamTsapTabReactBuck4Hist, bcamRouteTabNsduLen=bcamRouteTabNsduLen, bcamMemoryLenSnmpConn=bcamMemoryLenSnmpConn, bcamIfTabIpAddress5=bcamIfTabIpAddress5, bcamTsapMaxTsap=bcamTsapMaxTsap, bcamMemoryCellReqTempExceed=bcamMemoryCellReqTempExceed, bcamTraceConnNumberBuffer=bcamTraceConnNumberBuffer, bcamIfTabInputStops=bcamIfTabInputStops, bcamCepTabOutbufMaxTsduSend=bcamCepTabOutbufMaxTsduSend, bcamMemoryLenShortPagConn2=bcamMemoryLenShortPagConn2, bcamTsapSendByteClessLow=bcamTsapSendByteClessLow, bcamMemoryLenLongPagConn1=bcamMemoryLenLongPagConn1, bcamCepTabConnectionNumbers=bcamCepTabConnectionNumbers, bcamGlobalInProcLimit1=bcamGlobalInProcLimit1, bcamIfTabEntry=bcamIfTabEntry, bcamIfTabMulticastAddr4=bcamIfTabMulticastAddr4, bcamMemoryLenTransParamSlot=bcamMemoryLenTransParamSlot, bcamIfTabIntfAddress3=bcamIfTabIntfAddress3, bcamRouteTabPacketInternDiscon=bcamRouteTabPacketInternDiscon, bcamIfTabErrorPacketOuts=bcamIfTabErrorPacketOuts, bcamGlobalFileApplTable=bcamGlobalFileApplTable, bcamRouteTabNameEndsystem=bcamRouteTabNameEndsystem, bcamRouteTabIcmpReq=bcamRouteTabIcmpReq, bcamRouteTabL3Subprofile=bcamRouteTabL3Subprofile, bcamTraceMgmtState=bcamTraceMgmtState, bcamTsapRecvCall=bcamTsapRecvCall, bcamIfTabUnicastInLows=bcamIfTabUnicastInLows, bcamTsapTabTsduSends=bcamTsapTabTsduSends, bcamGlobalOutProcSet=bcamGlobalOutProcSet, bcamMemoryCellReqPagInExceed=bcamMemoryCellReqPagInExceed, bcamIfTabIpAddress1=bcamIfTabIpAddress1, bcamTsapTabReactBuck3Hist=bcamTsapTabReactBuck3Hist, bcamIfTabOutPacketsLanLows=bcamIfTabOutPacketsLanLows, bcamTraceTransBufferLen=bcamTraceTransBufferLen, bcamRouteTabInDetectedGaps=bcamRouteTabInDetectedGaps, bcamRouteTabIso4WindowTimer=bcamRouteTabIso4WindowTimer, bcamRoute=bcamRoute, bcamCepTabOutProcBuck3=bcamCepTabOutProcBuck3, bcamTrapOutPoolOverCurrent=bcamTrapOutPoolOverCurrent, bcamIfTabDiscardOuts=bcamIfTabDiscardOuts, bcamTrapLinkDown=bcamTrapLinkDown, bcamIfTabIOsOutLows=bcamIfTabIOsOutLows, bcamCepNotClosed=bcamCepNotClosed, bcamTrapString=bcamTrapString, bcamTsapRecvByteClessHigh=bcamTsapRecvByteClessHigh, bcamRouteTabOption=bcamRouteTabOption, bcamRouteTabNameX25Station=bcamRouteTabNameX25Station, bcamRouteTabCommandState=bcamRouteTabCommandState, bcamCepTabInbufMaxByteReceived=bcamCepTabInbufMaxByteReceived, bcamRouteTabNumIsoConn=bcamRouteTabNumIsoConn, bcamMemoryPoolRoutingLimit=bcamMemoryPoolRoutingLimit, bcamIfTabUnicastInHighs=bcamIfTabUnicastInHighs, bcamTsapRejTsap=bcamTsapRejTsap, bcamGlobalOutProcLimit2=bcamGlobalOutProcLimit2, sni=sni, bcamRouteSuccRoutingReqIso=bcamRouteSuccRoutingReqIso, bcamTsapTabInbufByte=bcamTsapTabInbufByte, bcamTraceNetState=bcamTraceNetState, bcamIfTabInt0Address3=bcamIfTabInt0Address3, bcamIfTabMode=bcamIfTabMode, bcamRouteTabMaxIsoConn=bcamRouteTabMaxIsoConn, bcamIfTabMulticastAddr8=bcamIfTabMulticastAddr8, bcamMemoryClass4=bcamMemoryClass4, bcamCepActiveTrials=bcamCepActiveTrials, bcamRouteTabArpRepSend=bcamRouteTabArpRepSend, bcamTrapOutPoolUnder=bcamTrapOutPoolUnder, bcamIfTabIntfAddress6=bcamIfTabIntfAddress6, bcamTsapTabTypName=bcamTsapTabTypName, bcamCepTabOutProcBuck4=bcamCepTabOutProcBuck4, bcamCepTabTsduSends=bcamCepTabTsduSends, bcamRouterTabNumRouter=bcamRouterTabNumRouter, bcamIfTabAdminState=bcamIfTabAdminState, bcamRouteTabArpRepRec=bcamRouteTabArpRepRec, bcamGlobalInWaitLimit3=bcamGlobalInWaitLimit3, bcamTsapTabHost=bcamTsapTabHost, bcamIfTabIOErrorOuts=bcamIfTabIOErrorOuts, bcamIfTabMulticastAddr1=bcamIfTabMulticastAddr1, bcamMemoryPoolOutputLimitTrap=bcamMemoryPoolOutputLimitTrap, bcamMemoryOccExtApplCb=bcamMemoryOccExtApplCb, bcamIfTabIpAddress4=bcamIfTabIpAddress4, bcamTraceNumberFiles=bcamTraceNumberFiles, bcamIf=bcamIf, bcamCepTabDuration=bcamCepTabDuration, bcamIfTabDevice=bcamIfTabDevice, bcamRouteTabNameGateway=bcamRouteTabNameGateway, bcamTsapTabReactBuck4=bcamTsapTabReactBuck4, bcamTsapTabCurrConn=bcamTsapTabCurrConn, bcamTraceSnmpNumberBuffer=bcamTraceSnmpNumberBuffer, bcamIfTabTraceNumberBuffer=bcamIfTabTraceNumberBuffer, bcamRouteTabSwitched=bcamRouteTabSwitched, bcamTraceConnState=bcamTraceConnState, bcamGlobalOutProcLimit3=bcamGlobalOutProcLimit3, bcamRouteTabAckTimer=bcamRouteTabAckTimer, bcamMemoryLenLongEventSlot=bcamMemoryLenLongEventSlot, bcamRouteActive=bcamRouteActive, bcamIfTabMulticastAddr3=bcamIfTabMulticastAddr3, bcamMemoryPoolOutputLimit=bcamMemoryPoolOutputLimit, bcamRouteTabRejectTimer=bcamRouteTabRejectTimer, bcamIfTabCurrentState=bcamIfTabCurrentState, bcamTsapTabInWaitBuck1=bcamTsapTabInWaitBuck1, bcamTrapInPoolUnder=bcamTrapInPoolUnder, bcamRouteTabConnReqInAck=bcamRouteTabConnReqInAck, bcamCepTabDetectedGapsReceiveds=bcamCepTabDetectedGapsReceiveds, bcamRouteTabLanAddress=bcamRouteTabLanAddress, bcamCepTabByteSends=bcamCepTabByteSends, bcamMemoryCellReqNoMemory=bcamMemoryCellReqNoMemory, bcamMemoryOccLongResConn2=bcamMemoryOccLongResConn2, bcamGlobalInProcLimit4=bcamGlobalInProcLimit4, bcamRouteTabRouteNetTyp=bcamRouteTabRouteNetTyp, bcamMemoryLenApplCb=bcamMemoryLenApplCb, bcamTsapSendCall=bcamTsapSendCall, bcamRouteTabOutPacketsFlowControls=bcamRouteTabOutPacketsFlowControls, bcamCepTabDisconCommand=bcamCepTabDisconCommand, bcamCepTabReactBuck5=bcamCepTabReactBuck5, bcamCepTabGlobalZeroWindowSends=bcamCepTabGlobalZeroWindowSends, bcamIfTabConfigUpdate=bcamIfTabConfigUpdate, bcamRouteTabPacketBadProtocol=bcamRouteTabPacketBadProtocol, bcamTsapTabReactBuck1Hist=bcamTsapTabReactBuck1Hist, bcamTsapTabReactBuck3=bcamTsapTabReactBuck3, bcamCepPassiveTrials=bcamCepPassiveTrials, bcamCepTabRetransmitPacketsSends=bcamCepTabRetransmitPacketsSends, bcamIfTabTraceBufferLen=bcamIfTabTraceBufferLen, bcamIfTabBytesInLows=bcamIfTabBytesInLows, bcamIfTabNeaAddress5=bcamIfTabNeaAddress5, bcamTsapTabReactBuck5=bcamTsapTabReactBuck5, bcamRouteTabTypAddress=bcamRouteTabTypAddress, bcamTsapTabPortnumber=bcamTsapTabPortnumber, bcamHostTabName=bcamHostTabName, bcamCepTabMaxIndLen=bcamCepTabMaxIndLen, bcamMemoryCellReqResOutExceed=bcamMemoryCellReqResOutExceed, bcamTsapTabByteSendHists=bcamTsapTabByteSendHists, bcamRouteRoutingReqIp=bcamRouteRoutingReqIp, bcamIfNumTable=bcamIfNumTable, bcamCepTabRoundTripTime=bcamCepTabRoundTripTime, bcamMemoryPoolInputResume=bcamMemoryPoolInputResume, bcamTsapTabClessSendBytes=bcamTsapTabClessSendBytes, bcamTsapTabOutbufTsduCless=bcamTsapTabOutbufTsduCless, bcamCepTabTimeConnectionEstablishment=bcamCepTabTimeConnectionEstablishment, bcamIfTabErrorPacketIns=bcamIfTabErrorPacketIns, bcamTrapInPoolOverCurrent=bcamTrapInPoolOverCurrent, bcamTsapTab=bcamTsapTab, bcamCepTabInProcBuck5=bcamCepTabInProcBuck5, bcamTraceSavingState=bcamTraceSavingState, bcamGlobalReactLimit1=bcamGlobalReactLimit1, bcamTsapTabNumbers=bcamTsapTabNumbers, bcamTraceBasicState=bcamTraceBasicState, bcamTraceMaxFilesize=bcamTraceMaxFilesize, bcamTsapTabClessSendCalls=bcamTsapTabClessSendCalls, bcamHostTabEntry=bcamHostTabEntry, bcamIfTabNeaAddress3=bcamIfTabNeaAddress3, bcamTsapTabInWaitBuck2Hist=bcamTsapTabInWaitBuck2Hist, bcamIfTabL2Monitoring=bcamIfTabL2Monitoring, bcamGlobalHostName=bcamGlobalHostName, bcamIfTabIntfAddress4=bcamIfTabIntfAddress4, bcamTsapTabInbufTsdu=bcamTsapTabInbufTsdu, bcamTsapTabLetterTimeouts=bcamTsapTabLetterTimeouts, bcamIfTabInt0Address5=bcamIfTabInt0Address5, bcamIfTabIOsOutHighs=bcamIfTabIOsOutHighs, bcamIfTabOutputStops=bcamIfTabOutputStops, bcamRouteTabL3InputProfil=bcamRouteTabL3InputProfil, bcamTsapTabDuration=bcamTsapTabDuration, bcamCepTabInWaitBuck4=bcamCepTabInWaitBuck4, bcamRouteTabIcmpReply=bcamRouteTabIcmpReply, bcamRouteTabNumberLink=bcamRouteTabNumberLink, bcamMemoryOccSnmpConn=bcamMemoryOccSnmpConn, bcamIfTabNumInt0Address=bcamIfTabNumInt0Address, bcamTraceMappingBufferLen=bcamTraceMappingBufferLen, bcamGlobalArp=bcamGlobalArp, bcamMemoryPoolInputMonMax=bcamMemoryPoolInputMonMax, bcamTraceAdmState=bcamTraceAdmState, bcamTsapTabState=bcamTsapTabState, bcamRouteTabInPacketsDatas=bcamRouteTabInPacketsDatas, bcamCepTabDisconInfoWord=bcamCepTabDisconInfoWord, bcamHostTabState=bcamHostTabState, bcamRouteNumTable=bcamRouteNumTable, bcamIfTabIntfAddress1=bcamIfTabIntfAddress1, bcamCepTabTypeL4Addr=bcamCepTabTypeL4Addr, bcamIfTabNumIpAddress=bcamIfTabNumIpAddress, bcamTsapTabClessRecvBytes=bcamTsapTabClessRecvBytes, bcamIfTabMulticastAddr6=bcamIfTabMulticastAddr6, bcamTsapTabDateApplEnable=bcamTsapTabDateApplEnable, bcamCepClosed=bcamCepClosed, bcamTsapTabCloseConns=bcamTsapTabCloseConns, bcamMemoryOccSnmpParamSlot=bcamMemoryOccSnmpParamSlot, bcamGlobalReactLimit2=bcamGlobalReactLimit2, bcamIfTabInt0Address1=bcamIfTabInt0Address1, bcamRouteTabInPacketsFlowControls=bcamRouteTabInPacketsFlowControls, bcamCepTabConnectionZeroWindowSends=bcamCepTabConnectionZeroWindowSends, bcamTraceSnmpBufferLen=bcamTraceSnmpBufferLen, bcamRouterNumTable=bcamRouterNumTable, bcamGlobalOutProcLimit4=bcamGlobalOutProcLimit4, bcamTsapTabByteReceiveds=bcamTsapTabByteReceiveds, bcamTsapTabClessRecvCalls=bcamTsapTabClessRecvCalls, bcamIfTabIOsInLows=bcamIfTabIOsInLows, bcamRouteTabState2=bcamRouteTabState2, bcamTsapTotOpen=bcamTsapTotOpen)
mibBuilder.exportSymbols("BCAM-MIB", bcamTsapTabInbufByteCless=bcamTsapTabInbufByteCless, bcamGlobalReactSet=bcamGlobalReactSet, bcamRouteTabNumbers=bcamRouteTabNumbers, bcamRouteTabNumberIsoIpRouter=bcamRouteTabNumberIsoIpRouter, bcamIfTabBytesOutHighs=bcamIfTabBytesOutHighs, bcamGlobalInWaitLimit1=bcamGlobalInWaitLimit1, bcamTraceConnBufferLen=bcamTraceConnBufferLen, bcamTsapSendByteClessHigh=bcamTsapSendByteClessHigh, bcamMemoryPoolOutputCurrent=bcamMemoryPoolOutputCurrent, bcamCepTabReactBuck2=bcamCepTabReactBuck2, bcamRouteTabIso9542=bcamRouteTabIso9542, bcamCepTabInProcBuck1=bcamCepTabInProcBuck1, bcamIfTabLanAddress=bcamIfTabLanAddress, bcamIfTabIOErrorIns=bcamIfTabIOErrorIns, bcamRouteTabFunction=bcamRouteTabFunction, bcamIfTabOutPacketsLanHighs=bcamIfTabOutPacketsLanHighs, bcamGlobalBroadcast=bcamGlobalBroadcast, bcamGlobalMaxRemoteIp=bcamGlobalMaxRemoteIp, bcamRouterTabIpLow=bcamRouterTabIpLow, bcamGlobalReactLimit4=bcamGlobalReactLimit4, bcamTsapMaxCepTsap=bcamTsapMaxCepTsap, bcamCepTabInProcBuck3=bcamCepTabInProcBuck3, bcamRouteTabArpFlag=bcamRouteTabArpFlag, bcamTsapTabLetterTimeoutHists=bcamTsapTabLetterTimeoutHists, bcamRouteTabBadIsoElems=bcamRouteTabBadIsoElems, bcamRouteTabArpReqRec=bcamRouteTabArpReqRec, bcamCepTabSendCallOverMaxs=bcamCepTabSendCallOverMaxs, bcamCepTabInWaitBuck2=bcamCepTabInWaitBuck2, bcamMemoryCellReqSucc=bcamMemoryCellReqSucc, bcamCepTabInWaitBuck5=bcamCepTabInWaitBuck5, bcamRouteTabName=bcamRouteTabName, sniBcam=sniBcam, bcamRouteTabMinNsduLen=bcamRouteTabMinNsduLen, bcamCepPassiveTrialFailures=bcamCepPassiveTrialFailures, bcamTsap=bcamTsap, bcamGlobalInProcSet=bcamGlobalInProcSet, bcamTsapTabEntry=bcamTsapTabEntry, bcamRouteTabConnReqOut=bcamRouteTabConnReqOut, bcamTsapTabClessTimeout=bcamTsapTabClessTimeout, bcamRouteTabPacketNoConn=bcamRouteTabPacketNoConn, bcamRouteTabRoundTripTimeClosed=bcamRouteTabRoundTripTimeClosed, bcamCepTabDateConnectionEstablishment=bcamCepTabDateConnectionEstablishment, bcamRouteTabMaxNsduLen=bcamRouteTabMaxNsduLen, bcamIfTabUnicastOutHighs=bcamIfTabUnicastOutHighs, bcamGlobalInWaitLimit4=bcamGlobalInWaitLimit4, bcamMemoryPoolPageableFixed=bcamMemoryPoolPageableFixed, bcamIfTabNumMulticastAddr=bcamIfTabNumMulticastAddr, bcamTrace=bcamTrace, bcamIfTabMulticastAddr2=bcamIfTabMulticastAddr2, bcamCepTabLocalName=bcamCepTabLocalName, bcamIfTabUnicastOutLows=bcamIfTabUnicastOutLows, bcamTraceLocalNumberBuffer=bcamTraceLocalNumberBuffer, bcamTsapTabInWaitBuck3Hist=bcamTsapTabInWaitBuck3Hist, bcamMemoryPoolMaxCells=bcamMemoryPoolMaxCells, bcamTraceSnmpState=bcamTraceSnmpState, bcamRouteTabMaxUnackTpdu=bcamRouteTabMaxUnackTpdu, bcamRouteTabExpedRetransTimer=bcamRouteTabExpedRetransTimer, bcamGlobalReactLimit3=bcamGlobalReactLimit3, bcamIfTabIpAddress6=bcamIfTabIpAddress6, bcamMemoryLenSnmpParamSlot=bcamMemoryLenSnmpParamSlot, bcamCepTabInWaitBuck3=bcamCepTabInWaitBuck3, bcamIfTabMnemonicDiag=bcamIfTabMnemonicDiag, bcamTsapTabOutbufByteCless=bcamTsapTabOutbufByteCless, bcamTraceBasicNumberBuffer=bcamTraceBasicNumberBuffer, bcamGlobalInProcLimit2=bcamGlobalInProcLimit2, bcamCepTabInProcBuck2=bcamCepTabInProcBuck2, bcamCepTabPacketsDataReceiveds=bcamCepTabPacketsDataReceiveds, bcamIfTabLenTraceIn=bcamIfTabLenTraceIn, bcamTsapTabSendCallOverMaxHists=bcamTsapTabSendCallOverMaxHists, bcamIfTabMulticastAddr10=bcamIfTabMulticastAddr10, bcamCepTabOutProcBuck2=bcamCepTabOutProcBuck2, bcamMemoryCellReqResInExceed=bcamMemoryCellReqResInExceed, bcamIfTabName=bcamIfTabName, bcamTsapTabInWaitBuck1Hist=bcamTsapTabInWaitBuck1Hist, bcamCepActiveTrialFailures=bcamCepActiveTrialFailures, bcamTsapTabTsduReceivedHists=bcamTsapTabTsduReceivedHists, bcamMemoryOccLongEventSlot=bcamMemoryOccLongEventSlot, bcamTsapTabByteSends=bcamTsapTabByteSends, bcamTsapTabInbufTsduCless=bcamTsapTabInbufTsduCless, bcamMemoryLenShortResConn2=bcamMemoryLenShortResConn2, bcamTsapTabInWaitBuck5Hist=bcamTsapTabInWaitBuck5Hist, bcamTraceLocalBufferLen=bcamTraceLocalBufferLen, bcamMemoryLenLongResConn2=bcamMemoryLenLongResConn2, bcamCepTabOutProcBuck1=bcamCepTabOutProcBuck1, bcamCepTabOutbufTsduSend=bcamCepTabOutbufTsduSend, bcamIfTabUnknownProtoIns=bcamIfTabUnknownProtoIns, bcamMemoryClass3=bcamMemoryClass3, bcamTrapLinkUp=bcamTrapLinkUp, bcamRouter=bcamRouter, bcamCepTabPacketsDataSends=bcamCepTabPacketsDataSends, bcamGlobalInWaitLimit2=bcamGlobalInWaitLimit2, bcamTsapSendByteLow=bcamTsapSendByteLow, bcamRouteTabProcNetTyp=bcamRouteTabProcNetTyp, bcamMemoryCellReqBitmapFull=bcamMemoryCellReqBitmapFull, bcamMemoryOccApplCb=bcamMemoryOccApplCb, bcamIfTabInPacketsLanHighs=bcamIfTabInPacketsLanHighs, bcamCepTabReactBuck1=bcamCepTabReactBuck1, bcamIfTabInPacketsLanLows=bcamIfTabInPacketsLanLows, bcamRouteSuccRoutingReqIp=bcamRouteSuccRoutingReqIp, bcamMemoryOccEnaCb=bcamMemoryOccEnaCb, bcamTraceMgmtBufferLen=bcamTraceMgmtBufferLen, bcamRouteTabNumberNeaRouter=bcamRouteTabNumberNeaRouter, bcamRouteTabTransState=bcamRouteTabTransState, bcamGlobalBcamVersion=bcamGlobalBcamVersion, bcamRouteTabIcmpRedirect=bcamRouteTabIcmpRedirect, bcamRouteTabNumNeaConn=bcamRouteTabNumNeaConn, bcamIfTabMulticastInHighs=bcamIfTabMulticastInHighs, bcamMemoryPoolPageableCurrent=bcamMemoryPoolPageableCurrent, bcamGlobalFileSocketHostTable=bcamGlobalFileSocketHostTable, bcamTrapOutPoolOver=bcamTrapOutPoolOver, bcamGlobalInProcLimit3=bcamGlobalInProcLimit3, bcamGlobalRarp=bcamGlobalRarp, bcamRouteTabLocalAddr=bcamRouteTabLocalAddr, bcamCepTabReactBuck4=bcamCepTabReactBuck4, bcamIfTabMulticastAddr5=bcamIfTabMulticastAddr5, bcamCepTabOutbufMaxByteSend=bcamCepTabOutbufMaxByteSend, bcamTraceBasicBufferLen=bcamTraceBasicBufferLen, bcamRouterTabIpLocal=bcamRouterTabIpLocal, bcamTraceLocalState=bcamTraceLocalState, bcamTsapTabNeaTsel=bcamTsapTabNeaTsel, bcamMemory=bcamMemory, bcamMemoryPoolOutputResume=bcamMemoryPoolOutputResume, bcamRouteSuccRoutingReqNea=bcamRouteSuccRoutingReqNea, bcamRouteTabBadNeaElems=bcamRouteTabBadNeaElems, bcamGlobalPortNonpriv=bcamGlobalPortNonpriv, bcamCepTabLetterTimeouts=bcamCepTabLetterTimeouts, bcamIfTabMulticastAddr7=bcamIfTabMulticastAddr7, bcamTsapTabReactBuck2=bcamTsapTabReactBuck2, bcamCepTabPacketsWindowReceiveds=bcamCepTabPacketsWindowReceiveds, bcamCepTabRouteNumber=bcamCepTabRouteNumber, bcamCepTabReactBuck3=bcamCepTabReactBuck3, bcamRouterTab=bcamRouterTab, bcamTsapRejTsapTask=bcamTsapRejTsapTask, PhysAddress=PhysAddress, bcamRouteTabConnReqIn=bcamRouteTabConnReqIn, bcamCepTabApplicationNumber=bcamCepTabApplicationNumber, bcamTsapTabByteReceivedHists=bcamTsapTabByteReceivedHists, bcamIfTabIOsInHighs=bcamIfTabIOsInHighs, bcamCepTabInWaitBuck1=bcamCepTabInWaitBuck1, bcamTsapTabOutbufTsdu=bcamTsapTabOutbufTsdu, bcamIfTab=bcamIfTab, bcamTsapSendCallCless=bcamTsapSendCallCless, bcamIfTabIntfAddress2=bcamIfTabIntfAddress2, bcamMemoryPoolInputLimitTrap=bcamMemoryPoolInputLimitTrap, bcamTsapTabInWaitBuck5=bcamTsapTabInWaitBuck5, bcamTsapRecvCallCless=bcamTsapRecvCallCless, bcamIfTabInt0Address2=bcamIfTabInt0Address2, bcamHost=bcamHost, bcamCepTabInbufTsdu=bcamCepTabInbufTsdu, bcamTsapRecvByteHigh=bcamTsapRecvByteHigh, bcamCepTabL4AddrLocal=bcamCepTabL4AddrLocal, bcamMemoryLenEnaCb=bcamMemoryLenEnaCb, bcamTsapTabInWaitBuck4Hist=bcamTsapTabInWaitBuck4Hist, bcamRouteTabOrigLanAddress=bcamRouteTabOrigLanAddress, bcamMemoryPoolOutputMonMin=bcamMemoryPoolOutputMonMin, bcamCepTabConnectionState=bcamCepTabConnectionState, bcamIfTabPacketsNotReceiveds=bcamIfTabPacketsNotReceiveds, bcamHostNumTable=bcamHostNumTable, bcamCepTabPacketsWindowSends=bcamCepTabPacketsWindowSends, bcamTsapTabReactBuck1=bcamTsapTabReactBuck1, bcamMemoryOccShortPagConn2=bcamMemoryOccShortPagConn2, bcamGlobalPortFree=bcamGlobalPortFree, bcamRouteTabUsage=bcamRouteTabUsage, bcamGlobalEsCreationIp=bcamGlobalEsCreationIp, bcamGlobalReactChange=bcamGlobalReactChange, bcamGlobalInWaitChange=bcamGlobalInWaitChange, bcamRouteTabConnReqInRej=bcamRouteTabConnReqInRej, bcamTsapTabFunction=bcamTsapTabFunction, bcamIfTabBytesInHighs=bcamIfTabBytesInHighs, bcamRouterTabIpHigh=bcamRouterTabIpHigh, bcamTsapTabTsduReceiveds=bcamTsapTabTsduReceiveds, bcamCepTabL4AddrPartner=bcamCepTabL4AddrPartner, bcamGlobal=bcamGlobal, bcamIfTabMaxLpdu=bcamIfTabMaxLpdu, bcamCepTabPartnerEndsystem=bcamCepTabPartnerEndsystem, bcamIfTabNumNeaAddress=bcamIfTabNumNeaAddress, bcamGlobalSnmpRelease=bcamGlobalSnmpRelease, bcamTraceTransState=bcamTraceTransState, bcamMemoryCellReqPagOutExceed=bcamMemoryCellReqPagOutExceed, bcamTsapTabReactBuck2Hist=bcamTsapTabReactBuck2Hist, bcamGlobalUpTime=bcamGlobalUpTime, bcamTraceTransNumberBuffer=bcamTraceTransNumberBuffer, bcamRouteTabErrorRecovTimer=bcamRouteTabErrorRecovTimer, bcamIfTabMulticastAddr9=bcamIfTabMulticastAddr9, bcamRouteRoutingReqIso=bcamRouteRoutingReqIso, bcamRouteTab=bcamRouteTab, bcamGlobalOutProcLimit1=bcamGlobalOutProcLimit1, bcamMemoryPoolOutputMaxPageable=bcamMemoryPoolOutputMaxPageable, bcamRouteTabMaxNetLength=bcamRouteTabMaxNetLength, bcamTrapInPoolUnderCurrent=bcamTrapInPoolUnderCurrent, bcamIfTabIntfAddress5=bcamIfTabIntfAddress5, bcamCepTabInbufByte=bcamCepTabInbufByte, bcamCepTabZeroWindowReceiveds=bcamCepTabZeroWindowReceiveds, bcamRouteTabReasonCreation=bcamRouteTabReasonCreation, bcamRouteRoutingReqNea=bcamRouteRoutingReqNea, bcamRouteTabMaxNeaConn=bcamRouteTabMaxNeaConn, bcamMemoryPoolMaxResident=bcamMemoryPoolMaxResident, bcamCepTabInbufMaxTsduReceived=bcamCepTabInbufMaxTsduReceived, bcamGlobalOutProcChange=bcamGlobalOutProcChange, bcamRouteTabArpReqSend=bcamRouteTabArpReqSend, bcamIfTabPortName=bcamIfTabPortName, bcamTsapTabInWaitBuck2=bcamTsapTabInWaitBuck2, bcamIfTabTimeLastChange=bcamIfTabTimeLastChange, bcamCepNumTable=bcamCepNumTable, bcamIfTabIpAddress2=bcamIfTabIpAddress2, bcamHostTabSocketName=bcamHostTabSocketName, bcamIfTabNumIntfAddress=bcamIfTabNumIntfAddress, bcamTsapTabOutbufByte=bcamTsapTabOutbufByte, bcamCepTabByteReceiveds=bcamCepTabByteReceiveds, bcamIfTabProfile=bcamIfTabProfile, bcamIfTabDiscardIns=bcamIfTabDiscardIns, bcamCepTabProtocolClass=bcamCepTabProtocolClass, bcamIfTabInt0Address4=bcamIfTabInt0Address4, bcamTrapOutPoolUnderCurrent=bcamTrapOutPoolUnderCurrent, bcamRouteTabDisconnOut=bcamRouteTabDisconnOut, bcamRouteTabDisconnInAck=bcamRouteTabDisconnInAck, bcamMemoryOccShortResConn2=bcamMemoryOccShortResConn2, bcamIfTabMulticastInLows=bcamIfTabMulticastInLows, bcamRouteTabEntry=bcamRouteTabEntry, bcamGlobalInWaitSet=bcamGlobalInWaitSet, bcamTsapTabTsduSendHists=bcamTsapTabTsduSendHists, bcamRouteArpDefault=bcamRouteArpDefault, bcamCepTabEntry=bcamCepTabEntry, bcamMemoryOccShortEventSlot=bcamMemoryOccShortEventSlot, bcamMemoryLenShortPagConn1=bcamMemoryLenShortPagConn1, bcamGlobalInProcChange=bcamGlobalInProcChange, bcamCep=bcamCep, sniProductMibs=sniProductMibs, bcamIfTabMnemonicWrite=bcamIfTabMnemonicWrite, bcamCepTabOutbufByteSend=bcamCepTabOutbufByteSend, bcamRouteTabDisconnOutAck=bcamRouteTabDisconnOutAck, bcamIfTabTraceState=bcamIfTabTraceState, bcamGlobalMibVersion=bcamGlobalMibVersion, bcamIfTabMnemonicRead=bcamIfTabMnemonicRead, bcamCepTabTsduReceiveds=bcamCepTabTsduReceiveds, bcamGlobalTrapPollInterval=bcamGlobalTrapPollInterval, bcamRouteTabChangeState=bcamRouteTabChangeState, bcamIfTabLenTraceOut=bcamIfTabLenTraceOut, bcamRouteTabDeactReason=bcamRouteTabDeactReason, bcamTsapNumTable=bcamTsapNumTable, bcamRouteTabMaxTsduLen=bcamRouteTabMaxTsduLen, bcamTraceNetNumberBuffer=bcamTraceNetNumberBuffer, bcamCepTabTypPartnerName=bcamCepTabTypPartnerName, bcamCepTabDuplicatePacketsReceiveds=bcamCepTabDuplicatePacketsReceiveds, bcamRouteTabDisconnIn=bcamRouteTabDisconnIn, bcamRouteTabInDuplicatedPackets=bcamRouteTabInDuplicatedPackets, bcamMemoryPoolInputCurrent=bcamMemoryPoolInputCurrent, bcamCepTabOutProcBuck5=bcamCepTabOutProcBuck5, bcamIfTabNeaAddress4=bcamIfTabNeaAddress4, bcamIfTabNumRouteSwitchings=bcamIfTabNumRouteSwitchings, bcamCepCurrent=bcamCepCurrent, bcamIfTabInt0Address6=bcamIfTabInt0Address6, bcamMemoryPoolMaxPageable=bcamMemoryPoolMaxPageable, bcamTraceMgmtNumberBuffer=bcamTraceMgmtNumberBuffer)
mibBuilder.exportSymbols("BCAM-MIB", bcamTrapInPoolOver=bcamTrapInPoolOver, bcamMemoryPoolInputMaxPageable=bcamMemoryPoolInputMaxPageable, bcamTraceInfoState=bcamTraceInfoState, bcamRouteTabIso4RetransTimer=bcamRouteTabIso4RetransTimer, bcamMemoryOccLongPagConn1=bcamMemoryOccLongPagConn1, bcamIfTabMulticastOutLows=bcamIfTabMulticastOutLows, bcamIfTabBytesOutLows=bcamIfTabBytesOutLows, bcamMemoryLenExtApplCb=bcamMemoryLenExtApplCb, bcamTsapTabInWaitBuck4=bcamTsapTabInWaitBuck4, bcamCepTab=bcamCepTab, bcamTraceInfoNumberBuffer=bcamTraceInfoNumberBuffer, bcamCepTabPartnerName=bcamCepTabPartnerName, bcamRouteTabInIncorrectPackets=bcamRouteTabInIncorrectPackets, bcamTrapSystemUp=bcamTrapSystemUp, bcamMemoryOccShortPagConn1=bcamMemoryOccShortPagConn1, bcamRouterTabIpRouter=bcamRouterTabIpRouter)
