#
# PySNMP MIB module NTWS-AP-CONFIG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/NTWS-AP-CONFIG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:15:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
NtwsApRadioIndex, NtwsApNum, NtwsRadioChannelWidth, NtwsChannelNum, NtwsRadioAntennaLocation, NtwsApBias, NtwsPowerLevel, NtwsApLedMode, NtwsApFingerprint, NtwsRadioType, NtwsApPowerMode, NtwsApSerialNum, NtwsApAttachType, NtwsRadioMode = mibBuilder.importSymbols("NTWS-AP-TC", "NtwsApRadioIndex", "NtwsApNum", "NtwsRadioChannelWidth", "NtwsChannelNum", "NtwsRadioAntennaLocation", "NtwsApBias", "NtwsPowerLevel", "NtwsApLedMode", "NtwsApFingerprint", "NtwsRadioType", "NtwsApPowerMode", "NtwsApSerialNum", "NtwsApAttachType", "NtwsRadioMode")
NtwsPhysPortNumberOrZero, = mibBuilder.importSymbols("NTWS-BASIC-TC", "NtwsPhysPortNumberOrZero")
ntwsMibs, = mibBuilder.importSymbols("NTWS-ROOT-MIB", "ntwsMibs")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ModuleIdentity, NotificationType, MibIdentifier, ObjectIdentity, Counter64, TimeTicks, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, iso, Bits, Integer32, Counter32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "NotificationType", "MibIdentifier", "ObjectIdentity", "Counter64", "TimeTicks", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "iso", "Bits", "Integer32", "Counter32", "IpAddress")
DisplayString, TextualConvention, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus", "TruthValue")
ntwsApConfigMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14))
ntwsApConfigMib.setRevisions(('2009-11-19 01:08',))
if mibBuilder.loadTexts: ntwsApConfigMib.setLastUpdated('200911190108Z')
if mibBuilder.loadTexts: ntwsApConfigMib.setOrganization('Nortel Networks')
class NtwsApTemplateName(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 32)

class NtwsRadioProfileName(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 16)

class NtwsServiceProfileName(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 32)

class NtwsSnoopFilterName(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 15)

class NtwsServiceProfileSsidType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("clear", 1), ("crypto", 2))

class NtwsServiceProfile11nMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("enable", 1), ("disable", 2), ("required", 3))

class NtwsServiceProfile11nFrameAggregationType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("msdu", 1), ("mpdu", 2), ("all", 3), ("disable", 4))

class NtwsServiceProfile11nMsduMaxLength(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("msdu-4k", 1), ("msdu-8k", 2))

class NtwsServiceProfile11nMpduMaxLength(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("mpdu-8k", 1), ("mpdu-16k", 2), ("mpdu-32k", 3), ("mpdu-64k", 4))

class NtwsServiceProfileAuthFallthruType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("none", 1), ("web-auth", 2), ("web-aaa-portal", 3), ("last-resort", 4))

class NtwsServiceProfileCacMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("none", 1), ("session", 2), ("vendor", 3))

class NtwsRadioProfileCountermeasuresMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("none", 1), ("all", 2), ("rogue", 3), ("configured", 4))

class NtwsRadioProfileRFScanChannelScope(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("operating", 1), ("regulatory", 2), ("all", 3))

class NtwsRadioProfileAutoTuneChannelRange(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("all-bands", 1), ("lower-bands", 2))

class NtwsRadioProfileRFScanMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("active", 1), ("passive", 2))

ntwsApConfigMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1))
ntwsApConfApConfigTable = MibTable((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2), )
if mibBuilder.loadTexts: ntwsApConfApConfigTable.setStatus('current')
ntwsApConfApConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1), ).setIndexNames((0, "NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigApNum"))
if mibBuilder.loadTexts: ntwsApConfApConfigEntry.setStatus('current')
ntwsApConfApConfigApNum = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1, 1), NtwsApNum())
if mibBuilder.loadTexts: ntwsApConfApConfigApNum.setStatus('current')
ntwsApConfApConfigApAttachType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1, 2), NtwsApAttachType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApConfigApAttachType.setStatus('current')
ntwsApConfApConfigPhysPortNum = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1, 3), NtwsPhysPortNumberOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApConfigPhysPortNum.setStatus('current')
ntwsApConfApConfigApSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1, 4), NtwsApSerialNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApConfigApSerialNum.setStatus('current')
ntwsApConfApConfigApModelName = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApConfigApModelName.setStatus('current')
ntwsApConfApConfigFingerprint = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1, 6), NtwsApFingerprint()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApConfigFingerprint.setStatus('current')
ntwsApConfApConfigBias = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1, 7), NtwsApBias()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApConfigBias.setStatus('current')
ntwsApConfApConfigApTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApConfigApTimeout.setStatus('current')
ntwsApConfApConfigApName = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApConfigApName.setStatus('current')
ntwsApConfApConfigContact = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApConfigContact.setStatus('current')
ntwsApConfApConfigLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApConfigLocation.setStatus('current')
ntwsApConfApConfigBlinkEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApConfigBlinkEnabled.setStatus('current')
ntwsApConfApConfigForceImageDownloadEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApConfigForceImageDownloadEnabled.setStatus('current')
ntwsApConfApConfigFirmwareUpgradeEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApConfigFirmwareUpgradeEnabled.setStatus('current')
ntwsApConfApConfigLocalSwitchingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApConfigLocalSwitchingEnabled.setStatus('current')
ntwsApConfApConfigPowerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1, 16), NtwsApPowerMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApConfigPowerMode.setStatus('current')
ntwsApConfApConfigLedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1, 17), NtwsApLedMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApConfigLedMode.setStatus('current')
ntwsApConfApConfigDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApConfigDescription.setStatus('current')
ntwsApConfRadioConfigTable = MibTable((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 3), )
if mibBuilder.loadTexts: ntwsApConfRadioConfigTable.setStatus('current')
ntwsApConfRadioConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 3, 1), ).setIndexNames((0, "NTWS-AP-CONFIG-MIB", "ntwsApConfRadioConfigApNum"), (0, "NTWS-AP-CONFIG-MIB", "ntwsApConfRadioConfigRadioIndex"))
if mibBuilder.loadTexts: ntwsApConfRadioConfigEntry.setStatus('current')
ntwsApConfRadioConfigApNum = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 3, 1, 1), NtwsApNum())
if mibBuilder.loadTexts: ntwsApConfRadioConfigApNum.setStatus('current')
ntwsApConfRadioConfigRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 3, 1, 2), NtwsApRadioIndex())
if mibBuilder.loadTexts: ntwsApConfRadioConfigRadioIndex.setStatus('current')
ntwsApConfRadioConfigRadioType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 3, 1, 3), NtwsRadioType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioConfigRadioType.setStatus('current')
ntwsApConfRadioConfigRadioMode = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 3, 1, 4), NtwsRadioMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioConfigRadioMode.setStatus('current')
ntwsApConfRadioConfigRadioProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 3, 1, 5), NtwsRadioProfileName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioConfigRadioProfileName.setStatus('current')
ntwsApConfRadioConfigChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 3, 1, 6), NtwsChannelNum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioConfigChannel.setStatus('current')
ntwsApConfRadioConfigTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 3, 1, 7), NtwsPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioConfigTxPower.setStatus('current')
ntwsApConfRadioConfigAutoTuneMaxTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 3, 1, 8), NtwsPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioConfigAutoTuneMaxTxPower.setStatus('current')
ntwsApConfRadioConfigAntennaType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 3, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioConfigAntennaType.setStatus('current')
ntwsApConfRadioConfigAntennaLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 3, 1, 10), NtwsRadioAntennaLocation()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioConfigAntennaLocation.setStatus('current')
ntwsApConfRadioConfigLoadBalancingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 3, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioConfigLoadBalancingEnabled.setStatus('current')
ntwsApConfRadioConfigLoadBalancingGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 3, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioConfigLoadBalancingGroup.setStatus('current')
ntwsApConfRadioConfigLoadRebalancingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 3, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioConfigLoadRebalancingEnabled.setStatus('current')
ntwsApConfApTemplateConfigTable = MibTable((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 4), )
if mibBuilder.loadTexts: ntwsApConfApTemplateConfigTable.setStatus('current')
ntwsApConfApTemplateConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 4, 1), ).setIndexNames((0, "NTWS-AP-CONFIG-MIB", "ntwsApConfApTemplConfApTemplateName"))
if mibBuilder.loadTexts: ntwsApConfApTemplateConfigEntry.setStatus('current')
ntwsApConfApTemplConfApTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 4, 1, 1), NtwsApTemplateName())
if mibBuilder.loadTexts: ntwsApConfApTemplConfApTemplateName.setStatus('current')
ntwsApConfApTemplConfApTemplateEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 4, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApTemplConfApTemplateEnabled.setStatus('current')
ntwsApConfApTemplConfBias = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 4, 1, 3), NtwsApBias()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApTemplConfBias.setStatus('current')
ntwsApConfApTemplConfApTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApTemplConfApTimeout.setStatus('current')
ntwsApConfApTemplConfBlinkEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 4, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApTemplConfBlinkEnabled.setStatus('current')
ntwsApConfApTemplConfForceImageDownloadEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 4, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApTemplConfForceImageDownloadEnabled.setStatus('current')
ntwsApConfApTemplConfFirmwareUpgradeEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 4, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApTemplConfFirmwareUpgradeEnabled.setStatus('current')
ntwsApConfApTemplConfLocalSwitchingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 4, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApTemplConfLocalSwitchingEnabled.setStatus('current')
ntwsApConfApTemplConfPowerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 4, 1, 9), NtwsApPowerMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApTemplConfPowerMode.setStatus('current')
ntwsApConfApTemplConfLedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 4, 1, 10), NtwsApLedMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApTemplConfLedMode.setStatus('current')
ntwsApConfApTemplateRadioConfigTable = MibTable((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 5), )
if mibBuilder.loadTexts: ntwsApConfApTemplateRadioConfigTable.setStatus('current')
ntwsApConfApTemplateRadioConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 5, 1), ).setIndexNames((0, "NTWS-AP-CONFIG-MIB", "ntwsApConfApTemRadioConfApTemplateName"), (0, "NTWS-AP-CONFIG-MIB", "ntwsApConfApTemRadioConfRadioIndex"))
if mibBuilder.loadTexts: ntwsApConfApTemplateRadioConfigEntry.setStatus('current')
ntwsApConfApTemRadioConfApTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 5, 1, 1), NtwsApTemplateName())
if mibBuilder.loadTexts: ntwsApConfApTemRadioConfApTemplateName.setStatus('current')
ntwsApConfApTemRadioConfRadioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 5, 1, 2), NtwsApRadioIndex())
if mibBuilder.loadTexts: ntwsApConfApTemRadioConfRadioIndex.setStatus('current')
ntwsApConfApTemRadioConfRadioMode = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 5, 1, 3), NtwsRadioMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApTemRadioConfRadioMode.setStatus('current')
ntwsApConfApTemRadioConfRadioProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 5, 1, 4), NtwsRadioProfileName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApTemRadioConfRadioProfileName.setStatus('current')
ntwsApConfApTemRadioConfAutoTuneMaxTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 5, 1, 5), NtwsPowerLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApTemRadioConfAutoTuneMaxTxPower.setStatus('current')
ntwsApConfApTemRadioConfLoadBalancingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 5, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApTemRadioConfLoadBalancingEnabled.setStatus('current')
ntwsApConfApTemRadioConfLoadBalancingGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApTemRadioConfLoadBalancingGroup.setStatus('current')
ntwsApConfApTemRadioConfLoadRebalancingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 5, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfApTemRadioConfLoadRebalancingEnabled.setStatus('current')
ntwsApConfRadioProfileTable = MibTable((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6), )
if mibBuilder.loadTexts: ntwsApConfRadioProfileTable.setStatus('current')
ntwsApConfRadioProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1), ).setIndexNames((0, "NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfRadioProfileName"))
if mibBuilder.loadTexts: ntwsApConfRadioProfileEntry.setStatus('current')
ntwsApConfRadioProfRadioProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 1), NtwsRadioProfileName())
if mibBuilder.loadTexts: ntwsApConfRadioProfRadioProfileName.setStatus('current')
ntwsApConfRadioProfBeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfBeaconInterval.setStatus('current')
ntwsApConfRadioProfDtimInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfDtimInterval.setStatus('current')
ntwsApConfRadioProfChannelWidth11na = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 4), NtwsRadioChannelWidth()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfChannelWidth11na.setStatus('current')
ntwsApConfRadioProfMaxTxLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfMaxTxLifetime.setStatus('current')
ntwsApConfRadioProfMaxRxLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfMaxRxLifetime.setStatus('current')
ntwsApConfRadioProfRtsThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfRtsThreshold.setStatus('current')
ntwsApConfRadioProfFragThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfFragThreshold.setStatus('current')
ntwsApConfRadioProfLongXmitPreambleEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfLongXmitPreambleEnabled.setStatus('current')
ntwsApConfRadioProfCountermeasuresMode = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 10), NtwsRadioProfileCountermeasuresMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfCountermeasuresMode.setStatus('current')
ntwsApConfRadioProfRFScanMode = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 11), NtwsRadioProfileRFScanMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfRFScanMode.setStatus('current')
ntwsApConfRadioProfRFScanChannelScope = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 12), NtwsRadioProfileRFScanChannelScope()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfRFScanChannelScope.setStatus('current')
ntwsApConfRadioProfRFScanCTSEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfRFScanCTSEnabled.setStatus('current')
ntwsApConfRadioProfAutoTune11aChannelRange = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 14), NtwsRadioProfileAutoTuneChannelRange()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfAutoTune11aChannelRange.setStatus('current')
ntwsApConfRadioProfAutoTuneIgnoreClientsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfAutoTuneIgnoreClientsEnabled.setStatus('current')
ntwsApConfRadioProfAutoTuneChannelEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfAutoTuneChannelEnabled.setStatus('current')
ntwsApConfRadioProfAutoTuneChannelHolddownInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfAutoTuneChannelHolddownInterval.setStatus('current')
ntwsApConfRadioProfAutoTuneChannelChangeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfAutoTuneChannelChangeInterval.setStatus('current')
ntwsApConfRadioProfAutoTunePowerEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfAutoTunePowerEnabled.setStatus('current')
ntwsApConfRadioProfAutoTunePowerRampInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfAutoTunePowerRampInterval.setStatus('current')
ntwsApConfRadioProfAutoTunePowerChangeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfAutoTunePowerChangeInterval.setStatus('current')
ntwsApConfRadioProfFairQueuingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfFairQueuingEnabled.setStatus('current')
ntwsApConfRadioProfCacBackgroundACMandatory = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfCacBackgroundACMandatory.setStatus('current')
ntwsApConfRadioProfCacBackgroundMaxUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfCacBackgroundMaxUtilization.setStatus('current')
ntwsApConfRadioProfCacBackgroundPolicingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 25), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfCacBackgroundPolicingEnabled.setStatus('current')
ntwsApConfRadioProfCacBestEffortACMandatory = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 26), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfCacBestEffortACMandatory.setStatus('current')
ntwsApConfRadioProfCacBestEffortMaxUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfCacBestEffortMaxUtilization.setStatus('current')
ntwsApConfRadioProfCacBestEffortPolicingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 28), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfCacBestEffortPolicingEnabled.setStatus('current')
ntwsApConfRadioProfCacVideoACMandatory = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 29), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfCacVideoACMandatory.setStatus('current')
ntwsApConfRadioProfCacVideoMaxUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfCacVideoMaxUtilization.setStatus('current')
ntwsApConfRadioProfCacVideoPolicingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 31), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfCacVideoPolicingEnabled.setStatus('current')
ntwsApConfRadioProfCacVoiceACMandatory = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 32), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfCacVoiceACMandatory.setStatus('current')
ntwsApConfRadioProfCacVoiceMaxUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfCacVoiceMaxUtilization.setStatus('current')
ntwsApConfRadioProfCacVoicePolicingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 34), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfCacVoicePolicingEnabled.setStatus('current')
ntwsApConfRadioProfRfidTagEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 35), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfRfidTagEnabled.setStatus('current')
ntwsApConfRadioProfWmmPowerSaveEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 36), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfWmmPowerSaveEnabled.setStatus('current')
ntwsApConfRadioProfRateEnforcementEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 37), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfRateEnforcementEnabled.setStatus('current')
ntwsApConfRadioProfDfsChannelsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 6, 1, 38), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfRadioProfDfsChannelsEnabled.setStatus('current')
ntwsApConfRadioProfServiceProfileTable = MibTable((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 7), )
if mibBuilder.loadTexts: ntwsApConfRadioProfServiceProfileTable.setStatus('current')
ntwsApConfRadioProfServiceProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 7, 1), ).setIndexNames((0, "NTWS-AP-CONFIG-MIB", "ntwsApConfRpServpRadioProfileName"), (0, "NTWS-AP-CONFIG-MIB", "ntwsApConfRpServpServiceProfileName"))
if mibBuilder.loadTexts: ntwsApConfRadioProfServiceProfileEntry.setStatus('current')
ntwsApConfRpServpRadioProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 7, 1, 1), NtwsRadioProfileName())
if mibBuilder.loadTexts: ntwsApConfRpServpRadioProfileName.setStatus('current')
ntwsApConfRpServpServiceProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 7, 1, 2), NtwsServiceProfileName())
if mibBuilder.loadTexts: ntwsApConfRpServpServiceProfileName.setStatus('current')
ntwsApConfRpServpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ntwsApConfRpServpRowStatus.setStatus('current')
ntwsApConfRadioProfSnoopFilterTable = MibTable((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 8), )
if mibBuilder.loadTexts: ntwsApConfRadioProfSnoopFilterTable.setStatus('current')
ntwsApConfRadioProfSnoopFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 8, 1), ).setIndexNames((0, "NTWS-AP-CONFIG-MIB", "ntwsApConfRpSnoopfRadioProfileName"), (0, "NTWS-AP-CONFIG-MIB", "ntwsApConfRpSnoopfSnoopFilterName"))
if mibBuilder.loadTexts: ntwsApConfRadioProfSnoopFilterEntry.setStatus('current')
ntwsApConfRpSnoopfRadioProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 8, 1, 1), NtwsRadioProfileName())
if mibBuilder.loadTexts: ntwsApConfRpSnoopfRadioProfileName.setStatus('current')
ntwsApConfRpSnoopfSnoopFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 8, 1, 2), NtwsSnoopFilterName())
if mibBuilder.loadTexts: ntwsApConfRpSnoopfSnoopFilterName.setStatus('current')
ntwsApConfRpSnoopfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 8, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ntwsApConfRpSnoopfRowStatus.setStatus('current')
ntwsApConfServiceProfileTable = MibTable((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9), )
if mibBuilder.loadTexts: ntwsApConfServiceProfileTable.setStatus('current')
ntwsApConfServiceProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1), ).setIndexNames((0, "NTWS-AP-CONFIG-MIB", "ntwsApConfServProfServiceProfileName"))
if mibBuilder.loadTexts: ntwsApConfServiceProfileEntry.setStatus('current')
ntwsApConfServProfServiceProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 1), NtwsServiceProfileName())
if mibBuilder.loadTexts: ntwsApConfServProfServiceProfileName.setStatus('current')
ntwsApConfServProfSsidType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 2), NtwsServiceProfileSsidType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfSsidType.setStatus('current')
ntwsApConfServProfBeaconEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfBeaconEnabled.setStatus('current')
ntwsApConfServProf11naMode = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 4), NtwsServiceProfile11nMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProf11naMode.setStatus('current')
ntwsApConfServProf11ngMode = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 5), NtwsServiceProfile11nMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProf11ngMode.setStatus('current')
ntwsApConfServProf11nShortGuardIntervalEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProf11nShortGuardIntervalEnabled.setStatus('current')
ntwsApConfServProf11nFrameAggregation = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 7), NtwsServiceProfile11nFrameAggregationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProf11nFrameAggregation.setStatus('current')
ntwsApConfServProf11nMsduMaxLength = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 8), NtwsServiceProfile11nMsduMaxLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProf11nMsduMaxLength.setStatus('current')
ntwsApConfServProf11nMpduMaxLength = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 9), NtwsServiceProfile11nMpduMaxLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProf11nMpduMaxLength.setStatus('current')
ntwsApConfServProfAuthFallthru = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 10), NtwsServiceProfileAuthFallthruType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfAuthFallthru.setStatus('current')
ntwsApConfServProfWebAAAForm = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfWebAAAForm.setStatus('current')
ntwsApConfServProfSharedKeyAuthEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfSharedKeyAuthEnabled.setStatus('current')
ntwsApConfServProfWpaIeEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfWpaIeEnabled.setStatus('current')
ntwsApConfServProfWpaIeCipherTkipEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfWpaIeCipherTkipEnabled.setStatus('current')
ntwsApConfServProfWpaIeCipherCcmpEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfWpaIeCipherCcmpEnabled.setStatus('current')
ntwsApConfServProfWpaIeCipherWep40Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 16), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfWpaIeCipherWep40Enabled.setStatus('current')
ntwsApConfServProfWpaIeCipherWep104Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfWpaIeCipherWep104Enabled.setStatus('current')
ntwsApConfServProfWpaIeAuthDot1xEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfWpaIeAuthDot1xEnabled.setStatus('current')
ntwsApConfServProfWpaIeAuthPskEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfWpaIeAuthPskEnabled.setStatus('current')
ntwsApConfServProfRsnIeEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfRsnIeEnabled.setStatus('current')
ntwsApConfServProfRsnIeCipherTkipEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 21), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfRsnIeCipherTkipEnabled.setStatus('current')
ntwsApConfServProfRsnIeCipherCcmpEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 22), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfRsnIeCipherCcmpEnabled.setStatus('current')
ntwsApConfServProfRsnIeCipherWep40Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 23), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfRsnIeCipherWep40Enabled.setStatus('current')
ntwsApConfServProfRsnIeCipherWep104Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 24), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfRsnIeCipherWep104Enabled.setStatus('current')
ntwsApConfServProfRsnIeAuthDot1xEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 25), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfRsnIeAuthDot1xEnabled.setStatus('current')
ntwsApConfServProfRsnIeAuthPskEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 26), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfRsnIeAuthPskEnabled.setStatus('current')
ntwsApConfServProfTkipMicCountermeasuresTime = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 27), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfTkipMicCountermeasuresTime.setStatus('current')
ntwsApConfServProfMaxBandwidthKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfMaxBandwidthKbps.setStatus('current')
ntwsApConfServProfCacMode = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 29), NtwsServiceProfileCacMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfCacMode.setStatus('current')
ntwsApConfServProfCacSessCount = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 30), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfCacSessCount.setStatus('current')
ntwsApConfServProfUserIdleTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 31), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfUserIdleTimeout.setStatus('current')
ntwsApConfServProfIdleClientProbingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 32), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfIdleClientProbingEnabled.setStatus('current')
ntwsApConfServProfShortRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfShortRetryCount.setStatus('current')
ntwsApConfServProfLongRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfLongRetryCount.setStatus('current')
ntwsApConfServProfProxyArpEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 35), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfProxyArpEnabled.setStatus('current')
ntwsApConfServProfDhcpRestrictEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 36), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfDhcpRestrictEnabled.setStatus('current')
ntwsApConfServProfNoBroadcastEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 37), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfNoBroadcastEnabled.setStatus('current')
ntwsApConfServProfSygateOnDemandEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 38), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfSygateOnDemandEnabled.setStatus('current')
ntwsApConfServProfEnforceChecksEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 39), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfEnforceChecksEnabled.setStatus('current')
ntwsApConfServProfSodaRemediationAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfSodaRemediationAcl.setStatus('current')
ntwsApConfServProfSodaSuccessPage = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfSodaSuccessPage.setStatus('current')
ntwsApConfServProfSodaFailurePage = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 42), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfSodaFailurePage.setStatus('current')
ntwsApConfServProfSodaLogoutPage = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 43), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfSodaLogoutPage.setStatus('current')
ntwsApConfServProfSodaAgentDirectory = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 44), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfSodaAgentDirectory.setStatus('current')
ntwsApConfServProfWebPortalSessionTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 45), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfWebPortalSessionTimeout.setStatus('current')
ntwsApConfServProfWebPortalAcl = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 46), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfWebPortalAcl.setStatus('current')
ntwsApConfServProfWebPortalLogoutEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 47), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfWebPortalLogoutEnabled.setStatus('current')
ntwsApConfServProfWebPortalLogoutUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 48), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfWebPortalLogoutUrl.setStatus('current')
ntwsApConfServProfKeepInitialVlanEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 49), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfKeepInitialVlanEnabled.setStatus('current')
ntwsApConfServProfMeshModeEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 50), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfMeshModeEnabled.setStatus('current')
ntwsApConfServProfBridgingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 51), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfBridgingEnabled.setStatus('current')
ntwsApConfServProfLoadBalanceExemptEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 9, 1, 52), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfServProfLoadBalanceExemptEnabled.setStatus('current')
ntwsApConfSnoopFilterTable = MibTable((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 10), )
if mibBuilder.loadTexts: ntwsApConfSnoopFilterTable.setStatus('current')
ntwsApConfSnoopFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 10, 1), ).setIndexNames((0, "NTWS-AP-CONFIG-MIB", "ntwsApConfSnoopFilterName"))
if mibBuilder.loadTexts: ntwsApConfSnoopFilterEntry.setStatus('current')
ntwsApConfSnoopFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 10, 1, 1), NtwsSnoopFilterName())
if mibBuilder.loadTexts: ntwsApConfSnoopFilterName.setStatus('current')
ntwsApConfSnoopFilterEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 1, 10, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntwsApConfSnoopFilterEnabled.setStatus('current')
ntwsApConfigConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 2))
ntwsApConfigCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 2, 1))
ntwsApConfigGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 2, 2))
ntwsApConfigCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 2, 1, 1)).setObjects(("NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigTableGroup"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioConfigTableGroup"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApTemplateConfigTableGroup"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApTemplateRadioConfigTableGroup"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfileTableGroup"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfServiceProfileTableGroup"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfSnoopFilterTableGroup"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServiceProfileTableGroup"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfSnoopFilterTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsApConfigCompliance = ntwsApConfigCompliance.setStatus('current')
ntwsApConfApConfigTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 2, 2, 1)).setObjects(("NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigApAttachType"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigPhysPortNum"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigApSerialNum"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigApModelName"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigFingerprint"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigBias"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigApTimeout"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigApName"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigContact"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigLocation"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigBlinkEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigForceImageDownloadEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigFirmwareUpgradeEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigLocalSwitchingEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigPowerMode"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigLedMode"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApConfigDescription"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsApConfApConfigTableGroup = ntwsApConfApConfigTableGroup.setStatus('current')
ntwsApConfRadioConfigTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 2, 2, 2)).setObjects(("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioConfigRadioType"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioConfigRadioMode"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioConfigRadioProfileName"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioConfigChannel"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioConfigTxPower"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioConfigAutoTuneMaxTxPower"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioConfigAntennaType"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioConfigAntennaLocation"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioConfigLoadBalancingEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioConfigLoadBalancingGroup"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioConfigLoadRebalancingEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsApConfRadioConfigTableGroup = ntwsApConfRadioConfigTableGroup.setStatus('current')
ntwsApConfApTemplateConfigTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 2, 2, 3)).setObjects(("NTWS-AP-CONFIG-MIB", "ntwsApConfApTemplConfApTemplateEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApTemplConfBias"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApTemplConfApTimeout"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApTemplConfBlinkEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApTemplConfForceImageDownloadEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApTemplConfFirmwareUpgradeEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApTemplConfLocalSwitchingEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApTemplConfPowerMode"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApTemplConfLedMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsApConfApTemplateConfigTableGroup = ntwsApConfApTemplateConfigTableGroup.setStatus('current')
ntwsApConfApTemplateRadioConfigTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 2, 2, 4)).setObjects(("NTWS-AP-CONFIG-MIB", "ntwsApConfApTemRadioConfRadioMode"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApTemRadioConfRadioProfileName"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApTemRadioConfAutoTuneMaxTxPower"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApTemRadioConfLoadBalancingEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApTemRadioConfLoadBalancingGroup"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfApTemRadioConfLoadRebalancingEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsApConfApTemplateRadioConfigTableGroup = ntwsApConfApTemplateRadioConfigTableGroup.setStatus('current')
ntwsApConfRadioProfileTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 2, 2, 5)).setObjects(("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfBeaconInterval"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfDtimInterval"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfChannelWidth11na"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfMaxTxLifetime"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfMaxRxLifetime"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfRtsThreshold"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfFragThreshold"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfLongXmitPreambleEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfCountermeasuresMode"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfRFScanMode"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfRFScanChannelScope"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfRFScanCTSEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfAutoTune11aChannelRange"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfAutoTuneIgnoreClientsEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfAutoTuneChannelEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfAutoTuneChannelHolddownInterval"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfAutoTuneChannelChangeInterval"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfAutoTunePowerEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfAutoTunePowerRampInterval"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfAutoTunePowerChangeInterval"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfFairQueuingEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfCacBackgroundACMandatory"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfCacBackgroundMaxUtilization"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfCacBackgroundPolicingEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfCacBestEffortACMandatory"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfCacBestEffortMaxUtilization"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfCacBestEffortPolicingEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfCacVideoACMandatory"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfCacVideoMaxUtilization"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfCacVideoPolicingEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfCacVoiceACMandatory"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfCacVoiceMaxUtilization"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfCacVoicePolicingEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfRfidTagEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfWmmPowerSaveEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfRateEnforcementEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfRadioProfDfsChannelsEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsApConfRadioProfileTableGroup = ntwsApConfRadioProfileTableGroup.setStatus('current')
ntwsApConfRadioProfServiceProfileTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 2, 2, 6)).setObjects(("NTWS-AP-CONFIG-MIB", "ntwsApConfRpServpRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsApConfRadioProfServiceProfileTableGroup = ntwsApConfRadioProfServiceProfileTableGroup.setStatus('current')
ntwsApConfRadioProfSnoopFilterTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 2, 2, 7)).setObjects(("NTWS-AP-CONFIG-MIB", "ntwsApConfRpSnoopfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsApConfRadioProfSnoopFilterTableGroup = ntwsApConfRadioProfSnoopFilterTableGroup.setStatus('current')
ntwsApConfServiceProfileTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 2, 2, 8)).setObjects(("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfSsidType"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfBeaconEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProf11naMode"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProf11ngMode"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProf11nShortGuardIntervalEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProf11nFrameAggregation"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProf11nMsduMaxLength"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProf11nMpduMaxLength"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfAuthFallthru"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfWebAAAForm"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfSharedKeyAuthEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfWpaIeEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfWpaIeCipherTkipEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfWpaIeCipherCcmpEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfWpaIeCipherWep40Enabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfWpaIeCipherWep104Enabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfWpaIeAuthDot1xEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfWpaIeAuthPskEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfRsnIeEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfRsnIeCipherTkipEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfRsnIeCipherCcmpEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfRsnIeCipherWep40Enabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfRsnIeCipherWep104Enabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfRsnIeAuthDot1xEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfRsnIeAuthPskEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfTkipMicCountermeasuresTime"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfMaxBandwidthKbps"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfCacMode"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfCacSessCount"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfUserIdleTimeout"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfIdleClientProbingEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfShortRetryCount"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfLongRetryCount"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfProxyArpEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfDhcpRestrictEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfNoBroadcastEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfSygateOnDemandEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfEnforceChecksEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfSodaRemediationAcl"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfSodaSuccessPage"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfSodaFailurePage"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfSodaLogoutPage"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfSodaAgentDirectory"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfWebPortalSessionTimeout"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfWebPortalAcl"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfWebPortalLogoutEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfWebPortalLogoutUrl"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfKeepInitialVlanEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfMeshModeEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfBridgingEnabled"), ("NTWS-AP-CONFIG-MIB", "ntwsApConfServProfLoadBalanceExemptEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsApConfServiceProfileTableGroup = ntwsApConfServiceProfileTableGroup.setStatus('current')
ntwsApConfSnoopFilterTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 45, 6, 1, 4, 14, 2, 2, 9)).setObjects(("NTWS-AP-CONFIG-MIB", "ntwsApConfSnoopFilterEnabled"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntwsApConfSnoopFilterTableGroup = ntwsApConfSnoopFilterTableGroup.setStatus('current')
mibBuilder.exportSymbols("NTWS-AP-CONFIG-MIB", ntwsApConfApTemplateRadioConfigTable=ntwsApConfApTemplateRadioConfigTable, ntwsApConfServProf11nFrameAggregation=ntwsApConfServProf11nFrameAggregation, ntwsApConfServProfWpaIeCipherWep104Enabled=ntwsApConfServProfWpaIeCipherWep104Enabled, ntwsApConfRadioProfAutoTunePowerEnabled=ntwsApConfRadioProfAutoTunePowerEnabled, ntwsApConfServProfCacMode=ntwsApConfServProfCacMode, ntwsApConfServProfTkipMicCountermeasuresTime=ntwsApConfServProfTkipMicCountermeasuresTime, ntwsApConfRadioConfigRadioIndex=ntwsApConfRadioConfigRadioIndex, ntwsApConfRadioProfChannelWidth11na=ntwsApConfRadioProfChannelWidth11na, ntwsApConfServProfRsnIeAuthDot1xEnabled=ntwsApConfServProfRsnIeAuthDot1xEnabled, ntwsApConfServProfSodaRemediationAcl=ntwsApConfServProfSodaRemediationAcl, ntwsApConfServProfWebPortalLogoutEnabled=ntwsApConfServProfWebPortalLogoutEnabled, ntwsApConfApTemplConfApTemplateEnabled=ntwsApConfApTemplConfApTemplateEnabled, ntwsApConfApConfigLedMode=ntwsApConfApConfigLedMode, ntwsApConfApConfigBlinkEnabled=ntwsApConfApConfigBlinkEnabled, NtwsRadioProfileName=NtwsRadioProfileName, ntwsApConfRadioProfSnoopFilterEntry=ntwsApConfRadioProfSnoopFilterEntry, ntwsApConfApConfigLocalSwitchingEnabled=ntwsApConfApConfigLocalSwitchingEnabled, ntwsApConfRadioProfCacBackgroundMaxUtilization=ntwsApConfRadioProfCacBackgroundMaxUtilization, ntwsApConfServProfRsnIeCipherWep104Enabled=ntwsApConfServProfRsnIeCipherWep104Enabled, ntwsApConfApConfigApNum=ntwsApConfApConfigApNum, ntwsApConfApTemplateConfigTableGroup=ntwsApConfApTemplateConfigTableGroup, ntwsApConfRadioProfAutoTuneChannelHolddownInterval=ntwsApConfRadioProfAutoTuneChannelHolddownInterval, ntwsApConfigMib=ntwsApConfigMib, ntwsApConfServProfRsnIeAuthPskEnabled=ntwsApConfServProfRsnIeAuthPskEnabled, NtwsServiceProfile11nMsduMaxLength=NtwsServiceProfile11nMsduMaxLength, ntwsApConfRpSnoopfRowStatus=ntwsApConfRpSnoopfRowStatus, ntwsApConfRadioConfigEntry=ntwsApConfRadioConfigEntry, ntwsApConfRpSnoopfSnoopFilterName=ntwsApConfRpSnoopfSnoopFilterName, ntwsApConfRadioProfRateEnforcementEnabled=ntwsApConfRadioProfRateEnforcementEnabled, ntwsApConfServProfWebAAAForm=ntwsApConfServProfWebAAAForm, ntwsApConfSnoopFilterEnabled=ntwsApConfSnoopFilterEnabled, ntwsApConfServProfBeaconEnabled=ntwsApConfServProfBeaconEnabled, PYSNMP_MODULE_ID=ntwsApConfigMib, ntwsApConfApTemplConfForceImageDownloadEnabled=ntwsApConfApTemplConfForceImageDownloadEnabled, ntwsApConfRadioProfSnoopFilterTableGroup=ntwsApConfRadioProfSnoopFilterTableGroup, ntwsApConfRadioProfDtimInterval=ntwsApConfRadioProfDtimInterval, ntwsApConfRadioProfAutoTuneChannelEnabled=ntwsApConfRadioProfAutoTuneChannelEnabled, ntwsApConfRadioProfDfsChannelsEnabled=ntwsApConfRadioProfDfsChannelsEnabled, ntwsApConfServProfProxyArpEnabled=ntwsApConfServProfProxyArpEnabled, NtwsServiceProfile11nMpduMaxLength=NtwsServiceProfile11nMpduMaxLength, ntwsApConfServProfWpaIeCipherTkipEnabled=ntwsApConfServProfWpaIeCipherTkipEnabled, ntwsApConfSnoopFilterEntry=ntwsApConfSnoopFilterEntry, ntwsApConfServProfRsnIeEnabled=ntwsApConfServProfRsnIeEnabled, ntwsApConfServProfMaxBandwidthKbps=ntwsApConfServProfMaxBandwidthKbps, ntwsApConfApConfigEntry=ntwsApConfApConfigEntry, ntwsApConfApTemplConfApTemplateName=ntwsApConfApTemplConfApTemplateName, ntwsApConfServProfRsnIeCipherTkipEnabled=ntwsApConfServProfRsnIeCipherTkipEnabled, ntwsApConfRadioConfigLoadBalancingGroup=ntwsApConfRadioConfigLoadBalancingGroup, ntwsApConfigMibObjects=ntwsApConfigMibObjects, ntwsApConfServProfLongRetryCount=ntwsApConfServProfLongRetryCount, ntwsApConfApTemplConfPowerMode=ntwsApConfApTemplConfPowerMode, ntwsApConfApConfigBias=ntwsApConfApConfigBias, ntwsApConfRadioConfigLoadBalancingEnabled=ntwsApConfRadioConfigLoadBalancingEnabled, ntwsApConfApConfigTable=ntwsApConfApConfigTable, ntwsApConfRadioProfServiceProfileEntry=ntwsApConfRadioProfServiceProfileEntry, ntwsApConfRadioProfRFScanChannelScope=ntwsApConfRadioProfRFScanChannelScope, ntwsApConfSnoopFilterTable=ntwsApConfSnoopFilterTable, ntwsApConfRadioProfCacBackgroundPolicingEnabled=ntwsApConfRadioProfCacBackgroundPolicingEnabled, ntwsApConfServProfKeepInitialVlanEnabled=ntwsApConfServProfKeepInitialVlanEnabled, ntwsApConfApTemplateConfigTable=ntwsApConfApTemplateConfigTable, ntwsApConfApTemRadioConfLoadBalancingGroup=ntwsApConfApTemRadioConfLoadBalancingGroup, ntwsApConfRadioProfFairQueuingEnabled=ntwsApConfRadioProfFairQueuingEnabled, ntwsApConfRadioProfCacBackgroundACMandatory=ntwsApConfRadioProfCacBackgroundACMandatory, ntwsApConfRadioProfRtsThreshold=ntwsApConfRadioProfRtsThreshold, ntwsApConfRadioProfServiceProfileTable=ntwsApConfRadioProfServiceProfileTable, ntwsApConfRpServpRadioProfileName=ntwsApConfRpServpRadioProfileName, ntwsApConfRadioProfWmmPowerSaveEnabled=ntwsApConfRadioProfWmmPowerSaveEnabled, ntwsApConfApTemRadioConfLoadBalancingEnabled=ntwsApConfApTemRadioConfLoadBalancingEnabled, ntwsApConfSnoopFilterTableGroup=ntwsApConfSnoopFilterTableGroup, ntwsApConfRadioProfileTableGroup=ntwsApConfRadioProfileTableGroup, ntwsApConfRadioConfigRadioMode=ntwsApConfRadioConfigRadioMode, ntwsApConfRadioProfCacBestEffortMaxUtilization=ntwsApConfRadioProfCacBestEffortMaxUtilization, ntwsApConfApConfigFingerprint=ntwsApConfApConfigFingerprint, ntwsApConfRadioProfAutoTune11aChannelRange=ntwsApConfRadioProfAutoTune11aChannelRange, ntwsApConfApTemplConfBlinkEnabled=ntwsApConfApTemplConfBlinkEnabled, ntwsApConfServProfWebPortalLogoutUrl=ntwsApConfServProfWebPortalLogoutUrl, ntwsApConfServProfNoBroadcastEnabled=ntwsApConfServProfNoBroadcastEnabled, ntwsApConfApConfigTableGroup=ntwsApConfApConfigTableGroup, ntwsApConfRadioConfigApNum=ntwsApConfRadioConfigApNum, ntwsApConfRadioProfRFScanCTSEnabled=ntwsApConfRadioProfRFScanCTSEnabled, ntwsApConfServProfWpaIeCipherCcmpEnabled=ntwsApConfServProfWpaIeCipherCcmpEnabled, ntwsApConfigConformance=ntwsApConfigConformance, ntwsApConfigGroups=ntwsApConfigGroups, ntwsApConfRadioProfCacBestEffortPolicingEnabled=ntwsApConfRadioProfCacBestEffortPolicingEnabled, ntwsApConfServProfSsidType=ntwsApConfServProfSsidType, ntwsApConfRadioConfigAntennaLocation=ntwsApConfRadioConfigAntennaLocation, ntwsApConfServProf11nMpduMaxLength=ntwsApConfServProf11nMpduMaxLength, ntwsApConfServProfSodaSuccessPage=ntwsApConfServProfSodaSuccessPage, ntwsApConfigCompliances=ntwsApConfigCompliances, ntwsApConfRadioProfCacVideoACMandatory=ntwsApConfRadioProfCacVideoACMandatory, ntwsApConfRadioProfRfidTagEnabled=ntwsApConfRadioProfRfidTagEnabled, ntwsApConfServProf11nMsduMaxLength=ntwsApConfServProf11nMsduMaxLength, ntwsApConfServProfMeshModeEnabled=ntwsApConfServProfMeshModeEnabled, NtwsRadioProfileRFScanMode=NtwsRadioProfileRFScanMode, ntwsApConfApConfigApAttachType=ntwsApConfApConfigApAttachType, ntwsApConfRadioProfServiceProfileTableGroup=ntwsApConfRadioProfServiceProfileTableGroup, ntwsApConfServProfAuthFallthru=ntwsApConfServProfAuthFallthru, ntwsApConfigCompliance=ntwsApConfigCompliance, ntwsApConfRadioProfCountermeasuresMode=ntwsApConfRadioProfCountermeasuresMode, ntwsApConfApTemplConfFirmwareUpgradeEnabled=ntwsApConfApTemplConfFirmwareUpgradeEnabled, NtwsServiceProfileAuthFallthruType=NtwsServiceProfileAuthFallthruType, ntwsApConfApTemRadioConfRadioMode=ntwsApConfApTemRadioConfRadioMode, ntwsApConfRadioConfigAntennaType=ntwsApConfRadioConfigAntennaType, ntwsApConfApTemRadioConfApTemplateName=ntwsApConfApTemRadioConfApTemplateName, ntwsApConfApConfigDescription=ntwsApConfApConfigDescription, ntwsApConfRadioConfigTxPower=ntwsApConfRadioConfigTxPower, ntwsApConfApTemplConfBias=ntwsApConfApTemplConfBias, ntwsApConfRadioProfMaxTxLifetime=ntwsApConfRadioProfMaxTxLifetime, ntwsApConfApConfigLocation=ntwsApConfApConfigLocation, ntwsApConfRadioConfigTable=ntwsApConfRadioConfigTable, ntwsApConfRadioProfSnoopFilterTable=ntwsApConfRadioProfSnoopFilterTable, ntwsApConfRadioConfigTableGroup=ntwsApConfRadioConfigTableGroup, ntwsApConfApConfigApTimeout=ntwsApConfApConfigApTimeout, ntwsApConfRadioProfAutoTunePowerChangeInterval=ntwsApConfRadioProfAutoTunePowerChangeInterval, ntwsApConfServProfWpaIeEnabled=ntwsApConfServProfWpaIeEnabled, ntwsApConfRadioProfFragThreshold=ntwsApConfRadioProfFragThreshold, ntwsApConfApConfigApName=ntwsApConfApConfigApName, ntwsApConfRadioProfCacVoicePolicingEnabled=ntwsApConfRadioProfCacVoicePolicingEnabled, ntwsApConfServProfSygateOnDemandEnabled=ntwsApConfServProfSygateOnDemandEnabled, ntwsApConfServProfDhcpRestrictEnabled=ntwsApConfServProfDhcpRestrictEnabled, ntwsApConfServProfLoadBalanceExemptEnabled=ntwsApConfServProfLoadBalanceExemptEnabled, ntwsApConfApTemplConfLocalSwitchingEnabled=ntwsApConfApTemplConfLocalSwitchingEnabled, ntwsApConfRadioConfigRadioProfileName=ntwsApConfRadioConfigRadioProfileName, ntwsApConfRadioProfRadioProfileName=ntwsApConfRadioProfRadioProfileName, ntwsApConfServProfSodaAgentDirectory=ntwsApConfServProfSodaAgentDirectory, ntwsApConfApTemplConfLedMode=ntwsApConfApTemplConfLedMode, ntwsApConfServProfSodaFailurePage=ntwsApConfServProfSodaFailurePage, ntwsApConfRadioProfCacBestEffortACMandatory=ntwsApConfRadioProfCacBestEffortACMandatory, NtwsServiceProfile11nMode=NtwsServiceProfile11nMode, ntwsApConfRadioProfAutoTuneIgnoreClientsEnabled=ntwsApConfRadioProfAutoTuneIgnoreClientsEnabled, ntwsApConfRadioConfigChannel=ntwsApConfRadioConfigChannel, NtwsRadioProfileRFScanChannelScope=NtwsRadioProfileRFScanChannelScope, ntwsApConfServProfRsnIeCipherCcmpEnabled=ntwsApConfServProfRsnIeCipherCcmpEnabled, ntwsApConfApTemRadioConfRadioIndex=ntwsApConfApTemRadioConfRadioIndex, ntwsApConfApTemplConfApTimeout=ntwsApConfApTemplConfApTimeout, ntwsApConfApConfigContact=ntwsApConfApConfigContact, ntwsApConfServProfEnforceChecksEnabled=ntwsApConfServProfEnforceChecksEnabled, ntwsApConfServProfCacSessCount=ntwsApConfServProfCacSessCount, ntwsApConfRadioProfCacVideoMaxUtilization=ntwsApConfRadioProfCacVideoMaxUtilization, ntwsApConfApConfigPhysPortNum=ntwsApConfApConfigPhysPortNum, ntwsApConfServiceProfileTable=ntwsApConfServiceProfileTable, ntwsApConfServProfWpaIeAuthPskEnabled=ntwsApConfServProfWpaIeAuthPskEnabled, ntwsApConfServProfSodaLogoutPage=ntwsApConfServProfSodaLogoutPage, ntwsApConfServProf11naMode=ntwsApConfServProf11naMode, ntwsApConfServProfSharedKeyAuthEnabled=ntwsApConfServProfSharedKeyAuthEnabled, ntwsApConfApConfigFirmwareUpgradeEnabled=ntwsApConfApConfigFirmwareUpgradeEnabled, ntwsApConfServProfUserIdleTimeout=ntwsApConfServProfUserIdleTimeout, ntwsApConfRadioProfAutoTuneChannelChangeInterval=ntwsApConfRadioProfAutoTuneChannelChangeInterval, ntwsApConfRadioProfileEntry=ntwsApConfRadioProfileEntry, ntwsApConfServProfRsnIeCipherWep40Enabled=ntwsApConfServProfRsnIeCipherWep40Enabled, ntwsApConfApConfigForceImageDownloadEnabled=ntwsApConfApConfigForceImageDownloadEnabled, ntwsApConfRadioProfCacVoiceACMandatory=ntwsApConfRadioProfCacVoiceACMandatory, ntwsApConfServProfBridgingEnabled=ntwsApConfServProfBridgingEnabled, ntwsApConfApConfigApSerialNum=ntwsApConfApConfigApSerialNum, ntwsApConfRpSnoopfRadioProfileName=ntwsApConfRpSnoopfRadioProfileName, ntwsApConfServProf11nShortGuardIntervalEnabled=ntwsApConfServProf11nShortGuardIntervalEnabled, ntwsApConfSnoopFilterName=ntwsApConfSnoopFilterName, ntwsApConfApConfigPowerMode=ntwsApConfApConfigPowerMode, ntwsApConfServProfWpaIeCipherWep40Enabled=ntwsApConfServProfWpaIeCipherWep40Enabled, ntwsApConfApTemRadioConfLoadRebalancingEnabled=ntwsApConfApTemRadioConfLoadRebalancingEnabled, ntwsApConfRadioProfileTable=ntwsApConfRadioProfileTable, ntwsApConfRadioProfBeaconInterval=ntwsApConfRadioProfBeaconInterval, ntwsApConfServProfShortRetryCount=ntwsApConfServProfShortRetryCount, ntwsApConfApTemplateRadioConfigEntry=ntwsApConfApTemplateRadioConfigEntry, ntwsApConfRadioProfMaxRxLifetime=ntwsApConfRadioProfMaxRxLifetime, ntwsApConfRadioConfigLoadRebalancingEnabled=ntwsApConfRadioConfigLoadRebalancingEnabled, ntwsApConfServProfIdleClientProbingEnabled=ntwsApConfServProfIdleClientProbingEnabled, ntwsApConfRadioProfLongXmitPreambleEnabled=ntwsApConfRadioProfLongXmitPreambleEnabled, ntwsApConfServProfWebPortalAcl=ntwsApConfServProfWebPortalAcl, ntwsApConfRadioConfigRadioType=ntwsApConfRadioConfigRadioType, ntwsApConfRadioProfRFScanMode=ntwsApConfRadioProfRFScanMode, ntwsApConfApConfigApModelName=ntwsApConfApConfigApModelName, NtwsServiceProfile11nFrameAggregationType=NtwsServiceProfile11nFrameAggregationType, ntwsApConfApTemplateRadioConfigTableGroup=ntwsApConfApTemplateRadioConfigTableGroup, ntwsApConfApTemRadioConfAutoTuneMaxTxPower=ntwsApConfApTemRadioConfAutoTuneMaxTxPower, NtwsServiceProfileName=NtwsServiceProfileName, NtwsSnoopFilterName=NtwsSnoopFilterName, ntwsApConfServProfServiceProfileName=ntwsApConfServProfServiceProfileName, ntwsApConfApTemRadioConfRadioProfileName=ntwsApConfApTemRadioConfRadioProfileName, ntwsApConfRadioProfCacVideoPolicingEnabled=ntwsApConfRadioProfCacVideoPolicingEnabled, ntwsApConfRadioProfAutoTunePowerRampInterval=ntwsApConfRadioProfAutoTunePowerRampInterval, NtwsServiceProfileCacMode=NtwsServiceProfileCacMode, ntwsApConfRpServpServiceProfileName=ntwsApConfRpServpServiceProfileName, ntwsApConfRadioProfCacVoiceMaxUtilization=ntwsApConfRadioProfCacVoiceMaxUtilization, NtwsApTemplateName=NtwsApTemplateName, ntwsApConfRadioConfigAutoTuneMaxTxPower=ntwsApConfRadioConfigAutoTuneMaxTxPower, ntwsApConfServProfWpaIeAuthDot1xEnabled=ntwsApConfServProfWpaIeAuthDot1xEnabled, ntwsApConfServiceProfileTableGroup=ntwsApConfServiceProfileTableGroup, NtwsRadioProfileCountermeasuresMode=NtwsRadioProfileCountermeasuresMode, ntwsApConfApTemplateConfigEntry=ntwsApConfApTemplateConfigEntry, ntwsApConfServProfWebPortalSessionTimeout=ntwsApConfServProfWebPortalSessionTimeout, NtwsRadioProfileAutoTuneChannelRange=NtwsRadioProfileAutoTuneChannelRange, NtwsServiceProfileSsidType=NtwsServiceProfileSsidType, ntwsApConfServiceProfileEntry=ntwsApConfServiceProfileEntry, ntwsApConfServProf11ngMode=ntwsApConfServProf11ngMode, ntwsApConfRpServpRowStatus=ntwsApConfRpServpRowStatus)
