#
# PySNMP MIB module Wellfleet-BRIDGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-BRIDGE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:32:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Opaque, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress, iso, TimeTicks, Integer32, Bits, NotificationType, Counter64, Unsigned32, ObjectIdentity, ModuleIdentity, MibIdentifier, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Opaque", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress", "iso", "TimeTicks", "Integer32", "Bits", "NotificationType", "Counter64", "Unsigned32", "ObjectIdentity", "ModuleIdentity", "MibIdentifier", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfBridgeGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfBridgeGroup")
wfBrLearning = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1))
wfBrTp = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 1))
wfBrTpBaseDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTpBaseDelete.setStatus('mandatory')
wfBrTpBaseEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTpBaseEnable.setStatus('mandatory')
wfBrTpBaseState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("pres", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpBaseState.setStatus('mandatory')
wfBrTpBaseFDBEntries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpBaseFDBEntries.setStatus('mandatory')
wfBrTpBaseFDBSize = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072))).clone(namedValues=NamedValues(("size1024", 1024), ("size2048", 2048), ("size4096", 4096), ("size8192", 8192), ("size16384", 16384), ("size32768", 32768), ("size65536", 65536), ("size131072", 131072))).clone('size1024')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTpBaseFDBSize.setStatus('mandatory')
wfBrTpBaseFDBEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTpBaseFDBEnable.setStatus('mandatory')
wfBrTpBaseFlushFwdTbl = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("flushed", 1), ("noflushed", 2))).clone('noflushed')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTpBaseFlushFwdTbl.setStatus('mandatory')
wfBrTpBaseFDBPortChange = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpBaseFDBPortChange.setStatus('mandatory')
wfBrTpFdbTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 2), )
if mibBuilder.loadTexts: wfBrTpFdbTable.setStatus('mandatory')
wfBrTpFdbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 2, 1), ).setIndexNames((0, "Wellfleet-BRIDGE-MIB", "wfBrTpBaseFdbAddress"))
if mibBuilder.loadTexts: wfBrTpFdbEntry.setStatus('mandatory')
wfBrTpBaseFdbAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpBaseFdbAddress.setStatus('mandatory')
wfBrTpBaseFdbPort = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpBaseFdbPort.setStatus('mandatory')
wfBrTpBaseFdbStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3))).clone(namedValues=NamedValues(("learned", 3))).clone('learned')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpBaseFdbStatus.setStatus('mandatory')
wfBrTpAggrStats = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 3))
wfBrTpAggrInPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpAggrInPkts.setStatus('mandatory')
wfBrTpAggrOutPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpAggrOutPkts.setStatus('mandatory')
wfBrTpAggrDiscardPkts = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 1, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpAggrDiscardPkts.setStatus('mandatory')
wfBrTpInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3), )
if mibBuilder.loadTexts: wfBrTpInterfaceTable.setStatus('mandatory')
wfBrTpInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1), ).setIndexNames((0, "Wellfleet-BRIDGE-MIB", "wfBrTpInterfaceCircuit"))
if mibBuilder.loadTexts: wfBrTpInterfaceEntry.setStatus('mandatory')
wfBrTpInterfaceDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTpInterfaceDelete.setStatus('mandatory')
wfBrTpInterfaceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 33, 17))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2), ("circuitdump", 33), ("fwdtbldump", 17))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTpInterfaceEnable.setStatus('mandatory')
wfBrTpInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("pres", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpInterfaceState.setStatus('mandatory')
wfBrTpInterfaceCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpInterfaceCircuit.setStatus('mandatory')
wfBrTpInterfaceMaxInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpInterfaceMaxInfo.setStatus('mandatory')
wfBrTpInterfaceInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpInterfaceInFrames.setStatus('mandatory')
wfBrTpInterfaceOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpInterfaceOutFrames.setStatus('mandatory')
wfBrTpInterfaceInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTpInterfaceInDiscards.setStatus('mandatory')
wfBrTpInterfaceTranslationDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTpInterfaceTranslationDisable.setStatus('mandatory')
wfBrTrafficFilterTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4), )
if mibBuilder.loadTexts: wfBrTrafficFilterTable.setStatus('mandatory')
wfBrTrafficFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1), ).setIndexNames((0, "Wellfleet-BRIDGE-MIB", "wfBrTrafficFilterCircuit"), (0, "Wellfleet-BRIDGE-MIB", "wfBrTrafficFilterRuleNumber"), (0, "Wellfleet-BRIDGE-MIB", "wfBrTrafficFilterFragment"))
if mibBuilder.loadTexts: wfBrTrafficFilterEntry.setStatus('mandatory')
wfBrTrafficFilterCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTrafficFilterCreate.setStatus('mandatory')
wfBrTrafficFilterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTrafficFilterEnable.setStatus('mandatory')
wfBrTrafficFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("error", 2), ("inactive", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTrafficFilterStatus.setStatus('mandatory')
wfBrTrafficFilterCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTrafficFilterCounter.setStatus('mandatory')
wfBrTrafficFilterDefinition = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 5), Opaque()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTrafficFilterDefinition.setStatus('mandatory')
wfBrTrafficFilterReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTrafficFilterReserved.setStatus('mandatory')
wfBrTrafficFilterCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTrafficFilterCircuit.setStatus('mandatory')
wfBrTrafficFilterRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTrafficFilterRuleNumber.setStatus('mandatory')
wfBrTrafficFilterFragment = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfBrTrafficFilterFragment.setStatus('mandatory')
wfBrTrafficFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 1, 1, 4, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfBrTrafficFilterName.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-BRIDGE-MIB", wfBrTpAggrStats=wfBrTpAggrStats, wfBrTrafficFilterCircuit=wfBrTrafficFilterCircuit, wfBrTpInterfaceEntry=wfBrTpInterfaceEntry, wfBrTpBaseDelete=wfBrTpBaseDelete, wfBrTpBaseFdbPort=wfBrTpBaseFdbPort, wfBrTrafficFilterCreate=wfBrTrafficFilterCreate, wfBrTpInterfaceTable=wfBrTpInterfaceTable, wfBrTpInterfaceState=wfBrTpInterfaceState, wfBrTpBaseEnable=wfBrTpBaseEnable, wfBrTrafficFilterRuleNumber=wfBrTrafficFilterRuleNumber, wfBrTrafficFilterDefinition=wfBrTrafficFilterDefinition, wfBrTpBaseFDBEntries=wfBrTpBaseFDBEntries, wfBrTpFdbTable=wfBrTpFdbTable, wfBrTrafficFilterEnable=wfBrTrafficFilterEnable, wfBrTpBaseFDBSize=wfBrTpBaseFDBSize, wfBrTpInterfaceMaxInfo=wfBrTpInterfaceMaxInfo, wfBrTrafficFilterName=wfBrTrafficFilterName, wfBrTpInterfaceInFrames=wfBrTpInterfaceInFrames, wfBrTp=wfBrTp, wfBrTpBaseFdbAddress=wfBrTpBaseFdbAddress, wfBrTpAggrDiscardPkts=wfBrTpAggrDiscardPkts, wfBrTpBaseFdbStatus=wfBrTpBaseFdbStatus, wfBrTpInterfaceOutFrames=wfBrTpInterfaceOutFrames, wfBrTpInterfaceEnable=wfBrTpInterfaceEnable, wfBrTpAggrInPkts=wfBrTpAggrInPkts, wfBrTpBaseFDBEnable=wfBrTpBaseFDBEnable, wfBrTrafficFilterTable=wfBrTrafficFilterTable, wfBrTpBaseFlushFwdTbl=wfBrTpBaseFlushFwdTbl, wfBrTpInterfaceTranslationDisable=wfBrTpInterfaceTranslationDisable, wfBrTrafficFilterCounter=wfBrTrafficFilterCounter, wfBrTpFdbEntry=wfBrTpFdbEntry, wfBrTrafficFilterStatus=wfBrTrafficFilterStatus, wfBrTpInterfaceCircuit=wfBrTpInterfaceCircuit, wfBrTpBaseFDBPortChange=wfBrTpBaseFDBPortChange, wfBrTpInterfaceDelete=wfBrTpInterfaceDelete, wfBrTrafficFilterFragment=wfBrTrafficFilterFragment, wfBrTpInterfaceInDiscards=wfBrTpInterfaceInDiscards, wfBrTpBaseState=wfBrTpBaseState, wfBrTrafficFilterReserved=wfBrTrafficFilterReserved, wfBrTrafficFilterEntry=wfBrTrafficFilterEntry, wfBrLearning=wfBrLearning, wfBrTpAggrOutPkts=wfBrTpAggrOutPkts)
