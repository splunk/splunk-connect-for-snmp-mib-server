#
# PySNMP MIB module EFM-CU-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EFM-CU-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:44:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
InterfaceIndex, ifIndex, ifSpeed = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex", "ifSpeed")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
iso, Bits, ModuleIdentity, Gauge32, ObjectIdentity, Integer32, Unsigned32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter64, IpAddress, MibIdentifier, mib_2, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Bits", "ModuleIdentity", "Gauge32", "ObjectIdentity", "Integer32", "Unsigned32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter64", "IpAddress", "MibIdentifier", "mib-2", "Counter32")
RowStatus, TruthValue, TextualConvention, PhysAddress, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TextualConvention", "PhysAddress", "DisplayString")
ietfDrafts, = mibBuilder.importSymbols("Zhone", "ietfDrafts")
efmCuMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7))
efmCuMIB.setRevisions(('2012-06-29 00:00', '2005-04-04 00:00',))
if mibBuilder.loadTexts: efmCuMIB.setLastUpdated('200504040000Z')
if mibBuilder.loadTexts: efmCuMIB.setOrganization('IETF Ethernet Interfaces and Hub MIB Working Group')
efmCuObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1))
efmCuConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 2))
efmCuPort = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1))
efmCuPme = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2))
class ProfileIndex(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 255)

class ProfileIndexOrZero(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class ProfileIndexList(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1d:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 6)

class TruthValueOrUnknown(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unknown", 0), ("true", 1), ("false", 2))

efmCuPortNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 0))
efmCuLowBandwidth = NotificationType((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 0, 1)).setObjects(("IF-MIB", "ifSpeed"), ("EFM-CU-MIB", "efmCuThreshLowBandwidth"))
if mibBuilder.loadTexts: efmCuLowBandwidth.setStatus('current')
efmCuPortConfTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 1), )
if mibBuilder.loadTexts: efmCuPortConfTable.setStatus('current')
efmCuPortConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: efmCuPortConfEntry.setStatus('current')
efmCuPAFAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPAFAdminState.setStatus('current')
efmCuPAFDiscoveryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 1, 1, 2), PhysAddress().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPAFDiscoveryCode.setStatus('current')
efmCuAdminProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 1, 1, 3), ProfileIndexList().clone(hexValue="01")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuAdminProfile.setStatus('current')
efmCuTargetDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 100000), ValueRangeConstraint(999999, 999999), )).clone(50000)).setUnits('Kbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuTargetDataRate.setStatus('current')
efmCuTargetWorstCaseSnrMgn = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10, 21))).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuTargetWorstCaseSnrMgn.setStatus('current')
efmCuThreshLowBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('Kbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuThreshLowBandwidth.setStatus('current')
efmCuLowBandwidthEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 1, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuLowBandwidthEnable.setStatus('current')
efmCuTargetCurrentConditionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuTargetCurrentConditionMode.setStatus('current')
efmCuTargetCurrentConditionSnrMgn = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10, 21)).clone(6)).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuTargetCurrentConditionSnrMgn.setStatus('current')
efmCuTargetWorstCaseMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 1, 1, 10), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuTargetWorstCaseMode.setStatus('current')
efmCuPAFAutoDiscovery = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("optional", 2), ("required", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPAFAutoDiscovery.setStatus('current')
efmCuPmeErrorClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normalStats", 1), ("clearStats", 2))).clone('normalStats')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeErrorClearStats.setStatus('current')
efmCuPmeSnrClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normalStats", 1), ("clearStats", 2))).clone('normalStats')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeSnrClearStats.setStatus('current')
efmCuPortCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 2), )
if mibBuilder.loadTexts: efmCuPortCapabilityTable.setStatus('current')
efmCuPortCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: efmCuPortCapabilityEntry.setStatus('current')
efmCuPAFSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 2, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPAFSupported.setStatus('current')
efmCuPeerPAFSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 2, 1, 2), TruthValueOrUnknown()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPeerPAFSupported.setStatus('current')
efmCuPAFCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPAFCapacity.setStatus('current')
efmCuPeerPAFCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 32), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPeerPAFCapacity.setStatus('current')
efmCuPortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 3), )
if mibBuilder.loadTexts: efmCuPortStatusTable.setStatus('current')
efmCuPortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: efmCuPortStatusEntry.setStatus('current')
efmCuFltStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 3, 1, 1), Bits().clone(namedValues=NamedValues(("noPeer", 0), ("pmeSubTypeMismatch", 1), ("lowBandwidth", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuFltStatus.setStatus('current')
efmCuPortSide = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("subscriber", 1), ("office", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPortSide.setStatus('current')
efmCuNumPMEs = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuNumPMEs.setStatus('current')
efmCuPAFInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPAFInErrors.setStatus('current')
efmCuPAFInSmallFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPAFInSmallFragments.setStatus('current')
efmCuPAFInLargeFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPAFInLargeFragments.setStatus('current')
efmCuPAFInBadFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPAFInBadFragments.setStatus('current')
efmCuPAFInLostFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPAFInLostFragments.setStatus('current')
efmCuPAFInLostStarts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPAFInLostStarts.setStatus('current')
efmCuPAFInLostEnds = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPAFInLostEnds.setStatus('current')
efmCuPAFInOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 1, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPAFInOverflows.setStatus('current')
efmCuPmeNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 0))
efmCuPmeLineAtnCrossing = NotificationType((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 0, 1)).setObjects(("EFM-CU-MIB", "efmCuPmeLineAtn"), ("EFM-CU-MIB", "efmCuPmeThreshLineAtn"))
if mibBuilder.loadTexts: efmCuPmeLineAtnCrossing.setStatus('current')
efmCuPmeSnrMgnCrossing = NotificationType((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 0, 2)).setObjects(("EFM-CU-MIB", "efmCuPmeSnrMgn"), ("EFM-CU-MIB", "efmCuPmeThreshMinSnrMgn"), ("EFM-CU-MIB", "efmCuPmeThreshMaxSnrMgnDelta"))
if mibBuilder.loadTexts: efmCuPmeSnrMgnCrossing.setStatus('current')
efmCuPmeDeviceFault = NotificationType((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 0, 3)).setObjects(("EFM-CU-MIB", "efmCuPmeFltStatus"))
if mibBuilder.loadTexts: efmCuPmeDeviceFault.setStatus('current')
efmCuPmeConfigInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 0, 4)).setObjects(("EFM-CU-MIB", "efmCuPmeFltStatus"), ("EFM-CU-MIB", "efmCuAdminProfile"), ("EFM-CU-MIB", "efmCuPmeAdminProfile"))
if mibBuilder.loadTexts: efmCuPmeConfigInitFailure.setStatus('current')
efmCuPmeProtocolInitFailure = NotificationType((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 0, 5)).setObjects(("EFM-CU-MIB", "efmCuPmeFltStatus"), ("EFM-CU-MIB", "efmCuPmeOperSubType"))
if mibBuilder.loadTexts: efmCuPmeProtocolInitFailure.setStatus('current')
efmCuPmeSnrMgnCrossingClear = NotificationType((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 0, 6)).setObjects(("EFM-CU-MIB", "efmCuPmeSnrMgn"), ("EFM-CU-MIB", "efmCuPmeThreshMinSnrMgn"), ("EFM-CU-MIB", "efmCuPmeThreshMaxSnrMgnDelta"))
if mibBuilder.loadTexts: efmCuPmeSnrMgnCrossingClear.setStatus('current')
efmCuPmeErrorThreshEfmTrafficDisable = NotificationType((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 0, 7)).setObjects(("EFM-CU-MIB", "efmCuPmeErrorThreshMonInterval"))
if mibBuilder.loadTexts: efmCuPmeErrorThreshEfmTrafficDisable.setStatus('current')
efmCuPmeErrorThreshEfmTrafficEnable = NotificationType((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 0, 8)).setObjects(("EFM-CU-MIB", "efmCuPmeErrorThreshMonClrInterval"))
if mibBuilder.loadTexts: efmCuPmeErrorThreshEfmTrafficEnable.setStatus('current')
efmCuPmeBondGroupTrafficDisabled = NotificationType((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 0, 9))
if mibBuilder.loadTexts: efmCuPmeBondGroupTrafficDisabled.setStatus('current')
efmCuPmeBondGroupTrafficEnabled = NotificationType((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 0, 10))
if mibBuilder.loadTexts: efmCuPmeBondGroupTrafficEnabled.setStatus('current')
efmCuPmeLinkTrafficDisabled = NotificationType((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 0, 11))
if mibBuilder.loadTexts: efmCuPmeLinkTrafficDisabled.setStatus('current')
efmCuPmeLinkTrafficEnabled = NotificationType((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 0, 12))
if mibBuilder.loadTexts: efmCuPmeLinkTrafficEnabled.setStatus('current')
efmCuPmeConfTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1), )
if mibBuilder.loadTexts: efmCuPmeConfTable.setStatus('current')
efmCuPmeConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: efmCuPmeConfEntry.setStatus('current')
efmCuPmeAdminSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("ieee2BaseTLO", 1), ("ieee2BaseTLR", 2), ("ieee10PassTSO", 3), ("ieee10PassTSR", 4), ("ieee2BaseTLor10PassTSR", 5), ("ieee2BaseTLor10PassTSO", 6), ("ieee10PassTSor2BaseTLO", 7))).clone('ieee2BaseTLR')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeAdminSubType.setStatus('current')
efmCuPmeAdminProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 2), ProfileIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeAdminProfile.setStatus('current')
efmCuPAFRemoteDiscoveryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 3), PhysAddress().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPAFRemoteDiscoveryCode.setStatus('current')
efmCuPmeThreshLineAtn = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 128))).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeThreshLineAtn.setStatus('current')
efmCuPmeThreshMinSnrMgn = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 128))).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeThreshMinSnrMgn.setStatus('current')
efmCuPmeLineAtnCrossingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeLineAtnCrossingEnable.setStatus('current')
efmCuPmeSnrMgnCrossingTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeSnrMgnCrossingTrapEnable.setStatus('current')
efmCuPmeDeviceFaultEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeDeviceFaultEnable.setStatus('current')
efmCuPmeConfigInitFailEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeConfigInitFailEnable.setStatus('current')
efmCuPmeProtocolInitFailEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 10), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeProtocolInitFailEnable.setStatus('current')
efmCuPmeThreshMaxSnrMgnDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)).clone(20)).setUnits('dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeThreshMaxSnrMgnDelta.setStatus('current')
efmCuPmeMaintenanceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("off", 1), ("manual", 2), ("automaticOnce", 3), ("automaticDaily", 4), ("automaticContinuous", 5))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeMaintenanceMode.setStatus('current')
efmCuPmeMaintenanceStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 13), DisplayString().clone('00:00')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeMaintenanceStartTime.setStatus('current')
efmCuPmeMaintenanceEndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 14), DisplayString().clone('23:59')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeMaintenanceEndTime.setStatus('current')
efmCuPmeSnrMonitoringInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 15), DisplayString().clone('01:00')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeSnrMonitoringInterval.setStatus('current')
efmCuPmeErrorThreshMonEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 16), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeErrorThreshMonEnable.setStatus('current')
efmCuPmeErrorThreshMonNotifyEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 17), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeErrorThreshMonNotifyEnable.setStatus('current')
efmCuPmeErrorThreshMonInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 65535)).clone(12)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeErrorThreshMonInterval.setStatus('current')
efmCuPmeErrorThreshMonClrInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 65535)).clone(1800)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeErrorThreshMonClrInterval.setStatus('current')
efmCuPmeLinkTrfcDisablTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuPmeLinkTrfcDisablTrapEnable.setStatus('current')
efmCuPmeCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 2), )
if mibBuilder.loadTexts: efmCuPmeCapabilityTable.setStatus('current')
efmCuPmeCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: efmCuPmeCapabilityEntry.setStatus('current')
efmCuPmeSubTypesSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 2, 1, 1), Bits().clone(namedValues=NamedValues(("ieee2BaseTLO", 0), ("ieee2BaseTLR", 1), ("ieee10PassTSO", 2), ("ieee10PassTSR", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPmeSubTypesSupported.setStatus('current')
efmCuPmeStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3), )
if mibBuilder.loadTexts: efmCuPmeStatusTable.setStatus('current')
efmCuPmeStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: efmCuPmeStatusEntry.setStatus('current')
efmCuPmeOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("downNotReady", 2), ("downReady", 3), ("init", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPmeOperStatus.setStatus('current')
efmCuPmeFltStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3, 1, 2), Bits().clone(namedValues=NamedValues(("lossOfFraming", 0), ("snrMgnDefect", 1), ("lineAtnDefect", 2), ("deviceFault", 3), ("configInitFailure", 4), ("protocolInitFailure", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPmeFltStatus.setStatus('current')
efmCuPmeOperSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ieee2BaseTLO", 1), ("ieee2BaseTLR", 2), ("ieee10PassTSO", 3), ("ieee10PassTSR", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPmeOperSubType.setStatus('current')
efmCuPmeOperProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3, 1, 4), ProfileIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPmeOperProfile.setStatus('current')
efmCuPmeSnrMgn = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-127, 128), ValueRangeConstraint(65535, 65535), ))).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPmeSnrMgn.setStatus('current')
efmCuPmePeerSnrMgn = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-127, 128), ValueRangeConstraint(65535, 65535), ))).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPmePeerSnrMgn.setStatus('current')
efmCuPmeLineAtn = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-127, 128), ValueRangeConstraint(65535, 65535), ))).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPmeLineAtn.setStatus('current')
efmCuPmePeerLineAtn = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-127, 128), ValueRangeConstraint(65535, 65535), ))).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPmePeerLineAtn.setStatus('current')
efmCuPmeTCCodingErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPmeTCCodingErrors.setStatus('current')
efmCuPmeTCCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPmeTCCrcErrors.setStatus('current')
efmCuPmeSnrCrossingCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPmeSnrCrossingCnt.setStatus('current')
efmCuPmeTCDownCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPmeTCDownCnt.setStatus('current')
efmCuPmeErrorTCDownCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPmeErrorTCDownCnt.setStatus('current')
efmCuPmeErrorRestartCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPmeErrorRestartCnt.setStatus('current')
efmCuPmeSnrRestartCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPmeSnrRestartCnt.setStatus('current')
efmCuPmeErrorConsecutiveSec = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPmeErrorConsecutiveSec.setStatus('current')
efmCuPmeErrorMaxConsecutiveSec = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 3, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPmeErrorMaxConsecutiveSec.setStatus('current')
efmCuPme2B = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 5))
efmCuPme2BProfileTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 5, 2), )
if mibBuilder.loadTexts: efmCuPme2BProfileTable.setStatus('current')
efmCuPme2BProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 5, 2, 1), ).setIndexNames((0, "EFM-CU-MIB", "efmCuPme2BProfileIndex"))
if mibBuilder.loadTexts: efmCuPme2BProfileEntry.setStatus('current')
efmCuPme2BProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 5, 2, 1, 1), ProfileIndex())
if mibBuilder.loadTexts: efmCuPme2BProfileIndex.setStatus('current')
efmCuPme2BProfileDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 5, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: efmCuPme2BProfileDescr.setStatus('current')
efmCuPme2BRegion = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("region1", 1), ("region2", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: efmCuPme2BRegion.setStatus('current')
efmCuPme2BDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 5, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15352))).setUnits('Kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: efmCuPme2BDataRate.setStatus('current')
efmCuPme2BPower = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 5, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 42), ))).setUnits('0.5 dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: efmCuPme2BPower.setStatus('current')
efmCuPme2BConstellation = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("adaptive", 0), ("tcpam16", 1), ("tcpam32", 2), ("tcpam4", 3), ("tcpam8", 4), ("tcpam64", 5), ("tcpam128", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: efmCuPme2BConstellation.setStatus('current')
efmCuPme2BProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 5, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: efmCuPme2BProfileRowStatus.setStatus('current')
efmCuPmeNtr = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 5, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("localOsc", 1), ("refClk8khz", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: efmCuPmeNtr.setStatus('current')
efmCuPme10P = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 6))
efmCuPme10PProfileTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 6, 1), )
if mibBuilder.loadTexts: efmCuPme10PProfileTable.setStatus('current')
efmCuPme10PProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 6, 1, 1), ).setIndexNames((0, "EFM-CU-MIB", "efmCuPme10PProfileIndex"))
if mibBuilder.loadTexts: efmCuPme10PProfileEntry.setStatus('current')
efmCuPme10PProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 6, 1, 1, 1), ProfileIndex())
if mibBuilder.loadTexts: efmCuPme10PProfileIndex.setStatus('current')
efmCuPme10PProfileDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 6, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: efmCuPme10PProfileDescr.setStatus('current')
efmCuPme10PBandplanPSDMskProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29))).clone(namedValues=NamedValues(("profile1", 1), ("profile2", 2), ("profile3", 3), ("profile4", 4), ("profile5", 5), ("profile6", 6), ("profile7", 7), ("profile8", 8), ("profile9", 9), ("profile10", 10), ("profile11", 11), ("profile12", 12), ("profile13", 13), ("profile14", 14), ("profile15", 15), ("profile16", 16), ("profile17", 17), ("profile18", 18), ("profile19", 19), ("profile20", 20), ("profile21", 21), ("profile22", 22), ("profile23", 23), ("profile24", 24), ("profile25", 25), ("profile26", 26), ("profile27", 27), ("profile28", 28), ("profile29", 29)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: efmCuPme10PBandplanPSDMskProfile.setStatus('current')
efmCuPme10PUPBOReferenceProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("profile1", 1), ("profile2", 2), ("profile3", 3), ("profile4", 4), ("profile5", 5), ("profile6", 6), ("profile7", 7), ("profile8", 8), ("profile9", 9)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: efmCuPme10PUPBOReferenceProfile.setStatus('current')
efmCuPme10PBandNotchProfiles = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 6, 1, 1, 5), Bits().clone(namedValues=NamedValues(("profile0", 0), ("profile1", 1), ("profile2", 2), ("profile3", 3), ("profile4", 4), ("profile5", 5), ("profile6", 6), ("profile7", 7), ("profile8", 8), ("profile9", 9), ("profile10", 10), ("profile11", 11)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: efmCuPme10PBandNotchProfiles.setStatus('current')
efmCuPme10PPayloadURateProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 10, 15, 20, 25, 30, 50, 70, 100))).clone(namedValues=NamedValues(("profile5", 5), ("profile10", 10), ("profile15", 15), ("profile20", 20), ("profile25", 25), ("profile30", 30), ("profile50", 50), ("profile70", 70), ("profile100", 100)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: efmCuPme10PPayloadURateProfile.setStatus('current')
efmCuPme10PPayloadDRateProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 10, 15, 20, 25, 30, 50, 70, 100, 140, 200))).clone(namedValues=NamedValues(("profile5", 5), ("profile10", 10), ("profile15", 15), ("profile20", 20), ("profile25", 25), ("profile30", 30), ("profile50", 50), ("profile70", 70), ("profile100", 100), ("profile140", 140), ("profile200", 200)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: efmCuPme10PPayloadDRateProfile.setStatus('current')
efmCuPme10PProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 6, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: efmCuPme10PProfileRowStatus.setStatus('current')
efmCuPme10PStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 6, 2), )
if mibBuilder.loadTexts: efmCuPme10PStatusTable.setStatus('current')
efmCuPme10PStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 6, 2, 1), )
efmCuPmeStatusEntry.registerAugmentions(("EFM-CU-MIB", "efmCuPme10PStatusEntry"))
efmCuPme10PStatusEntry.setIndexNames(*efmCuPmeStatusEntry.getIndexNames())
if mibBuilder.loadTexts: efmCuPme10PStatusEntry.setStatus('current')
efmCuPme10PElectricalLength = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 8192), ValueRangeConstraint(65535, 65535), ))).setUnits('m').setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPme10PElectricalLength.setStatus('current')
efmCuPme10PFECCorrectedBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 6, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPme10PFECCorrectedBlocks.setStatus('current')
efmCuPme10PFECUncorrectedBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 2, 6, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuPme10PFECUncorrectedBlocks.setStatus('current')
ifAvailableStackTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 3), )
if mibBuilder.loadTexts: ifAvailableStackTable.setStatus('current')
ifAvailableStackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 3, 1), ).setIndexNames((0, "EFM-CU-MIB", "ifAvailableStackHigherLayer"), (0, "EFM-CU-MIB", "ifAvailableStackLowerLayer"))
if mibBuilder.loadTexts: ifAvailableStackEntry.setStatus('current')
ifAvailableStackHigherLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: ifAvailableStackHigherLayer.setStatus('current')
ifAvailableStackLowerLayer = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 3, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: ifAvailableStackLowerLayer.setStatus('current')
ifAvailableStackStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("capable", 1), ("outOfService", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ifAvailableStackStatus.setStatus('current')
efmCuRegeneratorStats = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 4))
efmCuRegeneratorStatusTable = MibTable((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 4, 1), )
if mibBuilder.loadTexts: efmCuRegeneratorStatusTable.setStatus('current')
efmCuRegeneratorStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "EFM-CU-MIB", "efmCuRegenIndex"), (0, "EFM-CU-MIB", "efmCuRegenSide"))
if mibBuilder.loadTexts: efmCuRegeneratorStatusEntry.setStatus('current')
efmCuRegenIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("ltu-c", 1), ("ltu-r", 2), ("regenerator-1", 3), ("regenerator-2", 4), ("regenerator-3", 5), ("regenerator-4", 6), ("regenerator-5", 7), ("regenerator-6", 8), ("regenerator-7", 9), ("regenerator-8", 10)))).setUnits('Address')
if mibBuilder.loadTexts: efmCuRegenIndex.setStatus('current')
efmCuRegenSide = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("network", 1), ("customer", 2)))).setUnits('Side')
if mibBuilder.loadTexts: efmCuRegenSide.setStatus('current')
efmCuRegenSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 4, 1, 1, 3), Integer32()).setUnits('tenths of dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuRegenSNR.setStatus('current')
efmCuRegenLineAttn = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 4, 1, 1, 4), Integer32()).setUnits('tenths of dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuRegenLineAttn.setStatus('current')
efmCuRegenCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 4, 1, 1, 5), Counter32()).setUnits('Errors').setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuRegenCRC.setStatus('current')
efmCuRegenES = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 4, 1, 1, 6), Counter32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuRegenES.setStatus('current')
efmCuRegenSES = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 4, 1, 1, 7), Counter32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuRegenSES.setStatus('current')
efmCuRegenUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 4, 1, 1, 8), Counter32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuRegenUAS.setStatus('current')
efmCuRegenLOSWS = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 4, 1, 1, 9), Counter32()).setUnits('Seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuRegenLOSWS.setStatus('current')
efmCuRegenDCAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 4, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setUnits('Alarm').setMaxAccess("readonly")
if mibBuilder.loadTexts: efmCuRegenDCAlarm.setStatus('current')
efmCuRegenClearCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 1, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normalCounts", 1), ("clearCounts", 2))).clone('normalCounts')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: efmCuRegenClearCounts.setStatus('current')
efmCuGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 2, 1))
efmCuCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 2, 2))
efmCuBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 2, 1, 1)).setObjects(("EFM-CU-MIB", "efmCuPAFSupported"), ("EFM-CU-MIB", "efmCuAdminProfile"), ("EFM-CU-MIB", "efmCuTargetDataRate"), ("EFM-CU-MIB", "efmCuTargetWorstCaseSnrMgn"), ("EFM-CU-MIB", "efmCuPortSide"), ("EFM-CU-MIB", "efmCuFltStatus"), ("EFM-CU-MIB", "efmCuTargetCurrentConditionMode"), ("EFM-CU-MIB", "efmCuTargetCurrentConditionSnrMgn"), ("EFM-CU-MIB", "efmCuTargetWorstCaseMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    efmCuBasicGroup = efmCuBasicGroup.setStatus('current')
efmCuPAFGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 2, 1, 2)).setObjects(("EFM-CU-MIB", "efmCuPeerPAFSupported"), ("EFM-CU-MIB", "efmCuPAFCapacity"), ("EFM-CU-MIB", "efmCuPeerPAFCapacity"), ("EFM-CU-MIB", "efmCuPAFAdminState"), ("EFM-CU-MIB", "efmCuPAFDiscoveryCode"), ("EFM-CU-MIB", "efmCuPAFRemoteDiscoveryCode"), ("EFM-CU-MIB", "efmCuNumPMEs"), ("EFM-CU-MIB", "ifAvailableStackStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    efmCuPAFGroup = efmCuPAFGroup.setStatus('current')
ifStackCapabilityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 2, 1, 3)).setObjects(("EFM-CU-MIB", "ifAvailableStackStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ifStackCapabilityGroup = ifStackCapabilityGroup.setStatus('current')
efmCuPAFErrorsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 2, 1, 4)).setObjects(("EFM-CU-MIB", "efmCuPAFInErrors"), ("EFM-CU-MIB", "efmCuPAFInSmallFragments"), ("EFM-CU-MIB", "efmCuPAFInLargeFragments"), ("EFM-CU-MIB", "efmCuPAFInBadFragments"), ("EFM-CU-MIB", "efmCuPAFInLostFragments"), ("EFM-CU-MIB", "efmCuPAFInLostStarts"), ("EFM-CU-MIB", "efmCuPAFInLostEnds"), ("EFM-CU-MIB", "efmCuPAFInOverflows"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    efmCuPAFErrorsGroup = efmCuPAFErrorsGroup.setStatus('current')
efmCuPmeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 2, 1, 5)).setObjects(("EFM-CU-MIB", "efmCuPmeAdminProfile"), ("EFM-CU-MIB", "efmCuPmeOperStatus"), ("EFM-CU-MIB", "efmCuPmeFltStatus"), ("EFM-CU-MIB", "efmCuPmeSubTypesSupported"), ("EFM-CU-MIB", "efmCuPmeAdminSubType"), ("EFM-CU-MIB", "efmCuPmeOperSubType"), ("EFM-CU-MIB", "efmCuPAFRemoteDiscoveryCode"), ("EFM-CU-MIB", "efmCuPmeOperProfile"), ("EFM-CU-MIB", "efmCuPmeSnrMgn"), ("EFM-CU-MIB", "efmCuPmePeerSnrMgn"), ("EFM-CU-MIB", "efmCuPmeLineAtn"), ("EFM-CU-MIB", "efmCuPmePeerLineAtn"), ("EFM-CU-MIB", "efmCuPmeTCCodingErrors"), ("EFM-CU-MIB", "efmCuPmeTCCrcErrors"), ("EFM-CU-MIB", "efmCuPmeThreshLineAtn"), ("EFM-CU-MIB", "efmCuPmeThreshMinSnrMgn"), ("EFM-CU-MIB", "efmCuPmeThreshMaxSnrMgnDelta"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    efmCuPmeGroup = efmCuPmeGroup.setStatus('current')
efmCuAlarmConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 2, 1, 6)).setObjects(("EFM-CU-MIB", "efmCuThreshLowBandwidth"), ("EFM-CU-MIB", "efmCuLowBandwidthEnable"), ("EFM-CU-MIB", "efmCuPmeThreshLineAtn"), ("EFM-CU-MIB", "efmCuPmeLineAtnCrossingEnable"), ("EFM-CU-MIB", "efmCuPmeThreshMinSnrMgn"), ("EFM-CU-MIB", "efmCuPmeSnrMgnCrossingTrapEnable"), ("EFM-CU-MIB", "efmCuPmeLineAtnCrossingEnable"), ("EFM-CU-MIB", "efmCuPmeDeviceFaultEnable"), ("EFM-CU-MIB", "efmCuPmeConfigInitFailEnable"), ("EFM-CU-MIB", "efmCuPmeProtocolInitFailEnable"), ("EFM-CU-MIB", "efmCuPmeThreshMaxSnrMgnDelta"), ("EFM-CU-MIB", "efmCuPmeMaintenanceMode"), ("EFM-CU-MIB", "efmCuPmeMaintenanceStartTime"), ("EFM-CU-MIB", "efmCuPmeMaintenanceEndTime"), ("EFM-CU-MIB", "efmCuPmeSnrMonitoringInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    efmCuAlarmConfGroup = efmCuAlarmConfGroup.setStatus('current')
efmCuNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 2, 1, 7)).setObjects(("EFM-CU-MIB", "efmCuLowBandwidth"), ("EFM-CU-MIB", "efmCuPmeLineAtnCrossing"), ("EFM-CU-MIB", "efmCuPmeSnrMgnCrossing"), ("EFM-CU-MIB", "efmCuPmeDeviceFault"), ("EFM-CU-MIB", "efmCuPmeConfigInitFailure"), ("EFM-CU-MIB", "efmCuPmeProtocolInitFailure"), ("EFM-CU-MIB", "efmCuPmeSnrMgnCrossingClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    efmCuNotificationGroup = efmCuNotificationGroup.setStatus('current')
efmCuPme2BProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 2, 1, 8)).setObjects(("EFM-CU-MIB", "efmCuPme2BProfileDescr"), ("EFM-CU-MIB", "efmCuPme2BRegion"), ("EFM-CU-MIB", "efmCuPme2BDataRate"), ("EFM-CU-MIB", "efmCuPme2BPower"), ("EFM-CU-MIB", "efmCuPme2BConstellation"), ("EFM-CU-MIB", "efmCuPme2BProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    efmCuPme2BProfileGroup = efmCuPme2BProfileGroup.setStatus('current')
efmCuPme10PProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 2, 1, 9)).setObjects(("EFM-CU-MIB", "efmCuPme10PProfileDescr"), ("EFM-CU-MIB", "efmCuPme10PBandplanPSDMskProfile"), ("EFM-CU-MIB", "efmCuPme10PUPBOReferenceProfile"), ("EFM-CU-MIB", "efmCuPme10PBandNotchProfiles"), ("EFM-CU-MIB", "efmCuPme10PPayloadURateProfile"), ("EFM-CU-MIB", "efmCuPme10PPayloadDRateProfile"), ("EFM-CU-MIB", "efmCuPme10PProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    efmCuPme10PProfileGroup = efmCuPme10PProfileGroup.setStatus('current')
efmCuPme10PStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 2, 1, 10)).setObjects(("EFM-CU-MIB", "efmCuPme10PElectricalLength"), ("EFM-CU-MIB", "efmCuPme10PFECCorrectedBlocks"), ("EFM-CU-MIB", "efmCuPme10PFECUncorrectedBlocks"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    efmCuPme10PStatusGroup = efmCuPme10PStatusGroup.setStatus('current')
efmCuCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 5504, 10, 1, 7, 2, 2, 1)).setObjects(("EFM-CU-MIB", "efmCuBasicGroup"), ("EFM-CU-MIB", "efmCuPmeGroup"), ("EFM-CU-MIB", "efmCuAlarmConfGroup"), ("EFM-CU-MIB", "efmCuNotificationGroup"), ("EFM-CU-MIB", "efmCuPme2BProfileGroup"), ("EFM-CU-MIB", "efmCuPme10PProfileGroup"), ("EFM-CU-MIB", "efmCuPAFGroup"), ("EFM-CU-MIB", "ifStackCapabilityGroup"), ("EFM-CU-MIB", "efmCuPAFErrorsGroup"), ("EFM-CU-MIB", "efmCuPme10PStatusGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    efmCuCompliance = efmCuCompliance.setStatus('current')
mibBuilder.exportSymbols("EFM-CU-MIB", efmCuPmeSnrCrossingCnt=efmCuPmeSnrCrossingCnt, efmCuPortSide=efmCuPortSide, efmCuPme10PBandplanPSDMskProfile=efmCuPme10PBandplanPSDMskProfile, efmCuPmeMaintenanceEndTime=efmCuPmeMaintenanceEndTime, efmCuConformance=efmCuConformance, efmCuPme10PStatusGroup=efmCuPme10PStatusGroup, efmCuPmeDeviceFault=efmCuPmeDeviceFault, efmCuPmePeerLineAtn=efmCuPmePeerLineAtn, efmCuPmeMaintenanceStartTime=efmCuPmeMaintenanceStartTime, ProfileIndexList=ProfileIndexList, efmCuPmeOperSubType=efmCuPmeOperSubType, efmCuPme10PBandNotchProfiles=efmCuPme10PBandNotchProfiles, efmCuPmeErrorTCDownCnt=efmCuPmeErrorTCDownCnt, efmCuPmeTCCodingErrors=efmCuPmeTCCodingErrors, PYSNMP_MODULE_ID=efmCuMIB, efmCuPmeStatusTable=efmCuPmeStatusTable, efmCuPmeTCCrcErrors=efmCuPmeTCCrcErrors, efmCuRegenClearCounts=efmCuRegenClearCounts, efmCuPme10PProfileGroup=efmCuPme10PProfileGroup, efmCuThreshLowBandwidth=efmCuThreshLowBandwidth, efmCuPmeConfTable=efmCuPmeConfTable, efmCuPmeBondGroupTrafficEnabled=efmCuPmeBondGroupTrafficEnabled, efmCuPme=efmCuPme, efmCuPme10PPayloadURateProfile=efmCuPme10PPayloadURateProfile, efmCuPmeErrorThreshEfmTrafficEnable=efmCuPmeErrorThreshEfmTrafficEnable, efmCuLowBandwidth=efmCuLowBandwidth, efmCuPAFInSmallFragments=efmCuPAFInSmallFragments, efmCuPme10PPayloadDRateProfile=efmCuPme10PPayloadDRateProfile, efmCuPmeProtocolInitFailEnable=efmCuPmeProtocolInitFailEnable, efmCuPmeSubTypesSupported=efmCuPmeSubTypesSupported, efmCuPAFInOverflows=efmCuPAFInOverflows, ProfileIndex=ProfileIndex, efmCuPmeLinkTrfcDisablTrapEnable=efmCuPmeLinkTrfcDisablTrapEnable, efmCuPAFInLostFragments=efmCuPAFInLostFragments, efmCuObjects=efmCuObjects, efmCuPme2BDataRate=efmCuPme2BDataRate, efmCuPme10PProfileDescr=efmCuPme10PProfileDescr, efmCuAdminProfile=efmCuAdminProfile, efmCuPAFAdminState=efmCuPAFAdminState, efmCuRegenSide=efmCuRegenSide, efmCuPmeAdminSubType=efmCuPmeAdminSubType, efmCuPmeNtr=efmCuPmeNtr, efmCuPAFInErrors=efmCuPAFInErrors, efmCuPme2BProfileGroup=efmCuPme2BProfileGroup, efmCuTargetCurrentConditionSnrMgn=efmCuTargetCurrentConditionSnrMgn, efmCuPmeErrorClearStats=efmCuPmeErrorClearStats, ProfileIndexOrZero=ProfileIndexOrZero, efmCuPAFInLostEnds=efmCuPAFInLostEnds, efmCuGroups=efmCuGroups, efmCuBasicGroup=efmCuBasicGroup, efmCuPmeErrorThreshMonNotifyEnable=efmCuPmeErrorThreshMonNotifyEnable, efmCuPmeConfigInitFailure=efmCuPmeConfigInitFailure, efmCuPme2BProfileIndex=efmCuPme2BProfileIndex, efmCuRegenSNR=efmCuRegenSNR, efmCuPmeSnrRestartCnt=efmCuPmeSnrRestartCnt, efmCuRegenDCAlarm=efmCuRegenDCAlarm, efmCuPmeConfEntry=efmCuPmeConfEntry, efmCuPmeBondGroupTrafficDisabled=efmCuPmeBondGroupTrafficDisabled, efmCuCompliance=efmCuCompliance, efmCuNotificationGroup=efmCuNotificationGroup, efmCuPmeErrorRestartCnt=efmCuPmeErrorRestartCnt, efmCuPme10PFECUncorrectedBlocks=efmCuPme10PFECUncorrectedBlocks, efmCuPortConfEntry=efmCuPortConfEntry, efmCuPmeCapabilityEntry=efmCuPmeCapabilityEntry, efmCuPme10PStatusTable=efmCuPme10PStatusTable, efmCuPmeErrorThreshEfmTrafficDisable=efmCuPmeErrorThreshEfmTrafficDisable, efmCuPmeErrorConsecutiveSec=efmCuPmeErrorConsecutiveSec, efmCuPmeNotifications=efmCuPmeNotifications, ifAvailableStackHigherLayer=ifAvailableStackHigherLayer, efmCuPmeConfigInitFailEnable=efmCuPmeConfigInitFailEnable, efmCuTargetWorstCaseMode=efmCuTargetWorstCaseMode, efmCuPmeSnrMgnCrossing=efmCuPmeSnrMgnCrossing, efmCuPmeSnrMgnCrossingClear=efmCuPmeSnrMgnCrossingClear, efmCuPmeLineAtnCrossingEnable=efmCuPmeLineAtnCrossingEnable, efmCuPmeThreshLineAtn=efmCuPmeThreshLineAtn, efmCuPmeSnrMgn=efmCuPmeSnrMgn, efmCuPme2BProfileTable=efmCuPme2BProfileTable, efmCuPAFGroup=efmCuPAFGroup, efmCuPmeThreshMaxSnrMgnDelta=efmCuPmeThreshMaxSnrMgnDelta, efmCuPortCapabilityEntry=efmCuPortCapabilityEntry, efmCuPortConfTable=efmCuPortConfTable, efmCuTargetWorstCaseSnrMgn=efmCuTargetWorstCaseSnrMgn, efmCuRegenLOSWS=efmCuRegenLOSWS, efmCuPmeErrorThreshMonEnable=efmCuPmeErrorThreshMonEnable, efmCuPortStatusTable=efmCuPortStatusTable, efmCuPAFRemoteDiscoveryCode=efmCuPAFRemoteDiscoveryCode, efmCuPmeTCDownCnt=efmCuPmeTCDownCnt, efmCuPAFInLargeFragments=efmCuPAFInLargeFragments, efmCuPmeLineAtnCrossing=efmCuPmeLineAtnCrossing, efmCuPort=efmCuPort, efmCuAlarmConfGroup=efmCuAlarmConfGroup, efmCuFltStatus=efmCuFltStatus, efmCuPeerPAFSupported=efmCuPeerPAFSupported, ifAvailableStackTable=ifAvailableStackTable, efmCuPmeOperProfile=efmCuPmeOperProfile, efmCuTargetDataRate=efmCuTargetDataRate, efmCuPmeCapabilityTable=efmCuPmeCapabilityTable, efmCuPAFCapacity=efmCuPAFCapacity, efmCuPme10PUPBOReferenceProfile=efmCuPme10PUPBOReferenceProfile, efmCuPme2B=efmCuPme2B, efmCuPAFSupported=efmCuPAFSupported, efmCuPmeStatusEntry=efmCuPmeStatusEntry, efmCuPmeLinkTrafficEnabled=efmCuPmeLinkTrafficEnabled, efmCuRegenCRC=efmCuRegenCRC, efmCuPme10PStatusEntry=efmCuPme10PStatusEntry, efmCuPAFInLostStarts=efmCuPAFInLostStarts, efmCuCompliances=efmCuCompliances, efmCuPmeAdminProfile=efmCuPmeAdminProfile, efmCuRegenUAS=efmCuRegenUAS, efmCuPme10PProfileIndex=efmCuPme10PProfileIndex, efmCuPortStatusEntry=efmCuPortStatusEntry, efmCuRegeneratorStats=efmCuRegeneratorStats, efmCuPmeLinkTrafficDisabled=efmCuPmeLinkTrafficDisabled, efmCuPortNotifications=efmCuPortNotifications, efmCuPmeErrorMaxConsecutiveSec=efmCuPmeErrorMaxConsecutiveSec, efmCuPmeSnrMgnCrossingTrapEnable=efmCuPmeSnrMgnCrossingTrapEnable, efmCuRegenIndex=efmCuRegenIndex, efmCuPmeProtocolInitFailure=efmCuPmeProtocolInitFailure, efmCuPmeErrorThreshMonClrInterval=efmCuPmeErrorThreshMonClrInterval, efmCuPAFDiscoveryCode=efmCuPAFDiscoveryCode, efmCuPme10P=efmCuPme10P, efmCuRegenLineAttn=efmCuRegenLineAttn, efmCuPAFAutoDiscovery=efmCuPAFAutoDiscovery, efmCuRegeneratorStatusEntry=efmCuRegeneratorStatusEntry, efmCuPmeThreshMinSnrMgn=efmCuPmeThreshMinSnrMgn, efmCuLowBandwidthEnable=efmCuLowBandwidthEnable, TruthValueOrUnknown=TruthValueOrUnknown, efmCuPme2BProfileRowStatus=efmCuPme2BProfileRowStatus, efmCuPortCapabilityTable=efmCuPortCapabilityTable, efmCuPme10PElectricalLength=efmCuPme10PElectricalLength, ifAvailableStackEntry=ifAvailableStackEntry, efmCuPmePeerSnrMgn=efmCuPmePeerSnrMgn, efmCuPmeSnrMonitoringInterval=efmCuPmeSnrMonitoringInterval, efmCuPme2BPower=efmCuPme2BPower, ifStackCapabilityGroup=ifStackCapabilityGroup, efmCuPme10PProfileRowStatus=efmCuPme10PProfileRowStatus, efmCuPeerPAFCapacity=efmCuPeerPAFCapacity, efmCuPAFErrorsGroup=efmCuPAFErrorsGroup, efmCuPme2BRegion=efmCuPme2BRegion, efmCuMIB=efmCuMIB, efmCuPmeOperStatus=efmCuPmeOperStatus, ifAvailableStackLowerLayer=ifAvailableStackLowerLayer, efmCuPmeGroup=efmCuPmeGroup, efmCuPme2BProfileEntry=efmCuPme2BProfileEntry, efmCuPme2BProfileDescr=efmCuPme2BProfileDescr, ifAvailableStackStatus=ifAvailableStackStatus, efmCuNumPMEs=efmCuNumPMEs, efmCuPmeDeviceFaultEnable=efmCuPmeDeviceFaultEnable, efmCuPmeErrorThreshMonInterval=efmCuPmeErrorThreshMonInterval, efmCuPme10PFECCorrectedBlocks=efmCuPme10PFECCorrectedBlocks, efmCuPmeFltStatus=efmCuPmeFltStatus, efmCuTargetCurrentConditionMode=efmCuTargetCurrentConditionMode, efmCuPmeSnrClearStats=efmCuPmeSnrClearStats, efmCuPAFInBadFragments=efmCuPAFInBadFragments, efmCuRegenES=efmCuRegenES, efmCuPmeLineAtn=efmCuPmeLineAtn, efmCuPme10PProfileEntry=efmCuPme10PProfileEntry, efmCuPmeMaintenanceMode=efmCuPmeMaintenanceMode, efmCuRegenSES=efmCuRegenSES, efmCuPme2BConstellation=efmCuPme2BConstellation, efmCuRegeneratorStatusTable=efmCuRegeneratorStatusTable, efmCuPme10PProfileTable=efmCuPme10PProfileTable)
