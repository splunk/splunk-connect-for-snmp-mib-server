#
# PySNMP MIB module HJ-PNNI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HJ-PNNI-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:18:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
pnniLinkPortId, pnniNbrPeerRemoteNodeId, pnniNodeIndex = mibBuilder.importSymbols("PNNI-MIB", "pnniLinkPortId", "pnniNbrPeerRemoteNodeId", "pnniNodeIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, iso, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter64, IpAddress, NotificationType, Bits, Unsigned32, TimeTicks, MibIdentifier, Counter32, ModuleIdentity, mgmt = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter64", "IpAddress", "NotificationType", "Bits", "Unsigned32", "TimeTicks", "MibIdentifier", "Counter32", "ModuleIdentity", "mgmt")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
class DisplayString(OctetString):
    pass

class Counter32(Counter32):
    pass

class Integer32(Integer32):
    pass

class TruthValue(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("true", 1), ("false", 2))

class Unsigned32(Gauge32):
    pass

class PnniPortId(Unsigned32):
    pass

org = MibIdentifier((1, 3))
dod = MibIdentifier((1, 3, 6))
internet = MibIdentifier((1, 3, 6, 1))
private = MibIdentifier((1, 3, 6, 1, 4))
enterprises = MibIdentifier((1, 3, 6, 1, 4, 1))
harrisjeffries = MibIdentifier((1, 3, 6, 1, 4, 1, 603))
hjStdExtensions = MibIdentifier((1, 3, 6, 1, 4, 1, 603, 2))
hjTransmission = MibIdentifier((1, 3, 6, 1, 4, 1, 603, 2, 10))
hjAtm = MibIdentifier((1, 3, 6, 1, 4, 1, 603, 2, 10, 2))
hjAtmPnni = MibIdentifier((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7))
class HjPnniIfResourceIndex(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 5)

hjPnniBaseGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 2))
hjPnniLoggingFile = MibScalar((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniLoggingFile.setStatus('mandatory')
hjPnniLoggingMask = MibScalar((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 2, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniLoggingMask.setStatus('mandatory')
hjPnniAddressRoundRobin = MibScalar((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 2, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniAddressRoundRobin.setStatus('mandatory')
hjPnniRoundRobinNbrPortUse = MibScalar((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 2, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniRoundRobinNbrPortUse.setStatus('mandatory')
hjPnniCacheTimerFreq = MibScalar((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniCacheTimerFreq.setStatus('mandatory')
hjPnniCacheAge = MibScalar((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniCacheAge.setStatus('mandatory')
hjPnniCacheRecentInt = MibScalar((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 2, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniCacheRecentInt.setStatus('mandatory')
hjPnniCacheNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hjPnniCacheNumEntries.setStatus('mandatory')
hjPnniCacheMaxPaths = MibScalar((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 2, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniCacheMaxPaths.setStatus('mandatory')
hjPnniCacheMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 63)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniCacheMaxEntries.setStatus('mandatory')
hjPnniCacheEnable = MibScalar((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 2, 11), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniCacheEnable.setStatus('mandatory')
hjPnniAllowLGNPathLoops = MibScalar((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 2, 12), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniAllowLGNPathLoops.setStatus('mandatory')
hjPnniNodeTable = MibTable((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 3), )
if mibBuilder.loadTexts: hjPnniNodeTable.setStatus('mandatory')
hjPnniNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 3, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"))
if mibBuilder.loadTexts: hjPnniNodeEntry.setStatus('mandatory')
hjPnniNodeLoggingMask = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 3, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniNodeLoggingMask.setStatus('mandatory')
hjPnniNodeMinDynamicPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 3, 1, 2), PnniPortId().clone(2147483648)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniNodeMinDynamicPortId.setStatus('mandatory')
hjPnniNodeMaxDynamicPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 3, 1, 3), PnniPortId().clone(4294967294)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniNodeMaxDynamicPortId.setStatus('mandatory')
hjPnniNodeSvccCellTransferDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniNodeSvccCellTransferDelay.setStatus('mandatory')
hjPnniNodeSvccCellDelayVariation = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniNodeSvccCellDelayVariation.setStatus('mandatory')
hjPnniNodeSvccCellLossRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniNodeSvccCellLossRatio.setStatus('mandatory')
hjPnniNodeSvccAbrInitialCellRate = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniNodeSvccAbrInitialCellRate.setStatus('mandatory')
hjPnniNodeSvccAbrTransientBufferExposure = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215)).clone(16777215)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniNodeSvccAbrTransientBufferExposure.setStatus('mandatory')
hjPnniNodeSvccAbrRateIncreaseFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(11)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniNodeSvccAbrRateIncreaseFactor.setStatus('mandatory')
hjPnniNodeSvccAbrRateDecreaseFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)).clone(11)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniNodeSvccAbrRateDecreaseFactor.setStatus('mandatory')
hjPnniIfTable = MibTable((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 4), )
if mibBuilder.loadTexts: hjPnniIfTable.setStatus('mandatory')
hjPnniIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hjPnniIfEntry.setStatus('mandatory')
hjPnniIfLoggingMask = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 4, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniIfLoggingMask.setStatus('mandatory')
hjPnniIfMaxRccPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 8192)).clone(8192)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniIfMaxRccPacketSize.setStatus('mandatory')
hjPnniIfCbrResourceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 4, 1, 3), HjPnniIfResourceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniIfCbrResourceIndex.setStatus('mandatory')
hjPnniIfRtVbrResourceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 4, 1, 4), HjPnniIfResourceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniIfRtVbrResourceIndex.setStatus('mandatory')
hjPnniIfNrtVbrResourceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 4, 1, 5), HjPnniIfResourceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniIfNrtVbrResourceIndex.setStatus('mandatory')
hjPnniIfAbrResourceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 4, 1, 6), HjPnniIfResourceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniIfAbrResourceIndex.setStatus('mandatory')
hjPnniIfUbrResourceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 4, 1, 7), HjPnniIfResourceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniIfUbrResourceIndex.setStatus('mandatory')
hjPnniIfResourceTable = MibTable((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 7), )
if mibBuilder.loadTexts: hjPnniIfResourceTable.setStatus('mandatory')
hjPnniIfResourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HJ-PNNI-MIB", "hjPnniIfResourceIndex"))
if mibBuilder.loadTexts: hjPnniIfResourceEntry.setStatus('mandatory')
hjPnniIfResourceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 7, 1, 1), HjPnniIfResourceIndex())
if mibBuilder.loadTexts: hjPnniIfResourceIndex.setStatus('mandatory')
hjPnniIfResourceGCACCLPAttribute = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 7, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniIfResourceGCACCLPAttribute.setStatus('mandatory')
hjPnniIfResourceAdmWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 7, 1, 3), Unsigned32().clone(5040)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniIfResourceAdmWeight.setStatus('mandatory')
hjPnniIfResourceMaximumCellRate = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 7, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniIfResourceMaximumCellRate.setStatus('mandatory')
hjPnniIfResourceAvailableCellRate = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 7, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniIfResourceAvailableCellRate.setStatus('mandatory')
hjPnniIfResourceCellTransferDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 7, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniIfResourceCellTransferDelay.setStatus('mandatory')
hjPnniIfResourceCellDelayVariation = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 7, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniIfResourceCellDelayVariation.setStatus('mandatory')
hjPnniIfResourceCellLossRatioCLP0 = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 7, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniIfResourceCellLossRatioCLP0.setStatus('mandatory')
hjPnniIfResourceCellLossRatioCLP01 = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 7, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniIfResourceCellLossRatioCLP01.setStatus('mandatory')
hjPnniIfResourceUseOptionalGCAC = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 7, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniIfResourceUseOptionalGCAC.setStatus('mandatory')
hjPnniIfResourceCellRateMargin = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 7, 1, 11), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniIfResourceCellRateMargin.setStatus('mandatory')
hjPnniIfResourceVarianceFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 7, 1, 12), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hjPnniIfResourceVarianceFactor.setStatus('mandatory')
hjPnniNbrPeerTable = MibTable((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 5), )
if mibBuilder.loadTexts: hjPnniNbrPeerTable.setStatus('mandatory')
hjPnniNbrPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 5, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MIB", "pnniNbrPeerRemoteNodeId"))
if mibBuilder.loadTexts: hjPnniNbrPeerEntry.setStatus('mandatory')
hjPnniNbrPeerRcvPtses = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hjPnniNbrPeerRcvPtses.setStatus('mandatory')
hjPnniNbrPeerXmtPtses = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hjPnniNbrPeerXmtPtses.setStatus('mandatory')
hjPnniNbrPeerRcvPtseErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hjPnniNbrPeerRcvPtseErrs.setStatus('mandatory')
hjPnniNbrPeerRcvDbSummErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hjPnniNbrPeerRcvDbSummErrs.setStatus('mandatory')
hjPnniNbrPeerRcvPtspErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hjPnniNbrPeerRcvPtspErrs.setStatus('mandatory')
hjPnniNbrPeerRcvPtseReqErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hjPnniNbrPeerRcvPtseReqErrs.setStatus('mandatory')
hjPnniNbrPeerRcvPtseAckErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hjPnniNbrPeerRcvPtseAckErrs.setStatus('mandatory')
hjPnniNbrPeerDSMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hjPnniNbrPeerDSMismatches.setStatus('mandatory')
hjPnniNbrPeerBadPtseReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hjPnniNbrPeerBadPtseReqs.setStatus('mandatory')
hjPnniLinkTable = MibTable((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 6), )
if mibBuilder.loadTexts: hjPnniLinkTable.setStatus('mandatory')
hjPnniLinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 6, 1), ).setIndexNames((0, "PNNI-MIB", "pnniNodeIndex"), (0, "PNNI-MIB", "pnniLinkPortId"))
if mibBuilder.loadTexts: hjPnniLinkEntry.setStatus('mandatory')
hjPnniLinkRcvUnknownPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hjPnniLinkRcvUnknownPkts.setStatus('mandatory')
hjPnniLinkRcvHelloMismatches = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hjPnniLinkRcvHelloMismatches.setStatus('mandatory')
hjPnniLinkRcvHelloErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 603, 2, 10, 2, 7, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hjPnniLinkRcvHelloErrors.setStatus('mandatory')
mibBuilder.exportSymbols("HJ-PNNI-MIB", org=org, hjPnniIfEntry=hjPnniIfEntry, hjPnniIfResourceMaximumCellRate=hjPnniIfResourceMaximumCellRate, hjPnniNodeSvccAbrInitialCellRate=hjPnniNodeSvccAbrInitialCellRate, hjPnniNbrPeerTable=hjPnniNbrPeerTable, hjPnniLinkEntry=hjPnniLinkEntry, hjPnniIfResourceUseOptionalGCAC=hjPnniIfResourceUseOptionalGCAC, hjPnniNbrPeerDSMismatches=hjPnniNbrPeerDSMismatches, hjPnniNbrPeerRcvPtspErrs=hjPnniNbrPeerRcvPtspErrs, hjPnniIfMaxRccPacketSize=hjPnniIfMaxRccPacketSize, hjPnniRoundRobinNbrPortUse=hjPnniRoundRobinNbrPortUse, hjPnniIfNrtVbrResourceIndex=hjPnniIfNrtVbrResourceIndex, hjPnniIfResourceIndex=hjPnniIfResourceIndex, hjPnniNbrPeerEntry=hjPnniNbrPeerEntry, hjPnniLinkTable=hjPnniLinkTable, PnniPortId=PnniPortId, hjPnniIfResourceCellTransferDelay=hjPnniIfResourceCellTransferDelay, hjPnniIfResourceCellLossRatioCLP0=hjPnniIfResourceCellLossRatioCLP0, hjPnniNbrPeerRcvDbSummErrs=hjPnniNbrPeerRcvDbSummErrs, hjPnniNodeSvccAbrRateIncreaseFactor=hjPnniNodeSvccAbrRateIncreaseFactor, hjPnniCacheMaxEntries=hjPnniCacheMaxEntries, hjPnniNodeEntry=hjPnniNodeEntry, hjPnniIfResourceCellLossRatioCLP01=hjPnniIfResourceCellLossRatioCLP01, HjPnniIfResourceIndex=HjPnniIfResourceIndex, hjPnniCacheRecentInt=hjPnniCacheRecentInt, hjPnniLoggingFile=hjPnniLoggingFile, hjPnniNodeMaxDynamicPortId=hjPnniNodeMaxDynamicPortId, hjPnniNbrPeerBadPtseReqs=hjPnniNbrPeerBadPtseReqs, hjPnniIfResourceCellRateMargin=hjPnniIfResourceCellRateMargin, hjPnniIfResourceAdmWeight=hjPnniIfResourceAdmWeight, hjPnniNbrPeerRcvPtseReqErrs=hjPnniNbrPeerRcvPtseReqErrs, Unsigned32=Unsigned32, private=private, hjPnniCacheEnable=hjPnniCacheEnable, hjPnniIfCbrResourceIndex=hjPnniIfCbrResourceIndex, hjPnniNbrPeerRcvPtses=hjPnniNbrPeerRcvPtses, hjPnniIfResourceEntry=hjPnniIfResourceEntry, hjAtmPnni=hjAtmPnni, hjPnniCacheAge=hjPnniCacheAge, hjPnniCacheNumEntries=hjPnniCacheNumEntries, hjPnniLoggingMask=hjPnniLoggingMask, hjPnniNodeLoggingMask=hjPnniNodeLoggingMask, hjPnniIfResourceTable=hjPnniIfResourceTable, Counter32=Counter32, enterprises=enterprises, hjStdExtensions=hjStdExtensions, hjPnniIfResourceVarianceFactor=hjPnniIfResourceVarianceFactor, hjPnniIfRtVbrResourceIndex=hjPnniIfRtVbrResourceIndex, hjPnniAllowLGNPathLoops=hjPnniAllowLGNPathLoops, hjPnniIfResourceCellDelayVariation=hjPnniIfResourceCellDelayVariation, hjTransmission=hjTransmission, hjPnniIfLoggingMask=hjPnniIfLoggingMask, hjPnniNbrPeerRcvPtseErrs=hjPnniNbrPeerRcvPtseErrs, hjPnniNodeSvccAbrRateDecreaseFactor=hjPnniNodeSvccAbrRateDecreaseFactor, internet=internet, TruthValue=TruthValue, hjPnniCacheTimerFreq=hjPnniCacheTimerFreq, hjPnniNodeSvccAbrTransientBufferExposure=hjPnniNodeSvccAbrTransientBufferExposure, DisplayString=DisplayString, harrisjeffries=harrisjeffries, hjPnniNodeSvccCellDelayVariation=hjPnniNodeSvccCellDelayVariation, hjPnniNbrPeerRcvPtseAckErrs=hjPnniNbrPeerRcvPtseAckErrs, hjPnniLinkRcvHelloErrors=hjPnniLinkRcvHelloErrors, hjPnniIfUbrResourceIndex=hjPnniIfUbrResourceIndex, hjPnniIfAbrResourceIndex=hjPnniIfAbrResourceIndex, hjPnniIfResourceAvailableCellRate=hjPnniIfResourceAvailableCellRate, hjPnniNodeTable=hjPnniNodeTable, hjPnniIfTable=hjPnniIfTable, hjPnniIfResourceGCACCLPAttribute=hjPnniIfResourceGCACCLPAttribute, hjPnniLinkRcvHelloMismatches=hjPnniLinkRcvHelloMismatches, hjAtm=hjAtm, hjPnniCacheMaxPaths=hjPnniCacheMaxPaths, hjPnniLinkRcvUnknownPkts=hjPnniLinkRcvUnknownPkts, hjPnniBaseGroup=hjPnniBaseGroup, Integer32=Integer32, hjPnniNodeMinDynamicPortId=hjPnniNodeMinDynamicPortId, hjPnniNodeSvccCellLossRatio=hjPnniNodeSvccCellLossRatio, hjPnniNbrPeerXmtPtses=hjPnniNbrPeerXmtPtses, hjPnniAddressRoundRobin=hjPnniAddressRoundRobin, dod=dod, hjPnniNodeSvccCellTransferDelay=hjPnniNodeSvccCellTransferDelay)
