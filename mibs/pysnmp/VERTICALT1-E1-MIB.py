#
# PySNMP MIB module VERTICALT1-E1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VERTICALT1-E1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:27:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, enterprises, Counter64, Bits, Integer32, NotificationType, Counter32, iso, Unsigned32, IpAddress, Gauge32, TimeTicks, MibIdentifier, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "enterprises", "Counter64", "Bits", "Integer32", "NotificationType", "Counter32", "iso", "Unsigned32", "IpAddress", "Gauge32", "TimeTicks", "MibIdentifier", "ModuleIdentity", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
vertical = MibIdentifier((1, 3, 6, 1, 4, 1, 2338))
vds1 = MibIdentifier((1, 3, 6, 1, 4, 1, 2338, 3))
vdsx1CardTable = MibTable((1, 3, 6, 1, 4, 1, 2338, 3, 1), )
if mibBuilder.loadTexts: vdsx1CardTable.setStatus('mandatory')
vdsx1CardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 3, 1, 1), ).setIndexNames((0, "VERTICALT1-E1-MIB", "vdsx1cardSlotNumber"))
if mibBuilder.loadTexts: vdsx1CardEntry.setStatus('mandatory')
vdsx1cardSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1cardSlotNumber.setStatus('mandatory')
vdsx1cardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 100))).clone(namedValues=NamedValues(("cardTYPE-DUAL-T1", 1), ("cardTYPE-8-CHANNEL-CO-POTS", 3), ("cardTYPE-BRIDGE1", 4), ("cardTYPE-NOT-CONFIGURED", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1cardType.setStatus('mandatory')
vdsx1cardDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1cardDescr.setStatus('mandatory')
vdsx1cardRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1cardRevision.setStatus('mandatory')
vdsx1cardDriverVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1cardDriverVersion.setStatus('mandatory')
vdsx1cardIOPortAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1cardIOPortAddress.setStatus('mandatory')
vdsx1cardErrorLED = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1cardErrorLED.setStatus('mandatory')
vdsx1cardReadyLED = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1cardReadyLED.setStatus('mandatory')
vdsx1TrunkTable = MibTable((1, 3, 6, 1, 4, 1, 2338, 3, 2), )
if mibBuilder.loadTexts: vdsx1TrunkTable.setStatus('mandatory')
vdsx1TrunkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1), ).setIndexNames((0, "VERTICALT1-E1-MIB", "vdsx1TrunkIfIndex"))
if mibBuilder.loadTexts: vdsx1TrunkEntry.setStatus('mandatory')
vdsx1TrunkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1TrunkIfIndex.setStatus('mandatory')
vdsx1TrunkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1TrunkIndex.setStatus('mandatory')
vdsx1TrunkIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1TrunkIdentifier.setStatus('mandatory')
vdsx1TrunkSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1TrunkSlotNumber.setStatus('mandatory')
vdsx1TrunkDeviceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1TrunkDeviceNumber.setStatus('mandatory')
vdsx1TrunkInterrupt = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1TrunkInterrupt.setStatus('mandatory')
vdsx1TrunkEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("vdsx1TrunkActivated", 1), ("vdsx1TrunkNotConfigured", 2), ("vdsx1TrunkDeactivated", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vdsx1TrunkEnabled.setStatus('mandatory')
vdsx1TrunkMasterPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 100))).clone(namedValues=NamedValues(("primary", 1), ("firstAlternate", 2), ("secondAlternate", 3), ("notUsed", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vdsx1TrunkMasterPriority.setStatus('mandatory')
vdsx1TrunkStream = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1TrunkStream.setStatus('mandatory')
vdsx1TrunkStartingChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1TrunkStartingChannel.setStatus('mandatory')
vdsx1TrunkType = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 7, 100))).clone(namedValues=NamedValues(("dev-t1CAS", 1), ("dev-t1CCS", 2), ("dev-coPots", 7), ("dev-undef", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1TrunkType.setStatus('mandatory')
vdsx1TrunkIsdnSignalingProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 5, 6, 7, 10, 263))).clone(namedValues=NamedValues(("other", 1), ("ess4", 5), ("ess5", 6), ("dms100", 7), ("ni2", 10), ("dms100s100", 263)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vdsx1TrunkIsdnSignalingProtocol.setStatus('mandatory')
vdsx1TrunkLineCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 5, 6))).clone(namedValues=NamedValues(("b8zs", 2), ("ami", 5), ("other", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vdsx1TrunkLineCoding.setStatus('mandatory')
vdsx1TrunkFraming = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("esf", 2), ("d4", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vdsx1TrunkFraming.setStatus('mandatory')
vdsx1TrunkDChannelSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vdsx1TrunkDChannelSlot.setStatus('mandatory')
vdsx1TrunkDChannelDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vdsx1TrunkDChannelDevice.setStatus('mandatory')
vdsx1TrunkNumberOfChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1TrunkNumberOfChannels.setStatus('mandatory')
vdsx1TrunkLineBuildOut = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 100))).clone(namedValues=NamedValues(("buildOut-minus15dB", 1), ("buildOut-0dB", 2), ("buildOut-minus7point5dB", 3), ("notApplicable", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vdsx1TrunkLineBuildOut.setStatus('mandatory')
vdsx1TrunkLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("vdsx1NoLoop", 1), ("vdsx1PayloadLoop", 2), ("vdsx1LineLoop", 3), ("vdsx1OtherLoop", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vdsx1TrunkLoopback.setStatus('mandatory')
vdsx1TrunkRedLED = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1TrunkRedLED.setStatus('mandatory')
vdsx1TrunkYellowLED = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1TrunkYellowLED.setStatus('mandatory')
vdsx1TrunkChangePending = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1TrunkChangePending.setStatus('mandatory')
vdsx1ChannelTable = MibTable((1, 3, 6, 1, 4, 1, 2338, 3, 9), )
if mibBuilder.loadTexts: vdsx1ChannelTable.setStatus('mandatory')
vdsx1ChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2338, 3, 9, 1), ).setIndexNames((0, "VERTICALT1-E1-MIB", "vdsx1TrunkIfIndex"), (0, "VERTICALT1-E1-MIB", "vdsx1channelIndex"))
if mibBuilder.loadTexts: vdsx1ChannelEntry.setStatus('mandatory')
vdsx1channelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1channelIndex.setStatus('mandatory')
vdsx1channelTrunkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1channelTrunkIndex.setStatus('mandatory')
vdsx1channelSlotNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1channelSlotNumber.setStatus('mandatory')
vdsx1channelTrunkDeviceNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 9, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1channelTrunkDeviceNumber.setStatus('mandatory')
vdsx1channelEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("vdsx1channelActivated", 1), ("vdsx1channelNotConfigured", 2), ("vdsx1channelDeactivated", 100)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vdsx1channelEnabled.setStatus('mandatory')
vdsx1channelType = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 100))).clone(namedValues=NamedValues(("vdsx1channelTypeWink", 2), ("vdsx1channelTypeGS", 5), ("vdsx1channelTypeClear", 6), ("vdsx1channelTypeAnalogImm", 7), ("vdsx1channelTypeBChan", 8), ("vdsx1channelTypeDChan", 9), ("vdsx1channelTypeAnalogDt", 11), ("vdsx1channelTypeAnalogGs", 12), ("vdsx1channelTypeDDS", 13), ("vdsx1channelTypeAnalogDID", 14), ("vdsx1channelTypeUnknown", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1channelType.setStatus('mandatory')
vdsx1channelState = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("channelStateOOS", 1), ("channelStateIdle", 2), ("channelStateInCall", 3), ("channelStateOutCall", 4), ("channelStateOffline", 5), ("channelStateOther", 6), ("channelStateData", 7), ("channelStateError", 8), ("channelStateFeRinging", 9), ("channelStateNeRinging", 10), ("channelStateDigitSend", 11), ("channelStateDigitRcv", 12), ("channelStateIncallEst", 13), ("channelStateOutcallEst", 14), ("channelStateIncallClear", 15), ("channelStateOutcallClear", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vdsx1channelState.setStatus('mandatory')
vdsx1channelCallerID = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 9, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vdsx1channelCallerID.setStatus('mandatory')
vdsx1channelExternalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 9, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vdsx1channelExternalAddress.setStatus('mandatory')
vdsx1channelExternalSubAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 9, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vdsx1channelExternalSubAddress.setStatus('mandatory')
vdsx1channelLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 9, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vdsx1channelLocalAddress.setStatus('mandatory')
vdsx1channelLocalSubAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 9, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vdsx1channelLocalSubAddress.setStatus('mandatory')
vdsx1channelChangePending = MibTableColumn((1, 3, 6, 1, 4, 1, 2338, 3, 9, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdsx1channelChangePending.setStatus('mandatory')
vdsx1TrunkRedClear = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,1)).setObjects(("VERTICALT1-E1-MIB", "vdsx1TrunkIdentifier"), ("VERTICALT1-E1-MIB", "vdsx1cardSlotNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkDeviceNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkIndex"))
vdsx1TrunkRed = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,2)).setObjects(("VERTICALT1-E1-MIB", "vdsx1TrunkIdentifier"), ("VERTICALT1-E1-MIB", "vdsx1cardSlotNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkDeviceNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkIndex"))
vdsx1TrunkYellowClear = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,3)).setObjects(("VERTICALT1-E1-MIB", "vdsx1TrunkIdentifier"), ("VERTICALT1-E1-MIB", "vdsx1cardSlotNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkDeviceNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkIndex"))
vdsx1TrunkYellow = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,4)).setObjects(("VERTICALT1-E1-MIB", "vdsx1TrunkIdentifier"), ("VERTICALT1-E1-MIB", "vdsx1cardSlotNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkDeviceNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkIndex"))
vdsx1TrunkBlueClear = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,5)).setObjects(("VERTICALT1-E1-MIB", "vdsx1TrunkIdentifier"), ("VERTICALT1-E1-MIB", "vdsx1cardSlotNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkDeviceNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkIndex"))
vdsx1TrunkBlue = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,6)).setObjects(("VERTICALT1-E1-MIB", "vdsx1TrunkIdentifier"), ("VERTICALT1-E1-MIB", "vdsx1cardSlotNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkDeviceNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkIndex"))
vdsx1TrunkReconfigComplete = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,7)).setObjects(("VERTICALT1-E1-MIB", "vdsx1TrunkIdentifier"), ("VERTICALT1-E1-MIB", "vdsx1cardSlotNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkDeviceNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkIndex"))
vdsx1TrunkReconfigError = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,8)).setObjects(("VERTICALT1-E1-MIB", "vdsx1TrunkIdentifier"), ("VERTICALT1-E1-MIB", "vdsx1cardSlotNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkDeviceNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkIndex"))
vdsx1TrunkLoopbackPayloadOn = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,43)).setObjects(("VERTICALT1-E1-MIB", "vdsx1TrunkIdentifier"), ("VERTICALT1-E1-MIB", "vdsx1cardSlotNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkDeviceNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkIndex"))
vdsx1TrunkLoopbackPayloadOff = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,44)).setObjects(("VERTICALT1-E1-MIB", "vdsx1TrunkIdentifier"), ("VERTICALT1-E1-MIB", "vdsx1cardSlotNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkDeviceNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkIndex"))
vdsx1TrunkLoopbackLineOn = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,45)).setObjects(("VERTICALT1-E1-MIB", "vdsx1TrunkIdentifier"), ("VERTICALT1-E1-MIB", "vdsx1cardSlotNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkDeviceNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkIndex"))
vdsx1TrunkLoopbackLineOff = NotificationType((1, 3, 6, 1, 4, 1, 2338) + (0,46)).setObjects(("VERTICALT1-E1-MIB", "vdsx1TrunkIdentifier"), ("VERTICALT1-E1-MIB", "vdsx1cardSlotNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkDeviceNumber"), ("VERTICALT1-E1-MIB", "vdsx1TrunkIndex"))
mibBuilder.exportSymbols("VERTICALT1-E1-MIB", vdsx1cardErrorLED=vdsx1cardErrorLED, vdsx1TrunkRedClear=vdsx1TrunkRedClear, vdsx1TrunkBlueClear=vdsx1TrunkBlueClear, vdsx1TrunkYellowClear=vdsx1TrunkYellowClear, vdsx1TrunkLoopback=vdsx1TrunkLoopback, vdsx1TrunkIndex=vdsx1TrunkIndex, vdsx1channelExternalAddress=vdsx1channelExternalAddress, vdsx1channelIndex=vdsx1channelIndex, vdsx1TrunkEnabled=vdsx1TrunkEnabled, vdsx1TrunkChangePending=vdsx1TrunkChangePending, vdsx1TrunkDeviceNumber=vdsx1TrunkDeviceNumber, vdsx1cardDescr=vdsx1cardDescr, vdsx1cardType=vdsx1cardType, vdsx1cardDriverVersion=vdsx1cardDriverVersion, vdsx1channelTrunkIndex=vdsx1channelTrunkIndex, vds1=vds1, vdsx1TrunkLineBuildOut=vdsx1TrunkLineBuildOut, vdsx1ChannelEntry=vdsx1ChannelEntry, vdsx1channelTrunkDeviceNumber=vdsx1channelTrunkDeviceNumber, vdsx1TrunkIfIndex=vdsx1TrunkIfIndex, vdsx1TrunkEntry=vdsx1TrunkEntry, vdsx1TrunkInterrupt=vdsx1TrunkInterrupt, vdsx1TrunkLoopbackLineOn=vdsx1TrunkLoopbackLineOn, vdsx1TrunkReconfigError=vdsx1TrunkReconfigError, vdsx1TrunkIsdnSignalingProtocol=vdsx1TrunkIsdnSignalingProtocol, vdsx1TrunkMasterPriority=vdsx1TrunkMasterPriority, vdsx1TrunkIdentifier=vdsx1TrunkIdentifier, vdsx1CardEntry=vdsx1CardEntry, vdsx1TrunkLineCoding=vdsx1TrunkLineCoding, vdsx1TrunkReconfigComplete=vdsx1TrunkReconfigComplete, vdsx1TrunkBlue=vdsx1TrunkBlue, vdsx1channelLocalSubAddress=vdsx1channelLocalSubAddress, vdsx1TrunkYellow=vdsx1TrunkYellow, vdsx1TrunkLoopbackPayloadOff=vdsx1TrunkLoopbackPayloadOff, vdsx1TrunkDChannelDevice=vdsx1TrunkDChannelDevice, vdsx1TrunkYellowLED=vdsx1TrunkYellowLED, vdsx1channelCallerID=vdsx1channelCallerID, vdsx1cardRevision=vdsx1cardRevision, vdsx1TrunkStartingChannel=vdsx1TrunkStartingChannel, vdsx1TrunkDChannelSlot=vdsx1TrunkDChannelSlot, vertical=vertical, vdsx1CardTable=vdsx1CardTable, vdsx1TrunkFraming=vdsx1TrunkFraming, vdsx1channelType=vdsx1channelType, vdsx1TrunkRedLED=vdsx1TrunkRedLED, vdsx1TrunkLoopbackPayloadOn=vdsx1TrunkLoopbackPayloadOn, vdsx1TrunkLoopbackLineOff=vdsx1TrunkLoopbackLineOff, vdsx1channelExternalSubAddress=vdsx1channelExternalSubAddress, vdsx1cardSlotNumber=vdsx1cardSlotNumber, vdsx1TrunkNumberOfChannels=vdsx1TrunkNumberOfChannels, vdsx1channelChangePending=vdsx1channelChangePending, vdsx1ChannelTable=vdsx1ChannelTable, vdsx1TrunkRed=vdsx1TrunkRed, vdsx1TrunkTable=vdsx1TrunkTable, vdsx1channelSlotNumber=vdsx1channelSlotNumber, vdsx1cardIOPortAddress=vdsx1cardIOPortAddress, vdsx1TrunkType=vdsx1TrunkType, vdsx1channelEnabled=vdsx1channelEnabled, vdsx1channelState=vdsx1channelState, vdsx1TrunkStream=vdsx1TrunkStream, vdsx1channelLocalAddress=vdsx1channelLocalAddress, vdsx1TrunkSlotNumber=vdsx1TrunkSlotNumber, vdsx1cardReadyLED=vdsx1cardReadyLED)
