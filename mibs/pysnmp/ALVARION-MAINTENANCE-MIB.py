#
# PySNMP MIB module ALVARION-MAINTENANCE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ALVARION-MAINTENANCE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:06:24 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
alvarionMgmtV2, = mibBuilder.importSymbols("ALVARION-SMI", "alvarionMgmtV2")
systemFirmwareRevision, systemConfigurationVersion = mibBuilder.importSymbols("ALVARION-SYSTEM-MIB", "systemFirmwareRevision", "systemConfigurationVersion")
AlvarionNotificationEnable, = mibBuilder.importSymbols("ALVARION-TC", "AlvarionNotificationEnable")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, IpAddress, NotificationType, ObjectIdentity, MibIdentifier, Gauge32, TimeTicks, ModuleIdentity, Counter32, Unsigned32, Bits, Counter64, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "IpAddress", "NotificationType", "ObjectIdentity", "MibIdentifier", "Gauge32", "TimeTicks", "ModuleIdentity", "Counter32", "Unsigned32", "Bits", "Counter64", "Integer32")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
alvarionMaintenanceMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2))
if mibBuilder.loadTexts: alvarionMaintenanceMIB.setLastUpdated('200710310000Z')
if mibBuilder.loadTexts: alvarionMaintenanceMIB.setOrganization('Alvarion Ltd.')
alvarionMaintenanceMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1))
firmwareUpdate = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 1))
configurationUpdate = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 2))
certificate = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 3))
firmwarePeriodicUpdate = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firmwarePeriodicUpdate.setStatus('current')
firmwareUpdateDay = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6), ("sunday", 7), ("everyday", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firmwareUpdateDay.setStatus('current')
firmwareUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firmwareUpdateTime.setStatus('current')
firmwareUpdateLocation = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firmwareUpdateLocation.setStatus('current')
firmwareUpdateInitiate = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("idle", 0), ("update", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firmwareUpdateInitiate.setStatus('current')
firmwareUpdateNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 1, 6), AlvarionNotificationEnable().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: firmwareUpdateNotificationEnabled.setStatus('current')
firmwareUpdateInfo = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 1, 7), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: firmwareUpdateInfo.setStatus('current')
configurationPeriodicUpdate = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 2, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: configurationPeriodicUpdate.setStatus('current')
configurationUpdateDay = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6), ("sunday", 7), ("everyday", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: configurationUpdateDay.setStatus('current')
configurationUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 2, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: configurationUpdateTime.setStatus('current')
configurationUpdateLocation = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 2, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: configurationUpdateLocation.setStatus('current')
configurationUpdateInitiate = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("idle", 0), ("update", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: configurationUpdateInitiate.setStatus('current')
configurationUpdateOperation = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("backup", 1), ("restore", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: configurationUpdateOperation.setStatus('current')
configurationUpdateNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 2, 7), AlvarionNotificationEnable().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: configurationUpdateNotificationEnabled.setStatus('current')
configurationLocalUpdateNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 2, 8), AlvarionNotificationEnable().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: configurationLocalUpdateNotificationEnabled.setStatus('current')
configurationUpdateInfo = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 2, 9), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: configurationUpdateInfo.setStatus('current')
configurationFactoryDefaults = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("idle", 0), ("resetToFactoryDefaults", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: configurationFactoryDefaults.setStatus('current')
configurationRestart = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("idle", 0), ("restart", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: configurationRestart.setStatus('current')
certificateAboutToExpireNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 3, 1), AlvarionNotificationEnable().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: certificateAboutToExpireNotificationEnabled.setStatus('current')
certificateExpiredNotificationEnabled = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 3, 2), AlvarionNotificationEnable().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: certificateExpiredNotificationEnabled.setStatus('current')
certificateExpiryDate = MibScalar((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 1, 3, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: certificateExpiryDate.setStatus('current')
alvarionMaintenanceMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 2))
alvarionMaintenanceMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 2, 0))
firmwareUpdateNotification = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 2, 0, 5)).setObjects(("ALVARION-MAINTENANCE-MIB", "firmwareUpdateInfo"), ("ALVARION-SYSTEM-MIB", "systemFirmwareRevision"))
if mibBuilder.loadTexts: firmwareUpdateNotification.setStatus('current')
configurationUpdateNotification = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 2, 0, 1)).setObjects(("ALVARION-MAINTENANCE-MIB", "configurationUpdateInfo"), ("ALVARION-SYSTEM-MIB", "systemConfigurationVersion"))
if mibBuilder.loadTexts: configurationUpdateNotification.setStatus('current')
configurationLocalUpdateNotification = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 2, 0, 2)).setObjects(("ALVARION-MAINTENANCE-MIB", "configurationUpdateInfo"))
if mibBuilder.loadTexts: configurationLocalUpdateNotification.setStatus('current')
certificateAboutToExpireNotification = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 2, 0, 3)).setObjects(("ALVARION-MAINTENANCE-MIB", "certificateExpiryDate"))
if mibBuilder.loadTexts: certificateAboutToExpireNotification.setStatus('current')
certificateExpiredNotification = NotificationType((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 2, 0, 4)).setObjects(("ALVARION-MAINTENANCE-MIB", "certificateExpiryDate"))
if mibBuilder.loadTexts: certificateExpiredNotification.setStatus('current')
alvarionMaintenanceMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 3))
alvarionMaintenanceMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 3, 1))
alvarionMaintenanceMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 3, 2))
alvarionMaintenanceMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 3, 1, 1)).setObjects(("ALVARION-MAINTENANCE-MIB", "alvarionMaintenanceMIBGroup"), ("ALVARION-MAINTENANCE-MIB", "alvarionMaintenanceNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionMaintenanceMIBCompliance = alvarionMaintenanceMIBCompliance.setStatus('current')
alvarionMaintenanceMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 3, 2, 1)).setObjects(("ALVARION-MAINTENANCE-MIB", "firmwarePeriodicUpdate"), ("ALVARION-MAINTENANCE-MIB", "firmwareUpdateDay"), ("ALVARION-MAINTENANCE-MIB", "firmwareUpdateTime"), ("ALVARION-MAINTENANCE-MIB", "firmwareUpdateLocation"), ("ALVARION-MAINTENANCE-MIB", "firmwareUpdateInitiate"), ("ALVARION-MAINTENANCE-MIB", "firmwareUpdateNotificationEnabled"), ("ALVARION-MAINTENANCE-MIB", "firmwareUpdateInfo"), ("ALVARION-MAINTENANCE-MIB", "configurationPeriodicUpdate"), ("ALVARION-MAINTENANCE-MIB", "configurationUpdateDay"), ("ALVARION-MAINTENANCE-MIB", "configurationUpdateTime"), ("ALVARION-MAINTENANCE-MIB", "configurationUpdateLocation"), ("ALVARION-MAINTENANCE-MIB", "configurationUpdateInitiate"), ("ALVARION-MAINTENANCE-MIB", "configurationUpdateOperation"), ("ALVARION-MAINTENANCE-MIB", "configurationUpdateNotificationEnabled"), ("ALVARION-MAINTENANCE-MIB", "configurationUpdateInfo"), ("ALVARION-MAINTENANCE-MIB", "configurationFactoryDefaults"), ("ALVARION-MAINTENANCE-MIB", "configurationRestart"), ("ALVARION-MAINTENANCE-MIB", "configurationLocalUpdateNotificationEnabled"), ("ALVARION-MAINTENANCE-MIB", "certificateAboutToExpireNotificationEnabled"), ("ALVARION-MAINTENANCE-MIB", "certificateExpiredNotificationEnabled"), ("ALVARION-MAINTENANCE-MIB", "certificateExpiryDate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionMaintenanceMIBGroup = alvarionMaintenanceMIBGroup.setStatus('current')
alvarionMaintenanceNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 12394, 1, 10, 5, 2, 3, 2, 2)).setObjects(("ALVARION-MAINTENANCE-MIB", "firmwareUpdateNotification"), ("ALVARION-MAINTENANCE-MIB", "configurationUpdateNotification"), ("ALVARION-MAINTENANCE-MIB", "configurationLocalUpdateNotification"), ("ALVARION-MAINTENANCE-MIB", "certificateAboutToExpireNotification"), ("ALVARION-MAINTENANCE-MIB", "certificateExpiredNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alvarionMaintenanceNotificationGroup = alvarionMaintenanceNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("ALVARION-MAINTENANCE-MIB", configurationUpdateInitiate=configurationUpdateInitiate, firmwareUpdate=firmwareUpdate, firmwareUpdateLocation=firmwareUpdateLocation, alvarionMaintenanceNotificationGroup=alvarionMaintenanceNotificationGroup, firmwareUpdateInfo=firmwareUpdateInfo, configurationUpdateOperation=configurationUpdateOperation, alvarionMaintenanceMIBGroups=alvarionMaintenanceMIBGroups, alvarionMaintenanceMIBCompliance=alvarionMaintenanceMIBCompliance, certificateExpiredNotificationEnabled=certificateExpiredNotificationEnabled, firmwareUpdateTime=firmwareUpdateTime, configurationUpdateNotification=configurationUpdateNotification, configurationLocalUpdateNotificationEnabled=configurationLocalUpdateNotificationEnabled, PYSNMP_MODULE_ID=alvarionMaintenanceMIB, certificate=certificate, alvarionMaintenanceMIB=alvarionMaintenanceMIB, configurationRestart=configurationRestart, configurationPeriodicUpdate=configurationPeriodicUpdate, firmwareUpdateInitiate=firmwareUpdateInitiate, certificateAboutToExpireNotification=certificateAboutToExpireNotification, firmwareUpdateDay=firmwareUpdateDay, certificateAboutToExpireNotificationEnabled=certificateAboutToExpireNotificationEnabled, firmwareUpdateNotification=firmwareUpdateNotification, configurationUpdate=configurationUpdate, alvarionMaintenanceMIBConformance=alvarionMaintenanceMIBConformance, alvarionMaintenanceMIBGroup=alvarionMaintenanceMIBGroup, configurationUpdateInfo=configurationUpdateInfo, alvarionMaintenanceMIBNotificationPrefix=alvarionMaintenanceMIBNotificationPrefix, configurationUpdateTime=configurationUpdateTime, firmwareUpdateNotificationEnabled=firmwareUpdateNotificationEnabled, certificateExpiryDate=certificateExpiryDate, configurationLocalUpdateNotification=configurationLocalUpdateNotification, alvarionMaintenanceMIBObjects=alvarionMaintenanceMIBObjects, configurationFactoryDefaults=configurationFactoryDefaults, firmwarePeriodicUpdate=firmwarePeriodicUpdate, certificateExpiredNotification=certificateExpiredNotification, configurationUpdateLocation=configurationUpdateLocation, configurationUpdateDay=configurationUpdateDay, configurationUpdateNotificationEnabled=configurationUpdateNotificationEnabled, alvarionMaintenanceMIBCompliances=alvarionMaintenanceMIBCompliances, alvarionMaintenanceMIBNotifications=alvarionMaintenanceMIBNotifications)
