#
# PySNMP MIB module CIENA-CES-RADIUS-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CIENA-CES-RADIUS-CLIENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:31:56 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
cienaCesStatistics, = mibBuilder.importSymbols("CIENA-SMI", "cienaCesStatistics")
CienaGlobalState, = mibBuilder.importSymbols("CIENA-TC", "CienaGlobalState")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, ObjectIdentity, Integer32, ModuleIdentity, Gauge32, NotificationType, IpAddress, TimeTicks, MibIdentifier, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "Integer32", "ModuleIdentity", "Gauge32", "NotificationType", "IpAddress", "TimeTicks", "MibIdentifier", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32")
RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
cienaCesRadiusClientMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3))
cienaCesRadiusClientMIB.setRevisions(('2016-02-17 00:00', '2015-07-22 00:00', '2015-06-22 00:00', '2014-06-12 00:00', '2014-01-02 00:00', '2012-04-17 00:00', '2010-05-18 00:00',))
if mibBuilder.loadTexts: cienaCesRadiusClientMIB.setLastUpdated('201602170000Z')
if mibBuilder.loadTexts: cienaCesRadiusClientMIB.setOrganization('Ciena Corp.')
class RadiusString(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 64), )
cienaCesRadiusClientMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1))
cienaCesRadiusClient = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1))
cienaCesRadiusClientGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 1))
cienaCesRadiusClientServer = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2))
cienaCesRadiusUserLogin = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3))
cienaCesRadiusUserLoginGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 1))
cienaCesRadiusDot1xAuth = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4))
cienaCesRadiusDot1xAuthGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 1))
cienaCesRadiusDot1xAcct = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5))
cienaCesRadiusDot1xAcctGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 1))
cienaCesRadiusUserLoginAcct = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6))
cienaCesRadiusUserLoginAcctGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 1))
cienaCesRadiusClientMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 2))
cienaCesRadiusClientMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 2, 0))
cienaCesRadiusClientMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 3))
cienaCesRadiusClientMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 3, 1))
cienaCesRadiusClientMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 3, 2))
cienaCesRadiusAdminState = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 1, 1), CienaGlobalState()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusAdminState.setStatus('current')
cienaCesRadiusOperState = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 1, 2), CienaGlobalState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusOperState.setStatus('current')
cienaCesRadiusClientTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusClientTimeout.setStatus('deprecated')
cienaCesRadiusClientRetries = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusClientRetries.setStatus('deprecated')
cienaCesRadiusClientAuthKey = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 1, 5), RadiusString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusClientAuthKey.setStatus('deprecated')
cienaCesRadiusClientAuthKeyUnset = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusClientAuthKeyUnset.setStatus('deprecated')
cienaCesRadiusClientSearchType = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cached", 1), ("priority", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusClientSearchType.setStatus('deprecated')
cienaCesRadiusClientServerTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1), )
if mibBuilder.loadTexts: cienaCesRadiusClientServerTable.setStatus('deprecated')
cienaCesRadiusClientServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1), ).setIndexNames((0, "CIENA-CES-RADIUS-CLIENT-MIB", "cienaCesRadiusClientServerIndex"))
if mibBuilder.loadTexts: cienaCesRadiusClientServerEntry.setStatus('deprecated')
cienaCesRadiusClientServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: cienaCesRadiusClientServerIndex.setStatus('deprecated')
cienaCesRadiusClientServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusClientServerAddr.setStatus('deprecated')
cienaCesRadiusClientServerResolvedAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusClientServerResolvedAddr.setStatus('deprecated')
cienaCesRadiusClientServerPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusClientServerPriority.setStatus('deprecated')
cienaCesRadiusClientServerAuthPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1812)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusClientServerAuthPort.setStatus('deprecated')
cienaCesRadiusClientServerRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusClientServerRoundTripTime.setStatus('deprecated')
cienaCesRadiusClientServerAccessRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusClientServerAccessRequests.setStatus('deprecated')
cienaCesRadiusClientServerAccessRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusClientServerAccessRetransmissions.setStatus('deprecated')
cienaCesRadiusClientServerAccessAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusClientServerAccessAccepts.setStatus('deprecated')
cienaCesRadiusClientServerAccessRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusClientServerAccessRejects.setStatus('deprecated')
cienaCesRadiusClientServerAccessChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusClientServerAccessChallenges.setStatus('deprecated')
cienaCesRadiusClientServerMalformedAccessResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusClientServerMalformedAccessResponses.setStatus('deprecated')
cienaCesRadiusClientServerBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusClientServerBadAuthenticators.setStatus('deprecated')
cienaCesRadiusClientServerPendingRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusClientServerPendingRequests.setStatus('deprecated')
cienaCesRadiusClientServerTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusClientServerTimeouts.setStatus('deprecated')
cienaCesRadiusClientServerUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusClientServerUnknownTypes.setStatus('deprecated')
cienaCesRadiusClientServerPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusClientServerPacketsDropped.setStatus('deprecated')
cienaCesRadiusClientServerApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("userLogin", 1), ("all", 2))).clone('all')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusClientServerApplication.setStatus('deprecated')
cienaCesRadiusClientServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 2, 1, 1, 19), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusClientServerStatus.setStatus('deprecated')
cienaCesRadiusUserLoginTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginTimeout.setStatus('current')
cienaCesRadiusUserLoginRetries = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginRetries.setStatus('current')
cienaCesRadiusUserLoginAuthKey = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 1, 3), RadiusString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAuthKey.setStatus('current')
cienaCesRadiusUserLoginSearchType = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cached", 1), ("priority", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginSearchType.setStatus('current')
cienaCesRadiusUserLoginAuthSecret = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 259))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAuthSecret.setStatus('current')
cienaCesRadiusUserLoginTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2), )
if mibBuilder.loadTexts: cienaCesRadiusUserLoginTable.setStatus('current')
cienaCesRadiusUserLoginEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1), ).setIndexNames((0, "CIENA-CES-RADIUS-CLIENT-MIB", "cienaCesRadiusUserLoginIndex"))
if mibBuilder.loadTexts: cienaCesRadiusUserLoginEntry.setStatus('current')
cienaCesRadiusUserLoginIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: cienaCesRadiusUserLoginIndex.setStatus('current')
cienaCesRadiusUserLoginResolvedInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginResolvedInetAddrType.setStatus('current')
cienaCesRadiusUserLoginResolvedInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginResolvedInetAddress.setStatus('current')
cienaCesRadiusUserLoginAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAddr.setStatus('current')
cienaCesRadiusUserLoginPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginPriority.setStatus('current')
cienaCesRadiusUserLoginAuthPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1812)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAuthPort.setStatus('current')
cienaCesRadiusUserLoginClearStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginClearStatistics.setStatus('current')
cienaCesRadiusUserLoginRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginRoundTripTime.setStatus('current')
cienaCesRadiusUserLoginRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginRequests.setStatus('current')
cienaCesRadiusUserLoginRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginRetransmissions.setStatus('current')
cienaCesRadiusUserLoginAccessAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAccessAccepts.setStatus('current')
cienaCesRadiusUserLoginAccessRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAccessRejects.setStatus('current')
cienaCesRadiusUserLoginAccessChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAccessChallenges.setStatus('current')
cienaCesRadiusUserLoginAccountingResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAccountingResponses.setStatus('current')
cienaCesRadiusUserLoginMalformedResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginMalformedResponses.setStatus('current')
cienaCesRadiusUserLoginBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginBadAuthenticators.setStatus('current')
cienaCesRadiusUserLoginTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginTimeouts.setStatus('current')
cienaCesRadiusUserLoginUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginUnknownTypes.setStatus('current')
cienaCesRadiusUserLoginPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginPacketsDropped.setStatus('current')
cienaCesRadiusUserLoginStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 3, 2, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginStatus.setStatus('current')
cienaCesRadiusUserLoginAcctAdminState = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctAdminState.setStatus('current')
cienaCesRadiusUserLoginAcctTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctTimeout.setStatus('current')
cienaCesRadiusUserLoginAcctRetries = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctRetries.setStatus('current')
cienaCesRadiusUserLoginAcctAuthKey = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 1, 4), RadiusString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctAuthKey.setStatus('current')
cienaCesRadiusUserLoginAcctSearchType = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cached", 1), ("priority", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctSearchType.setStatus('current')
cienaCesRadiusUserLoginAcctAuthSecret = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 259))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctAuthSecret.setStatus('current')
cienaCesRadiusUserLoginAcctTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2), )
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctTable.setStatus('current')
cienaCesRadiusUserLoginAcctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1), ).setIndexNames((0, "CIENA-CES-RADIUS-CLIENT-MIB", "cienaCesRadiusUserLoginAcctIndex"))
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctEntry.setStatus('current')
cienaCesRadiusUserLoginAcctIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctIndex.setStatus('current')
cienaCesRadiusUserLoginAcctResolvedInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctResolvedInetAddrType.setStatus('current')
cienaCesRadiusUserLoginAcctResolvedInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctResolvedInetAddress.setStatus('current')
cienaCesRadiusUserLoginAcctAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctAddr.setStatus('current')
cienaCesRadiusUserLoginAcctPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctPriority.setStatus('current')
cienaCesRadiusUserLoginAcctAuthPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1812)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctAuthPort.setStatus('current')
cienaCesRadiusUserLoginAcctClearStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctClearStatistics.setStatus('current')
cienaCesRadiusUserLoginAcctRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctRoundTripTime.setStatus('current')
cienaCesRadiusUserLoginAcctRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctRequests.setStatus('current')
cienaCesRadiusUserLoginAcctRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctRetransmissions.setStatus('current')
cienaCesRadiusUserLoginAcctAccessAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctAccessAccepts.setStatus('current')
cienaCesRadiusUserLoginAcctAccessRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctAccessRejects.setStatus('current')
cienaCesRadiusUserLoginAcctAccessChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctAccessChallenges.setStatus('current')
cienaCesRadiusUserLoginAcctAccountingResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctAccountingResponses.setStatus('current')
cienaCesRadiusUserLoginAcctMalformedResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctMalformedResponses.setStatus('current')
cienaCesRadiusUserLoginAcctBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctBadAuthenticators.setStatus('current')
cienaCesRadiusUserLoginAcctTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctTimeouts.setStatus('current')
cienaCesRadiusUserLoginAcctUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctUnknownTypes.setStatus('current')
cienaCesRadiusUserLoginAcctPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctPacketsDropped.setStatus('current')
cienaCesRadiusUserLoginAcctStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 6, 2, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusUserLoginAcctStatus.setStatus('current')
cienaCesRadiusDot1xAuthTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthTimeout.setStatus('current')
cienaCesRadiusDot1xAuthRetries = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthRetries.setStatus('current')
cienaCesRadiusDot1xAuthAuthKey = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 1, 3), RadiusString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthAuthKey.setStatus('current')
cienaCesRadiusDot1xAuthSearchType = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("priority", 1), ("loadBalance", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthSearchType.setStatus('current')
cienaCesRadiusDot1xAuthGreylistTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 14400)).clone(600)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthGreylistTimeout.setStatus('current')
cienaCesRadiusDot1xAuthAuthSecret = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 259))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthAuthSecret.setStatus('current')
cienaCesRadiusDot1xAuthTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2), )
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthTable.setStatus('current')
cienaCesRadiusDot1xAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1), ).setIndexNames((0, "CIENA-CES-RADIUS-CLIENT-MIB", "cienaCesRadiusDot1xAuthIndex"))
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthEntry.setStatus('current')
cienaCesRadiusDot1xAuthIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthIndex.setStatus('current')
cienaCesRadiusDot1xAuthResolvedInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthResolvedInetAddrType.setStatus('current')
cienaCesRadiusDot1xAuthResolvedInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthResolvedInetAddress.setStatus('current')
cienaCesRadiusDot1xAuthAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthAddr.setStatus('current')
cienaCesRadiusDot1xAuthPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthPriority.setStatus('current')
cienaCesRadiusDot1xAuthAuthPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1812)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthAuthPort.setStatus('current')
cienaCesRadiusDot1xAuthClearStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthClearStatistics.setStatus('current')
cienaCesRadiusDot1xAuthGreylistTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 14400))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthGreylistTimeRemaining.setStatus('current')
cienaCesRadiusDot1xAuthRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthRoundTripTime.setStatus('current')
cienaCesRadiusDot1xAuthRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthRequests.setStatus('current')
cienaCesRadiusDot1xAuthRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthRetransmissions.setStatus('current')
cienaCesRadiusDot1xAuthAccessAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthAccessAccepts.setStatus('current')
cienaCesRadiusDot1xAuthAccessRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthAccessRejects.setStatus('current')
cienaCesRadiusDot1xAuthAccessChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthAccessChallenges.setStatus('current')
cienaCesRadiusDot1xAuthAccountingResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthAccountingResponses.setStatus('current')
cienaCesRadiusDot1xAuthMalformedResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthMalformedResponses.setStatus('current')
cienaCesRadiusDot1xAuthBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthBadAuthenticators.setStatus('current')
cienaCesRadiusDot1xAuthTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthTimeouts.setStatus('current')
cienaCesRadiusDot1xAuthUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthUnknownTypes.setStatus('current')
cienaCesRadiusDot1xAuthPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthPacketsDropped.setStatus('current')
cienaCesRadiusDot1xAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 4, 2, 1, 21), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAuthStatus.setStatus('current')
cienaCesRadiusDot1xAcctAdminState = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctAdminState.setStatus('current')
cienaCesRadiusDot1xAcctTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctTimeout.setStatus('current')
cienaCesRadiusDot1xAcctRetries = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctRetries.setStatus('current')
cienaCesRadiusDot1xAcctAuthKey = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 1, 4), RadiusString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctAuthKey.setStatus('current')
cienaCesRadiusDot1xAcctSearchType = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("priority", 1), ("loadBalance", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctSearchType.setStatus('current')
cienaCesRadiusDot1xAcctGreylistTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 14400)).clone(600)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctGreylistTimeout.setStatus('current')
cienaCesRadiusDot1xAcctAuthSecret = MibScalar((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 259))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctAuthSecret.setStatus('current')
cienaCesRadiusDot1xAcctTable = MibTable((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2), )
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctTable.setStatus('current')
cienaCesRadiusDot1xAcctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1), ).setIndexNames((0, "CIENA-CES-RADIUS-CLIENT-MIB", "cienaCesRadiusDot1xAcctIndex"))
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctEntry.setStatus('current')
cienaCesRadiusDot1xAcctIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctIndex.setStatus('current')
cienaCesRadiusDot1xAcctResolvedInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctResolvedInetAddrType.setStatus('current')
cienaCesRadiusDot1xAcctResolvedInetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctResolvedInetAddress.setStatus('current')
cienaCesRadiusDot1xAcctAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctAddr.setStatus('current')
cienaCesRadiusDot1xAcctPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctPriority.setStatus('current')
cienaCesRadiusDot1xAcctAuthPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1812)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctAuthPort.setStatus('current')
cienaCesRadiusDot1xAcctClearStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctClearStatistics.setStatus('current')
cienaCesRadiusDot1xAcctGreylistTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 14400))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctGreylistTimeRemaining.setStatus('current')
cienaCesRadiusDot1xAcctRoundTripTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctRoundTripTime.setStatus('current')
cienaCesRadiusDot1xAcctRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctRequests.setStatus('current')
cienaCesRadiusDot1xAcctRetransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctRetransmissions.setStatus('current')
cienaCesRadiusDot1xAcctAccessAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctAccessAccepts.setStatus('current')
cienaCesRadiusDot1xAcctAccessRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctAccessRejects.setStatus('current')
cienaCesRadiusDot1xAcctAccessChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctAccessChallenges.setStatus('current')
cienaCesRadiusDot1xAcctAccountingResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctAccountingResponses.setStatus('current')
cienaCesRadiusDot1xAcctMalformedResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctMalformedResponses.setStatus('current')
cienaCesRadiusDot1xAcctBadAuthenticators = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctBadAuthenticators.setStatus('current')
cienaCesRadiusDot1xAcctTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctTimeouts.setStatus('current')
cienaCesRadiusDot1xAcctUnknownTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctUnknownTypes.setStatus('current')
cienaCesRadiusDot1xAcctPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctPacketsDropped.setStatus('current')
cienaCesRadiusDot1xAcctStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1271, 2, 3, 3, 1, 1, 5, 2, 1, 21), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cienaCesRadiusDot1xAcctStatus.setStatus('current')
mibBuilder.exportSymbols("CIENA-CES-RADIUS-CLIENT-MIB", cienaCesRadiusUserLoginUnknownTypes=cienaCesRadiusUserLoginUnknownTypes, cienaCesRadiusUserLoginAcctAccessAccepts=cienaCesRadiusUserLoginAcctAccessAccepts, cienaCesRadiusDot1xAuthSearchType=cienaCesRadiusDot1xAuthSearchType, cienaCesRadiusDot1xAcctAuthKey=cienaCesRadiusDot1xAcctAuthKey, cienaCesRadiusUserLoginAcctTimeout=cienaCesRadiusUserLoginAcctTimeout, cienaCesRadiusDot1xAcctAuthPort=cienaCesRadiusDot1xAcctAuthPort, cienaCesRadiusUserLoginTimeout=cienaCesRadiusUserLoginTimeout, cienaCesRadiusClientMIBConformance=cienaCesRadiusClientMIBConformance, cienaCesRadiusClientMIB=cienaCesRadiusClientMIB, cienaCesRadiusUserLoginAcctAdminState=cienaCesRadiusUserLoginAcctAdminState, cienaCesRadiusDot1xAuthPacketsDropped=cienaCesRadiusDot1xAuthPacketsDropped, cienaCesRadiusDot1xAuthBadAuthenticators=cienaCesRadiusDot1xAuthBadAuthenticators, cienaCesRadiusDot1xAuthGlobal=cienaCesRadiusDot1xAuthGlobal, cienaCesRadiusDot1xAuthAuthKey=cienaCesRadiusDot1xAuthAuthKey, cienaCesRadiusUserLoginAccountingResponses=cienaCesRadiusUserLoginAccountingResponses, cienaCesRadiusUserLoginAcctUnknownTypes=cienaCesRadiusUserLoginAcctUnknownTypes, cienaCesRadiusDot1xAuthRequests=cienaCesRadiusDot1xAuthRequests, cienaCesRadiusClientServerAccessRequests=cienaCesRadiusClientServerAccessRequests, cienaCesRadiusUserLoginAccessRejects=cienaCesRadiusUserLoginAccessRejects, cienaCesRadiusClientServerPriority=cienaCesRadiusClientServerPriority, cienaCesRadiusUserLoginAcctRetransmissions=cienaCesRadiusUserLoginAcctRetransmissions, cienaCesRadiusUserLoginAcctAccessChallenges=cienaCesRadiusUserLoginAcctAccessChallenges, cienaCesRadiusClientServerAccessAccepts=cienaCesRadiusClientServerAccessAccepts, cienaCesRadiusDot1xAuthAuthSecret=cienaCesRadiusDot1xAuthAuthSecret, cienaCesRadiusUserLoginMalformedResponses=cienaCesRadiusUserLoginMalformedResponses, cienaCesRadiusUserLoginAcctAccountingResponses=cienaCesRadiusUserLoginAcctAccountingResponses, cienaCesRadiusDot1xAcctClearStatistics=cienaCesRadiusDot1xAcctClearStatistics, cienaCesRadiusClientServerPendingRequests=cienaCesRadiusClientServerPendingRequests, cienaCesRadiusUserLoginAcctSearchType=cienaCesRadiusUserLoginAcctSearchType, cienaCesRadiusUserLoginResolvedInetAddress=cienaCesRadiusUserLoginResolvedInetAddress, cienaCesRadiusDot1xAuthGreylistTimeout=cienaCesRadiusDot1xAuthGreylistTimeout, cienaCesRadiusUserLoginAcctAuthSecret=cienaCesRadiusUserLoginAcctAuthSecret, cienaCesRadiusUserLoginRetries=cienaCesRadiusUserLoginRetries, cienaCesRadiusClientServerMalformedAccessResponses=cienaCesRadiusClientServerMalformedAccessResponses, cienaCesRadiusDot1xAcctAccountingResponses=cienaCesRadiusDot1xAcctAccountingResponses, cienaCesRadiusDot1xAuthTable=cienaCesRadiusDot1xAuthTable, cienaCesRadiusUserLoginAcctGlobal=cienaCesRadiusUserLoginAcctGlobal, cienaCesRadiusUserLoginTable=cienaCesRadiusUserLoginTable, cienaCesRadiusAdminState=cienaCesRadiusAdminState, cienaCesRadiusClientServerTable=cienaCesRadiusClientServerTable, cienaCesRadiusDot1xAuthRoundTripTime=cienaCesRadiusDot1xAuthRoundTripTime, cienaCesRadiusClientServerStatus=cienaCesRadiusClientServerStatus, cienaCesRadiusUserLoginGlobal=cienaCesRadiusUserLoginGlobal, cienaCesRadiusDot1xAcctPriority=cienaCesRadiusDot1xAcctPriority, cienaCesRadiusUserLoginBadAuthenticators=cienaCesRadiusUserLoginBadAuthenticators, cienaCesRadiusClientServerEntry=cienaCesRadiusClientServerEntry, cienaCesRadiusUserLoginAcctRetries=cienaCesRadiusUserLoginAcctRetries, cienaCesRadiusClient=cienaCesRadiusClient, cienaCesRadiusUserLoginAuthKey=cienaCesRadiusUserLoginAuthKey, cienaCesRadiusDot1xAcctIndex=cienaCesRadiusDot1xAcctIndex, cienaCesRadiusDot1xAuthMalformedResponses=cienaCesRadiusDot1xAuthMalformedResponses, cienaCesRadiusUserLoginIndex=cienaCesRadiusUserLoginIndex, cienaCesRadiusClientRetries=cienaCesRadiusClientRetries, cienaCesRadiusUserLoginTimeouts=cienaCesRadiusUserLoginTimeouts, cienaCesRadiusClientAuthKeyUnset=cienaCesRadiusClientAuthKeyUnset, cienaCesRadiusDot1xAcctTable=cienaCesRadiusDot1xAcctTable, cienaCesRadiusDot1xAcctPacketsDropped=cienaCesRadiusDot1xAcctPacketsDropped, cienaCesRadiusDot1xAcctMalformedResponses=cienaCesRadiusDot1xAcctMalformedResponses, cienaCesRadiusUserLoginAuthPort=cienaCesRadiusUserLoginAuthPort, cienaCesRadiusUserLoginAcctPriority=cienaCesRadiusUserLoginAcctPriority, cienaCesRadiusDot1xAuthAuthPort=cienaCesRadiusDot1xAuthAuthPort, cienaCesRadiusClientServerApplication=cienaCesRadiusClientServerApplication, cienaCesRadiusDot1xAcctGreylistTimeRemaining=cienaCesRadiusDot1xAcctGreylistTimeRemaining, cienaCesRadiusClientServerIndex=cienaCesRadiusClientServerIndex, cienaCesRadiusDot1xAuthGreylistTimeRemaining=cienaCesRadiusDot1xAuthGreylistTimeRemaining, cienaCesRadiusDot1xAcctRetries=cienaCesRadiusDot1xAcctRetries, cienaCesRadiusClientServerUnknownTypes=cienaCesRadiusClientServerUnknownTypes, cienaCesRadiusDot1xAcctAddr=cienaCesRadiusDot1xAcctAddr, cienaCesRadiusUserLoginRoundTripTime=cienaCesRadiusUserLoginRoundTripTime, cienaCesRadiusClientMIBCompliances=cienaCesRadiusClientMIBCompliances, cienaCesRadiusClientSearchType=cienaCesRadiusClientSearchType, PYSNMP_MODULE_ID=cienaCesRadiusClientMIB, cienaCesRadiusClientServerAuthPort=cienaCesRadiusClientServerAuthPort, cienaCesRadiusClientServerResolvedAddr=cienaCesRadiusClientServerResolvedAddr, cienaCesRadiusDot1xAcctEntry=cienaCesRadiusDot1xAcctEntry, cienaCesRadiusDot1xAcctResolvedInetAddress=cienaCesRadiusDot1xAcctResolvedInetAddress, cienaCesRadiusClientAuthKey=cienaCesRadiusClientAuthKey, cienaCesRadiusDot1xAcctStatus=cienaCesRadiusDot1xAcctStatus, cienaCesRadiusUserLoginSearchType=cienaCesRadiusUserLoginSearchType, cienaCesRadiusUserLoginClearStatistics=cienaCesRadiusUserLoginClearStatistics, cienaCesRadiusUserLoginAcctTable=cienaCesRadiusUserLoginAcctTable, cienaCesRadiusDot1xAcctTimeouts=cienaCesRadiusDot1xAcctTimeouts, cienaCesRadiusDot1xAcctAdminState=cienaCesRadiusDot1xAcctAdminState, cienaCesRadiusUserLoginAcctPacketsDropped=cienaCesRadiusUserLoginAcctPacketsDropped, cienaCesRadiusClientMIBObjects=cienaCesRadiusClientMIBObjects, cienaCesRadiusDot1xAuthIndex=cienaCesRadiusDot1xAuthIndex, cienaCesRadiusUserLoginStatus=cienaCesRadiusUserLoginStatus, cienaCesRadiusUserLoginAcctClearStatistics=cienaCesRadiusUserLoginAcctClearStatistics, cienaCesRadiusDot1xAcct=cienaCesRadiusDot1xAcct, cienaCesRadiusUserLoginAcctTimeouts=cienaCesRadiusUserLoginAcctTimeouts, cienaCesRadiusDot1xAuthClearStatistics=cienaCesRadiusDot1xAuthClearStatistics, cienaCesRadiusUserLoginAcctAuthPort=cienaCesRadiusUserLoginAcctAuthPort, cienaCesRadiusClientServerAccessRetransmissions=cienaCesRadiusClientServerAccessRetransmissions, cienaCesRadiusClientMIBGroups=cienaCesRadiusClientMIBGroups, cienaCesRadiusUserLoginEntry=cienaCesRadiusUserLoginEntry, cienaCesRadiusUserLoginRetransmissions=cienaCesRadiusUserLoginRetransmissions, cienaCesRadiusDot1xAuthEntry=cienaCesRadiusDot1xAuthEntry, cienaCesRadiusDot1xAcctResolvedInetAddrType=cienaCesRadiusDot1xAcctResolvedInetAddrType, cienaCesRadiusClientServerBadAuthenticators=cienaCesRadiusClientServerBadAuthenticators, cienaCesRadiusDot1xAuthUnknownTypes=cienaCesRadiusDot1xAuthUnknownTypes, cienaCesRadiusDot1xAuthResolvedInetAddrType=cienaCesRadiusDot1xAuthResolvedInetAddrType, cienaCesRadiusClientMIBNotifications=cienaCesRadiusClientMIBNotifications, cienaCesRadiusClientGlobal=cienaCesRadiusClientGlobal, cienaCesRadiusUserLoginAcctAuthKey=cienaCesRadiusUserLoginAcctAuthKey, cienaCesRadiusClientTimeout=cienaCesRadiusClientTimeout, cienaCesRadiusDot1xAuthStatus=cienaCesRadiusDot1xAuthStatus, cienaCesRadiusDot1xAcctAccessChallenges=cienaCesRadiusDot1xAcctAccessChallenges, cienaCesRadiusDot1xAuthAccessRejects=cienaCesRadiusDot1xAuthAccessRejects, cienaCesRadiusDot1xAcctRetransmissions=cienaCesRadiusDot1xAcctRetransmissions, cienaCesRadiusClientServerAccessRejects=cienaCesRadiusClientServerAccessRejects, cienaCesRadiusOperState=cienaCesRadiusOperState, cienaCesRadiusDot1xAcctSearchType=cienaCesRadiusDot1xAcctSearchType, RadiusString=RadiusString, cienaCesRadiusUserLogin=cienaCesRadiusUserLogin, cienaCesRadiusUserLoginAcctEntry=cienaCesRadiusUserLoginAcctEntry, cienaCesRadiusUserLoginAcctResolvedInetAddrType=cienaCesRadiusUserLoginAcctResolvedInetAddrType, cienaCesRadiusUserLoginAcctAccessRejects=cienaCesRadiusUserLoginAcctAccessRejects, cienaCesRadiusUserLoginAcct=cienaCesRadiusUserLoginAcct, cienaCesRadiusDot1xAuthAccountingResponses=cienaCesRadiusDot1xAuthAccountingResponses, cienaCesRadiusClientServerAccessChallenges=cienaCesRadiusClientServerAccessChallenges, cienaCesRadiusDot1xAuthAccessAccepts=cienaCesRadiusDot1xAuthAccessAccepts, cienaCesRadiusDot1xAcctGreylistTimeout=cienaCesRadiusDot1xAcctGreylistTimeout, cienaCesRadiusClientServer=cienaCesRadiusClientServer, cienaCesRadiusDot1xAcctTimeout=cienaCesRadiusDot1xAcctTimeout, cienaCesRadiusDot1xAcctAuthSecret=cienaCesRadiusDot1xAcctAuthSecret, cienaCesRadiusDot1xAcctBadAuthenticators=cienaCesRadiusDot1xAcctBadAuthenticators, cienaCesRadiusUserLoginAcctAddr=cienaCesRadiusUserLoginAcctAddr, cienaCesRadiusUserLoginAccessChallenges=cienaCesRadiusUserLoginAccessChallenges, cienaCesRadiusUserLoginResolvedInetAddrType=cienaCesRadiusUserLoginResolvedInetAddrType, cienaCesRadiusUserLoginAcctMalformedResponses=cienaCesRadiusUserLoginAcctMalformedResponses, cienaCesRadiusDot1xAcctRoundTripTime=cienaCesRadiusDot1xAcctRoundTripTime, cienaCesRadiusClientServerAddr=cienaCesRadiusClientServerAddr, cienaCesRadiusUserLoginRequests=cienaCesRadiusUserLoginRequests, cienaCesRadiusDot1xAuthTimeout=cienaCesRadiusDot1xAuthTimeout, cienaCesRadiusDot1xAuth=cienaCesRadiusDot1xAuth, cienaCesRadiusUserLoginAddr=cienaCesRadiusUserLoginAddr, cienaCesRadiusUserLoginAcctIndex=cienaCesRadiusUserLoginAcctIndex, cienaCesRadiusDot1xAuthRetries=cienaCesRadiusDot1xAuthRetries, cienaCesRadiusDot1xAcctAccessRejects=cienaCesRadiusDot1xAcctAccessRejects, cienaCesRadiusUserLoginPacketsDropped=cienaCesRadiusUserLoginPacketsDropped, cienaCesRadiusDot1xAuthPriority=cienaCesRadiusDot1xAuthPriority, cienaCesRadiusDot1xAcctAccessAccepts=cienaCesRadiusDot1xAcctAccessAccepts, cienaCesRadiusUserLoginAccessAccepts=cienaCesRadiusUserLoginAccessAccepts, cienaCesRadiusUserLoginAcctRoundTripTime=cienaCesRadiusUserLoginAcctRoundTripTime, cienaCesRadiusClientServerTimeouts=cienaCesRadiusClientServerTimeouts, cienaCesRadiusDot1xAcctGlobal=cienaCesRadiusDot1xAcctGlobal, cienaCesRadiusClientMIBNotificationPrefix=cienaCesRadiusClientMIBNotificationPrefix, cienaCesRadiusUserLoginAcctResolvedInetAddress=cienaCesRadiusUserLoginAcctResolvedInetAddress, cienaCesRadiusDot1xAuthTimeouts=cienaCesRadiusDot1xAuthTimeouts, cienaCesRadiusUserLoginAcctBadAuthenticators=cienaCesRadiusUserLoginAcctBadAuthenticators, cienaCesRadiusUserLoginAcctStatus=cienaCesRadiusUserLoginAcctStatus, cienaCesRadiusClientServerRoundTripTime=cienaCesRadiusClientServerRoundTripTime, cienaCesRadiusUserLoginAuthSecret=cienaCesRadiusUserLoginAuthSecret, cienaCesRadiusDot1xAuthRetransmissions=cienaCesRadiusDot1xAuthRetransmissions, cienaCesRadiusUserLoginAcctRequests=cienaCesRadiusUserLoginAcctRequests, cienaCesRadiusDot1xAcctRequests=cienaCesRadiusDot1xAcctRequests, cienaCesRadiusDot1xAuthAddr=cienaCesRadiusDot1xAuthAddr, cienaCesRadiusClientServerPacketsDropped=cienaCesRadiusClientServerPacketsDropped, cienaCesRadiusDot1xAuthResolvedInetAddress=cienaCesRadiusDot1xAuthResolvedInetAddress, cienaCesRadiusDot1xAuthAccessChallenges=cienaCesRadiusDot1xAuthAccessChallenges, cienaCesRadiusUserLoginPriority=cienaCesRadiusUserLoginPriority, cienaCesRadiusDot1xAcctUnknownTypes=cienaCesRadiusDot1xAcctUnknownTypes)
