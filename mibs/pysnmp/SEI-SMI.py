#
# PySNMP MIB module SEI-SMI (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SEI-SMI
# Produced by pysmi-0.3.4 at Mon Apr 29 20:53:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
sysName, = mibBuilder.importSymbols("SNMPv2-MIB", "sysName")
ModuleIdentity, iso, Integer32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, Bits, MibIdentifier, Unsigned32, TimeTicks, enterprises, Gauge32, IpAddress, NotificationType, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "iso", "Integer32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "Bits", "MibIdentifier", "Unsigned32", "TimeTicks", "enterprises", "Gauge32", "IpAddress", "NotificationType", "NotificationType")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
sei = ModuleIdentity((1, 3, 6, 1, 4, 1, 20364))
sei.setRevisions(('2004-06-08 00:00',))
if mibBuilder.loadTexts: sei.setLastUpdated('200406080000Z')
if mibBuilder.loadTexts: sei.setOrganization('System Engineering International')
juiceBoxPse = MibIdentifier((1, 3, 6, 1, 4, 1, 20364, 1))
juiceBoxObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 20364, 1, 1))
juiceBoxPortTable = MibTable((1, 3, 6, 1, 4, 1, 20364, 1, 1, 1), )
if mibBuilder.loadTexts: juiceBoxPortTable.setStatus('current')
juiceBoxPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 20364, 1, 1, 1, 1), ).setIndexNames((0, "SEI-SMI", "juiceBoxPortIndex"))
if mibBuilder.loadTexts: juiceBoxPortEntry.setStatus('current')
juiceBoxPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 20364, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: juiceBoxPortIndex.setStatus('current')
juiceBoxPortDetectionSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 20364, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("ieee8023afonly", 2), ("ieee8023afandlegacy", 3), ("forcedon", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juiceBoxPortDetectionSetting.setStatus('current')
juiceBoxPortMaxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 20364, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("max1W", 1), ("max2W", 2), ("max3W", 3), ("max4W", 4), ("max5W", 5), ("max6W", 6), ("max7W", 7), ("max8W", 8), ("max9W", 9), ("max10W", 10), ("max11W", 11), ("max12W", 12), ("max13W", 13), ("max14W", 14), ("max15W", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juiceBoxPortMaxPower.setStatus('current')
juiceBoxPortDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 20364, 1, 1, 1, 1, 4), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juiceBoxPortDescription.setStatus('current')
juiceBoxPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 20364, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15))).clone(namedValues=NamedValues(("disabled", 1), ("deliveringPower", 2), ("startupFault", 3), ("overCurrentFault", 4), ("short", 5), ("open", 6), ("rsignatureHi", 7), ("rsignatureLow", 8), ("invalidDetect", 9), ("disconnect", 10), ("powerup", 12), ("overPowerWarning", 13), ("overPowerFault", 14), ("insufficientPower", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juiceBoxPortStatus.setStatus('current')
juiceBoxPortClassifications = MibTableColumn((1, 3, 6, 1, 4, 1, 20364, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("class0", 1), ("class1", 2), ("class2", 3), ("class3", 4), ("class4", 5), ("legacy", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: juiceBoxPortClassifications.setStatus('current')
juiceBoxPortPowerDelivered = MibTableColumn((1, 3, 6, 1, 4, 1, 20364, 1, 1, 1, 1, 7), Gauge32()).setUnits('milliWatts').setMaxAccess("readonly")
if mibBuilder.loadTexts: juiceBoxPortPowerDelivered.setStatus('current')
juiceBoxMainObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 20364, 1, 1, 2))
juiceBoxMainSystemVoltage = MibScalar((1, 3, 6, 1, 4, 1, 20364, 1, 1, 2, 1), Gauge32()).setUnits('milliVolts').setMaxAccess("readonly")
if mibBuilder.loadTexts: juiceBoxMainSystemVoltage.setStatus('current')
juiceBoxMainTemperature = MibScalar((1, 3, 6, 1, 4, 1, 20364, 1, 1, 2, 2), Gauge32()).setUnits('degrees C').setMaxAccess("readonly")
if mibBuilder.loadTexts: juiceBoxMainTemperature.setStatus('current')
juiceBoxMainPowerAvailable = MibScalar((1, 3, 6, 1, 4, 1, 20364, 1, 1, 2, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: juiceBoxMainPowerAvailable.setStatus('current')
juiceBoxMainPowerDelivered = MibScalar((1, 3, 6, 1, 4, 1, 20364, 1, 1, 2, 4), Gauge32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: juiceBoxMainPowerDelivered.setStatus('current')
juiceBoxMainAllocatedPower = MibScalar((1, 3, 6, 1, 4, 1, 20364, 1, 1, 2, 5), Gauge32()).setUnits('Watts').setMaxAccess("readonly")
if mibBuilder.loadTexts: juiceBoxMainAllocatedPower.setStatus('current')
juiceBoxMainAllocatedPowerThreshold = MibScalar((1, 3, 6, 1, 4, 1, 20364, 1, 1, 2, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setUnits('%').setMaxAccess("readwrite")
if mibBuilder.loadTexts: juiceBoxMainAllocatedPowerThreshold.setStatus('current')
juiceBoxMainTrapDestinationIPAddr = MibScalar((1, 3, 6, 1, 4, 1, 20364, 1, 1, 2, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juiceBoxMainTrapDestinationIPAddr.setStatus('current')
juiceBoxMainTrapReXmitPeriod = MibScalar((1, 3, 6, 1, 4, 1, 20364, 1, 1, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: juiceBoxMainTrapReXmitPeriod.setStatus('current')
juiceBoxMainGlobalPortDetectionSetting = MibScalar((1, 3, 6, 1, 4, 1, 20364, 1, 1, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("ieee8023afonly", 2), ("ieee8023afandlegacy", 3), ("forcedon", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juiceBoxMainGlobalPortDetectionSetting.setStatus('current')
juiceBoxMainGlobalPortMaxPower = MibScalar((1, 3, 6, 1, 4, 1, 20364, 1, 1, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("max1W", 1), ("max2W", 2), ("max3W", 3), ("max4W", 4), ("max5W", 5), ("max6W", 6), ("max7W", 7), ("max8W", 8), ("max9W", 9), ("max10W", 10), ("max11W", 11), ("max12W", 12), ("max13W", 13), ("max14W", 14), ("max15W", 15)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: juiceBoxMainGlobalPortMaxPower.setStatus('current')
juiceBoxMainNetworkControllerFirmware = MibScalar((1, 3, 6, 1, 4, 1, 20364, 1, 1, 2, 11), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juiceBoxMainNetworkControllerFirmware.setStatus('current')
juiceBoxMainSystemControllerFirmware = MibScalar((1, 3, 6, 1, 4, 1, 20364, 1, 1, 2, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: juiceBoxMainSystemControllerFirmware.setStatus('current')
juiceBoxPortStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 20364) + (0,20)).setObjects(("SNMPv2-MIB", "sysName"), ("SEI-SMI", "juiceBoxPortIndex"), ("SEI-SMI", "juiceBoxPortStatus"))
juiceBoxAllocatedPowerThresholdReached = NotificationType((1, 3, 6, 1, 4, 1, 20364) + (0,10)).setObjects(("SNMPv2-MIB", "sysName"), ("SEI-SMI", "juiceBoxMainAllocatedPower"), ("SEI-SMI", "juiceBoxMainPowerDelivered"))
mibBuilder.exportSymbols("SEI-SMI", juiceBoxAllocatedPowerThresholdReached=juiceBoxAllocatedPowerThresholdReached, juiceBoxPortMaxPower=juiceBoxPortMaxPower, juiceBoxMainSystemControllerFirmware=juiceBoxMainSystemControllerFirmware, juiceBoxMainObjects=juiceBoxMainObjects, juiceBoxMainNetworkControllerFirmware=juiceBoxMainNetworkControllerFirmware, juiceBoxPortDetectionSetting=juiceBoxPortDetectionSetting, juiceBoxObjects=juiceBoxObjects, juiceBoxPortTable=juiceBoxPortTable, juiceBoxPortStatusChange=juiceBoxPortStatusChange, juiceBoxPortEntry=juiceBoxPortEntry, sei=sei, PYSNMP_MODULE_ID=sei, juiceBoxMainPowerAvailable=juiceBoxMainPowerAvailable, juiceBoxMainTemperature=juiceBoxMainTemperature, juiceBoxPortPowerDelivered=juiceBoxPortPowerDelivered, juiceBoxMainGlobalPortDetectionSetting=juiceBoxMainGlobalPortDetectionSetting, juiceBoxPortDescription=juiceBoxPortDescription, juiceBoxMainTrapDestinationIPAddr=juiceBoxMainTrapDestinationIPAddr, juiceBoxMainTrapReXmitPeriod=juiceBoxMainTrapReXmitPeriod, juiceBoxMainSystemVoltage=juiceBoxMainSystemVoltage, juiceBoxPse=juiceBoxPse, juiceBoxMainGlobalPortMaxPower=juiceBoxMainGlobalPortMaxPower, juiceBoxMainPowerDelivered=juiceBoxMainPowerDelivered, juiceBoxPortClassifications=juiceBoxPortClassifications, juiceBoxMainAllocatedPowerThreshold=juiceBoxMainAllocatedPowerThreshold, juiceBoxPortStatus=juiceBoxPortStatus, juiceBoxPortIndex=juiceBoxPortIndex, juiceBoxMainAllocatedPower=juiceBoxMainAllocatedPower)
