#
# PySNMP MIB module CMC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CMC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:09:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Integer32, ObjectIdentity, Unsigned32, TimeTicks, NotificationType, MibIdentifier, Bits, ModuleIdentity, enterprises, IpAddress, Counter64, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Integer32", "ObjectIdentity", "Unsigned32", "TimeTicks", "NotificationType", "MibIdentifier", "Bits", "ModuleIdentity", "enterprises", "IpAddress", "Counter64", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class NetNumber(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

class IpxAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(14, 14)
    fixedLength = 14

cmc = MibIdentifier((1, 3, 6, 1, 4, 1, 44))
cmc_prod = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 1)).setLabel("cmc-prod")
cmc_adapt = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 1, 1)).setLabel("cmc-adapt")
cmc_system = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 1, 2)).setLabel("cmc-system")
cmc_soft = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 1, 3)).setLabel("cmc-soft")
cmc_mgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 2)).setLabel("cmc-mgmt")
cmc_mib = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 2, 1)).setLabel("cmc-mib")
cmc_trapA = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 2, 6)).setLabel("cmc-trapA")
cmc_trapB = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 2, 6, 6)).setLabel("cmc-trapB")
cmc_trapC = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 2, 6, 6, 5)).setLabel("cmc-trapC")
cmc_trapD = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 2, 6, 6, 5, 3)).setLabel("cmc-trapD")
cmc_trapE = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 2, 6, 6, 5, 3, 10)).setLabel("cmc-trapE")
cmc_ip = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 2, 1, 4)).setLabel("cmc-ip")
cmc_ipx = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 2, 1, 5)).setLabel("cmc-ipx")
cmc_ipx_ipx = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1)).setLabel("cmc-ipx-ipx")
cmc_ipx_ipxSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1)).setLabel("cmc-ipx-ipxSystem")
cmc_ipx_ipxCircuit = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2)).setLabel("cmc-ipx-ipxCircuit")
cmc_ipx_ipxForwarding = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 3)).setLabel("cmc-ipx-ipxForwarding")
cmc_ipx_ipxServices = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 4)).setLabel("cmc-ipx-ipxServices")
cmc_ipx_filter = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2)).setLabel("cmc-ipx-filter")
cmc_ipx_filt_packet = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 2)).setLabel("cmc-ipx-filt-packet")
cmc_ipx_filt_rip = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 4)).setLabel("cmc-ipx-filt-rip")
cmc_ipx_filt_sap = MibIdentifier((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 6)).setLabel("cmc-ipx-filt-sap")
cmcIpInAdminDiscards = MibScalar((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmcIpInAdminDiscards.setStatus('mandatory')
cmcIpOutAdminDiscards = MibScalar((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmcIpOutAdminDiscards.setStatus('mandatory')
cmcIpFiltStatus = MibScalar((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpFiltStatus.setStatus('mandatory')
cmcIpFilterTable = MibTable((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 5), )
if mibBuilder.loadTexts: cmcIpFilterTable.setStatus('mandatory')
cmcIpFiltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 5, 1), ).setIndexNames((0, "CMC-MIB", "cmcIpFiltName"))
if mibBuilder.loadTexts: cmcIpFiltEntry.setStatus('mandatory')
cmcIpFiltName = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 5, 1, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpFiltName.setStatus('mandatory')
cmcIpFiltPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmcIpFiltPriority.setStatus('mandatory')
cmcIpFiltSAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 5, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpFiltSAddr.setStatus('mandatory')
cmcIpFiltSMask = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 5, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpFiltSMask.setStatus('mandatory')
cmcIpFiltSPort = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 5, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpFiltSPort.setStatus('mandatory')
cmcIpFiltDAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 5, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpFiltDAddr.setStatus('mandatory')
cmcIpFiltDMask = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 5, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpFiltDMask.setStatus('mandatory')
cmcIpFiltDPort = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 5, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpFiltDPort.setStatus('mandatory')
cmcIpFiltProto = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 5, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpFiltProto.setStatus('mandatory')
cmcIpFiltMode = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2), ("nodial", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpFiltMode.setStatus('mandatory')
cmcIpFiltErrMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 5, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpFiltErrMsg.setStatus('mandatory')
cmcIpFiltType = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("invalid", 2), ("netmgmt", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpFiltType.setStatus('mandatory')
cmcIpFiltMoveOper = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 5, 1, 13), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpFiltMoveOper.setStatus('mandatory')
cmcIpFiltUseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 5, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpFiltUseCount.setStatus('mandatory')
cmcIpFiltDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 5, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("both", 1), ("incoming", 2), ("outgoing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpFiltDirection.setStatus('mandatory')
cmcIpFiltIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 4, 5, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpFiltIfIndex.setStatus('mandatory')
cmcConnectionEstablished = NotificationType((1, 3, 6, 1, 4, 1, 44, 2, 6, 6, 5, 3, 10) + (0,1))
cmcConnectionTerminated = NotificationType((1, 3, 6, 1, 4, 1, 44, 2, 6, 6, 5, 3, 10) + (0,2))
ipxSysTable = MibTable((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1), )
if mibBuilder.loadTexts: ipxSysTable.setStatus('mandatory')
ipxSysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1), ).setIndexNames((0, "CMC-MIB", "ipxSysInstance"))
if mibBuilder.loadTexts: ipxSysEntry.setStatus('mandatory')
ipxSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxSysInstance.setStatus('mandatory')
ipxSysExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxSysExistState.setStatus('mandatory')
ipxSysIntNetNumExists = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysIntNetNumExists.setStatus('mandatory')
ipxSysIntNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 4), NetNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxSysIntNetNum.setStatus('mandatory')
ipxSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxSysName.setStatus('mandatory')
ipxSysMaxPathSplits = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxSysMaxPathSplits.setStatus('mandatory')
ipxSysMaxHops = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxSysMaxHops.setStatus('mandatory')
ipxSysVersionMajor = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysVersionMajor.setStatus('mandatory')
ipxSysVersionMinor = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysVersionMinor.setStatus('mandatory')
ipxSysInReceives = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysInReceives.setStatus('mandatory')
ipxSysInTooManyHops = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysInTooManyHops.setStatus('mandatory')
ipxSysInHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysInHdrErrors.setStatus('mandatory')
ipxSysInUnknownSockets = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysInUnknownSockets.setStatus('mandatory')
ipxSysInFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysInFiltered.setStatus('mandatory')
ipxSysInCompressDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysInCompressDiscards.setStatus('mandatory')
ipxSysInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysInDiscards.setStatus('mandatory')
ipxSysInDelivers = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysInDelivers.setStatus('mandatory')
ipxSysNETBIOSPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysNETBIOSPackets.setStatus('mandatory')
ipxSysForwPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysForwPackets.setStatus('mandatory')
ipxSysOutRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysOutRequests.setStatus('mandatory')
ipxSysOutNoRoutes = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysOutNoRoutes.setStatus('mandatory')
ipxSysOutFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysOutFiltered.setStatus('mandatory')
ipxSysOutCompressDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysOutCompressDiscards.setStatus('mandatory')
ipxSysOutMalformedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysOutMalformedRequests.setStatus('mandatory')
ipxSysOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysOutDiscards.setStatus('mandatory')
ipxSysOutPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysOutPackets.setStatus('mandatory')
ipxSysCircCount = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysCircCount.setStatus('mandatory')
ipxSysDestCount = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysDestCount.setStatus('mandatory')
ipxSysServCount = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysServCount.setStatus('mandatory')
ipxSysResourceFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysResourceFailures.setStatus('mandatory')
ipxSysConfigSockets = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysConfigSockets.setStatus('mandatory')
ipxSysMaxOpenSockets = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysMaxOpenSockets.setStatus('mandatory')
ipxSysOpenSocketFails = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 1, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSysOpenSocketFails.setStatus('mandatory')
ipxCircTable = MibTable((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1), )
if mibBuilder.loadTexts: ipxCircTable.setStatus('mandatory')
ipxCircEntry = MibTableRow((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1), ).setIndexNames((0, "CMC-MIB", "ipxCircSysInstance"), (0, "CMC-MIB", "ipxCircIndex"))
if mibBuilder.loadTexts: ipxCircEntry.setStatus('mandatory')
ipxCircSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircSysInstance.setStatus('mandatory')
ipxCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircIndex.setStatus('mandatory')
ipxCircExistState = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircExistState.setStatus('mandatory')
ipxCircOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircOperState.setStatus('mandatory')
ipxCircIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircIfIndex.setStatus('mandatory')
ipxCircName = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircName.setStatus('mandatory')
ipxCircInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircInfo.setStatus('mandatory')
ipxCircType = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("broadcast", 2), ("ptTopt", 3), ("wanRIP", 4), ("unnumberedRIP", 5), ("dynamic", 6), ("wanWS", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircType.setStatus('mandatory')
ipxCircLocalMaxPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircLocalMaxPacketSize.setStatus('mandatory')
ipxCircCompressState = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircCompressState.setStatus('mandatory')
ipxCircCompressSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxCircCompressSlots.setStatus('mandatory')
ipxCircCompressedSent = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircCompressedSent.setStatus('mandatory')
ipxCircUncompressedSent = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircUncompressedSent.setStatus('mandatory')
ipxCircMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircMediaType.setStatus('mandatory')
ipxCircNetNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 15), NetNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircNetNumber.setStatus('mandatory')
ipxCircStateChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircStateChanges.setStatus('mandatory')
ipxCircInitFails = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircInitFails.setStatus('mandatory')
ipxCircDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircDelay.setStatus('mandatory')
ipxCircThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 2, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCircThroughput.setStatus('mandatory')
ipxDestTable = MibTable((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 3, 1), )
if mibBuilder.loadTexts: ipxDestTable.setStatus('mandatory')
ipxDestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 3, 1, 1), ).setIndexNames((0, "CMC-MIB", "ipxDestSysInstance"), (0, "CMC-MIB", "ipxDestNetNum"))
if mibBuilder.loadTexts: ipxDestEntry.setStatus('mandatory')
ipxDestSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDestSysInstance.setStatus('mandatory')
ipxDestNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 3, 1, 1, 2), NetNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDestNetNum.setStatus('mandatory')
ipxDestProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("rip", 3), ("nlsp", 4), ("static", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDestProtocol.setStatus('mandatory')
ipxDestCost = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 3, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDestCost.setStatus('mandatory')
ipxDestHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 3, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDestHopCount.setStatus('mandatory')
ipxDestNextHopCircIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 3, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDestNextHopCircIndex.setStatus('mandatory')
ipxDestNextHopNICAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 3, 1, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDestNextHopNICAddress.setStatus('mandatory')
ipxDestNextHopNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 3, 1, 1, 8), NetNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxDestNextHopNetNum.setStatus('mandatory')
ipxDestType = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("nlspLevel1Router", 2), ("router", 4), ("network", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDestType.setStatus('mandatory')
ipxServTable = MibTable((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 4, 1), )
if mibBuilder.loadTexts: ipxServTable.setStatus('mandatory')
ipxServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 4, 1, 1), ).setIndexNames((0, "CMC-MIB", "ipxServSysInstance"), (0, "CMC-MIB", "ipxServName"), (0, "CMC-MIB", "ipxServTypeValue"))
if mibBuilder.loadTexts: ipxServEntry.setStatus('mandatory')
ipxServSysInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 4, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxServSysInstance.setStatus('mandatory')
ipxServName = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 4, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxServName.setStatus('mandatory')
ipxServTypeValue = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 4, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxServTypeValue.setStatus('mandatory')
ipxServType = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("unknown", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxServType.setStatus('mandatory')
ipxServProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("nlsp", 4), ("static", 5), ("sap", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxServProtocol.setStatus('mandatory')
ipxServNetNum = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 4, 1, 1, 6), NetNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxServNetNum.setStatus('mandatory')
ipxServNode = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 4, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxServNode.setStatus('mandatory')
ipxServSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 1, 4, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxServSocket.setStatus('mandatory')
cmcIpxFiltStatus = MibScalar((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltStatus.setStatus('mandatory')
cmcIpxFilterTable = MibTable((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 2, 1), )
if mibBuilder.loadTexts: cmcIpxFilterTable.setStatus('mandatory')
cmcIpxFiltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 2, 1, 1), ).setIndexNames((0, "CMC-MIB", "cmcIpxFiltName"))
if mibBuilder.loadTexts: cmcIpxFiltEntry.setStatus('mandatory')
cmcIpxFiltName = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 2, 1, 1, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltName.setStatus('mandatory')
cmcIpxFiltSAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 2, 1, 1, 2), IpxAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltSAddr.setStatus('mandatory')
cmcIpxFiltDAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 2, 1, 1, 3), IpxAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltDAddr.setStatus('mandatory')
cmcIpxFiltPktType = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 2, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltPktType.setStatus('mandatory')
cmcIpxFiltMode = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2), ("nodial", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltMode.setStatus('mandatory')
cmcIpxFiltType = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("invalid", 2), ("netmgmt", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltType.setStatus('mandatory')
cmcIpxFiltMoveOper = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 2, 1, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltMoveOper.setStatus('mandatory')
cmcIpxFiltUseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 2, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltUseCount.setStatus('mandatory')
cmcIpxFiltDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("both", 1), ("incoming", 2), ("outgoing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltDirection.setStatus('mandatory')
cmcIpxFiltIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 2, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltIfIndex.setStatus('mandatory')
cmcIpxFiltPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmcIpxFiltPriority.setStatus('mandatory')
cmcIpxFiltState = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltState.setStatus('mandatory')
cmcIpxFiltRIPStatus = MibScalar((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltRIPStatus.setStatus('mandatory')
cmcIpxFilterRIPTable = MibTable((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 4, 1), )
if mibBuilder.loadTexts: cmcIpxFilterRIPTable.setStatus('mandatory')
cmcIpxFiltRIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 4, 1, 1), ).setIndexNames((0, "CMC-MIB", "cmcIpxFiltRIPName"))
if mibBuilder.loadTexts: cmcIpxFiltRIPEntry.setStatus('mandatory')
cmcIpxFiltRIPName = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 4, 1, 1, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltRIPName.setStatus('mandatory')
cmcIpxFiltRIPNetworkNum = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 4, 1, 1, 2), NetNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltRIPNetworkNum.setStatus('mandatory')
cmcIpxFiltRIPMoveOper = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 4, 1, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltRIPMoveOper.setStatus('mandatory')
cmcIpxFiltRIPMode = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2), ("nodial", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltRIPMode.setStatus('mandatory')
cmcIpxFiltRIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("invalid", 2), ("netmgmt", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltRIPType.setStatus('mandatory')
cmcIpxFiltRIPUseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 4, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltRIPUseCount.setStatus('mandatory')
cmcIpxFiltRIPDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("both", 1), ("incoming", 2), ("outgoing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltRIPDirection.setStatus('mandatory')
cmcIpxFiltRIPQueryType = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("request", 1), ("response", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltRIPQueryType.setStatus('mandatory')
cmcIpxFiltRIPIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 4, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltRIPIfIndex.setStatus('mandatory')
cmcIpxFiltRIPPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 4, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmcIpxFiltRIPPriority.setStatus('mandatory')
cmcIpxFiltRIPState = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltRIPState.setStatus('mandatory')
cmcIpxFiltSAPStatus = MibScalar((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltSAPStatus.setStatus('mandatory')
cmcIpxFilterSAPTable = MibTable((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 6, 1), )
if mibBuilder.loadTexts: cmcIpxFilterSAPTable.setStatus('mandatory')
cmcIpxFiltSAPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 6, 1, 1), ).setIndexNames((0, "CMC-MIB", "cmcIpxFiltSAPName"))
if mibBuilder.loadTexts: cmcIpxFiltSAPEntry.setStatus('mandatory')
cmcIpxFiltSAPName = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 6, 1, 1, 1), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltSAPName.setStatus('mandatory')
cmcIpxFiltSAPServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 6, 1, 1, 2), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltSAPServerName.setStatus('mandatory')
cmcIpxFiltSAPServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 6, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltSAPServerType.setStatus('mandatory')
cmcIpxFiltSAPMoveOper = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 6, 1, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltSAPMoveOper.setStatus('mandatory')
cmcIpxFiltSAPMode = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("allow", 1), ("deny", 2), ("nodial", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltSAPMode.setStatus('mandatory')
cmcIpxFiltSAPType = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("invalid", 2), ("netmgmt", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltSAPType.setStatus('mandatory')
cmcIpxFiltSAPUseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 6, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltSAPUseCount.setStatus('mandatory')
cmcIpxFiltSAPDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("both", 1), ("incoming", 2), ("outgoing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltSAPDirection.setStatus('mandatory')
cmcIpxFiltSAPQueryType = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 6, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("request", 1), ("response", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltSAPQueryType.setStatus('mandatory')
cmcIpxFiltSAPIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 6, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltSAPIfIndex.setStatus('mandatory')
cmcIpxFiltSAPPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 6, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmcIpxFiltSAPPriority.setStatus('mandatory')
cmcIpxFiltSAPState = MibTableColumn((1, 3, 6, 1, 4, 1, 44, 2, 1, 5, 2, 6, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmcIpxFiltSAPState.setStatus('mandatory')
mibBuilder.exportSymbols("CMC-MIB", cmc_ipx_ipxSystem=cmc_ipx_ipxSystem, ipxSysNETBIOSPackets=ipxSysNETBIOSPackets, ipxCircStateChanges=ipxCircStateChanges, cmcIpxFiltRIPState=cmcIpxFiltRIPState, cmcIpxFiltSAPState=cmcIpxFiltSAPState, ipxSysIntNetNumExists=ipxSysIntNetNumExists, cmcIpFiltSPort=cmcIpFiltSPort, cmcIpFilterTable=cmcIpFilterTable, ipxSysInFiltered=ipxSysInFiltered, ipxCircCompressState=ipxCircCompressState, ipxServSocket=ipxServSocket, cmcIpxFilterTable=cmcIpxFilterTable, cmcIpxFiltState=cmcIpxFiltState, cmcIpFiltDirection=cmcIpFiltDirection, cmcIpxFiltSAPType=cmcIpxFiltSAPType, cmcIpxFiltSAPDirection=cmcIpxFiltSAPDirection, ipxSysOpenSocketFails=ipxSysOpenSocketFails, ipxDestNetNum=ipxDestNetNum, cmcIpxFiltRIPType=cmcIpxFiltRIPType, ipxSysInHdrErrors=ipxSysInHdrErrors, ipxSysDestCount=ipxSysDestCount, ipxSysIntNetNum=ipxSysIntNetNum, cmc_mib=cmc_mib, cmcIpxFiltSAPMode=cmcIpxFiltSAPMode, ipxSysMaxPathSplits=ipxSysMaxPathSplits, ipxDestEntry=ipxDestEntry, cmcIpxFiltSAPMoveOper=cmcIpxFiltSAPMoveOper, cmc_ipx_filter=cmc_ipx_filter, ipxSysOutPackets=ipxSysOutPackets, ipxSysMaxOpenSockets=ipxSysMaxOpenSockets, cmcIpxFiltSAPServerType=cmcIpxFiltSAPServerType, ipxSysName=ipxSysName, cmcIpFiltIfIndex=cmcIpFiltIfIndex, ipxCircExistState=ipxCircExistState, cmcIpFiltDPort=cmcIpFiltDPort, cmc_system=cmc_system, cmc_trapD=cmc_trapD, cmcIpFiltEntry=cmcIpFiltEntry, cmc_ipx=cmc_ipx, ipxServProtocol=ipxServProtocol, cmcIpxFiltRIPName=cmcIpxFiltRIPName, cmcIpxFiltSAPPriority=cmcIpxFiltSAPPriority, cmc_ipx_filt_rip=cmc_ipx_filt_rip, cmcIpxFiltRIPUseCount=cmcIpxFiltRIPUseCount, ipxCircIndex=ipxCircIndex, ipxServEntry=ipxServEntry, cmcIpFiltPriority=cmcIpFiltPriority, cmcIpxFiltSAPUseCount=cmcIpxFiltSAPUseCount, ipxDestProtocol=ipxDestProtocol, ipxSysOutRequests=ipxSysOutRequests, ipxDestNextHopCircIndex=ipxDestNextHopCircIndex, cmcIpxFiltRIPStatus=cmcIpxFiltRIPStatus, ipxDestType=ipxDestType, cmc=cmc, cmcIpFiltErrMsg=cmcIpFiltErrMsg, ipxCircCompressSlots=ipxCircCompressSlots, cmcIpxFiltPktType=cmcIpxFiltPktType, cmc_soft=cmc_soft, cmcIpxFiltMoveOper=cmcIpxFiltMoveOper, ipxSysTable=ipxSysTable, cmcIpxFiltSAPEntry=cmcIpxFiltSAPEntry, ipxSysResourceFailures=ipxSysResourceFailures, cmc_prod=cmc_prod, cmcIpxFiltStatus=cmcIpxFiltStatus, ipxCircTable=ipxCircTable, ipxSysInDelivers=ipxSysInDelivers, NetNumber=NetNumber, ipxCircCompressedSent=ipxCircCompressedSent, cmcIpxFiltDirection=cmcIpxFiltDirection, cmcIpFiltMoveOper=cmcIpFiltMoveOper, ipxDestNextHopNICAddress=ipxDestNextHopNICAddress, ipxCircLocalMaxPacketSize=ipxCircLocalMaxPacketSize, cmc_mgmt=cmc_mgmt, cmcIpxFiltRIPMoveOper=cmcIpxFiltRIPMoveOper, ipxSysInDiscards=ipxSysInDiscards, cmcIpxFiltSAddr=cmcIpxFiltSAddr, cmc_ipx_ipx=cmc_ipx_ipx, cmcIpFiltStatus=cmcIpFiltStatus, cmcIpxFiltRIPNetworkNum=cmcIpxFiltRIPNetworkNum, ipxSysInCompressDiscards=ipxSysInCompressDiscards, ipxSysInUnknownSockets=ipxSysInUnknownSockets, cmcIpFiltSAddr=cmcIpFiltSAddr, ipxSysVersionMajor=ipxSysVersionMajor, ipxCircThroughput=ipxCircThroughput, cmcIpxFiltName=cmcIpxFiltName, cmcIpxFiltSAPQueryType=cmcIpxFiltSAPQueryType, ipxCircInitFails=ipxCircInitFails, cmcIpFiltType=cmcIpFiltType, cmcIpxFiltMode=cmcIpxFiltMode, cmc_trapE=cmc_trapE, cmcConnectionEstablished=cmcConnectionEstablished, ipxSysForwPackets=ipxSysForwPackets, cmcIpFiltProto=cmcIpFiltProto, ipxSysServCount=ipxSysServCount, ipxDestTable=ipxDestTable, ipxSysVersionMinor=ipxSysVersionMinor, cmcIpxFiltSAPServerName=cmcIpxFiltSAPServerName, ipxSysMaxHops=ipxSysMaxHops, cmcIpxFiltSAPName=cmcIpxFiltSAPName, cmcIpxFiltRIPEntry=cmcIpxFiltRIPEntry, ipxDestHopCount=ipxDestHopCount, cmcIpFiltMode=cmcIpFiltMode, cmcIpxFiltRIPDirection=cmcIpxFiltRIPDirection, ipxSysOutNoRoutes=ipxSysOutNoRoutes, ipxSysOutCompressDiscards=ipxSysOutCompressDiscards, ipxSysEntry=ipxSysEntry, cmc_ipx_filt_packet=cmc_ipx_filt_packet, ipxCircSysInstance=ipxCircSysInstance, ipxCircMediaType=ipxCircMediaType, ipxDestCost=ipxDestCost, cmcIpxFiltEntry=cmcIpxFiltEntry, cmcConnectionTerminated=cmcConnectionTerminated, cmcIpxFiltUseCount=cmcIpxFiltUseCount, cmcIpxFiltSAPIfIndex=cmcIpxFiltSAPIfIndex, ipxSysInReceives=ipxSysInReceives, cmcIpOutAdminDiscards=cmcIpOutAdminDiscards, cmc_trapA=cmc_trapA, cmcIpxFiltRIPQueryType=cmcIpxFiltRIPQueryType, cmcIpFiltSMask=cmcIpFiltSMask, cmc_ipx_ipxServices=cmc_ipx_ipxServices, ipxServNode=ipxServNode, cmcIpxFilterRIPTable=cmcIpxFilterRIPTable, ipxCircIfIndex=ipxCircIfIndex, ipxCircName=ipxCircName, cmcIpxFiltRIPIfIndex=cmcIpxFiltRIPIfIndex, cmcIpxFiltPriority=cmcIpxFiltPriority, cmcIpxFiltRIPMode=cmcIpxFiltRIPMode, cmc_ipx_filt_sap=cmc_ipx_filt_sap, cmcIpxFiltSAPStatus=cmcIpxFiltSAPStatus, cmcIpFiltName=cmcIpFiltName, ipxSysExistState=ipxSysExistState, cmcIpxFilterSAPTable=cmcIpxFilterSAPTable, ipxServType=ipxServType, ipxCircType=ipxCircType, ipxDestNextHopNetNum=ipxDestNextHopNetNum, cmcIpFiltUseCount=cmcIpFiltUseCount, ipxServName=ipxServName, cmcIpxFiltRIPPriority=cmcIpxFiltRIPPriority, ipxServNetNum=ipxServNetNum, ipxSysOutFiltered=ipxSysOutFiltered, cmc_trapB=cmc_trapB, ipxCircOperState=ipxCircOperState, cmcIpFiltDMask=cmcIpFiltDMask, ipxSysInTooManyHops=ipxSysInTooManyHops, IpxAddress=IpxAddress, ipxSysOutDiscards=ipxSysOutDiscards, ipxCircDelay=ipxCircDelay, ipxCircInfo=ipxCircInfo, ipxServTable=ipxServTable, ipxCircEntry=ipxCircEntry, ipxSysConfigSockets=ipxSysConfigSockets, cmcIpInAdminDiscards=cmcIpInAdminDiscards, ipxServSysInstance=ipxServSysInstance, ipxSysCircCount=ipxSysCircCount, ipxCircUncompressedSent=ipxCircUncompressedSent, cmc_ipx_ipxForwarding=cmc_ipx_ipxForwarding, cmcIpxFiltType=cmcIpxFiltType, ipxServTypeValue=ipxServTypeValue, cmcIpFiltDAddr=cmcIpFiltDAddr, cmc_adapt=cmc_adapt, ipxCircNetNumber=ipxCircNetNumber, cmc_trapC=cmc_trapC, ipxSysInstance=ipxSysInstance, cmc_ipx_ipxCircuit=cmc_ipx_ipxCircuit, ipxDestSysInstance=ipxDestSysInstance, cmcIpxFiltDAddr=cmcIpxFiltDAddr, cmcIpxFiltIfIndex=cmcIpxFiltIfIndex, cmc_ip=cmc_ip, ipxSysOutMalformedRequests=ipxSysOutMalformedRequests)
