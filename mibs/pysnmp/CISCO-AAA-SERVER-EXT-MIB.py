#
# PySNMP MIB module CISCO-AAA-SERVER-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-AAA-SERVER-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:32:25 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
casConfigEntry, CiscoAAAProtocol = mibBuilder.importSymbols("CISCO-AAA-SERVER-MIB", "casConfigEntry", "CiscoAAAProtocol")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
TimeIntervalSec, TimeIntervalMin = mibBuilder.importSymbols("CISCO-TC", "TimeIntervalSec", "TimeIntervalMin")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Unsigned32, Gauge32, MibIdentifier, Counter64, ModuleIdentity, NotificationType, TimeTicks, IpAddress, ObjectIdentity, iso, Counter32, Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Gauge32", "MibIdentifier", "Counter64", "ModuleIdentity", "NotificationType", "TimeTicks", "IpAddress", "ObjectIdentity", "iso", "Counter32", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
ciscoAAAServerExtMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 367))
ciscoAAAServerExtMIB.setRevisions(('2005-05-23 00:00', '2005-05-09 00:00', '2003-11-14 00:00',))
if mibBuilder.loadTexts: ciscoAAAServerExtMIB.setLastUpdated('200505230000Z')
if mibBuilder.loadTexts: ciscoAAAServerExtMIB.setOrganization('Cisco Systems, Inc.')
ciscoAAASvrExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 367, 1))
ciscoAAASvrExtMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 367, 2))
cAAASvrExtGenericConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 1))
cAAASvrExtSvrTableConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 2))
cAAASvrExtProtoParamConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 3))
cAAASvrExtSvrGrpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 4))
cAAASvrExtAppSvrGrpMapConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 5))
class CiscoAAAServerKeyEncrType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("plain", 1), ("encrypted", 2), ("notConfigured", 3))

cAAASvrExtLocalAccLogMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000000))).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cAAASvrExtLocalAccLogMaxSize.setStatus('current')
cAAASvrExtSvrGrpSvrListMaxEnt = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAAASvrExtSvrGrpSvrListMaxEnt.setStatus('current')
cAAASvrExtAppToSvrGrpMaxEnt = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAAASvrExtAppToSvrGrpMaxEnt.setStatus('current')
cAAASvrExtClearAccLog = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("clear", 1), ("noOp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cAAASvrExtClearAccLog.setStatus('current')
cAAALoginAuthTypeMSCHAP = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cAAALoginAuthTypeMSCHAP.setStatus('current')
cAAASvrExtConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 2, 1), )
if mibBuilder.loadTexts: cAAASvrExtConfigTable.setStatus('current')
cAAASvrExtConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 2, 1, 1), )
casConfigEntry.registerAugmentions(("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtConfigEntry"))
cAAASvrExtConfigEntry.setIndexNames(*casConfigEntry.getIndexNames())
if mibBuilder.loadTexts: cAAASvrExtConfigEntry.setStatus('current')
cAAAServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 2, 1, 1, 1), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAAAServerAddrType.setStatus('current')
cAAAServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 2, 1, 1, 2), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAAAServerAddr.setStatus('current')
cAAAServerKeyEncrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 2, 1, 1, 3), CiscoAAAServerKeyEncrType().clone('plain')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAAAServerKeyEncrType.setStatus('current')
cAAAServerDeadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 2, 1, 1, 4), TimeIntervalMin().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAAAServerDeadTime.setStatus('current')
cAAAServerTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 2, 1, 1, 5), TimeIntervalSec().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAAAServerTimeOut.setStatus('current')
cAAAServerRetransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 2, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('retransmits').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAAAServerRetransmits.setStatus('current')
cAAAServerRootDN = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 2, 1, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAAAServerRootDN.setStatus('current')
cAAAServerIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 2, 1, 1, 8), TimeIntervalMin().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAAAServerIdleTime.setStatus('current')
cAAAServerTestUser = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 2, 1, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAAAServerTestUser.setStatus('current')
cAAAServerTestPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 2, 1, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAAAServerTestPassword.setStatus('current')
cAAASvrExtProtocolParamTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 3, 1), )
if mibBuilder.loadTexts: cAAASvrExtProtocolParamTable.setStatus('current')
cAAASvrExtProtocolParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-AAA-SERVER-EXT-MIB", "cAAAServerProtocol"))
if mibBuilder.loadTexts: cAAASvrExtProtocolParamEntry.setStatus('current')
cAAAServerProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 3, 1, 1, 1), CiscoAAAProtocol())
if mibBuilder.loadTexts: cAAAServerProtocol.setStatus('current')
cAAAServerProtoAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 3, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cAAAServerProtoAuthKey.setStatus('current')
cAAAServerProtoKeyEncrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 3, 1, 1, 3), CiscoAAAServerKeyEncrType().clone('plain')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cAAAServerProtoKeyEncrType.setStatus('current')
cAAAServerProtoDeadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 3, 1, 1, 4), TimeIntervalMin().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cAAAServerProtoDeadTime.setStatus('current')
cAAAServerProtoTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 3, 1, 1, 5), TimeIntervalSec().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cAAAServerProtoTimeOut.setStatus('current')
cAAAServerProtoRetransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 3, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(1)).setUnits('retransmits').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cAAAServerProtoRetransmits.setStatus('current')
cAAAServerProtoSvrTableMaxEnt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 3, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cAAAServerProtoSvrTableMaxEnt.setStatus('current')
cAAAServerProtoDirectedReq = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 3, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cAAAServerProtoDirectedReq.setStatus('current')
cAAASvrExtSvrGrpConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 4, 1), )
if mibBuilder.loadTexts: cAAASvrExtSvrGrpConfigTable.setStatus('current')
cAAASvrExtSvrGrpConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-AAA-SERVER-EXT-MIB", "cAAASvrGrpIndex"))
if mibBuilder.loadTexts: cAAASvrExtSvrGrpConfigEntry.setStatus('current')
cAAASvrGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: cAAASvrGrpIndex.setStatus('current')
cAAASvrGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 4, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAAASvrGrpName.setStatus('current')
cAAASvrGrpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 4, 1, 1, 3), CiscoAAAProtocol().clone('tacacsplus')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAAASvrGrpProtocol.setStatus('current')
cAAAServerList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 4, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAAAServerList.setStatus('current')
cAAASvrGrpConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 4, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAAASvrGrpConfigRowStatus.setStatus('current')
cAAASvrGrpConfigDeadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 4, 1, 1, 6), TimeIntervalMin().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAAASvrGrpConfigDeadTime.setStatus('current')
cAAASvrExtSvrGrpLDAPConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 4, 2), )
if mibBuilder.loadTexts: cAAASvrExtSvrGrpLDAPConfigTable.setStatus('current')
cAAASvrExtSvrGrpLDAPConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 4, 2, 1), ).setIndexNames((0, "CISCO-AAA-SERVER-EXT-MIB", "cAAASvrGrpIndex"))
if mibBuilder.loadTexts: cAAASvrExtSvrGrpLDAPConfigEntry.setStatus('current')
cAAASvrGrpLDAPBaseDN = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 4, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAAASvrGrpLDAPBaseDN.setStatus('current')
cAAASvrGrpLDAPFilterUser = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 4, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAAASvrGrpLDAPFilterUser.setStatus('current')
cAAASvrGrpLDAPUserProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 4, 2, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cAAASvrGrpLDAPUserProfile.setStatus('current')
cAAASvrExtAppSvrGrpConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 5, 1), )
if mibBuilder.loadTexts: cAAASvrExtAppSvrGrpConfigTable.setStatus('current')
cAAASvrExtAppSvrGrpConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-AAA-SERVER-EXT-MIB", "cAAAApplicationType"), (0, "CISCO-AAA-SERVER-EXT-MIB", "cAAAApplicationSubType"), (0, "CISCO-AAA-SERVER-EXT-MIB", "cAAAFunction"))
if mibBuilder.loadTexts: cAAASvrExtAppSvrGrpConfigEntry.setStatus('current')
cAAAApplicationType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("default", 1), ("login", 2), ("dhchap", 3), ("iSCSI", 4))))
if mibBuilder.loadTexts: cAAAApplicationType.setStatus('current')
cAAAApplicationSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("all", 1), ("console", 2))))
if mibBuilder.loadTexts: cAAAApplicationSubType.setStatus('current')
cAAAFunction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("authentication", 1), ("authorization", 2), ("accounting", 3))))
if mibBuilder.loadTexts: cAAAFunction.setStatus('current')
cAAASvrGrpLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 5, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cAAASvrGrpLocal.setStatus('current')
cAAASvrGrpTrivial = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 5, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cAAASvrGrpTrivial.setStatus('current')
cAAASvrGrpList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 367, 1, 5, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cAAASvrGrpList.setStatus('current')
ciscoAAASvrExtMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 367, 2, 1))
ciscoAAASvrExtMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 367, 2, 2))
ciscoAAAServerMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 367, 2, 1, 1)).setObjects(("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtGenericConfGroup"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtSvrTableConfGroup"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtProtoParamConfigGroup"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtSvrGroupConfGroup"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtAppSvrGroupConfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAAAServerMIBCompliance = ciscoAAAServerMIBCompliance.setStatus('deprecated')
ciscoAAAServerMIBCompliance1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 367, 2, 1, 2)).setObjects(("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtGenericConfGroup1"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtSvrTableConfGroup"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtProtoParamConfigGroup"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtSvrGroupConfGroup"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtAppSvrGroupConfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAAAServerMIBCompliance1 = ciscoAAAServerMIBCompliance1.setStatus('deprecated')
ciscoAAAServerMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 367, 2, 1, 3)).setObjects(("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtGenericConfGroup1"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtSvrTableConfGroup"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtProtoParamConfigGroup1"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtSvrGroupConfGroup2"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtAppSvrGroupConfGroup"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtSvrTableLDAPConfGroup"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtSvrGroupLDAPConfGroup"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtSvrMonitorConfGroup"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtGenericConfGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoAAAServerMIBCompliance2 = ciscoAAAServerMIBCompliance2.setStatus('current')
cAAASvrExtGenericConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 367, 2, 2, 1)).setObjects(("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtLocalAccLogMaxSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAAASvrExtGenericConfGroup = cAAASvrExtGenericConfGroup.setStatus('deprecated')
cAAASvrExtSvrTableConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 367, 2, 2, 2)).setObjects(("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerAddrType"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerAddr"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerKeyEncrType"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerDeadTime"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerTimeOut"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerRetransmits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAAASvrExtSvrTableConfGroup = cAAASvrExtSvrTableConfGroup.setStatus('current')
cAAASvrExtProtoParamConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 367, 2, 2, 3)).setObjects(("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerProtoAuthKey"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerProtoKeyEncrType"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerProtoDeadTime"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerProtoTimeOut"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerProtoRetransmits"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerProtoSvrTableMaxEnt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAAASvrExtProtoParamConfigGroup = cAAASvrExtProtoParamConfigGroup.setStatus('deprecated')
cAAASvrExtSvrGroupConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 367, 2, 2, 4)).setObjects(("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrGrpName"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrGrpProtocol"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerList"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrGrpConfigRowStatus"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtSvrGrpSvrListMaxEnt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAAASvrExtSvrGroupConfGroup = cAAASvrExtSvrGroupConfGroup.setStatus('deprecated')
cAAASvrExtAppSvrGroupConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 367, 2, 2, 5)).setObjects(("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrGrpLocal"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrGrpTrivial"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrGrpList"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtAppToSvrGrpMaxEnt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAAASvrExtAppSvrGroupConfGroup = cAAASvrExtAppSvrGroupConfGroup.setStatus('current')
cAAASvrExtGenericConfGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 367, 2, 2, 6)).setObjects(("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtLocalAccLogMaxSize"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtClearAccLog"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAAASvrExtGenericConfGroup1 = cAAASvrExtGenericConfGroup1.setStatus('current')
cAAASvrExtGenericConfGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 367, 2, 2, 7)).setObjects(("CISCO-AAA-SERVER-EXT-MIB", "cAAALoginAuthTypeMSCHAP"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAAASvrExtGenericConfGroup2 = cAAASvrExtGenericConfGroup2.setStatus('current')
cAAASvrExtSvrGroupConfGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 367, 2, 2, 8)).setObjects(("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrGrpName"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrGrpProtocol"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerList"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrGrpConfigRowStatus"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrExtSvrGrpSvrListMaxEnt"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrGrpConfigDeadTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAAASvrExtSvrGroupConfGroup2 = cAAASvrExtSvrGroupConfGroup2.setStatus('current')
cAAASvrExtProtoParamConfigGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 367, 2, 2, 9)).setObjects(("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerProtoAuthKey"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerProtoKeyEncrType"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerProtoDeadTime"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerProtoTimeOut"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerProtoRetransmits"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerProtoSvrTableMaxEnt"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerProtoDirectedReq"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAAASvrExtProtoParamConfigGroup1 = cAAASvrExtProtoParamConfigGroup1.setStatus('current')
cAAASvrExtSvrTableLDAPConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 367, 2, 2, 10)).setObjects(("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerRootDN"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAAASvrExtSvrTableLDAPConfGroup = cAAASvrExtSvrTableLDAPConfGroup.setStatus('current')
cAAASvrExtSvrGroupLDAPConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 367, 2, 2, 11)).setObjects(("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrGrpLDAPBaseDN"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrGrpLDAPFilterUser"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAASvrGrpLDAPUserProfile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAAASvrExtSvrGroupLDAPConfGroup = cAAASvrExtSvrGroupLDAPConfGroup.setStatus('current')
cAAASvrExtSvrMonitorConfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 367, 2, 2, 12)).setObjects(("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerIdleTime"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerTestUser"), ("CISCO-AAA-SERVER-EXT-MIB", "cAAAServerTestPassword"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cAAASvrExtSvrMonitorConfGroup = cAAASvrExtSvrMonitorConfGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-AAA-SERVER-EXT-MIB", cAAAServerTestPassword=cAAAServerTestPassword, cAAAServerTestUser=cAAAServerTestUser, CiscoAAAServerKeyEncrType=CiscoAAAServerKeyEncrType, cAAAServerProtoAuthKey=cAAAServerProtoAuthKey, cAAASvrExtSvrTableConfig=cAAASvrExtSvrTableConfig, cAAAServerRetransmits=cAAAServerRetransmits, ciscoAAASvrExtMIBCompliances=ciscoAAASvrExtMIBCompliances, cAAASvrExtSvrMonitorConfGroup=cAAASvrExtSvrMonitorConfGroup, ciscoAAAServerMIBCompliance2=ciscoAAAServerMIBCompliance2, cAAASvrGrpLDAPFilterUser=cAAASvrGrpLDAPFilterUser, cAAASvrExtConfigTable=cAAASvrExtConfigTable, cAAASvrGrpTrivial=cAAASvrGrpTrivial, cAAASvrExtAppSvrGrpConfigEntry=cAAASvrExtAppSvrGrpConfigEntry, cAAASvrGrpLocal=cAAASvrGrpLocal, cAAASvrExtAppToSvrGrpMaxEnt=cAAASvrExtAppToSvrGrpMaxEnt, cAAAServerProtoRetransmits=cAAAServerProtoRetransmits, cAAASvrExtSvrTableConfGroup=cAAASvrExtSvrTableConfGroup, cAAAApplicationType=cAAAApplicationType, cAAASvrExtLocalAccLogMaxSize=cAAASvrExtLocalAccLogMaxSize, cAAASvrExtClearAccLog=cAAASvrExtClearAccLog, cAAAServerAddrType=cAAAServerAddrType, cAAAServerDeadTime=cAAAServerDeadTime, cAAASvrExtProtoParamConfigGroup=cAAASvrExtProtoParamConfigGroup, cAAAServerRootDN=cAAAServerRootDN, cAAASvrGrpLDAPUserProfile=cAAASvrGrpLDAPUserProfile, cAAASvrExtSvrGrpConfigTable=cAAASvrExtSvrGrpConfigTable, cAAASvrExtSvrGroupLDAPConfGroup=cAAASvrExtSvrGroupLDAPConfGroup, cAAASvrExtSvrGrpLDAPConfigTable=cAAASvrExtSvrGrpLDAPConfigTable, cAAAServerKeyEncrType=cAAAServerKeyEncrType, cAAAServerProtoSvrTableMaxEnt=cAAAServerProtoSvrTableMaxEnt, cAAASvrGrpLDAPBaseDN=cAAASvrGrpLDAPBaseDN, cAAAServerProtoDeadTime=cAAAServerProtoDeadTime, cAAASvrExtGenericConfGroup=cAAASvrExtGenericConfGroup, cAAASvrExtSvrTableLDAPConfGroup=cAAASvrExtSvrTableLDAPConfGroup, cAAAServerProtoKeyEncrType=cAAAServerProtoKeyEncrType, cAAASvrGrpConfigRowStatus=cAAASvrGrpConfigRowStatus, ciscoAAASvrExtMIBObjects=ciscoAAASvrExtMIBObjects, cAAAServerProtoTimeOut=cAAAServerProtoTimeOut, cAAAServerList=cAAAServerList, cAAASvrExtSvrGroupConfGroup=cAAASvrExtSvrGroupConfGroup, cAAASvrExtSvrGrpLDAPConfigEntry=cAAASvrExtSvrGrpLDAPConfigEntry, cAAASvrExtSvrGroupConfGroup2=cAAASvrExtSvrGroupConfGroup2, cAAASvrExtSvrGrpSvrListMaxEnt=cAAASvrExtSvrGrpSvrListMaxEnt, cAAASvrExtAppSvrGroupConfGroup=cAAASvrExtAppSvrGroupConfGroup, cAAALoginAuthTypeMSCHAP=cAAALoginAuthTypeMSCHAP, cAAASvrGrpConfigDeadTime=cAAASvrGrpConfigDeadTime, cAAASvrExtSvrGrpConfigEntry=cAAASvrExtSvrGrpConfigEntry, ciscoAAASvrExtMIBConformance=ciscoAAASvrExtMIBConformance, cAAAServerProtoDirectedReq=cAAAServerProtoDirectedReq, cAAASvrExtProtoParamConfig=cAAASvrExtProtoParamConfig, cAAASvrGrpName=cAAASvrGrpName, cAAASvrGrpIndex=cAAASvrGrpIndex, cAAASvrExtProtocolParamEntry=cAAASvrExtProtocolParamEntry, cAAASvrExtProtocolParamTable=cAAASvrExtProtocolParamTable, cAAASvrGrpProtocol=cAAASvrGrpProtocol, cAAAFunction=cAAAFunction, ciscoAAAServerMIBCompliance1=ciscoAAAServerMIBCompliance1, cAAASvrExtProtoParamConfigGroup1=cAAASvrExtProtoParamConfigGroup1, cAAAServerIdleTime=cAAAServerIdleTime, cAAASvrExtGenericConfGroup2=cAAASvrExtGenericConfGroup2, cAAASvrExtGenericConfig=cAAASvrExtGenericConfig, cAAASvrExtAppSvrGrpConfigTable=cAAASvrExtAppSvrGrpConfigTable, cAAASvrGrpList=cAAASvrGrpList, cAAAServerProtocol=cAAAServerProtocol, cAAASvrExtAppSvrGrpMapConfig=cAAASvrExtAppSvrGrpMapConfig, cAAASvrExtSvrGrpConfig=cAAASvrExtSvrGrpConfig, ciscoAAAServerMIBCompliance=ciscoAAAServerMIBCompliance, cAAAServerAddr=cAAAServerAddr, cAAASvrExtGenericConfGroup1=cAAASvrExtGenericConfGroup1, cAAASvrExtConfigEntry=cAAASvrExtConfigEntry, cAAAServerTimeOut=cAAAServerTimeOut, ciscoAAAServerExtMIB=ciscoAAAServerExtMIB, PYSNMP_MODULE_ID=ciscoAAAServerExtMIB, ciscoAAASvrExtMIBGroups=ciscoAAASvrExtMIBGroups, cAAAApplicationSubType=cAAAApplicationSubType)
