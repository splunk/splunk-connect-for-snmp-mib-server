#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-AtmIispMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-AtmIispMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:19:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
mscAtmIfIndex, mscAtmIfVptIndex, mscAtmIf, mscAtmIfVpt = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex", "mscAtmIfVptIndex", "mscAtmIf", "mscAtmIfVpt")
Integer32, Counter32, DisplayString, Gauge32, Unsigned32, StorageType, RowStatus = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Integer32", "Counter32", "DisplayString", "Gauge32", "Unsigned32", "StorageType", "RowStatus")
HexString, Hex, AsciiStringIndex, NonReplicated = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "HexString", "Hex", "AsciiStringIndex", "NonReplicated")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, ObjectIdentity, ModuleIdentity, Bits, Counter32, IpAddress, Gauge32, NotificationType, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ObjectIdentity", "ModuleIdentity", "Bits", "Counter32", "IpAddress", "Gauge32", "NotificationType", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "Counter64", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
atmIispMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 70))
mscAtmIfIisp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7))
mscAtmIfIispRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 1), )
if mibBuilder.loadTexts: mscAtmIfIispRowStatusTable.setStatus('mandatory')
mscAtmIfIispRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"))
if mibBuilder.loadTexts: mscAtmIfIispRowStatusEntry.setStatus('mandatory')
mscAtmIfIispRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispRowStatus.setStatus('mandatory')
mscAtmIfIispComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispComponentName.setStatus('mandatory')
mscAtmIfIispStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispStorageType.setStatus('mandatory')
mscAtmIfIispIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfIispIndex.setStatus('mandatory')
mscAtmIfIispProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 10), )
if mibBuilder.loadTexts: mscAtmIfIispProvTable.setStatus('mandatory')
mscAtmIfIispProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"))
if mibBuilder.loadTexts: mscAtmIfIispProvEntry.setStatus('mandatory')
mscAtmIfIispVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("iisp10Sig30", 2), ("iisp10Sig31", 3))).clone('iisp10Sig31')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispVersion.setStatus('mandatory')
mscAtmIfIispSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("networkSide", 0), ("userSide", 1))).clone('networkSide')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispSide.setStatus('mandatory')
mscAtmIfIispSoftPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispSoftPvcRetryPeriod.setStatus('obsolete')
mscAtmIfIispSoftPvpAndPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispSoftPvpAndPvcRetryPeriod.setStatus('mandatory')
mscAtmIfIispSoftPvpAndPvcHoldOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(50, 20000), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispSoftPvpAndPvcHoldOffTime.setStatus('mandatory')
mscAtmIfIispAcctOptTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 11), )
if mibBuilder.loadTexts: mscAtmIfIispAcctOptTable.setStatus('mandatory')
mscAtmIfIispAcctOptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"))
if mibBuilder.loadTexts: mscAtmIfIispAcctOptEntry.setStatus('mandatory')
mscAtmIfIispAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 11, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispAccountCollection.setStatus('mandatory')
mscAtmIfIispAccountConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("origTerm", 0), ("intermediate", 1))).clone('intermediate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispAccountConnectionType.setStatus('mandatory')
mscAtmIfIispAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispAccountClass.setStatus('mandatory')
mscAtmIfIispServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispServiceExchange.setStatus('mandatory')
mscAtmIfIispSig = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3))
mscAtmIfIispSigRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 1), )
if mibBuilder.loadTexts: mscAtmIfIispSigRowStatusTable.setStatus('mandatory')
mscAtmIfIispSigRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispSigIndex"))
if mibBuilder.loadTexts: mscAtmIfIispSigRowStatusEntry.setStatus('mandatory')
mscAtmIfIispSigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigRowStatus.setStatus('mandatory')
mscAtmIfIispSigComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigComponentName.setStatus('mandatory')
mscAtmIfIispSigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigStorageType.setStatus('mandatory')
mscAtmIfIispSigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfIispSigIndex.setStatus('mandatory')
mscAtmIfIispSigProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 10), )
if mibBuilder.loadTexts: mscAtmIfIispSigProvTable.setStatus('mandatory')
mscAtmIfIispSigProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispSigIndex"))
if mibBuilder.loadTexts: mscAtmIfIispSigProvEntry.setStatus('mandatory')
mscAtmIfIispSigVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispSigVci.setStatus('mandatory')
mscAtmIfIispSigAddressConversion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("nativeE164", 1), ("nsap", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispSigAddressConversion.setStatus('mandatory')
mscAtmIfIispSigOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("provisionedOnly", 1))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispSigOperatingMode.setStatus('mandatory')
mscAtmIfIispSigStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 11), )
if mibBuilder.loadTexts: mscAtmIfIispSigStateTable.setStatus('mandatory')
mscAtmIfIispSigStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispSigIndex"))
if mibBuilder.loadTexts: mscAtmIfIispSigStateEntry.setStatus('mandatory')
mscAtmIfIispSigAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigAdminState.setStatus('mandatory')
mscAtmIfIispSigOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigOperationalState.setStatus('mandatory')
mscAtmIfIispSigUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigUsageState.setStatus('mandatory')
mscAtmIfIispSigOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 12), )
if mibBuilder.loadTexts: mscAtmIfIispSigOperTable.setStatus('mandatory')
mscAtmIfIispSigOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispSigIndex"))
if mibBuilder.loadTexts: mscAtmIfIispSigOperEntry.setStatus('mandatory')
mscAtmIfIispSigLastTxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigLastTxCauseCode.setStatus('mandatory')
mscAtmIfIispSigLastTxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 12, 1, 2), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigLastTxDiagCode.setStatus('mandatory')
mscAtmIfIispSigLastRxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigLastRxCauseCode.setStatus('mandatory')
mscAtmIfIispSigLastRxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 12, 1, 4), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigLastRxDiagCode.setStatus('mandatory')
mscAtmIfIispSigStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 13), )
if mibBuilder.loadTexts: mscAtmIfIispSigStatsTable.setStatus('mandatory')
mscAtmIfIispSigStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispSigIndex"))
if mibBuilder.loadTexts: mscAtmIfIispSigStatsEntry.setStatus('mandatory')
mscAtmIfIispSigCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigCurrentConnections.setStatus('obsolete')
mscAtmIfIispSigPeakConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 13, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigPeakConnections.setStatus('mandatory')
mscAtmIfIispSigSuccessfulConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigSuccessfulConnections.setStatus('mandatory')
mscAtmIfIispSigFailedConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigFailedConnections.setStatus('mandatory')
mscAtmIfIispSigTxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigTxPdus.setStatus('mandatory')
mscAtmIfIispSigRxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigRxPdus.setStatus('mandatory')
mscAtmIfIispSigCurrentPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 13, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigCurrentPmpConnections.setStatus('mandatory')
mscAtmIfIispSigPeakPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 13, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigPeakPmpConnections.setStatus('mandatory')
mscAtmIfIispSigSuccessfulPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigSuccessfulPmpConnections.setStatus('mandatory')
mscAtmIfIispSigFailedPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigFailedPmpConnections.setStatus('mandatory')
mscAtmIfIispSigNewCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 13, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigNewCurrentConnections.setStatus('mandatory')
mscAtmIfIispSigVcd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2))
mscAtmIfIispSigVcdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfIispSigVcdRowStatusTable.setStatus('mandatory')
mscAtmIfIispSigVcdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispSigIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispSigVcdIndex"))
if mibBuilder.loadTexts: mscAtmIfIispSigVcdRowStatusEntry.setStatus('mandatory')
mscAtmIfIispSigVcdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispSigVcdRowStatus.setStatus('mandatory')
mscAtmIfIispSigVcdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigVcdComponentName.setStatus('mandatory')
mscAtmIfIispSigVcdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispSigVcdStorageType.setStatus('mandatory')
mscAtmIfIispSigVcdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfIispSigVcdIndex.setStatus('mandatory')
mscAtmIfIispSigVcdProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 10), )
if mibBuilder.loadTexts: mscAtmIfIispSigVcdProvTable.setStatus('mandatory')
mscAtmIfIispSigVcdProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispSigIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispSigVcdIndex"))
if mibBuilder.loadTexts: mscAtmIfIispSigVcdProvEntry.setStatus('mandatory')
mscAtmIfIispSigVcdTrafficDescType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 6, 7, 8))).clone(namedValues=NamedValues(("n3", 3), ("n6", 6), ("n7", 7), ("n8", 8))).clone('n6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispSigVcdTrafficDescType.setStatus('mandatory')
mscAtmIfIispSigVcdAtmServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unspecifiedBitRate", 0), ("constantBitRate", 1), ("rtVariableBitRate", 2), ("nrtVariableBitRate", 3))).clone('rtVariableBitRate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispSigVcdAtmServiceCategory.setStatus('mandatory')
mscAtmIfIispSigVcdWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ValueRangeConstraint(65535, 65535), )).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispSigVcdWeight.setStatus('mandatory')
mscAtmIfIispSigVcdQosClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4))).clone('n2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispSigVcdQosClass.setStatus('mandatory')
mscAtmIfIispSigVcdTrafficShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 10, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispSigVcdTrafficShaping.setStatus('mandatory')
mscAtmIfIispSigVcdUnshapedTransmitQueueing = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 10, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("common", 1), ("sameAsCa", 3))).clone('sameAsCa')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispSigVcdUnshapedTransmitQueueing.setStatus('mandatory')
mscAtmIfIispSigVcdUsageParameterControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 10, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispSigVcdUsageParameterControl.setStatus('mandatory')
mscAtmIfIispSigVcdTdpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 387), )
if mibBuilder.loadTexts: mscAtmIfIispSigVcdTdpTable.setStatus('mandatory')
mscAtmIfIispSigVcdTdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 387, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispSigIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispSigVcdIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispSigVcdTdpIndex"))
if mibBuilder.loadTexts: mscAtmIfIispSigVcdTdpEntry.setStatus('mandatory')
mscAtmIfIispSigVcdTdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 387, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: mscAtmIfIispSigVcdTdpIndex.setStatus('mandatory')
mscAtmIfIispSigVcdTdpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 3, 2, 387, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispSigVcdTdpValue.setStatus('mandatory')
mscAtmIfIispAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4))
mscAtmIfIispAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 1), )
if mibBuilder.loadTexts: mscAtmIfIispAddrRowStatusTable.setStatus('mandatory')
mscAtmIfIispAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispAddrAddressTypeIndex"))
if mibBuilder.loadTexts: mscAtmIfIispAddrRowStatusEntry.setStatus('mandatory')
mscAtmIfIispAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispAddrRowStatus.setStatus('mandatory')
mscAtmIfIispAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispAddrComponentName.setStatus('mandatory')
mscAtmIfIispAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispAddrStorageType.setStatus('mandatory')
mscAtmIfIispAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: mscAtmIfIispAddrAddressIndex.setStatus('mandatory')
mscAtmIfIispAddrAddressTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("primary", 0), ("alternate", 1), ("default", 3))))
if mibBuilder.loadTexts: mscAtmIfIispAddrAddressTypeIndex.setStatus('mandatory')
mscAtmIfIispAddrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 10), )
if mibBuilder.loadTexts: mscAtmIfIispAddrOperTable.setStatus('mandatory')
mscAtmIfIispAddrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispAddrAddressTypeIndex"))
if mibBuilder.loadTexts: mscAtmIfIispAddrOperEntry.setStatus('mandatory')
mscAtmIfIispAddrScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispAddrScope.setStatus('mandatory')
mscAtmIfIispAddrReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispAddrReachability.setStatus('mandatory')
mscAtmIfIispAddrTermSP = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 2))
mscAtmIfIispAddrTermSPRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfIispAddrTermSPRowStatusTable.setStatus('mandatory')
mscAtmIfIispAddrTermSPRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispAddrAddressTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispAddrTermSPIndex"))
if mibBuilder.loadTexts: mscAtmIfIispAddrTermSPRowStatusEntry.setStatus('mandatory')
mscAtmIfIispAddrTermSPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispAddrTermSPRowStatus.setStatus('mandatory')
mscAtmIfIispAddrTermSPComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispAddrTermSPComponentName.setStatus('mandatory')
mscAtmIfIispAddrTermSPStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispAddrTermSPStorageType.setStatus('mandatory')
mscAtmIfIispAddrTermSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfIispAddrTermSPIndex.setStatus('mandatory')
mscAtmIfIispAddrPnniInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 3))
mscAtmIfIispAddrPnniInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 3, 1), )
if mibBuilder.loadTexts: mscAtmIfIispAddrPnniInfoRowStatusTable.setStatus('mandatory')
mscAtmIfIispAddrPnniInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispAddrAddressTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispAddrPnniInfoIndex"))
if mibBuilder.loadTexts: mscAtmIfIispAddrPnniInfoRowStatusEntry.setStatus('mandatory')
mscAtmIfIispAddrPnniInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispAddrPnniInfoRowStatus.setStatus('mandatory')
mscAtmIfIispAddrPnniInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispAddrPnniInfoComponentName.setStatus('mandatory')
mscAtmIfIispAddrPnniInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispAddrPnniInfoStorageType.setStatus('mandatory')
mscAtmIfIispAddrPnniInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfIispAddrPnniInfoIndex.setStatus('mandatory')
mscAtmIfIispAddrPnniInfoProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 3, 10), )
if mibBuilder.loadTexts: mscAtmIfIispAddrPnniInfoProvTable.setStatus('mandatory')
mscAtmIfIispAddrPnniInfoProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispAddrAddressTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispAddrPnniInfoIndex"))
if mibBuilder.loadTexts: mscAtmIfIispAddrPnniInfoProvEntry.setStatus('mandatory')
mscAtmIfIispAddrPnniInfoScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispAddrPnniInfoScope.setStatus('mandatory')
mscAtmIfIispAddrPnniInfoReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 4, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispAddrPnniInfoReachability.setStatus('mandatory')
mscAtmIfIispCallingAScr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5))
mscAtmIfIispCallingAScrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 1), )
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrRowStatusTable.setStatus('mandatory')
mscAtmIfIispCallingAScrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispCallingAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrRowStatusEntry.setStatus('mandatory')
mscAtmIfIispCallingAScrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrRowStatus.setStatus('mandatory')
mscAtmIfIispCallingAScrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrComponentName.setStatus('mandatory')
mscAtmIfIispCallingAScrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrStorageType.setStatus('mandatory')
mscAtmIfIispCallingAScrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrIndex.setStatus('mandatory')
mscAtmIfIispCallingAScrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 10), )
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrProvTable.setStatus('mandatory')
mscAtmIfIispCallingAScrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispCallingAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrProvEntry.setStatus('mandatory')
mscAtmIfIispCallingAScrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrAdminStatus.setStatus('mandatory')
mscAtmIfIispCallingAScrDefaultInsertionAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 10, 1, 2), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrDefaultInsertionAddress.setStatus('mandatory')
mscAtmIfIispCallingAScrStatTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 11), )
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrStatTable.setStatus('mandatory')
mscAtmIfIispCallingAScrStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispCallingAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrStatEntry.setStatus('mandatory')
mscAtmIfIispCallingAScrAcceptedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrAcceptedCalls.setStatus('mandatory')
mscAtmIfIispCallingAScrRejectedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrRejectedCalls.setStatus('mandatory')
mscAtmIfIispCallingAScrUnmatchedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrUnmatchedCalls.setStatus('mandatory')
mscAtmIfIispCallingAScrAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 2))
mscAtmIfIispCallingAScrAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrAddrRowStatusTable.setStatus('mandatory')
mscAtmIfIispCallingAScrAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispCallingAScrIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispCallingAScrAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispCallingAScrAddrAddressActionIndex"))
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrAddrRowStatusEntry.setStatus('mandatory')
mscAtmIfIispCallingAScrAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrAddrRowStatus.setStatus('mandatory')
mscAtmIfIispCallingAScrAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrAddrComponentName.setStatus('mandatory')
mscAtmIfIispCallingAScrAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrAddrStorageType.setStatus('mandatory')
mscAtmIfIispCallingAScrAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 2, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrAddrAddressIndex.setStatus('mandatory')
mscAtmIfIispCallingAScrAddrAddressActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 5, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("accept", 0), ("reject", 1))))
if mibBuilder.loadTexts: mscAtmIfIispCallingAScrAddrAddressActionIndex.setStatus('mandatory')
mscAtmIfIispCalledAScr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6))
mscAtmIfIispCalledAScrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 1), )
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrRowStatusTable.setStatus('mandatory')
mscAtmIfIispCalledAScrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispCalledAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrRowStatusEntry.setStatus('mandatory')
mscAtmIfIispCalledAScrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrRowStatus.setStatus('mandatory')
mscAtmIfIispCalledAScrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrComponentName.setStatus('mandatory')
mscAtmIfIispCalledAScrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrStorageType.setStatus('mandatory')
mscAtmIfIispCalledAScrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrIndex.setStatus('mandatory')
mscAtmIfIispCalledAScrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 10), )
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrProvTable.setStatus('mandatory')
mscAtmIfIispCalledAScrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispCalledAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrProvEntry.setStatus('mandatory')
mscAtmIfIispCalledAScrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrAdminStatus.setStatus('mandatory')
mscAtmIfIispCalledAScrStatTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 11), )
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrStatTable.setStatus('mandatory')
mscAtmIfIispCalledAScrStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispCalledAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrStatEntry.setStatus('mandatory')
mscAtmIfIispCalledAScrAcceptedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrAcceptedCalls.setStatus('mandatory')
mscAtmIfIispCalledAScrRejectedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrRejectedCalls.setStatus('mandatory')
mscAtmIfIispCalledAScrUnmatchedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrUnmatchedCalls.setStatus('mandatory')
mscAtmIfIispCalledAScrAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 2))
mscAtmIfIispCalledAScrAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrAddrRowStatusTable.setStatus('mandatory')
mscAtmIfIispCalledAScrAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispCalledAScrIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispCalledAScrAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfIispCalledAScrAddrAddressActionIndex"))
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrAddrRowStatusEntry.setStatus('mandatory')
mscAtmIfIispCalledAScrAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrAddrRowStatus.setStatus('mandatory')
mscAtmIfIispCalledAScrAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrAddrComponentName.setStatus('mandatory')
mscAtmIfIispCalledAScrAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrAddrStorageType.setStatus('mandatory')
mscAtmIfIispCalledAScrAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 2, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrAddrAddressIndex.setStatus('mandatory')
mscAtmIfIispCalledAScrAddrAddressActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 7, 6, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("accept", 0), ("reject", 1))))
if mibBuilder.loadTexts: mscAtmIfIispCalledAScrAddrAddressActionIndex.setStatus('mandatory')
mscAtmIfVptIisp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6))
mscAtmIfVptIispRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 1), )
if mibBuilder.loadTexts: mscAtmIfVptIispRowStatusTable.setStatus('mandatory')
mscAtmIfVptIispRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispRowStatusEntry.setStatus('mandatory')
mscAtmIfVptIispRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispRowStatus.setStatus('mandatory')
mscAtmIfVptIispComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispComponentName.setStatus('mandatory')
mscAtmIfVptIispStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispStorageType.setStatus('mandatory')
mscAtmIfVptIispIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptIispIndex.setStatus('mandatory')
mscAtmIfVptIispProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 10), )
if mibBuilder.loadTexts: mscAtmIfVptIispProvTable.setStatus('mandatory')
mscAtmIfVptIispProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispProvEntry.setStatus('mandatory')
mscAtmIfVptIispVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("iisp10Sig30", 2), ("iisp10Sig31", 3))).clone('iisp10Sig31')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispVersion.setStatus('mandatory')
mscAtmIfVptIispSide = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("networkSide", 0), ("userSide", 1))).clone('networkSide')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispSide.setStatus('mandatory')
mscAtmIfVptIispSoftPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispSoftPvcRetryPeriod.setStatus('obsolete')
mscAtmIfVptIispSoftPvpAndPvcRetryPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(20, 999999)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispSoftPvpAndPvcRetryPeriod.setStatus('mandatory')
mscAtmIfVptIispSoftPvpAndPvcHoldOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(50, 20000), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispSoftPvpAndPvcHoldOffTime.setStatus('mandatory')
mscAtmIfVptIispAcctOptTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 11), )
if mibBuilder.loadTexts: mscAtmIfVptIispAcctOptTable.setStatus('mandatory')
mscAtmIfVptIispAcctOptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispAcctOptEntry.setStatus('mandatory')
mscAtmIfVptIispAccountCollection = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 11, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispAccountCollection.setStatus('mandatory')
mscAtmIfVptIispAccountConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("origTerm", 0), ("intermediate", 1))).clone('intermediate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispAccountConnectionType.setStatus('mandatory')
mscAtmIfVptIispAccountClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispAccountClass.setStatus('mandatory')
mscAtmIfVptIispServiceExchange = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispServiceExchange.setStatus('mandatory')
mscAtmIfVptIispVProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 12), )
if mibBuilder.loadTexts: mscAtmIfVptIispVProvTable.setStatus('mandatory')
mscAtmIfVptIispVProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispVProvEntry.setStatus('mandatory')
mscAtmIfVptIispVpci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispVpci.setStatus('mandatory')
mscAtmIfVptIispSig = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3))
mscAtmIfVptIispSigRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 1), )
if mibBuilder.loadTexts: mscAtmIfVptIispSigRowStatusTable.setStatus('mandatory')
mscAtmIfVptIispSigRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispSigIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispSigRowStatusEntry.setStatus('mandatory')
mscAtmIfVptIispSigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigRowStatus.setStatus('mandatory')
mscAtmIfVptIispSigComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigComponentName.setStatus('mandatory')
mscAtmIfVptIispSigStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigStorageType.setStatus('mandatory')
mscAtmIfVptIispSigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptIispSigIndex.setStatus('mandatory')
mscAtmIfVptIispSigProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 10), )
if mibBuilder.loadTexts: mscAtmIfVptIispSigProvTable.setStatus('mandatory')
mscAtmIfVptIispSigProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispSigIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispSigProvEntry.setStatus('mandatory')
mscAtmIfVptIispSigVci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispSigVci.setStatus('mandatory')
mscAtmIfVptIispSigAddressConversion = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("nativeE164", 1), ("nsap", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispSigAddressConversion.setStatus('mandatory')
mscAtmIfVptIispSigOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("provisionedOnly", 1))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispSigOperatingMode.setStatus('mandatory')
mscAtmIfVptIispSigStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 11), )
if mibBuilder.loadTexts: mscAtmIfVptIispSigStateTable.setStatus('mandatory')
mscAtmIfVptIispSigStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispSigIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispSigStateEntry.setStatus('mandatory')
mscAtmIfVptIispSigAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigAdminState.setStatus('mandatory')
mscAtmIfVptIispSigOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigOperationalState.setStatus('mandatory')
mscAtmIfVptIispSigUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigUsageState.setStatus('mandatory')
mscAtmIfVptIispSigOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 12), )
if mibBuilder.loadTexts: mscAtmIfVptIispSigOperTable.setStatus('mandatory')
mscAtmIfVptIispSigOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispSigIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispSigOperEntry.setStatus('mandatory')
mscAtmIfVptIispSigLastTxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigLastTxCauseCode.setStatus('mandatory')
mscAtmIfVptIispSigLastTxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 12, 1, 2), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigLastTxDiagCode.setStatus('mandatory')
mscAtmIfVptIispSigLastRxCauseCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 12, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigLastRxCauseCode.setStatus('mandatory')
mscAtmIfVptIispSigLastRxDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 12, 1, 4), Hex().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigLastRxDiagCode.setStatus('mandatory')
mscAtmIfVptIispSigStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 13), )
if mibBuilder.loadTexts: mscAtmIfVptIispSigStatsTable.setStatus('mandatory')
mscAtmIfVptIispSigStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispSigIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispSigStatsEntry.setStatus('mandatory')
mscAtmIfVptIispSigCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigCurrentConnections.setStatus('obsolete')
mscAtmIfVptIispSigPeakConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 13, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigPeakConnections.setStatus('mandatory')
mscAtmIfVptIispSigSuccessfulConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigSuccessfulConnections.setStatus('mandatory')
mscAtmIfVptIispSigFailedConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigFailedConnections.setStatus('mandatory')
mscAtmIfVptIispSigTxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigTxPdus.setStatus('mandatory')
mscAtmIfVptIispSigRxPdus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigRxPdus.setStatus('mandatory')
mscAtmIfVptIispSigCurrentPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 13, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigCurrentPmpConnections.setStatus('mandatory')
mscAtmIfVptIispSigPeakPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 13, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigPeakPmpConnections.setStatus('mandatory')
mscAtmIfVptIispSigSuccessfulPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigSuccessfulPmpConnections.setStatus('mandatory')
mscAtmIfVptIispSigFailedPmpConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 13, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigFailedPmpConnections.setStatus('mandatory')
mscAtmIfVptIispSigNewCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 13, 1, 11), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigNewCurrentConnections.setStatus('mandatory')
mscAtmIfVptIispSigVcd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2))
mscAtmIfVptIispSigVcdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdRowStatusTable.setStatus('mandatory')
mscAtmIfVptIispSigVcdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispSigIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispSigVcdIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdRowStatusEntry.setStatus('mandatory')
mscAtmIfVptIispSigVcdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdRowStatus.setStatus('mandatory')
mscAtmIfVptIispSigVcdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdComponentName.setStatus('mandatory')
mscAtmIfVptIispSigVcdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdStorageType.setStatus('mandatory')
mscAtmIfVptIispSigVcdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdIndex.setStatus('mandatory')
mscAtmIfVptIispSigVcdProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 10), )
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdProvTable.setStatus('mandatory')
mscAtmIfVptIispSigVcdProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispSigIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispSigVcdIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdProvEntry.setStatus('mandatory')
mscAtmIfVptIispSigVcdTrafficDescType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 6, 7, 8))).clone(namedValues=NamedValues(("n3", 3), ("n6", 6), ("n7", 7), ("n8", 8))).clone('n6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdTrafficDescType.setStatus('mandatory')
mscAtmIfVptIispSigVcdAtmServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unspecifiedBitRate", 0), ("constantBitRate", 1), ("rtVariableBitRate", 2), ("nrtVariableBitRate", 3))).clone('rtVariableBitRate')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdAtmServiceCategory.setStatus('mandatory')
mscAtmIfVptIispSigVcdWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ValueRangeConstraint(65535, 65535), )).clone(65535)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdWeight.setStatus('mandatory')
mscAtmIfVptIispSigVcdQosClass = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("n0", 0), ("n1", 1), ("n2", 2), ("n3", 3), ("n4", 4))).clone('n2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdQosClass.setStatus('mandatory')
mscAtmIfVptIispSigVcdTrafficShaping = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 10, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdTrafficShaping.setStatus('mandatory')
mscAtmIfVptIispSigVcdUnshapedTransmitQueueing = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 10, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("common", 1), ("sameAsCa", 3))).clone('sameAsCa')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdUnshapedTransmitQueueing.setStatus('mandatory')
mscAtmIfVptIispSigVcdUsageParameterControl = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 10, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("sameAsCa", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdUsageParameterControl.setStatus('mandatory')
mscAtmIfVptIispSigVcdTdpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 387), )
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdTdpTable.setStatus('mandatory')
mscAtmIfVptIispSigVcdTdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 387, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispSigIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispSigVcdIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispSigVcdTdpIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdTdpEntry.setStatus('mandatory')
mscAtmIfVptIispSigVcdTdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 387, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdTdpIndex.setStatus('mandatory')
mscAtmIfVptIispSigVcdTdpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 3, 2, 387, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispSigVcdTdpValue.setStatus('mandatory')
mscAtmIfVptIispAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4))
mscAtmIfVptIispAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 1), )
if mibBuilder.loadTexts: mscAtmIfVptIispAddrRowStatusTable.setStatus('mandatory')
mscAtmIfVptIispAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispAddrAddressTypeIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispAddrRowStatusEntry.setStatus('mandatory')
mscAtmIfVptIispAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispAddrRowStatus.setStatus('mandatory')
mscAtmIfVptIispAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispAddrComponentName.setStatus('mandatory')
mscAtmIfVptIispAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispAddrStorageType.setStatus('mandatory')
mscAtmIfVptIispAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: mscAtmIfVptIispAddrAddressIndex.setStatus('mandatory')
mscAtmIfVptIispAddrAddressTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("primary", 0), ("alternate", 1), ("default", 3))))
if mibBuilder.loadTexts: mscAtmIfVptIispAddrAddressTypeIndex.setStatus('mandatory')
mscAtmIfVptIispAddrOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 10), )
if mibBuilder.loadTexts: mscAtmIfVptIispAddrOperTable.setStatus('mandatory')
mscAtmIfVptIispAddrOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispAddrAddressTypeIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispAddrOperEntry.setStatus('mandatory')
mscAtmIfVptIispAddrScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispAddrScope.setStatus('mandatory')
mscAtmIfVptIispAddrReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispAddrReachability.setStatus('mandatory')
mscAtmIfVptIispAddrTermSP = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 2))
mscAtmIfVptIispAddrTermSPRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfVptIispAddrTermSPRowStatusTable.setStatus('mandatory')
mscAtmIfVptIispAddrTermSPRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispAddrAddressTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispAddrTermSPIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispAddrTermSPRowStatusEntry.setStatus('mandatory')
mscAtmIfVptIispAddrTermSPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispAddrTermSPRowStatus.setStatus('mandatory')
mscAtmIfVptIispAddrTermSPComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispAddrTermSPComponentName.setStatus('mandatory')
mscAtmIfVptIispAddrTermSPStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispAddrTermSPStorageType.setStatus('mandatory')
mscAtmIfVptIispAddrTermSPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptIispAddrTermSPIndex.setStatus('mandatory')
mscAtmIfVptIispAddrPnniInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 3))
mscAtmIfVptIispAddrPnniInfoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 3, 1), )
if mibBuilder.loadTexts: mscAtmIfVptIispAddrPnniInfoRowStatusTable.setStatus('mandatory')
mscAtmIfVptIispAddrPnniInfoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispAddrAddressTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispAddrPnniInfoIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispAddrPnniInfoRowStatusEntry.setStatus('mandatory')
mscAtmIfVptIispAddrPnniInfoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispAddrPnniInfoRowStatus.setStatus('mandatory')
mscAtmIfVptIispAddrPnniInfoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispAddrPnniInfoComponentName.setStatus('mandatory')
mscAtmIfVptIispAddrPnniInfoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispAddrPnniInfoStorageType.setStatus('mandatory')
mscAtmIfVptIispAddrPnniInfoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptIispAddrPnniInfoIndex.setStatus('mandatory')
mscAtmIfVptIispAddrPnniInfoProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 3, 10), )
if mibBuilder.loadTexts: mscAtmIfVptIispAddrPnniInfoProvTable.setStatus('mandatory')
mscAtmIfVptIispAddrPnniInfoProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispAddrAddressTypeIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispAddrPnniInfoIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispAddrPnniInfoProvEntry.setStatus('mandatory')
mscAtmIfVptIispAddrPnniInfoScope = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 104)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispAddrPnniInfoScope.setStatus('mandatory')
mscAtmIfVptIispAddrPnniInfoReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 4, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("exterior", 1))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispAddrPnniInfoReachability.setStatus('mandatory')
mscAtmIfVptIispCallingAScr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5))
mscAtmIfVptIispCallingAScrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 1), )
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrRowStatusTable.setStatus('mandatory')
mscAtmIfVptIispCallingAScrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispCallingAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrRowStatusEntry.setStatus('mandatory')
mscAtmIfVptIispCallingAScrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrRowStatus.setStatus('mandatory')
mscAtmIfVptIispCallingAScrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrComponentName.setStatus('mandatory')
mscAtmIfVptIispCallingAScrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrStorageType.setStatus('mandatory')
mscAtmIfVptIispCallingAScrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrIndex.setStatus('mandatory')
mscAtmIfVptIispCallingAScrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 10), )
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrProvTable.setStatus('mandatory')
mscAtmIfVptIispCallingAScrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispCallingAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrProvEntry.setStatus('mandatory')
mscAtmIfVptIispCallingAScrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrAdminStatus.setStatus('mandatory')
mscAtmIfVptIispCallingAScrDefaultInsertionAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 10, 1, 2), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrDefaultInsertionAddress.setStatus('mandatory')
mscAtmIfVptIispCallingAScrStatTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 11), )
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrStatTable.setStatus('mandatory')
mscAtmIfVptIispCallingAScrStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispCallingAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrStatEntry.setStatus('mandatory')
mscAtmIfVptIispCallingAScrAcceptedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrAcceptedCalls.setStatus('mandatory')
mscAtmIfVptIispCallingAScrRejectedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrRejectedCalls.setStatus('mandatory')
mscAtmIfVptIispCallingAScrUnmatchedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrUnmatchedCalls.setStatus('mandatory')
mscAtmIfVptIispCallingAScrAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 2))
mscAtmIfVptIispCallingAScrAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrAddrRowStatusTable.setStatus('mandatory')
mscAtmIfVptIispCallingAScrAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispCallingAScrIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispCallingAScrAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispCallingAScrAddrAddressActionIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrAddrRowStatusEntry.setStatus('mandatory')
mscAtmIfVptIispCallingAScrAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrAddrRowStatus.setStatus('mandatory')
mscAtmIfVptIispCallingAScrAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrAddrComponentName.setStatus('mandatory')
mscAtmIfVptIispCallingAScrAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrAddrStorageType.setStatus('mandatory')
mscAtmIfVptIispCallingAScrAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 2, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrAddrAddressIndex.setStatus('mandatory')
mscAtmIfVptIispCallingAScrAddrAddressActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 5, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("accept", 0), ("reject", 1))))
if mibBuilder.loadTexts: mscAtmIfVptIispCallingAScrAddrAddressActionIndex.setStatus('mandatory')
mscAtmIfVptIispCalledAScr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6))
mscAtmIfVptIispCalledAScrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 1), )
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrRowStatusTable.setStatus('mandatory')
mscAtmIfVptIispCalledAScrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispCalledAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrRowStatusEntry.setStatus('mandatory')
mscAtmIfVptIispCalledAScrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrRowStatus.setStatus('mandatory')
mscAtmIfVptIispCalledAScrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrComponentName.setStatus('mandatory')
mscAtmIfVptIispCalledAScrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrStorageType.setStatus('mandatory')
mscAtmIfVptIispCalledAScrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrIndex.setStatus('mandatory')
mscAtmIfVptIispCalledAScrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 10), )
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrProvTable.setStatus('mandatory')
mscAtmIfVptIispCalledAScrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispCalledAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrProvEntry.setStatus('mandatory')
mscAtmIfVptIispCalledAScrAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enabled", 0), ("disabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrAdminStatus.setStatus('mandatory')
mscAtmIfVptIispCalledAScrStatTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 11), )
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrStatTable.setStatus('mandatory')
mscAtmIfVptIispCalledAScrStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispCalledAScrIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrStatEntry.setStatus('mandatory')
mscAtmIfVptIispCalledAScrAcceptedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrAcceptedCalls.setStatus('mandatory')
mscAtmIfVptIispCalledAScrRejectedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrRejectedCalls.setStatus('mandatory')
mscAtmIfVptIispCalledAScrUnmatchedCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrUnmatchedCalls.setStatus('mandatory')
mscAtmIfVptIispCalledAScrAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 2))
mscAtmIfVptIispCalledAScrAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 2, 1), )
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrAddrRowStatusTable.setStatus('mandatory')
mscAtmIfVptIispCalledAScrAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmCoreMIB", "mscAtmIfVptIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispCalledAScrIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispCalledAScrAddrAddressIndex"), (0, "Nortel-MsCarrier-MscPassport-AtmIispMIB", "mscAtmIfVptIispCalledAScrAddrAddressActionIndex"))
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrAddrRowStatusEntry.setStatus('mandatory')
mscAtmIfVptIispCalledAScrAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrAddrRowStatus.setStatus('mandatory')
mscAtmIfVptIispCalledAScrAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrAddrComponentName.setStatus('mandatory')
mscAtmIfVptIispCalledAScrAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrAddrStorageType.setStatus('mandatory')
mscAtmIfVptIispCalledAScrAddrAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 2, 1, 1, 10), AsciiStringIndex().subtype(subtypeSpec=ValueSizeConstraint(1, 40)))
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrAddrAddressIndex.setStatus('mandatory')
mscAtmIfVptIispCalledAScrAddrAddressActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 114, 9, 6, 6, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("accept", 0), ("reject", 1))))
if mibBuilder.loadTexts: mscAtmIfVptIispCalledAScrAddrAddressActionIndex.setStatus('mandatory')
atmIispGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 70, 1))
atmIispGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 70, 1, 1))
atmIispGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 70, 1, 1, 3))
atmIispGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 70, 1, 1, 3, 2))
atmIispCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 70, 3))
atmIispCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 70, 3, 1))
atmIispCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 70, 3, 1, 3))
atmIispCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 70, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-AtmIispMIB", mscAtmIfIispAddrAddressIndex=mscAtmIfIispAddrAddressIndex, mscAtmIfIispSigAddressConversion=mscAtmIfIispSigAddressConversion, mscAtmIfVptIispAddrAddressIndex=mscAtmIfVptIispAddrAddressIndex, mscAtmIfVptIispCallingAScrProvEntry=mscAtmIfVptIispCallingAScrProvEntry, mscAtmIfIispSigRxPdus=mscAtmIfIispSigRxPdus, mscAtmIfVptIispSigOperEntry=mscAtmIfVptIispSigOperEntry, mscAtmIfVptIispSigUsageState=mscAtmIfVptIispSigUsageState, atmIispMIB=atmIispMIB, mscAtmIfVptIispRowStatusTable=mscAtmIfVptIispRowStatusTable, mscAtmIfVptIispSigPeakPmpConnections=mscAtmIfVptIispSigPeakPmpConnections, mscAtmIfIispSigOperEntry=mscAtmIfIispSigOperEntry, mscAtmIfIispAddrPnniInfoIndex=mscAtmIfIispAddrPnniInfoIndex, mscAtmIfVptIispSigPeakConnections=mscAtmIfVptIispSigPeakConnections, mscAtmIfVptIispAddrTermSPComponentName=mscAtmIfVptIispAddrTermSPComponentName, mscAtmIfIispRowStatus=mscAtmIfIispRowStatus, mscAtmIfVptIispSide=mscAtmIfVptIispSide, mscAtmIfVptIispAddrPnniInfoIndex=mscAtmIfVptIispAddrPnniInfoIndex, atmIispGroupCA=atmIispGroupCA, mscAtmIfVptIispSig=mscAtmIfVptIispSig, mscAtmIfIispAddrTermSPRowStatusEntry=mscAtmIfIispAddrTermSPRowStatusEntry, mscAtmIfVptIispSigVcdComponentName=mscAtmIfVptIispSigVcdComponentName, mscAtmIfIispSigStatsTable=mscAtmIfIispSigStatsTable, mscAtmIfIispSoftPvcRetryPeriod=mscAtmIfIispSoftPvcRetryPeriod, mscAtmIfIispCallingAScrAddrAddressActionIndex=mscAtmIfIispCallingAScrAddrAddressActionIndex, mscAtmIfVptIispCalledAScrAddrAddressIndex=mscAtmIfVptIispCalledAScrAddrAddressIndex, mscAtmIfIispCalledAScrAddrComponentName=mscAtmIfIispCalledAScrAddrComponentName, mscAtmIfVptIispAcctOptTable=mscAtmIfVptIispAcctOptTable, mscAtmIfVptIispCalledAScrStorageType=mscAtmIfVptIispCalledAScrStorageType, mscAtmIfVptIispCallingAScrStatTable=mscAtmIfVptIispCallingAScrStatTable, mscAtmIfVptIispAddrTermSPRowStatusTable=mscAtmIfVptIispAddrTermSPRowStatusTable, mscAtmIfVptIispCallingAScrStorageType=mscAtmIfVptIispCallingAScrStorageType, mscAtmIfVptIispVProvTable=mscAtmIfVptIispVProvTable, mscAtmIfVptIispAddrTermSPIndex=mscAtmIfVptIispAddrTermSPIndex, mscAtmIfVptIispSigSuccessfulConnections=mscAtmIfVptIispSigSuccessfulConnections, mscAtmIfIispProvEntry=mscAtmIfIispProvEntry, mscAtmIfVptIispVProvEntry=mscAtmIfVptIispVProvEntry, mscAtmIfIispAcctOptEntry=mscAtmIfIispAcctOptEntry, mscAtmIfVptIispSigProvEntry=mscAtmIfVptIispSigProvEntry, mscAtmIfVptIispCallingAScrRejectedCalls=mscAtmIfVptIispCallingAScrRejectedCalls, mscAtmIfIispAddrPnniInfoRowStatusEntry=mscAtmIfIispAddrPnniInfoRowStatusEntry, mscAtmIfIispAddrPnniInfoScope=mscAtmIfIispAddrPnniInfoScope, mscAtmIfVptIispSigVcdTrafficShaping=mscAtmIfVptIispSigVcdTrafficShaping, atmIispGroupCA02A=atmIispGroupCA02A, mscAtmIfIispSigSuccessfulPmpConnections=mscAtmIfIispSigSuccessfulPmpConnections, mscAtmIfVptIispSigComponentName=mscAtmIfVptIispSigComponentName, mscAtmIfIispCallingAScr=mscAtmIfIispCallingAScr, mscAtmIfVptIispCalledAScrAddrComponentName=mscAtmIfVptIispCalledAScrAddrComponentName, mscAtmIfIispCallingAScrAdminStatus=mscAtmIfIispCallingAScrAdminStatus, atmIispGroup=atmIispGroup, mscAtmIfIispCalledAScrAddrStorageType=mscAtmIfIispCalledAScrAddrStorageType, mscAtmIfIispSigVcdRowStatus=mscAtmIfIispSigVcdRowStatus, mscAtmIfIispStorageType=mscAtmIfIispStorageType, mscAtmIfIispCallingAScrAddrComponentName=mscAtmIfIispCallingAScrAddrComponentName, mscAtmIfVptIispIndex=mscAtmIfVptIispIndex, mscAtmIfIispCallingAScrStatEntry=mscAtmIfIispCallingAScrStatEntry, mscAtmIfIispAcctOptTable=mscAtmIfIispAcctOptTable, mscAtmIfVptIispSoftPvcRetryPeriod=mscAtmIfVptIispSoftPvcRetryPeriod, mscAtmIfVptIispCallingAScrAddr=mscAtmIfVptIispCallingAScrAddr, mscAtmIfIispCalledAScrAddrRowStatus=mscAtmIfIispCalledAScrAddrRowStatus, mscAtmIfVptIispSigAddressConversion=mscAtmIfVptIispSigAddressConversion, mscAtmIfVptIispSigVcdRowStatusEntry=mscAtmIfVptIispSigVcdRowStatusEntry, mscAtmIfVptIispSigLastTxCauseCode=mscAtmIfVptIispSigLastTxCauseCode, mscAtmIfVptIispSigStatsTable=mscAtmIfVptIispSigStatsTable, mscAtmIfVptIispCallingAScrAddrAddressIndex=mscAtmIfVptIispCallingAScrAddrAddressIndex, mscAtmIfVptIispSigRowStatusEntry=mscAtmIfVptIispSigRowStatusEntry, mscAtmIfVptIispSigVcdRowStatusTable=mscAtmIfVptIispSigVcdRowStatusTable, mscAtmIfIispCallingAScrProvEntry=mscAtmIfIispCallingAScrProvEntry, atmIispCapabilities=atmIispCapabilities, mscAtmIfVptIispSigCurrentPmpConnections=mscAtmIfVptIispSigCurrentPmpConnections, mscAtmIfIispCalledAScrRowStatusEntry=mscAtmIfIispCalledAScrRowStatusEntry, mscAtmIfIispAddrPnniInfoRowStatusTable=mscAtmIfIispAddrPnniInfoRowStatusTable, mscAtmIfVptIispAddrTermSPStorageType=mscAtmIfVptIispAddrTermSPStorageType, mscAtmIfVptIispCalledAScrAddr=mscAtmIfVptIispCalledAScrAddr, mscAtmIfIispSigStateTable=mscAtmIfIispSigStateTable, mscAtmIfVptIispCallingAScrAddrAddressActionIndex=mscAtmIfVptIispCallingAScrAddrAddressActionIndex, mscAtmIfIispSig=mscAtmIfIispSig, mscAtmIfVptIispCalledAScrAddrRowStatusEntry=mscAtmIfVptIispCalledAScrAddrRowStatusEntry, mscAtmIfVptIispCallingAScrUnmatchedCalls=mscAtmIfVptIispCallingAScrUnmatchedCalls, mscAtmIfIispSoftPvpAndPvcRetryPeriod=mscAtmIfIispSoftPvpAndPvcRetryPeriod, mscAtmIfIispSigVcdTdpTable=mscAtmIfIispSigVcdTdpTable, mscAtmIfIispAddrTermSPIndex=mscAtmIfIispAddrTermSPIndex, mscAtmIfIispSigVcdProvEntry=mscAtmIfIispSigVcdProvEntry, mscAtmIfVptIispSigVcdProvEntry=mscAtmIfVptIispSigVcdProvEntry, mscAtmIfVptIispSigAdminState=mscAtmIfVptIispSigAdminState, mscAtmIfVptIispCalledAScrRowStatusEntry=mscAtmIfVptIispCalledAScrRowStatusEntry, mscAtmIfVptIispAddrComponentName=mscAtmIfVptIispAddrComponentName, mscAtmIfIispCalledAScrAddr=mscAtmIfIispCalledAScrAddr, mscAtmIfVptIispAddrRowStatusEntry=mscAtmIfVptIispAddrRowStatusEntry, mscAtmIfVptIispSigSuccessfulPmpConnections=mscAtmIfVptIispSigSuccessfulPmpConnections, mscAtmIfVptIispCalledAScrStatEntry=mscAtmIfVptIispCalledAScrStatEntry, mscAtmIfVptIispSigLastRxCauseCode=mscAtmIfVptIispSigLastRxCauseCode, mscAtmIfIispAddrTermSPStorageType=mscAtmIfIispAddrTermSPStorageType, mscAtmIfIispSigVcdQosClass=mscAtmIfIispSigVcdQosClass, mscAtmIfIispSigVcdTrafficDescType=mscAtmIfIispSigVcdTrafficDescType, mscAtmIfVptIispSigVcdIndex=mscAtmIfVptIispSigVcdIndex, mscAtmIfIispCallingAScrAddrStorageType=mscAtmIfIispCallingAScrAddrStorageType, mscAtmIfIispCallingAScrRejectedCalls=mscAtmIfIispCallingAScrRejectedCalls, mscAtmIfIispSigAdminState=mscAtmIfIispSigAdminState, mscAtmIfVptIispSigFailedPmpConnections=mscAtmIfVptIispSigFailedPmpConnections, mscAtmIfVptIispAddrStorageType=mscAtmIfVptIispAddrStorageType, mscAtmIfVptIispCallingAScrAddrRowStatusTable=mscAtmIfVptIispCallingAScrAddrRowStatusTable, mscAtmIfVptIispCallingAScrRowStatusTable=mscAtmIfVptIispCallingAScrRowStatusTable, mscAtmIfVptIispVersion=mscAtmIfVptIispVersion, mscAtmIfIispServiceExchange=mscAtmIfIispServiceExchange, mscAtmIfVptIispCallingAScrRowStatusEntry=mscAtmIfVptIispCallingAScrRowStatusEntry, mscAtmIfIispAddrReachability=mscAtmIfIispAddrReachability, mscAtmIfIispSigProvTable=mscAtmIfIispSigProvTable, mscAtmIfIispAccountConnectionType=mscAtmIfIispAccountConnectionType, mscAtmIfIispAddrPnniInfoProvTable=mscAtmIfIispAddrPnniInfoProvTable, mscAtmIfVptIispAddrReachability=mscAtmIfVptIispAddrReachability, mscAtmIfVptIispCallingAScrAdminStatus=mscAtmIfVptIispCallingAScrAdminStatus, mscAtmIfIispSigFailedPmpConnections=mscAtmIfIispSigFailedPmpConnections, mscAtmIfIispCalledAScrUnmatchedCalls=mscAtmIfIispCalledAScrUnmatchedCalls, mscAtmIfVptIispSigProvTable=mscAtmIfVptIispSigProvTable, mscAtmIfVptIispAddrPnniInfoReachability=mscAtmIfVptIispAddrPnniInfoReachability, mscAtmIfVptIispAddrPnniInfoComponentName=mscAtmIfVptIispAddrPnniInfoComponentName, mscAtmIfIispSigLastRxDiagCode=mscAtmIfIispSigLastRxDiagCode, mscAtmIfIispSigVcdStorageType=mscAtmIfIispSigVcdStorageType, mscAtmIfIispComponentName=mscAtmIfIispComponentName, mscAtmIfIispSigVci=mscAtmIfIispSigVci, mscAtmIfIispSigSuccessfulConnections=mscAtmIfIispSigSuccessfulConnections, mscAtmIfVptIispServiceExchange=mscAtmIfVptIispServiceExchange, mscAtmIfIispCallingAScrAddrAddressIndex=mscAtmIfIispCallingAScrAddrAddressIndex, mscAtmIfIispSigLastTxDiagCode=mscAtmIfIispSigLastTxDiagCode, mscAtmIfVptIispCallingAScrProvTable=mscAtmIfVptIispCallingAScrProvTable, mscAtmIfIispRowStatusTable=mscAtmIfIispRowStatusTable, mscAtmIfIispAddrStorageType=mscAtmIfIispAddrStorageType, mscAtmIfVptIispAddrTermSP=mscAtmIfVptIispAddrTermSP, mscAtmIfIispSigVcdIndex=mscAtmIfIispSigVcdIndex, mscAtmIfIispAddrRowStatusTable=mscAtmIfIispAddrRowStatusTable, mscAtmIfVptIispRowStatusEntry=mscAtmIfVptIispRowStatusEntry, mscAtmIfIispCalledAScrProvEntry=mscAtmIfIispCalledAScrProvEntry, mscAtmIfVptIispProvEntry=mscAtmIfVptIispProvEntry, mscAtmIfVptIispAddrPnniInfoScope=mscAtmIfVptIispAddrPnniInfoScope, mscAtmIfIispCalledAScrRowStatus=mscAtmIfIispCalledAScrRowStatus, mscAtmIfVptIispSigVcdUsageParameterControl=mscAtmIfVptIispSigVcdUsageParameterControl, mscAtmIfIispAddrPnniInfoRowStatus=mscAtmIfIispAddrPnniInfoRowStatus, mscAtmIfVptIispAddrScope=mscAtmIfVptIispAddrScope, mscAtmIfIispAddrPnniInfoProvEntry=mscAtmIfIispAddrPnniInfoProvEntry, mscAtmIfVptIispCallingAScrStatEntry=mscAtmIfVptIispCallingAScrStatEntry, mscAtmIfIispAddrOperEntry=mscAtmIfIispAddrOperEntry, mscAtmIfIispCalledAScrStatEntry=mscAtmIfIispCalledAScrStatEntry, mscAtmIfVptIispSigStateEntry=mscAtmIfVptIispSigStateEntry, mscAtmIfIispSigComponentName=mscAtmIfIispSigComponentName, mscAtmIfIispSigOperTable=mscAtmIfIispSigOperTable, mscAtmIfIispSigOperationalState=mscAtmIfIispSigOperationalState, mscAtmIfVptIispSigVci=mscAtmIfVptIispSigVci, mscAtmIfIispCalledAScrRejectedCalls=mscAtmIfIispCalledAScrRejectedCalls, mscAtmIfVptIispCalledAScrAddrRowStatusTable=mscAtmIfVptIispCalledAScrAddrRowStatusTable, mscAtmIfVptIispSigVcdTdpValue=mscAtmIfVptIispSigVcdTdpValue, mscAtmIfIispSigLastRxCauseCode=mscAtmIfIispSigLastRxCauseCode, mscAtmIfIispSoftPvpAndPvcHoldOffTime=mscAtmIfIispSoftPvpAndPvcHoldOffTime, mscAtmIfVptIispCalledAScrRowStatusTable=mscAtmIfVptIispCalledAScrRowStatusTable, mscAtmIfIispSigVcdUsageParameterControl=mscAtmIfIispSigVcdUsageParameterControl, mscAtmIfVptIispSigVcdTrafficDescType=mscAtmIfVptIispSigVcdTrafficDescType, mscAtmIfVptIispSigLastRxDiagCode=mscAtmIfVptIispSigLastRxDiagCode, mscAtmIfIispAddrTermSPComponentName=mscAtmIfIispAddrTermSPComponentName, mscAtmIfIispSigStatsEntry=mscAtmIfIispSigStatsEntry, mscAtmIfVptIispRowStatus=mscAtmIfVptIispRowStatus, mscAtmIfIispAddrRowStatusEntry=mscAtmIfIispAddrRowStatusEntry, mscAtmIfIispCalledAScrIndex=mscAtmIfIispCalledAScrIndex, mscAtmIfIispSigCurrentPmpConnections=mscAtmIfIispSigCurrentPmpConnections, mscAtmIfVptIispCallingAScrAddrStorageType=mscAtmIfVptIispCallingAScrAddrStorageType, mscAtmIfVptIispSigNewCurrentConnections=mscAtmIfVptIispSigNewCurrentConnections, mscAtmIfVptIispCalledAScrRejectedCalls=mscAtmIfVptIispCalledAScrRejectedCalls, mscAtmIfVptIispSigVcdQosClass=mscAtmIfVptIispSigVcdQosClass, mscAtmIfVptIispCallingAScrAddrRowStatusEntry=mscAtmIfVptIispCallingAScrAddrRowStatusEntry, mscAtmIfIispVersion=mscAtmIfIispVersion, mscAtmIfIispCalledAScrAdminStatus=mscAtmIfIispCalledAScrAdminStatus, mscAtmIfVptIispAddrPnniInfoProvTable=mscAtmIfVptIispAddrPnniInfoProvTable, mscAtmIfVptIispCalledAScrAdminStatus=mscAtmIfVptIispCalledAScrAdminStatus, mscAtmIfVptIispCalledAScrAcceptedCalls=mscAtmIfVptIispCalledAScrAcceptedCalls, atmIispGroupCA02=atmIispGroupCA02, mscAtmIfIispCallingAScrStorageType=mscAtmIfIispCallingAScrStorageType, mscAtmIfVptIispSigVcd=mscAtmIfVptIispSigVcd, mscAtmIfVptIispAccountClass=mscAtmIfVptIispAccountClass, mscAtmIfIispCalledAScrAcceptedCalls=mscAtmIfIispCalledAScrAcceptedCalls, mscAtmIfVptIispAcctOptEntry=mscAtmIfVptIispAcctOptEntry, mscAtmIfIispCalledAScrRowStatusTable=mscAtmIfIispCalledAScrRowStatusTable, mscAtmIfIispSigFailedConnections=mscAtmIfIispSigFailedConnections, mscAtmIfIispCallingAScrAddrRowStatusEntry=mscAtmIfIispCallingAScrAddrRowStatusEntry, mscAtmIfVptIispSigVcdTdpTable=mscAtmIfVptIispSigVcdTdpTable, mscAtmIfIispSigVcdTdpEntry=mscAtmIfIispSigVcdTdpEntry, mscAtmIfIispSigVcdAtmServiceCategory=mscAtmIfIispSigVcdAtmServiceCategory, mscAtmIfVptIispAccountConnectionType=mscAtmIfVptIispAccountConnectionType, mscAtmIfIispAddrPnniInfoReachability=mscAtmIfIispAddrPnniInfoReachability, mscAtmIfVptIispSigVcdProvTable=mscAtmIfVptIispSigVcdProvTable, mscAtmIfVptIispAddrPnniInfoRowStatus=mscAtmIfVptIispAddrPnniInfoRowStatus, mscAtmIfVptIispCalledAScrAddrRowStatus=mscAtmIfVptIispCalledAScrAddrRowStatus, mscAtmIfIispSigIndex=mscAtmIfIispSigIndex, mscAtmIfVptIispCalledAScrStatTable=mscAtmIfVptIispCalledAScrStatTable, mscAtmIfVptIispSigVcdAtmServiceCategory=mscAtmIfVptIispSigVcdAtmServiceCategory, mscAtmIfIispSigVcdTdpValue=mscAtmIfIispSigVcdTdpValue, mscAtmIfVptIispCallingAScrAcceptedCalls=mscAtmIfVptIispCallingAScrAcceptedCalls, mscAtmIfVptIispCallingAScrIndex=mscAtmIfVptIispCallingAScrIndex, mscAtmIfVptIispSigOperationalState=mscAtmIfVptIispSigOperationalState, atmIispCapabilitiesCA=atmIispCapabilitiesCA, mscAtmIfVptIispCallingAScrComponentName=mscAtmIfVptIispCallingAScrComponentName, mscAtmIfIispAddrRowStatus=mscAtmIfIispAddrRowStatus, mscAtmIfVptIispAddrAddressTypeIndex=mscAtmIfVptIispAddrAddressTypeIndex, mscAtmIfVptIispSigVcdRowStatus=mscAtmIfVptIispSigVcdRowStatus, mscAtmIfVptIispAddrPnniInfoRowStatusTable=mscAtmIfVptIispAddrPnniInfoRowStatusTable, mscAtmIfIispSigPeakPmpConnections=mscAtmIfIispSigPeakPmpConnections, mscAtmIfIispSigPeakConnections=mscAtmIfIispSigPeakConnections, mscAtmIfVptIispAddrPnniInfoProvEntry=mscAtmIfVptIispAddrPnniInfoProvEntry, mscAtmIfVptIispSigLastTxDiagCode=mscAtmIfVptIispSigLastTxDiagCode, mscAtmIfVptIispSigRowStatusTable=mscAtmIfVptIispSigRowStatusTable, mscAtmIfVptIispCalledAScrUnmatchedCalls=mscAtmIfVptIispCalledAScrUnmatchedCalls, mscAtmIfVptIispCalledAScrAddrStorageType=mscAtmIfVptIispCalledAScrAddrStorageType, mscAtmIfIispCallingAScrStatTable=mscAtmIfIispCallingAScrStatTable, mscAtmIfIispRowStatusEntry=mscAtmIfIispRowStatusEntry, mscAtmIfIispAddrScope=mscAtmIfIispAddrScope, mscAtmIfIispCalledAScrAddrAddressActionIndex=mscAtmIfIispCalledAScrAddrAddressActionIndex, mscAtmIfIispSigRowStatusEntry=mscAtmIfIispSigRowStatusEntry, mscAtmIfVptIispCallingAScr=mscAtmIfVptIispCallingAScr, mscAtmIfVptIispCalledAScrComponentName=mscAtmIfVptIispCalledAScrComponentName, mscAtmIfVptIispCalledAScr=mscAtmIfVptIispCalledAScr, mscAtmIfIispSigVcdUnshapedTransmitQueueing=mscAtmIfIispSigVcdUnshapedTransmitQueueing, mscAtmIfVptIispSigVcdWeight=mscAtmIfVptIispSigVcdWeight, mscAtmIfVptIispCallingAScrRowStatus=mscAtmIfVptIispCallingAScrRowStatus, mscAtmIfIispAddrTermSPRowStatus=mscAtmIfIispAddrTermSPRowStatus, mscAtmIfVptIispAddrPnniInfo=mscAtmIfVptIispAddrPnniInfo, mscAtmIfIispAddrPnniInfo=mscAtmIfIispAddrPnniInfo, mscAtmIfVptIispCalledAScrRowStatus=mscAtmIfVptIispCalledAScrRowStatus, mscAtmIfVptIispAddrPnniInfoStorageType=mscAtmIfVptIispAddrPnniInfoStorageType, mscAtmIfIispCallingAScrRowStatus=mscAtmIfIispCallingAScrRowStatus, mscAtmIfIispAddrPnniInfoComponentName=mscAtmIfIispAddrPnniInfoComponentName, mscAtmIfVptIispSigTxPdus=mscAtmIfVptIispSigTxPdus, mscAtmIfIispAccountClass=mscAtmIfIispAccountClass, mscAtmIfIispSigStateEntry=mscAtmIfIispSigStateEntry, mscAtmIfVptIispAddr=mscAtmIfVptIispAddr, mscAtmIfIispCalledAScrAddrAddressIndex=mscAtmIfIispCalledAScrAddrAddressIndex, mscAtmIfIispSigTxPdus=mscAtmIfIispSigTxPdus, mscAtmIfIispSigCurrentConnections=mscAtmIfIispSigCurrentConnections, mscAtmIfVptIispSigVcdStorageType=mscAtmIfVptIispSigVcdStorageType, mscAtmIfVptIispSigVcdTdpEntry=mscAtmIfVptIispSigVcdTdpEntry, mscAtmIfVptIispAddrTermSPRowStatusEntry=mscAtmIfVptIispAddrTermSPRowStatusEntry, mscAtmIfIispSigVcdRowStatusTable=mscAtmIfIispSigVcdRowStatusTable, mscAtmIfVptIispCalledAScrProvEntry=mscAtmIfVptIispCalledAScrProvEntry, mscAtmIfVptIisp=mscAtmIfVptIisp, mscAtmIfVptIispComponentName=mscAtmIfVptIispComponentName, mscAtmIfIispSigVcdProvTable=mscAtmIfIispSigVcdProvTable, mscAtmIfIispProvTable=mscAtmIfIispProvTable, mscAtmIfIispSigRowStatus=mscAtmIfIispSigRowStatus, mscAtmIfVptIispCalledAScrIndex=mscAtmIfVptIispCalledAScrIndex, mscAtmIfIispCalledAScrStatTable=mscAtmIfIispCalledAScrStatTable, mscAtmIfIispCalledAScrComponentName=mscAtmIfIispCalledAScrComponentName, mscAtmIfVptIispCallingAScrAddrRowStatus=mscAtmIfVptIispCallingAScrAddrRowStatus, mscAtmIfVptIispSigFailedConnections=mscAtmIfVptIispSigFailedConnections, mscAtmIfIispAccountCollection=mscAtmIfIispAccountCollection, mscAtmIfVptIispSoftPvpAndPvcHoldOffTime=mscAtmIfVptIispSoftPvpAndPvcHoldOffTime, mscAtmIfIispCallingAScrDefaultInsertionAddress=mscAtmIfIispCallingAScrDefaultInsertionAddress, mscAtmIfIispSigVcd=mscAtmIfIispSigVcd, mscAtmIfVptIispSigStorageType=mscAtmIfVptIispSigStorageType)
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-AtmIispMIB", mscAtmIfVptIispSigRowStatus=mscAtmIfVptIispSigRowStatus, mscAtmIfVptIispSoftPvpAndPvcRetryPeriod=mscAtmIfVptIispSoftPvpAndPvcRetryPeriod, mscAtmIfVptIispStorageType=mscAtmIfVptIispStorageType, mscAtmIfVptIispSigOperatingMode=mscAtmIfVptIispSigOperatingMode, mscAtmIfIispCallingAScrUnmatchedCalls=mscAtmIfIispCallingAScrUnmatchedCalls, mscAtmIfIispSigUsageState=mscAtmIfIispSigUsageState, mscAtmIfIispAddrTermSPRowStatusTable=mscAtmIfIispAddrTermSPRowStatusTable, mscAtmIfIispCalledAScr=mscAtmIfIispCalledAScr, mscAtmIfVptIispSigVcdUnshapedTransmitQueueing=mscAtmIfVptIispSigVcdUnshapedTransmitQueueing, mscAtmIfIispSigVcdComponentName=mscAtmIfIispSigVcdComponentName, mscAtmIfVptIispAddrRowStatusTable=mscAtmIfVptIispAddrRowStatusTable, mscAtmIfVptIispSigStateTable=mscAtmIfVptIispSigStateTable, mscAtmIfIispCalledAScrAddrRowStatusTable=mscAtmIfIispCalledAScrAddrRowStatusTable, mscAtmIfVptIispSigStatsEntry=mscAtmIfVptIispSigStatsEntry, mscAtmIfVptIispSigOperTable=mscAtmIfVptIispSigOperTable, mscAtmIfIispAddrComponentName=mscAtmIfIispAddrComponentName, mscAtmIfIispAddr=mscAtmIfIispAddr, mscAtmIfIispCalledAScrProvTable=mscAtmIfIispCalledAScrProvTable, mscAtmIfVptIispProvTable=mscAtmIfVptIispProvTable, mscAtmIfIispSigNewCurrentConnections=mscAtmIfIispSigNewCurrentConnections, mscAtmIfVptIispAddrRowStatus=mscAtmIfVptIispAddrRowStatus, mscAtmIfIispCallingAScrRowStatusTable=mscAtmIfIispCallingAScrRowStatusTable, mscAtmIfIispCallingAScrAddr=mscAtmIfIispCallingAScrAddr, mscAtmIfIispSigLastTxCauseCode=mscAtmIfIispSigLastTxCauseCode, mscAtmIfIispCallingAScrComponentName=mscAtmIfIispCallingAScrComponentName, mscAtmIfIisp=mscAtmIfIisp, mscAtmIfIispCallingAScrAddrRowStatus=mscAtmIfIispCallingAScrAddrRowStatus, mscAtmIfIispSide=mscAtmIfIispSide, atmIispCapabilitiesCA02A=atmIispCapabilitiesCA02A, mscAtmIfIispSigVcdTdpIndex=mscAtmIfIispSigVcdTdpIndex, mscAtmIfIispSigStorageType=mscAtmIfIispSigStorageType, mscAtmIfIispCallingAScrIndex=mscAtmIfIispCallingAScrIndex, mscAtmIfVptIispCalledAScrProvTable=mscAtmIfVptIispCalledAScrProvTable, mscAtmIfIispCalledAScrStorageType=mscAtmIfIispCalledAScrStorageType, atmIispCapabilitiesCA02=atmIispCapabilitiesCA02, mscAtmIfIispSigVcdWeight=mscAtmIfIispSigVcdWeight, mscAtmIfIispCallingAScrAcceptedCalls=mscAtmIfIispCallingAScrAcceptedCalls, mscAtmIfIispAddrTermSP=mscAtmIfIispAddrTermSP, mscAtmIfIispCalledAScrAddrRowStatusEntry=mscAtmIfIispCalledAScrAddrRowStatusEntry, mscAtmIfVptIispAddrTermSPRowStatus=mscAtmIfVptIispAddrTermSPRowStatus, mscAtmIfVptIispVpci=mscAtmIfVptIispVpci, mscAtmIfVptIispCalledAScrAddrAddressActionIndex=mscAtmIfVptIispCalledAScrAddrAddressActionIndex, mscAtmIfIispCallingAScrAddrRowStatusTable=mscAtmIfIispCallingAScrAddrRowStatusTable, mscAtmIfIispAddrOperTable=mscAtmIfIispAddrOperTable, mscAtmIfIispSigOperatingMode=mscAtmIfIispSigOperatingMode, mscAtmIfIispSigRowStatusTable=mscAtmIfIispSigRowStatusTable, mscAtmIfIispAddrAddressTypeIndex=mscAtmIfIispAddrAddressTypeIndex, mscAtmIfVptIispCallingAScrDefaultInsertionAddress=mscAtmIfVptIispCallingAScrDefaultInsertionAddress, mscAtmIfVptIispAddrPnniInfoRowStatusEntry=mscAtmIfVptIispAddrPnniInfoRowStatusEntry, mscAtmIfVptIispSigRxPdus=mscAtmIfVptIispSigRxPdus, mscAtmIfIispAddrPnniInfoStorageType=mscAtmIfIispAddrPnniInfoStorageType, mscAtmIfVptIispSigVcdTdpIndex=mscAtmIfVptIispSigVcdTdpIndex, mscAtmIfIispSigVcdRowStatusEntry=mscAtmIfIispSigVcdRowStatusEntry, mscAtmIfVptIispAddrOperTable=mscAtmIfVptIispAddrOperTable, mscAtmIfVptIispCallingAScrAddrComponentName=mscAtmIfVptIispCallingAScrAddrComponentName, mscAtmIfVptIispAccountCollection=mscAtmIfVptIispAccountCollection, mscAtmIfVptIispSigCurrentConnections=mscAtmIfVptIispSigCurrentConnections, mscAtmIfVptIispAddrOperEntry=mscAtmIfVptIispAddrOperEntry, mscAtmIfIispCallingAScrRowStatusEntry=mscAtmIfIispCallingAScrRowStatusEntry, mscAtmIfIispCallingAScrProvTable=mscAtmIfIispCallingAScrProvTable, mscAtmIfIispSigVcdTrafficShaping=mscAtmIfIispSigVcdTrafficShaping, mscAtmIfIispSigProvEntry=mscAtmIfIispSigProvEntry, mscAtmIfVptIispSigIndex=mscAtmIfVptIispSigIndex, mscAtmIfIispIndex=mscAtmIfIispIndex)
