#
# PySNMP MIB module ATM-ACCOUNTING-INFORMATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ATM-ACCOUNTING-INFORMATION-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:14:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
AtmAddr, = mibBuilder.importSymbols("ATM-TC-MIB", "AtmAddr")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, iso, mib_2, Counter64, TimeTicks, NotificationType, Gauge32, ObjectIdentity, ModuleIdentity, Integer32, Bits, Counter32, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "mib-2", "Counter64", "TimeTicks", "NotificationType", "Gauge32", "ObjectIdentity", "ModuleIdentity", "Integer32", "Bits", "Counter32", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DateAndTime, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TextualConvention")
atmAccountingInformationMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 59))
if mibBuilder.loadTexts: atmAccountingInformationMIB.setLastUpdated('9611052000Z')
if mibBuilder.loadTexts: atmAccountingInformationMIB.setOrganization('IETF AToM MIB Working Group')
atmAcctngMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 59, 1))
atmAcctngDataObjects = ObjectIdentity((1, 3, 6, 1, 2, 1, 59, 1, 1))
if mibBuilder.loadTexts: atmAcctngDataObjects.setStatus('current')
atmAcctngConnectionType = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("pvc", 1), ("pvp", 2), ("svcIncoming", 3), ("svcOutgoing", 4), ("svpIncoming", 5), ("svpOutgoing", 6), ("spvcInitiator", 7), ("spvcTarget", 8), ("spvpInitiator", 9), ("spvpTarget", 10))))
if mibBuilder.loadTexts: atmAcctngConnectionType.setStatus('current')
atmAcctngCastType = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("p2p", 1), ("p2mp", 2))))
if mibBuilder.loadTexts: atmAcctngCastType.setStatus('current')
atmAcctngIfName = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 3), DisplayString())
if mibBuilder.loadTexts: atmAcctngIfName.setStatus('current')
atmAcctngIfAlias = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 4), DisplayString())
if mibBuilder.loadTexts: atmAcctngIfAlias.setStatus('current')
atmAcctngVpi = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: atmAcctngVpi.setStatus('current')
atmAcctngVci = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: atmAcctngVci.setStatus('current')
atmAcctngCallingParty = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 7), AtmAddr())
if mibBuilder.loadTexts: atmAcctngCallingParty.setStatus('current')
atmAcctngCalledParty = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 8), AtmAddr())
if mibBuilder.loadTexts: atmAcctngCalledParty.setStatus('current')
atmAcctngCallReference = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3)))
if mibBuilder.loadTexts: atmAcctngCallReference.setStatus('current')
atmAcctngStartTime = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 10), DateAndTime())
if mibBuilder.loadTexts: atmAcctngStartTime.setStatus('current')
atmAcctngCollectionTime = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 11), DateAndTime())
if mibBuilder.loadTexts: atmAcctngCollectionTime.setStatus('current')
atmAcctngCollectMode = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("onRelease", 1), ("periodically", 2), ("onCommand", 3))))
if mibBuilder.loadTexts: atmAcctngCollectMode.setStatus('current')
atmAcctngReleaseCause = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 13), Integer32())
if mibBuilder.loadTexts: atmAcctngReleaseCause.setStatus('current')
atmAcctngServiceCategory = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("other", 1), ("cbr", 2), ("vbrRt", 3), ("vbrNrt", 4), ("abr", 5), ("ubr", 6), ("unknown", 7))))
if mibBuilder.loadTexts: atmAcctngServiceCategory.setStatus('current')
atmAcctngTransmittedCells = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 15), Counter64())
if mibBuilder.loadTexts: atmAcctngTransmittedCells.setStatus('current')
atmAcctngTransmittedClp0Cells = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 16), Counter64())
if mibBuilder.loadTexts: atmAcctngTransmittedClp0Cells.setStatus('current')
atmAcctngReceivedCells = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 17), Counter64())
if mibBuilder.loadTexts: atmAcctngReceivedCells.setStatus('current')
atmAcctngReceivedClp0Cells = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 18), Counter64())
if mibBuilder.loadTexts: atmAcctngReceivedClp0Cells.setStatus('current')
atmAcctngTransmitTrafficDescriptorType = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 19), ObjectIdentifier())
if mibBuilder.loadTexts: atmAcctngTransmitTrafficDescriptorType.setStatus('current')
atmAcctngTransmitTrafficDescriptorParam1 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: atmAcctngTransmitTrafficDescriptorParam1.setStatus('current')
atmAcctngTransmitTrafficDescriptorParam2 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: atmAcctngTransmitTrafficDescriptorParam2.setStatus('current')
atmAcctngTransmitTrafficDescriptorParam3 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: atmAcctngTransmitTrafficDescriptorParam3.setStatus('current')
atmAcctngTransmitTrafficDescriptorParam4 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: atmAcctngTransmitTrafficDescriptorParam4.setStatus('current')
atmAcctngTransmitTrafficDescriptorParam5 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: atmAcctngTransmitTrafficDescriptorParam5.setStatus('current')
atmAcctngReceiveTrafficDescriptorType = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 25), ObjectIdentifier())
if mibBuilder.loadTexts: atmAcctngReceiveTrafficDescriptorType.setStatus('current')
atmAcctngReceiveTrafficDescriptorParam1 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: atmAcctngReceiveTrafficDescriptorParam1.setStatus('current')
atmAcctngReceiveTrafficDescriptorParam2 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: atmAcctngReceiveTrafficDescriptorParam2.setStatus('current')
atmAcctngReceiveTrafficDescriptorParam3 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: atmAcctngReceiveTrafficDescriptorParam3.setStatus('current')
atmAcctngReceiveTrafficDescriptorParam4 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: atmAcctngReceiveTrafficDescriptorParam4.setStatus('current')
atmAcctngReceiveTrafficDescriptorParam5 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)))
if mibBuilder.loadTexts: atmAcctngReceiveTrafficDescriptorParam5.setStatus('current')
atmAcctngCallingPartySubAddress = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 31), AtmAddr())
if mibBuilder.loadTexts: atmAcctngCallingPartySubAddress.setStatus('current')
atmAcctngCalledPartySubAddress = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 32), AtmAddr())
if mibBuilder.loadTexts: atmAcctngCalledPartySubAddress.setStatus('current')
atmAcctngRecordCrc16 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 33), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2))
if mibBuilder.loadTexts: atmAcctngRecordCrc16.setStatus('current')
mibBuilder.exportSymbols("ATM-ACCOUNTING-INFORMATION-MIB", atmAcctngConnectionType=atmAcctngConnectionType, atmAcctngCastType=atmAcctngCastType, atmAcctngTransmitTrafficDescriptorParam3=atmAcctngTransmitTrafficDescriptorParam3, atmAcctngCallingPartySubAddress=atmAcctngCallingPartySubAddress, atmAcctngMIBObjects=atmAcctngMIBObjects, atmAcctngReceiveTrafficDescriptorParam2=atmAcctngReceiveTrafficDescriptorParam2, atmAcctngCalledParty=atmAcctngCalledParty, atmAccountingInformationMIB=atmAccountingInformationMIB, atmAcctngTransmitTrafficDescriptorParam5=atmAcctngTransmitTrafficDescriptorParam5, atmAcctngReceiveTrafficDescriptorParam3=atmAcctngReceiveTrafficDescriptorParam3, atmAcctngDataObjects=atmAcctngDataObjects, atmAcctngTransmitTrafficDescriptorType=atmAcctngTransmitTrafficDescriptorType, atmAcctngVpi=atmAcctngVpi, atmAcctngCollectionTime=atmAcctngCollectionTime, atmAcctngTransmittedClp0Cells=atmAcctngTransmittedClp0Cells, PYSNMP_MODULE_ID=atmAccountingInformationMIB, atmAcctngReceiveTrafficDescriptorParam5=atmAcctngReceiveTrafficDescriptorParam5, atmAcctngReleaseCause=atmAcctngReleaseCause, atmAcctngReceiveTrafficDescriptorType=atmAcctngReceiveTrafficDescriptorType, atmAcctngVci=atmAcctngVci, atmAcctngStartTime=atmAcctngStartTime, atmAcctngReceivedCells=atmAcctngReceivedCells, atmAcctngTransmittedCells=atmAcctngTransmittedCells, atmAcctngReceiveTrafficDescriptorParam1=atmAcctngReceiveTrafficDescriptorParam1, atmAcctngReceivedClp0Cells=atmAcctngReceivedClp0Cells, atmAcctngTransmitTrafficDescriptorParam2=atmAcctngTransmitTrafficDescriptorParam2, atmAcctngIfName=atmAcctngIfName, atmAcctngRecordCrc16=atmAcctngRecordCrc16, atmAcctngCallingParty=atmAcctngCallingParty, atmAcctngCollectMode=atmAcctngCollectMode, atmAcctngTransmitTrafficDescriptorParam4=atmAcctngTransmitTrafficDescriptorParam4, atmAcctngCalledPartySubAddress=atmAcctngCalledPartySubAddress, atmAcctngCallReference=atmAcctngCallReference, atmAcctngIfAlias=atmAcctngIfAlias, atmAcctngTransmitTrafficDescriptorParam1=atmAcctngTransmitTrafficDescriptorParam1, atmAcctngReceiveTrafficDescriptorParam4=atmAcctngReceiveTrafficDescriptorParam4, atmAcctngServiceCategory=atmAcctngServiceCategory)
