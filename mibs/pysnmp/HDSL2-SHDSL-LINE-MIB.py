#
# PySNMP MIB module HDSL2-SHDSL-LINE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HDSL2-SHDSL-LINE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:11:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
PerfCurrentCount, PerfIntervalCount = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfCurrentCount", "PerfIntervalCount")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Counter64, Bits, ObjectIdentity, IpAddress, Counter32, Unsigned32, iso, Integer32, TimeTicks, NotificationType, transmission, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, MibIdentifier, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Bits", "ObjectIdentity", "IpAddress", "Counter32", "Unsigned32", "iso", "Integer32", "TimeTicks", "NotificationType", "transmission", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "MibIdentifier", "Gauge32")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
hdsl2ShdslMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 48))
hdsl2ShdslMIB.setRevisions(('2011-12-21 00:00', '2005-12-07 00:00', '2002-05-09 00:00',))
if mibBuilder.loadTexts: hdsl2ShdslMIB.setLastUpdated('201112210000Z')
if mibBuilder.loadTexts: hdsl2ShdslMIB.setOrganization('ADSLMIB Working Group')
hdsl2ShdslMibObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 48, 1))
class Hdsl2ShdslPerfCurrDayCount(TextualConvention, Gauge32):
    status = 'current'
    displayHint = 'd'

class Hdsl2Shdsl1DayIntervalCount(TextualConvention, Gauge32):
    status = 'current'
    displayHint = 'd'

class Hdsl2ShdslPerfTimeElapsed(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 86399)

class Hdsl2ShdslPerfIntervalThreshold(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 900)

class Hdsl2ShdslUnitId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("xtuC", 1), ("xtuR", 2), ("xru1", 3), ("xru2", 4), ("xru3", 5), ("xru4", 6), ("xru5", 7), ("xru6", 8), ("xru7", 9), ("xru8", 10))

class Hdsl2ShdslUnitSide(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("networkSide", 1), ("customerSide", 2))

class Hdsl2ShdslWirePair(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("wirePair1", 1), ("wirePair2", 2), ("wirePair3", 3), ("wirePair4", 4))

class Hdsl2ShdslTransmissionModeType(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("region1", 0), ("region2", 1))

class Hdsl2ShdslClockReferenceType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("localClk", 1), ("networkClk", 2), ("dataOrNetworkClk", 3), ("dataClk", 4))

hdsl2ShdslSpanConfTable = MibTable((1, 3, 6, 1, 2, 1, 10, 48, 1, 1), )
if mibBuilder.loadTexts: hdsl2ShdslSpanConfTable.setStatus('current')
hdsl2ShdslSpanConfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 48, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hdsl2ShdslSpanConfEntry.setStatus('current')
hdsl2ShdslSpanConfNumRepeaters = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setUnits('repeaters').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfNumRepeaters.setStatus('current')
hdsl2ShdslSpanConfProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfProfile.setStatus('current')
hdsl2ShdslSpanConfAlarmProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfAlarmProfile.setStatus('current')
hdsl2ShdslSpanStatusTable = MibTable((1, 3, 6, 1, 2, 1, 10, 48, 1, 2), )
if mibBuilder.loadTexts: hdsl2ShdslSpanStatusTable.setStatus('current')
hdsl2ShdslSpanStatusEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 48, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hdsl2ShdslSpanStatusEntry.setStatus('current')
hdsl2ShdslStatusNumAvailRepeaters = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslStatusNumAvailRepeaters.setStatus('current')
hdsl2ShdslStatusMaxAttainableLineRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslStatusMaxAttainableLineRate.setStatus('current')
hdsl2ShdslStatusActualLineRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslStatusActualLineRate.setStatus('current')
hdsl2ShdslStatusTransmissionModeCurrent = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 2, 1, 4), Hdsl2ShdslTransmissionModeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslStatusTransmissionModeCurrent.setStatus('current')
hdsl2ShdslStatusMaxAttainablePayloadRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslStatusMaxAttainablePayloadRate.setStatus('current')
hdsl2ShdslStatusActualPayloadRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslStatusActualPayloadRate.setStatus('current')
hdsl2ShdslInventoryTable = MibTable((1, 3, 6, 1, 2, 1, 10, 48, 1, 3), )
if mibBuilder.loadTexts: hdsl2ShdslInventoryTable.setStatus('current')
hdsl2ShdslInventoryEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvIndex"))
if mibBuilder.loadTexts: hdsl2ShdslInventoryEntry.setStatus('current')
hdsl2ShdslInvIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 1), Hdsl2ShdslUnitId())
if mibBuilder.loadTexts: hdsl2ShdslInvIndex.setStatus('current')
hdsl2ShdslInvVendorID = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvVendorID.setStatus('current')
hdsl2ShdslInvVendorModelNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvVendorModelNumber.setStatus('current')
hdsl2ShdslInvVendorSerialNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvVendorSerialNumber.setStatus('current')
hdsl2ShdslInvVendorEOCSoftwareVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvVendorEOCSoftwareVersion.setStatus('current')
hdsl2ShdslInvStandardVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvStandardVersion.setStatus('current')
hdsl2ShdslInvVendorListNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvVendorListNumber.setStatus('current')
hdsl2ShdslInvVendorIssueNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvVendorIssueNumber.setStatus('current')
hdsl2ShdslInvVendorSoftwareVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvVendorSoftwareVersion.setStatus('current')
hdsl2ShdslInvEquipmentCode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvEquipmentCode.setStatus('current')
hdsl2ShdslInvVendorOther = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvVendorOther.setStatus('current')
hdsl2ShdslInvTransmissionModeCapability = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 3, 1, 12), Hdsl2ShdslTransmissionModeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslInvTransmissionModeCapability.setStatus('current')
hdsl2ShdslEndpointConfTable = MibTable((1, 3, 6, 1, 2, 1, 10, 48, 1, 4), )
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfTable.setStatus('current')
hdsl2ShdslEndpointConfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 48, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointSide"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointWirePair"))
if mibBuilder.loadTexts: hdsl2ShdslEndpointConfEntry.setStatus('current')
hdsl2ShdslEndpointSide = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 4, 1, 1), Hdsl2ShdslUnitSide())
if mibBuilder.loadTexts: hdsl2ShdslEndpointSide.setStatus('current')
hdsl2ShdslEndpointWirePair = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 4, 1, 2), Hdsl2ShdslWirePair())
if mibBuilder.loadTexts: hdsl2ShdslEndpointWirePair.setStatus('current')
hdsl2ShdslEndpointAlarmConfProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 4, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslEndpointAlarmConfProfile.setStatus('current')
hdsl2ShdslEndpointCurrTable = MibTable((1, 3, 6, 1, 2, 1, 10, 48, 1, 5), )
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurrTable.setStatus('current')
hdsl2ShdslEndpointCurrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointSide"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointWirePair"))
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurrEntry.setStatus('current')
hdsl2ShdslEndpointCurrAtn = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 128))).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurrAtn.setStatus('current')
hdsl2ShdslEndpointCurrSnrMgn = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 128))).setUnits('dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurrSnrMgn.setStatus('current')
hdsl2ShdslEndpointCurrStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 3), Bits().clone(namedValues=NamedValues(("noDefect", 0), ("powerBackoff", 1), ("deviceFault", 2), ("dcContinuityFault", 3), ("snrMarginAlarm", 4), ("loopAttenuationAlarm", 5), ("loswFailureAlarm", 6), ("configInitFailure", 7), ("protocolInitFailure", 8), ("noNeighborPresent", 9), ("loopbackActive", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurrStatus.setStatus('current')
hdsl2ShdslEndpointES = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 4), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointES.setStatus('current')
hdsl2ShdslEndpointSES = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 5), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointSES.setStatus('current')
hdsl2ShdslEndpointCRCanomalies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 6), Counter32()).setUnits('detected CRC Anomalies').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCRCanomalies.setStatus('current')
hdsl2ShdslEndpointLOSWS = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 7), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointLOSWS.setStatus('current')
hdsl2ShdslEndpointUAS = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 8), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointUAS.setStatus('current')
hdsl2ShdslEndpointCurr15MinTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 9), Hdsl2ShdslPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr15MinTimeElapsed.setStatus('current')
hdsl2ShdslEndpointCurr15MinES = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 10), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr15MinES.setStatus('current')
hdsl2ShdslEndpointCurr15MinSES = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 11), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr15MinSES.setStatus('current')
hdsl2ShdslEndpointCurr15MinCRCanomalies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 12), PerfCurrentCount()).setUnits('detected CRC Anomalies').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr15MinCRCanomalies.setStatus('current')
hdsl2ShdslEndpointCurr15MinLOSWS = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 13), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr15MinLOSWS.setStatus('current')
hdsl2ShdslEndpointCurr15MinUAS = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 14), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr15MinUAS.setStatus('current')
hdsl2ShdslEndpointCurr1DayTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 15), Hdsl2ShdslPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr1DayTimeElapsed.setStatus('current')
hdsl2ShdslEndpointCurr1DayES = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 16), Hdsl2ShdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr1DayES.setStatus('current')
hdsl2ShdslEndpointCurr1DaySES = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 17), Hdsl2ShdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr1DaySES.setStatus('current')
hdsl2ShdslEndpointCurr1DayCRCanomalies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 18), Hdsl2ShdslPerfCurrDayCount()).setUnits('detected CRC Anomalies').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr1DayCRCanomalies.setStatus('current')
hdsl2ShdslEndpointCurr1DayLOSWS = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 19), Hdsl2ShdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr1DayLOSWS.setStatus('current')
hdsl2ShdslEndpointCurr1DayUAS = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 20), Hdsl2ShdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurr1DayUAS.setStatus('current')
hdsl2ShdslEndpointCurrTipRingReversal = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("reversed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurrTipRingReversal.setStatus('current')
hdsl2ShdslEndpointCurrActivationState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 5, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("preActivation", 1), ("activation", 2), ("data", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslEndpointCurrActivationState.setStatus('current')
hdsl2Shdsl15MinIntervalTable = MibTable((1, 3, 6, 1, 2, 1, 10, 48, 1, 6), )
if mibBuilder.loadTexts: hdsl2Shdsl15MinIntervalTable.setStatus('current')
hdsl2Shdsl15MinIntervalEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 48, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointSide"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointWirePair"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2Shdsl15MinIntervalNumber"))
if mibBuilder.loadTexts: hdsl2Shdsl15MinIntervalEntry.setStatus('current')
hdsl2Shdsl15MinIntervalNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: hdsl2Shdsl15MinIntervalNumber.setStatus('current')
hdsl2Shdsl15MinIntervalES = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 6, 1, 2), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2Shdsl15MinIntervalES.setStatus('current')
hdsl2Shdsl15MinIntervalSES = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 6, 1, 3), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2Shdsl15MinIntervalSES.setStatus('current')
hdsl2Shdsl15MinIntervalCRCanomalies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 6, 1, 4), PerfIntervalCount()).setUnits('detected CRC Anomalies').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2Shdsl15MinIntervalCRCanomalies.setStatus('current')
hdsl2Shdsl15MinIntervalLOSWS = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 6, 1, 5), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2Shdsl15MinIntervalLOSWS.setStatus('current')
hdsl2Shdsl15MinIntervalUAS = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 6, 1, 6), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2Shdsl15MinIntervalUAS.setStatus('current')
hdsl2Shdsl1DayIntervalTable = MibTable((1, 3, 6, 1, 2, 1, 10, 48, 1, 7), )
if mibBuilder.loadTexts: hdsl2Shdsl1DayIntervalTable.setStatus('current')
hdsl2Shdsl1DayIntervalEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 48, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointSide"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointWirePair"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2Shdsl1DayIntervalNumber"))
if mibBuilder.loadTexts: hdsl2Shdsl1DayIntervalEntry.setStatus('current')
hdsl2Shdsl1DayIntervalNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)))
if mibBuilder.loadTexts: hdsl2Shdsl1DayIntervalNumber.setStatus('current')
hdsl2Shdsl1DayIntervalMoniSecs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 7, 1, 2), Hdsl2ShdslPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2Shdsl1DayIntervalMoniSecs.setStatus('current')
hdsl2Shdsl1DayIntervalES = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 7, 1, 3), Hdsl2Shdsl1DayIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2Shdsl1DayIntervalES.setStatus('current')
hdsl2Shdsl1DayIntervalSES = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 7, 1, 4), Hdsl2Shdsl1DayIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2Shdsl1DayIntervalSES.setStatus('current')
hdsl2Shdsl1DayIntervalCRCanomalies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 7, 1, 5), Hdsl2Shdsl1DayIntervalCount()).setUnits('detected CRC Anomalies').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2Shdsl1DayIntervalCRCanomalies.setStatus('current')
hdsl2Shdsl1DayIntervalLOSWS = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 7, 1, 6), Hdsl2Shdsl1DayIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2Shdsl1DayIntervalLOSWS.setStatus('current')
hdsl2Shdsl1DayIntervalUAS = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 7, 1, 7), Hdsl2Shdsl1DayIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2Shdsl1DayIntervalUAS.setStatus('current')
hdsl2ShdslEndpointMaintTable = MibTable((1, 3, 6, 1, 2, 1, 10, 48, 1, 8), )
if mibBuilder.loadTexts: hdsl2ShdslEndpointMaintTable.setStatus('current')
hdsl2ShdslEndpointMaintEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 48, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointSide"))
if mibBuilder.loadTexts: hdsl2ShdslEndpointMaintEntry.setStatus('current')
hdsl2ShdslMaintLoopbackConfig = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noLoopback", 1), ("normalLoopback", 2), ("specialLoopback", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslMaintLoopbackConfig.setStatus('current')
hdsl2ShdslMaintTipRingReversal = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("reversed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslMaintTipRingReversal.setStatus('current')
hdsl2ShdslMaintPowerBackOff = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("enhanced", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslMaintPowerBackOff.setStatus('current')
hdsl2ShdslMaintSoftRestart = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ready", 1), ("restart", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslMaintSoftRestart.setStatus('current')
hdsl2ShdslUnitMaintTable = MibTable((1, 3, 6, 1, 2, 1, 10, 48, 1, 9), )
if mibBuilder.loadTexts: hdsl2ShdslUnitMaintTable.setStatus('current')
hdsl2ShdslUnitMaintEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 48, 1, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvIndex"))
if mibBuilder.loadTexts: hdsl2ShdslUnitMaintEntry.setStatus('current')
hdsl2ShdslMaintLoopbackTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: hdsl2ShdslMaintLoopbackTimeout.setStatus('current')
hdsl2ShdslMaintUnitPowerSource = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("span", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hdsl2ShdslMaintUnitPowerSource.setStatus('current')
hdsl2ShdslSpanConfProfileTable = MibTable((1, 3, 6, 1, 2, 1, 10, 48, 1, 10), )
if mibBuilder.loadTexts: hdsl2ShdslSpanConfProfileTable.setStatus('current')
hdsl2ShdslSpanConfProfileEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1), ).setIndexNames((1, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfProfileName"))
if mibBuilder.loadTexts: hdsl2ShdslSpanConfProfileEntry.setStatus('current')
hdsl2ShdslSpanConfProfileName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hdsl2ShdslSpanConfProfileName.setStatus('current')
hdsl2ShdslSpanConfWireInterface = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("twoWire", 1), ("fourWire", 2), ("sixWire", 3), ("eightWire", 4))).clone('twoWire')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfWireInterface.setStatus('current')
hdsl2ShdslSpanConfMinLineRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(1552000)).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfMinLineRate.setStatus('current')
hdsl2ShdslSpanConfMaxLineRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(1552000)).setUnits('bps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfMaxLineRate.setStatus('current')
hdsl2ShdslSpanConfPSD = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("symmetric", 1), ("asymmetric", 2))).clone('symmetric')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfPSD.setStatus('current')
hdsl2ShdslSpanConfTransmissionMode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 6), Hdsl2ShdslTransmissionModeType().clone(namedValues=NamedValues(("region1", 0)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfTransmissionMode.setStatus('current')
hdsl2ShdslSpanConfRemoteEnabled = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfRemoteEnabled.setStatus('current')
hdsl2ShdslSpanConfPowerFeeding = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noPower", 1), ("powerFeed", 2), ("wettingCurrent", 3))).clone('noPower')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfPowerFeeding.setStatus('current')
hdsl2ShdslSpanConfCurrCondTargetMarginDown = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10, 21))).setUnits('dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfCurrCondTargetMarginDown.setStatus('current')
hdsl2ShdslSpanConfWorstCaseTargetMarginDown = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10, 21))).setUnits('dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfWorstCaseTargetMarginDown.setStatus('current')
hdsl2ShdslSpanConfCurrCondTargetMarginUp = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10, 21))).setUnits('dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfCurrCondTargetMarginUp.setStatus('current')
hdsl2ShdslSpanConfWorstCaseTargetMarginUp = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10, 21))).setUnits('dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfWorstCaseTargetMarginUp.setStatus('current')
hdsl2ShdslSpanConfUsedTargetMargins = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 13), Bits().clone(namedValues=NamedValues(("currCondDown", 0), ("worstCaseDown", 1), ("currCondUp", 2), ("worstCaseUp", 3))).clone(namedValues=NamedValues(("currCondDown", 0)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfUsedTargetMargins.setStatus('current')
hdsl2ShdslSpanConfReferenceClock = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 14), Hdsl2ShdslClockReferenceType().clone('localClk')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfReferenceClock.setStatus('current')
hdsl2ShdslSpanConfLineProbeEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfLineProbeEnable.setStatus('current')
hdsl2ShdslSpanConfProfileRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 10, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslSpanConfProfileRowStatus.setStatus('current')
hdsl2ShdslEndpointAlarmConfProfileTable = MibTable((1, 3, 6, 1, 2, 1, 10, 48, 1, 11), )
if mibBuilder.loadTexts: hdsl2ShdslEndpointAlarmConfProfileTable.setStatus('current')
hdsl2ShdslEndpointAlarmConfProfileEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1), ).setIndexNames((1, "HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointAlarmConfProfileName"))
if mibBuilder.loadTexts: hdsl2ShdslEndpointAlarmConfProfileEntry.setStatus('current')
hdsl2ShdslEndpointAlarmConfProfileName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: hdsl2ShdslEndpointAlarmConfProfileName.setStatus('current')
hdsl2ShdslEndpointThreshLoopAttenuation = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 128))).setUnits('dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslEndpointThreshLoopAttenuation.setStatus('current')
hdsl2ShdslEndpointThreshSNRMargin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-127, 128))).setUnits('dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslEndpointThreshSNRMargin.setStatus('current')
hdsl2ShdslEndpointThreshES = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1, 4), Hdsl2ShdslPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslEndpointThreshES.setStatus('current')
hdsl2ShdslEndpointThreshSES = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1, 5), Hdsl2ShdslPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslEndpointThreshSES.setStatus('current')
hdsl2ShdslEndpointThreshCRCanomalies = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1, 6), Integer32()).setUnits('detected CRC Anomalies').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslEndpointThreshCRCanomalies.setStatus('current')
hdsl2ShdslEndpointThreshLOSWS = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1, 7), Hdsl2ShdslPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslEndpointThreshLOSWS.setStatus('current')
hdsl2ShdslEndpointThreshUAS = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1, 8), Hdsl2ShdslPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslEndpointThreshUAS.setStatus('current')
hdsl2ShdslEndpointAlarmConfProfileRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 48, 1, 11, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hdsl2ShdslEndpointAlarmConfProfileRowStatus.setStatus('current')
hdsl2ShdslNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 48, 0))
hdsl2ShdslLoopAttenCrossing = NotificationType((1, 3, 6, 1, 2, 1, 10, 48, 0, 1)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurrAtn"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshLoopAttenuation"))
if mibBuilder.loadTexts: hdsl2ShdslLoopAttenCrossing.setStatus('current')
hdsl2ShdslSNRMarginCrossing = NotificationType((1, 3, 6, 1, 2, 1, 10, 48, 0, 2)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurrSnrMgn"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshSNRMargin"))
if mibBuilder.loadTexts: hdsl2ShdslSNRMarginCrossing.setStatus('current')
hdsl2ShdslPerfESThresh = NotificationType((1, 3, 6, 1, 2, 1, 10, 48, 0, 3)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurr15MinES"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshES"))
if mibBuilder.loadTexts: hdsl2ShdslPerfESThresh.setStatus('current')
hdsl2ShdslPerfSESThresh = NotificationType((1, 3, 6, 1, 2, 1, 10, 48, 0, 4)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurr15MinSES"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshSES"))
if mibBuilder.loadTexts: hdsl2ShdslPerfSESThresh.setStatus('current')
hdsl2ShdslPerfCRCanomaliesThresh = NotificationType((1, 3, 6, 1, 2, 1, 10, 48, 0, 5)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurr15MinCRCanomalies"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshCRCanomalies"))
if mibBuilder.loadTexts: hdsl2ShdslPerfCRCanomaliesThresh.setStatus('current')
hdsl2ShdslPerfLOSWSThresh = NotificationType((1, 3, 6, 1, 2, 1, 10, 48, 0, 6)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurr15MinLOSWS"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshLOSWS"))
if mibBuilder.loadTexts: hdsl2ShdslPerfLOSWSThresh.setStatus('current')
hdsl2ShdslPerfUASThresh = NotificationType((1, 3, 6, 1, 2, 1, 10, 48, 0, 7)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurr15MinUAS"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshUAS"))
if mibBuilder.loadTexts: hdsl2ShdslPerfUASThresh.setStatus('current')
hdsl2ShdslSpanInvalidNumRepeaters = NotificationType((1, 3, 6, 1, 2, 1, 10, 48, 0, 8)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfNumRepeaters"))
if mibBuilder.loadTexts: hdsl2ShdslSpanInvalidNumRepeaters.setStatus('current')
hdsl2ShdslLoopbackFailure = NotificationType((1, 3, 6, 1, 2, 1, 10, 48, 0, 9)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslMaintLoopbackConfig"))
if mibBuilder.loadTexts: hdsl2ShdslLoopbackFailure.setStatus('current')
hdsl2ShdslpowerBackoff = NotificationType((1, 3, 6, 1, 2, 1, 10, 48, 0, 10)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurrStatus"))
if mibBuilder.loadTexts: hdsl2ShdslpowerBackoff.setStatus('current')
hdsl2ShdsldeviceFault = NotificationType((1, 3, 6, 1, 2, 1, 10, 48, 0, 11)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurrStatus"))
if mibBuilder.loadTexts: hdsl2ShdsldeviceFault.setStatus('current')
hdsl2ShdsldcContinuityFault = NotificationType((1, 3, 6, 1, 2, 1, 10, 48, 0, 12)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurrStatus"))
if mibBuilder.loadTexts: hdsl2ShdsldcContinuityFault.setStatus('current')
hdsl2ShdslconfigInitFailure = NotificationType((1, 3, 6, 1, 2, 1, 10, 48, 0, 13)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurrStatus"))
if mibBuilder.loadTexts: hdsl2ShdslconfigInitFailure.setStatus('current')
hdsl2ShdslprotocolInitFailure = NotificationType((1, 3, 6, 1, 2, 1, 10, 48, 0, 14)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurrStatus"))
if mibBuilder.loadTexts: hdsl2ShdslprotocolInitFailure.setStatus('current')
hdsl2ShdslnoNeighborPresent = NotificationType((1, 3, 6, 1, 2, 1, 10, 48, 0, 15)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurrStatus"))
if mibBuilder.loadTexts: hdsl2ShdslnoNeighborPresent.setStatus('current')
hdsl2ShdslLocalPowerLoss = NotificationType((1, 3, 6, 1, 2, 1, 10, 48, 0, 16)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvVendorID"))
if mibBuilder.loadTexts: hdsl2ShdslLocalPowerLoss.setStatus('current')
hdsl2ShdslConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 48, 3))
hdsl2ShdslGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 48, 3, 1))
hdsl2ShdslCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 48, 3, 2))
hdsl2ShdslLineMibCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 48, 3, 2, 1)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanStatusGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInventoryGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointConfGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurrGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2Shdsl15MinIntervalGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2Shdsl1DayIntervalGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslMaintenanceGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointAlarmConfGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslNotificationGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInventoryShdslGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanShdslStatusGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfProfileGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hdsl2ShdslLineMibCompliance = hdsl2ShdslLineMibCompliance.setStatus('deprecated')
hdsl2GshdslbisLineMibCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 48, 3, 2, 2)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanStatusGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInventoryGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointConfGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurrGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2Shdsl15MinIntervalGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2Shdsl1DayIntervalGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslMaintenanceGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointAlarmConfGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslNotificationGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInventoryShdslGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanShdslStatusGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfProfileGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslWirePairGroup"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslPayloadRateGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hdsl2GshdslbisLineMibCompliance = hdsl2GshdslbisLineMibCompliance.setStatus('current')
hdsl2ShdslSpanConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 1)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfNumRepeaters"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfProfile"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfAlarmProfile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hdsl2ShdslSpanConfGroup = hdsl2ShdslSpanConfGroup.setStatus('current')
hdsl2ShdslSpanStatusGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 2)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslStatusNumAvailRepeaters"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hdsl2ShdslSpanStatusGroup = hdsl2ShdslSpanStatusGroup.setStatus('current')
hdsl2ShdslInventoryShdslGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 3)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvTransmissionModeCapability"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hdsl2ShdslInventoryShdslGroup = hdsl2ShdslInventoryShdslGroup.setStatus('current')
hdsl2ShdslSpanShdslStatusGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 4)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslStatusMaxAttainableLineRate"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslStatusActualLineRate"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslStatusTransmissionModeCurrent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hdsl2ShdslSpanShdslStatusGroup = hdsl2ShdslSpanShdslStatusGroup.setStatus('current')
hdsl2ShdslInventoryGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 5)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvVendorID"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvVendorModelNumber"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvVendorSerialNumber"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvVendorEOCSoftwareVersion"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvStandardVersion"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvVendorListNumber"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvVendorIssueNumber"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvVendorSoftwareVersion"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvEquipmentCode"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslInvVendorOther"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hdsl2ShdslInventoryGroup = hdsl2ShdslInventoryGroup.setStatus('current')
hdsl2ShdslEndpointConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 6)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurrAtn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hdsl2ShdslEndpointConfGroup = hdsl2ShdslEndpointConfGroup.setStatus('current')
hdsl2ShdslEndpointCurrGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 7)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurrAtn"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurrSnrMgn"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurrStatus"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointES"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointSES"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCRCanomalies"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointLOSWS"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointUAS"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurr15MinTimeElapsed"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurr15MinES"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurr15MinSES"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurr15MinCRCanomalies"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurr15MinLOSWS"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurr15MinUAS"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurr1DayTimeElapsed"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurr1DayES"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurr1DaySES"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurr1DayCRCanomalies"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurr1DayLOSWS"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurr1DayUAS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hdsl2ShdslEndpointCurrGroup = hdsl2ShdslEndpointCurrGroup.setStatus('current')
hdsl2Shdsl15MinIntervalGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 8)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2Shdsl15MinIntervalES"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2Shdsl15MinIntervalSES"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2Shdsl15MinIntervalCRCanomalies"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2Shdsl15MinIntervalLOSWS"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2Shdsl15MinIntervalUAS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hdsl2Shdsl15MinIntervalGroup = hdsl2Shdsl15MinIntervalGroup.setStatus('current')
hdsl2Shdsl1DayIntervalGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 9)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2Shdsl1DayIntervalMoniSecs"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2Shdsl1DayIntervalES"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2Shdsl1DayIntervalSES"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2Shdsl1DayIntervalCRCanomalies"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2Shdsl1DayIntervalLOSWS"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2Shdsl1DayIntervalUAS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hdsl2Shdsl1DayIntervalGroup = hdsl2Shdsl1DayIntervalGroup.setStatus('current')
hdsl2ShdslMaintenanceGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 10)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslMaintLoopbackConfig"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslMaintTipRingReversal"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslMaintPowerBackOff"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslMaintSoftRestart"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslMaintLoopbackTimeout"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslMaintUnitPowerSource"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hdsl2ShdslMaintenanceGroup = hdsl2ShdslMaintenanceGroup.setStatus('current')
hdsl2ShdslEndpointAlarmConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 11)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointAlarmConfProfile"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshLoopAttenuation"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshSNRMargin"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshES"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshSES"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshCRCanomalies"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshLOSWS"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointThreshUAS"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointAlarmConfProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hdsl2ShdslEndpointAlarmConfGroup = hdsl2ShdslEndpointAlarmConfGroup.setStatus('current')
hdsl2ShdslNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 12)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslLoopAttenCrossing"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSNRMarginCrossing"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslPerfESThresh"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslPerfSESThresh"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslPerfCRCanomaliesThresh"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslPerfLOSWSThresh"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslPerfUASThresh"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanInvalidNumRepeaters"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslLoopbackFailure"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslpowerBackoff"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdsldeviceFault"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdsldcContinuityFault"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslconfigInitFailure"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslprotocolInitFailure"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslnoNeighborPresent"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslLocalPowerLoss"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hdsl2ShdslNotificationGroup = hdsl2ShdslNotificationGroup.setStatus('current')
hdsl2ShdslSpanConfProfileGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 13)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfWireInterface"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfMinLineRate"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfMaxLineRate"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfPSD"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfTransmissionMode"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfRemoteEnabled"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfPowerFeeding"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfCurrCondTargetMarginDown"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfWorstCaseTargetMarginDown"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfCurrCondTargetMarginUp"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfWorstCaseTargetMarginUp"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfUsedTargetMargins"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfReferenceClock"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfLineProbeEnable"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslSpanConfProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hdsl2ShdslSpanConfProfileGroup = hdsl2ShdslSpanConfProfileGroup.setStatus('current')
hdsl2ShdslWirePairGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 14)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurrTipRingReversal"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslEndpointCurrActivationState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hdsl2ShdslWirePairGroup = hdsl2ShdslWirePairGroup.setStatus('current')
hdsl2ShdslPayloadRateGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 48, 3, 1, 15)).setObjects(("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslStatusMaxAttainablePayloadRate"), ("HDSL2-SHDSL-LINE-MIB", "hdsl2ShdslStatusActualPayloadRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hdsl2ShdslPayloadRateGroup = hdsl2ShdslPayloadRateGroup.setStatus('current')
mibBuilder.exportSymbols("HDSL2-SHDSL-LINE-MIB", hdsl2ShdslSpanConfWorstCaseTargetMarginUp=hdsl2ShdslSpanConfWorstCaseTargetMarginUp, hdsl2ShdslLoopbackFailure=hdsl2ShdslLoopbackFailure, hdsl2ShdslStatusActualLineRate=hdsl2ShdslStatusActualLineRate, hdsl2ShdslSpanConfProfileRowStatus=hdsl2ShdslSpanConfProfileRowStatus, hdsl2Shdsl1DayIntervalGroup=hdsl2Shdsl1DayIntervalGroup, hdsl2ShdslMaintSoftRestart=hdsl2ShdslMaintSoftRestart, hdsl2ShdslInvVendorEOCSoftwareVersion=hdsl2ShdslInvVendorEOCSoftwareVersion, hdsl2ShdslInvVendorSoftwareVersion=hdsl2ShdslInvVendorSoftwareVersion, hdsl2ShdslEndpointConfGroup=hdsl2ShdslEndpointConfGroup, hdsl2ShdslInvVendorIssueNumber=hdsl2ShdslInvVendorIssueNumber, hdsl2ShdslMaintenanceGroup=hdsl2ShdslMaintenanceGroup, hdsl2ShdslInventoryShdslGroup=hdsl2ShdslInventoryShdslGroup, hdsl2ShdslEndpointCurrTipRingReversal=hdsl2ShdslEndpointCurrTipRingReversal, hdsl2ShdslPerfCRCanomaliesThresh=hdsl2ShdslPerfCRCanomaliesThresh, hdsl2ShdslEndpointCurr1DayLOSWS=hdsl2ShdslEndpointCurr1DayLOSWS, Hdsl2ShdslWirePair=Hdsl2ShdslWirePair, hdsl2ShdslSpanShdslStatusGroup=hdsl2ShdslSpanShdslStatusGroup, hdsl2Shdsl15MinIntervalCRCanomalies=hdsl2Shdsl15MinIntervalCRCanomalies, hdsl2ShdslMaintTipRingReversal=hdsl2ShdslMaintTipRingReversal, hdsl2ShdslEndpointMaintTable=hdsl2ShdslEndpointMaintTable, hdsl2ShdslprotocolInitFailure=hdsl2ShdslprotocolInitFailure, Hdsl2ShdslPerfIntervalThreshold=Hdsl2ShdslPerfIntervalThreshold, hdsl2ShdslInventoryEntry=hdsl2ShdslInventoryEntry, Hdsl2ShdslTransmissionModeType=Hdsl2ShdslTransmissionModeType, hdsl2ShdslEndpointCurr1DayES=hdsl2ShdslEndpointCurr1DayES, hdsl2ShdslEndpointES=hdsl2ShdslEndpointES, hdsl2ShdslSpanInvalidNumRepeaters=hdsl2ShdslSpanInvalidNumRepeaters, hdsl2ShdslEndpointAlarmConfProfile=hdsl2ShdslEndpointAlarmConfProfile, hdsl2ShdslSNRMarginCrossing=hdsl2ShdslSNRMarginCrossing, hdsl2ShdslEndpointCurr1DaySES=hdsl2ShdslEndpointCurr1DaySES, hdsl2ShdslSpanConfEntry=hdsl2ShdslSpanConfEntry, hdsl2ShdslEndpointSES=hdsl2ShdslEndpointSES, hdsl2ShdslSpanConfProfileGroup=hdsl2ShdslSpanConfProfileGroup, hdsl2ShdslEndpointConfEntry=hdsl2ShdslEndpointConfEntry, hdsl2Shdsl15MinIntervalLOSWS=hdsl2Shdsl15MinIntervalLOSWS, hdsl2ShdslSpanConfUsedTargetMargins=hdsl2ShdslSpanConfUsedTargetMargins, PYSNMP_MODULE_ID=hdsl2ShdslMIB, hdsl2ShdslInventoryTable=hdsl2ShdslInventoryTable, hdsl2ShdslGroups=hdsl2ShdslGroups, hdsl2ShdslNotificationGroup=hdsl2ShdslNotificationGroup, hdsl2ShdslInvVendorOther=hdsl2ShdslInvVendorOther, hdsl2ShdslEndpointAlarmConfProfileName=hdsl2ShdslEndpointAlarmConfProfileName, hdsl2ShdslNotifications=hdsl2ShdslNotifications, hdsl2ShdslMIB=hdsl2ShdslMIB, hdsl2ShdslEndpointThreshLOSWS=hdsl2ShdslEndpointThreshLOSWS, hdsl2ShdslEndpointCurrSnrMgn=hdsl2ShdslEndpointCurrSnrMgn, Hdsl2ShdslPerfTimeElapsed=Hdsl2ShdslPerfTimeElapsed, hdsl2ShdsldeviceFault=hdsl2ShdsldeviceFault, hdsl2ShdslSpanConfLineProbeEnable=hdsl2ShdslSpanConfLineProbeEnable, hdsl2ShdslSpanConfProfileName=hdsl2ShdslSpanConfProfileName, hdsl2ShdslEndpointMaintEntry=hdsl2ShdslEndpointMaintEntry, hdsl2ShdslMaintLoopbackTimeout=hdsl2ShdslMaintLoopbackTimeout, hdsl2ShdslSpanConfProfileTable=hdsl2ShdslSpanConfProfileTable, Hdsl2ShdslUnitId=Hdsl2ShdslUnitId, hdsl2ShdslEndpointCurrAtn=hdsl2ShdslEndpointCurrAtn, hdsl2Shdsl1DayIntervalEntry=hdsl2Shdsl1DayIntervalEntry, hdsl2ShdslMibObjects=hdsl2ShdslMibObjects, hdsl2ShdslSpanConfGroup=hdsl2ShdslSpanConfGroup, hdsl2ShdslLocalPowerLoss=hdsl2ShdslLocalPowerLoss, hdsl2ShdslInvVendorModelNumber=hdsl2ShdslInvVendorModelNumber, hdsl2ShdslPayloadRateGroup=hdsl2ShdslPayloadRateGroup, hdsl2ShdslSpanConfProfile=hdsl2ShdslSpanConfProfile, hdsl2ShdslStatusMaxAttainablePayloadRate=hdsl2ShdslStatusMaxAttainablePayloadRate, hdsl2ShdslSpanStatusEntry=hdsl2ShdslSpanStatusEntry, hdsl2ShdslSpanStatusTable=hdsl2ShdslSpanStatusTable, hdsl2ShdslEndpointCurr1DayTimeElapsed=hdsl2ShdslEndpointCurr1DayTimeElapsed, hdsl2ShdslInvEquipmentCode=hdsl2ShdslInvEquipmentCode, hdsl2ShdslSpanConfTable=hdsl2ShdslSpanConfTable, hdsl2ShdsldcContinuityFault=hdsl2ShdsldcContinuityFault, hdsl2ShdslLineMibCompliance=hdsl2ShdslLineMibCompliance, hdsl2ShdslEndpointCurr1DayUAS=hdsl2ShdslEndpointCurr1DayUAS, hdsl2ShdslSpanConfRemoteEnabled=hdsl2ShdslSpanConfRemoteEnabled, hdsl2ShdslEndpointAlarmConfProfileRowStatus=hdsl2ShdslEndpointAlarmConfProfileRowStatus, hdsl2ShdslCompliances=hdsl2ShdslCompliances, hdsl2ShdslEndpointLOSWS=hdsl2ShdslEndpointLOSWS, hdsl2Shdsl1DayIntervalUAS=hdsl2Shdsl1DayIntervalUAS, hdsl2ShdslSpanConfWireInterface=hdsl2ShdslSpanConfWireInterface, hdsl2ShdslEndpointCRCanomalies=hdsl2ShdslEndpointCRCanomalies, hdsl2ShdslSpanConfPowerFeeding=hdsl2ShdslSpanConfPowerFeeding, hdsl2Shdsl1DayIntervalES=hdsl2Shdsl1DayIntervalES, hdsl2ShdslEndpointCurr15MinSES=hdsl2ShdslEndpointCurr15MinSES, hdsl2Shdsl15MinIntervalGroup=hdsl2Shdsl15MinIntervalGroup, hdsl2ShdslConformance=hdsl2ShdslConformance, hdsl2ShdslInvStandardVersion=hdsl2ShdslInvStandardVersion, hdsl2ShdslnoNeighborPresent=hdsl2ShdslnoNeighborPresent, hdsl2ShdslInvTransmissionModeCapability=hdsl2ShdslInvTransmissionModeCapability, hdsl2ShdslStatusMaxAttainableLineRate=hdsl2ShdslStatusMaxAttainableLineRate, hdsl2ShdslEndpointSide=hdsl2ShdslEndpointSide, hdsl2ShdslEndpointThreshLoopAttenuation=hdsl2ShdslEndpointThreshLoopAttenuation, hdsl2GshdslbisLineMibCompliance=hdsl2GshdslbisLineMibCompliance, hdsl2ShdslEndpointCurr15MinES=hdsl2ShdslEndpointCurr15MinES, hdsl2ShdslSpanConfCurrCondTargetMarginDown=hdsl2ShdslSpanConfCurrCondTargetMarginDown, hdsl2ShdslUnitMaintEntry=hdsl2ShdslUnitMaintEntry, hdsl2ShdslEndpointCurr1DayCRCanomalies=hdsl2ShdslEndpointCurr1DayCRCanomalies, hdsl2Shdsl1DayIntervalNumber=hdsl2Shdsl1DayIntervalNumber, hdsl2ShdslEndpointAlarmConfProfileEntry=hdsl2ShdslEndpointAlarmConfProfileEntry, hdsl2ShdslInvIndex=hdsl2ShdslInvIndex, hdsl2ShdslStatusNumAvailRepeaters=hdsl2ShdslStatusNumAvailRepeaters, hdsl2Shdsl1DayIntervalMoniSecs=hdsl2Shdsl1DayIntervalMoniSecs, hdsl2ShdslEndpointWirePair=hdsl2ShdslEndpointWirePair, hdsl2ShdslEndpointThreshSES=hdsl2ShdslEndpointThreshSES, hdsl2ShdslEndpointAlarmConfProfileTable=hdsl2ShdslEndpointAlarmConfProfileTable, hdsl2ShdslWirePairGroup=hdsl2ShdslWirePairGroup, hdsl2ShdslEndpointCurr15MinLOSWS=hdsl2ShdslEndpointCurr15MinLOSWS, hdsl2ShdslEndpointCurrEntry=hdsl2ShdslEndpointCurrEntry, hdsl2Shdsl15MinIntervalNumber=hdsl2Shdsl15MinIntervalNumber, Hdsl2ShdslPerfCurrDayCount=Hdsl2ShdslPerfCurrDayCount, hdsl2ShdslEndpointCurrActivationState=hdsl2ShdslEndpointCurrActivationState, hdsl2ShdslSpanConfTransmissionMode=hdsl2ShdslSpanConfTransmissionMode, hdsl2ShdslStatusActualPayloadRate=hdsl2ShdslStatusActualPayloadRate, hdsl2ShdslInventoryGroup=hdsl2ShdslInventoryGroup, hdsl2ShdslUnitMaintTable=hdsl2ShdslUnitMaintTable, hdsl2Shdsl1DayIntervalTable=hdsl2Shdsl1DayIntervalTable, hdsl2ShdslPerfSESThresh=hdsl2ShdslPerfSESThresh, hdsl2ShdslPerfESThresh=hdsl2ShdslPerfESThresh, hdsl2ShdslconfigInitFailure=hdsl2ShdslconfigInitFailure, hdsl2ShdslEndpointThreshES=hdsl2ShdslEndpointThreshES, hdsl2ShdslEndpointThreshUAS=hdsl2ShdslEndpointThreshUAS, Hdsl2Shdsl1DayIntervalCount=Hdsl2Shdsl1DayIntervalCount, hdsl2ShdslEndpointCurrTable=hdsl2ShdslEndpointCurrTable, hdsl2Shdsl15MinIntervalTable=hdsl2Shdsl15MinIntervalTable, hdsl2ShdslSpanConfNumRepeaters=hdsl2ShdslSpanConfNumRepeaters, hdsl2Shdsl15MinIntervalSES=hdsl2Shdsl15MinIntervalSES, hdsl2ShdslEndpointCurr15MinTimeElapsed=hdsl2ShdslEndpointCurr15MinTimeElapsed, hdsl2ShdslSpanConfCurrCondTargetMarginUp=hdsl2ShdslSpanConfCurrCondTargetMarginUp, hdsl2ShdslPerfUASThresh=hdsl2ShdslPerfUASThresh, hdsl2ShdslInvVendorSerialNumber=hdsl2ShdslInvVendorSerialNumber, hdsl2ShdslSpanConfReferenceClock=hdsl2ShdslSpanConfReferenceClock, hdsl2ShdslSpanConfWorstCaseTargetMarginDown=hdsl2ShdslSpanConfWorstCaseTargetMarginDown, hdsl2ShdslSpanConfMinLineRate=hdsl2ShdslSpanConfMinLineRate, Hdsl2ShdslClockReferenceType=Hdsl2ShdslClockReferenceType, Hdsl2ShdslUnitSide=Hdsl2ShdslUnitSide, hdsl2Shdsl15MinIntervalUAS=hdsl2Shdsl15MinIntervalUAS, hdsl2ShdslInvVendorID=hdsl2ShdslInvVendorID, hdsl2ShdslEndpointCurr15MinCRCanomalies=hdsl2ShdslEndpointCurr15MinCRCanomalies, hdsl2ShdslMaintPowerBackOff=hdsl2ShdslMaintPowerBackOff, hdsl2ShdslEndpointCurrStatus=hdsl2ShdslEndpointCurrStatus, hdsl2ShdslMaintUnitPowerSource=hdsl2ShdslMaintUnitPowerSource, hdsl2ShdslSpanConfProfileEntry=hdsl2ShdslSpanConfProfileEntry, hdsl2ShdslEndpointConfTable=hdsl2ShdslEndpointConfTable, hdsl2ShdslEndpointAlarmConfGroup=hdsl2ShdslEndpointAlarmConfGroup, hdsl2ShdslStatusTransmissionModeCurrent=hdsl2ShdslStatusTransmissionModeCurrent, hdsl2ShdslLoopAttenCrossing=hdsl2ShdslLoopAttenCrossing, hdsl2Shdsl1DayIntervalSES=hdsl2Shdsl1DayIntervalSES, hdsl2ShdslSpanStatusGroup=hdsl2ShdslSpanStatusGroup, hdsl2ShdslEndpointUAS=hdsl2ShdslEndpointUAS, hdsl2Shdsl1DayIntervalLOSWS=hdsl2Shdsl1DayIntervalLOSWS, hdsl2ShdslSpanConfPSD=hdsl2ShdslSpanConfPSD, hdsl2ShdslEndpointCurrGroup=hdsl2ShdslEndpointCurrGroup, hdsl2ShdslpowerBackoff=hdsl2ShdslpowerBackoff, hdsl2ShdslInvVendorListNumber=hdsl2ShdslInvVendorListNumber, hdsl2ShdslSpanConfMaxLineRate=hdsl2ShdslSpanConfMaxLineRate, hdsl2ShdslMaintLoopbackConfig=hdsl2ShdslMaintLoopbackConfig, hdsl2ShdslPerfLOSWSThresh=hdsl2ShdslPerfLOSWSThresh, hdsl2ShdslEndpointCurr15MinUAS=hdsl2ShdslEndpointCurr15MinUAS, hdsl2Shdsl1DayIntervalCRCanomalies=hdsl2Shdsl1DayIntervalCRCanomalies, hdsl2ShdslEndpointThreshSNRMargin=hdsl2ShdslEndpointThreshSNRMargin, hdsl2Shdsl15MinIntervalEntry=hdsl2Shdsl15MinIntervalEntry, hdsl2ShdslSpanConfAlarmProfile=hdsl2ShdslSpanConfAlarmProfile, hdsl2ShdslEndpointThreshCRCanomalies=hdsl2ShdslEndpointThreshCRCanomalies, hdsl2Shdsl15MinIntervalES=hdsl2Shdsl15MinIntervalES)
