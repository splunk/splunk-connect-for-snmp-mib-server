#
# PySNMP MIB module H323TERMINAL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H323TERMINAL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:07:57 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
experimental, Bits, MibIdentifier, TimeTicks, Integer32, ObjectIdentity, Gauge32, Counter64, Counter32, Unsigned32, ModuleIdentity, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, iso = mibBuilder.importSymbols("SNMPv2-SMI", "experimental", "Bits", "MibIdentifier", "TimeTicks", "Integer32", "ObjectIdentity", "Gauge32", "Counter64", "Counter32", "Unsigned32", "ModuleIdentity", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "iso")
DisplayString, DateAndTime, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "TextualConvention")
h323TerminalMIB = ModuleIdentity((1, 3, 6, 1, 3, 323, 3))
h323TerminalMIB.setRevisions(('1998-05-25 14:00',))
if mibBuilder.loadTexts: h323TerminalMIB.setLastUpdated('9805251400Z')
if mibBuilder.loadTexts: h323TerminalMIB.setOrganization('VTEL Corp.')
h323TerminalDescr = MibIdentifier((1, 3, 6, 1, 3, 323, 3, 1))
h323TerminalCaps = MibIdentifier((1, 3, 6, 1, 3, 323, 3, 2))
h323TerminalConfig = MibIdentifier((1, 3, 6, 1, 3, 323, 3, 3))
h323TerminalControl = MibIdentifier((1, 3, 6, 1, 3, 323, 3, 4))
h323t35CountryCode = MibScalar((1, 3, 6, 1, 3, 323, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323t35CountryCode.setStatus('current')
h323t35CountryCodeExtention = MibScalar((1, 3, 6, 1, 3, 323, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323t35CountryCodeExtention.setStatus('current')
h323t35ManufacturerCode = MibScalar((1, 3, 6, 1, 3, 323, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323t35ManufacturerCode.setStatus('current')
h323TerminalUptime = MibScalar((1, 3, 6, 1, 3, 323, 3, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323TerminalUptime.setStatus('current')
h323TerminalLocalTime = MibScalar((1, 3, 6, 1, 3, 323, 3, 1, 5), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323TerminalLocalTime.setStatus('current')
h323TerminalDiagnostics = MibScalar((1, 3, 6, 1, 3, 323, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323TerminalDiagnostics.setStatus('current')
h323TerminalStatus = MibScalar((1, 3, 6, 1, 3, 323, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("callSetup", 1), ("callinProgress", 2), ("callHangUp", 3), ("idle", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323TerminalStatus.setStatus('current')
h323TerminalMaxLineRate = MibScalar((1, 3, 6, 1, 3, 323, 3, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323TerminalMaxLineRate.setStatus('current')
h323TerminalVideoCaps = MibScalar((1, 3, 6, 1, 3, 323, 3, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323TerminalVideoCaps.setStatus('current')
h323TerminalMaxVideoRate = MibScalar((1, 3, 6, 1, 3, 323, 3, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323TerminalMaxVideoRate.setStatus('current')
h323TerminalAudioCaps = MibScalar((1, 3, 6, 1, 3, 323, 3, 2, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323TerminalAudioCaps.setStatus('current')
h323TerminalDataCaps = MibScalar((1, 3, 6, 1, 3, 323, 3, 2, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323TerminalDataCaps.setStatus('current')
h323TerminalEncrypCaps = MibScalar((1, 3, 6, 1, 3, 323, 3, 2, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323TerminalEncrypCaps.setStatus('current')
h323TerminalRDCCaps = MibScalar((1, 3, 6, 1, 3, 323, 3, 2, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h323TerminalRDCCaps.setStatus('current')
h323TerminalSiteName = MibScalar((1, 3, 6, 1, 3, 323, 3, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323TerminalSiteName.setStatus('current')
h323TerminalVideoSystem = MibScalar((1, 3, 6, 1, 3, 323, 3, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ntsc", 1), ("pal", 2), ("secam", 3), ("others", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323TerminalVideoSystem.setStatus('current')
h323TerminalfType = MibScalar((1, 3, 6, 1, 3, 323, 3, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323TerminalfType.setStatus('current')
h323TerminalIPAddress = MibScalar((1, 3, 6, 1, 3, 323, 3, 3, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323TerminalIPAddress.setStatus('current')
h323TerminalAdminControl = MibScalar((1, 3, 6, 1, 3, 323, 3, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("run", 1), ("reset", 2), ("diagnose", 3), ("stop", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323TerminalAdminControl.setStatus('current')
h323TerminalCallSetUp = MibScalar((1, 3, 6, 1, 3, 323, 3, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323TerminalCallSetUp.setStatus('current')
h323TerminalCallHangup = MibScalar((1, 3, 6, 1, 3, 323, 3, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323TerminalCallHangup.setStatus('current')
h323EnableLocalLoopback = MibScalar((1, 3, 6, 1, 3, 323, 3, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323EnableLocalLoopback.setStatus('current')
h323EnableRemoteLoopback = MibScalar((1, 3, 6, 1, 3, 323, 3, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h323EnableRemoteLoopback.setStatus('current')
h323TerminalMIBConfs = MibIdentifier((1, 3, 6, 1, 3, 323, 3, 5))
h323TerminalMIBGroups = MibIdentifier((1, 3, 6, 1, 3, 323, 3, 5, 1))
h323TerminalMIBCompl = MibIdentifier((1, 3, 6, 1, 3, 323, 3, 5, 2))
h323TerminalDesrGroup = ObjectGroup((1, 3, 6, 1, 3, 323, 3, 5, 1, 1)).setObjects(("H323TERMINAL-MIB", "h323t35CountryCode"), ("H323TERMINAL-MIB", "h323t35CountryCodeExtention"), ("H323TERMINAL-MIB", "h323t35ManufacturerCode"), ("H323TERMINAL-MIB", "h323TerminalUptime"), ("H323TERMINAL-MIB", "h323TerminalLocalTime"), ("H323TERMINAL-MIB", "h323TerminalDiagnostics"), ("H323TERMINAL-MIB", "h323TerminalStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h323TerminalDesrGroup = h323TerminalDesrGroup.setStatus('current')
h323TerminalCapsGroup = ObjectGroup((1, 3, 6, 1, 3, 323, 3, 5, 1, 2)).setObjects(("H323TERMINAL-MIB", "h323TerminalMaxLineRate"), ("H323TERMINAL-MIB", "h323TerminalVideoCaps"), ("H323TERMINAL-MIB", "h323TerminalMaxVideoRate"), ("H323TERMINAL-MIB", "h323TerminalAudioCaps"), ("H323TERMINAL-MIB", "h323TerminalDataCaps"), ("H323TERMINAL-MIB", "h323TerminalEncrypCaps"), ("H323TERMINAL-MIB", "h323TerminalRDCCaps"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h323TerminalCapsGroup = h323TerminalCapsGroup.setStatus('current')
h323TerminalConfigGroup = ObjectGroup((1, 3, 6, 1, 3, 323, 3, 5, 1, 3)).setObjects(("H323TERMINAL-MIB", "h323TerminalSiteName"), ("H323TERMINAL-MIB", "h323TerminalVideoSystem"), ("H323TERMINAL-MIB", "h323TerminalfType"), ("H323TERMINAL-MIB", "h323TerminalIPAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h323TerminalConfigGroup = h323TerminalConfigGroup.setStatus('current')
h323TerminalControlGroup = ObjectGroup((1, 3, 6, 1, 3, 323, 3, 5, 1, 4)).setObjects(("H323TERMINAL-MIB", "h323TerminalAdminControl"), ("H323TERMINAL-MIB", "h323TerminalCallSetUp"), ("H323TERMINAL-MIB", "h323TerminalCallHangup"), ("H323TERMINAL-MIB", "h323EnableLocalLoopback"), ("H323TERMINAL-MIB", "h323EnableRemoteLoopback"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h323TerminalControlGroup = h323TerminalControlGroup.setStatus('current')
h323TerminalCompliance = ModuleCompliance((1, 3, 6, 1, 3, 323, 3, 5, 2, 1)).setObjects(("H323TERMINAL-MIB", "h323TerminalDesrGroup"), ("H323TERMINAL-MIB", "h323TerminalCapsGroup"), ("H323TERMINAL-MIB", "h323TerminalConfigGroup"), ("H323TERMINAL-MIB", "h323TerminalControlGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    h323TerminalCompliance = h323TerminalCompliance.setStatus('current')
mibBuilder.exportSymbols("H323TERMINAL-MIB", h323TerminalMIBGroups=h323TerminalMIBGroups, h323TerminalConfigGroup=h323TerminalConfigGroup, h323TerminalCaps=h323TerminalCaps, h323TerminalCompliance=h323TerminalCompliance, h323TerminalMIBCompl=h323TerminalMIBCompl, h323EnableLocalLoopback=h323EnableLocalLoopback, h323TerminalCapsGroup=h323TerminalCapsGroup, h323TerminalVideoCaps=h323TerminalVideoCaps, h323TerminalSiteName=h323TerminalSiteName, h323TerminalDiagnostics=h323TerminalDiagnostics, h323TerminalIPAddress=h323TerminalIPAddress, h323TerminalfType=h323TerminalfType, h323TerminalMIBConfs=h323TerminalMIBConfs, h323TerminalStatus=h323TerminalStatus, h323TerminalMaxLineRate=h323TerminalMaxLineRate, h323TerminalMaxVideoRate=h323TerminalMaxVideoRate, h323TerminalConfig=h323TerminalConfig, h323TerminalDataCaps=h323TerminalDataCaps, h323TerminalControlGroup=h323TerminalControlGroup, h323TerminalDesrGroup=h323TerminalDesrGroup, h323TerminalAdminControl=h323TerminalAdminControl, h323t35ManufacturerCode=h323t35ManufacturerCode, h323TerminalCallHangup=h323TerminalCallHangup, h323TerminalEncrypCaps=h323TerminalEncrypCaps, h323TerminalVideoSystem=h323TerminalVideoSystem, h323TerminalCallSetUp=h323TerminalCallSetUp, h323t35CountryCodeExtention=h323t35CountryCodeExtention, PYSNMP_MODULE_ID=h323TerminalMIB, h323TerminalMIB=h323TerminalMIB, h323TerminalLocalTime=h323TerminalLocalTime, h323t35CountryCode=h323t35CountryCode, h323TerminalRDCCaps=h323TerminalRDCCaps, h323TerminalUptime=h323TerminalUptime, h323TerminalDescr=h323TerminalDescr, h323TerminalAudioCaps=h323TerminalAudioCaps, h323EnableRemoteLoopback=h323EnableRemoteLoopback, h323TerminalControl=h323TerminalControl)
