#
# PySNMP MIB module Mac-Based-Authentication-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Mac-Based-Authentication-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:06:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, ObjectIdentity, iso, Counter64, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, IpAddress, Gauge32, Unsigned32, ModuleIdentity, NotificationType, Bits, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ObjectIdentity", "iso", "Counter64", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "IpAddress", "Gauge32", "Unsigned32", "ModuleIdentity", "NotificationType", "Bits", "Counter32")
DisplayString, RowStatus, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "MacAddress")
swMBAMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 35))
if mibBuilder.loadTexts: swMBAMIB.setLastUpdated('201008130000Z')
if mibBuilder.loadTexts: swMBAMIB.setOrganization('D-Link Corp.')
class PortList(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 127)

swMBACtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 35, 1))
swMBAInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 35, 2))
swMBAPortMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 35, 3))
swMBAMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 35, 4))
swMacBasedAuthState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 35, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthState.setStatus('current')
swMacBasedAuthMethod = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 35, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("radius", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthMethod.setStatus('current')
swMacBasedAuthPWD = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 35, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthPWD.setStatus('current')
swMacBasedAuthVlanName = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 35, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthVlanName.setStatus('current')
swMacBasedAuthMemberPorts = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 35, 1, 5), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthMemberPorts.setStatus('current')
swMacBasedAuthVlanNameDelState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 35, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthVlanNameDelState.setStatus('current')
swMacBasedAuthClearAllAction = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 35, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthClearAllAction.setStatus('current')
swMacBasedAuthMaxUser = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 35, 1, 9), Integer32().clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthMaxUser.setStatus('current')
swMacBasedAuthFailOver = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 35, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthFailOver.setStatus('current')
swMacBasedAuthRadiusAuthorization = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 35, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthRadiusAuthorization.setStatus('current')
swMacBasedAuthLocalAuthorization = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 35, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthLocalAuthorization.setStatus('current')
swMacBasedAuthTrapState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 35, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthTrapState.setStatus('current')
swMacBasedAuthLogState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 35, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthLogState.setStatus('current')
swMacBasedAuthPwdType = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 35, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual_string", 1), ("client_mac_address", 2))).clone('manual_string')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthPwdType.setStatus('current')
swMacBasedAuthPortInfoTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 1), )
if mibBuilder.loadTexts: swMacBasedAuthPortInfoTable.setStatus('current')
swMacBasedAuthPortInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 1, 1), ).setIndexNames((0, "Mac-Based-Authentication-MIB", "swMacBasedAuthInfoPortIndex"), (0, "Mac-Based-Authentication-MIB", "swMacBasedAuthInfoMacIndex"))
if mibBuilder.loadTexts: swMacBasedAuthPortInfoEntry.setStatus('current')
swMacBasedAuthInfoPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMacBasedAuthInfoPortIndex.setStatus('current')
swMacBasedAuthInfoMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMacBasedAuthInfoMacIndex.setStatus('current')
swMacBasedAuthInfoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unconnected", 1), ("connecting", 2), ("authenticating", 3), ("authenticated", 4), ("blocked", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMacBasedAuthInfoStatus.setStatus('current')
swMacBasedAuthInfoAssignVLANName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMacBasedAuthInfoAssignVLANName.setStatus('current')
swMacBasedAuthClearMacAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthClearMacAction.setStatus('current')
swMacBasedAuthInfoPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMacBasedAuthInfoPriority.setStatus('current')
swMacBasedAuthInfoAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 1, 1, 7), Integer32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: swMacBasedAuthInfoAgingTime.setStatus('current')
swMacBasedAuthInfoBlockTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 1, 1, 8), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: swMacBasedAuthInfoBlockTime.setStatus('current')
swMacBasedAuthInfoAssignVID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMacBasedAuthInfoAssignVID.setStatus('current')
swMacBasedAuthStateTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 2), )
if mibBuilder.loadTexts: swMacBasedAuthStateTable.setStatus('current')
swMacBasedAuthStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 2, 1), ).setIndexNames((0, "Mac-Based-Authentication-MIB", "swMacBasedAuthStatePort"), (0, "Mac-Based-Authentication-MIB", "swMacBasedAuthStateOriginalVID"), (0, "Mac-Based-Authentication-MIB", "swMacBasedAuthStateMacAddr"))
if mibBuilder.loadTexts: swMacBasedAuthStateEntry.setStatus('current')
swMacBasedAuthStatePort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: swMacBasedAuthStatePort.setStatus('current')
swMacBasedAuthStateOriginalVID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 2, 1, 2), VlanId())
if mibBuilder.loadTexts: swMacBasedAuthStateOriginalVID.setStatus('current')
swMacBasedAuthStateMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 2, 1, 3), MacAddress())
if mibBuilder.loadTexts: swMacBasedAuthStateMacAddr.setStatus('current')
swMacBasedAuthStateAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("authenticated", 1), ("authenticating", 2), ("blocked", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMacBasedAuthStateAuthStatus.setStatus('current')
swMacBasedAuthStateAssignVID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 2, 1, 5), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMacBasedAuthStateAssignVID.setStatus('current')
swMacBasedAuthStateAssignPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMacBasedAuthStateAssignPriority.setStatus('current')
swMacBasedAuthStateRemainTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 2, 1, 7), Integer32()).setUnits('minutes/seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: swMacBasedAuthStateRemainTime.setStatus('current')
swMacBasedAuthStateDelAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 2, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthStateDelAction.setStatus('current')
swMacBasedAuthPortTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 35, 3, 1), )
if mibBuilder.loadTexts: swMacBasedAuthPortTable.setStatus('current')
swMacBasedAuthPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 35, 3, 1, 1), ).setIndexNames((0, "Mac-Based-Authentication-MIB", "swMacBasedAuthPortIndex"))
if mibBuilder.loadTexts: swMacBasedAuthPortEntry.setStatus('current')
swMacBasedAuthPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMacBasedAuthPortIndex.setStatus('current')
swMacBasedAuthPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthPortState.setStatus('current')
swMacBasedAuthPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("port_based", 1), ("host_based", 2))).clone('port_based')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthPortMode.setStatus('current')
swMacBasedAuthPortAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440)).clone(1440)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthPortAgingTime.setStatus('current')
swMacBasedAuthPortBlockTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthPortBlockTime.setStatus('current')
swMacBasedAuthClearPortAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthClearPortAction.setStatus('current')
swMacBasedAuthPortMaxUser = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 3, 1, 1, 7), Integer32().clone(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swMacBasedAuthPortMaxUser.setStatus('current')
swMacBasedAuthDatabaseTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 35, 4, 1), )
if mibBuilder.loadTexts: swMacBasedAuthDatabaseTable.setStatus('current')
swMacBasedAuthDatabaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 35, 4, 1, 1), ).setIndexNames((0, "Mac-Based-Authentication-MIB", "swMacBasedAuthDatabaseMacIndex"))
if mibBuilder.loadTexts: swMacBasedAuthDatabaseEntry.setStatus('current')
swMacBasedAuthDatabaseMacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 4, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swMacBasedAuthDatabaseMacIndex.setStatus('current')
swMacBasedAuthDatabaseVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 4, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swMacBasedAuthDatabaseVlanName.setStatus('obsolete')
swMacBasedAuthDatabaseStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 4, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swMacBasedAuthDatabaseStatus.setStatus('current')
swMacBasedAuthDatabaseVID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 35, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swMacBasedAuthDatabaseVID.setStatus('current')
swMBATrap = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 35, 11))
swMBANotify = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 35, 11, 1))
swMBANotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 35, 11, 1, 0))
swMacBasedAccessControlLoggedSuccess = NotificationType((1, 3, 6, 1, 4, 1, 171, 12, 35, 11, 1, 0, 1)).setObjects(("Mac-Based-Authentication-MIB", "swMacBasedAuthInfoMacIndex"), ("Mac-Based-Authentication-MIB", "swMacBasedAuthInfoPortIndex"), ("Mac-Based-Authentication-MIB", "swMacBasedAuthVID"))
if mibBuilder.loadTexts: swMacBasedAccessControlLoggedSuccess.setStatus('current')
swMacBasedAccessControlLoggedFail = NotificationType((1, 3, 6, 1, 4, 1, 171, 12, 35, 11, 1, 0, 2)).setObjects(("Mac-Based-Authentication-MIB", "swMacBasedAuthInfoMacIndex"), ("Mac-Based-Authentication-MIB", "swMacBasedAuthInfoPortIndex"), ("Mac-Based-Authentication-MIB", "swMacBasedAuthVID"))
if mibBuilder.loadTexts: swMacBasedAccessControlLoggedFail.setStatus('current')
swMacBasedAccessControlAgesOut = NotificationType((1, 3, 6, 1, 4, 1, 171, 12, 35, 11, 1, 0, 3)).setObjects(("Mac-Based-Authentication-MIB", "swMacBasedAuthInfoMacIndex"), ("Mac-Based-Authentication-MIB", "swMacBasedAuthInfoPortIndex"), ("Mac-Based-Authentication-MIB", "swMacBasedAuthVID"))
if mibBuilder.loadTexts: swMacBasedAccessControlAgesOut.setStatus('current')
swMBANotifyBidings = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 35, 11, 1, 1))
swMacBasedAuthVID = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 35, 11, 1, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: swMacBasedAuthVID.setStatus('current')
mibBuilder.exportSymbols("Mac-Based-Authentication-MIB", swMacBasedAuthStateAssignVID=swMacBasedAuthStateAssignVID, swMBANotifyPrefix=swMBANotifyPrefix, swMBAMIB=swMBAMIB, swMacBasedAuthVlanName=swMacBasedAuthVlanName, swMacBasedAuthLocalAuthorization=swMacBasedAuthLocalAuthorization, swMacBasedAuthStatePort=swMacBasedAuthStatePort, swMacBasedAuthRadiusAuthorization=swMacBasedAuthRadiusAuthorization, swMacBasedAuthClearAllAction=swMacBasedAuthClearAllAction, swMacBasedAuthPortInfoEntry=swMacBasedAuthPortInfoEntry, swMacBasedAuthStateDelAction=swMacBasedAuthStateDelAction, swMBANotifyBidings=swMBANotifyBidings, swMacBasedAuthInfoBlockTime=swMacBasedAuthInfoBlockTime, swMBAMgmt=swMBAMgmt, swMacBasedAuthClearPortAction=swMacBasedAuthClearPortAction, swMacBasedAuthDatabaseTable=swMacBasedAuthDatabaseTable, swMacBasedAuthPortIndex=swMacBasedAuthPortIndex, swMacBasedAuthPortTable=swMacBasedAuthPortTable, swMacBasedAuthMethod=swMacBasedAuthMethod, swMacBasedAuthPWD=swMacBasedAuthPWD, swMacBasedAuthPortEntry=swMacBasedAuthPortEntry, swMacBasedAuthInfoMacIndex=swMacBasedAuthInfoMacIndex, swMacBasedAuthMaxUser=swMacBasedAuthMaxUser, swMacBasedAuthInfoPortIndex=swMacBasedAuthInfoPortIndex, swMacBasedAuthStateRemainTime=swMacBasedAuthStateRemainTime, swMacBasedAccessControlLoggedFail=swMacBasedAccessControlLoggedFail, swMacBasedAuthDatabaseStatus=swMacBasedAuthDatabaseStatus, swMacBasedAuthStateAuthStatus=swMacBasedAuthStateAuthStatus, swMacBasedAuthPortInfoTable=swMacBasedAuthPortInfoTable, PYSNMP_MODULE_ID=swMBAMIB, PortList=PortList, swMacBasedAuthFailOver=swMacBasedAuthFailOver, swMacBasedAuthDatabaseVID=swMacBasedAuthDatabaseVID, swMacBasedAuthDatabaseMacIndex=swMacBasedAuthDatabaseMacIndex, swMacBasedAuthLogState=swMacBasedAuthLogState, swMBACtrl=swMBACtrl, swMacBasedAuthState=swMacBasedAuthState, swMBATrap=swMBATrap, swMacBasedAuthPortAgingTime=swMacBasedAuthPortAgingTime, swMacBasedAuthPortMode=swMacBasedAuthPortMode, swMBANotify=swMBANotify, swMacBasedAuthInfoAssignVID=swMacBasedAuthInfoAssignVID, swMacBasedAuthStateAssignPriority=swMacBasedAuthStateAssignPriority, swMacBasedAuthInfoAssignVLANName=swMacBasedAuthInfoAssignVLANName, swMacBasedAuthStateOriginalVID=swMacBasedAuthStateOriginalVID, swMacBasedAuthMemberPorts=swMacBasedAuthMemberPorts, swMacBasedAuthPortMaxUser=swMacBasedAuthPortMaxUser, swMacBasedAuthStateEntry=swMacBasedAuthStateEntry, swMacBasedAuthClearMacAction=swMacBasedAuthClearMacAction, swMacBasedAuthPortBlockTime=swMacBasedAuthPortBlockTime, swMBAInfo=swMBAInfo, swMacBasedAccessControlAgesOut=swMacBasedAccessControlAgesOut, swMacBasedAuthVID=swMacBasedAuthVID, swMacBasedAuthInfoPriority=swMacBasedAuthInfoPriority, swMacBasedAuthPwdType=swMacBasedAuthPwdType, swMacBasedAuthPortState=swMacBasedAuthPortState, swMBAPortMgmt=swMBAPortMgmt, swMacBasedAuthStateTable=swMacBasedAuthStateTable, swMacBasedAuthVlanNameDelState=swMacBasedAuthVlanNameDelState, swMacBasedAuthDatabaseVlanName=swMacBasedAuthDatabaseVlanName, swMacBasedAuthDatabaseEntry=swMacBasedAuthDatabaseEntry, swMacBasedAuthInfoStatus=swMacBasedAuthInfoStatus, swMacBasedAuthInfoAgingTime=swMacBasedAuthInfoAgingTime, swMacBasedAuthTrapState=swMacBasedAuthTrapState, swMacBasedAuthStateMacAddr=swMacBasedAuthStateMacAddr, swMacBasedAccessControlLoggedSuccess=swMacBasedAccessControlLoggedSuccess)
