#
# PySNMP MIB module PDN-ADSL-SELT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-ADSL-SELT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:29:00 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
pdn_interfaces, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdn-interfaces")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
iso, Bits, Counter64, Counter32, Integer32, ModuleIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier, TimeTicks, ObjectIdentity, Unsigned32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Bits", "Counter64", "Counter32", "Integer32", "ModuleIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier", "TimeTicks", "ObjectIdentity", "Unsigned32", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
pdnAdslSeltMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31))
pdnAdslSeltMIB.setRevisions(('2005-03-28 00:00', '2005-03-10 00:00', '2004-12-02 00:00',))
if mibBuilder.loadTexts: pdnAdslSeltMIB.setLastUpdated('200403280000Z')
if mibBuilder.loadTexts: pdnAdslSeltMIB.setOrganization('Paradyne Networks MIB Working Group Other information about group editing the MIB')
pdnAdslSeltNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 0))
pdnAdslSeltObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1))
pdnAdslSeltAFNs = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 2))
pdnAdslSeltConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 3))
class PdnSeltTypes(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("loopCharacterization", 1), ("loopNoiseFloor", 2))

pdnAdslSeltWireSize = MibScalar((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("awg", 1), ("metric", 2), ("metricJapan", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnAdslSeltWireSize.setStatus('current')
pdnAdslSeltTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 2), )
if mibBuilder.loadTexts: pdnAdslSeltTable.setStatus('current')
pdnAdslSeltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "PDN-ADSL-SELT-MIB", "pdnAdslSeltType"))
if mibBuilder.loadTexts: pdnAdslSeltEntry.setStatus('current')
pdnAdslSeltType = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 2, 1, 1), PdnSeltTypes())
if mibBuilder.loadTexts: pdnAdslSeltType.setStatus('current')
pdnAdslSeltCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noOp", 1), ("start", 2), ("stop", 3), ("clearResults", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnAdslSeltCmd.setStatus('current')
pdnAdslSeltStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("inProgress", 1), ("stoppedInProgress", 2), ("complete", 3), ("notStarted", 4), ("resultsCleared", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAdslSeltStatus.setStatus('current')
pdnAdslSeltDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 2, 1, 4), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pdnAdslSeltDuration.setStatus('current')
pdnAdslSeltTimeLeft = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 2, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAdslSeltTimeLeft.setStatus('current')
pdnAdslSeltLcTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 3), )
if mibBuilder.loadTexts: pdnAdslSeltLcTable.setStatus('current')
pdnAdslSeltLcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "PDN-ADSL-SELT-MIB", "pdnAdslSeltLcSegmentIndex"))
if mibBuilder.loadTexts: pdnAdslSeltLcEntry.setStatus('current')
pdnAdslSeltLcSegmentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9)))
if mibBuilder.loadTexts: pdnAdslSeltLcSegmentIndex.setStatus('current')
pdnAdslSeltLcSegmentLength = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAdslSeltLcSegmentLength.setStatus('current')
pdnAdslSeltLcSegmentGauge = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("unknown", 1), ("awg26", 2), ("awg24", 3), ("awg22", 4), ("awg19", 5), ("metric32", 10), ("metric40", 11), ("metric50", 12), ("metric63", 13), ("metric90", 14), ("metricJapan32", 20), ("metricJapan40", 21), ("metricJapan50", 22), ("metricJapan65", 23), ("metricJapan90", 24)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAdslSeltLcSegmentGauge.setStatus('current')
pdnAdslSeltLcSegmentType = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notPresent", 1), ("inline", 2), ("bridgeTap", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAdslSeltLcSegmentType.setStatus('current')
pdnAdslSeltLnfTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 4), )
if mibBuilder.loadTexts: pdnAdslSeltLnfTable.setStatus('current')
pdnAdslSeltLnfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "PDN-ADSL-SELT-MIB", "pdnAdslSeltLnfSubCarrierIndex"))
if mibBuilder.loadTexts: pdnAdslSeltLnfEntry.setStatus('current')
pdnAdslSeltLnfSubCarrierIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: pdnAdslSeltLnfSubCarrierIndex.setStatus('current')
pdnAdslSeltLnfPeakPsd = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAdslSeltLnfPeakPsd.setStatus('current')
pdnAdslSeltLnfTotalPsd = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAdslSeltLnfTotalPsd.setStatus('current')
pdnAdslSeltLnfSignalPsd = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65534))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnAdslSeltLnfSignalPsd.setStatus('current')
pdnAdslSeltCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 3, 1))
pdnAdslSeltGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 3, 2))
pdnAdslSeltMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 3, 1, 1)).setObjects(("PDN-ADSL-SELT-MIB", "pdnAdslSeltGroup"), ("PDN-ADSL-SELT-MIB", "pdnAdslSeltLcGroup"), ("PDN-ADSL-SELT-MIB", "pdnAdslSeltLnfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnAdslSeltMIBCompliance = pdnAdslSeltMIBCompliance.setStatus('current')
pdnAdslSeltObjGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 3, 2, 1))
pdnAdslSeltAfnGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 3, 2, 2))
pdnAdslSeltNtfyGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 3, 2, 3))
pdnAdslSeltGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 3, 2, 1, 1)).setObjects(("PDN-ADSL-SELT-MIB", "pdnAdslSeltCmd"), ("PDN-ADSL-SELT-MIB", "pdnAdslSeltStatus"), ("PDN-ADSL-SELT-MIB", "pdnAdslSeltWireSize"), ("PDN-ADSL-SELT-MIB", "pdnAdslSeltDuration"), ("PDN-ADSL-SELT-MIB", "pdnAdslSeltTimeLeft"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnAdslSeltGroup = pdnAdslSeltGroup.setStatus('current')
pdnAdslSeltLcGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 3, 2, 1, 2)).setObjects(("PDN-ADSL-SELT-MIB", "pdnAdslSeltLcSegmentLength"), ("PDN-ADSL-SELT-MIB", "pdnAdslSeltLcSegmentGauge"), ("PDN-ADSL-SELT-MIB", "pdnAdslSeltLcSegmentType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnAdslSeltLcGroup = pdnAdslSeltLcGroup.setStatus('current')
pdnAdslSeltLnfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 31, 3, 2, 1, 3)).setObjects(("PDN-ADSL-SELT-MIB", "pdnAdslSeltLnfPeakPsd"), ("PDN-ADSL-SELT-MIB", "pdnAdslSeltLnfTotalPsd"), ("PDN-ADSL-SELT-MIB", "pdnAdslSeltLnfSignalPsd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnAdslSeltLnfGroup = pdnAdslSeltLnfGroup.setStatus('current')
mibBuilder.exportSymbols("PDN-ADSL-SELT-MIB", pdnAdslSeltObjects=pdnAdslSeltObjects, pdnAdslSeltDuration=pdnAdslSeltDuration, pdnAdslSeltLcEntry=pdnAdslSeltLcEntry, pdnAdslSeltStatus=pdnAdslSeltStatus, pdnAdslSeltMIBCompliance=pdnAdslSeltMIBCompliance, pdnAdslSeltLnfSignalPsd=pdnAdslSeltLnfSignalPsd, pdnAdslSeltCompliances=pdnAdslSeltCompliances, pdnAdslSeltLnfGroup=pdnAdslSeltLnfGroup, pdnAdslSeltMIB=pdnAdslSeltMIB, pdnAdslSeltGroups=pdnAdslSeltGroups, pdnAdslSeltLnfEntry=pdnAdslSeltLnfEntry, pdnAdslSeltObjGroups=pdnAdslSeltObjGroups, pdnAdslSeltLcSegmentLength=pdnAdslSeltLcSegmentLength, pdnAdslSeltTimeLeft=pdnAdslSeltTimeLeft, pdnAdslSeltLnfSubCarrierIndex=pdnAdslSeltLnfSubCarrierIndex, pdnAdslSeltConformance=pdnAdslSeltConformance, pdnAdslSeltLcSegmentGauge=pdnAdslSeltLcSegmentGauge, pdnAdslSeltType=pdnAdslSeltType, pdnAdslSeltLcGroup=pdnAdslSeltLcGroup, pdnAdslSeltLnfTotalPsd=pdnAdslSeltLnfTotalPsd, pdnAdslSeltTable=pdnAdslSeltTable, pdnAdslSeltWireSize=pdnAdslSeltWireSize, pdnAdslSeltGroup=pdnAdslSeltGroup, PYSNMP_MODULE_ID=pdnAdslSeltMIB, pdnAdslSeltEntry=pdnAdslSeltEntry, pdnAdslSeltAFNs=pdnAdslSeltAFNs, PdnSeltTypes=PdnSeltTypes, pdnAdslSeltLnfTable=pdnAdslSeltLnfTable, pdnAdslSeltNtfyGroups=pdnAdslSeltNtfyGroups, pdnAdslSeltCmd=pdnAdslSeltCmd, pdnAdslSeltLcTable=pdnAdslSeltLcTable, pdnAdslSeltLnfPeakPsd=pdnAdslSeltLnfPeakPsd, pdnAdslSeltNotifications=pdnAdslSeltNotifications, pdnAdslSeltLcSegmentIndex=pdnAdslSeltLcSegmentIndex, pdnAdslSeltAfnGroups=pdnAdslSeltAfnGroups, pdnAdslSeltLcSegmentType=pdnAdslSeltLcSegmentType)
