#
# PySNMP MIB module CISCO-CLUSTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-CLUSTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:36:13 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Gauge32, TimeTicks, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, NotificationType, ObjectIdentity, ModuleIdentity, Counter64, Unsigned32, MibIdentifier, Integer32, iso, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "TimeTicks", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "NotificationType", "ObjectIdentity", "ModuleIdentity", "Counter64", "Unsigned32", "MibIdentifier", "Integer32", "iso", "Bits")
TAddress, TextualConvention, MacAddress, TDomain, DisplayString, TimeStamp, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TAddress", "TextualConvention", "MacAddress", "TDomain", "DisplayString", "TimeStamp", "RowStatus")
ciscoClusterMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 134))
ciscoClusterMIB.setRevisions(('2005-11-18 00:00', '1999-07-28 00:00',))
if mibBuilder.loadTexts: ciscoClusterMIB.setLastUpdated('200511180000Z')
if mibBuilder.loadTexts: ciscoClusterMIB.setOrganization('Cisco Systems Inc.')
ciscoClusterMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 134, 1))
ccStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 1))
ccMember = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 2))
ccCandidate = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 3))
ccStatusClusterName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccStatusClusterName.setStatus('current')
ccStatusClusterMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("commandDevice", 1), ("memberDevice", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccStatusClusterMode.setStatus('current')
ccStatusCommanderTDomain = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 1, 3), TDomain()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccStatusCommanderTDomain.setStatus('current')
ccStatusCommanderTAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 1, 4), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccStatusCommanderTAddress.setStatus('current')
ccStatusCommanderMacAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccStatusCommanderMacAddress.setStatus('current')
ccStatusTimeOfLastChange = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccStatusTimeOfLastChange.setStatus('current')
ccStatusLastNMSAddMemberTDomain = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 1, 7), TDomain()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccStatusLastNMSAddMemberTDomain.setStatus('current')
ccStatusLastNMSAddMemberTAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 1, 8), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccStatusLastNMSAddMemberTAddress.setStatus('current')
ccStatusLastFailureAddMember = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("password", 2), ("overmax", 3), ("noncandidate", 4), ("memberNumberInUse", 5), ("unreachable", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccStatusLastFailureAddMember.setStatus('current')
ccStatusMaxNumberOfMembers = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccStatusMaxNumberOfMembers.setStatus('current')
ccStatusMemberOrder = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 1, 11), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccStatusMemberOrder.setStatus('current')
ccMemberTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 2, 1), )
if mibBuilder.loadTexts: ccMemberTable.setStatus('current')
ccMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-CLUSTER-MIB", "ccMemberMacAddress"))
if mibBuilder.loadTexts: ccMemberEntry.setStatus('current')
ccMemberMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 2, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: ccMemberMacAddress.setStatus('current')
ccMemberNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccMemberNumber.setStatus('current')
ccMemberOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccMemberOperStatus.setStatus('current')
ccMemberEntityLogicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccMemberEntityLogicalIndex.setStatus('current')
ccMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccMemberRowStatus.setStatus('current')
ccCandidateTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 3, 1), )
if mibBuilder.loadTexts: ccCandidateTable.setStatus('current')
ccCandidateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-CLUSTER-MIB", "ccCandidateMacAddress"))
if mibBuilder.loadTexts: ccCandidateEntry.setStatus('current')
ccCandidateMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 134, 1, 3, 1, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccCandidateMacAddress.setStatus('current')
ciscoClusterMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 134, 2))
ciscoClusterMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 134, 2, 0))
ccStatusMemberStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 134, 2, 0, 1)).setObjects(("CISCO-CLUSTER-MIB", "ccMemberOperStatus"))
if mibBuilder.loadTexts: ccStatusMemberStatusChange.setStatus('current')
ciscoClusterMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 134, 3))
ciscoClusterMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 134, 3, 1))
ciscoClusterMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 134, 3, 2))
ciscoClusterCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 134, 3, 1, 1)).setObjects(("CISCO-CLUSTER-MIB", "ciscoClusterStatusGroup"), ("CISCO-CLUSTER-MIB", "ciscoClusterMemberStatusGroup"), ("CISCO-CLUSTER-MIB", "ciscoClusterMemberGroup"), ("CISCO-CLUSTER-MIB", "ciscoClusterCandidateGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoClusterCompliance = ciscoClusterCompliance.setStatus('deprecated')
ciscoClusterComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 134, 3, 1, 2)).setObjects(("CISCO-CLUSTER-MIB", "ciscoClusterStatusGroup"), ("CISCO-CLUSTER-MIB", "ciscoClusterMemberStatusGroup"), ("CISCO-CLUSTER-MIB", "ciscoClusterMemberGroup"), ("CISCO-CLUSTER-MIB", "ciscoClusterCandidateGroup"), ("CISCO-CLUSTER-MIB", "ciscoClusterNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoClusterComplianceRev1 = ciscoClusterComplianceRev1.setStatus('current')
ciscoClusterStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 134, 3, 2, 1)).setObjects(("CISCO-CLUSTER-MIB", "ccStatusTimeOfLastChange"), ("CISCO-CLUSTER-MIB", "ccStatusLastNMSAddMemberTAddress"), ("CISCO-CLUSTER-MIB", "ccStatusLastNMSAddMemberTDomain"), ("CISCO-CLUSTER-MIB", "ccStatusLastFailureAddMember"), ("CISCO-CLUSTER-MIB", "ccStatusMaxNumberOfMembers"), ("CISCO-CLUSTER-MIB", "ccStatusMemberOrder"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoClusterStatusGroup = ciscoClusterStatusGroup.setStatus('current')
ciscoClusterMemberStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 134, 3, 2, 2)).setObjects(("CISCO-CLUSTER-MIB", "ccStatusClusterName"), ("CISCO-CLUSTER-MIB", "ccStatusClusterMode"), ("CISCO-CLUSTER-MIB", "ccStatusCommanderTDomain"), ("CISCO-CLUSTER-MIB", "ccStatusCommanderTAddress"), ("CISCO-CLUSTER-MIB", "ccStatusCommanderMacAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoClusterMemberStatusGroup = ciscoClusterMemberStatusGroup.setStatus('current')
ciscoClusterMemberGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 134, 3, 2, 3)).setObjects(("CISCO-CLUSTER-MIB", "ccMemberOperStatus"), ("CISCO-CLUSTER-MIB", "ccMemberNumber"), ("CISCO-CLUSTER-MIB", "ccMemberEntityLogicalIndex"), ("CISCO-CLUSTER-MIB", "ccMemberRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoClusterMemberGroup = ciscoClusterMemberGroup.setStatus('current')
ciscoClusterCandidateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 134, 3, 2, 4)).setObjects(("CISCO-CLUSTER-MIB", "ccCandidateMacAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoClusterCandidateGroup = ciscoClusterCandidateGroup.setStatus('current')
ciscoClusterNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 134, 3, 2, 5)).setObjects(("CISCO-CLUSTER-MIB", "ccStatusMemberStatusChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoClusterNotificationGroup = ciscoClusterNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-CLUSTER-MIB", ciscoClusterStatusGroup=ciscoClusterStatusGroup, ccMemberMacAddress=ccMemberMacAddress, ccMember=ccMember, ccCandidate=ccCandidate, ccMemberNumber=ccMemberNumber, ciscoClusterMIBCompliances=ciscoClusterMIBCompliances, ccStatusMaxNumberOfMembers=ccStatusMaxNumberOfMembers, ciscoClusterNotificationGroup=ciscoClusterNotificationGroup, ciscoClusterCompliance=ciscoClusterCompliance, PYSNMP_MODULE_ID=ciscoClusterMIB, ciscoClusterMemberGroup=ciscoClusterMemberGroup, ccMemberEntityLogicalIndex=ccMemberEntityLogicalIndex, ccStatusClusterName=ccStatusClusterName, ccMemberTable=ccMemberTable, ccStatusCommanderTDomain=ccStatusCommanderTDomain, ccStatusCommanderMacAddress=ccStatusCommanderMacAddress, ccStatusLastFailureAddMember=ccStatusLastFailureAddMember, ccStatusMemberOrder=ccStatusMemberOrder, ciscoClusterCandidateGroup=ciscoClusterCandidateGroup, ciscoClusterComplianceRev1=ciscoClusterComplianceRev1, ccStatusClusterMode=ccStatusClusterMode, ccStatusTimeOfLastChange=ccStatusTimeOfLastChange, ccMemberOperStatus=ccMemberOperStatus, ccMemberEntry=ccMemberEntry, ccStatusCommanderTAddress=ccStatusCommanderTAddress, ciscoClusterMIBNotifications=ciscoClusterMIBNotifications, ccStatusLastNMSAddMemberTAddress=ccStatusLastNMSAddMemberTAddress, ccMemberRowStatus=ccMemberRowStatus, ccCandidateEntry=ccCandidateEntry, ciscoClusterMIBObjects=ciscoClusterMIBObjects, ciscoClusterMemberStatusGroup=ciscoClusterMemberStatusGroup, ccCandidateMacAddress=ccCandidateMacAddress, ccCandidateTable=ccCandidateTable, ciscoClusterMIBNotificationsPrefix=ciscoClusterMIBNotificationsPrefix, ccStatus=ccStatus, ccStatusMemberStatusChange=ccStatusMemberStatusChange, ciscoClusterMIB=ciscoClusterMIB, ccStatusLastNMSAddMemberTDomain=ccStatusLastNMSAddMemberTDomain, ciscoClusterMIBGroups=ciscoClusterMIBGroups, ciscoClusterMIBConformance=ciscoClusterMIBConformance)
