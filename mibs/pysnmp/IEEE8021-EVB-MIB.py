#
# PySNMP MIB module IEEE8021-EVB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/IEEE8021-EVB-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:40:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ieee8021BridgePhyPort, = mibBuilder.importSymbols("IEEE8021-BRIDGE-MIB", "ieee8021BridgePhyPort")
ieee802dot1mibs, IEEE8021PbbComponentIdentifier, IEEE8021BridgePortNumber = mibBuilder.importSymbols("IEEE8021-TC-MIB", "ieee802dot1mibs", "IEEE8021PbbComponentIdentifier", "IEEE8021BridgePortNumber")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
iso, Unsigned32, Gauge32, MibIdentifier, ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, TimeTicks, ObjectIdentity, NotificationType, IpAddress, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Unsigned32", "Gauge32", "MibIdentifier", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "TimeTicks", "ObjectIdentity", "NotificationType", "IpAddress", "Integer32")
StorageType, MacAddress, TruthValue, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "MacAddress", "TruthValue", "DisplayString", "RowStatus", "TextualConvention")
ieee8021BridgeEvbMib = ModuleIdentity((1, 3, 111, 2, 802, 1, 1, 24))
ieee8021BridgeEvbMib.setRevisions(('2014-12-15 00:00', '2012-02-15 00:00',))
if mibBuilder.loadTexts: ieee8021BridgeEvbMib.setLastUpdated('201412150000Z')
if mibBuilder.loadTexts: ieee8021BridgeEvbMib.setOrganization('IEEE 802.1 Working Group')
ieee8021BridgeEvbNotifications = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 24, 0))
ieee8021BridgeEvbObjects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 24, 1))
ieee8021BridgeEvbConformance = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 24, 2))
ieee8021BridgeEvbSys = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 24, 1, 1))
ieee8021BridgeEvbSysType = MibScalar((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("evbBridge", 1), ("evbStation", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysType.setStatus('current')
ieee8021BridgeEvbSysNumExternalPorts = MibScalar((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysNumExternalPorts.setStatus('current')
ieee8021BridgeEvbSysEvbLldpTxEnable = MibScalar((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysEvbLldpTxEnable.setStatus('current')
ieee8021BridgeEvbSysEvbLldpManual = MibScalar((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysEvbLldpManual.setStatus('current')
ieee8021BridgeEvbSysEvbLldpGidCapable = MibScalar((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysEvbLldpGidCapable.setStatus('current')
ieee8021BridgeEvbSysEcpAckTimer = MibScalar((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysEcpAckTimer.setStatus('deprecated')
ieee8021BridgeEvbSysEcpDfltAckTimerExp = MibScalar((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysEcpDfltAckTimerExp.setStatus('current')
ieee8021BridgeEvbSysEcpMaxRetries = MibScalar((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysEcpMaxRetries.setStatus('current')
ieee8021BridgeEvbSysVdpDfltRsrcWaitDelay = MibScalar((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysVdpDfltRsrcWaitDelay.setStatus('deprecated')
ieee8021BridgeEvbSysVdpDfltRsrcWaitDelayExp = MibScalar((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysVdpDfltRsrcWaitDelayExp.setStatus('current')
ieee8021BridgeEvbSysVdpDfltReinitKeepAlive = MibScalar((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysVdpDfltReinitKeepAlive.setStatus('deprecated')
ieee8021BridgeEvbSysVdpDfltReinitKeepAliveExp = MibScalar((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbSysVdpDfltReinitKeepAliveExp.setStatus('current')
ieee8021BridgeEvbSbpTable = MibTable((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 10), )
if mibBuilder.loadTexts: ieee8021BridgeEvbSbpTable.setStatus('current')
ieee8021BridgeEvbSbpEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 10, 1), ).setIndexNames((0, "IEEE8021-EVB-MIB", "ieee8021BridgeEvbSbpComponentID"), (0, "IEEE8021-EVB-MIB", "ieee8021BridgeEvbSbpPortNumber"))
if mibBuilder.loadTexts: ieee8021BridgeEvbSbpEntry.setStatus('current')
ieee8021BridgeEvbSbpComponentID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 10, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021BridgeEvbSbpComponentID.setStatus('current')
ieee8021BridgeEvbSbpPortNumber = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 10, 1, 2), IEEE8021BridgePortNumber())
if mibBuilder.loadTexts: ieee8021BridgeEvbSbpPortNumber.setStatus('current')
ieee8021BridgeEvbSbpLldpManual = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 10, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbSbpLldpManual.setStatus('current')
ieee8021BridgeEvbSbpVdpOperRsrcWaitDelay = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 10, 1, 4), Unsigned32()).setUnits('micro-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbSbpVdpOperRsrcWaitDelay.setStatus('deprecated')
ieee8021BridgeEvbSbpVdpOperRsrcWaitDelayExp = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbSbpVdpOperRsrcWaitDelayExp.setStatus('current')
ieee8021BridgeEvbSbpVdpOperReinitKeepAlive = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 10, 1, 5), Unsigned32()).setUnits('micro-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbSbpVdpOperReinitKeepAlive.setStatus('deprecated')
ieee8021BridgeEvbSbpVdpOperReinitKeepAliveExp = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbSbpVdpOperReinitKeepAliveExp.setStatus('current')
ieee8021BridgeEvbSbpVdpOperToutKeepAlive = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 1, 10, 1, 6), Unsigned32()).setUnits('micro-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbSbpVdpOperToutKeepAlive.setStatus('current')
ieee8021BridgeEvbVSIDBObjects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 24, 1, 2))
ieee8021BridgeEvbVSIDBTable = MibTable((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1), )
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIDBTable.setStatus('current')
ieee8021BridgeEvbVSIDBEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1), ).setIndexNames((0, "IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIComponentID"), (0, "IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIPortNumber"), (0, "IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIIDType"), (0, "IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIID"))
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIDBEntry.setStatus('current')
ieee8021BridgeEvbVSIComponentID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIComponentID.setStatus('current')
ieee8021BridgeEvbVSIPortNumber = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 2), IEEE8021BridgePortNumber())
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIPortNumber.setStatus('current')
ieee8021BridgeEvbVSIIDType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("vsiidIpv4", 1), ("vsiidIpv6", 2), ("vsiidMAC", 3), ("vsiidLocal", 4), ("vsiidUUID", 5))))
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIIDType.setStatus('current')
ieee8021BridgeEvbVSIID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16))
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIID.setStatus('current')
ieee8021BridgeEvbVSITimeSinceCreate = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 5), Unsigned32()).setUnits('centi-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVSITimeSinceCreate.setStatus('current')
ieee8021BridgeEvbVsiVdpOperCmd = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("preAssociate", 1), ("preAssociateWithRsrcReservation", 2), ("associate", 3), ("deAssociate", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVsiVdpOperCmd.setStatus('current')
ieee8021BridgeEvbVsiOperRevert = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVsiOperRevert.setStatus('current')
ieee8021BridgeEvbVsiOperHard = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVsiOperHard.setStatus('current')
ieee8021BridgeEvbVsiOperReason = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 9), Bits().clone(namedValues=NamedValues(("success", 0), ("invalidFormat", 1), ("insufficientResources", 2), ("otherfailure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVsiOperReason.setStatus('current')
ieee8021BridgeEvbVSIMgrID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIMgrID.setStatus('deprecated')
ieee8021BridgeEvbVSIType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIType.setStatus('current')
ieee8021BridgeEvbVSITypeVersion = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVSITypeVersion.setStatus('current')
ieee8021BridgeEvbVSIMvFormat = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("basic", 1), ("partial", 2), ("vlanOnly", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIMvFormat.setStatus('deprecated')
ieee8021BridgeEvbVSINumMACs = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVSINumMACs.setStatus('current')
ieee8021BridgeEvbVDPMachineState = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("preAssociate", 1), ("preAssociateWithRsrcReservation", 2), ("associate", 3), ("deAssociate", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVDPMachineState.setStatus('current')
ieee8021BridgeEvbVDPCommandsSucceeded = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVDPCommandsSucceeded.setStatus('current')
ieee8021BridgeEvbVDPCommandsFailed = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVDPCommandsFailed.setStatus('current')
ieee8021BridgeEvbVDPCommandReverts = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVDPCommandReverts.setStatus('current')
ieee8021BridgeEvbVDPCounterDiscontinuity = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 19), TimeTicks()).setUnits('hundredths of a second').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVDPCounterDiscontinuity.setStatus('current')
ieee8021BridgeEvbVSIMgrID16 = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIMgrID16.setStatus('current')
ieee8021BridgeEvbVSIFilterFormat = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("vid", 1), ("macVid", 2), ("groupidVid", 3), ("groupidMacVid", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIFilterFormat.setStatus('current')
ieee8021BridgeEvbVSIDBMacTable = MibTable((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 2), )
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIDBMacTable.setStatus('current')
ieee8021BridgeEvbVSIDBMacEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 2, 1), ).setIndexNames((0, "IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIComponentID"), (0, "IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIPortNumber"), (0, "IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIIDType"), (0, "IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIID"), (0, "IEEE8021-EVB-MIB", "ieee8021BridgeEvbGroupID"), (0, "IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIMac"), (0, "IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIVlanId"))
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIDBMacEntry.setStatus('current')
ieee8021BridgeEvbGroupID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ieee8021BridgeEvbGroupID.setStatus('current')
ieee8021BridgeEvbVSIMac = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 2, 1, 2), MacAddress())
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIMac.setStatus('current')
ieee8021BridgeEvbVSIVlanId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 2, 2, 1, 3), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbVSIVlanId.setStatus('current')
ieee8021BridgeEvbSChannelObjects = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 24, 1, 3))
ieee8021BridgeEvbUAPConfigTable = MibTable((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 1), )
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPConfigTable.setStatus('current')
ieee8021BridgeEvbUAPConfigEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 1, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgePhyPort"))
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPConfigEntry.setStatus('current')
ieee8021BridgeEvbUAPComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 1, 1, 1), IEEE8021PbbComponentIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPComponentId.setStatus('current')
ieee8021BridgeEvbUAPPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 1, 1, 2), IEEE8021BridgePortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPPort.setStatus('current')
ieee8021BridgeEvbUapConfigIfIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 1, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbUapConfigIfIndex.setStatus('current')
ieee8021BridgeEvbUAPSchCdcpAdminEnable = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPSchCdcpAdminEnable.setStatus('current')
ieee8021BridgeEvbUAPSchAdminCDCPRole = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cdcpRoleB", 1), ("cdcpRoleS", 2))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPSchAdminCDCPRole.setStatus('current')
ieee8021BridgeEvbUAPSchAdminCDCPChanCap = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 167))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPSchAdminCDCPChanCap.setStatus('current')
ieee8021BridgeEvbUAPSchOperCDCPChanCap = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 167))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPSchOperCDCPChanCap.setStatus('current')
ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolLow = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 1, 1, 8), VlanIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolLow.setStatus('current')
ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolHigh = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 1, 1, 9), VlanIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolHigh.setStatus('current')
ieee8021BridgeEvbUAPSchOperState = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("running", 1), ("notRunning", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPSchOperState.setStatus('current')
ieee8021BridgeEvbSchCdcpRemoteEnabled = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbSchCdcpRemoteEnabled.setStatus('current')
ieee8021BridgeEvbSchCdcpRemoteRole = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cdcpRoleB", 1), ("cdcpRoleS", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbSchCdcpRemoteRole.setStatus('current')
ieee8021BridgeEvbUAPConfigStorageType = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 1, 1, 13), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPConfigStorageType.setStatus('current')
ieee8021BridgeEvbUAPConfigRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 1, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbUAPConfigRowStatus.setStatus('current')
ieee8021BridgeEvbCAPConfigTable = MibTable((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 2), )
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPConfigTable.setStatus('current')
ieee8021BridgeEvbCAPConfigEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 2, 1), ).setIndexNames((0, "IEEE8021-BRIDGE-MIB", "ieee8021BridgePhyPort"), (0, "IEEE8021-EVB-MIB", "ieee8021BridgeEvbSchID"))
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPConfigEntry.setStatus('current')
ieee8021BridgeEvbSchID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: ieee8021BridgeEvbSchID.setStatus('current')
ieee8021BridgeEvbCAPComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 2, 1, 2), IEEE8021PbbComponentIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPComponentId.setStatus('current')
ieee8021BridgeEvbCapConfigIfIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 2, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbCapConfigIfIndex.setStatus('current')
ieee8021BridgeEvbCAPPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 2, 1, 4), IEEE8021BridgePortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPPort.setStatus('current')
ieee8021BridgeEvbCAPSChannelID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPSChannelID.setStatus('current')
ieee8021BridgeEvbCAPAssociateSBPOrURPCompID = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 2, 1, 6), IEEE8021PbbComponentIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPAssociateSBPOrURPCompID.setStatus('current')
ieee8021BridgeEvbCAPAssociateSBPOrURPPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 2, 1, 7), IEEE8021BridgePortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPAssociateSBPOrURPPort.setStatus('current')
ieee8021BridgeEvbCAPRowStatus = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ieee8021BridgeEvbCAPRowStatus.setStatus('current')
ieee8021BridgeEvbURPTable = MibTable((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 3), )
if mibBuilder.loadTexts: ieee8021BridgeEvbURPTable.setStatus('current')
ieee8021BridgeEvbURPEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 3, 1), ).setIndexNames((0, "IEEE8021-EVB-MIB", "ieee8021BridgeEvbURPComponentId"), (0, "IEEE8021-EVB-MIB", "ieee8021BridgeEvbURPPort"))
if mibBuilder.loadTexts: ieee8021BridgeEvbURPEntry.setStatus('current')
ieee8021BridgeEvbURPComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 3, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021BridgeEvbURPComponentId.setStatus('current')
ieee8021BridgeEvbURPPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 3, 1, 2), IEEE8021BridgePortNumber())
if mibBuilder.loadTexts: ieee8021BridgeEvbURPPort.setStatus('current')
ieee8021BridgeEvbURPIfIndex = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 3, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbURPIfIndex.setStatus('current')
ieee8021BridgeEvbURPBindToISSPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 3, 1, 4), IEEE8021BridgePortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbURPBindToISSPort.setStatus('current')
ieee8021BridgeEvbURPLldpManual = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 3, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbURPLldpManual.setStatus('current')
ieee8021BridgeEvbURPVdpOperRsrcWaitDelay = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 3, 1, 9), Unsigned32()).setUnits('micro-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbURPVdpOperRsrcWaitDelay.setStatus('deprecated')
ieee8021BridgeEvbURPVdpOperRsrcWaitDelayExp = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 3, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbURPVdpOperRsrcWaitDelayExp.setStatus('current')
ieee8021BridgeEvbURPVdpOperRespWaitDelay = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 3, 1, 10), Unsigned32()).setUnits('micro-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbURPVdpOperRespWaitDelay.setStatus('current')
ieee8021BridgeEvbURPVdpOperReinitKeepAlive = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 3, 1, 11), Unsigned32()).setUnits('micro-seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbURPVdpOperReinitKeepAlive.setStatus('deprecated')
ieee8021BridgeEvbURPVdpOperReinitKeepAliveExp = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 3, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ieee8021BridgeEvbURPVdpOperReinitKeepAliveExp.setStatus('current')
ieee8021BridgeEvbEcpTable = MibTable((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 4), )
if mibBuilder.loadTexts: ieee8021BridgeEvbEcpTable.setStatus('current')
ieee8021BridgeEvbEcpEntry = MibTableRow((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 4, 1), ).setIndexNames((0, "IEEE8021-EVB-MIB", "ieee8021BridgeEvbEcpComponentId"), (0, "IEEE8021-EVB-MIB", "ieee8021BridgeEvbEcpPort"))
if mibBuilder.loadTexts: ieee8021BridgeEvbEcpEntry.setStatus('current')
ieee8021BridgeEvbEcpComponentId = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 4, 1, 1), IEEE8021PbbComponentIdentifier())
if mibBuilder.loadTexts: ieee8021BridgeEvbEcpComponentId.setStatus('current')
ieee8021BridgeEvbEcpPort = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 4, 1, 2), IEEE8021BridgePortNumber())
if mibBuilder.loadTexts: ieee8021BridgeEvbEcpPort.setStatus('current')
ieee8021BridgeEvbEcpOperAckTimerInit = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 4, 1, 3), Unsigned32()).setUnits('micro-seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbEcpOperAckTimerInit.setStatus('deprecated')
ieee8021BridgeEvbEcpOperAckTimerInitExp = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 4, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbEcpOperAckTimerInitExp.setStatus('current')
ieee8021BridgeEvbEcpOperMaxRetries = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbEcpOperMaxRetries.setStatus('current')
ieee8021BridgeEvbEcpTxFrameCount = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbEcpTxFrameCount.setStatus('current')
ieee8021BridgeEvbEcpTxRetryCount = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbEcpTxRetryCount.setStatus('current')
ieee8021BridgeEvbEcpTxFailures = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbEcpTxFailures.setStatus('current')
ieee8021BridgeEvbEcpRxFrameCount = MibTableColumn((1, 3, 111, 2, 802, 1, 1, 24, 1, 3, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ieee8021BridgeEvbEcpRxFrameCount.setStatus('current')
ieee8021BridgeEvbGroups = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 24, 2, 1))
ieee8021BridgeEvbCompliances = MibIdentifier((1, 3, 111, 2, 802, 1, 1, 24, 2, 2))
ieee8021BridgeEvbSysGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 24, 2, 1, 1)).setObjects(("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysType"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysNumExternalPorts"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysEvbLldpTxEnable"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysEvbLldpGidCapable"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysEvbLldpManual"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysEcpAckTimer"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysEcpMaxRetries"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysVdpDfltRsrcWaitDelay"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysVdpDfltReinitKeepAlive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbSysGroup = ieee8021BridgeEvbSysGroup.setStatus('deprecated')
ieee8021BridgeEvbSbpGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 24, 2, 1, 3)).setObjects(("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSbpLldpManual"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSbpVdpOperRsrcWaitDelay"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSbpVdpOperReinitKeepAlive"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSbpVdpOperToutKeepAlive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbSbpGroup = ieee8021BridgeEvbSbpGroup.setStatus('deprecated')
ieee8021BridgeEvbVSIDBGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 24, 2, 1, 4)).setObjects(("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSITimeSinceCreate"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVsiVdpOperCmd"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVsiOperRevert"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVsiOperHard"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVsiOperReason"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIMgrID"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIType"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSITypeVersion"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIMvFormat"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSINumMACs"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVDPMachineState"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVDPCommandsSucceeded"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVDPCommandsFailed"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVDPCommandReverts"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVDPCounterDiscontinuity"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIVlanId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbVSIDBGroup = ieee8021BridgeEvbVSIDBGroup.setStatus('deprecated')
ieee8021BridgeEvbUAPGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 24, 2, 1, 5)).setObjects(("IEEE8021-EVB-MIB", "ieee8021BridgeEvbUAPComponentId"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbUAPPort"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbUapConfigIfIndex"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbUAPSchCdcpAdminEnable"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbUAPSchAdminCDCPRole"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbUAPSchAdminCDCPChanCap"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbUAPSchOperCDCPChanCap"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolLow"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolHigh"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbUAPSchOperState"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSchCdcpRemoteEnabled"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSchCdcpRemoteRole"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbUAPConfigStorageType"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbUAPConfigRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbUAPGroup = ieee8021BridgeEvbUAPGroup.setStatus('current')
ieee8021BridgeEvbCAPConfigGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 24, 2, 1, 6)).setObjects(("IEEE8021-EVB-MIB", "ieee8021BridgeEvbCAPComponentId"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbCapConfigIfIndex"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbCAPPort"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbCAPSChannelID"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbCAPAssociateSBPOrURPCompID"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbCAPAssociateSBPOrURPPort"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbCAPRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbCAPConfigGroup = ieee8021BridgeEvbCAPConfigGroup.setStatus('current')
ieee8021BridgeEvbsURPGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 24, 2, 1, 7)).setObjects(("IEEE8021-EVB-MIB", "ieee8021BridgeEvbURPIfIndex"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbURPBindToISSPort"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbURPLldpManual"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbURPVdpOperRsrcWaitDelay"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbURPVdpOperRespWaitDelay"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbURPVdpOperReinitKeepAlive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbsURPGroup = ieee8021BridgeEvbsURPGroup.setStatus('deprecated')
ieee8021BridgeEvbEcpGroup = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 24, 2, 1, 8)).setObjects(("IEEE8021-EVB-MIB", "ieee8021BridgeEvbEcpOperAckTimerInit"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbEcpOperMaxRetries"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbEcpTxFrameCount"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbEcpTxRetryCount"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbEcpTxFailures"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbEcpRxFrameCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbEcpGroup = ieee8021BridgeEvbEcpGroup.setStatus('deprecated')
ieee8021BridgeEvbSysV2Group = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 24, 2, 1, 9)).setObjects(("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysType"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysNumExternalPorts"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysEvbLldpTxEnable"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysEvbLldpGidCapable"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysEvbLldpManual"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysEcpDfltAckTimerExp"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysEcpMaxRetries"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysVdpDfltRsrcWaitDelayExp"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysVdpDfltReinitKeepAliveExp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbSysV2Group = ieee8021BridgeEvbSysV2Group.setStatus('current')
ieee8021BridgeEvbSbpV2Group = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 24, 2, 1, 10)).setObjects(("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSbpLldpManual"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSbpVdpOperRsrcWaitDelayExp"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSbpVdpOperReinitKeepAliveExp"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSbpVdpOperToutKeepAlive"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbSbpV2Group = ieee8021BridgeEvbSbpV2Group.setStatus('current')
ieee8021BridgeEvbVSIDBV2Group = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 24, 2, 1, 11)).setObjects(("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSITimeSinceCreate"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVsiVdpOperCmd"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVsiOperRevert"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVsiOperHard"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVsiOperReason"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIMgrID16"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIType"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSITypeVersion"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIFilterFormat"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSINumMACs"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVDPMachineState"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVDPCommandsSucceeded"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVDPCommandsFailed"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVDPCommandReverts"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVDPCounterDiscontinuity"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIVlanId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbVSIDBV2Group = ieee8021BridgeEvbVSIDBV2Group.setStatus('current')
ieee8021BridgeEvbsURPV2Group = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 24, 2, 1, 12)).setObjects(("IEEE8021-EVB-MIB", "ieee8021BridgeEvbURPIfIndex"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbURPBindToISSPort"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbURPLldpManual"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbURPVdpOperRsrcWaitDelayExp"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbURPVdpOperRespWaitDelay"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbURPVdpOperReinitKeepAliveExp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbsURPV2Group = ieee8021BridgeEvbsURPV2Group.setStatus('current')
ieee8021BridgeEvbEcpV2Group = ObjectGroup((1, 3, 111, 2, 802, 1, 1, 24, 2, 1, 13)).setObjects(("IEEE8021-EVB-MIB", "ieee8021BridgeEvbEcpOperAckTimerInitExp"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbEcpOperMaxRetries"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbEcpTxFrameCount"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbEcpTxRetryCount"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbEcpTxFailures"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbEcpRxFrameCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbEcpV2Group = ieee8021BridgeEvbEcpV2Group.setStatus('current')
ieee8021BridgeEvbbCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 24, 2, 2, 1)).setObjects(("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysGroup"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIDBGroup"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSbpGroup"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbEcpGroup"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbUAPGroup"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbCAPConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbbCompliance = ieee8021BridgeEvbbCompliance.setStatus('deprecated')
ieee8021BridgeEvbsCompliance = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 24, 2, 2, 2)).setObjects(("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysGroup"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIDBGroup"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbsURPGroup"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbEcpGroup"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbUAPGroup"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbCAPConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbsCompliance = ieee8021BridgeEvbsCompliance.setStatus('deprecated')
ieee8021BridgeEvbbComplianceV2 = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 24, 2, 2, 3)).setObjects(("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysV2Group"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIDBV2Group"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSbpV2Group"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbEcpV2Group"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbUAPGroup"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbCAPConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbbComplianceV2 = ieee8021BridgeEvbbComplianceV2.setStatus('current')
ieee8021BridgeEvbsComplianceV2 = ModuleCompliance((1, 3, 111, 2, 802, 1, 1, 24, 2, 2, 4)).setObjects(("IEEE8021-EVB-MIB", "ieee8021BridgeEvbSysV2Group"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbVSIDBV2Group"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbsURPV2Group"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbEcpV2Group"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbUAPGroup"), ("IEEE8021-EVB-MIB", "ieee8021BridgeEvbCAPConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ieee8021BridgeEvbsComplianceV2 = ieee8021BridgeEvbsComplianceV2.setStatus('current')
mibBuilder.exportSymbols("IEEE8021-EVB-MIB", ieee8021BridgeEvbURPVdpOperReinitKeepAliveExp=ieee8021BridgeEvbURPVdpOperReinitKeepAliveExp, ieee8021BridgeEvbbCompliance=ieee8021BridgeEvbbCompliance, ieee8021BridgeEvbURPBindToISSPort=ieee8021BridgeEvbURPBindToISSPort, ieee8021BridgeEvbUAPComponentId=ieee8021BridgeEvbUAPComponentId, ieee8021BridgeEvbVSIDBTable=ieee8021BridgeEvbVSIDBTable, ieee8021BridgeEvbConformance=ieee8021BridgeEvbConformance, ieee8021BridgeEvbNotifications=ieee8021BridgeEvbNotifications, ieee8021BridgeEvbUAPSchCdcpAdminEnable=ieee8021BridgeEvbUAPSchCdcpAdminEnable, ieee8021BridgeEvbSysVdpDfltReinitKeepAlive=ieee8021BridgeEvbSysVdpDfltReinitKeepAlive, ieee8021BridgeEvbSbpVdpOperRsrcWaitDelay=ieee8021BridgeEvbSbpVdpOperRsrcWaitDelay, ieee8021BridgeEvbVsiOperHard=ieee8021BridgeEvbVsiOperHard, ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolLow=ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolLow, ieee8021BridgeEvbEcpOperAckTimerInitExp=ieee8021BridgeEvbEcpOperAckTimerInitExp, ieee8021BridgeEvbVSIDBObjects=ieee8021BridgeEvbVSIDBObjects, ieee8021BridgeEvbVsiVdpOperCmd=ieee8021BridgeEvbVsiVdpOperCmd, ieee8021BridgeEvbVSIMac=ieee8021BridgeEvbVSIMac, ieee8021BridgeEvbsURPV2Group=ieee8021BridgeEvbsURPV2Group, ieee8021BridgeEvbVSIComponentID=ieee8021BridgeEvbVSIComponentID, ieee8021BridgeEvbURPPort=ieee8021BridgeEvbURPPort, ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolHigh=ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolHigh, ieee8021BridgeEvbSysEvbLldpTxEnable=ieee8021BridgeEvbSysEvbLldpTxEnable, ieee8021BridgeEvbEcpTxFrameCount=ieee8021BridgeEvbEcpTxFrameCount, ieee8021BridgeEvbVSIDBV2Group=ieee8021BridgeEvbVSIDBV2Group, ieee8021BridgeEvbSysType=ieee8021BridgeEvbSysType, ieee8021BridgeEvbVDPCounterDiscontinuity=ieee8021BridgeEvbVDPCounterDiscontinuity, ieee8021BridgeEvbVSIVlanId=ieee8021BridgeEvbVSIVlanId, ieee8021BridgeEvbUAPPort=ieee8021BridgeEvbUAPPort, ieee8021BridgeEvbUAPConfigRowStatus=ieee8021BridgeEvbUAPConfigRowStatus, ieee8021BridgeEvbUAPConfigTable=ieee8021BridgeEvbUAPConfigTable, ieee8021BridgeEvbSbpVdpOperReinitKeepAlive=ieee8021BridgeEvbSbpVdpOperReinitKeepAlive, ieee8021BridgeEvbURPComponentId=ieee8021BridgeEvbURPComponentId, ieee8021BridgeEvbSysV2Group=ieee8021BridgeEvbSysV2Group, ieee8021BridgeEvbVSIDBMacTable=ieee8021BridgeEvbVSIDBMacTable, ieee8021BridgeEvbEcpRxFrameCount=ieee8021BridgeEvbEcpRxFrameCount, ieee8021BridgeEvbVSIType=ieee8021BridgeEvbVSIType, ieee8021BridgeEvbSbpLldpManual=ieee8021BridgeEvbSbpLldpManual, ieee8021BridgeEvbEcpComponentId=ieee8021BridgeEvbEcpComponentId, ieee8021BridgeEvbSysVdpDfltRsrcWaitDelayExp=ieee8021BridgeEvbSysVdpDfltRsrcWaitDelayExp, ieee8021BridgeEvbGroups=ieee8021BridgeEvbGroups, ieee8021BridgeEvbEcpOperMaxRetries=ieee8021BridgeEvbEcpOperMaxRetries, ieee8021BridgeEvbVDPCommandReverts=ieee8021BridgeEvbVDPCommandReverts, ieee8021BridgeEvbVSIFilterFormat=ieee8021BridgeEvbVSIFilterFormat, ieee8021BridgeEvbSbpVdpOperRsrcWaitDelayExp=ieee8021BridgeEvbSbpVdpOperRsrcWaitDelayExp, ieee8021BridgeEvbCAPSChannelID=ieee8021BridgeEvbCAPSChannelID, ieee8021BridgeEvbEcpTxRetryCount=ieee8021BridgeEvbEcpTxRetryCount, ieee8021BridgeEvbGroupID=ieee8021BridgeEvbGroupID, ieee8021BridgeEvbURPIfIndex=ieee8021BridgeEvbURPIfIndex, ieee8021BridgeEvbsComplianceV2=ieee8021BridgeEvbsComplianceV2, ieee8021BridgeEvbVSIMgrID16=ieee8021BridgeEvbVSIMgrID16, ieee8021BridgeEvbSbpVdpOperReinitKeepAliveExp=ieee8021BridgeEvbSbpVdpOperReinitKeepAliveExp, ieee8021BridgeEvbSbpGroup=ieee8021BridgeEvbSbpGroup, ieee8021BridgeEvbSbpEntry=ieee8021BridgeEvbSbpEntry, ieee8021BridgeEvbURPVdpOperRsrcWaitDelayExp=ieee8021BridgeEvbURPVdpOperRsrcWaitDelayExp, ieee8021BridgeEvbSbpTable=ieee8021BridgeEvbSbpTable, ieee8021BridgeEvbUAPSchAdminCDCPRole=ieee8021BridgeEvbUAPSchAdminCDCPRole, ieee8021BridgeEvbVSIID=ieee8021BridgeEvbVSIID, ieee8021BridgeEvbSysVdpDfltReinitKeepAliveExp=ieee8021BridgeEvbSysVdpDfltReinitKeepAliveExp, ieee8021BridgeEvbSchID=ieee8021BridgeEvbSchID, ieee8021BridgeEvbCAPConfigEntry=ieee8021BridgeEvbCAPConfigEntry, ieee8021BridgeEvbMib=ieee8021BridgeEvbMib, ieee8021BridgeEvbSysVdpDfltRsrcWaitDelay=ieee8021BridgeEvbSysVdpDfltRsrcWaitDelay, ieee8021BridgeEvbCAPConfigGroup=ieee8021BridgeEvbCAPConfigGroup, ieee8021BridgeEvbVSIDBMacEntry=ieee8021BridgeEvbVSIDBMacEntry, ieee8021BridgeEvbUAPConfigStorageType=ieee8021BridgeEvbUAPConfigStorageType, ieee8021BridgeEvbVSITypeVersion=ieee8021BridgeEvbVSITypeVersion, ieee8021BridgeEvbVSINumMACs=ieee8021BridgeEvbVSINumMACs, ieee8021BridgeEvbSysEvbLldpManual=ieee8021BridgeEvbSysEvbLldpManual, ieee8021BridgeEvbURPEntry=ieee8021BridgeEvbURPEntry, ieee8021BridgeEvbEcpV2Group=ieee8021BridgeEvbEcpV2Group, ieee8021BridgeEvbEcpOperAckTimerInit=ieee8021BridgeEvbEcpOperAckTimerInit, ieee8021BridgeEvbVDPCommandsFailed=ieee8021BridgeEvbVDPCommandsFailed, ieee8021BridgeEvbCAPComponentId=ieee8021BridgeEvbCAPComponentId, ieee8021BridgeEvbVSIMgrID=ieee8021BridgeEvbVSIMgrID, ieee8021BridgeEvbEcpTxFailures=ieee8021BridgeEvbEcpTxFailures, ieee8021BridgeEvbUAPSchAdminCDCPChanCap=ieee8021BridgeEvbUAPSchAdminCDCPChanCap, ieee8021BridgeEvbUAPSchOperCDCPChanCap=ieee8021BridgeEvbUAPSchOperCDCPChanCap, ieee8021BridgeEvbCAPAssociateSBPOrURPPort=ieee8021BridgeEvbCAPAssociateSBPOrURPPort, ieee8021BridgeEvbVSITimeSinceCreate=ieee8021BridgeEvbVSITimeSinceCreate, ieee8021BridgeEvbVSIIDType=ieee8021BridgeEvbVSIIDType, ieee8021BridgeEvbEcpGroup=ieee8021BridgeEvbEcpGroup, ieee8021BridgeEvbSchCdcpRemoteEnabled=ieee8021BridgeEvbSchCdcpRemoteEnabled, ieee8021BridgeEvbEcpTable=ieee8021BridgeEvbEcpTable, ieee8021BridgeEvbSysEvbLldpGidCapable=ieee8021BridgeEvbSysEvbLldpGidCapable, ieee8021BridgeEvbSysEcpAckTimer=ieee8021BridgeEvbSysEcpAckTimer, ieee8021BridgeEvbSysEcpMaxRetries=ieee8021BridgeEvbSysEcpMaxRetries, ieee8021BridgeEvbSys=ieee8021BridgeEvbSys, ieee8021BridgeEvbVSIMvFormat=ieee8021BridgeEvbVSIMvFormat, ieee8021BridgeEvbsCompliance=ieee8021BridgeEvbsCompliance, ieee8021BridgeEvbURPVdpOperRespWaitDelay=ieee8021BridgeEvbURPVdpOperRespWaitDelay, ieee8021BridgeEvbVDPCommandsSucceeded=ieee8021BridgeEvbVDPCommandsSucceeded, ieee8021BridgeEvbCAPRowStatus=ieee8021BridgeEvbCAPRowStatus, ieee8021BridgeEvbEcpPort=ieee8021BridgeEvbEcpPort, ieee8021BridgeEvbURPVdpOperReinitKeepAlive=ieee8021BridgeEvbURPVdpOperReinitKeepAlive, ieee8021BridgeEvbVsiOperReason=ieee8021BridgeEvbVsiOperReason, PYSNMP_MODULE_ID=ieee8021BridgeEvbMib, ieee8021BridgeEvbSbpComponentID=ieee8021BridgeEvbSbpComponentID, ieee8021BridgeEvbURPLldpManual=ieee8021BridgeEvbURPLldpManual, ieee8021BridgeEvbCAPPort=ieee8021BridgeEvbCAPPort, ieee8021BridgeEvbSbpVdpOperToutKeepAlive=ieee8021BridgeEvbSbpVdpOperToutKeepAlive, ieee8021BridgeEvbCompliances=ieee8021BridgeEvbCompliances, ieee8021BridgeEvbbComplianceV2=ieee8021BridgeEvbbComplianceV2, ieee8021BridgeEvbSbpPortNumber=ieee8021BridgeEvbSbpPortNumber, ieee8021BridgeEvbSysEcpDfltAckTimerExp=ieee8021BridgeEvbSysEcpDfltAckTimerExp, ieee8021BridgeEvbURPTable=ieee8021BridgeEvbURPTable, ieee8021BridgeEvbVSIDBGroup=ieee8021BridgeEvbVSIDBGroup, ieee8021BridgeEvbSChannelObjects=ieee8021BridgeEvbSChannelObjects, ieee8021BridgeEvbURPVdpOperRsrcWaitDelay=ieee8021BridgeEvbURPVdpOperRsrcWaitDelay, ieee8021BridgeEvbUAPConfigEntry=ieee8021BridgeEvbUAPConfigEntry, ieee8021BridgeEvbCAPAssociateSBPOrURPCompID=ieee8021BridgeEvbCAPAssociateSBPOrURPCompID, ieee8021BridgeEvbUAPGroup=ieee8021BridgeEvbUAPGroup, ieee8021BridgeEvbSchCdcpRemoteRole=ieee8021BridgeEvbSchCdcpRemoteRole, ieee8021BridgeEvbUAPSchOperState=ieee8021BridgeEvbUAPSchOperState, ieee8021BridgeEvbVsiOperRevert=ieee8021BridgeEvbVsiOperRevert, ieee8021BridgeEvbVDPMachineState=ieee8021BridgeEvbVDPMachineState, ieee8021BridgeEvbObjects=ieee8021BridgeEvbObjects, ieee8021BridgeEvbVSIDBEntry=ieee8021BridgeEvbVSIDBEntry, ieee8021BridgeEvbSysGroup=ieee8021BridgeEvbSysGroup, ieee8021BridgeEvbEcpEntry=ieee8021BridgeEvbEcpEntry, ieee8021BridgeEvbVSIPortNumber=ieee8021BridgeEvbVSIPortNumber, ieee8021BridgeEvbCAPConfigTable=ieee8021BridgeEvbCAPConfigTable, ieee8021BridgeEvbSbpV2Group=ieee8021BridgeEvbSbpV2Group, ieee8021BridgeEvbSysNumExternalPorts=ieee8021BridgeEvbSysNumExternalPorts, ieee8021BridgeEvbsURPGroup=ieee8021BridgeEvbsURPGroup, ieee8021BridgeEvbCapConfigIfIndex=ieee8021BridgeEvbCapConfigIfIndex, ieee8021BridgeEvbUapConfigIfIndex=ieee8021BridgeEvbUapConfigIfIndex)
