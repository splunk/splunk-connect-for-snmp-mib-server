#
# PySNMP MIB module WINDOWS-NT-PERFORMANCE (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WINDOWS-NT-PERFORMANCE
# Produced by pysmi-0.3.4 at Mon Apr 29 21:29:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Gauge32, ModuleIdentity, Counter32, ObjectIdentity, NotificationType, Unsigned32, Bits, IpAddress, enterprises, TimeTicks, MibIdentifier, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Gauge32", "ModuleIdentity", "Counter32", "ObjectIdentity", "NotificationType", "Unsigned32", "Bits", "IpAddress", "enterprises", "TimeTicks", "MibIdentifier", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
microsoft = MibIdentifier((1, 3, 6, 1, 4, 1, 311))
software = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1))
systems = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1))
os = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3))
winnt = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1))
performance = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1))
memory = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1))
memoryAvailableBytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryAvailableBytes.setStatus('mandatory')
memoryCommittedBytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCommittedBytes.setStatus('mandatory')
memoryCommitLimit = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCommitLimit.setStatus('mandatory')
memoryPageFaultsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPageFaultsPerSec.setStatus('mandatory')
memoryWriteCopiesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryWriteCopiesPerSec.setStatus('mandatory')
memoryTransitionFaultsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryTransitionFaultsPerSec.setStatus('mandatory')
memoryCacheFaultsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCacheFaultsPerSec.setStatus('mandatory')
memoryDemandZeroFaultsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryDemandZeroFaultsPerSec.setStatus('mandatory')
memoryPagesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPagesPerSec.setStatus('mandatory')
memoryPagesInputPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPagesInputPerSec.setStatus('mandatory')
memoryPageReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPageReadsPerSec.setStatus('mandatory')
memoryPagesOutputPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPagesOutputPerSec.setStatus('mandatory')
memoryPageWritesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPageWritesPerSec.setStatus('mandatory')
memoryPoolPagedBytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPoolPagedBytes.setStatus('mandatory')
memoryPoolNonpagedBytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPoolNonpagedBytes.setStatus('mandatory')
memoryPoolPagedAllocs = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPoolPagedAllocs.setStatus('mandatory')
memoryPoolNonpagedAllocs = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPoolNonpagedAllocs.setStatus('mandatory')
memoryFreeSystemPageTableEntries = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryFreeSystemPageTableEntries.setStatus('mandatory')
memoryCacheBytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCacheBytes.setStatus('mandatory')
memoryCacheBytesPeak = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryCacheBytesPeak.setStatus('mandatory')
memoryPoolPagedResidentBytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPoolPagedResidentBytes.setStatus('mandatory')
memorySystemCodeTotalBytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemCodeTotalBytes.setStatus('mandatory')
memorySystemCodeResidentBytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemCodeResidentBytes.setStatus('mandatory')
memorySystemDriverTotalBytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemDriverTotalBytes.setStatus('mandatory')
memorySystemDriverResidentBytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemDriverResidentBytes.setStatus('mandatory')
memorySystemCacheResidentBytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memorySystemCacheResidentBytes.setStatus('mandatory')
memoryPercentCommittedBytesInUse = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: memoryPercentCommittedBytesInUse.setStatus('mandatory')
cpuprocessorTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2), )
if mibBuilder.loadTexts: cpuprocessorTable.setStatus('mandatory')
cpuprocessorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1), ).setIndexNames((0, "WINDOWS-NT-PERFORMANCE", "cpuprocessorIndex"))
if mibBuilder.loadTexts: cpuprocessorEntry.setStatus('mandatory')
cpuprocessorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuprocessorIndex.setStatus('mandatory')
cpuprocessorInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuprocessorInstance.setStatus('mandatory')
cpuPercentProcessorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPercentProcessorTime.setStatus('mandatory')
cpuPercentUserTime = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPercentUserTime.setStatus('mandatory')
cpuPercentPrivilegedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPercentPrivilegedTime.setStatus('mandatory')
cpuInterruptsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuInterruptsPerSec.setStatus('mandatory')
cpuPercentDPCTime = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPercentDPCTime.setStatus('mandatory')
cpuPercentInterruptTime = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPercentInterruptTime.setStatus('mandatory')
cpuDPCsQueuedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuDPCsQueuedPerSec.setStatus('mandatory')
cpuDPCRate = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuDPCRate.setStatus('mandatory')
cpuDPCBypassesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuDPCBypassesPerSec.setStatus('mandatory')
cpuAPCBypassesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuAPCBypassesPerSec.setStatus('mandatory')
netnetwork_InterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3), ).setLabel("netnetwork-InterfaceTable")
if mibBuilder.loadTexts: netnetwork_InterfaceTable.setStatus('mandatory')
netnetwork_InterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1), ).setLabel("netnetwork-InterfaceEntry").setIndexNames((0, "WINDOWS-NT-PERFORMANCE", "netnetwork-InterfaceIndex"))
if mibBuilder.loadTexts: netnetwork_InterfaceEntry.setStatus('mandatory')
netnetwork_InterfaceIndex = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 1), Integer32()).setLabel("netnetwork-InterfaceIndex").setMaxAccess("readonly")
if mibBuilder.loadTexts: netnetwork_InterfaceIndex.setStatus('mandatory')
netnetwork_InterfaceInstance = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 2), DisplayString()).setLabel("netnetwork-InterfaceInstance").setMaxAccess("readonly")
if mibBuilder.loadTexts: netnetwork_InterfaceInstance.setStatus('mandatory')
netBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBytesTotalPerSec.setStatus('mandatory')
netPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsPerSec.setStatus('mandatory')
netPacketsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsReceivedPerSec.setStatus('mandatory')
netPacketsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsSentPerSec.setStatus('mandatory')
netCurrentBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netCurrentBandwidth.setStatus('mandatory')
netBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBytesReceivedPerSec.setStatus('mandatory')
netPacketsReceivedUnicastPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsReceivedUnicastPerSec.setStatus('mandatory')
netPacketsReceivedNon_UnicastPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 10), Counter32()).setLabel("netPacketsReceivedNon-UnicastPerSec").setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsReceivedNon_UnicastPerSec.setStatus('mandatory')
netPacketsReceivedDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsReceivedDiscarded.setStatus('mandatory')
netPacketsReceivedErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsReceivedErrors.setStatus('mandatory')
netPacketsReceivedUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsReceivedUnknown.setStatus('mandatory')
netBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netBytesSentPerSec.setStatus('mandatory')
netPacketsSentUnicastPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsSentUnicastPerSec.setStatus('mandatory')
netPacketsSentNon_UnicastPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 16), Counter32()).setLabel("netPacketsSentNon-UnicastPerSec").setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsSentNon_UnicastPerSec.setStatus('mandatory')
netPacketsOutboundDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsOutboundDiscarded.setStatus('mandatory')
netPacketsOutboundErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netPacketsOutboundErrors.setStatus('mandatory')
netOutputQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 3, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netOutputQueueLength.setStatus('mandatory')
pdiskphysicalDiskTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4), )
if mibBuilder.loadTexts: pdiskphysicalDiskTable.setStatus('mandatory')
pdiskphysicalDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1), ).setIndexNames((0, "WINDOWS-NT-PERFORMANCE", "pdiskphysicalDiskIndex"))
if mibBuilder.loadTexts: pdiskphysicalDiskEntry.setStatus('mandatory')
pdiskphysicalDiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdiskphysicalDiskIndex.setStatus('mandatory')
pdiskphysicalDiskInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdiskphysicalDiskInstance.setStatus('mandatory')
pdiskCurrentDiskQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdiskCurrentDiskQueueLength.setStatus('mandatory')
pdiskPercentDiskTime = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdiskPercentDiskTime.setStatus('mandatory')
pdiskAvgDiskQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdiskAvgDiskQueueLength.setStatus('mandatory')
pdiskPercentDiskReadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdiskPercentDiskReadTime.setStatus('mandatory')
pdiskAvgDiskReadQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdiskAvgDiskReadQueueLength.setStatus('mandatory')
pdiskPercentDiskWriteTime = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdiskPercentDiskWriteTime.setStatus('mandatory')
pdiskAvgDiskWriteQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdiskAvgDiskWriteQueueLength.setStatus('mandatory')
pdiskAvgDiskSecPerTransfer = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdiskAvgDiskSecPerTransfer.setStatus('mandatory')
pdiskAvgDiskSecPerRead = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdiskAvgDiskSecPerRead.setStatus('mandatory')
pdiskAvgDiskSecPerWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdiskAvgDiskSecPerWrite.setStatus('mandatory')
pdiskDiskTransfersPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdiskDiskTransfersPerSec.setStatus('mandatory')
pdiskDiskReadsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdiskDiskReadsPerSec.setStatus('mandatory')
pdiskDiskWritesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdiskDiskWritesPerSec.setStatus('mandatory')
pdiskDiskBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdiskDiskBytesPerSec.setStatus('mandatory')
pdiskDiskReadBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdiskDiskReadBytesPerSec.setStatus('mandatory')
pdiskDiskWriteBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 4, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdiskDiskWriteBytesPerSec.setStatus('mandatory')
ldisklogicalDiskTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5), )
if mibBuilder.loadTexts: ldisklogicalDiskTable.setStatus('mandatory')
ldisklogicalDiskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1), ).setIndexNames((0, "WINDOWS-NT-PERFORMANCE", "ldisklogicalDiskIndex"))
if mibBuilder.loadTexts: ldisklogicalDiskEntry.setStatus('mandatory')
ldisklogicalDiskIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldisklogicalDiskIndex.setStatus('mandatory')
ldisklogicalDiskInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldisklogicalDiskInstance.setStatus('mandatory')
ldiskPercentFreeSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldiskPercentFreeSpace.setStatus('mandatory')
ldiskFreeMegabytes = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldiskFreeMegabytes.setStatus('mandatory')
ldiskCurrentDiskQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldiskCurrentDiskQueueLength.setStatus('mandatory')
ldiskPercentDiskTime = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldiskPercentDiskTime.setStatus('mandatory')
ldiskAvgDiskQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldiskAvgDiskQueueLength.setStatus('mandatory')
ldiskPercentDiskReadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldiskPercentDiskReadTime.setStatus('mandatory')
ldiskAvgDiskReadQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldiskAvgDiskReadQueueLength.setStatus('mandatory')
ldiskPercentDiskWriteTime = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldiskPercentDiskWriteTime.setStatus('mandatory')
ldiskAvgDiskWriteQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldiskAvgDiskWriteQueueLength.setStatus('mandatory')
ldiskAvgDiskSecPerTransfer = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldiskAvgDiskSecPerTransfer.setStatus('mandatory')
ldiskAvgDiskSecPerRead = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldiskAvgDiskSecPerRead.setStatus('mandatory')
ldiskAvgDiskSecPerWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldiskAvgDiskSecPerWrite.setStatus('mandatory')
ldiskDiskTransfersPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldiskDiskTransfersPerSec.setStatus('mandatory')
ldiskDiskReadsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldiskDiskReadsPerSec.setStatus('mandatory')
ldiskDiskWritesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldiskDiskWritesPerSec.setStatus('mandatory')
ldiskDiskBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldiskDiskBytesPerSec.setStatus('mandatory')
ldiskDiskReadBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldiskDiskReadBytesPerSec.setStatus('mandatory')
ldiskDiskWriteBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 5, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ldiskDiskWriteBytesPerSec.setStatus('mandatory')
pagefilepaging_FileTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 6), ).setLabel("pagefilepaging-FileTable")
if mibBuilder.loadTexts: pagefilepaging_FileTable.setStatus('mandatory')
pagefilepaging_FileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 6, 1), ).setLabel("pagefilepaging-FileEntry").setIndexNames((0, "WINDOWS-NT-PERFORMANCE", "pagefilepaging-FileIndex"))
if mibBuilder.loadTexts: pagefilepaging_FileEntry.setStatus('mandatory')
pagefilepaging_FileIndex = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 6, 1, 1), Integer32()).setLabel("pagefilepaging-FileIndex").setMaxAccess("readonly")
if mibBuilder.loadTexts: pagefilepaging_FileIndex.setStatus('mandatory')
pagefilepaging_FileInstance = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 6, 1, 2), DisplayString()).setLabel("pagefilepaging-FileInstance").setMaxAccess("readonly")
if mibBuilder.loadTexts: pagefilepaging_FileInstance.setStatus('mandatory')
pagefilePercentUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pagefilePercentUsage.setStatus('mandatory')
pagefilePercentUsagePeak = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pagefilePercentUsagePeak.setStatus('mandatory')
processprocessTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7), )
if mibBuilder.loadTexts: processprocessTable.setStatus('mandatory')
processprocessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1), ).setIndexNames((0, "WINDOWS-NT-PERFORMANCE", "processprocessIndex"))
if mibBuilder.loadTexts: processprocessEntry.setStatus('mandatory')
processprocessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processprocessIndex.setStatus('mandatory')
processprocessInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processprocessInstance.setStatus('mandatory')
processPercentProcessorTime = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPercentProcessorTime.setStatus('mandatory')
processPercentUserTime = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPercentUserTime.setStatus('mandatory')
processPercentPrivilegedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPercentPrivilegedTime.setStatus('mandatory')
processVirtualBytesPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processVirtualBytesPeak.setStatus('mandatory')
processVirtualBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processVirtualBytes.setStatus('mandatory')
processPageFaultsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPageFaultsPerSec.setStatus('mandatory')
processWorkingSetPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processWorkingSetPeak.setStatus('mandatory')
processWorkingSet = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processWorkingSet.setStatus('mandatory')
processPageFileBytesPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPageFileBytesPeak.setStatus('mandatory')
processPageFileBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPageFileBytes.setStatus('mandatory')
processPrivateBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPrivateBytes.setStatus('mandatory')
processThreadCount = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processThreadCount.setStatus('mandatory')
processPriorityBase = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPriorityBase.setStatus('mandatory')
processElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 16), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processElapsedTime.setStatus('mandatory')
processIDProcess = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processIDProcess.setStatus('mandatory')
processPoolPagedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPoolPagedBytes.setStatus('mandatory')
processPoolNonpagedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processPoolNonpagedBytes.setStatus('mandatory')
processHandleCount = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 7, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: processHandleCount.setStatus('mandatory')
redirector = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8))
redirectorBytesTotalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorBytesTotalPerSec.setStatus('mandatory')
redirectorFileDataOperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorFileDataOperationsPerSec.setStatus('mandatory')
redirectorPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorPacketsPerSec.setStatus('mandatory')
redirectorBytesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorBytesReceivedPerSec.setStatus('mandatory')
redirectorPacketsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorPacketsReceivedPerSec.setStatus('mandatory')
redirectorReadBytesPagingPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorReadBytesPagingPerSec.setStatus('mandatory')
redirectorReadBytesNon_PagingPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 7), Integer32()).setLabel("redirectorReadBytesNon-PagingPerSec").setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorReadBytesNon_PagingPerSec.setStatus('mandatory')
redirectorReadBytesCachePerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorReadBytesCachePerSec.setStatus('mandatory')
redirectorReadBytesNetworkPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorReadBytesNetworkPerSec.setStatus('mandatory')
redirectorBytesTransmittedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorBytesTransmittedPerSec.setStatus('mandatory')
redirectorPacketsTransmittedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorPacketsTransmittedPerSec.setStatus('mandatory')
redirectorWriteBytesPagingPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorWriteBytesPagingPerSec.setStatus('mandatory')
redirectorWriteBytesNon_PagingPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 13), Integer32()).setLabel("redirectorWriteBytesNon-PagingPerSec").setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorWriteBytesNon_PagingPerSec.setStatus('mandatory')
redirectorWriteBytesCachePerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorWriteBytesCachePerSec.setStatus('mandatory')
redirectorWriteBytesNetworkPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorWriteBytesNetworkPerSec.setStatus('mandatory')
redirectorFileReadOperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorFileReadOperationsPerSec.setStatus('mandatory')
redirectorReadOperationsRandomPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorReadOperationsRandomPerSec.setStatus('mandatory')
redirectorReadPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorReadPacketsPerSec.setStatus('mandatory')
redirectorReadsLargePerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorReadsLargePerSec.setStatus('mandatory')
redirectorReadPacketsSmallPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorReadPacketsSmallPerSec.setStatus('mandatory')
redirectorFileWriteOperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorFileWriteOperationsPerSec.setStatus('mandatory')
redirectorWriteOperationsRandomPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorWriteOperationsRandomPerSec.setStatus('mandatory')
redirectorWritePacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorWritePacketsPerSec.setStatus('mandatory')
redirectorWritesLargePerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorWritesLargePerSec.setStatus('mandatory')
redirectorWritePacketsSmallPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorWritePacketsSmallPerSec.setStatus('mandatory')
redirectorReadsDeniedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorReadsDeniedPerSec.setStatus('mandatory')
redirectorWritesDeniedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorWritesDeniedPerSec.setStatus('mandatory')
redirectorNetworkErrorsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorNetworkErrorsPerSec.setStatus('mandatory')
redirectorServerSessions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorServerSessions.setStatus('mandatory')
redirectorServerReconnects = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorServerReconnects.setStatus('mandatory')
redirectorConnectsCore = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorConnectsCore.setStatus('mandatory')
redirectorConnectsLanManager20 = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorConnectsLanManager20.setStatus('mandatory')
redirectorConnectsLanManager21 = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorConnectsLanManager21.setStatus('mandatory')
redirectorConnectsWindowsNT = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorConnectsWindowsNT.setStatus('mandatory')
redirectorServerDisconnects = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorServerDisconnects.setStatus('mandatory')
redirectorServerSessionsHung = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorServerSessionsHung.setStatus('mandatory')
redirectorCurrentCommands = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 8, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: redirectorCurrentCommands.setStatus('mandatory')
tCP = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 9))
tcpSegmentsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 9, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpSegmentsPerSec.setStatus('mandatory')
tcpConnectionsEstablished = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 9, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpConnectionsEstablished.setStatus('mandatory')
tcpConnectionsActive = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 9, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpConnectionsActive.setStatus('mandatory')
tcpConnectionsPassive = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 9, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpConnectionsPassive.setStatus('mandatory')
tcpConnectionFailures = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 9, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpConnectionFailures.setStatus('mandatory')
tcpConnectionsReset = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 9, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpConnectionsReset.setStatus('mandatory')
tcpSegmentsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 9, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpSegmentsReceivedPerSec.setStatus('mandatory')
tcpSegmentsSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 9, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpSegmentsSentPerSec.setStatus('mandatory')
tcpSegmentsRetransmittedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 9, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tcpSegmentsRetransmittedPerSec.setStatus('mandatory')
iP = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 10))
ipDatagramsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 10, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipDatagramsPerSec.setStatus('mandatory')
ipDatagramsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 10, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipDatagramsReceivedPerSec.setStatus('mandatory')
ipDatagramsReceivedHeaderErrors = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 10, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipDatagramsReceivedHeaderErrors.setStatus('mandatory')
ipDatagramsReceivedAddressErrors = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 10, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipDatagramsReceivedAddressErrors.setStatus('mandatory')
ipDatagramsForwardedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 10, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipDatagramsForwardedPerSec.setStatus('mandatory')
ipDatagramsReceivedUnknownProtocol = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 10, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipDatagramsReceivedUnknownProtocol.setStatus('mandatory')
ipDatagramsReceivedDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 10, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipDatagramsReceivedDiscarded.setStatus('mandatory')
ipDatagramsReceivedDeliveredPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 10, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipDatagramsReceivedDeliveredPerSec.setStatus('mandatory')
ipDatagramsSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 10, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipDatagramsSentPerSec.setStatus('mandatory')
ipDatagramsOutboundDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 10, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipDatagramsOutboundDiscarded.setStatus('mandatory')
ipDatagramsOutboundNoRoute = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 10, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipDatagramsOutboundNoRoute.setStatus('mandatory')
ipFragmentsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 10, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipFragmentsReceivedPerSec.setStatus('mandatory')
ipFragmentsRe_assembledPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 10, 13), Counter32()).setLabel("ipFragmentsRe-assembledPerSec").setMaxAccess("readonly")
if mibBuilder.loadTexts: ipFragmentsRe_assembledPerSec.setStatus('mandatory')
ipFragmentRe_assemblyFailures = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 10, 14), Integer32()).setLabel("ipFragmentRe-assemblyFailures").setMaxAccess("readonly")
if mibBuilder.loadTexts: ipFragmentRe_assemblyFailures.setStatus('mandatory')
ipFragmentedDatagramsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 10, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipFragmentedDatagramsPerSec.setStatus('mandatory')
ipFragmentationFailures = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 10, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipFragmentationFailures.setStatus('mandatory')
ipFragmentsCreatedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 10, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipFragmentsCreatedPerSec.setStatus('mandatory')
uDP = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 11))
udpDatagramsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 11, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpDatagramsPerSec.setStatus('mandatory')
udpDatagramsReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 11, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpDatagramsReceivedPerSec.setStatus('mandatory')
udpDatagramsNoPortPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 11, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpDatagramsNoPortPerSec.setStatus('mandatory')
udpDatagramsReceivedErrors = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 11, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpDatagramsReceivedErrors.setStatus('mandatory')
udpDatagramsSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 11, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: udpDatagramsSentPerSec.setStatus('mandatory')
netbeuinetBEUITable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12), )
if mibBuilder.loadTexts: netbeuinetBEUITable.setStatus('mandatory')
netbeuinetBEUIEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1), ).setIndexNames((0, "WINDOWS-NT-PERFORMANCE", "netbeuinetBEUIIndex"))
if mibBuilder.loadTexts: netbeuinetBEUIEntry.setStatus('mandatory')
netbeuinetBEUIIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuinetBEUIIndex.setStatus('mandatory')
netbeuinetBEUIInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuinetBEUIInstance.setStatus('mandatory')
netbeuiDatagramsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiDatagramsPerSec.setStatus('mandatory')
netbeuiDatagramBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiDatagramBytesPerSec.setStatus('mandatory')
netbeuiPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiPacketsPerSec.setStatus('mandatory')
netbeuiFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiFramesPerSec.setStatus('mandatory')
netbeuiFrameBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiFrameBytesPerSec.setStatus('mandatory')
netbeuiBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiBytesTotalPerSec.setStatus('mandatory')
netbeuiConnectionsOpen = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiConnectionsOpen.setStatus('mandatory')
netbeuiConnectionsNoRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiConnectionsNoRetries.setStatus('mandatory')
netbeuiConnectionsWithRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiConnectionsWithRetries.setStatus('mandatory')
netbeuiDisconnectsLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiDisconnectsLocal.setStatus('mandatory')
netbeuiDisconnectsRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiDisconnectsRemote.setStatus('mandatory')
netbeuiFailuresLink = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiFailuresLink.setStatus('mandatory')
netbeuiFailuresAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiFailuresAdapter.setStatus('mandatory')
netbeuiConnectionSessionTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiConnectionSessionTimeouts.setStatus('mandatory')
netbeuiConnectionsCanceled = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiConnectionsCanceled.setStatus('mandatory')
netbeuiFailuresResourceRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiFailuresResourceRemote.setStatus('mandatory')
netbeuiFailuresResourceLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiFailuresResourceLocal.setStatus('mandatory')
netbeuiFailuresNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiFailuresNotFound.setStatus('mandatory')
netbeuiFailuresNoListen = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiFailuresNoListen.setStatus('mandatory')
netbeuiDatagramsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiDatagramsSentPerSec.setStatus('mandatory')
netbeuiDatagramBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiDatagramBytesSentPerSec.setStatus('mandatory')
netbeuiDatagramsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiDatagramsReceivedPerSec.setStatus('mandatory')
netbeuiDatagramBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiDatagramBytesReceivedPerSec.setStatus('mandatory')
netbeuiPacketsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiPacketsSentPerSec.setStatus('mandatory')
netbeuiPacketsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiPacketsReceivedPerSec.setStatus('mandatory')
netbeuiFramesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiFramesSentPerSec.setStatus('mandatory')
netbeuiFrameBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiFrameBytesSentPerSec.setStatus('mandatory')
netbeuiFramesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiFramesReceivedPerSec.setStatus('mandatory')
netbeuiFrameBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiFrameBytesReceivedPerSec.setStatus('mandatory')
netbeuiFramesRe_SentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 32), Counter32()).setLabel("netbeuiFramesRe-SentPerSec").setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiFramesRe_SentPerSec.setStatus('mandatory')
netbeuiFrameBytesRe_SentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 33), Integer32()).setLabel("netbeuiFrameBytesRe-SentPerSec").setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiFrameBytesRe_SentPerSec.setStatus('mandatory')
netbeuiFramesRejectedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiFramesRejectedPerSec.setStatus('mandatory')
netbeuiFrameBytesRejectedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiFrameBytesRejectedPerSec.setStatus('mandatory')
netbeuiExpirationsResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiExpirationsResponse.setStatus('mandatory')
netbeuiExpirationsAck = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiExpirationsAck.setStatus('mandatory')
netbeuiWindowSendMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiWindowSendMaximum.setStatus('mandatory')
netbeuiWindowSendAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiWindowSendAverage.setStatus('mandatory')
netbeuiPiggybackAckQueuedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiPiggybackAckQueuedPerSec.setStatus('mandatory')
netbeuiPiggybackAckTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 12, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: netbeuiPiggybackAckTimeouts.setStatus('mandatory')
nbtconnnBT_ConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 13), ).setLabel("nbtconnnBT-ConnectionTable")
if mibBuilder.loadTexts: nbtconnnBT_ConnectionTable.setStatus('mandatory')
nbtconnnBT_ConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 13, 1), ).setLabel("nbtconnnBT-ConnectionEntry").setIndexNames((0, "WINDOWS-NT-PERFORMANCE", "nbtconnnBT-ConnectionIndex"))
if mibBuilder.loadTexts: nbtconnnBT_ConnectionEntry.setStatus('mandatory')
nbtconnnBT_ConnectionIndex = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 13, 1, 1), Integer32()).setLabel("nbtconnnBT-ConnectionIndex").setMaxAccess("readonly")
if mibBuilder.loadTexts: nbtconnnBT_ConnectionIndex.setStatus('mandatory')
nbtconnnBT_ConnectionInstance = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 13, 1, 2), DisplayString()).setLabel("nbtconnnBT-ConnectionInstance").setMaxAccess("readonly")
if mibBuilder.loadTexts: nbtconnnBT_ConnectionInstance.setStatus('mandatory')
nbtconnBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 13, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbtconnBytesReceivedPerSec.setStatus('mandatory')
nbtconnBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 13, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbtconnBytesSentPerSec.setStatus('mandatory')
nbtconnBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 13, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbtconnBytesTotalPerSec.setStatus('mandatory')
nwlinkipxnWLink_IPXTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14), ).setLabel("nwlinkipxnWLink-IPXTable")
if mibBuilder.loadTexts: nwlinkipxnWLink_IPXTable.setStatus('mandatory')
nwlinkipxnWLink_IPXEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1), ).setLabel("nwlinkipxnWLink-IPXEntry").setIndexNames((0, "WINDOWS-NT-PERFORMANCE", "nwlinkipxnWLink-IPXIndex"))
if mibBuilder.loadTexts: nwlinkipxnWLink_IPXEntry.setStatus('mandatory')
nwlinkipxnWLink_IPXIndex = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 1), Integer32()).setLabel("nwlinkipxnWLink-IPXIndex").setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxnWLink_IPXIndex.setStatus('mandatory')
nwlinkipxnWLink_IPXInstance = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 2), DisplayString()).setLabel("nwlinkipxnWLink-IPXInstance").setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxnWLink_IPXInstance.setStatus('mandatory')
nwlinkipxDatagramsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxDatagramsPerSec.setStatus('mandatory')
nwlinkipxDatagramBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxDatagramBytesPerSec.setStatus('mandatory')
nwlinkipxPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxPacketsPerSec.setStatus('mandatory')
nwlinkipxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxFramesPerSec.setStatus('mandatory')
nwlinkipxFrameBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxFrameBytesPerSec.setStatus('mandatory')
nwlinkipxBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxBytesTotalPerSec.setStatus('mandatory')
nwlinkipxConnectionsOpen = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxConnectionsOpen.setStatus('mandatory')
nwlinkipxConnectionsNoRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxConnectionsNoRetries.setStatus('mandatory')
nwlinkipxConnectionsWithRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxConnectionsWithRetries.setStatus('mandatory')
nwlinkipxDisconnectsLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxDisconnectsLocal.setStatus('mandatory')
nwlinkipxDisconnectsRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxDisconnectsRemote.setStatus('mandatory')
nwlinkipxFailuresLink = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxFailuresLink.setStatus('mandatory')
nwlinkipxFailuresAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxFailuresAdapter.setStatus('mandatory')
nwlinkipxConnectionSessionTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxConnectionSessionTimeouts.setStatus('mandatory')
nwlinkipxConnectionsCanceled = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxConnectionsCanceled.setStatus('mandatory')
nwlinkipxFailuresResourceRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxFailuresResourceRemote.setStatus('mandatory')
nwlinkipxFailuresResourceLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxFailuresResourceLocal.setStatus('mandatory')
nwlinkipxFailuresNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxFailuresNotFound.setStatus('mandatory')
nwlinkipxFailuresNoListen = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxFailuresNoListen.setStatus('mandatory')
nwlinkipxDatagramsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxDatagramsSentPerSec.setStatus('mandatory')
nwlinkipxDatagramBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxDatagramBytesSentPerSec.setStatus('mandatory')
nwlinkipxDatagramsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxDatagramsReceivedPerSec.setStatus('mandatory')
nwlinkipxDatagramBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxDatagramBytesReceivedPerSec.setStatus('mandatory')
nwlinkipxPacketsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxPacketsSentPerSec.setStatus('mandatory')
nwlinkipxPacketsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxPacketsReceivedPerSec.setStatus('mandatory')
nwlinkipxFramesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxFramesSentPerSec.setStatus('mandatory')
nwlinkipxFrameBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxFrameBytesSentPerSec.setStatus('mandatory')
nwlinkipxFramesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxFramesReceivedPerSec.setStatus('mandatory')
nwlinkipxFrameBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxFrameBytesReceivedPerSec.setStatus('mandatory')
nwlinkipxFramesRe_SentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 32), Counter32()).setLabel("nwlinkipxFramesRe-SentPerSec").setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxFramesRe_SentPerSec.setStatus('mandatory')
nwlinkipxFrameBytesRe_SentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 33), Integer32()).setLabel("nwlinkipxFrameBytesRe-SentPerSec").setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxFrameBytesRe_SentPerSec.setStatus('mandatory')
nwlinkipxFramesRejectedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxFramesRejectedPerSec.setStatus('mandatory')
nwlinkipxFrameBytesRejectedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxFrameBytesRejectedPerSec.setStatus('mandatory')
nwlinkipxExpirationsResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxExpirationsResponse.setStatus('mandatory')
nwlinkipxExpirationsAck = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxExpirationsAck.setStatus('mandatory')
nwlinkipxWindowSendMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxWindowSendMaximum.setStatus('mandatory')
nwlinkipxWindowSendAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxWindowSendAverage.setStatus('mandatory')
nwlinkipxPiggybackAckQueuedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxPiggybackAckQueuedPerSec.setStatus('mandatory')
nwlinkipxPiggybackAckTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 14, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkipxPiggybackAckTimeouts.setStatus('mandatory')
nwlinkspxnWLink_SPXTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15), ).setLabel("nwlinkspxnWLink-SPXTable")
if mibBuilder.loadTexts: nwlinkspxnWLink_SPXTable.setStatus('mandatory')
nwlinkspxnWLink_SPXEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1), ).setLabel("nwlinkspxnWLink-SPXEntry").setIndexNames((0, "WINDOWS-NT-PERFORMANCE", "nwlinkspxnWLink-SPXIndex"))
if mibBuilder.loadTexts: nwlinkspxnWLink_SPXEntry.setStatus('mandatory')
nwlinkspxnWLink_SPXIndex = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 1), Integer32()).setLabel("nwlinkspxnWLink-SPXIndex").setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxnWLink_SPXIndex.setStatus('mandatory')
nwlinkspxnWLink_SPXInstance = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 2), DisplayString()).setLabel("nwlinkspxnWLink-SPXInstance").setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxnWLink_SPXInstance.setStatus('mandatory')
nwlinkspxDatagramsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxDatagramsPerSec.setStatus('mandatory')
nwlinkspxDatagramBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxDatagramBytesPerSec.setStatus('mandatory')
nwlinkspxPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxPacketsPerSec.setStatus('mandatory')
nwlinkspxFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxFramesPerSec.setStatus('mandatory')
nwlinkspxFrameBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxFrameBytesPerSec.setStatus('mandatory')
nwlinkspxBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxBytesTotalPerSec.setStatus('mandatory')
nwlinkspxConnectionsOpen = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxConnectionsOpen.setStatus('mandatory')
nwlinkspxConnectionsNoRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxConnectionsNoRetries.setStatus('mandatory')
nwlinkspxConnectionsWithRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxConnectionsWithRetries.setStatus('mandatory')
nwlinkspxDisconnectsLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxDisconnectsLocal.setStatus('mandatory')
nwlinkspxDisconnectsRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxDisconnectsRemote.setStatus('mandatory')
nwlinkspxFailuresLink = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxFailuresLink.setStatus('mandatory')
nwlinkspxFailuresAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxFailuresAdapter.setStatus('mandatory')
nwlinkspxConnectionSessionTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxConnectionSessionTimeouts.setStatus('mandatory')
nwlinkspxConnectionsCanceled = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxConnectionsCanceled.setStatus('mandatory')
nwlinkspxFailuresResourceRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxFailuresResourceRemote.setStatus('mandatory')
nwlinkspxFailuresResourceLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxFailuresResourceLocal.setStatus('mandatory')
nwlinkspxFailuresNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxFailuresNotFound.setStatus('mandatory')
nwlinkspxFailuresNoListen = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxFailuresNoListen.setStatus('mandatory')
nwlinkspxDatagramsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxDatagramsSentPerSec.setStatus('mandatory')
nwlinkspxDatagramBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxDatagramBytesSentPerSec.setStatus('mandatory')
nwlinkspxDatagramsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxDatagramsReceivedPerSec.setStatus('mandatory')
nwlinkspxDatagramBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxDatagramBytesReceivedPerSec.setStatus('mandatory')
nwlinkspxPacketsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxPacketsSentPerSec.setStatus('mandatory')
nwlinkspxPacketsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxPacketsReceivedPerSec.setStatus('mandatory')
nwlinkspxFramesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxFramesSentPerSec.setStatus('mandatory')
nwlinkspxFrameBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxFrameBytesSentPerSec.setStatus('mandatory')
nwlinkspxFramesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxFramesReceivedPerSec.setStatus('mandatory')
nwlinkspxFrameBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxFrameBytesReceivedPerSec.setStatus('mandatory')
nwlinkspxFramesRe_SentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 32), Counter32()).setLabel("nwlinkspxFramesRe-SentPerSec").setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxFramesRe_SentPerSec.setStatus('mandatory')
nwlinkspxFrameBytesRe_SentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 33), Integer32()).setLabel("nwlinkspxFrameBytesRe-SentPerSec").setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxFrameBytesRe_SentPerSec.setStatus('mandatory')
nwlinkspxFramesRejectedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxFramesRejectedPerSec.setStatus('mandatory')
nwlinkspxFrameBytesRejectedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxFrameBytesRejectedPerSec.setStatus('mandatory')
nwlinkspxExpirationsResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxExpirationsResponse.setStatus('mandatory')
nwlinkspxExpirationsAck = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxExpirationsAck.setStatus('mandatory')
nwlinkspxWindowSendMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxWindowSendMaximum.setStatus('mandatory')
nwlinkspxWindowSendAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxWindowSendAverage.setStatus('mandatory')
nwlinkspxPiggybackAckQueuedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxPiggybackAckQueuedPerSec.setStatus('mandatory')
nwlinkspxPiggybackAckTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 15, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwlinkspxPiggybackAckTimeouts.setStatus('mandatory')
rAS_Total = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16)).setLabel("rAS-Total")
rastotalBytesTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rastotalBytesTransmitted.setStatus('mandatory')
rastotalBytesReceived = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rastotalBytesReceived.setStatus('mandatory')
rastotalFramesTransmitted = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rastotalFramesTransmitted.setStatus('mandatory')
rastotalFramesReceived = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rastotalFramesReceived.setStatus('mandatory')
rastotalPercentCompressionOut = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rastotalPercentCompressionOut.setStatus('mandatory')
rastotalPercentCompressionIn = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rastotalPercentCompressionIn.setStatus('mandatory')
rastotalCRCErrors = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rastotalCRCErrors.setStatus('mandatory')
rastotalTimeoutErrors = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rastotalTimeoutErrors.setStatus('mandatory')
rastotalSerialOverrunErrors = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rastotalSerialOverrunErrors.setStatus('mandatory')
rastotalAlignmentErrors = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rastotalAlignmentErrors.setStatus('mandatory')
rastotalBufferOverrunErrors = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rastotalBufferOverrunErrors.setStatus('mandatory')
rastotalTotalErrors = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rastotalTotalErrors.setStatus('mandatory')
rastotalBytesTransmittedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rastotalBytesTransmittedPerSec.setStatus('mandatory')
rastotalBytesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rastotalBytesReceivedPerSec.setStatus('mandatory')
rastotalFramesTransmittedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rastotalFramesTransmittedPerSec.setStatus('mandatory')
rastotalFramesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rastotalFramesReceivedPerSec.setStatus('mandatory')
rastotalTotalErrorsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rastotalTotalErrorsPerSec.setStatus('mandatory')
rastotalTotalConnections = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 16, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rastotalTotalConnections.setStatus('mandatory')
server = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17))
serverBytesTotalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverBytesTotalPerSec.setStatus('mandatory')
serverBytesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverBytesReceivedPerSec.setStatus('mandatory')
serverBytesTransmittedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverBytesTransmittedPerSec.setStatus('mandatory')
serverSessionsTimedOut = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverSessionsTimedOut.setStatus('mandatory')
serverSessionsErroredOut = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverSessionsErroredOut.setStatus('mandatory')
serverSessionsLoggedOff = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverSessionsLoggedOff.setStatus('mandatory')
serverSessionsForcedOff = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverSessionsForcedOff.setStatus('mandatory')
serverErrorsLogon = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverErrorsLogon.setStatus('mandatory')
serverErrorsAccessPermissions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverErrorsAccessPermissions.setStatus('mandatory')
serverErrorsGrantedAccess = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverErrorsGrantedAccess.setStatus('mandatory')
serverErrorsSystem = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverErrorsSystem.setStatus('mandatory')
serverBlockingRequestsRejected = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverBlockingRequestsRejected.setStatus('mandatory')
serverWorkItemShortages = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverWorkItemShortages.setStatus('mandatory')
serverFilesOpenedTotal = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverFilesOpenedTotal.setStatus('mandatory')
serverFilesOpen = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverFilesOpen.setStatus('mandatory')
serverServerSessions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverServerSessions.setStatus('mandatory')
serverFileDirectorySearches = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverFileDirectorySearches.setStatus('mandatory')
serverPoolNonpagedBytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolNonpagedBytes.setStatus('mandatory')
serverPoolNonpagedFailures = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolNonpagedFailures.setStatus('mandatory')
serverPoolNonpagedPeak = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolNonpagedPeak.setStatus('mandatory')
serverPoolPagedBytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolPagedBytes.setStatus('mandatory')
serverPoolPagedFailures = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolPagedFailures.setStatus('mandatory')
serverPoolPagedPeak = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverPoolPagedPeak.setStatus('mandatory')
serverContextBlocksQueuedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverContextBlocksQueuedPerSec.setStatus('mandatory')
serverLogonPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverLogonPerSec.setStatus('mandatory')
serverLogonTotal = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 17, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverLogonTotal.setStatus('mandatory')
srvrqueuesserver_Work_QueuesTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18), ).setLabel("srvrqueuesserver-Work-QueuesTable")
if mibBuilder.loadTexts: srvrqueuesserver_Work_QueuesTable.setStatus('mandatory')
srvrqueuesserver_Work_QueuesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1), ).setLabel("srvrqueuesserver-Work-QueuesEntry").setIndexNames((0, "WINDOWS-NT-PERFORMANCE", "srvrqueuesserver-Work-QueuesIndex"))
if mibBuilder.loadTexts: srvrqueuesserver_Work_QueuesEntry.setStatus('mandatory')
srvrqueuesserver_Work_QueuesIndex = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 1), Integer32()).setLabel("srvrqueuesserver-Work-QueuesIndex").setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesserver_Work_QueuesIndex.setStatus('mandatory')
srvrqueuesserver_Work_QueuesInstance = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 2), DisplayString()).setLabel("srvrqueuesserver-Work-QueuesInstance").setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesserver_Work_QueuesInstance.setStatus('mandatory')
srvrqueuesQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesQueueLength.setStatus('mandatory')
srvrqueuesActiveThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesActiveThreads.setStatus('mandatory')
srvrqueuesAvailableThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesAvailableThreads.setStatus('mandatory')
srvrqueuesAvailableWorkItems = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesAvailableWorkItems.setStatus('mandatory')
srvrqueuesBorrowedWorkItems = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesBorrowedWorkItems.setStatus('mandatory')
srvrqueuesWorkItemShortages = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesWorkItemShortages.setStatus('mandatory')
srvrqueuesCurrentClients = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesCurrentClients.setStatus('mandatory')
srvrqueuesBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesBytesReceivedPerSec.setStatus('mandatory')
srvrqueuesBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesBytesSentPerSec.setStatus('mandatory')
srvrqueuesBytesTransferredPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesBytesTransferredPerSec.setStatus('mandatory')
srvrqueuesReadOperationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesReadOperationsPerSec.setStatus('mandatory')
srvrqueuesReadBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesReadBytesPerSec.setStatus('mandatory')
srvrqueuesWriteOperationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesWriteOperationsPerSec.setStatus('mandatory')
srvrqueuesWriteBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesWriteBytesPerSec.setStatus('mandatory')
srvrqueuesTotalBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesTotalBytesPerSec.setStatus('mandatory')
srvrqueuesTotalOperationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesTotalOperationsPerSec.setStatus('mandatory')
srvrqueuesContextBlocksQueuedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 18, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: srvrqueuesContextBlocksQueuedPerSec.setStatus('mandatory')
cache = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19))
cacheDataMapsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDataMapsPerSec.setStatus('mandatory')
cacheSyncDataMapsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheSyncDataMapsPerSec.setStatus('mandatory')
cacheAsyncDataMapsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheAsyncDataMapsPerSec.setStatus('mandatory')
cacheDataMapHitsPercent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDataMapHitsPercent.setStatus('mandatory')
cacheDataMapPinsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDataMapPinsPerSec.setStatus('mandatory')
cachePinReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cachePinReadsPerSec.setStatus('mandatory')
cacheSyncPinReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheSyncPinReadsPerSec.setStatus('mandatory')
cacheAsyncPinReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheAsyncPinReadsPerSec.setStatus('mandatory')
cachePinReadHitsPercent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cachePinReadHitsPercent.setStatus('mandatory')
cacheCopyReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheCopyReadsPerSec.setStatus('mandatory')
cacheSyncCopyReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheSyncCopyReadsPerSec.setStatus('mandatory')
cacheAsyncCopyReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheAsyncCopyReadsPerSec.setStatus('mandatory')
cacheCopyReadHitsPercent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheCopyReadHitsPercent.setStatus('mandatory')
cacheMDLReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMDLReadsPerSec.setStatus('mandatory')
cacheSyncMDLReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheSyncMDLReadsPerSec.setStatus('mandatory')
cacheAsyncMDLReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheAsyncMDLReadsPerSec.setStatus('mandatory')
cacheMDLReadHitsPercent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheMDLReadHitsPercent.setStatus('mandatory')
cacheReadAheadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheReadAheadsPerSec.setStatus('mandatory')
cacheFastReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheFastReadsPerSec.setStatus('mandatory')
cacheSyncFastReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheSyncFastReadsPerSec.setStatus('mandatory')
cacheAsyncFastReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheAsyncFastReadsPerSec.setStatus('mandatory')
cacheFastReadResourceMissesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheFastReadResourceMissesPerSec.setStatus('mandatory')
cacheFastReadNotPossiblesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheFastReadNotPossiblesPerSec.setStatus('mandatory')
cacheLazyWriteFlushesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheLazyWriteFlushesPerSec.setStatus('mandatory')
cacheLazyWritePagesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheLazyWritePagesPerSec.setStatus('mandatory')
cacheDataFlushesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDataFlushesPerSec.setStatus('mandatory')
cacheDataFlushPagesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 19, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cacheDataFlushPagesPerSec.setStatus('mandatory')
mSExchangeMTA = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20))
exchmtaAdjacentMTAAssociations = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaAdjacentMTAAssociations.setStatus('mandatory')
exchmtaMessagesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaMessagesPerSec.setStatus('mandatory')
exchmtaMessageBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaMessageBytesPerSec.setStatus('mandatory')
exchmtaFreeElements = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaFreeElements.setStatus('mandatory')
exchmtaFreeHeaders = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaFreeHeaders.setStatus('mandatory')
exchmtaAdminConnections = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaAdminConnections.setStatus('mandatory')
exchmtaThreadsInUse = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaThreadsInUse.setStatus('mandatory')
exchmtaWorkQueueLength = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaWorkQueueLength.setStatus('mandatory')
exchmtaXAPIGateways = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaXAPIGateways.setStatus('mandatory')
exchmtaXAPIClients = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaXAPIClients.setStatus('mandatory')
exchmtaDiskFileDeletesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaDiskFileDeletesPerSec.setStatus('mandatory')
exchmtaDiskFileSyncsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaDiskFileSyncsPerSec.setStatus('mandatory')
exchmtaDiskFileOpensPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaDiskFileOpensPerSec.setStatus('mandatory')
exchmtaDiskFileReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaDiskFileReadsPerSec.setStatus('mandatory')
exchmtaDiskFileWritesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaDiskFileWritesPerSec.setStatus('mandatory')
exchmtaExDSReadCallsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaExDSReadCallsPerSec.setStatus('mandatory')
exchmtaXAPIReceiveBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaXAPIReceiveBytesPerSec.setStatus('mandatory')
exchmtaXAPITransmitBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaXAPITransmitBytesPerSec.setStatus('mandatory')
exchmtaAdminInterfaceReceiveBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaAdminInterfaceReceiveBytesPerSec.setStatus('mandatory')
exchmtaAdminInterfaceTransmitBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaAdminInterfaceTransmitBytesPerSec.setStatus('mandatory')
exchmtaLANReceiveBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaLANReceiveBytesPerSec.setStatus('mandatory')
exchmtaLANTransmitBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaLANTransmitBytesPerSec.setStatus('mandatory')
exchmtaRASReceiveBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaRASReceiveBytesPerSec.setStatus('mandatory')
exchmtaRASTransmitBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaRASTransmitBytesPerSec.setStatus('mandatory')
exchmtaTCPPerIPReceiveBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaTCPPerIPReceiveBytesPerSec.setStatus('mandatory')
exchmtaTCPPerIPTransmitBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaTCPPerIPTransmitBytesPerSec.setStatus('mandatory')
exchmtaTP4ReceiveBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaTP4ReceiveBytesPerSec.setStatus('mandatory')
exchmtaTP4TransmitBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaTP4TransmitBytesPerSec.setStatus('mandatory')
exchmtaX25ReceiveBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaX25ReceiveBytesPerSec.setStatus('mandatory')
exchmtaX25TransmitBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaX25TransmitBytesPerSec.setStatus('mandatory')
exchmtaDeferredDeliveryMsgs = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaDeferredDeliveryMsgs.setStatus('mandatory')
exchmtaTotalRecipientsQueued = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaTotalRecipientsQueued.setStatus('mandatory')
exchmtaTotalSuccessfulConversions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaTotalSuccessfulConversions.setStatus('mandatory')
exchmtaTotalFailedConversions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaTotalFailedConversions.setStatus('mandatory')
exchmtaTotalLoopsDetected = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaTotalLoopsDetected.setStatus('mandatory')
exchmtaInboundMessagesTotal = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaInboundMessagesTotal.setStatus('mandatory')
exchmtaOutboundMessagesTotal = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaOutboundMessagesTotal.setStatus('mandatory')
exchmtaInboundBytesTotal = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaInboundBytesTotal.setStatus('mandatory')
exchmtaWorkQueueBytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaWorkQueueBytes.setStatus('mandatory')
exchmtaOutboundBytesTotal = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaOutboundBytesTotal.setStatus('mandatory')
exchmtaTotalRecipientsInbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaTotalRecipientsInbound.setStatus('mandatory')
exchmtaTotalRecipientsOutbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 20, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaTotalRecipientsOutbound.setStatus('mandatory')
exchmtaconnmSExchangeMTA_ConnectionsTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21), ).setLabel("exchmtaconnmSExchangeMTA-ConnectionsTable")
if mibBuilder.loadTexts: exchmtaconnmSExchangeMTA_ConnectionsTable.setStatus('mandatory')
exchmtaconnmSExchangeMTA_ConnectionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1), ).setLabel("exchmtaconnmSExchangeMTA-ConnectionsEntry").setIndexNames((0, "WINDOWS-NT-PERFORMANCE", "exchmtaconnmSExchangeMTA-ConnectionsIndex"))
if mibBuilder.loadTexts: exchmtaconnmSExchangeMTA_ConnectionsEntry.setStatus('mandatory')
exchmtaconnmSExchangeMTA_ConnectionsIndex = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 1), Integer32()).setLabel("exchmtaconnmSExchangeMTA-ConnectionsIndex").setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnmSExchangeMTA_ConnectionsIndex.setStatus('mandatory')
exchmtaconnmSExchangeMTA_ConnectionsInstance = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 2), DisplayString()).setLabel("exchmtaconnmSExchangeMTA-ConnectionsInstance").setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnmSExchangeMTA_ConnectionsInstance.setStatus('mandatory')
exchmtaconnAssociations = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnAssociations.setStatus('mandatory')
exchmtaconnReceiveBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnReceiveBytesPerSec.setStatus('mandatory')
exchmtaconnSendBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnSendBytesPerSec.setStatus('mandatory')
exchmtaconnReceiveMessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnReceiveMessagesPerSec.setStatus('mandatory')
exchmtaconnSendMessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnSendMessagesPerSec.setStatus('mandatory')
exchmtaconnQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnQueueLength.setStatus('mandatory')
exchmtaconnConnectorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnConnectorIndex.setStatus('mandatory')
exchmtaconnInboundRejectedTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnInboundRejectedTotal.setStatus('mandatory')
exchmtaconnTotalRecipientsQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnTotalRecipientsQueued.setStatus('mandatory')
exchmtaconnOldestMessageQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnOldestMessageQueued.setStatus('mandatory')
exchmtaconnCurrentInboundAssociations = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnCurrentInboundAssociations.setStatus('mandatory')
exchmtaconnCurrentOutboundAssociations = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnCurrentOutboundAssociations.setStatus('mandatory')
exchmtaconnCumulativeInboundAssociations = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnCumulativeInboundAssociations.setStatus('mandatory')
exchmtaconnCumulativeOutboundAssociations = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnCumulativeOutboundAssociations.setStatus('mandatory')
exchmtaconnLastInboundAssociation = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 17), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnLastInboundAssociation.setStatus('mandatory')
exchmtaconnLastOutboundAssociation = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 18), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnLastOutboundAssociation.setStatus('mandatory')
exchmtaconnRejectedInboundAssociations = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnRejectedInboundAssociations.setStatus('mandatory')
exchmtaconnFailedOutboundAssociations = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnFailedOutboundAssociations.setStatus('mandatory')
exchmtaconnNextAssociationRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnNextAssociationRetry.setStatus('mandatory')
exchmtaconnInboundRejectReason = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnInboundRejectReason.setStatus('mandatory')
exchmtaconnOutboundFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnOutboundFailureReason.setStatus('mandatory')
exchmtaconnInboundMessagesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnInboundMessagesTotal.setStatus('mandatory')
exchmtaconnOutboundMessagesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnOutboundMessagesTotal.setStatus('mandatory')
exchmtaconnInboundBytesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnInboundBytesTotal.setStatus('mandatory')
exchmtaconnQueuedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnQueuedBytes.setStatus('mandatory')
exchmtaconnOutboundBytesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnOutboundBytesTotal.setStatus('mandatory')
exchmtaconnTotalRecipientsInbound = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnTotalRecipientsInbound.setStatus('mandatory')
exchmtaconnTotalRecipientsOutbound = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 21, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchmtaconnTotalRecipientsOutbound.setStatus('mandatory')
mSExchangeIMC = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22))
exchimcQueuedMTS_IN = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 1), Integer32()).setLabel("exchimcQueuedMTS-IN").setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcQueuedMTS_IN.setStatus('mandatory')
exchimcBytesQueuedMTS_IN = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 2), Integer32()).setLabel("exchimcBytesQueuedMTS-IN").setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcBytesQueuedMTS_IN.setStatus('mandatory')
exchimcMessagesEnteringMTS_IN = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 3), Integer32()).setLabel("exchimcMessagesEnteringMTS-IN").setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcMessagesEnteringMTS_IN.setStatus('mandatory')
exchimcQueuedMTS_OUT = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 4), Integer32()).setLabel("exchimcQueuedMTS-OUT").setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcQueuedMTS_OUT.setStatus('mandatory')
exchimcBytesQueuedMTS_OUT = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 5), Integer32()).setLabel("exchimcBytesQueuedMTS-OUT").setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcBytesQueuedMTS_OUT.setStatus('mandatory')
exchimcMessagesEnteringMTS_OUT = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 6), Integer32()).setLabel("exchimcMessagesEnteringMTS-OUT").setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcMessagesEnteringMTS_OUT.setStatus('mandatory')
exchimcMessagesLeavingMTS_OUT = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 7), Integer32()).setLabel("exchimcMessagesLeavingMTS-OUT").setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcMessagesLeavingMTS_OUT.setStatus('mandatory')
exchimcConnectionsInbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcConnectionsInbound.setStatus('mandatory')
exchimcConnectionsOutbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcConnectionsOutbound.setStatus('mandatory')
exchimcConnectionsTotalOutbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcConnectionsTotalOutbound.setStatus('mandatory')
exchimcConnectionsTotalInbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcConnectionsTotalInbound.setStatus('mandatory')
exchimcConnectionsTotalRejected = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcConnectionsTotalRejected.setStatus('mandatory')
exchimcConnectionsTotalFailed = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcConnectionsTotalFailed.setStatus('mandatory')
exchimcQueuedOutbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcQueuedOutbound.setStatus('mandatory')
exchimcQueuedInbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcQueuedInbound.setStatus('mandatory')
exchimcNDRsTotalInbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcNDRsTotalInbound.setStatus('mandatory')
exchimcNDRsTotalOutbound = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcNDRsTotalOutbound.setStatus('mandatory')
exchimcTotalInboundKilobytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcTotalInboundKilobytes.setStatus('mandatory')
exchimcTotalOutboundKilobytes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcTotalOutboundKilobytes.setStatus('mandatory')
exchimcInboundMessagesTotal = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcInboundMessagesTotal.setStatus('mandatory')
exchimcOutboundMessagesTotal = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcOutboundMessagesTotal.setStatus('mandatory')
exchimcInboundBytesPerHr = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcInboundBytesPerHr.setStatus('mandatory')
exchimcOutboundBytesPerHr = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcOutboundBytesPerHr.setStatus('mandatory')
exchimcInboundMessagesPerHr = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcInboundMessagesPerHr.setStatus('mandatory')
exchimcOutboundMessagesPerHr = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcOutboundMessagesPerHr.setStatus('mandatory')
exchimcOutboundConnectionsPerHr = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcOutboundConnectionsPerHr.setStatus('mandatory')
exchimcInboundConnectionsPerHr = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcInboundConnectionsPerHr.setStatus('mandatory')
exchimcTotalMessagesQueued = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcTotalMessagesQueued.setStatus('mandatory')
exchimcTotalKilobytesQueued = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcTotalKilobytesQueued.setStatus('mandatory')
exchimcTotalInboundRecipients = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcTotalInboundRecipients.setStatus('mandatory')
exchimcTotalOutboundRecipients = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcTotalOutboundRecipients.setStatus('mandatory')
exchimcTotalRecipientsQueued = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcTotalRecipientsQueued.setStatus('mandatory')
exchimcTotalSuccessfulConversions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcTotalSuccessfulConversions.setStatus('mandatory')
exchimcTotalFailedConversions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcTotalFailedConversions.setStatus('mandatory')
exchimcTotalLoopsDetected = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 22, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchimcTotalLoopsDetected.setStatus('mandatory')
mSExchangeIS = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23))
exchisRPCPacketsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisRPCPacketsPerSec.setStatus('mandatory')
exchisRPCOperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisRPCOperationsPerSec.setStatus('mandatory')
exchisReadBytesRPCClientsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisReadBytesRPCClientsPerSec.setStatus('mandatory')
exchisWriteBytesRPCClientsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisWriteBytesRPCClientsPerSec.setStatus('mandatory')
exchisPushNotificationsGeneratedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisPushNotificationsGeneratedPerSec.setStatus('mandatory')
exchisPushNotificationsSkippedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisPushNotificationsSkippedPerSec.setStatus('mandatory')
exchisRPCRequests = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisRPCRequests.setStatus('mandatory')
exchisRPCRequestsPeak = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisRPCRequestsPeak.setStatus('mandatory')
exchisUserCount = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisUserCount.setStatus('mandatory')
exchisActiveUserCount = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisActiveUserCount.setStatus('mandatory')
exchisMaximumUsers = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisMaximumUsers.setStatus('mandatory')
exchisAnonymousUserCount = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisAnonymousUserCount.setStatus('mandatory')
exchisActiveAnonymousUserCount = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisActiveAnonymousUserCount.setStatus('mandatory')
exchisMaximumAnonymousUsers = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisMaximumAnonymousUsers.setStatus('mandatory')
exchisConnectionCount = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisConnectionCount.setStatus('mandatory')
exchisActiveConnectionCount = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisActiveConnectionCount.setStatus('mandatory')
exchisMaximumConnections = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisMaximumConnections.setStatus('mandatory')
exchisPushNotificationsCacheSize = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisPushNotificationsCacheSize.setStatus('mandatory')
exchisPeakPushNotificationsCacheSize = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisPeakPushNotificationsCacheSize.setStatus('mandatory')
exchisDatabaseSessionHitRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisDatabaseSessionHitRate.setStatus('mandatory')
exchisIMAPMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisIMAPMessagesSent.setStatus('mandatory')
exchisIMAPCommandsIssued = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisIMAPCommandsIssued.setStatus('mandatory')
exchisIMAPMessageSendRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisIMAPMessageSendRate.setStatus('mandatory')
exchisIMAPCommandsIssuedRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisIMAPCommandsIssuedRate.setStatus('mandatory')
exchisPOP3MessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisPOP3MessagesSent.setStatus('mandatory')
exchisPOP3CommandsIssued = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisPOP3CommandsIssued.setStatus('mandatory')
exchisPOP3MessagesSendRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisPOP3MessagesSendRate.setStatus('mandatory')
exchisPOP3CommandsIssuedRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisPOP3CommandsIssuedRate.setStatus('mandatory')
exchisNNTPMessagesRead = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNNTPMessagesRead.setStatus('mandatory')
exchisNNTPMessagesPosted = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNNTPMessagesPosted.setStatus('mandatory')
exchisNNTPFailedPosts = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNNTPFailedPosts.setStatus('mandatory')
exchisNewsfeedMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNewsfeedMessagesReceived.setStatus('mandatory')
exchisNewsfeedInboundRejectedMessages = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNewsfeedInboundRejectedMessages.setStatus('mandatory')
exchisNNTPCommandsIssued = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNNTPCommandsIssued.setStatus('mandatory')
exchisNNTPMessagesReadRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNNTPMessagesReadRate.setStatus('mandatory')
exchisNNTPMessagesPostedRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNNTPMessagesPostedRate.setStatus('mandatory')
exchisNNTPFailedPostsRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNNTPFailedPostsRate.setStatus('mandatory')
exchisNewsfeedMessagesReceivedRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNewsfeedMessagesReceivedRate.setStatus('mandatory')
exchisNewsfeedInboundRejectedMessagesRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNewsfeedInboundRejectedMessagesRate.setStatus('mandatory')
exchisNNTPCommandsIssuedRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNNTPCommandsIssuedRate.setStatus('mandatory')
exchisNewsfeedMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNewsfeedMessagesSent.setStatus('mandatory')
exchisNewsfeedMessagesSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNewsfeedMessagesSentPerSec.setStatus('mandatory')
exchisNewsfeedBytesSent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNewsfeedBytesSent.setStatus('mandatory')
exchisNewsfeedBytesSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNewsfeedBytesSentPerSec.setStatus('mandatory')
exchisNewsfeedOutboundRejectedMessages = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNewsfeedOutboundRejectedMessages.setStatus('mandatory')
exchisNNTPOutboundConnections = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNNTPOutboundConnections.setStatus('mandatory')
exchisNNTPCurrentOutboundConnections = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNNTPCurrentOutboundConnections.setStatus('mandatory')
exchisNumberOfArticleIndexTableRowsExpired = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 23, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisNumberOfArticleIndexTableRowsExpired.setStatus('mandatory')
mSExchangeIS_Public = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24)).setLabel("mSExchangeIS-Public")
exchispubSendQueueSize = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubSendQueueSize.setStatus('mandatory')
exchispubReceiveQueueSize = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubReceiveQueueSize.setStatus('mandatory')
exchispubCategorizationCount = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubCategorizationCount.setStatus('mandatory')
exchispubMessagesDelivered = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubMessagesDelivered.setStatus('mandatory')
exchispubMessageRecipientsDelivered = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubMessageRecipientsDelivered.setStatus('mandatory')
exchispubMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubMessagesSent.setStatus('mandatory')
exchispubMessagesSubmitted = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubMessagesSubmitted.setStatus('mandatory')
exchispubSingleInstanceRatio = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubSingleInstanceRatio.setStatus('mandatory')
exchispubMessagesDeliveredPerMin = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubMessagesDeliveredPerMin.setStatus('mandatory')
exchispubMessageRecipientsDeliveredPerMin = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubMessageRecipientsDeliveredPerMin.setStatus('mandatory')
exchispubMessagesSentPerMin = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubMessagesSentPerMin.setStatus('mandatory')
exchispubMessageSubmittedPerMin = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubMessageSubmittedPerMin.setStatus('mandatory')
exchispubAverageTimeForDelivery = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubAverageTimeForDelivery.setStatus('mandatory')
exchispubAverageTimeForLocalDelivery = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubAverageTimeForLocalDelivery.setStatus('mandatory')
exchispubTotalSizeOfRecoverableItems = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubTotalSizeOfRecoverableItems.setStatus('mandatory')
exchispubTotalCountOfRecoverableItems = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubTotalCountOfRecoverableItems.setStatus('mandatory')
exchispubReplicationMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubReplicationMessagesSent.setStatus('mandatory')
exchispubReplicationFolderTreeMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubReplicationFolderTreeMessagesSent.setStatus('mandatory')
exchispubReplicationFolderChangesSent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubReplicationFolderChangesSent.setStatus('mandatory')
exchispubReplicationFolderDataMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubReplicationFolderDataMessagesSent.setStatus('mandatory')
exchispubReplicationMessageChangesSent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubReplicationMessageChangesSent.setStatus('mandatory')
exchispubReplicationStatusMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubReplicationStatusMessagesSent.setStatus('mandatory')
exchispubReplicationBackfillRequestsSent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubReplicationBackfillRequestsSent.setStatus('mandatory')
exchispubReplicationBackfillDataMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubReplicationBackfillDataMessagesSent.setStatus('mandatory')
exchispubReplicationMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubReplicationMessagesReceived.setStatus('mandatory')
exchispubReplicationFolderTreeMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubReplicationFolderTreeMessagesReceived.setStatus('mandatory')
exchispubReplicationFolderChangesReceived = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubReplicationFolderChangesReceived.setStatus('mandatory')
exchispubReplicationFolderDataMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubReplicationFolderDataMessagesReceived.setStatus('mandatory')
exchispubReplicationMessageChangesReceived = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubReplicationMessageChangesReceived.setStatus('mandatory')
exchispubReplicationStatusMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubReplicationStatusMessagesReceived.setStatus('mandatory')
exchispubReplicationBackfillRequestsReceived = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubReplicationBackfillRequestsReceived.setStatus('mandatory')
exchispubReplicationBackfillDataMessagesReceived = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubReplicationBackfillDataMessagesReceived.setStatus('mandatory')
exchispubReplicationReceiveQueueSize = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubReplicationReceiveQueueSize.setStatus('mandatory')
exchispubNumberOfMessagesExpiredFromPublicFolders = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubNumberOfMessagesExpiredFromPublicFolders.setStatus('mandatory')
exchispubClientLogons = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubClientLogons.setStatus('mandatory')
exchispubActiveClientLogons = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubActiveClientLogons.setStatus('mandatory')
exchispubPeakClientLogons = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubPeakClientLogons.setStatus('mandatory')
exchispubFolderOpensPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubFolderOpensPerSec.setStatus('mandatory')
exchispubMessageOpensPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 24, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchispubMessageOpensPerSec.setStatus('mandatory')
mSExchangeIS_Private = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25)).setLabel("mSExchangeIS-Private")
exchisprivSendQueueSize = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivSendQueueSize.setStatus('mandatory')
exchisprivReceiveQueueSize = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivReceiveQueueSize.setStatus('mandatory')
exchisprivCategorizationCount = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivCategorizationCount.setStatus('mandatory')
exchisprivMessagesDelivered = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivMessagesDelivered.setStatus('mandatory')
exchisprivMessageRecipientsDelivered = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivMessageRecipientsDelivered.setStatus('mandatory')
exchisprivMessagesSent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivMessagesSent.setStatus('mandatory')
exchisprivMessagesSubmitted = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivMessagesSubmitted.setStatus('mandatory')
exchisprivSingleInstanceRatio = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivSingleInstanceRatio.setStatus('mandatory')
exchisprivMessagesDeliveredPerMin = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivMessagesDeliveredPerMin.setStatus('mandatory')
exchisprivMessageRecipientsDeliveredPerMin = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivMessageRecipientsDeliveredPerMin.setStatus('mandatory')
exchisprivMessagesSentPerMin = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivMessagesSentPerMin.setStatus('mandatory')
exchisprivMessagesSubmittedPerMin = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivMessagesSubmittedPerMin.setStatus('mandatory')
exchisprivAverageDeliveryTime = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivAverageDeliveryTime.setStatus('mandatory')
exchisprivAverageLocalDeliveryTime = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivAverageLocalDeliveryTime.setStatus('mandatory')
exchisprivTotalSizeOfRecoverableItems = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivTotalSizeOfRecoverableItems.setStatus('mandatory')
exchisprivTotalCountOfRecoverableItems = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivTotalCountOfRecoverableItems.setStatus('mandatory')
exchisprivClientLogons = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivClientLogons.setStatus('mandatory')
exchisprivActiveClientLogons = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivActiveClientLogons.setStatus('mandatory')
exchisprivPeakClientLogons = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivPeakClientLogons.setStatus('mandatory')
exchisprivLocalDeliveries = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivLocalDeliveries.setStatus('mandatory')
exchisprivLocalDeliveryRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivLocalDeliveryRate.setStatus('mandatory')
exchisprivFolderOpensPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivFolderOpensPerSec.setStatus('mandatory')
exchisprivMessageOpensPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 25, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchisprivMessageOpensPerSec.setStatus('mandatory')
mSExchangeDS = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26))
exchdsAccessViolations = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchdsAccessViolations.setStatus('mandatory')
exchdsABBrowsesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchdsABBrowsesPerSec.setStatus('mandatory')
exchdsABReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchdsABReadsPerSec.setStatus('mandatory')
exchdsExDSReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchdsExDSReadsPerSec.setStatus('mandatory')
exchdsReplicationUpdatesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchdsReplicationUpdatesPerSec.setStatus('mandatory')
exchdsThreadsInUse = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchdsThreadsInUse.setStatus('mandatory')
exchdsABWritesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchdsABWritesPerSec.setStatus('mandatory')
exchdsExDSWritesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchdsExDSWritesPerSec.setStatus('mandatory')
exchdsExDSClientSessions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchdsExDSClientSessions.setStatus('mandatory')
exchdsABClientSessions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchdsABClientSessions.setStatus('mandatory')
exchdsPendingReplicationSynchronizations = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchdsPendingReplicationSynchronizations.setStatus('mandatory')
exchdsRemainingReplicationUpdates = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchdsRemainingReplicationUpdates.setStatus('mandatory')
exchdsObjectsReplicatedOutPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchdsObjectsReplicatedOutPerSec.setStatus('mandatory')
exchdsAddressBookViewReadsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchdsAddressBookViewReadsPerSec.setStatus('mandatory')
exchdsAddressBookViewWritesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchdsAddressBookViewWritesPerSec.setStatus('mandatory')
exchdsAddressBookViewModifiesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchdsAddressBookViewModifiesPerSec.setStatus('mandatory')
exchdsLDAPSearches = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchdsLDAPSearches.setStatus('mandatory')
exchdsLDAPSearchesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 26, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: exchdsLDAPSearchesPerSec.setStatus('mandatory')
web_Proxy_Server_Service = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27)).setLabel("web-Proxy-Server-Service")
webproxysrvrUpstreamBytesSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrUpstreamBytesSentPerSec.setStatus('mandatory')
webproxysrvrUpstreamBytesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrUpstreamBytesReceivedPerSec.setStatus('mandatory')
webproxysrvrUpstreamBytesTotalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrUpstreamBytesTotalPerSec.setStatus('mandatory')
webproxysrvrClientBytesSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrClientBytesSentPerSec.setStatus('mandatory')
webproxysrvrClientBytesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrClientBytesReceivedPerSec.setStatus('mandatory')
webproxysrvrClientBytesTotalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrClientBytesTotalPerSec.setStatus('mandatory')
webproxysrvrSSLClientBytesSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrSSLClientBytesSentPerSec.setStatus('mandatory')
webproxysrvrSSLClientBytesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrSSLClientBytesReceivedPerSec.setStatus('mandatory')
webproxysrvrSSLClientBytesTotalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrSSLClientBytesTotalPerSec.setStatus('mandatory')
webproxysrvrSocksClientBytesSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrSocksClientBytesSentPerSec.setStatus('mandatory')
webproxysrvrSocksClientBytesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrSocksClientBytesReceivedPerSec.setStatus('mandatory')
webproxysrvrSocksClientBytesTotalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrSocksClientBytesTotalPerSec.setStatus('mandatory')
webproxysrvrCurrentUsers = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrCurrentUsers.setStatus('mandatory')
webproxysrvrTotalUsers = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrTotalUsers.setStatus('mandatory')
webproxysrvrMaximumUsers = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrMaximumUsers.setStatus('mandatory')
webproxysrvrFtpRequests = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrFtpRequests.setStatus('mandatory')
webproxysrvrGopherRequests = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrGopherRequests.setStatus('mandatory')
webproxysrvrHttpRequests = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrHttpRequests.setStatus('mandatory')
webproxysrvrTotalRequests = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrTotalRequests.setStatus('mandatory')
webproxysrvrTotalSuccessfulRequests = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrTotalSuccessfulRequests.setStatus('mandatory')
webproxysrvrTotalFailingRequests = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrTotalFailingRequests.setStatus('mandatory')
webproxysrvrTotalCacheFetches = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrTotalCacheFetches.setStatus('mandatory')
webproxysrvrTotalUpstreamFetches = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrTotalUpstreamFetches.setStatus('mandatory')
webproxysrvrCacheHitRatioPercent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrCacheHitRatioPercent.setStatus('mandatory')
webproxysrvrSitesDenied = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrSitesDenied.setStatus('mandatory')
webproxysrvrSitesGranted = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrSitesGranted.setStatus('mandatory')
webproxysrvrDNSCacheEntries = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrDNSCacheEntries.setStatus('mandatory')
webproxysrvrDNSRetrievals = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrDNSRetrievals.setStatus('mandatory')
webproxysrvrDNSCacheFlushes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrDNSCacheFlushes.setStatus('mandatory')
webproxysrvrDNSCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrDNSCacheHits.setStatus('mandatory')
webproxysrvrDNSCacheHitsPercent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrDNSCacheHitsPercent.setStatus('mandatory')
webproxysrvrHTTPSSessions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrHTTPSSessions.setStatus('mandatory')
webproxysrvrSNEWSSessions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrSNEWSSessions.setStatus('mandatory')
webproxysrvrUnknownSSLSessions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrUnknownSSLSessions.setStatus('mandatory')
webproxysrvrTotalSSLSessions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrTotalSSLSessions.setStatus('mandatory')
webproxysrvrSocksSessions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrSocksSessions.setStatus('mandatory')
webproxysrvrTotalSocksSessions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrTotalSocksSessions.setStatus('mandatory')
webproxysrvrTotalSuccessfulSocksSessions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrTotalSuccessfulSocksSessions.setStatus('mandatory')
webproxysrvrTotalFailedSocksSessions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrTotalFailedSocksSessions.setStatus('mandatory')
webproxysrvrThreadPoolSize = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrThreadPoolSize.setStatus('mandatory')
webproxysrvrThreadPoolFailures = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrThreadPoolFailures.setStatus('mandatory')
webproxysrvrSSLSessionsScavenged = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrSSLSessionsScavenged.setStatus('mandatory')
webproxysrvrThreadPoolActiveSessions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrThreadPoolActiveSessions.setStatus('mandatory')
webproxysrvrArrayBytesSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrArrayBytesSentPerSec.setStatus('mandatory')
webproxysrvrArrayBytesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrArrayBytesReceivedPerSec.setStatus('mandatory')
webproxysrvrArrayBytesTotalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrArrayBytesTotalPerSec.setStatus('mandatory')
webproxysrvrTotalArrayFetches = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrTotalArrayFetches.setStatus('mandatory')
webproxysrvrReverseBytesSentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrReverseBytesSentPerSec.setStatus('mandatory')
webproxysrvrReverseBytesReceivedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrReverseBytesReceivedPerSec.setStatus('mandatory')
webproxysrvrReverseBytesTotalPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrReverseBytesTotalPerSec.setStatus('mandatory')
webproxysrvrTotalReverseFetches = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrTotalReverseFetches.setStatus('mandatory')
webproxysrvrRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrRequestsPerSec.setStatus('mandatory')
webproxysrvrFailingRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 27, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrFailingRequestsPerSec.setStatus('mandatory')
winSock_Proxy_Server = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28)).setLabel("winSock-Proxy-Server")
winsockproxysrvrSuccessfulDNSResolutions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrSuccessfulDNSResolutions.setStatus('mandatory')
winsockproxysrvrFailedDNSResolutions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrFailedDNSResolutions.setStatus('mandatory')
winsockproxysrvrPendingDNSResolutions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrPendingDNSResolutions.setStatus('mandatory')
winsockproxysrvrActiveSessions = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrActiveSessions.setStatus('mandatory')
winsockproxysrvrActiveTCPConnections = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrActiveTCPConnections.setStatus('mandatory')
winsockproxysrvrActiveUDPConnections = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrActiveUDPConnections.setStatus('mandatory')
winsockproxysrvrConnectingTCPConnections = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrConnectingTCPConnections.setStatus('mandatory')
winsockproxysrvrBack_ConnectingTCPConnections = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 8), Integer32()).setLabel("winsockproxysrvrBack-ConnectingTCPConnections").setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrBack_ConnectingTCPConnections.setStatus('mandatory')
winsockproxysrvrAcceptingTCPConnections = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrAcceptingTCPConnections.setStatus('mandatory')
winsockproxysrvrListeningTCPConnections = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrListeningTCPConnections.setStatus('mandatory')
winsockproxysrvrWorkerThreads = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrWorkerThreads.setStatus('mandatory')
winsockproxysrvrAvailableWorkerThreads = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrAvailableWorkerThreads.setStatus('mandatory')
winsockproxysrvrBytesReadPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrBytesReadPerSec.setStatus('mandatory')
winsockproxysrvrBytesWrittenPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrBytesWrittenPerSec.setStatus('mandatory')
winsockproxysrvrNon_connectedUDPMappings = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 15), Integer32()).setLabel("winsockproxysrvrNon-connectedUDPMappings").setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrNon_connectedUDPMappings.setStatus('mandatory')
winsockproxysrvrDNSCacheEntries = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrDNSCacheEntries.setStatus('mandatory')
winsockproxysrvrDNSCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrDNSCacheHits.setStatus('mandatory')
winsockproxysrvrDNSCacheFlushes = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrDNSCacheFlushes.setStatus('mandatory')
winsockproxysrvrDNSRetrievals = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrDNSRetrievals.setStatus('mandatory')
winsockproxysrvrDNSCacheHitsPercent = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 28, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: winsockproxysrvrDNSCacheHitsPercent.setStatus('mandatory')
web_Proxy_Server_Cache = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 29)).setLabel("web-Proxy-Server-Cache")
webproxysrvrcacheURLsInCache = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 29, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrcacheURLsInCache.setStatus('mandatory')
webproxysrvrcacheBytesInCache = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 29, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrcacheBytesInCache.setStatus('mandatory')
webproxysrvrcacheTotalBytesCached = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 29, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrcacheTotalBytesCached.setStatus('mandatory')
webproxysrvrcacheTotalBytesRetrieved = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 29, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrcacheTotalBytesRetrieved.setStatus('mandatory')
webproxysrvrcacheTotalURLsCached = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 29, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrcacheTotalURLsCached.setStatus('mandatory')
webproxysrvrcacheTotalURLsRetrieved = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 29, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrcacheTotalURLsRetrieved.setStatus('mandatory')
webproxysrvrcacheMaxBytesCached = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 29, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrcacheMaxBytesCached.setStatus('mandatory')
webproxysrvrcacheMaxURLsCached = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 29, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrcacheMaxURLsCached.setStatus('mandatory')
webproxysrvrcacheTotalActivelyRefreshedURLs = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 29, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrcacheTotalActivelyRefreshedURLs.setStatus('mandatory')
webproxysrvrcacheTotalBytesActivelyRefreshed = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 29, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrcacheTotalBytesActivelyRefreshed.setStatus('mandatory')
webproxysrvrcacheURLRetrieveRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 29, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrcacheURLRetrieveRate.setStatus('mandatory')
webproxysrvrcacheBytesRetrievedRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 29, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrcacheBytesRetrievedRate.setStatus('mandatory')
webproxysrvrcacheURLCommitRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 29, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrcacheURLCommitRate.setStatus('mandatory')
webproxysrvrcacheBytesCommitedRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 29, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrcacheBytesCommitedRate.setStatus('mandatory')
webproxysrvrcacheActiveURLRefreshRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 29, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrcacheActiveURLRefreshRate.setStatus('mandatory')
webproxysrvrcacheActiveRefreshBytesRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 29, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webproxysrvrcacheActiveRefreshBytesRate.setStatus('mandatory')
telephony = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 30))
telephonyLines = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 30, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephonyLines.setStatus('mandatory')
telephonyTelephoneDevices = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 30, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephonyTelephoneDevices.setStatus('mandatory')
telephonyActiveLines = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 30, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephonyActiveLines.setStatus('mandatory')
telephonyActiveTelephones = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 30, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephonyActiveTelephones.setStatus('mandatory')
telephonyOutgoingCallsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 30, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephonyOutgoingCallsPerSec.setStatus('mandatory')
telephonyIncomingCallsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 30, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephonyIncomingCallsPerSec.setStatus('mandatory')
telephonyClientApps = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 30, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephonyClientApps.setStatus('mandatory')
telephonyCurrentOutgoingCalls = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 30, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephonyCurrentOutgoingCalls.setStatus('mandatory')
telephonyCurrentIncomingCalls = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 30, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephonyCurrentIncomingCalls.setStatus('mandatory')
rasportrAS_PortTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31), ).setLabel("rasportrAS-PortTable")
if mibBuilder.loadTexts: rasportrAS_PortTable.setStatus('mandatory')
rasportrAS_PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1), ).setLabel("rasportrAS-PortEntry").setIndexNames((0, "WINDOWS-NT-PERFORMANCE", "rasportrAS-PortIndex"))
if mibBuilder.loadTexts: rasportrAS_PortEntry.setStatus('mandatory')
rasportrAS_PortIndex = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 1), Integer32()).setLabel("rasportrAS-PortIndex").setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportrAS_PortIndex.setStatus('mandatory')
rasportrAS_PortInstance = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 2), DisplayString()).setLabel("rasportrAS-PortInstance").setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportrAS_PortInstance.setStatus('mandatory')
rasportBytesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportBytesTransmitted.setStatus('mandatory')
rasportBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportBytesReceived.setStatus('mandatory')
rasportFramesTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportFramesTransmitted.setStatus('mandatory')
rasportFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportFramesReceived.setStatus('mandatory')
rasportPercentCompressionOut = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportPercentCompressionOut.setStatus('mandatory')
rasportPercentCompressionIn = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportPercentCompressionIn.setStatus('mandatory')
rasportCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportCRCErrors.setStatus('mandatory')
rasportTimeoutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportTimeoutErrors.setStatus('mandatory')
rasportSerialOverrunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportSerialOverrunErrors.setStatus('mandatory')
rasportAlignmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportAlignmentErrors.setStatus('mandatory')
rasportBufferOverrunErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportBufferOverrunErrors.setStatus('mandatory')
rasportTotalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportTotalErrors.setStatus('mandatory')
rasportBytesTransmittedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportBytesTransmittedPerSec.setStatus('mandatory')
rasportBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportBytesReceivedPerSec.setStatus('mandatory')
rasportFramesTransmittedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportFramesTransmittedPerSec.setStatus('mandatory')
rasportFramesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportFramesReceivedPerSec.setStatus('mandatory')
rasportTotalErrorsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 31, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasportTotalErrorsPerSec.setStatus('mandatory')
nwnetbiosnWLink_NetBIOSTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32), ).setLabel("nwnetbiosnWLink-NetBIOSTable")
if mibBuilder.loadTexts: nwnetbiosnWLink_NetBIOSTable.setStatus('mandatory')
nwnetbiosnWLink_NetBIOSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1), ).setLabel("nwnetbiosnWLink-NetBIOSEntry").setIndexNames((0, "WINDOWS-NT-PERFORMANCE", "nwnetbiosnWLink-NetBIOSIndex"))
if mibBuilder.loadTexts: nwnetbiosnWLink_NetBIOSEntry.setStatus('mandatory')
nwnetbiosnWLink_NetBIOSIndex = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 1), Integer32()).setLabel("nwnetbiosnWLink-NetBIOSIndex").setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosnWLink_NetBIOSIndex.setStatus('mandatory')
nwnetbiosnWLink_NetBIOSInstance = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 2), DisplayString()).setLabel("nwnetbiosnWLink-NetBIOSInstance").setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosnWLink_NetBIOSInstance.setStatus('mandatory')
nwnetbiosDatagramsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosDatagramsPerSec.setStatus('mandatory')
nwnetbiosDatagramBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosDatagramBytesPerSec.setStatus('mandatory')
nwnetbiosPacketsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosPacketsPerSec.setStatus('mandatory')
nwnetbiosFramesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosFramesPerSec.setStatus('mandatory')
nwnetbiosFrameBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosFrameBytesPerSec.setStatus('mandatory')
nwnetbiosBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosBytesTotalPerSec.setStatus('mandatory')
nwnetbiosConnectionsOpen = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosConnectionsOpen.setStatus('mandatory')
nwnetbiosConnectionsNoRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosConnectionsNoRetries.setStatus('mandatory')
nwnetbiosConnectionsWithRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosConnectionsWithRetries.setStatus('mandatory')
nwnetbiosDisconnectsLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosDisconnectsLocal.setStatus('mandatory')
nwnetbiosDisconnectsRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosDisconnectsRemote.setStatus('mandatory')
nwnetbiosFailuresLink = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosFailuresLink.setStatus('mandatory')
nwnetbiosFailuresAdapter = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosFailuresAdapter.setStatus('mandatory')
nwnetbiosConnectionSessionTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosConnectionSessionTimeouts.setStatus('mandatory')
nwnetbiosConnectionsCanceled = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosConnectionsCanceled.setStatus('mandatory')
nwnetbiosFailuresResourceRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosFailuresResourceRemote.setStatus('mandatory')
nwnetbiosFailuresResourceLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosFailuresResourceLocal.setStatus('mandatory')
nwnetbiosFailuresNotFound = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosFailuresNotFound.setStatus('mandatory')
nwnetbiosFailuresNoListen = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosFailuresNoListen.setStatus('mandatory')
nwnetbiosDatagramsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosDatagramsSentPerSec.setStatus('mandatory')
nwnetbiosDatagramBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosDatagramBytesSentPerSec.setStatus('mandatory')
nwnetbiosDatagramsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosDatagramsReceivedPerSec.setStatus('mandatory')
nwnetbiosDatagramBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosDatagramBytesReceivedPerSec.setStatus('mandatory')
nwnetbiosPacketsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosPacketsSentPerSec.setStatus('mandatory')
nwnetbiosPacketsReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosPacketsReceivedPerSec.setStatus('mandatory')
nwnetbiosFramesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosFramesSentPerSec.setStatus('mandatory')
nwnetbiosFrameBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosFrameBytesSentPerSec.setStatus('mandatory')
nwnetbiosFramesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosFramesReceivedPerSec.setStatus('mandatory')
nwnetbiosFrameBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosFrameBytesReceivedPerSec.setStatus('mandatory')
nwnetbiosFramesRe_SentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 32), Counter32()).setLabel("nwnetbiosFramesRe-SentPerSec").setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosFramesRe_SentPerSec.setStatus('mandatory')
nwnetbiosFrameBytesRe_SentPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 33), Integer32()).setLabel("nwnetbiosFrameBytesRe-SentPerSec").setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosFrameBytesRe_SentPerSec.setStatus('mandatory')
nwnetbiosFramesRejectedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosFramesRejectedPerSec.setStatus('mandatory')
nwnetbiosFrameBytesRejectedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosFrameBytesRejectedPerSec.setStatus('mandatory')
nwnetbiosExpirationsResponse = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosExpirationsResponse.setStatus('mandatory')
nwnetbiosExpirationsAck = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosExpirationsAck.setStatus('mandatory')
nwnetbiosWindowSendMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosWindowSendMaximum.setStatus('mandatory')
nwnetbiosWindowSendAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosWindowSendAverage.setStatus('mandatory')
nwnetbiosPiggybackAckQueuedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosPiggybackAckQueuedPerSec.setStatus('mandatory')
nwnetbiosPiggybackAckTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 32, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nwnetbiosPiggybackAckTimeouts.setStatus('mandatory')
ntsystem = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33))
ntsystemFileReadOperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemFileReadOperationsPerSec.setStatus('mandatory')
ntsystemFileWriteOperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemFileWriteOperationsPerSec.setStatus('mandatory')
ntsystemFileControlOperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemFileControlOperationsPerSec.setStatus('mandatory')
ntsystemFileReadBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemFileReadBytesPerSec.setStatus('mandatory')
ntsystemFileWriteBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemFileWriteBytesPerSec.setStatus('mandatory')
ntsystemFileControlBytesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemFileControlBytesPerSec.setStatus('mandatory')
ntsystemContextSwitchesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemContextSwitchesPerSec.setStatus('mandatory')
ntsystemSystemCallsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemSystemCallsPerSec.setStatus('mandatory')
ntsystemPercentTotalProcessorTime = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemPercentTotalProcessorTime.setStatus('mandatory')
ntsystemPercentTotalUserTime = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemPercentTotalUserTime.setStatus('mandatory')
ntsystemPercentTotalPrivilegedTime = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemPercentTotalPrivilegedTime.setStatus('mandatory')
ntsystemTotalInterruptsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemTotalInterruptsPerSec.setStatus('mandatory')
ntsystemFileDataOperationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemFileDataOperationsPerSec.setStatus('mandatory')
ntsystemSystemUpTime = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemSystemUpTime.setStatus('mandatory')
ntsystemProcessorQueueLength = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemProcessorQueueLength.setStatus('mandatory')
ntsystemAlignmentFixupsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemAlignmentFixupsPerSec.setStatus('mandatory')
ntsystemExceptionDispatchesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemExceptionDispatchesPerSec.setStatus('mandatory')
ntsystemFloatingEmulationsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemFloatingEmulationsPerSec.setStatus('mandatory')
ntsystemPercentTotalDPCTime = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemPercentTotalDPCTime.setStatus('mandatory')
ntsystemPercentTotalInterruptTime = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemPercentTotalInterruptTime.setStatus('mandatory')
ntsystemTotalDPCsQueuedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemTotalDPCsQueuedPerSec.setStatus('mandatory')
ntsystemTotalDPCRate = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemTotalDPCRate.setStatus('mandatory')
ntsystemTotalDPCBypassesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemTotalDPCBypassesPerSec.setStatus('mandatory')
ntsystemTotalAPCBypassesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemTotalAPCBypassesPerSec.setStatus('mandatory')
ntsystemPercentRegistryQuotaInUse = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 33, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntsystemPercentRegistryQuotaInUse.setStatus('mandatory')
packet_Filtering = MibIdentifier((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 34)).setLabel("packet-Filtering")
packetfilterTotalDroppedFrames = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 34, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetfilterTotalDroppedFrames.setStatus('mandatory')
packetfilterFramesDroppedDueToFilterDenial = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 34, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetfilterFramesDroppedDueToFilterDenial.setStatus('mandatory')
packetfilterFramesDroppedDueToProtocolViolations = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 34, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetfilterFramesDroppedDueToProtocolViolations.setStatus('mandatory')
packetfilterTotalIncomingConnections = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 34, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetfilterTotalIncomingConnections.setStatus('mandatory')
packetfilterTotalLostLoggingFrames = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 34, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: packetfilterTotalLostLoggingFrames.setStatus('mandatory')
webserviceweb_ServiceTable = MibTable((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35), ).setLabel("webserviceweb-ServiceTable")
if mibBuilder.loadTexts: webserviceweb_ServiceTable.setStatus('mandatory')
webserviceweb_ServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1), ).setLabel("webserviceweb-ServiceEntry").setIndexNames((0, "WINDOWS-NT-PERFORMANCE", "webserviceweb-ServiceIndex"))
if mibBuilder.loadTexts: webserviceweb_ServiceEntry.setStatus('mandatory')
webserviceweb_ServiceIndex = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 1), Integer32()).setLabel("webserviceweb-ServiceIndex").setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceweb_ServiceIndex.setStatus('mandatory')
webserviceweb_ServiceInstance = MibScalar((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 2), DisplayString()).setLabel("webserviceweb-ServiceInstance").setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceweb_ServiceInstance.setStatus('mandatory')
webserviceBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceBytesSentPerSec.setStatus('mandatory')
webserviceBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceBytesReceivedPerSec.setStatus('mandatory')
webserviceBytesTotalPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceBytesTotalPerSec.setStatus('mandatory')
webserviceTotalFilesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalFilesSent.setStatus('mandatory')
webserviceFilesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceFilesSentPerSec.setStatus('mandatory')
webserviceTotalFilesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalFilesReceived.setStatus('mandatory')
webserviceFilesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceFilesReceivedPerSec.setStatus('mandatory')
webserviceTotalFilesTransferred = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalFilesTransferred.setStatus('mandatory')
webserviceFilesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceFilesPerSec.setStatus('mandatory')
webserviceCurrentAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceCurrentAnonymousUsers.setStatus('mandatory')
webserviceCurrentNonAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceCurrentNonAnonymousUsers.setStatus('mandatory')
webserviceTotalAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalAnonymousUsers.setStatus('mandatory')
webserviceAnonymousUsersPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceAnonymousUsersPerSec.setStatus('mandatory')
webserviceTotalNonAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalNonAnonymousUsers.setStatus('mandatory')
webserviceNonAnonymousUsersPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceNonAnonymousUsersPerSec.setStatus('mandatory')
webserviceMaximumAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceMaximumAnonymousUsers.setStatus('mandatory')
webserviceMaximumNonAnonymousUsers = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceMaximumNonAnonymousUsers.setStatus('mandatory')
webserviceCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceCurrentConnections.setStatus('mandatory')
webserviceMaximumConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceMaximumConnections.setStatus('mandatory')
webserviceTotalConnectionAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalConnectionAttempts.setStatus('mandatory')
webserviceConnectionAttemptsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceConnectionAttemptsPerSec.setStatus('mandatory')
webserviceTotalLogonAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalLogonAttempts.setStatus('mandatory')
webserviceLogonAttemptsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceLogonAttemptsPerSec.setStatus('mandatory')
webserviceTotalGetRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalGetRequests.setStatus('mandatory')
webserviceGetRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceGetRequestsPerSec.setStatus('mandatory')
webserviceTotalPostRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalPostRequests.setStatus('mandatory')
webservicePostRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webservicePostRequestsPerSec.setStatus('mandatory')
webserviceTotalHeadRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalHeadRequests.setStatus('mandatory')
webserviceHeadRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceHeadRequestsPerSec.setStatus('mandatory')
webserviceTotalPutRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalPutRequests.setStatus('mandatory')
webservicePutRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webservicePutRequestsPerSec.setStatus('mandatory')
webserviceTotalDeleteRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalDeleteRequests.setStatus('mandatory')
webserviceDeleteRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceDeleteRequestsPerSec.setStatus('mandatory')
webserviceTotalTraceRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalTraceRequests.setStatus('mandatory')
webserviceSystemCodeResidentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceSystemCodeResidentBytes.setStatus('mandatory')
webserviceTotalOtherRequestMethods = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalOtherRequestMethods.setStatus('mandatory')
webserviceOtherRequestMethodsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceOtherRequestMethodsPerSec.setStatus('mandatory')
webserviceTotalMethodRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalMethodRequests.setStatus('mandatory')
webserviceTotalMethodRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalMethodRequestsPerSec.setStatus('mandatory')
webserviceTotalCGIRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalCGIRequests.setStatus('mandatory')
webserviceCGIRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceCGIRequestsPerSec.setStatus('mandatory')
webserviceTotalISAPIExtensionRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalISAPIExtensionRequests.setStatus('mandatory')
webserviceISAPIExtensionRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceISAPIExtensionRequestsPerSec.setStatus('mandatory')
webserviceTotalNotFoundErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalNotFoundErrors.setStatus('mandatory')
webserviceNotFoundErrorsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceNotFoundErrorsPerSec.setStatus('mandatory')
webserviceCurrentCGIRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 48), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceCurrentCGIRequests.setStatus('mandatory')
webserviceCurrentISAPIExtensionRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceCurrentISAPIExtensionRequests.setStatus('mandatory')
webserviceMaximumCGIRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceMaximumCGIRequests.setStatus('mandatory')
webserviceMaximumISAPIExtensionRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceMaximumISAPIExtensionRequests.setStatus('mandatory')
webserviceTotalBlockedAsyncIPerORequests = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalBlockedAsyncIPerORequests.setStatus('mandatory')
webserviceTotalAllowedAsyncIPerORequests = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalAllowedAsyncIPerORequests.setStatus('mandatory')
webserviceTotalRejectedAsyncIPerORequests = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceTotalRejectedAsyncIPerORequests.setStatus('mandatory')
webserviceCurrentBlockedAsyncIPerORequests = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceCurrentBlockedAsyncIPerORequests.setStatus('mandatory')
webserviceMeasuredAsyncIPerOBandwidthUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 311, 1, 1, 3, 1, 1, 35, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: webserviceMeasuredAsyncIPerOBandwidthUsage.setStatus('mandatory')
mibBuilder.exportSymbols("WINDOWS-NT-PERFORMANCE", exchisUserCount=exchisUserCount, cacheSyncPinReadsPerSec=cacheSyncPinReadsPerSec, exchdsReplicationUpdatesPerSec=exchdsReplicationUpdatesPerSec, memoryCacheBytes=memoryCacheBytes, netbeuiFailuresAdapter=netbeuiFailuresAdapter, ntsystemAlignmentFixupsPerSec=ntsystemAlignmentFixupsPerSec, processprocessTable=processprocessTable, srvrqueuesTotalOperationsPerSec=srvrqueuesTotalOperationsPerSec, pdiskPercentDiskReadTime=pdiskPercentDiskReadTime, rasportFramesReceivedPerSec=rasportFramesReceivedPerSec, rastotalBytesTransmitted=rastotalBytesTransmitted, exchmtaInboundBytesTotal=exchmtaInboundBytesTotal, exchimcTotalMessagesQueued=exchimcTotalMessagesQueued, cpuprocessorTable=cpuprocessorTable, nwnetbiosnWLink_NetBIOSIndex=nwnetbiosnWLink_NetBIOSIndex, webserviceFilesPerSec=webserviceFilesPerSec, webproxysrvrReverseBytesTotalPerSec=webproxysrvrReverseBytesTotalPerSec, exchimcTotalFailedConversions=exchimcTotalFailedConversions, serverErrorsLogon=serverErrorsLogon, rasportBytesTransmittedPerSec=rasportBytesTransmittedPerSec, memoryPagesOutputPerSec=memoryPagesOutputPerSec, nwnetbiosnWLink_NetBIOSTable=nwnetbiosnWLink_NetBIOSTable, winsockproxysrvrDNSCacheHitsPercent=winsockproxysrvrDNSCacheHitsPercent, exchimcNDRsTotalOutbound=exchimcNDRsTotalOutbound, pdiskAvgDiskSecPerWrite=pdiskAvgDiskSecPerWrite, webproxysrvrFailingRequestsPerSec=webproxysrvrFailingRequestsPerSec, rasportrAS_PortIndex=rasportrAS_PortIndex, webserviceweb_ServiceInstance=webserviceweb_ServiceInstance, nwnetbiosConnectionsOpen=nwnetbiosConnectionsOpen, exchisActiveUserCount=exchisActiveUserCount, processVirtualBytesPeak=processVirtualBytesPeak, nwnetbiosFrameBytesRe_SentPerSec=nwnetbiosFrameBytesRe_SentPerSec, winsockproxysrvrListeningTCPConnections=winsockproxysrvrListeningTCPConnections, exchdsPendingReplicationSynchronizations=exchdsPendingReplicationSynchronizations, winsockproxysrvrActiveSessions=winsockproxysrvrActiveSessions, processPercentProcessorTime=processPercentProcessorTime, nwlinkspxWindowSendMaximum=nwlinkspxWindowSendMaximum, exchmtaconnLastOutboundAssociation=exchmtaconnLastOutboundAssociation, exchisNNTPCommandsIssued=exchisNNTPCommandsIssued, netbeuiDatagramsPerSec=netbeuiDatagramsPerSec, srvrqueuesWriteBytesPerSec=srvrqueuesWriteBytesPerSec, exchispubReplicationMessagesSent=exchispubReplicationMessagesSent, processprocessInstance=processprocessInstance, nwlinkipxDatagramBytesSentPerSec=nwlinkipxDatagramBytesSentPerSec, exchisNNTPMessagesPostedRate=exchisNNTPMessagesPostedRate, nwnetbiosDisconnectsLocal=nwnetbiosDisconnectsLocal, srvrqueuesAvailableWorkItems=srvrqueuesAvailableWorkItems, exchispubAverageTimeForLocalDelivery=exchispubAverageTimeForLocalDelivery, pdiskphysicalDiskTable=pdiskphysicalDiskTable, webproxysrvrcacheTotalActivelyRefreshedURLs=webproxysrvrcacheTotalActivelyRefreshedURLs, cacheMDLReadHitsPercent=cacheMDLReadHitsPercent, memoryPoolNonpagedAllocs=memoryPoolNonpagedAllocs, ldiskPercentDiskReadTime=ldiskPercentDiskReadTime, webserviceBytesSentPerSec=webserviceBytesSentPerSec, exchispubMessagesDelivered=exchispubMessagesDelivered, nwlinkipxDatagramsPerSec=nwlinkipxDatagramsPerSec, exchdsABClientSessions=exchdsABClientSessions, exchmtaconnTotalRecipientsOutbound=exchmtaconnTotalRecipientsOutbound, exchimcTotalSuccessfulConversions=exchimcTotalSuccessfulConversions, redirectorReadBytesPagingPerSec=redirectorReadBytesPagingPerSec, exchispubReplicationBackfillDataMessagesSent=exchispubReplicationBackfillDataMessagesSent, memoryAvailableBytes=memoryAvailableBytes, exchispubReplicationFolderDataMessagesSent=exchispubReplicationFolderDataMessagesSent, webproxysrvrDNSRetrievals=webproxysrvrDNSRetrievals, exchisprivReceiveQueueSize=exchisprivReceiveQueueSize, ntsystemFileControlBytesPerSec=ntsystemFileControlBytesPerSec, exchispubReplicationBackfillRequestsReceived=exchispubReplicationBackfillRequestsReceived, exchdsAccessViolations=exchdsAccessViolations, webserviceTotalAnonymousUsers=webserviceTotalAnonymousUsers, exchmtaExDSReadCallsPerSec=exchmtaExDSReadCallsPerSec, ldisklogicalDiskTable=ldisklogicalDiskTable, exchmtaconnInboundBytesTotal=exchmtaconnInboundBytesTotal, nwlinkipxConnectionsOpen=nwlinkipxConnectionsOpen, serverBytesTotalPerSec=serverBytesTotalPerSec, cacheAsyncDataMapsPerSec=cacheAsyncDataMapsPerSec, nwnetbiosFramesRe_SentPerSec=nwnetbiosFramesRe_SentPerSec, cacheSyncMDLReadsPerSec=cacheSyncMDLReadsPerSec, netbeuiFrameBytesRejectedPerSec=netbeuiFrameBytesRejectedPerSec, netbeuiWindowSendMaximum=netbeuiWindowSendMaximum, rastotalPercentCompressionIn=rastotalPercentCompressionIn, nwnetbiosDisconnectsRemote=nwnetbiosDisconnectsRemote, exchdsAddressBookViewWritesPerSec=exchdsAddressBookViewWritesPerSec, pdiskphysicalDiskIndex=pdiskphysicalDiskIndex, nbtconnBytesReceivedPerSec=nbtconnBytesReceivedPerSec, exchmtaAdminConnections=exchmtaAdminConnections, exchisprivSendQueueSize=exchisprivSendQueueSize, webproxysrvrUnknownSSLSessions=webproxysrvrUnknownSSLSessions, nwlinkipxFailuresNotFound=nwlinkipxFailuresNotFound, redirectorConnectsCore=redirectorConnectsCore, rastotalBufferOverrunErrors=rastotalBufferOverrunErrors, exchmtaconnLastInboundAssociation=exchmtaconnLastInboundAssociation, serverServerSessions=serverServerSessions, nwnetbiosFramesSentPerSec=nwnetbiosFramesSentPerSec, webproxysrvrClientBytesReceivedPerSec=webproxysrvrClientBytesReceivedPerSec, packetfilterTotalIncomingConnections=packetfilterTotalIncomingConnections, srvrqueuesserver_Work_QueuesInstance=srvrqueuesserver_Work_QueuesInstance, webproxysrvrcacheTotalBytesRetrieved=webproxysrvrcacheTotalBytesRetrieved, exchmtaconnFailedOutboundAssociations=exchmtaconnFailedOutboundAssociations, redirectorReadPacketsPerSec=redirectorReadPacketsPerSec, redirectorPacketsReceivedPerSec=redirectorPacketsReceivedPerSec, exchimcMessagesEnteringMTS_OUT=exchimcMessagesEnteringMTS_OUT, processPrivateBytes=processPrivateBytes, webproxysrvrFtpRequests=webproxysrvrFtpRequests, webserviceTotalOtherRequestMethods=webserviceTotalOtherRequestMethods, exchdsExDSWritesPerSec=exchdsExDSWritesPerSec, netBytesSentPerSec=netBytesSentPerSec, exchispubReplicationStatusMessagesSent=exchispubReplicationStatusMessagesSent, webproxysrvrTotalSocksSessions=webproxysrvrTotalSocksSessions, exchmtaconnReceiveMessagesPerSec=exchmtaconnReceiveMessagesPerSec, exchimcQueuedOutbound=exchimcQueuedOutbound, memoryPoolNonpagedBytes=memoryPoolNonpagedBytes, cpuPercentInterruptTime=cpuPercentInterruptTime, memorySystemCacheResidentBytes=memorySystemCacheResidentBytes, pdiskCurrentDiskQueueLength=pdiskCurrentDiskQueueLength, webserviceTotalConnectionAttempts=webserviceTotalConnectionAttempts, ntsystemTotalInterruptsPerSec=ntsystemTotalInterruptsPerSec, nwlinkspxPiggybackAckTimeouts=nwlinkspxPiggybackAckTimeouts, processVirtualBytes=processVirtualBytes, udpDatagramsSentPerSec=udpDatagramsSentPerSec, serverPoolNonpagedFailures=serverPoolNonpagedFailures, webservicePutRequestsPerSec=webservicePutRequestsPerSec, webproxysrvrArrayBytesTotalPerSec=webproxysrvrArrayBytesTotalPerSec, telephony=telephony, telephonyCurrentIncomingCalls=telephonyCurrentIncomingCalls, netPacketsSentPerSec=netPacketsSentPerSec, exchisNNTPMessagesPosted=exchisNNTPMessagesPosted, webproxysrvrTotalSuccessfulRequests=webproxysrvrTotalSuccessfulRequests, srvrqueuesBytesTransferredPerSec=srvrqueuesBytesTransferredPerSec, cacheSyncCopyReadsPerSec=cacheSyncCopyReadsPerSec, webserviceISAPIExtensionRequestsPerSec=webserviceISAPIExtensionRequestsPerSec, nwnetbiosFrameBytesSentPerSec=nwnetbiosFrameBytesSentPerSec, webserviceAnonymousUsersPerSec=webserviceAnonymousUsersPerSec, nwlinkipxBytesTotalPerSec=nwlinkipxBytesTotalPerSec, pagefilepaging_FileEntry=pagefilepaging_FileEntry, cachePinReadHitsPercent=cachePinReadHitsPercent, redirectorConnectsLanManager21=redirectorConnectsLanManager21, webproxysrvrHTTPSSessions=webproxysrvrHTTPSSessions, nwlinkipxFramesRejectedPerSec=nwlinkipxFramesRejectedPerSec, winnt=winnt, cacheCopyReadHitsPercent=cacheCopyReadHitsPercent, tcpSegmentsPerSec=tcpSegmentsPerSec, exchisprivAverageDeliveryTime=exchisprivAverageDeliveryTime, nwlinkspxFrameBytesRejectedPerSec=nwlinkspxFrameBytesRejectedPerSec, cacheDataMapHitsPercent=cacheDataMapHitsPercent, processPoolPagedBytes=processPoolPagedBytes, webproxysrvrSSLSessionsScavenged=webproxysrvrSSLSessionsScavenged, exchmtaconnCumulativeOutboundAssociations=exchmtaconnCumulativeOutboundAssociations, webserviceMaximumCGIRequests=webserviceMaximumCGIRequests, processprocessIndex=processprocessIndex, exchdsRemainingReplicationUpdates=exchdsRemainingReplicationUpdates, nwnetbiosFailuresResourceLocal=nwnetbiosFailuresResourceLocal, nwlinkipxDatagramsReceivedPerSec=nwlinkipxDatagramsReceivedPerSec, exchmtaInboundMessagesTotal=exchmtaInboundMessagesTotal, nwlinkspxBytesTotalPerSec=nwlinkspxBytesTotalPerSec, redirectorPacketsPerSec=redirectorPacketsPerSec, netbeuiWindowSendAverage=netbeuiWindowSendAverage, tcpConnectionFailures=tcpConnectionFailures, webproxysrvrcacheMaxURLsCached=webproxysrvrcacheMaxURLsCached, webproxysrvrTotalArrayFetches=webproxysrvrTotalArrayFetches, rastotalBytesReceived=rastotalBytesReceived, serverSessionsErroredOut=serverSessionsErroredOut, srvrqueuesContextBlocksQueuedPerSec=srvrqueuesContextBlocksQueuedPerSec, exchdsAddressBookViewModifiesPerSec=exchdsAddressBookViewModifiesPerSec, exchisprivMessageRecipientsDeliveredPerMin=exchisprivMessageRecipientsDeliveredPerMin, exchisWriteBytesRPCClientsPerSec=exchisWriteBytesRPCClientsPerSec, exchmtaconnOutboundMessagesTotal=exchmtaconnOutboundMessagesTotal, redirectorNetworkErrorsPerSec=redirectorNetworkErrorsPerSec, serverPoolNonpagedBytes=serverPoolNonpagedBytes, ipFragmentsRe_assembledPerSec=ipFragmentsRe_assembledPerSec, redirectorServerDisconnects=redirectorServerDisconnects, nwlinkspxConnectionsOpen=nwlinkspxConnectionsOpen, nwlinkspxFailuresResourceRemote=nwlinkspxFailuresResourceRemote, exchimcConnectionsTotalInbound=exchimcConnectionsTotalInbound, winsockproxysrvrPendingDNSResolutions=winsockproxysrvrPendingDNSResolutions, netbeuiDatagramBytesReceivedPerSec=netbeuiDatagramBytesReceivedPerSec, serverBytesReceivedPerSec=serverBytesReceivedPerSec, memorySystemDriverResidentBytes=memorySystemDriverResidentBytes, nwlinkspxFrameBytesRe_SentPerSec=nwlinkspxFrameBytesRe_SentPerSec, winsockproxysrvrDNSRetrievals=winsockproxysrvrDNSRetrievals, winsockproxysrvrConnectingTCPConnections=winsockproxysrvrConnectingTCPConnections, exchisNNTPCommandsIssuedRate=exchisNNTPCommandsIssuedRate, exchispubReplicationBackfillDataMessagesReceived=exchispubReplicationBackfillDataMessagesReceived, nwlinkspxFramesRe_SentPerSec=nwlinkspxFramesRe_SentPerSec, webserviceCurrentAnonymousUsers=webserviceCurrentAnonymousUsers, srvrqueuesReadBytesPerSec=srvrqueuesReadBytesPerSec, exchmtaX25TransmitBytesPerSec=exchmtaX25TransmitBytesPerSec, exchmtaAdminInterfaceReceiveBytesPerSec=exchmtaAdminInterfaceReceiveBytesPerSec, ntsystemPercentTotalDPCTime=ntsystemPercentTotalDPCTime, ntsystemSystemUpTime=ntsystemSystemUpTime, webproxysrvrMaximumUsers=webproxysrvrMaximumUsers, redirectorReadsDeniedPerSec=redirectorReadsDeniedPerSec, processWorkingSetPeak=processWorkingSetPeak, rasportTimeoutErrors=rasportTimeoutErrors, netPacketsOutboundDiscarded=netPacketsOutboundDiscarded, pdiskDiskWritesPerSec=pdiskDiskWritesPerSec, exchimcInboundMessagesTotal=exchimcInboundMessagesTotal, exchmtaconnInboundRejectReason=exchmtaconnInboundRejectReason, pdiskDiskReadBytesPerSec=pdiskDiskReadBytesPerSec, rastotalFramesTransmitted=rastotalFramesTransmitted, rastotalTotalErrors=rastotalTotalErrors, exchmtaconnOldestMessageQueued=exchmtaconnOldestMessageQueued, exchmtaconnOutboundFailureReason=exchmtaconnOutboundFailureReason, cpuDPCRate=cpuDPCRate, nwlinkipxDatagramBytesReceivedPerSec=nwlinkipxDatagramBytesReceivedPerSec, pagefilepaging_FileIndex=pagefilepaging_FileIndex, memoryWriteCopiesPerSec=memoryWriteCopiesPerSec, webproxysrvrThreadPoolActiveSessions=webproxysrvrThreadPoolActiveSessions, pdiskAvgDiskReadQueueLength=pdiskAvgDiskReadQueueLength, nwnetbiosDatagramBytesSentPerSec=nwnetbiosDatagramBytesSentPerSec, rastotalCRCErrors=rastotalCRCErrors, exchisNumberOfArticleIndexTableRowsExpired=exchisNumberOfArticleIndexTableRowsExpired, webproxysrvrcacheBytesInCache=webproxysrvrcacheBytesInCache, exchdsExDSClientSessions=exchdsExDSClientSessions, exchispubPeakClientLogons=exchispubPeakClientLogons, nwlinkipxFramesReceivedPerSec=nwlinkipxFramesReceivedPerSec, exchmtaDeferredDeliveryMsgs=exchmtaDeferredDeliveryMsgs, netnetwork_InterfaceInstance=netnetwork_InterfaceInstance, webproxysrvrcacheActiveRefreshBytesRate=webproxysrvrcacheActiveRefreshBytesRate, webproxysrvrArrayBytesSentPerSec=webproxysrvrArrayBytesSentPerSec, netbeuiConnectionsOpen=netbeuiConnectionsOpen, nwlinkipxConnectionsNoRetries=nwlinkipxConnectionsNoRetries, winsockproxysrvrBytesReadPerSec=winsockproxysrvrBytesReadPerSec, rasportTotalErrors=rasportTotalErrors, exchisprivTotalSizeOfRecoverableItems=exchisprivTotalSizeOfRecoverableItems, srvrqueuesBytesReceivedPerSec=srvrqueuesBytesReceivedPerSec, exchimcTotalInboundKilobytes=exchimcTotalInboundKilobytes, webproxysrvrSocksClientBytesReceivedPerSec=webproxysrvrSocksClientBytesReceivedPerSec, exchmtaTotalSuccessfulConversions=exchmtaTotalSuccessfulConversions, exchimcTotalRecipientsQueued=exchimcTotalRecipientsQueued, exchisNNTPMessagesReadRate=exchisNNTPMessagesReadRate, pdiskAvgDiskSecPerTransfer=pdiskAvgDiskSecPerTransfer, netbeuiDisconnectsLocal=netbeuiDisconnectsLocal, nwlinkspxFailuresLink=nwlinkspxFailuresLink, nwlinkipxFramesRe_SentPerSec=nwlinkipxFramesRe_SentPerSec, netPacketsPerSec=netPacketsPerSec, nwnetbiosFramesRejectedPerSec=nwnetbiosFramesRejectedPerSec, nbtconnnBT_ConnectionEntry=nbtconnnBT_ConnectionEntry, ntsystemTotalDPCsQueuedPerSec=ntsystemTotalDPCsQueuedPerSec, nwnetbiosWindowSendAverage=nwnetbiosWindowSendAverage, nwlinkspxnWLink_SPXEntry=nwlinkspxnWLink_SPXEntry, cacheFastReadsPerSec=cacheFastReadsPerSec, exchmtaWorkQueueBytes=exchmtaWorkQueueBytes, web_Proxy_Server_Service=web_Proxy_Server_Service, netPacketsReceivedNon_UnicastPerSec=netPacketsReceivedNon_UnicastPerSec, netbeuiPacketsReceivedPerSec=netbeuiPacketsReceivedPerSec, webproxysrvrTotalRequests=webproxysrvrTotalRequests, nwlinkipxFailuresNoListen=nwlinkipxFailuresNoListen, webproxysrvrReverseBytesReceivedPerSec=webproxysrvrReverseBytesReceivedPerSec, exchimcConnectionsTotalRejected=exchimcConnectionsTotalRejected, exchisprivActiveClientLogons=exchisprivActiveClientLogons, exchimcBytesQueuedMTS_OUT=exchimcBytesQueuedMTS_OUT, redirectorWritePacketsSmallPerSec=redirectorWritePacketsSmallPerSec, webserviceTotalLogonAttempts=webserviceTotalLogonAttempts, serverPoolPagedBytes=serverPoolPagedBytes)
mibBuilder.exportSymbols("WINDOWS-NT-PERFORMANCE", nwlinkipxPacketsSentPerSec=nwlinkipxPacketsSentPerSec, exchimcQueuedMTS_OUT=exchimcQueuedMTS_OUT, nwlinkspxFailuresAdapter=nwlinkspxFailuresAdapter, exchisprivLocalDeliveries=exchisprivLocalDeliveries, exchisNNTPOutboundConnections=exchisNNTPOutboundConnections, nwnetbiosFailuresNotFound=nwnetbiosFailuresNotFound, webserviceTotalPostRequests=webserviceTotalPostRequests, webserviceCurrentBlockedAsyncIPerORequests=webserviceCurrentBlockedAsyncIPerORequests, netbeuiDisconnectsRemote=netbeuiDisconnectsRemote, winsockproxysrvrDNSCacheFlushes=winsockproxysrvrDNSCacheFlushes, webproxysrvrCurrentUsers=webproxysrvrCurrentUsers, serverPoolPagedPeak=serverPoolPagedPeak, exchisprivFolderOpensPerSec=exchisprivFolderOpensPerSec, exchmtaconnSendBytesPerSec=exchmtaconnSendBytesPerSec, webproxysrvrcacheBytesCommitedRate=webproxysrvrcacheBytesCommitedRate, memorySystemCodeResidentBytes=memorySystemCodeResidentBytes, exchimcConnectionsInbound=exchimcConnectionsInbound, processPoolNonpagedBytes=processPoolNonpagedBytes, exchispubMessageSubmittedPerMin=exchispubMessageSubmittedPerMin, redirectorServerSessionsHung=redirectorServerSessionsHung, ipDatagramsPerSec=ipDatagramsPerSec, pagefilepaging_FileTable=pagefilepaging_FileTable, nwlinkipxnWLink_IPXIndex=nwlinkipxnWLink_IPXIndex, nwlinkspxConnectionsWithRetries=nwlinkspxConnectionsWithRetries, cacheSyncDataMapsPerSec=cacheSyncDataMapsPerSec, cacheDataFlushesPerSec=cacheDataFlushesPerSec, exchmtaWorkQueueLength=exchmtaWorkQueueLength, redirectorConnectsWindowsNT=redirectorConnectsWindowsNT, cacheCopyReadsPerSec=cacheCopyReadsPerSec, redirectorServerReconnects=redirectorServerReconnects, tcpConnectionsReset=tcpConnectionsReset, nwlinkipxnWLink_IPXTable=nwlinkipxnWLink_IPXTable, exchisPushNotificationsSkippedPerSec=exchisPushNotificationsSkippedPerSec, cpuDPCsQueuedPerSec=cpuDPCsQueuedPerSec, exchdsABBrowsesPerSec=exchdsABBrowsesPerSec, telephonyLines=telephonyLines, cacheLazyWriteFlushesPerSec=cacheLazyWriteFlushesPerSec, redirectorPacketsTransmittedPerSec=redirectorPacketsTransmittedPerSec, ntsystemPercentTotalPrivilegedTime=ntsystemPercentTotalPrivilegedTime, netbeuiFailuresResourceLocal=netbeuiFailuresResourceLocal, exchmtaTP4TransmitBytesPerSec=exchmtaTP4TransmitBytesPerSec, ldisklogicalDiskIndex=ldisklogicalDiskIndex, webserviceTotalGetRequests=webserviceTotalGetRequests, cacheFastReadNotPossiblesPerSec=cacheFastReadNotPossiblesPerSec, netbeuiConnectionsCanceled=netbeuiConnectionsCanceled, netPacketsReceivedPerSec=netPacketsReceivedPerSec, exchisPOP3CommandsIssued=exchisPOP3CommandsIssued, ldiskCurrentDiskQueueLength=ldiskCurrentDiskQueueLength, srvrqueuesWriteOperationsPerSec=srvrqueuesWriteOperationsPerSec, netbeuinetBEUIIndex=netbeuinetBEUIIndex, processElapsedTime=processElapsedTime, serverWorkItemShortages=serverWorkItemShortages, exchmtaTotalLoopsDetected=exchmtaTotalLoopsDetected, nwlinkipxFrameBytesReceivedPerSec=nwlinkipxFrameBytesReceivedPerSec, webproxysrvrcacheTotalURLsCached=webproxysrvrcacheTotalURLsCached, nwlinkspxnWLink_SPXIndex=nwlinkspxnWLink_SPXIndex, exchispubSingleInstanceRatio=exchispubSingleInstanceRatio, exchisMaximumAnonymousUsers=exchisMaximumAnonymousUsers, rasportBytesReceived=rasportBytesReceived, pdiskphysicalDiskInstance=pdiskphysicalDiskInstance, webserviceTotalISAPIExtensionRequests=webserviceTotalISAPIExtensionRequests, redirectorBytesReceivedPerSec=redirectorBytesReceivedPerSec, exchimcOutboundMessagesPerHr=exchimcOutboundMessagesPerHr, webproxysrvrReverseBytesSentPerSec=webproxysrvrReverseBytesSentPerSec, rastotalBytesTransmittedPerSec=rastotalBytesTransmittedPerSec, exchispubMessagesDeliveredPerMin=exchispubMessagesDeliveredPerMin, exchdsExDSReadsPerSec=exchdsExDSReadsPerSec, webproxysrvrThreadPoolFailures=webproxysrvrThreadPoolFailures, webproxysrvrSSLClientBytesTotalPerSec=webproxysrvrSSLClientBytesTotalPerSec, nwnetbiosnWLink_NetBIOSInstance=nwnetbiosnWLink_NetBIOSInstance, srvrqueuesTotalBytesPerSec=srvrqueuesTotalBytesPerSec, nbtconnnBT_ConnectionInstance=nbtconnnBT_ConnectionInstance, nwlinkipxExpirationsAck=nwlinkipxExpirationsAck, webproxysrvrcacheTotalBytesActivelyRefreshed=webproxysrvrcacheTotalBytesActivelyRefreshed, webservicePostRequestsPerSec=webservicePostRequestsPerSec, nwnetbiosDatagramsSentPerSec=nwnetbiosDatagramsSentPerSec, webserviceCurrentCGIRequests=webserviceCurrentCGIRequests, nwlinkspxExpirationsResponse=nwlinkspxExpirationsResponse, ntsystemProcessorQueueLength=ntsystemProcessorQueueLength, telephonyOutgoingCallsPerSec=telephonyOutgoingCallsPerSec, exchispubActiveClientLogons=exchispubActiveClientLogons, ipDatagramsReceivedHeaderErrors=ipDatagramsReceivedHeaderErrors, exchmtaTP4ReceiveBytesPerSec=exchmtaTP4ReceiveBytesPerSec, exchisNewsfeedInboundRejectedMessages=exchisNewsfeedInboundRejectedMessages, webserviceCGIRequestsPerSec=webserviceCGIRequestsPerSec, exchispubCategorizationCount=exchispubCategorizationCount, redirectorWritePacketsPerSec=redirectorWritePacketsPerSec, webserviceBytesTotalPerSec=webserviceBytesTotalPerSec, microsoft=microsoft, exchmtaThreadsInUse=exchmtaThreadsInUse, nwnetbiosExpirationsResponse=nwnetbiosExpirationsResponse, rasportPercentCompressionIn=rasportPercentCompressionIn, ldiskDiskTransfersPerSec=ldiskDiskTransfersPerSec, exchmtaOutboundMessagesTotal=exchmtaOutboundMessagesTotal, nwlinkspxFrameBytesPerSec=nwlinkspxFrameBytesPerSec, srvrqueuesQueueLength=srvrqueuesQueueLength, exchmtaDiskFileSyncsPerSec=exchmtaDiskFileSyncsPerSec, cpuPercentUserTime=cpuPercentUserTime, nwnetbiosExpirationsAck=nwnetbiosExpirationsAck, redirector=redirector, rasportPercentCompressionOut=rasportPercentCompressionOut, serverBlockingRequestsRejected=serverBlockingRequestsRejected, cpuAPCBypassesPerSec=cpuAPCBypassesPerSec, mSExchangeIMC=mSExchangeIMC, exchisAnonymousUserCount=exchisAnonymousUserCount, memoryPageReadsPerSec=memoryPageReadsPerSec, nwlinkspxFramesPerSec=nwlinkspxFramesPerSec, packet_Filtering=packet_Filtering, webserviceCurrentISAPIExtensionRequests=webserviceCurrentISAPIExtensionRequests, exchispubMessagesSent=exchispubMessagesSent, processThreadCount=processThreadCount, webproxysrvrcacheBytesRetrievedRate=webproxysrvrcacheBytesRetrievedRate, memorySystemCodeTotalBytes=memorySystemCodeTotalBytes, exchmtaconnmSExchangeMTA_ConnectionsInstance=exchmtaconnmSExchangeMTA_ConnectionsInstance, ipDatagramsReceivedDiscarded=ipDatagramsReceivedDiscarded, exchmtaconnOutboundBytesTotal=exchmtaconnOutboundBytesTotal, memoryPagesPerSec=memoryPagesPerSec, nwlinkipxFailuresLink=nwlinkipxFailuresLink, exchisNNTPCurrentOutboundConnections=exchisNNTPCurrentOutboundConnections, netCurrentBandwidth=netCurrentBandwidth, nwnetbiosFramesReceivedPerSec=nwnetbiosFramesReceivedPerSec, telephonyCurrentOutgoingCalls=telephonyCurrentOutgoingCalls, processPageFaultsPerSec=processPageFaultsPerSec, exchisRPCRequests=exchisRPCRequests, pdiskphysicalDiskEntry=pdiskphysicalDiskEntry, redirectorReadBytesNon_PagingPerSec=redirectorReadBytesNon_PagingPerSec, exchisprivMessagesSent=exchisprivMessagesSent, netnetwork_InterfaceEntry=netnetwork_InterfaceEntry, exchisNNTPFailedPosts=exchisNNTPFailedPosts, webproxysrvrSitesGranted=webproxysrvrSitesGranted, netbeuiFramesSentPerSec=netbeuiFramesSentPerSec, rasportSerialOverrunErrors=rasportSerialOverrunErrors, exchisPOP3MessagesSent=exchisPOP3MessagesSent, rasportTotalErrorsPerSec=rasportTotalErrorsPerSec, ntsystemFloatingEmulationsPerSec=ntsystemFloatingEmulationsPerSec, exchimcTotalOutboundKilobytes=exchimcTotalOutboundKilobytes, exchisNewsfeedMessagesReceived=exchisNewsfeedMessagesReceived, telephonyIncomingCallsPerSec=telephonyIncomingCallsPerSec, rasportrAS_PortTable=rasportrAS_PortTable, ntsystemPercentTotalUserTime=ntsystemPercentTotalUserTime, rastotalFramesReceivedPerSec=rastotalFramesReceivedPerSec, redirectorBytesTransmittedPerSec=redirectorBytesTransmittedPerSec, netbeuinetBEUIInstance=netbeuinetBEUIInstance, webproxysrvrTotalSuccessfulSocksSessions=webproxysrvrTotalSuccessfulSocksSessions, exchmtaconnmSExchangeMTA_ConnectionsEntry=exchmtaconnmSExchangeMTA_ConnectionsEntry, exchispubReplicationFolderChangesSent=exchispubReplicationFolderChangesSent, exchisNewsfeedBytesSentPerSec=exchisNewsfeedBytesSentPerSec, netPacketsReceivedErrors=netPacketsReceivedErrors, exchmtaconnTotalRecipientsInbound=exchmtaconnTotalRecipientsInbound, webproxysrvrHttpRequests=webproxysrvrHttpRequests, exchimcMessagesLeavingMTS_OUT=exchimcMessagesLeavingMTS_OUT, pdiskDiskWriteBytesPerSec=pdiskDiskWriteBytesPerSec, nwlinkspxDatagramsPerSec=nwlinkspxDatagramsPerSec, memoryCommitLimit=memoryCommitLimit, cache=cache, exchmtaconnReceiveBytesPerSec=exchmtaconnReceiveBytesPerSec, exchispubTotalSizeOfRecoverableItems=exchispubTotalSizeOfRecoverableItems, netnetwork_InterfaceTable=netnetwork_InterfaceTable, webproxysrvrUpstreamBytesTotalPerSec=webproxysrvrUpstreamBytesTotalPerSec, exchimcConnectionsOutbound=exchimcConnectionsOutbound, netbeuinetBEUIEntry=netbeuinetBEUIEntry, nwlinkipxDatagramBytesPerSec=nwlinkipxDatagramBytesPerSec, cacheDataMapsPerSec=cacheDataMapsPerSec, nwlinkspxWindowSendAverage=nwlinkspxWindowSendAverage, exchmtaconnTotalRecipientsQueued=exchmtaconnTotalRecipientsQueued, webserviceTotalBlockedAsyncIPerORequests=webserviceTotalBlockedAsyncIPerORequests, nwlinkipxConnectionsCanceled=nwlinkipxConnectionsCanceled, netPacketsReceivedDiscarded=netPacketsReceivedDiscarded, webproxysrvrGopherRequests=webproxysrvrGopherRequests, redirectorFileDataOperationsPerSec=redirectorFileDataOperationsPerSec, webserviceTotalAllowedAsyncIPerORequests=webserviceTotalAllowedAsyncIPerORequests, telephonyActiveTelephones=telephonyActiveTelephones, srvrqueuesserver_Work_QueuesEntry=srvrqueuesserver_Work_QueuesEntry, netbeuiFailuresResourceRemote=netbeuiFailuresResourceRemote, netbeuiFrameBytesRe_SentPerSec=netbeuiFrameBytesRe_SentPerSec, ntsystemSystemCallsPerSec=ntsystemSystemCallsPerSec, webserviceDeleteRequestsPerSec=webserviceDeleteRequestsPerSec, ntsystemFileWriteOperationsPerSec=ntsystemFileWriteOperationsPerSec, webserviceLogonAttemptsPerSec=webserviceLogonAttemptsPerSec, telephonyClientApps=telephonyClientApps, exchisRPCPacketsPerSec=exchisRPCPacketsPerSec, exchmtaAdminInterfaceTransmitBytesPerSec=exchmtaAdminInterfaceTransmitBytesPerSec, ldisklogicalDiskInstance=ldisklogicalDiskInstance, webproxysrvrDNSCacheEntries=webproxysrvrDNSCacheEntries, winSock_Proxy_Server=winSock_Proxy_Server, nwnetbiosFrameBytesPerSec=nwnetbiosFrameBytesPerSec, exchispubReplicationFolderTreeMessagesReceived=exchispubReplicationFolderTreeMessagesReceived, exchimcInboundMessagesPerHr=exchimcInboundMessagesPerHr, nwlinkipxFrameBytesRe_SentPerSec=nwlinkipxFrameBytesRe_SentPerSec, rasportBytesTransmitted=rasportBytesTransmitted, systems=systems, webproxysrvrArrayBytesReceivedPerSec=webproxysrvrArrayBytesReceivedPerSec, exchimcQueuedInbound=exchimcQueuedInbound, exchisprivLocalDeliveryRate=exchisprivLocalDeliveryRate, webproxysrvrThreadPoolSize=webproxysrvrThreadPoolSize, nwlinkspxConnectionsNoRetries=nwlinkspxConnectionsNoRetries, netbeuiPacketsSentPerSec=netbeuiPacketsSentPerSec, cpuPercentPrivilegedTime=cpuPercentPrivilegedTime, netPacketsOutboundErrors=netPacketsOutboundErrors, exchisNewsfeedOutboundRejectedMessages=exchisNewsfeedOutboundRejectedMessages, exchmtaconnNextAssociationRetry=exchmtaconnNextAssociationRetry, webserviceweb_ServiceTable=webserviceweb_ServiceTable, memoryTransitionFaultsPerSec=memoryTransitionFaultsPerSec, nwlinkspxnWLink_SPXTable=nwlinkspxnWLink_SPXTable, exchmtaconnQueueLength=exchmtaconnQueueLength, ipFragmentsReceivedPerSec=ipFragmentsReceivedPerSec, ldiskAvgDiskSecPerTransfer=ldiskAvgDiskSecPerTransfer, exchispubTotalCountOfRecoverableItems=exchispubTotalCountOfRecoverableItems, webserviceweb_ServiceIndex=webserviceweb_ServiceIndex, exchmtaFreeElements=exchmtaFreeElements, ldiskDiskWritesPerSec=ldiskDiskWritesPerSec, redirectorCurrentCommands=redirectorCurrentCommands, exchisRPCRequestsPeak=exchisRPCRequestsPeak, exchisActiveConnectionCount=exchisActiveConnectionCount, cpuPercentDPCTime=cpuPercentDPCTime, nwlinkipxConnectionsWithRetries=nwlinkipxConnectionsWithRetries, cpuprocessorIndex=cpuprocessorIndex, exchispubSendQueueSize=exchispubSendQueueSize, webserviceCurrentNonAnonymousUsers=webserviceCurrentNonAnonymousUsers, ldiskDiskWriteBytesPerSec=ldiskDiskWriteBytesPerSec, nwnetbiosFrameBytesRejectedPerSec=nwnetbiosFrameBytesRejectedPerSec, webserviceTotalFilesTransferred=webserviceTotalFilesTransferred, redirectorBytesTotalPerSec=redirectorBytesTotalPerSec, ipDatagramsReceivedAddressErrors=ipDatagramsReceivedAddressErrors, exchisNewsfeedBytesSent=exchisNewsfeedBytesSent, exchispubMessageRecipientsDeliveredPerMin=exchispubMessageRecipientsDeliveredPerMin, rastotalBytesReceivedPerSec=rastotalBytesReceivedPerSec, pagefilePercentUsagePeak=pagefilePercentUsagePeak, webproxysrvrSocksClientBytesTotalPerSec=webproxysrvrSocksClientBytesTotalPerSec, telephonyTelephoneDevices=telephonyTelephoneDevices, webserviceMaximumConnections=webserviceMaximumConnections, rastotalFramesReceived=rastotalFramesReceived, cpuDPCBypassesPerSec=cpuDPCBypassesPerSec, redirectorWriteBytesNon_PagingPerSec=redirectorWriteBytesNon_PagingPerSec, nwnetbiosConnectionsNoRetries=nwnetbiosConnectionsNoRetries, webserviceTotalFilesSent=webserviceTotalFilesSent, webserviceMaximumNonAnonymousUsers=webserviceMaximumNonAnonymousUsers, memory=memory, netbeuiConnectionSessionTimeouts=netbeuiConnectionSessionTimeouts, tcpSegmentsReceivedPerSec=tcpSegmentsReceivedPerSec, memoryPoolPagedAllocs=memoryPoolPagedAllocs, packetfilterFramesDroppedDueToProtocolViolations=packetfilterFramesDroppedDueToProtocolViolations, webserviceFilesSentPerSec=webserviceFilesSentPerSec, nwnetbiosFrameBytesReceivedPerSec=nwnetbiosFrameBytesReceivedPerSec, webserviceTotalRejectedAsyncIPerORequests=webserviceTotalRejectedAsyncIPerORequests, processPriorityBase=processPriorityBase, exchmtaXAPIGateways=exchmtaXAPIGateways, serverPoolPagedFailures=serverPoolPagedFailures, nwlinkspxDisconnectsLocal=nwlinkspxDisconnectsLocal, netPacketsSentUnicastPerSec=netPacketsSentUnicastPerSec, netbeuiDatagramsSentPerSec=netbeuiDatagramsSentPerSec, exchimcTotalOutboundRecipients=exchimcTotalOutboundRecipients, nwlinkspxDatagramBytesSentPerSec=nwlinkspxDatagramBytesSentPerSec, exchimcConnectionsTotalFailed=exchimcConnectionsTotalFailed)
mibBuilder.exportSymbols("WINDOWS-NT-PERFORMANCE", webproxysrvrTotalUpstreamFetches=webproxysrvrTotalUpstreamFetches, exchmtaDiskFileDeletesPerSec=exchmtaDiskFileDeletesPerSec, exchmtaconnQueuedBytes=exchmtaconnQueuedBytes, exchisprivSingleInstanceRatio=exchisprivSingleInstanceRatio, ntsystemFileReadOperationsPerSec=ntsystemFileReadOperationsPerSec, nwlinkipxFailuresResourceRemote=nwlinkipxFailuresResourceRemote, webproxysrvrTotalCacheFetches=webproxysrvrTotalCacheFetches, netbeuiFailuresNotFound=netbeuiFailuresNotFound, ntsystem=ntsystem, nwnetbiosDatagramBytesPerSec=nwnetbiosDatagramBytesPerSec, webserviceCurrentConnections=webserviceCurrentConnections, cpuprocessorEntry=cpuprocessorEntry, webproxysrvrcacheURLCommitRate=webproxysrvrcacheURLCommitRate, nbtconnBytesSentPerSec=nbtconnBytesSentPerSec, exchmtaconnInboundMessagesTotal=exchmtaconnInboundMessagesTotal, exchisReadBytesRPCClientsPerSec=exchisReadBytesRPCClientsPerSec, webproxysrvrSocksClientBytesSentPerSec=webproxysrvrSocksClientBytesSentPerSec, memoryPoolPagedBytes=memoryPoolPagedBytes, ipDatagramsSentPerSec=ipDatagramsSentPerSec, mSExchangeIS_Private=mSExchangeIS_Private, os=os, netnetwork_InterfaceIndex=netnetwork_InterfaceIndex, netPacketsSentNon_UnicastPerSec=netPacketsSentNon_UnicastPerSec, pdiskDiskReadsPerSec=pdiskDiskReadsPerSec, memoryCommittedBytes=memoryCommittedBytes, redirectorReadOperationsRandomPerSec=redirectorReadOperationsRandomPerSec, webproxysrvrSNEWSSessions=webproxysrvrSNEWSSessions, nwlinkipxPacketsReceivedPerSec=nwlinkipxPacketsReceivedPerSec, memoryPoolPagedResidentBytes=memoryPoolPagedResidentBytes, pdiskPercentDiskTime=pdiskPercentDiskTime, webserviceMaximumAnonymousUsers=webserviceMaximumAnonymousUsers, ldiskDiskReadsPerSec=ldiskDiskReadsPerSec, srvrqueuesWorkItemShortages=srvrqueuesWorkItemShortages, cpuprocessorInstance=cpuprocessorInstance, ldiskDiskReadBytesPerSec=ldiskDiskReadBytesPerSec, redirectorReadBytesCachePerSec=redirectorReadBytesCachePerSec, udpDatagramsPerSec=udpDatagramsPerSec, nwnetbiosFailuresNoListen=nwnetbiosFailuresNoListen, webserviceSystemCodeResidentBytes=webserviceSystemCodeResidentBytes, nwlinkspxDatagramBytesReceivedPerSec=nwlinkspxDatagramBytesReceivedPerSec, nwlinkipxFailuresResourceLocal=nwlinkipxFailuresResourceLocal, exchisIMAPMessageSendRate=exchisIMAPMessageSendRate, winsockproxysrvrSuccessfulDNSResolutions=winsockproxysrvrSuccessfulDNSResolutions, pdiskAvgDiskWriteQueueLength=pdiskAvgDiskWriteQueueLength, netbeuiPacketsPerSec=netbeuiPacketsPerSec, winsockproxysrvrDNSCacheEntries=winsockproxysrvrDNSCacheEntries, ldiskFreeMegabytes=ldiskFreeMegabytes, performance=performance, tcpSegmentsSentPerSec=tcpSegmentsSentPerSec, serverErrorsAccessPermissions=serverErrorsAccessPermissions, srvrqueuesActiveThreads=srvrqueuesActiveThreads, exchmtaTCPPerIPTransmitBytesPerSec=exchmtaTCPPerIPTransmitBytesPerSec, cpuPercentProcessorTime=cpuPercentProcessorTime, netbeuiFrameBytesPerSec=netbeuiFrameBytesPerSec, exchdsLDAPSearches=exchdsLDAPSearches, exchispubMessageOpensPerSec=exchispubMessageOpensPerSec, ntsystemFileControlOperationsPerSec=ntsystemFileControlOperationsPerSec, netBytesReceivedPerSec=netBytesReceivedPerSec, processPageFileBytes=processPageFileBytes, memoryFreeSystemPageTableEntries=memoryFreeSystemPageTableEntries, winsockproxysrvrBytesWrittenPerSec=winsockproxysrvrBytesWrittenPerSec, srvrqueuesserver_Work_QueuesTable=srvrqueuesserver_Work_QueuesTable, webproxysrvrTotalSSLSessions=webproxysrvrTotalSSLSessions, nwlinkspxnWLink_SPXInstance=nwlinkspxnWLink_SPXInstance, exchisIMAPCommandsIssued=exchisIMAPCommandsIssued, packetfilterFramesDroppedDueToFilterDenial=packetfilterFramesDroppedDueToFilterDenial, webserviceBytesReceivedPerSec=webserviceBytesReceivedPerSec, webproxysrvrUpstreamBytesReceivedPerSec=webproxysrvrUpstreamBytesReceivedPerSec, nwlinkipxnWLink_IPXInstance=nwlinkipxnWLink_IPXInstance, exchmtaLANReceiveBytesPerSec=exchmtaLANReceiveBytesPerSec, iP=iP, rasportFramesTransmittedPerSec=rasportFramesTransmittedPerSec, exchimcTotalInboundRecipients=exchimcTotalInboundRecipients, webproxysrvrcacheURLsInCache=webproxysrvrcacheURLsInCache, webserviceTotalPutRequests=webserviceTotalPutRequests, webproxysrvrUpstreamBytesSentPerSec=webproxysrvrUpstreamBytesSentPerSec, mSExchangeDS=mSExchangeDS, packetfilterTotalLostLoggingFrames=packetfilterTotalLostLoggingFrames, netbeuinetBEUITable=netbeuinetBEUITable, nwlinkipxPacketsPerSec=nwlinkipxPacketsPerSec, exchmtaconnmSExchangeMTA_ConnectionsIndex=exchmtaconnmSExchangeMTA_ConnectionsIndex, redirectorReadBytesNetworkPerSec=redirectorReadBytesNetworkPerSec, exchispubReplicationReceiveQueueSize=exchispubReplicationReceiveQueueSize, pagefilepaging_FileInstance=pagefilepaging_FileInstance, ntsystemTotalAPCBypassesPerSec=ntsystemTotalAPCBypassesPerSec, webserviceTotalDeleteRequests=webserviceTotalDeleteRequests, exchimcOutboundConnectionsPerHr=exchimcOutboundConnectionsPerHr, ntsystemTotalDPCRate=ntsystemTotalDPCRate, tcpConnectionsPassive=tcpConnectionsPassive, rasportBufferOverrunErrors=rasportBufferOverrunErrors, ipDatagramsReceivedUnknownProtocol=ipDatagramsReceivedUnknownProtocol, redirectorWriteBytesPagingPerSec=redirectorWriteBytesPagingPerSec, pdiskDiskBytesPerSec=pdiskDiskBytesPerSec, nwlinkspxConnectionsCanceled=nwlinkspxConnectionsCanceled, exchmtaconnConnectorIndex=exchmtaconnConnectorIndex, exchimcConnectionsTotalOutbound=exchimcConnectionsTotalOutbound, cacheAsyncMDLReadsPerSec=cacheAsyncMDLReadsPerSec, webproxysrvrCacheHitRatioPercent=webproxysrvrCacheHitRatioPercent, exchisprivMessagesSubmittedPerMin=exchisprivMessagesSubmittedPerMin, exchispubReplicationFolderTreeMessagesSent=exchispubReplicationFolderTreeMessagesSent, exchmtaDiskFileWritesPerSec=exchmtaDiskFileWritesPerSec, ldiskPercentDiskWriteTime=ldiskPercentDiskWriteTime, exchmtaLANTransmitBytesPerSec=exchmtaLANTransmitBytesPerSec, exchisprivTotalCountOfRecoverableItems=exchisprivTotalCountOfRecoverableItems, webproxysrvrClientBytesSentPerSec=webproxysrvrClientBytesSentPerSec, webserviceHeadRequestsPerSec=webserviceHeadRequestsPerSec, cacheAsyncPinReadsPerSec=cacheAsyncPinReadsPerSec, exchispubNumberOfMessagesExpiredFromPublicFolders=exchispubNumberOfMessagesExpiredFromPublicFolders, nwlinkspxFrameBytesReceivedPerSec=nwlinkspxFrameBytesReceivedPerSec, nwnetbiosBytesTotalPerSec=nwnetbiosBytesTotalPerSec, webproxysrvrSitesDenied=webproxysrvrSitesDenied, nwnetbiosPacketsSentPerSec=nwnetbiosPacketsSentPerSec, exchimcBytesQueuedMTS_IN=exchimcBytesQueuedMTS_IN, cacheMDLReadsPerSec=cacheMDLReadsPerSec, exchmtaconnSendMessagesPerSec=exchmtaconnSendMessagesPerSec, processHandleCount=processHandleCount, tcpConnectionsActive=tcpConnectionsActive, rasportrAS_PortInstance=rasportrAS_PortInstance, processPageFileBytesPeak=processPageFileBytesPeak, nwnetbiosDatagramsReceivedPerSec=nwnetbiosDatagramsReceivedPerSec, exchispubReplicationFolderDataMessagesReceived=exchispubReplicationFolderDataMessagesReceived, winsockproxysrvrAcceptingTCPConnections=winsockproxysrvrAcceptingTCPConnections, exchisprivPeakClientLogons=exchisprivPeakClientLogons, netbeuiFrameBytesSentPerSec=netbeuiFrameBytesSentPerSec, exchmtaconnAssociations=exchmtaconnAssociations, exchisPOP3CommandsIssuedRate=exchisPOP3CommandsIssuedRate, webproxysrvrSSLClientBytesReceivedPerSec=webproxysrvrSSLClientBytesReceivedPerSec, webserviceFilesReceivedPerSec=webserviceFilesReceivedPerSec, redirectorWritesLargePerSec=redirectorWritesLargePerSec, exchmtaconnCurrentOutboundAssociations=exchmtaconnCurrentOutboundAssociations, ipDatagramsForwardedPerSec=ipDatagramsForwardedPerSec, nwnetbiosPiggybackAckQueuedPerSec=nwnetbiosPiggybackAckQueuedPerSec, webserviceMeasuredAsyncIPerOBandwidthUsage=webserviceMeasuredAsyncIPerOBandwidthUsage, exchmtaconnRejectedInboundAssociations=exchmtaconnRejectedInboundAssociations, nwnetbiosPacketsPerSec=nwnetbiosPacketsPerSec, memoryDemandZeroFaultsPerSec=memoryDemandZeroFaultsPerSec, nwlinkspxPacketsSentPerSec=nwlinkspxPacketsSentPerSec, exchimcInboundConnectionsPerHr=exchimcInboundConnectionsPerHr, netbeuiFrameBytesReceivedPerSec=netbeuiFrameBytesReceivedPerSec, webproxysrvrSSLClientBytesSentPerSec=webproxysrvrSSLClientBytesSentPerSec, pdiskDiskTransfersPerSec=pdiskDiskTransfersPerSec, exchisNewsfeedInboundRejectedMessagesRate=exchisNewsfeedInboundRejectedMessagesRate, server=server, srvrqueuesAvailableThreads=srvrqueuesAvailableThreads, redirectorServerSessions=redirectorServerSessions, winsockproxysrvrAvailableWorkerThreads=winsockproxysrvrAvailableWorkerThreads, ipDatagramsOutboundDiscarded=ipDatagramsOutboundDiscarded, exchispubReplicationMessagesReceived=exchispubReplicationMessagesReceived, exchmtaTotalRecipientsOutbound=exchmtaTotalRecipientsOutbound, webserviceTotalFilesReceived=webserviceTotalFilesReceived, memoryPageFaultsPerSec=memoryPageFaultsPerSec, nwlinkipxPiggybackAckTimeouts=nwlinkipxPiggybackAckTimeouts, exchmtaOutboundBytesTotal=exchmtaOutboundBytesTotal, telephonyActiveLines=telephonyActiveLines, redirectorReadPacketsSmallPerSec=redirectorReadPacketsSmallPerSec, ldiskPercentDiskTime=ldiskPercentDiskTime, webserviceGetRequestsPerSec=webserviceGetRequestsPerSec, serverFilesOpen=serverFilesOpen, exchispubMessageRecipientsDelivered=exchispubMessageRecipientsDelivered, webserviceConnectionAttemptsPerSec=webserviceConnectionAttemptsPerSec, exchmtaTotalRecipientsQueued=exchmtaTotalRecipientsQueued, webserviceTotalMethodRequests=webserviceTotalMethodRequests, exchisprivAverageLocalDeliveryTime=exchisprivAverageLocalDeliveryTime, pdiskAvgDiskSecPerRead=pdiskAvgDiskSecPerRead, webserviceTotalNotFoundErrors=webserviceTotalNotFoundErrors, memoryPercentCommittedBytesInUse=memoryPercentCommittedBytesInUse, winsockproxysrvrWorkerThreads=winsockproxysrvrWorkerThreads, webproxysrvrTotalFailingRequests=webproxysrvrTotalFailingRequests, cacheAsyncFastReadsPerSec=cacheAsyncFastReadsPerSec, exchmtaconnInboundRejectedTotal=exchmtaconnInboundRejectedTotal, nwnetbiosWindowSendMaximum=nwnetbiosWindowSendMaximum, rasportFramesTransmitted=rasportFramesTransmitted, nwnetbiosFramesPerSec=nwnetbiosFramesPerSec, netbeuiExpirationsResponse=netbeuiExpirationsResponse, nwnetbiosFailuresResourceRemote=nwnetbiosFailuresResourceRemote, serverLogonTotal=serverLogonTotal, exchisPushNotificationsCacheSize=exchisPushNotificationsCacheSize, serverSessionsLoggedOff=serverSessionsLoggedOff, ldiskPercentFreeSpace=ldiskPercentFreeSpace, ldiskAvgDiskReadQueueLength=ldiskAvgDiskReadQueueLength, netbeuiExpirationsAck=netbeuiExpirationsAck, nwlinkspxPacketsPerSec=nwlinkspxPacketsPerSec, ntsystemPercentTotalProcessorTime=ntsystemPercentTotalProcessorTime, srvrqueuesBytesSentPerSec=srvrqueuesBytesSentPerSec, rasportCRCErrors=rasportCRCErrors, srvrqueuesReadOperationsPerSec=srvrqueuesReadOperationsPerSec, exchispubMessagesSubmitted=exchispubMessagesSubmitted, exchispubFolderOpensPerSec=exchispubFolderOpensPerSec, nwlinkspxDatagramsSentPerSec=nwlinkspxDatagramsSentPerSec, cacheReadAheadsPerSec=cacheReadAheadsPerSec, exchisIMAPMessagesSent=exchisIMAPMessagesSent, webserviceTotalTraceRequests=webserviceTotalTraceRequests, exchispubReplicationStatusMessagesReceived=exchispubReplicationStatusMessagesReceived, exchisActiveAnonymousUserCount=exchisActiveAnonymousUserCount, webproxysrvrTotalUsers=webproxysrvrTotalUsers, processWorkingSet=processWorkingSet, nwlinkspxPiggybackAckQueuedPerSec=nwlinkspxPiggybackAckQueuedPerSec, exchmtaRASTransmitBytesPerSec=exchmtaRASTransmitBytesPerSec, rAS_Total=rAS_Total, exchmtaTotalFailedConversions=exchmtaTotalFailedConversions, ldiskAvgDiskQueueLength=ldiskAvgDiskQueueLength, serverFilesOpenedTotal=serverFilesOpenedTotal, pagefilePercentUsage=pagefilePercentUsage, rasportAlignmentErrors=rasportAlignmentErrors, webproxysrvrTotalFailedSocksSessions=webproxysrvrTotalFailedSocksSessions, srvrqueuesBorrowedWorkItems=srvrqueuesBorrowedWorkItems, ntsystemFileWriteBytesPerSec=ntsystemFileWriteBytesPerSec, exchisDatabaseSessionHitRate=exchisDatabaseSessionHitRate, ntsystemExceptionDispatchesPerSec=ntsystemExceptionDispatchesPerSec, netbeuiFramesRe_SentPerSec=netbeuiFramesRe_SentPerSec, exchimcQueuedMTS_IN=exchimcQueuedMTS_IN, exchmtaDiskFileOpensPerSec=exchmtaDiskFileOpensPerSec, webproxysrvrDNSCacheFlushes=webproxysrvrDNSCacheFlushes, webproxysrvrcacheMaxBytesCached=webproxysrvrcacheMaxBytesCached, nwlinkipxFramesPerSec=nwlinkipxFramesPerSec, webserviceNotFoundErrorsPerSec=webserviceNotFoundErrorsPerSec, ntsystemFileDataOperationsPerSec=ntsystemFileDataOperationsPerSec, nbtconnnBT_ConnectionIndex=nbtconnnBT_ConnectionIndex, winsockproxysrvrBack_ConnectingTCPConnections=winsockproxysrvrBack_ConnectingTCPConnections, nwlinkspxFramesReceivedPerSec=nwlinkspxFramesReceivedPerSec, serverContextBlocksQueuedPerSec=serverContextBlocksQueuedPerSec, exchisNNTPMessagesRead=exchisNNTPMessagesRead, ipDatagramsOutboundNoRoute=ipDatagramsOutboundNoRoute, exchisprivMessageOpensPerSec=exchisprivMessageOpensPerSec, exchispubAverageTimeForDelivery=exchispubAverageTimeForDelivery, tcpConnectionsEstablished=tcpConnectionsEstablished, exchisNewsfeedMessagesSent=exchisNewsfeedMessagesSent, ntsystemPercentRegistryQuotaInUse=ntsystemPercentRegistryQuotaInUse, redirectorWriteBytesNetworkPerSec=redirectorWriteBytesNetworkPerSec, nwlinkipxConnectionSessionTimeouts=nwlinkipxConnectionSessionTimeouts, webproxysrvrRequestsPerSec=webproxysrvrRequestsPerSec, nwlinkipxFailuresAdapter=nwlinkipxFailuresAdapter, webserviceTotalMethodRequestsPerSec=webserviceTotalMethodRequestsPerSec, rastotalPercentCompressionOut=rastotalPercentCompressionOut, exchisprivClientLogons=exchisprivClientLogons, nwlinkspxFrameBytesSentPerSec=nwlinkspxFrameBytesSentPerSec, netbeuiFailuresNoListen=netbeuiFailuresNoListen, exchisPushNotificationsGeneratedPerSec=exchisPushNotificationsGeneratedPerSec, nwnetbiosDatagramsPerSec=nwnetbiosDatagramsPerSec, redirectorReadsLargePerSec=redirectorReadsLargePerSec, exchmtaTCPPerIPReceiveBytesPerSec=exchmtaTCPPerIPReceiveBytesPerSec, nwnetbiosFailuresAdapter=nwnetbiosFailuresAdapter, cacheSyncFastReadsPerSec=cacheSyncFastReadsPerSec, nwlinkipxWindowSendMaximum=nwlinkipxWindowSendMaximum, ntsystemContextSwitchesPerSec=ntsystemContextSwitchesPerSec, cpuInterruptsPerSec=cpuInterruptsPerSec, exchmtaDiskFileReadsPerSec=exchmtaDiskFileReadsPerSec, exchdsThreadsInUse=exchdsThreadsInUse, winsockproxysrvrDNSCacheHits=winsockproxysrvrDNSCacheHits, netbeuiFramesPerSec=netbeuiFramesPerSec, nwlinkipxFrameBytesSentPerSec=nwlinkipxFrameBytesSentPerSec, exchmtaTotalRecipientsInbound=exchmtaTotalRecipientsInbound, webproxysrvrSocksSessions=webproxysrvrSocksSessions, exchmtaconnCurrentInboundAssociations=exchmtaconnCurrentInboundAssociations)
mibBuilder.exportSymbols("WINDOWS-NT-PERFORMANCE", redirectorFileReadOperationsPerSec=redirectorFileReadOperationsPerSec, serverBytesTransmittedPerSec=serverBytesTransmittedPerSec, redirectorWritesDeniedPerSec=redirectorWritesDeniedPerSec, exchisConnectionCount=exchisConnectionCount, netPacketsReceivedUnicastPerSec=netPacketsReceivedUnicastPerSec, memoryPagesInputPerSec=memoryPagesInputPerSec, mSExchangeMTA=mSExchangeMTA, ldiskAvgDiskSecPerRead=ldiskAvgDiskSecPerRead, rastotalTotalConnections=rastotalTotalConnections, exchisprivMessagesSubmitted=exchisprivMessagesSubmitted, webproxysrvrcacheURLRetrieveRate=webproxysrvrcacheURLRetrieveRate, webserviceOtherRequestMethodsPerSec=webserviceOtherRequestMethodsPerSec, rastotalSerialOverrunErrors=rastotalSerialOverrunErrors, nwlinkipxWindowSendAverage=nwlinkipxWindowSendAverage, exchisNNTPFailedPostsRate=exchisNNTPFailedPostsRate, srvrqueuesserver_Work_QueuesIndex=srvrqueuesserver_Work_QueuesIndex, rasportrAS_PortEntry=rasportrAS_PortEntry, exchimcTotalKilobytesQueued=exchimcTotalKilobytesQueued, nbtconnnBT_ConnectionTable=nbtconnnBT_ConnectionTable, memoryCacheFaultsPerSec=memoryCacheFaultsPerSec, exchmtaAdjacentMTAAssociations=exchmtaAdjacentMTAAssociations, ldiskAvgDiskSecPerWrite=ldiskAvgDiskSecPerWrite, netbeuiFramesReceivedPerSec=netbeuiFramesReceivedPerSec, tCP=tCP, ipFragmentationFailures=ipFragmentationFailures, exchispubMessagesSentPerMin=exchispubMessagesSentPerMin, web_Proxy_Server_Cache=web_Proxy_Server_Cache, nwlinkipxDisconnectsRemote=nwlinkipxDisconnectsRemote, memoryCacheBytesPeak=memoryCacheBytesPeak, nwlinkspxFailuresResourceLocal=nwlinkspxFailuresResourceLocal, redirectorWriteOperationsRandomPerSec=redirectorWriteOperationsRandomPerSec, nwlinkspxFailuresNoListen=nwlinkspxFailuresNoListen, serverErrorsGrantedAccess=serverErrorsGrantedAccess, ipFragmentRe_assemblyFailures=ipFragmentRe_assemblyFailures, exchispubReplicationMessageChangesReceived=exchispubReplicationMessageChangesReceived, nwnetbiosFailuresLink=nwnetbiosFailuresLink, exchmtaXAPIReceiveBytesPerSec=exchmtaXAPIReceiveBytesPerSec, packetfilterTotalDroppedFrames=packetfilterTotalDroppedFrames, software=software, nwlinkipxPiggybackAckQueuedPerSec=nwlinkipxPiggybackAckQueuedPerSec, cacheAsyncCopyReadsPerSec=cacheAsyncCopyReadsPerSec, exchisPOP3MessagesSendRate=exchisPOP3MessagesSendRate, exchmtaFreeHeaders=exchmtaFreeHeaders, processprocessEntry=processprocessEntry, ldisklogicalDiskEntry=ldisklogicalDiskEntry, exchispubClientLogons=exchispubClientLogons, netbeuiDatagramsReceivedPerSec=netbeuiDatagramsReceivedPerSec, winsockproxysrvrActiveTCPConnections=winsockproxysrvrActiveTCPConnections, netbeuiDatagramBytesPerSec=netbeuiDatagramBytesPerSec, exchmtaconnmSExchangeMTA_ConnectionsTable=exchmtaconnmSExchangeMTA_ConnectionsTable, nwnetbiosPiggybackAckTimeouts=nwnetbiosPiggybackAckTimeouts, processIDProcess=processIDProcess, exchimcTotalLoopsDetected=exchimcTotalLoopsDetected, nwlinkspxFramesRejectedPerSec=nwlinkspxFramesRejectedPerSec, rastotalTotalErrorsPerSec=rastotalTotalErrorsPerSec, exchisNewsfeedMessagesReceivedRate=exchisNewsfeedMessagesReceivedRate, exchdsABWritesPerSec=exchdsABWritesPerSec, netbeuiBytesTotalPerSec=netbeuiBytesTotalPerSec, nwnetbiosPacketsReceivedPerSec=nwnetbiosPacketsReceivedPerSec, rasportFramesReceived=rasportFramesReceived, redirectorConnectsLanManager20=redirectorConnectsLanManager20, exchimcMessagesEnteringMTS_IN=exchimcMessagesEnteringMTS_IN, processPercentUserTime=processPercentUserTime, exchmtaconnCumulativeInboundAssociations=exchmtaconnCumulativeInboundAssociations, webproxysrvrcacheTotalBytesCached=webproxysrvrcacheTotalBytesCached, ipFragmentedDatagramsPerSec=ipFragmentedDatagramsPerSec, exchimcOutboundMessagesTotal=exchimcOutboundMessagesTotal, nwlinkspxFailuresNotFound=nwlinkspxFailuresNotFound, netbeuiDatagramBytesSentPerSec=netbeuiDatagramBytesSentPerSec, udpDatagramsReceivedErrors=udpDatagramsReceivedErrors, nwlinkspxDatagramsReceivedPerSec=nwlinkspxDatagramsReceivedPerSec, exchmtaXAPIClients=exchmtaXAPIClients, cacheDataMapPinsPerSec=cacheDataMapPinsPerSec, webserviceTotalCGIRequests=webserviceTotalCGIRequests, nwlinkspxPacketsReceivedPerSec=nwlinkspxPacketsReceivedPerSec, webproxysrvrDNSCacheHits=webproxysrvrDNSCacheHits, ldiskDiskBytesPerSec=ldiskDiskBytesPerSec, netbeuiPiggybackAckTimeouts=netbeuiPiggybackAckTimeouts, mSExchangeIS=mSExchangeIS, exchdsObjectsReplicatedOutPerSec=exchdsObjectsReplicatedOutPerSec, processPercentPrivilegedTime=processPercentPrivilegedTime, nwlinkipxnWLink_IPXEntry=nwlinkipxnWLink_IPXEntry, winsockproxysrvrActiveUDPConnections=winsockproxysrvrActiveUDPConnections, webserviceNonAnonymousUsersPerSec=webserviceNonAnonymousUsersPerSec, redirectorWriteBytesCachePerSec=redirectorWriteBytesCachePerSec, cacheDataFlushPagesPerSec=cacheDataFlushPagesPerSec, exchmtaMessageBytesPerSec=exchmtaMessageBytesPerSec, exchisMaximumConnections=exchisMaximumConnections, ldiskAvgDiskWriteQueueLength=ldiskAvgDiskWriteQueueLength, serverPoolNonpagedPeak=serverPoolNonpagedPeak, nwlinkspxConnectionSessionTimeouts=nwlinkspxConnectionSessionTimeouts, exchisRPCOperationsPerSec=exchisRPCOperationsPerSec, nwlinkspxDisconnectsRemote=nwlinkspxDisconnectsRemote, rasportBytesReceivedPerSec=rasportBytesReceivedPerSec, serverLogonPerSec=serverLogonPerSec, pdiskPercentDiskWriteTime=pdiskPercentDiskWriteTime, rastotalFramesTransmittedPerSec=rastotalFramesTransmittedPerSec, netbeuiPiggybackAckQueuedPerSec=netbeuiPiggybackAckQueuedPerSec, memorySystemDriverTotalBytes=memorySystemDriverTotalBytes, ipDatagramsReceivedPerSec=ipDatagramsReceivedPerSec, ipDatagramsReceivedDeliveredPerSec=ipDatagramsReceivedDeliveredPerSec, nwlinkspxDatagramBytesPerSec=nwlinkspxDatagramBytesPerSec, cachePinReadsPerSec=cachePinReadsPerSec, exchmtaX25ReceiveBytesPerSec=exchmtaX25ReceiveBytesPerSec, ntsystemTotalDPCBypassesPerSec=ntsystemTotalDPCBypassesPerSec, exchispubReplicationBackfillRequestsSent=exchispubReplicationBackfillRequestsSent, exchdsLDAPSearchesPerSec=exchdsLDAPSearchesPerSec, serverSessionsTimedOut=serverSessionsTimedOut, srvrqueuesCurrentClients=srvrqueuesCurrentClients, webserviceTotalNonAnonymousUsers=webserviceTotalNonAnonymousUsers, exchdsABReadsPerSec=exchdsABReadsPerSec, webproxysrvrcacheTotalURLsRetrieved=webproxysrvrcacheTotalURLsRetrieved, nwlinkspxFramesSentPerSec=nwlinkspxFramesSentPerSec, exchispubReceiveQueueSize=exchispubReceiveQueueSize, webproxysrvrClientBytesTotalPerSec=webproxysrvrClientBytesTotalPerSec, exchisprivMessagesSentPerMin=exchisprivMessagesSentPerMin, cacheFastReadResourceMissesPerSec=cacheFastReadResourceMissesPerSec, netbeuiFramesRejectedPerSec=netbeuiFramesRejectedPerSec, exchisprivMessagesDeliveredPerMin=exchisprivMessagesDeliveredPerMin, webproxysrvrcacheActiveURLRefreshRate=webproxysrvrcacheActiveURLRefreshRate, exchdsAddressBookViewReadsPerSec=exchdsAddressBookViewReadsPerSec, nwnetbiosConnectionSessionTimeouts=nwnetbiosConnectionSessionTimeouts, nwlinkipxFrameBytesRejectedPerSec=nwlinkipxFrameBytesRejectedPerSec, exchmtaXAPITransmitBytesPerSec=exchmtaXAPITransmitBytesPerSec, webserviceMaximumISAPIExtensionRequests=webserviceMaximumISAPIExtensionRequests, webserviceTotalHeadRequests=webserviceTotalHeadRequests, nwlinkipxFramesSentPerSec=nwlinkipxFramesSentPerSec, exchisNewsfeedMessagesSentPerSec=exchisNewsfeedMessagesSentPerSec, uDP=uDP, exchisprivCategorizationCount=exchisprivCategorizationCount, pdiskAvgDiskQueueLength=pdiskAvgDiskQueueLength, nwlinkipxDisconnectsLocal=nwlinkipxDisconnectsLocal, exchisIMAPCommandsIssuedRate=exchisIMAPCommandsIssuedRate, exchimcInboundBytesPerHr=exchimcInboundBytesPerHr, serverFileDirectorySearches=serverFileDirectorySearches, ipFragmentsCreatedPerSec=ipFragmentsCreatedPerSec, netbeuiConnectionsWithRetries=netbeuiConnectionsWithRetries, exchisMaximumUsers=exchisMaximumUsers, nwnetbiosnWLink_NetBIOSEntry=nwnetbiosnWLink_NetBIOSEntry, nwnetbiosConnectionsCanceled=nwnetbiosConnectionsCanceled, nwnetbiosDatagramBytesReceivedPerSec=nwnetbiosDatagramBytesReceivedPerSec, ntsystemPercentTotalInterruptTime=ntsystemPercentTotalInterruptTime, netPacketsReceivedUnknown=netPacketsReceivedUnknown, nwlinkipxDatagramsSentPerSec=nwlinkipxDatagramsSentPerSec, serverErrorsSystem=serverErrorsSystem, webserviceweb_ServiceEntry=webserviceweb_ServiceEntry, memoryPageWritesPerSec=memoryPageWritesPerSec, mSExchangeIS_Public=mSExchangeIS_Public, exchmtaRASReceiveBytesPerSec=exchmtaRASReceiveBytesPerSec, serverSessionsForcedOff=serverSessionsForcedOff, nwlinkipxExpirationsResponse=nwlinkipxExpirationsResponse, exchispubReplicationMessageChangesSent=exchispubReplicationMessageChangesSent, nwlinkspxExpirationsAck=nwlinkspxExpirationsAck, exchisPeakPushNotificationsCacheSize=exchisPeakPushNotificationsCacheSize, tcpSegmentsRetransmittedPerSec=tcpSegmentsRetransmittedPerSec, rastotalAlignmentErrors=rastotalAlignmentErrors, exchimcOutboundBytesPerHr=exchimcOutboundBytesPerHr, rastotalTimeoutErrors=rastotalTimeoutErrors, exchimcNDRsTotalInbound=exchimcNDRsTotalInbound, netbeuiConnectionsNoRetries=netbeuiConnectionsNoRetries, cacheLazyWritePagesPerSec=cacheLazyWritePagesPerSec, nwlinkipxFrameBytesPerSec=nwlinkipxFrameBytesPerSec, exchisprivMessageRecipientsDelivered=exchisprivMessageRecipientsDelivered, netbeuiFailuresLink=netbeuiFailuresLink, nwnetbiosConnectionsWithRetries=nwnetbiosConnectionsWithRetries, nbtconnBytesTotalPerSec=nbtconnBytesTotalPerSec, winsockproxysrvrNon_connectedUDPMappings=winsockproxysrvrNon_connectedUDPMappings, ntsystemFileReadBytesPerSec=ntsystemFileReadBytesPerSec, exchmtaMessagesPerSec=exchmtaMessagesPerSec, exchispubReplicationFolderChangesReceived=exchispubReplicationFolderChangesReceived, webproxysrvrDNSCacheHitsPercent=webproxysrvrDNSCacheHitsPercent, netBytesTotalPerSec=netBytesTotalPerSec, winsockproxysrvrFailedDNSResolutions=winsockproxysrvrFailedDNSResolutions, exchisprivMessagesDelivered=exchisprivMessagesDelivered, webproxysrvrTotalReverseFetches=webproxysrvrTotalReverseFetches, netOutputQueueLength=netOutputQueueLength, udpDatagramsReceivedPerSec=udpDatagramsReceivedPerSec, udpDatagramsNoPortPerSec=udpDatagramsNoPortPerSec, redirectorFileWriteOperationsPerSec=redirectorFileWriteOperationsPerSec)
