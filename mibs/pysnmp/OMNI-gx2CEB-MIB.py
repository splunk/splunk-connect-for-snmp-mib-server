#
# PySNMP MIB module OMNI-gx2CEB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/OMNI-gx2CEB-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:23:45 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
gx2CEB, = mibBuilder.importSymbols("GX2HFC-MIB", "gx2CEB")
gi, motproxies = mibBuilder.importSymbols("NLS-BBNIDENT-MIB", "gi", "motproxies")
trapNetworkElemOperState, trapChangedObjectId, trapNetworkElemSerialNum, trapNetworkElemModelNumber, trapNetworkElemAvailStatus, trapIdentifier, trapChangedValueInteger, trapNETrapLastTrapTimeStamp, trapNetworkElemAlarmStatus, trapNetworkElemAdminState, trapText, trapPerceivedSeverity, trapChangedValueDisplayString = mibBuilder.importSymbols("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState", "trapChangedObjectId", "trapNetworkElemSerialNum", "trapNetworkElemModelNumber", "trapNetworkElemAvailStatus", "trapIdentifier", "trapChangedValueInteger", "trapNETrapLastTrapTimeStamp", "trapNetworkElemAlarmStatus", "trapNetworkElemAdminState", "trapText", "trapPerceivedSeverity", "trapChangedValueDisplayString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
sysUpTime, = mibBuilder.importSymbols("SNMPv2-MIB", "sysUpTime")
TimeTicks, Counter32, Gauge32, ObjectIdentity, Bits, iso, NotificationType, IpAddress, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter64, Unsigned32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "Gauge32", "ObjectIdentity", "Bits", "iso", "NotificationType", "IpAddress", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter64", "Unsigned32", "Integer32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class Float(Counter32):
    pass

gx2CEBDescriptor = MibIdentifier((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 1))
gx2CEBAnalogTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2), )
if mibBuilder.loadTexts: gx2CEBAnalogTable.setStatus('mandatory')
gx2CEBAnalogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1), ).setIndexNames((0, "OMNI-gx2CEB-MIB", "gx2CEBAnalogTableIndex"))
if mibBuilder.loadTexts: gx2CEBAnalogEntry.setStatus('mandatory')
gx2CEBStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 3), )
if mibBuilder.loadTexts: gx2CEBStatusTable.setStatus('mandatory')
gx2CEBStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 3, 2), ).setIndexNames((0, "OMNI-gx2CEB-MIB", "gx2CEBStatusTableIndex"))
if mibBuilder.loadTexts: gx2CEBStatusEntry.setStatus('mandatory')
gx2CEBFactoryTable = MibTable((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 4), )
if mibBuilder.loadTexts: gx2CEBFactoryTable.setStatus('mandatory')
gx2CEBFactoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 4, 3), ).setIndexNames((0, "OMNI-gx2CEB-MIB", "gx2CEBFactoryTableIndex"))
if mibBuilder.loadTexts: gx2CEBFactoryEntry.setStatus('mandatory')
gx2CEBAnalogTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2CEBAnalogTableIndex.setStatus('mandatory')
ceblabelModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceblabelModTemp.setStatus('optional')
cebuomModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebuomModTemp.setStatus('optional')
cebmajorHighModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 4), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmajorHighModTemp.setStatus('mandatory')
cebmajorLowModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 5), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmajorLowModTemp.setStatus('mandatory')
cebminorHighModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 6), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminorHighModTemp.setStatus('mandatory')
cebminorLowModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 7), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminorLowModTemp.setStatus('mandatory')
cebcurrentValueModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 8), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebcurrentValueModTemp.setStatus('mandatory')
cebstateFlagModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebstateFlagModTemp.setStatus('mandatory')
cebminValueModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 10), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminValueModTemp.setStatus('mandatory')
cebmaxValueModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 11), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmaxValueModTemp.setStatus('mandatory')
cebalarmStateModTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebalarmStateModTemp.setStatus('mandatory')
ceblabelFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceblabelFanCurrent.setStatus('optional')
cebuomFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebuomFanCurrent.setStatus('optional')
cebmajorHighFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 15), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmajorHighFanCurrent.setStatus('mandatory')
cebmajorLowFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 16), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmajorLowFanCurrent.setStatus('mandatory')
cebminorHighFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 17), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminorHighFanCurrent.setStatus('obsolete')
cebminorLowFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 18), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminorLowFanCurrent.setStatus('obsolete')
cebcurrentValueFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 19), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebcurrentValueFanCurrent.setStatus('mandatory')
cebstateFlagFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebstateFlagFanCurrent.setStatus('mandatory')
cebminValueFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 21), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminValueFanCurrent.setStatus('mandatory')
cebmaxValueFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 22), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmaxValueFanCurrent.setStatus('mandatory')
cebalarmStateFanCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebalarmStateFanCurrent.setStatus('mandatory')
ceblabelAnalogVoltage01 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceblabelAnalogVoltage01.setStatus('optional')
cebuomAnalogVoltage01 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebuomAnalogVoltage01.setStatus('optional')
cebmajorHighAnalogVoltage01 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 26), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmajorHighAnalogVoltage01.setStatus('mandatory')
cebmajorLowAnalogVoltage01 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 27), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmajorLowAnalogVoltage01.setStatus('mandatory')
cebminorHighAnalogVoltage01 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 28), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminorHighAnalogVoltage01.setStatus('mandatory')
cebminorLowAnalogVoltage01 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 29), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminorLowAnalogVoltage01.setStatus('mandatory')
cebcurrentValueAnalogVoltage01 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 30), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebcurrentValueAnalogVoltage01.setStatus('mandatory')
cebstateFlagAnalogVoltage01 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebstateFlagAnalogVoltage01.setStatus('mandatory')
cebminValueAnalogVoltage01 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 32), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminValueAnalogVoltage01.setStatus('mandatory')
cebmaxValueAnalogVoltage01 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 33), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmaxValueAnalogVoltage01.setStatus('mandatory')
cebalarmStateAnalogVoltage01 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebalarmStateAnalogVoltage01.setStatus('mandatory')
ceblabelAnalogVoltage02 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceblabelAnalogVoltage02.setStatus('optional')
cebuomAnalogVoltage02 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 36), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebuomAnalogVoltage02.setStatus('optional')
cebmajorHighAnalogVoltage02 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 37), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmajorHighAnalogVoltage02.setStatus('mandatory')
cebmajorLowAnalogVoltage02 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 38), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmajorLowAnalogVoltage02.setStatus('mandatory')
cebminorHighAnalogVoltage02 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 39), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminorHighAnalogVoltage02.setStatus('mandatory')
cebminorLowAnalogVoltage02 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 40), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminorLowAnalogVoltage02.setStatus('mandatory')
cebcurrentValueAnalogVoltage02 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 41), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebcurrentValueAnalogVoltage02.setStatus('mandatory')
cebstateFlagAnalogVoltage02 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebstateFlagAnalogVoltage02.setStatus('mandatory')
cebminValueAnalogVoltage02 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 43), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminValueAnalogVoltage02.setStatus('mandatory')
cebmaxValueAnalogVoltage02 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 44), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmaxValueAnalogVoltage02.setStatus('mandatory')
cebalarmStateAnalogVoltage02 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebalarmStateAnalogVoltage02.setStatus('mandatory')
ceblabelAnalogVoltage03 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 46), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceblabelAnalogVoltage03.setStatus('optional')
cebuomAnalogVoltage03 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 47), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebuomAnalogVoltage03.setStatus('optional')
cebmajorHighAnalogVoltage03 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 48), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmajorHighAnalogVoltage03.setStatus('mandatory')
cebmajorLowAnalogVoltage03 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 49), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmajorLowAnalogVoltage03.setStatus('mandatory')
cebminorHighAnalogVoltage03 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 50), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminorHighAnalogVoltage03.setStatus('mandatory')
cebminorLowAnalogVoltage03 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 51), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminorLowAnalogVoltage03.setStatus('mandatory')
cebcurrentValueAnalogVoltage03 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 52), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebcurrentValueAnalogVoltage03.setStatus('mandatory')
cebstateFlagAnalogVoltage03 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebstateFlagAnalogVoltage03.setStatus('mandatory')
cebminValueAnalogVoltage03 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 54), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminValueAnalogVoltage03.setStatus('mandatory')
cebmaxValueAnalogVoltage03 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 55), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmaxValueAnalogVoltage03.setStatus('mandatory')
cebalarmStateAnalogVoltage03 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebalarmStateAnalogVoltage03.setStatus('mandatory')
ceblabelAnalogVoltage04 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 57), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceblabelAnalogVoltage04.setStatus('optional')
cebuomAnalogVoltage04 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 58), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebuomAnalogVoltage04.setStatus('optional')
cebmajorHighAnalogVoltage04 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 59), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmajorHighAnalogVoltage04.setStatus('mandatory')
cebmajorLowAnalogVoltage04 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 60), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmajorLowAnalogVoltage04.setStatus('mandatory')
cebminorHighAnalogVoltage04 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 61), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminorHighAnalogVoltage04.setStatus('mandatory')
cebminorLowAnalogVoltage04 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 62), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminorLowAnalogVoltage04.setStatus('mandatory')
cebcurrentValueAnalogVoltage04 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 63), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebcurrentValueAnalogVoltage04.setStatus('mandatory')
cebstateFlagAnalogVoltage04 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebstateFlagAnalogVoltage04.setStatus('mandatory')
cebminValueAnalogVoltage04 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 65), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminValueAnalogVoltage04.setStatus('mandatory')
cebmaxValueAnalogVoltage04 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 66), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmaxValueAnalogVoltage04.setStatus('mandatory')
cebalarmStateAnalogVoltage04 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebalarmStateAnalogVoltage04.setStatus('mandatory')
ceblabelAnalogVoltage05 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 68), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceblabelAnalogVoltage05.setStatus('optional')
cebuomAnalogVoltage05 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 69), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebuomAnalogVoltage05.setStatus('optional')
cebmajorHighAnalogVoltage05 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 70), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmajorHighAnalogVoltage05.setStatus('mandatory')
cebmajorLowAnalogVoltage05 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 71), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmajorLowAnalogVoltage05.setStatus('mandatory')
cebminorHighAnalogVoltage05 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 72), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminorHighAnalogVoltage05.setStatus('mandatory')
cebminorLowAnalogVoltage05 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 73), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminorLowAnalogVoltage05.setStatus('mandatory')
cebcurrentValueAnalogVoltage05 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 74), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebcurrentValueAnalogVoltage05.setStatus('mandatory')
cebstateFlagAnalogVoltage05 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebstateFlagAnalogVoltage05.setStatus('mandatory')
cebminValueAnalogVoltage05 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 76), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebminValueAnalogVoltage05.setStatus('mandatory')
cebmaxValueAnalogVoltage05 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 77), Float()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebmaxValueAnalogVoltage05.setStatus('mandatory')
cebalarmStateAnalogVoltage05 = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 2, 1, 78), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noAlarm", 1), ("majorLowAlarm", 2), ("minorLowAlarm", 3), ("minorHighAlarm", 4), ("majorHighAlarm", 5), ("informational", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebalarmStateAnalogVoltage05.setStatus('mandatory')
gx2CEBStatusTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 3, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2CEBStatusTableIndex.setStatus('mandatory')
ceblabelBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 3, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceblabelBoot.setStatus('optional')
cebvalueBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 3, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebvalueBoot.setStatus('mandatory')
cebstateflagBoot = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 3, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebstateflagBoot.setStatus('mandatory')
ceblabelFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 3, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceblabelFlash.setStatus('optional')
cebvalueFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 3, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebvalueFlash.setStatus('mandatory')
cebstateflagFlash = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 3, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebstateflagFlash.setStatus('mandatory')
ceblabelFactoryDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 3, 2, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceblabelFactoryDataCRC.setStatus('optional')
cebvalueFactoryDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 3, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebvalueFactoryDataCRC.setStatus('mandatory')
cebstateflagFactoryDataCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 3, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebstateflagFactoryDataCRC.setStatus('mandatory')
ceblabelAlarmDataCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 3, 2, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ceblabelAlarmDataCrc.setStatus('optional')
cebvalueAlarmDataCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 3, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("ok", 1), ("undetermined", 2), ("warning", 3), ("minor", 4), ("major", 5), ("critical", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebvalueAlarmDataCrc.setStatus('mandatory')
cebstateflagAlarmDataCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 3, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("hidden", 1), ("read-only", 2), ("updateable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebstateflagAlarmDataCrc.setStatus('mandatory')
gx2CEBFactoryTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 4, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gx2CEBFactoryTableIndex.setStatus('mandatory')
cebbootControlByte = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 4, 3, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebbootControlByte.setStatus('mandatory')
cebbootStatusByte = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 4, 3, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebbootStatusByte.setStatus('mandatory')
cebbank1CRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 4, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebbank1CRC.setStatus('mandatory')
cebbank2CRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 4, 3, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebbank2CRC.setStatus('mandatory')
cebprgEEPROMByte = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 4, 3, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebprgEEPROMByte.setStatus('mandatory')
cebfactoryCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 4, 3, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebfactoryCRC.setStatus('mandatory')
cebcalculateCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 4, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("factory", 1), ("na", 2), ("alarm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebcalculateCRC.setStatus('obsolete')
cebhourMeter = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 4, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebhourMeter.setStatus('mandatory')
cebflashPrgCntA = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 4, 3, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebflashPrgCntA.setStatus('mandatory')
cebflashPrgCntB = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 4, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebflashPrgCntB.setStatus('mandatory')
cebflashBankARev = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 4, 3, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebflashBankARev.setStatus('mandatory')
cebflashBankBRev = MibTableColumn((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20, 4, 3, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cebflashBankBRev.setStatus('mandatory')
trapCEBConfigChangeInteger = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20) + (0,1)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapCEBConfigChangeDisplayString = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20) + (0,2)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueDisplayString"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapCEBfanCurrentAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20) + (0,3)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapCEBModuleTempAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20) + (0,4)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapCEBFlashAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20) + (0,5)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapCEBBankBootAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20) + (0,6)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapCEBAlarmDataCRCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20) + (0,7)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
trapCEBFactoryDataCRCAlarm = NotificationType((1, 3, 6, 1, 4, 1, 1166, 6, 1, 2, 20) + (0,8)).setObjects(("NLSBBN-TRAPS-MIB", "trapIdentifier"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemModelNumber"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemSerialNum"), ("NLSBBN-TRAPS-MIB", "trapPerceivedSeverity"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemOperState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAlarmStatus"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAdminState"), ("NLSBBN-TRAPS-MIB", "trapNetworkElemAvailStatus"), ("NLSBBN-TRAPS-MIB", "trapText"), ("NLSBBN-TRAPS-MIB", "trapChangedObjectId"), ("NLSBBN-TRAPS-MIB", "trapChangedValueInteger"), ("NLSBBN-TRAPS-MIB", "trapNETrapLastTrapTimeStamp"))
mibBuilder.exportSymbols("OMNI-gx2CEB-MIB", cebminValueFanCurrent=cebminValueFanCurrent, cebvalueFlash=cebvalueFlash, cebminValueAnalogVoltage04=cebminValueAnalogVoltage04, cebvalueBoot=cebvalueBoot, cebmajorLowAnalogVoltage05=cebmajorLowAnalogVoltage05, gx2CEBStatusTableIndex=gx2CEBStatusTableIndex, cebmaxValueAnalogVoltage05=cebmaxValueAnalogVoltage05, cebmajorLowAnalogVoltage02=cebmajorLowAnalogVoltage02, gx2CEBAnalogTable=gx2CEBAnalogTable, gx2CEBAnalogTableIndex=gx2CEBAnalogTableIndex, cebmajorHighAnalogVoltage02=cebmajorHighAnalogVoltage02, cebcurrentValueAnalogVoltage03=cebcurrentValueAnalogVoltage03, cebprgEEPROMByte=cebprgEEPROMByte, ceblabelBoot=ceblabelBoot, cebstateflagFactoryDataCRC=cebstateflagFactoryDataCRC, cebminorHighAnalogVoltage02=cebminorHighAnalogVoltage02, gx2CEBFactoryEntry=gx2CEBFactoryEntry, cebuomAnalogVoltage02=cebuomAnalogVoltage02, cebminValueAnalogVoltage03=cebminValueAnalogVoltage03, cebalarmStateModTemp=cebalarmStateModTemp, cebmajorHighAnalogVoltage01=cebmajorHighAnalogVoltage01, cebfactoryCRC=cebfactoryCRC, cebalarmStateAnalogVoltage02=cebalarmStateAnalogVoltage02, trapCEBBankBootAlarm=trapCEBBankBootAlarm, cebmaxValueAnalogVoltage02=cebmaxValueAnalogVoltage02, cebalarmStateAnalogVoltage01=cebalarmStateAnalogVoltage01, cebstateFlagAnalogVoltage05=cebstateFlagAnalogVoltage05, cebvalueAlarmDataCrc=cebvalueAlarmDataCrc, gx2CEBFactoryTable=gx2CEBFactoryTable, cebalarmStateAnalogVoltage05=cebalarmStateAnalogVoltage05, trapCEBConfigChangeInteger=trapCEBConfigChangeInteger, cebuomAnalogVoltage03=cebuomAnalogVoltage03, cebcurrentValueFanCurrent=cebcurrentValueFanCurrent, cebmajorLowModTemp=cebmajorLowModTemp, cebminorHighAnalogVoltage01=cebminorHighAnalogVoltage01, cebminorHighAnalogVoltage04=cebminorHighAnalogVoltage04, trapCEBfanCurrentAlarm=trapCEBfanCurrentAlarm, cebminorLowAnalogVoltage02=cebminorLowAnalogVoltage02, cebcalculateCRC=cebcalculateCRC, cebuomFanCurrent=cebuomFanCurrent, trapCEBAlarmDataCRCAlarm=trapCEBAlarmDataCRCAlarm, cebcurrentValueAnalogVoltage04=cebcurrentValueAnalogVoltage04, cebmajorLowAnalogVoltage01=cebmajorLowAnalogVoltage01, cebmajorHighModTemp=cebmajorHighModTemp, cebminValueAnalogVoltage05=cebminValueAnalogVoltage05, cebminorHighModTemp=cebminorHighModTemp, cebstateflagBoot=cebstateflagBoot, cebstateFlagAnalogVoltage01=cebstateFlagAnalogVoltage01, cebvalueFactoryDataCRC=cebvalueFactoryDataCRC, cebmaxValueAnalogVoltage01=cebmaxValueAnalogVoltage01, ceblabelAlarmDataCrc=ceblabelAlarmDataCrc, ceblabelFactoryDataCRC=ceblabelFactoryDataCRC, cebbootControlByte=cebbootControlByte, ceblabelAnalogVoltage05=ceblabelAnalogVoltage05, cebmaxValueFanCurrent=cebmaxValueFanCurrent, cebminValueAnalogVoltage02=cebminValueAnalogVoltage02, trapCEBFactoryDataCRCAlarm=trapCEBFactoryDataCRCAlarm, cebstateflagAlarmDataCrc=cebstateflagAlarmDataCrc, ceblabelAnalogVoltage04=ceblabelAnalogVoltage04, cebbank2CRC=cebbank2CRC, ceblabelModTemp=ceblabelModTemp, gx2CEBStatusTable=gx2CEBStatusTable, cebminorLowAnalogVoltage04=cebminorLowAnalogVoltage04, trapCEBFlashAlarm=trapCEBFlashAlarm, cebflashPrgCntA=cebflashPrgCntA, ceblabelAnalogVoltage02=ceblabelAnalogVoltage02, cebstateFlagModTemp=cebstateFlagModTemp, cebminorLowAnalogVoltage01=cebminorLowAnalogVoltage01, cebuomModTemp=cebuomModTemp, cebalarmStateFanCurrent=cebalarmStateFanCurrent, cebstateFlagAnalogVoltage03=cebstateFlagAnalogVoltage03, cebmaxValueAnalogVoltage03=cebmaxValueAnalogVoltage03, cebcurrentValueModTemp=cebcurrentValueModTemp, cebminorHighAnalogVoltage03=cebminorHighAnalogVoltage03, cebflashBankARev=cebflashBankARev, cebflashBankBRev=cebflashBankBRev, trapCEBConfigChangeDisplayString=trapCEBConfigChangeDisplayString, cebmaxValueModTemp=cebmaxValueModTemp, cebmajorHighAnalogVoltage05=cebmajorHighAnalogVoltage05, Float=Float, ceblabelFanCurrent=ceblabelFanCurrent, gx2CEBAnalogEntry=gx2CEBAnalogEntry, gx2CEBFactoryTableIndex=gx2CEBFactoryTableIndex, cebminorHighFanCurrent=cebminorHighFanCurrent, cebuomAnalogVoltage01=cebuomAnalogVoltage01, trapCEBModuleTempAlarm=trapCEBModuleTempAlarm, cebmajorHighAnalogVoltage04=cebmajorHighAnalogVoltage04, cebcurrentValueAnalogVoltage05=cebcurrentValueAnalogVoltage05, gx2CEBDescriptor=gx2CEBDescriptor, cebalarmStateAnalogVoltage03=cebalarmStateAnalogVoltage03, cebalarmStateAnalogVoltage04=cebalarmStateAnalogVoltage04, cebstateflagFlash=cebstateflagFlash, cebmajorHighAnalogVoltage03=cebmajorHighAnalogVoltage03, cebmajorLowAnalogVoltage04=cebmajorLowAnalogVoltage04, cebstateFlagFanCurrent=cebstateFlagFanCurrent, gx2CEBStatusEntry=gx2CEBStatusEntry, cebminorLowAnalogVoltage05=cebminorLowAnalogVoltage05, cebhourMeter=cebhourMeter, cebstateFlagAnalogVoltage02=cebstateFlagAnalogVoltage02, cebstateFlagAnalogVoltage04=cebstateFlagAnalogVoltage04, cebmaxValueAnalogVoltage04=cebmaxValueAnalogVoltage04, ceblabelAnalogVoltage03=ceblabelAnalogVoltage03, cebuomAnalogVoltage04=cebuomAnalogVoltage04, ceblabelAnalogVoltage01=ceblabelAnalogVoltage01, cebminorLowAnalogVoltage03=cebminorLowAnalogVoltage03, ceblabelFlash=ceblabelFlash, cebminorHighAnalogVoltage05=cebminorHighAnalogVoltage05, cebminorLowFanCurrent=cebminorLowFanCurrent, cebminValueAnalogVoltage01=cebminValueAnalogVoltage01, cebuomAnalogVoltage05=cebuomAnalogVoltage05, cebmajorLowFanCurrent=cebmajorLowFanCurrent, cebminValueModTemp=cebminValueModTemp, cebminorLowModTemp=cebminorLowModTemp, cebmajorLowAnalogVoltage03=cebmajorLowAnalogVoltage03, cebcurrentValueAnalogVoltage02=cebcurrentValueAnalogVoltage02, cebcurrentValueAnalogVoltage01=cebcurrentValueAnalogVoltage01, cebbank1CRC=cebbank1CRC, cebbootStatusByte=cebbootStatusByte, cebmajorHighFanCurrent=cebmajorHighFanCurrent, cebflashPrgCntB=cebflashPrgCntB)
