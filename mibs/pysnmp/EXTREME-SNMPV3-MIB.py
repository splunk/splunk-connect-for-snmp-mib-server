#
# PySNMP MIB module EXTREME-SNMPV3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/EXTREME-BASE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:53:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
extremeAgent, = mibBuilder.importSymbols("EXTREME-BASE-MIB", "extremeAgent")
snmpTargetAddrEntry, = mibBuilder.importSymbols("SNMP-TARGET-MIB", "snmpTargetAddrEntry")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, iso, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Bits, MibIdentifier, ModuleIdentity, Counter64, Counter32, NotificationType, Integer32, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Bits", "MibIdentifier", "ModuleIdentity", "Counter64", "Counter32", "NotificationType", "Integer32", "IpAddress", "TimeTicks")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
extremeSnmpv3 = ModuleIdentity((1, 3, 6, 1, 4, 1, 1916, 1, 23))
if mibBuilder.loadTexts: extremeSnmpv3.setLastUpdated('0007240000Z')
if mibBuilder.loadTexts: extremeSnmpv3.setOrganization('Extreme Networks, Inc.')
extremeTarget = MibIdentifier((1, 3, 6, 1, 4, 1, 1916, 1, 23, 1))
extremeTargetAddrExtTable = MibTable((1, 3, 6, 1, 4, 1, 1916, 1, 23, 1, 1), )
if mibBuilder.loadTexts: extremeTargetAddrExtTable.setStatus('current')
extremeTargetAddrExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1916, 1, 23, 1, 1, 1), )
snmpTargetAddrEntry.registerAugmentions(("EXTREME-SNMPV3-MIB", "extremeTargetAddrExtEntry"))
extremeTargetAddrExtEntry.setIndexNames(*snmpTargetAddrEntry.getIndexNames())
if mibBuilder.loadTexts: extremeTargetAddrExtEntry.setStatus('current')
extremeTargetAddrExtIgnoreMPModel = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 23, 1, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeTargetAddrExtIgnoreMPModel.setStatus('current')
extremeTargetAddrExtStandardMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 23, 1, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeTargetAddrExtStandardMode.setStatus('current')
extremeTargetAddrExtTrapDestIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 23, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: extremeTargetAddrExtTrapDestIndex.setStatus('current')
extremeTargetAddrExtUseEventComm = MibTableColumn((1, 3, 6, 1, 4, 1, 1916, 1, 23, 1, 1, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: extremeTargetAddrExtUseEventComm.setStatus('current')
mibBuilder.exportSymbols("EXTREME-SNMPV3-MIB", extremeTargetAddrExtIgnoreMPModel=extremeTargetAddrExtIgnoreMPModel, extremeTargetAddrExtStandardMode=extremeTargetAddrExtStandardMode, PYSNMP_MODULE_ID=extremeSnmpv3, extremeTarget=extremeTarget, extremeTargetAddrExtEntry=extremeTargetAddrExtEntry, extremeSnmpv3=extremeSnmpv3, extremeTargetAddrExtTable=extremeTargetAddrExtTable, extremeTargetAddrExtUseEventComm=extremeTargetAddrExtUseEventComm, extremeTargetAddrExtTrapDestIndex=extremeTargetAddrExtTrapDestIndex)
