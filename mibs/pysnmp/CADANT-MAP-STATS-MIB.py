#
# PySNMP MIB module CADANT-MAP-STATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CADANT-MAP-STATS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:28:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
cadSpectrum, = mibBuilder.importSymbols("CADANT-PRODUCTS-MIB", "cadSpectrum")
FlowActivityState, = mibBuilder.importSymbols("CADANT-TC", "FlowActivityState")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, Bits, Unsigned32, ModuleIdentity, TimeTicks, ObjectIdentity, iso, Gauge32, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "Bits", "Unsigned32", "ModuleIdentity", "TimeTicks", "ObjectIdentity", "iso", "Gauge32", "Integer32", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cadMapStatsMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10))
cadMapStatsMib.setRevisions(('2008-10-23 00:00', '2004-01-17 00:00', '2004-01-16 00:00', '2003-08-11 00:00', '2003-08-06 00:00', '2003-08-04 00:00', '2003-04-04 00:00',))
if mibBuilder.loadTexts: cadMapStatsMib.setLastUpdated('200810230000Z')
if mibBuilder.loadTexts: cadMapStatsMib.setOrganization('Arris International, Inc.')
class CadMapStatsIUCTypeId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 15)

class CadMapStatsBwRequestQueuesPriorityId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("docsispri0", 0), ("docsispri1", 1), ("docsispri2", 2), ("docsispri3", 3), ("docsispri4", 4), ("docsispri5", 5), ("docsispri6", 6), ("docsispri7", 7))

cadMapStatsBaseTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 1), )
if mibBuilder.loadTexts: cadMapStatsBaseTable.setStatus('current')
cadMapStatsBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cadMapStatsBaseEntry.setStatus('current')
cadMapStatsTotalMapsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsTotalMapsSent.setStatus('current')
cadMapStatsTotalFragmentedGrants = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsTotalFragmentedGrants.setStatus('current')
cadMapStatsTotalUgsQiTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsTotalUgsQiTransitions.setStatus('current')
cadMapStatsTotalUgsadTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsTotalUgsadTransitions.setStatus('current')
cadMapStatsTotalUgsEHdrsSw = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsTotalUgsEHdrsSw.setStatus('current')
cadMapStatsTotalBadMaps = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsTotalBadMaps.setStatus('current')
cadMapStatsMSlotsTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 2), )
if mibBuilder.loadTexts: cadMapStatsMSlotsTable.setStatus('current')
cadMapStatsMSlotsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cadMapStatsMSlotsEntry.setStatus('current')
cadMapStatsTotalMSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsTotalMSlots.setStatus('current')
cadMapStatsTotalUCastGrantedMSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsTotalUCastGrantedMSlots.setStatus('current')
cadMapStatsTotalBwRequestMSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsTotalBwRequestMSlots.setStatus('current')
cadMapStatsTotalSkippedMSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsTotalSkippedMSlots.setStatus('current')
cadMapStatsTotalLogicalNullPadMSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsTotalLogicalNullPadMSlots.setStatus('current')
cadMapStatsMSlotsPerIUCTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 3), )
if mibBuilder.loadTexts: cadMapStatsMSlotsPerIUCTable.setStatus('current')
cadMapStatsMSlotsPerIUCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CADANT-MAP-STATS-MIB", "cadMapStatsMSlotsPerIUCId"))
if mibBuilder.loadTexts: cadMapStatsMSlotsPerIUCEntry.setStatus('current')
cadMapStatsMSlotsPerIUCId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 3, 1, 1), CadMapStatsIUCTypeId())
if mibBuilder.loadTexts: cadMapStatsMSlotsPerIUCId.setStatus('current')
cadMapStatsGrantedBCastMSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsGrantedBCastMSlots.setStatus('current')
cadMapStatsGrantedMCastMSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsGrantedMCastMSlots.setStatus('current')
cadMapStatsGrantedUCastMSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsGrantedUCastMSlots.setStatus('current')
cadMapStatsGrantedZeroSidMSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsGrantedZeroSidMSlots.setStatus('current')
cadMapStatsBwRequestsTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 4), )
if mibBuilder.loadTexts: cadMapStatsBwRequestsTable.setStatus('current')
cadMapStatsBwRequestsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cadMapStatsBwRequestsEntry.setStatus('current')
cadMapStatsTotalBwRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsTotalBwRequests.setStatus('current')
cadMapStatsTotalBwRequestSchedulerDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsTotalBwRequestSchedulerDrops.setStatus('current')
cadMapStatsTotalBwRequestSuperGreedyDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsTotalBwRequestSuperGreedyDrops.setStatus('current')
cadMapStatsPeakBwRequestSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsPeakBwRequestSize.setStatus('current')
cadMapStatsPeakBwRequestsPerMap = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsPeakBwRequestsPerMap.setStatus('current')
cadMapStatsGrantPendingsTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 5), )
if mibBuilder.loadTexts: cadMapStatsGrantPendingsTable.setStatus('current')
cadMapStatsGrantPendingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cadMapStatsGrantPendingsEntry.setStatus('current')
cadMapStatsTotalGrantPendings = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsTotalGrantPendings.setStatus('current')
cadMapStatsTotalGrantPendingDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsTotalGrantPendingDrops.setStatus('current')
cadMapStatsTotalGrantPendingPromos = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsTotalGrantPendingPromos.setStatus('current')
cadMapStatsPeakGrantPendingsPerMap = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 5, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsPeakGrantPendingsPerMap.setStatus('current')
cadMapStatsBwRequestQueuesTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 6), )
if mibBuilder.loadTexts: cadMapStatsBwRequestQueuesTable.setStatus('current')
cadMapStatsBwRequestQueuesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CADANT-MAP-STATS-MIB", "cadMapStatsBwRequestQueuesFlowState"), (0, "CADANT-MAP-STATS-MIB", "cadMapStatsBwRequestQueuesPriorityId"))
if mibBuilder.loadTexts: cadMapStatsBwRequestQueuesEntry.setStatus('current')
cadMapStatsBwRequestQueuesFlowState = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 6, 1, 1), FlowActivityState())
if mibBuilder.loadTexts: cadMapStatsBwRequestQueuesFlowState.setStatus('current')
cadMapStatsBwRequestQueuesPriorityId = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 6, 1, 2), CadMapStatsBwRequestQueuesPriorityId())
if mibBuilder.loadTexts: cadMapStatsBwRequestQueuesPriorityId.setStatus('current')
cadMapStatsBwRequestQueuesNumAdds = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsBwRequestQueuesNumAdds.setStatus('current')
cadMapStatsBwRequestQueuesNumDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsBwRequestQueuesNumDrops.setStatus('current')
cadMapStatsBwRequestQueuesNumPendings = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsBwRequestQueuesNumPendings.setStatus('current')
cadMapStatsBwRequestQueuesNumPromos = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsBwRequestQueuesNumPromos.setStatus('current')
cadMapStatsBwRequestQueuesNumElements = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 6, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsBwRequestQueuesNumElements.setStatus('current')
cadMapStatsBwRequestQueuesLatencySum = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsBwRequestQueuesLatencySum.setStatus('current')
cadMapStatsPeriodicFlowsTable = MibTable((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 7), )
if mibBuilder.loadTexts: cadMapStatsPeriodicFlowsTable.setStatus('current')
cadMapStatsPeriodicFlowsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cadMapStatsPeriodicFlowsEntry.setStatus('current')
cadMapStatsNumNrtpsFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 7, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsNumNrtpsFlows.setStatus('current')
cadMapStatsNumRtpsFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 7, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsNumRtpsFlows.setStatus('current')
cadMapStatsNumUgsadActiveFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 7, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsNumUgsadActiveFlows.setStatus('current')
cadMapStatsNumUgsadPollingFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 7, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsNumUgsadPollingFlows.setStatus('current')
cadMapStatsNumUgsFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 7, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsNumUgsFlows.setStatus('current')
cadMapStatsNumBEPollingFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 7, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsNumBEPollingFlows.setStatus('current')
cadMapStatsNumBEFastPollingFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 4998, 1, 1, 15, 10, 7, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cadMapStatsNumBEFastPollingFlows.setStatus('current')
mibBuilder.exportSymbols("CADANT-MAP-STATS-MIB", cadMapStatsTotalBwRequests=cadMapStatsTotalBwRequests, cadMapStatsBwRequestQueuesEntry=cadMapStatsBwRequestQueuesEntry, cadMapStatsBwRequestsTable=cadMapStatsBwRequestsTable, cadMapStatsMib=cadMapStatsMib, cadMapStatsGrantedUCastMSlots=cadMapStatsGrantedUCastMSlots, cadMapStatsMSlotsPerIUCId=cadMapStatsMSlotsPerIUCId, cadMapStatsTotalLogicalNullPadMSlots=cadMapStatsTotalLogicalNullPadMSlots, cadMapStatsNumUgsFlows=cadMapStatsNumUgsFlows, CadMapStatsBwRequestQueuesPriorityId=CadMapStatsBwRequestQueuesPriorityId, cadMapStatsTotalGrantPendingDrops=cadMapStatsTotalGrantPendingDrops, cadMapStatsBwRequestsEntry=cadMapStatsBwRequestsEntry, cadMapStatsTotalBwRequestSuperGreedyDrops=cadMapStatsTotalBwRequestSuperGreedyDrops, cadMapStatsTotalFragmentedGrants=cadMapStatsTotalFragmentedGrants, cadMapStatsBwRequestQueuesNumAdds=cadMapStatsBwRequestQueuesNumAdds, cadMapStatsBwRequestQueuesNumPromos=cadMapStatsBwRequestQueuesNumPromos, cadMapStatsNumUgsadPollingFlows=cadMapStatsNumUgsadPollingFlows, cadMapStatsTotalUgsEHdrsSw=cadMapStatsTotalUgsEHdrsSw, cadMapStatsPeakBwRequestSize=cadMapStatsPeakBwRequestSize, cadMapStatsTotalGrantPendings=cadMapStatsTotalGrantPendings, cadMapStatsTotalMapsSent=cadMapStatsTotalMapsSent, cadMapStatsBaseEntry=cadMapStatsBaseEntry, cadMapStatsPeakGrantPendingsPerMap=cadMapStatsPeakGrantPendingsPerMap, cadMapStatsTotalBadMaps=cadMapStatsTotalBadMaps, cadMapStatsNumRtpsFlows=cadMapStatsNumRtpsFlows, cadMapStatsTotalUgsadTransitions=cadMapStatsTotalUgsadTransitions, cadMapStatsTotalMSlots=cadMapStatsTotalMSlots, cadMapStatsTotalBwRequestMSlots=cadMapStatsTotalBwRequestMSlots, cadMapStatsMSlotsPerIUCEntry=cadMapStatsMSlotsPerIUCEntry, cadMapStatsBwRequestQueuesFlowState=cadMapStatsBwRequestQueuesFlowState, cadMapStatsPeriodicFlowsEntry=cadMapStatsPeriodicFlowsEntry, cadMapStatsBwRequestQueuesNumDrops=cadMapStatsBwRequestQueuesNumDrops, cadMapStatsTotalSkippedMSlots=cadMapStatsTotalSkippedMSlots, cadMapStatsTotalUCastGrantedMSlots=cadMapStatsTotalUCastGrantedMSlots, cadMapStatsNumNrtpsFlows=cadMapStatsNumNrtpsFlows, PYSNMP_MODULE_ID=cadMapStatsMib, cadMapStatsGrantedZeroSidMSlots=cadMapStatsGrantedZeroSidMSlots, cadMapStatsGrantedMCastMSlots=cadMapStatsGrantedMCastMSlots, cadMapStatsBwRequestQueuesNumElements=cadMapStatsBwRequestQueuesNumElements, cadMapStatsMSlotsPerIUCTable=cadMapStatsMSlotsPerIUCTable, cadMapStatsBwRequestQueuesLatencySum=cadMapStatsBwRequestQueuesLatencySum, cadMapStatsNumUgsadActiveFlows=cadMapStatsNumUgsadActiveFlows, cadMapStatsTotalGrantPendingPromos=cadMapStatsTotalGrantPendingPromos, cadMapStatsPeakBwRequestsPerMap=cadMapStatsPeakBwRequestsPerMap, cadMapStatsMSlotsEntry=cadMapStatsMSlotsEntry, cadMapStatsBwRequestQueuesTable=cadMapStatsBwRequestQueuesTable, cadMapStatsGrantPendingsEntry=cadMapStatsGrantPendingsEntry, cadMapStatsTotalUgsQiTransitions=cadMapStatsTotalUgsQiTransitions, cadMapStatsBwRequestQueuesPriorityId=cadMapStatsBwRequestQueuesPriorityId, cadMapStatsGrantedBCastMSlots=cadMapStatsGrantedBCastMSlots, CadMapStatsIUCTypeId=CadMapStatsIUCTypeId, cadMapStatsBaseTable=cadMapStatsBaseTable, cadMapStatsTotalBwRequestSchedulerDrops=cadMapStatsTotalBwRequestSchedulerDrops, cadMapStatsNumBEFastPollingFlows=cadMapStatsNumBEFastPollingFlows, cadMapStatsGrantPendingsTable=cadMapStatsGrantPendingsTable, cadMapStatsNumBEPollingFlows=cadMapStatsNumBEPollingFlows, cadMapStatsPeriodicFlowsTable=cadMapStatsPeriodicFlowsTable, cadMapStatsBwRequestQueuesNumPendings=cadMapStatsBwRequestQueuesNumPendings, cadMapStatsMSlotsTable=cadMapStatsMSlotsTable)
