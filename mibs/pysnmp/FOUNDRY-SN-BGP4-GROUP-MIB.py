#
# PySNMP MIB module FOUNDRY-SN-BGP4-GROUP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FOUNDRY-SN-BGP4-GROUP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:01:30 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
snBgp4, = mibBuilder.importSymbols("FOUNDRY-SN-ROOT-MIB", "snBgp4")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, TimeTicks, ObjectIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, IpAddress, Gauge32, Unsigned32, MibIdentifier, Integer32, NotificationType, iso, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "TimeTicks", "ObjectIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "IpAddress", "Gauge32", "Unsigned32", "MibIdentifier", "Integer32", "NotificationType", "iso", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
snBgp4Gen = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1))
snBgp4AddrFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 2))
snBgp4AggregateAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 3))
snBgp4AsPathFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 4))
snBgp4CommunityFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 5))
snBgp4NeighGenCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6))
snBgp4NeighDistGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 7))
snBgp4NeighFilterGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 8))
snBgp4NeighRouteMap = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 9))
snBgp4Network = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 10))
snBgp4Redis = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 11))
snBgp4RouteMapFilter = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 12))
snBgp4RouteMapMatch = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13))
snBgp4RouteMapSet = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14))
snBgp4NeighOperStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15))
snBgp4RouteOperStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 16))
snBgp4NeighborSummary = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 17))
snBgp4Attribute = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 18))
snBgp4ClearNeighborCmd = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 19))
snBgp4NeighPrefixGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 20))
snBgp4GenAlwaysCompareMed = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenAlwaysCompareMed.setStatus('mandatory')
snBgp4GenAutoSummary = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenAutoSummary.setStatus('mandatory')
snBgp4GenDefaultLocalPreference = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenDefaultLocalPreference.setStatus('mandatory')
snBgp4GenDefaultInfoOriginate = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenDefaultInfoOriginate.setStatus('mandatory')
snBgp4GenFastExternalFallover = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenFastExternalFallover.setStatus('mandatory')
snBgp4GenNextBootNeighbors = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenNextBootNeighbors.setStatus('mandatory')
snBgp4GenNextBootRoutes = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenNextBootRoutes.setStatus('mandatory')
snBgp4GenSynchronization = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenSynchronization.setStatus('mandatory')
snBgp4GenKeepAliveTime = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenKeepAliveTime.setStatus('mandatory')
snBgp4GenHoldTime = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenHoldTime.setStatus('mandatory')
snBgp4GenRouterId = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenRouterId.setStatus('mandatory')
snBgp4GenTableMap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenTableMap.setStatus('mandatory')
snBgp4GenAdminStat = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenAdminStat.setStatus('mandatory')
snBgp4GenDefaultMetric = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenDefaultMetric.setStatus('mandatory')
snBgp4GenMaxNeighbors = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4GenMaxNeighbors.setStatus('mandatory')
snBgp4GenMinNeighbors = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4GenMinNeighbors.setStatus('mandatory')
snBgp4GenMaxRoutes = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4GenMaxRoutes.setStatus('mandatory')
snBgp4GenMinRoutes = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4GenMinRoutes.setStatus('mandatory')
snBgp4GenMaxAddrFilters = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4GenMaxAddrFilters.setStatus('mandatory')
snBgp4GenMaxAggregateAddresses = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4GenMaxAggregateAddresses.setStatus('mandatory')
snBgp4GenMaxAsPathFilters = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4GenMaxAsPathFilters.setStatus('mandatory')
snBgp4GenMaxCommunityFilters = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4GenMaxCommunityFilters.setStatus('mandatory')
snBgp4GenMaxNetworks = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4GenMaxNetworks.setStatus('mandatory')
snBgp4GenMaxRouteMapFilters = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4GenMaxRouteMapFilters.setStatus('mandatory')
snBgp4GenNeighPrefixMinValue = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4GenNeighPrefixMinValue.setStatus('mandatory')
snBgp4GenOperNeighbors = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4GenOperNeighbors.setStatus('mandatory')
snBgp4GenOperRoutes = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4GenOperRoutes.setStatus('mandatory')
snBgp4GenLocalAs = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenLocalAs.setStatus('mandatory')
snBgp4GenRoutesInstalled = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4GenRoutesInstalled.setStatus('mandatory')
snBgp4GenAsPathInstalled = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4GenAsPathInstalled.setStatus('mandatory')
snBgp4ExternalDistance = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4ExternalDistance.setStatus('mandatory')
snBgp4InternalDistance = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4InternalDistance.setStatus('mandatory')
snBgp4LocalDistance = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4LocalDistance.setStatus('mandatory')
snBgp4OperNumOfAttributes = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4OperNumOfAttributes.setStatus('mandatory')
snBgp4NextBootMaxAttributes = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 30000)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NextBootMaxAttributes.setStatus('mandatory')
snBgp4ClusterId = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 36), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4ClusterId.setStatus('mandatory')
snBgp4ClientToClientReflection = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4ClientToClientReflection.setStatus('mandatory')
snBgp4GenTotalNeighbors = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4GenTotalNeighbors.setStatus('mandatory')
snBgp4GenMaxPaths = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenMaxPaths.setStatus('mandatory')
snBgp4GenConfedId = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenConfedId.setStatus('mandatory')
snBgp4GenConfedPeers = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 41), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenConfedPeers.setStatus('mandatory')
snBgp4GenDampening = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("parameters", 1), ("routeMap", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenDampening.setStatus('mandatory')
snBgp4GenDampenHalfLife = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 45))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenDampenHalfLife.setStatus('mandatory')
snBgp4GenDampenReuse = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenDampenReuse.setStatus('mandatory')
snBgp4GenDampenSuppress = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenDampenSuppress.setStatus('mandatory')
snBgp4GenDampenMaxSuppress = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenDampenMaxSuppress.setStatus('mandatory')
snBgp4GenDampenMap = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 1, 47), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4GenDampenMap.setStatus('mandatory')
snBgp4AddrFilterTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 2, 1), )
if mibBuilder.loadTexts: snBgp4AddrFilterTable.setStatus('mandatory')
snBgp4AddrFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 2, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4AddrFilterIndex"))
if mibBuilder.loadTexts: snBgp4AddrFilterEntry.setStatus('mandatory')
snBgp4AddrFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4AddrFilterIndex.setStatus('mandatory')
snBgp4AddrFilterAction = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("deny", 0), ("permit", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4AddrFilterAction.setStatus('mandatory')
snBgp4AddrFilterSourceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 2, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4AddrFilterSourceIp.setStatus('mandatory')
snBgp4AddrFilterSourceMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 2, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4AddrFilterSourceMask.setStatus('mandatory')
snBgp4AddrFilterDestIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 2, 1, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4AddrFilterDestIp.setStatus('mandatory')
snBgp4AddrFilterDestMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 2, 1, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4AddrFilterDestMask.setStatus('mandatory')
snBgp4AddrFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4AddrFilterRowStatus.setStatus('mandatory')
snBgp4AggregateAddrTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 3, 1), )
if mibBuilder.loadTexts: snBgp4AggregateAddrTable.setStatus('mandatory')
snBgp4AggregateAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 3, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4AggregateAddrIp"), (0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4AggregateAddrMask"), (0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4AggregateAddrOption"))
if mibBuilder.loadTexts: snBgp4AggregateAddrEntry.setStatus('mandatory')
snBgp4AggregateAddrIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 3, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4AggregateAddrIp.setStatus('mandatory')
snBgp4AggregateAddrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 3, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4AggregateAddrMask.setStatus('mandatory')
snBgp4AggregateAddrOption = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("address", 1), ("asSet", 2), ("summaryOnly", 3), ("suppressMap", 4), ("advertiseMap", 5), ("attributeMap", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4AggregateAddrOption.setStatus('mandatory')
snBgp4AggregateAddrMap = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 3, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4AggregateAddrMap.setStatus('mandatory')
snBgp4AggregateAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4AggregateAddrRowStatus.setStatus('mandatory')
snBgp4AsPathFilterTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 4, 1), )
if mibBuilder.loadTexts: snBgp4AsPathFilterTable.setStatus('mandatory')
snBgp4AsPathFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 4, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4AsPathFilterIndex"))
if mibBuilder.loadTexts: snBgp4AsPathFilterEntry.setStatus('mandatory')
snBgp4AsPathFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4AsPathFilterIndex.setStatus('mandatory')
snBgp4AsPathFilterAction = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("deny", 0), ("permit", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4AsPathFilterAction.setStatus('mandatory')
snBgp4AsPathFilterRegExpression = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 4, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4AsPathFilterRegExpression.setStatus('mandatory')
snBgp4AsPathFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4AsPathFilterRowStatus.setStatus('mandatory')
snBgp4CommunityFilterTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 5, 1), )
if mibBuilder.loadTexts: snBgp4CommunityFilterTable.setStatus('mandatory')
snBgp4CommunityFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 5, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4CommunityFilterIndex"))
if mibBuilder.loadTexts: snBgp4CommunityFilterEntry.setStatus('mandatory')
snBgp4CommunityFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4CommunityFilterIndex.setStatus('mandatory')
snBgp4CommunityFilterAction = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("deny", 0), ("permit", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4CommunityFilterAction.setStatus('mandatory')
snBgp4CommunityFilterCommNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 5, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4CommunityFilterCommNum.setStatus('mandatory')
snBgp4CommunityFilterInternet = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4CommunityFilterInternet.setStatus('mandatory')
snBgp4CommunityFilterNoAdvertise = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4CommunityFilterNoAdvertise.setStatus('mandatory')
snBgp4CommunityFilterNoExport = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4CommunityFilterNoExport.setStatus('mandatory')
snBgp4CommunityFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4CommunityFilterRowStatus.setStatus('mandatory')
snBgp4CommunityFilterLocalAs = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4CommunityFilterLocalAs.setStatus('mandatory')
snBgp4NeighGenCfgTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1), )
if mibBuilder.loadTexts: snBgp4NeighGenCfgTable.setStatus('mandatory')
snBgp4NeighGenCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4NeighGenCfgNeighIp"))
if mibBuilder.loadTexts: snBgp4NeighGenCfgEntry.setStatus('mandatory')
snBgp4NeighGenCfgNeighIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighGenCfgNeighIp.setStatus('mandatory')
snBgp4NeighGenCfgAdvertlevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgAdvertlevel.setStatus('mandatory')
snBgp4NeighGenCfgDefOriginate = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgDefOriginate.setStatus('mandatory')
snBgp4NeighGenCfgEbgpMultihop = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgEbgpMultihop.setStatus('mandatory')
snBgp4NeighGenCfgMaxPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgMaxPrefix.setStatus('mandatory')
snBgp4NeighGenCfgNextHopSelf = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgNextHopSelf.setStatus('mandatory')
snBgp4NeighGenCfgRemoteAs = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgRemoteAs.setStatus('mandatory')
snBgp4NeighGenCfgSendComm = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgSendComm.setStatus('mandatory')
snBgp4NeighGenCfgWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgWeight.setStatus('mandatory')
snBgp4NeighGenCfgWeightFilterList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgWeightFilterList.setStatus('mandatory')
snBgp4NeighGenCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5), ("applyDefault", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgRowStatus.setStatus('mandatory')
snBgp4NeighGenCfgUpdateSrcLpbIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgUpdateSrcLpbIntf.setStatus('mandatory')
snBgp4NeighGenCfgRouteRefClient = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgRouteRefClient.setStatus('mandatory')
snBgp4NeighGenCfgRemovePrivateAs = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgRemovePrivateAs.setStatus('mandatory')
snBgp4NeighGenCfgEbgpMultihopTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgEbgpMultihopTtl.setStatus('mandatory')
snBgp4NeighGenCfgShutdown = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgShutdown.setStatus('mandatory')
snBgp4NeighGenCfgKeepAliveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgKeepAliveTime.setStatus('mandatory')
snBgp4NeighGenCfgHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgHoldTime.setStatus('mandatory')
snBgp4NeighGenCfgDefOrigMap = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgDefOrigMap.setStatus('mandatory')
snBgp4NeighGenCfgDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgDesc.setStatus('mandatory')
snBgp4NeighGenCfgPass = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 6, 1, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighGenCfgPass.setStatus('mandatory')
snBgp4NeighDistGroupTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 7, 1), )
if mibBuilder.loadTexts: snBgp4NeighDistGroupTable.setStatus('mandatory')
snBgp4NeighDistGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 7, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4NeighDistGroupNeighIp"), (0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4NeighDistGroupDir"))
if mibBuilder.loadTexts: snBgp4NeighDistGroupEntry.setStatus('mandatory')
snBgp4NeighDistGroupNeighIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 7, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighDistGroupNeighIp.setStatus('mandatory')
snBgp4NeighDistGroupDir = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("out", 0), ("in", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighDistGroupDir.setStatus('mandatory')
snBgp4NeighDistGroupAccessList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 7, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighDistGroupAccessList.setStatus('mandatory')
snBgp4NeighDistGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighDistGroupRowStatus.setStatus('mandatory')
snBgp4NeighDistGroupInFilterList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 7, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighDistGroupInFilterList.setStatus('mandatory')
snBgp4NeighDistGroupOutFilterList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 7, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighDistGroupOutFilterList.setStatus('mandatory')
snBgp4NeighDistGroupInIpAccessList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 7, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighDistGroupInIpAccessList.setStatus('mandatory')
snBgp4NeighDistGroupOutIpAccessList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 7, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighDistGroupOutIpAccessList.setStatus('mandatory')
snBgp4NeighDistGroupInPrefixList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 7, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighDistGroupInPrefixList.setStatus('mandatory')
snBgp4NeighDistGroupOutPrefixList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 7, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighDistGroupOutPrefixList.setStatus('mandatory')
snBgp4NeighFilterGroupTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 8, 1), )
if mibBuilder.loadTexts: snBgp4NeighFilterGroupTable.setStatus('mandatory')
snBgp4NeighFilterGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 8, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4NeighFilterGroupNeighIp"), (0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4NeighFilterGroupDir"))
if mibBuilder.loadTexts: snBgp4NeighFilterGroupEntry.setStatus('mandatory')
snBgp4NeighFilterGroupNeighIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 8, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighFilterGroupNeighIp.setStatus('mandatory')
snBgp4NeighFilterGroupDir = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("out", 0), ("in", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighFilterGroupDir.setStatus('mandatory')
snBgp4NeighFilterGroupAccessList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 8, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighFilterGroupAccessList.setStatus('mandatory')
snBgp4NeighFilterGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighFilterGroupRowStatus.setStatus('mandatory')
snBgp4NeighFilterGroupInFilterList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 8, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighFilterGroupInFilterList.setStatus('mandatory')
snBgp4NeighFilterGroupOutFilterList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 8, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighFilterGroupOutFilterList.setStatus('mandatory')
snBgp4NeighFilterGroupInAsPathAccessList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 8, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighFilterGroupInAsPathAccessList.setStatus('mandatory')
snBgp4NeighFilterGroupOutAsPathAccessList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 8, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighFilterGroupOutAsPathAccessList.setStatus('mandatory')
snBgp4NeighFilterGroupWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 8, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighFilterGroupWeight.setStatus('mandatory')
snBgp4NeighFilterGroupWeightAccessList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 8, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighFilterGroupWeightAccessList.setStatus('mandatory')
snBgp4NeighRouteMapTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 9, 1), )
if mibBuilder.loadTexts: snBgp4NeighRouteMapTable.setStatus('mandatory')
snBgp4NeighRouteMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 9, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4NeighRouteMapNeighIp"), (0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4NeighRouteMapDir"))
if mibBuilder.loadTexts: snBgp4NeighRouteMapEntry.setStatus('mandatory')
snBgp4NeighRouteMapNeighIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 9, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighRouteMapNeighIp.setStatus('mandatory')
snBgp4NeighRouteMapDir = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("out", 0), ("in", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighRouteMapDir.setStatus('mandatory')
snBgp4NeighRouteMapMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 9, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighRouteMapMapName.setStatus('mandatory')
snBgp4NeighRouteMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 9, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighRouteMapRowStatus.setStatus('mandatory')
snBgp4NetworkTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 10, 1), )
if mibBuilder.loadTexts: snBgp4NetworkTable.setStatus('mandatory')
snBgp4NetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 10, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4NetworkIp"), (0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4NetworkSubnetMask"))
if mibBuilder.loadTexts: snBgp4NetworkEntry.setStatus('mandatory')
snBgp4NetworkIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 10, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NetworkIp.setStatus('mandatory')
snBgp4NetworkSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 10, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NetworkSubnetMask.setStatus('mandatory')
snBgp4NetworkWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NetworkWeight.setStatus('mandatory')
snBgp4NetworkBackdoor = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NetworkBackdoor.setStatus('mandatory')
snBgp4NetworkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NetworkRowStatus.setStatus('mandatory')
snBgp4RedisTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 11, 1), )
if mibBuilder.loadTexts: snBgp4RedisTable.setStatus('mandatory')
snBgp4RedisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 11, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4RedisProtocol"))
if mibBuilder.loadTexts: snBgp4RedisEntry.setStatus('mandatory')
snBgp4RedisProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("rip", 1), ("ospf", 2), ("static", 3), ("connected", 4), ("isis", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RedisProtocol.setStatus('mandatory')
snBgp4RedisMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 11, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RedisMetric.setStatus('mandatory')
snBgp4RedisRouteMap = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 11, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RedisRouteMap.setStatus('mandatory')
snBgp4RedisWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RedisWeight.setStatus('mandatory')
snBgp4RedisMatchInternal = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 11, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RedisMatchInternal.setStatus('mandatory')
snBgp4RedisMatchExternal1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 11, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RedisMatchExternal1.setStatus('mandatory')
snBgp4RedisMatchExternal2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 11, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RedisMatchExternal2.setStatus('mandatory')
snBgp4RedisRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 11, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RedisRowStatus.setStatus('mandatory')
snBgp4RouteMapFilterTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 12, 1), )
if mibBuilder.loadTexts: snBgp4RouteMapFilterTable.setStatus('mandatory')
snBgp4RouteMapFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 12, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4RouteMapFilterMapName"), (0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4RouteMapFilterSequenceNum"))
if mibBuilder.loadTexts: snBgp4RouteMapFilterEntry.setStatus('mandatory')
snBgp4RouteMapFilterMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 12, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RouteMapFilterMapName.setStatus('mandatory')
snBgp4RouteMapFilterSequenceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 12, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RouteMapFilterSequenceNum.setStatus('mandatory')
snBgp4RouteMapFilterAction = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("deny", 0), ("permit", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapFilterAction.setStatus('mandatory')
snBgp4RouteMapFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapFilterRowStatus.setStatus('mandatory')
snBgp4RouteMapMatchTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13, 1), )
if mibBuilder.loadTexts: snBgp4RouteMapMatchTable.setStatus('mandatory')
snBgp4RouteMapMatchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4RouteMapMatchMapName"), (0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4RouteMapMatchSequenceNum"))
if mibBuilder.loadTexts: snBgp4RouteMapMatchEntry.setStatus('mandatory')
snBgp4RouteMapMatchMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RouteMapMatchMapName.setStatus('mandatory')
snBgp4RouteMapMatchSequenceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RouteMapMatchSequenceNum.setStatus('mandatory')
snBgp4RouteMapMatchAsPathFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapMatchAsPathFilter.setStatus('mandatory')
snBgp4RouteMapMatchCommunityFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapMatchCommunityFilter.setStatus('mandatory')
snBgp4RouteMapMatchAddressFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapMatchAddressFilter.setStatus('mandatory')
snBgp4RouteMapMatchMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapMatchMetric.setStatus('mandatory')
snBgp4RouteMapMatchNextHopList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapMatchNextHopList.setStatus('mandatory')
snBgp4RouteMapMatchRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 0), ("external", 1), ("externalType1", 2), ("externalType2", 3), ("internal", 4), ("local", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapMatchRouteType.setStatus('mandatory')
snBgp4RouteMapMatchTagList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapMatchTagList.setStatus('mandatory')
snBgp4RouteMapMatchRowMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapMatchRowMask.setStatus('mandatory')
snBgp4RouteMapMatchAsPathAccessList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapMatchAsPathAccessList.setStatus('mandatory')
snBgp4RouteMapMatchCommunityList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapMatchCommunityList.setStatus('mandatory')
snBgp4RouteMapMatchAddressAccessList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13, 1, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapMatchAddressAccessList.setStatus('mandatory')
snBgp4RouteMapMatchAddressPrefixList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 170))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapMatchAddressPrefixList.setStatus('mandatory')
snBgp4RouteMapMatchNextHopAccessList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapMatchNextHopAccessList.setStatus('mandatory')
snBgp4RouteMapMatchNextHopPrefixList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 13, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 170))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapMatchNextHopPrefixList.setStatus('mandatory')
snBgp4RouteMapSetTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1), )
if mibBuilder.loadTexts: snBgp4RouteMapSetTable.setStatus('mandatory')
snBgp4RouteMapSetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4RouteMapSetMapName"), (0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4RouteMapSetSequenceNum"))
if mibBuilder.loadTexts: snBgp4RouteMapSetEntry.setStatus('mandatory')
snBgp4RouteMapSetMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RouteMapSetMapName.setStatus('mandatory')
snBgp4RouteMapSetSequenceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RouteMapSetSequenceNum.setStatus('mandatory')
snBgp4RouteMapSetAsPathType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("tag", 0), ("prepend", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapSetAsPathType.setStatus('mandatory')
snBgp4RouteMapSetAsPathString = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapSetAsPathString.setStatus('mandatory')
snBgp4RouteMapSetAutoTag = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapSetAutoTag.setStatus('mandatory')
snBgp4RouteMapSetCommunityType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 3))).clone(namedValues=NamedValues(("nums", 0), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapSetCommunityType.setStatus('mandatory')
snBgp4RouteMapSetCommunityNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapSetCommunityNum.setStatus('deprecated')
snBgp4RouteMapSetCommunityAdditive = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapSetCommunityAdditive.setStatus('mandatory')
snBgp4RouteMapSetLocalPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapSetLocalPreference.setStatus('mandatory')
snBgp4RouteMapSetMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapSetMetric.setStatus('mandatory')
snBgp4RouteMapSetNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapSetNextHop.setStatus('mandatory')
snBgp4RouteMapSetOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("igp", 0), ("egp", 1), ("incomplete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapSetOrigin.setStatus('mandatory')
snBgp4RouteMapSetTag = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapSetTag.setStatus('mandatory')
snBgp4RouteMapSetWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapSetWeight.setStatus('mandatory')
snBgp4RouteMapSetRowMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapSetRowMask.setStatus('mandatory')
snBgp4RouteMapSetCommunityNums = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 16), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapSetCommunityNums.setStatus('mandatory')
snBgp4RouteMapSetDampenHalfLife = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 45))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapSetDampenHalfLife.setStatus('mandatory')
snBgp4RouteMapSetDampenReuse = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapSetDampenReuse.setStatus('mandatory')
snBgp4RouteMapSetDampenSuppress = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapSetDampenSuppress.setStatus('mandatory')
snBgp4RouteMapSetDampenMaxSuppress = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 14, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4RouteMapSetDampenMaxSuppress.setStatus('mandatory')
snBgp4NeighOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15, 1), )
if mibBuilder.loadTexts: snBgp4NeighOperStatusTable.setStatus('mandatory')
snBgp4NeighOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4NeighOperStatusIndex"))
if mibBuilder.loadTexts: snBgp4NeighOperStatusEntry.setStatus('mandatory')
snBgp4NeighOperStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighOperStatusIndex.setStatus('mandatory')
snBgp4NeighOperStatusIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighOperStatusIp.setStatus('mandatory')
snBgp4NeighOperStatusRemoteAs = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighOperStatusRemoteAs.setStatus('mandatory')
snBgp4NeighOperStatusBgpType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("ebgp", 0), ("ibgp", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighOperStatusBgpType.setStatus('mandatory')
snBgp4NeighOperStatusState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noState", 0), ("idle", 1), ("connect", 2), ("active", 3), ("openSent", 4), ("openConfirm", 5), ("established", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighOperStatusState.setStatus('mandatory')
snBgp4NeighOperStatusKeepAliveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighOperStatusKeepAliveTime.setStatus('mandatory')
snBgp4NeighOperStatusHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighOperStatusHoldTime.setStatus('mandatory')
snBgp4NeighOperStatusAdvertlevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighOperStatusAdvertlevel.setStatus('mandatory')
snBgp4NeighOperStatusKeepAliveTxCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighOperStatusKeepAliveTxCounts.setStatus('mandatory')
snBgp4NeighOperStatusKeepAliveRxCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighOperStatusKeepAliveRxCounts.setStatus('mandatory')
snBgp4NeighOperStatusUpdateTxCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighOperStatusUpdateTxCounts.setStatus('mandatory')
snBgp4NeighOperStatusUpdateRxCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighOperStatusUpdateRxCounts.setStatus('mandatory')
snBgp4NeighOperStatusNotifTxCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighOperStatusNotifTxCounts.setStatus('mandatory')
snBgp4NeighOperStatusNotifRxCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighOperStatusNotifRxCounts.setStatus('mandatory')
snBgp4NeighOperStatusOpenTxCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighOperStatusOpenTxCounts.setStatus('mandatory')
snBgp4NeighOperStatusOpenRxCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 15, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighOperStatusOpenRxCounts.setStatus('mandatory')
snBgp4RouteOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 16, 1), )
if mibBuilder.loadTexts: snBgp4RouteOperStatusTable.setStatus('mandatory')
snBgp4RouteOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 16, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4RouteOperStatusIndex"))
if mibBuilder.loadTexts: snBgp4RouteOperStatusEntry.setStatus('mandatory')
snBgp4RouteOperStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 16, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RouteOperStatusIndex.setStatus('mandatory')
snBgp4RouteOperStatusIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 16, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RouteOperStatusIp.setStatus('mandatory')
snBgp4RouteOperStatusSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 16, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RouteOperStatusSubnetMask.setStatus('mandatory')
snBgp4RouteOperStatusNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 16, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RouteOperStatusNextHop.setStatus('mandatory')
snBgp4RouteOperStatusMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 16, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RouteOperStatusMetric.setStatus('mandatory')
snBgp4RouteOperStatusLocalPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 16, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RouteOperStatusLocalPreference.setStatus('mandatory')
snBgp4RouteOperStatusWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 16, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RouteOperStatusWeight.setStatus('mandatory')
snBgp4RouteOperStatusOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 16, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("igp", 0), ("egp", 1), ("incomplete", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RouteOperStatusOrigin.setStatus('mandatory')
snBgp4RouteOperStatusStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 16, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RouteOperStatusStatus.setStatus('mandatory')
snBgp4RouteOperStatusRouteTag = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 16, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RouteOperStatusRouteTag.setStatus('mandatory')
snBgp4RouteOperStatusCommunityList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 16, 1, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RouteOperStatusCommunityList.setStatus('mandatory')
snBgp4RouteOperStatusAsPathList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 16, 1, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4RouteOperStatusAsPathList.setStatus('mandatory')
snBgp4NeighborSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 17, 1), )
if mibBuilder.loadTexts: snBgp4NeighborSummaryTable.setStatus('mandatory')
snBgp4NeighborSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 17, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4NeighborSummaryIndex"))
if mibBuilder.loadTexts: snBgp4NeighborSummaryEntry.setStatus('mandatory')
snBgp4NeighborSummaryIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 17, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighborSummaryIndex.setStatus('mandatory')
snBgp4NeighborSummaryIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 17, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighborSummaryIp.setStatus('mandatory')
snBgp4NeighborSummaryState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 17, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noState", 0), ("idle", 1), ("connect", 2), ("active", 3), ("openSent", 4), ("openConfirm", 5), ("established", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighborSummaryState.setStatus('mandatory')
snBgp4NeighborSummaryStateChgTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 17, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighborSummaryStateChgTime.setStatus('mandatory')
snBgp4NeighborSummaryRouteReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 17, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighborSummaryRouteReceived.setStatus('mandatory')
snBgp4NeighborSummaryRouteInstalled = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 17, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighborSummaryRouteInstalled.setStatus('mandatory')
snBgp4AttributeTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 18, 1), )
if mibBuilder.loadTexts: snBgp4AttributeTable.setStatus('mandatory')
snBgp4AttributeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 18, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4AttributeIndex"))
if mibBuilder.loadTexts: snBgp4AttributeEntry.setStatus('mandatory')
snBgp4AttributeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 18, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4AttributeIndex.setStatus('mandatory')
snBgp4AttributeNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 18, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4AttributeNextHop.setStatus('mandatory')
snBgp4AttributeMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 18, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4AttributeMetric.setStatus('mandatory')
snBgp4AttributeOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 18, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("igp", 0), ("egp", 1), ("incomplete", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4AttributeOrigin.setStatus('mandatory')
snBgp4AttributeAggregatorAs = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 18, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4AttributeAggregatorAs.setStatus('mandatory')
snBgp4AttributeRouterId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 18, 1, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4AttributeRouterId.setStatus('mandatory')
snBgp4AttributeAtomicAggregatePresent = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 18, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4AttributeAtomicAggregatePresent.setStatus('mandatory')
snBgp4AttributeLocalPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 18, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4AttributeLocalPreference.setStatus('mandatory')
snBgp4AttributeCommunityList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 18, 1, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4AttributeCommunityList.setStatus('mandatory')
snBgp4AttributeAsPathList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 18, 1, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4AttributeAsPathList.setStatus('mandatory')
snBgp4AttributeOriginator = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 18, 1, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4AttributeOriginator.setStatus('mandatory')
snBgp4AttributeClusterList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 18, 1, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4AttributeClusterList.setStatus('mandatory')
snBgp4ClearNeighborCmdTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 19, 1), )
if mibBuilder.loadTexts: snBgp4ClearNeighborCmdTable.setStatus('mandatory')
snBgp4ClearNeighborCmdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 19, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4ClearNeighborCmdIp"))
if mibBuilder.loadTexts: snBgp4ClearNeighborCmdEntry.setStatus('mandatory')
snBgp4ClearNeighborCmdIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 19, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4ClearNeighborCmdIp.setStatus('mandatory')
snBgp4ClearNeighborCmdElement = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 19, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("valid", 0), ("lastPacketWithError", 1), ("notificationErrors", 2), ("softOutbound", 3), ("traffic", 4), ("neighbor", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4ClearNeighborCmdElement.setStatus('mandatory')
snBgp4NeighPrefixGroupTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 20, 1), )
if mibBuilder.loadTexts: snBgp4NeighPrefixGroupTable.setStatus('mandatory')
snBgp4NeighPrefixGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 20, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4NeighPrefixGroupNeighIp"), (0, "FOUNDRY-SN-BGP4-GROUP-MIB", "snBgp4NeighPrefixGroupDir"))
if mibBuilder.loadTexts: snBgp4NeighPrefixGroupEntry.setStatus('mandatory')
snBgp4NeighPrefixGroupNeighIp = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 20, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighPrefixGroupNeighIp.setStatus('mandatory')
snBgp4NeighPrefixGroupDir = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 20, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("out", 0), ("in", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snBgp4NeighPrefixGroupDir.setStatus('mandatory')
snBgp4NeighPrefixGroupInAccessList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 20, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighPrefixGroupInAccessList.setStatus('mandatory')
snBgp4NeighPrefixGroupOutAccessList = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 20, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighPrefixGroupOutAccessList.setStatus('mandatory')
snBgp4NeighPrefixGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 11, 20, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snBgp4NeighPrefixGroupRowStatus.setStatus('mandatory')
mibBuilder.exportSymbols("FOUNDRY-SN-BGP4-GROUP-MIB", snBgp4NeighPrefixGroupDir=snBgp4NeighPrefixGroupDir, snBgp4NeighPrefixGroup=snBgp4NeighPrefixGroup, snBgp4GenRouterId=snBgp4GenRouterId, snBgp4CommunityFilterNoAdvertise=snBgp4CommunityFilterNoAdvertise, snBgp4GenMaxAggregateAddresses=snBgp4GenMaxAggregateAddresses, snBgp4RouteMapMatchSequenceNum=snBgp4RouteMapMatchSequenceNum, snBgp4RouteMapMatchAddressFilter=snBgp4RouteMapMatchAddressFilter, snBgp4AggregateAddrEntry=snBgp4AggregateAddrEntry, snBgp4RouteMapSetOrigin=snBgp4RouteMapSetOrigin, snBgp4RouteOperStatusIndex=snBgp4RouteOperStatusIndex, snBgp4RouteMapSetSequenceNum=snBgp4RouteMapSetSequenceNum, snBgp4Redis=snBgp4Redis, snBgp4AsPathFilterEntry=snBgp4AsPathFilterEntry, snBgp4NeighOperStatusNotifTxCounts=snBgp4NeighOperStatusNotifTxCounts, snBgp4RouteOperStatusOrigin=snBgp4RouteOperStatusOrigin, snBgp4RedisRowStatus=snBgp4RedisRowStatus, snBgp4AsPathFilterAction=snBgp4AsPathFilterAction, snBgp4NeighGenCfgDefOriginate=snBgp4NeighGenCfgDefOriginate, snBgp4NeighFilterGroupDir=snBgp4NeighFilterGroupDir, snBgp4NeighRouteMapMapName=snBgp4NeighRouteMapMapName, snBgp4GenDefaultLocalPreference=snBgp4GenDefaultLocalPreference, snBgp4GenAsPathInstalled=snBgp4GenAsPathInstalled, snBgp4AttributeLocalPreference=snBgp4AttributeLocalPreference, snBgp4NeighDistGroupTable=snBgp4NeighDistGroupTable, snBgp4Attribute=snBgp4Attribute, snBgp4CommunityFilterLocalAs=snBgp4CommunityFilterLocalAs, snBgp4NeighFilterGroupInAsPathAccessList=snBgp4NeighFilterGroupInAsPathAccessList, snBgp4NeighGenCfgHoldTime=snBgp4NeighGenCfgHoldTime, snBgp4RouteMapFilterAction=snBgp4RouteMapFilterAction, snBgp4NeighOperStatusKeepAliveTxCounts=snBgp4NeighOperStatusKeepAliveTxCounts, snBgp4RouteOperStatusTable=snBgp4RouteOperStatusTable, snBgp4GenMaxAsPathFilters=snBgp4GenMaxAsPathFilters, snBgp4GenMaxPaths=snBgp4GenMaxPaths, snBgp4AttributeOriginator=snBgp4AttributeOriginator, snBgp4RouteMapSetRowMask=snBgp4RouteMapSetRowMask, snBgp4CommunityFilterEntry=snBgp4CommunityFilterEntry, snBgp4RouteMapSetDampenHalfLife=snBgp4RouteMapSetDampenHalfLife, snBgp4RouteMapSetMapName=snBgp4RouteMapSetMapName, snBgp4NeighPrefixGroupEntry=snBgp4NeighPrefixGroupEntry, snBgp4NeighGenCfg=snBgp4NeighGenCfg, snBgp4AggregateAddr=snBgp4AggregateAddr, snBgp4GenFastExternalFallover=snBgp4GenFastExternalFallover, snBgp4NeighDistGroupRowStatus=snBgp4NeighDistGroupRowStatus, snBgp4GenDampenMaxSuppress=snBgp4GenDampenMaxSuppress, snBgp4RouteMapMatchNextHopPrefixList=snBgp4RouteMapMatchNextHopPrefixList, snBgp4GenAutoSummary=snBgp4GenAutoSummary, snBgp4NeighFilterGroupWeightAccessList=snBgp4NeighFilterGroupWeightAccessList, snBgp4NeighGenCfgDefOrigMap=snBgp4NeighGenCfgDefOrigMap, snBgp4AddrFilterDestIp=snBgp4AddrFilterDestIp, snBgp4NeighOperStatusTable=snBgp4NeighOperStatusTable, snBgp4NeighPrefixGroupRowStatus=snBgp4NeighPrefixGroupRowStatus, snBgp4NeighDistGroup=snBgp4NeighDistGroup, snBgp4RouteMapSet=snBgp4RouteMapSet, snBgp4GenMaxCommunityFilters=snBgp4GenMaxCommunityFilters, snBgp4NeighGenCfgWeightFilterList=snBgp4NeighGenCfgWeightFilterList, snBgp4RedisMatchInternal=snBgp4RedisMatchInternal, snBgp4NeighFilterGroup=snBgp4NeighFilterGroup, snBgp4NeighDistGroupDir=snBgp4NeighDistGroupDir, snBgp4Gen=snBgp4Gen, snBgp4CommunityFilterNoExport=snBgp4CommunityFilterNoExport, snBgp4RouteOperStatusRouteTag=snBgp4RouteOperStatusRouteTag, snBgp4AttributeAtomicAggregatePresent=snBgp4AttributeAtomicAggregatePresent, snBgp4AsPathFilterTable=snBgp4AsPathFilterTable, snBgp4NeighGenCfgTable=snBgp4NeighGenCfgTable, snBgp4NeighDistGroupAccessList=snBgp4NeighDistGroupAccessList, snBgp4GenOperRoutes=snBgp4GenOperRoutes, snBgp4NetworkEntry=snBgp4NetworkEntry, snBgp4NeighRouteMapNeighIp=snBgp4NeighRouteMapNeighIp, snBgp4RouteMapFilterEntry=snBgp4RouteMapFilterEntry, snBgp4CommunityFilterRowStatus=snBgp4CommunityFilterRowStatus, snBgp4NeighGenCfgRemoteAs=snBgp4NeighGenCfgRemoteAs, snBgp4RouteMapSetCommunityAdditive=snBgp4RouteMapSetCommunityAdditive, snBgp4RouteMapMatchMetric=snBgp4RouteMapMatchMetric, snBgp4OperNumOfAttributes=snBgp4OperNumOfAttributes, snBgp4NeighGenCfgDesc=snBgp4NeighGenCfgDesc, snBgp4NeighRouteMap=snBgp4NeighRouteMap, snBgp4CommunityFilterCommNum=snBgp4CommunityFilterCommNum, snBgp4AttributeClusterList=snBgp4AttributeClusterList, snBgp4GenTableMap=snBgp4GenTableMap, snBgp4AttributeNextHop=snBgp4AttributeNextHop, snBgp4ClearNeighborCmdTable=snBgp4ClearNeighborCmdTable, snBgp4GenMaxRouteMapFilters=snBgp4GenMaxRouteMapFilters, snBgp4RedisEntry=snBgp4RedisEntry, snBgp4GenDampenReuse=snBgp4GenDampenReuse, snBgp4RouteMapSetTable=snBgp4RouteMapSetTable, snBgp4AttributeAsPathList=snBgp4AttributeAsPathList, snBgp4AggregateAddrTable=snBgp4AggregateAddrTable, snBgp4NeighDistGroupOutFilterList=snBgp4NeighDistGroupOutFilterList, snBgp4RouteMapFilterRowStatus=snBgp4RouteMapFilterRowStatus, snBgp4GenLocalAs=snBgp4GenLocalAs, snBgp4NeighGenCfgUpdateSrcLpbIntf=snBgp4NeighGenCfgUpdateSrcLpbIntf, snBgp4NetworkIp=snBgp4NetworkIp, snBgp4NeighGenCfgSendComm=snBgp4NeighGenCfgSendComm, snBgp4RouteMapSetAutoTag=snBgp4RouteMapSetAutoTag, snBgp4GenHoldTime=snBgp4GenHoldTime, snBgp4ClearNeighborCmdIp=snBgp4ClearNeighborCmdIp, snBgp4RouteMapSetDampenMaxSuppress=snBgp4RouteMapSetDampenMaxSuppress, snBgp4RouteOperStatusWeight=snBgp4RouteOperStatusWeight, snBgp4ClientToClientReflection=snBgp4ClientToClientReflection, snBgp4NeighGenCfgWeight=snBgp4NeighGenCfgWeight, snBgp4RouteOperStatusNextHop=snBgp4RouteOperStatusNextHop, snBgp4RouteMapSetEntry=snBgp4RouteMapSetEntry, snBgp4RouteMapMatchAsPathAccessList=snBgp4RouteMapMatchAsPathAccessList, snBgp4RouteMapMatchAddressPrefixList=snBgp4RouteMapMatchAddressPrefixList, snBgp4NeighOperStatusAdvertlevel=snBgp4NeighOperStatusAdvertlevel, snBgp4GenDampenSuppress=snBgp4GenDampenSuppress, snBgp4AttributeEntry=snBgp4AttributeEntry, snBgp4AggregateAddrRowStatus=snBgp4AggregateAddrRowStatus, snBgp4AsPathFilter=snBgp4AsPathFilter, snBgp4RouteMapSetCommunityNums=snBgp4RouteMapSetCommunityNums, snBgp4GenNextBootRoutes=snBgp4GenNextBootRoutes, snBgp4AggregateAddrMap=snBgp4AggregateAddrMap, snBgp4CommunityFilterIndex=snBgp4CommunityFilterIndex, snBgp4ClearNeighborCmdElement=snBgp4ClearNeighborCmdElement, snBgp4InternalDistance=snBgp4InternalDistance, snBgp4GenOperNeighbors=snBgp4GenOperNeighbors, snBgp4RouteOperStatusStatus=snBgp4RouteOperStatusStatus, snBgp4NeighborSummaryRouteReceived=snBgp4NeighborSummaryRouteReceived, snBgp4AttributeTable=snBgp4AttributeTable, snBgp4AddrFilterAction=snBgp4AddrFilterAction, snBgp4NetworkWeight=snBgp4NetworkWeight, snBgp4NeighGenCfgAdvertlevel=snBgp4NeighGenCfgAdvertlevel, snBgp4RouteMapFilterTable=snBgp4RouteMapFilterTable, snBgp4GenDampening=snBgp4GenDampening, snBgp4NeighGenCfgEbgpMultihop=snBgp4NeighGenCfgEbgpMultihop, snBgp4RouteMapMatchAsPathFilter=snBgp4RouteMapMatchAsPathFilter, snBgp4AddrFilterSourceIp=snBgp4AddrFilterSourceIp, snBgp4GenMaxAddrFilters=snBgp4GenMaxAddrFilters, snBgp4GenDampenMap=snBgp4GenDampenMap, snBgp4ClearNeighborCmd=snBgp4ClearNeighborCmd, snBgp4LocalDistance=snBgp4LocalDistance, snBgp4RouteMapMatchAddressAccessList=snBgp4RouteMapMatchAddressAccessList, snBgp4RouteOperStatusMetric=snBgp4RouteOperStatusMetric, snBgp4GenDampenHalfLife=snBgp4GenDampenHalfLife, snBgp4NeighDistGroupNeighIp=snBgp4NeighDistGroupNeighIp, snBgp4NeighFilterGroupTable=snBgp4NeighFilterGroupTable, snBgp4RouteMapMatchNextHopList=snBgp4RouteMapMatchNextHopList, snBgp4NeighGenCfgNeighIp=snBgp4NeighGenCfgNeighIp, snBgp4AggregateAddrIp=snBgp4AggregateAddrIp, snBgp4AsPathFilterRowStatus=snBgp4AsPathFilterRowStatus, snBgp4AddrFilterEntry=snBgp4AddrFilterEntry, snBgp4NeighOperStatusKeepAliveRxCounts=snBgp4NeighOperStatusKeepAliveRxCounts, snBgp4NeighFilterGroupAccessList=snBgp4NeighFilterGroupAccessList, snBgp4RouteOperStatusSubnetMask=snBgp4RouteOperStatusSubnetMask, snBgp4GenConfedPeers=snBgp4GenConfedPeers, snBgp4RouteMapMatchRouteType=snBgp4RouteMapMatchRouteType, snBgp4AggregateAddrMask=snBgp4AggregateAddrMask, snBgp4NeighOperStatusKeepAliveTime=snBgp4NeighOperStatusKeepAliveTime, snBgp4NeighPrefixGroupInAccessList=snBgp4NeighPrefixGroupInAccessList, snBgp4RouteMapMatchNextHopAccessList=snBgp4RouteMapMatchNextHopAccessList, snBgp4NeighOperStatusOpenTxCounts=snBgp4NeighOperStatusOpenTxCounts, snBgp4AsPathFilterIndex=snBgp4AsPathFilterIndex, snBgp4NeighPrefixGroupNeighIp=snBgp4NeighPrefixGroupNeighIp, snBgp4AttributeCommunityList=snBgp4AttributeCommunityList, snBgp4RedisRouteMap=snBgp4RedisRouteMap, snBgp4NeighborSummary=snBgp4NeighborSummary, snBgp4RouteMapMatchCommunityFilter=snBgp4RouteMapMatchCommunityFilter, snBgp4RouteMapMatchTagList=snBgp4RouteMapMatchTagList, snBgp4NetworkTable=snBgp4NetworkTable, snBgp4NeighFilterGroupWeight=snBgp4NeighFilterGroupWeight, snBgp4NeighOperStatusUpdateTxCounts=snBgp4NeighOperStatusUpdateTxCounts, snBgp4RedisMatchExternal2=snBgp4RedisMatchExternal2, snBgp4GenRoutesInstalled=snBgp4GenRoutesInstalled, snBgp4GenMinNeighbors=snBgp4GenMinNeighbors, snBgp4RedisWeight=snBgp4RedisWeight, snBgp4NeighPrefixGroupOutAccessList=snBgp4NeighPrefixGroupOutAccessList, snBgp4RouteMapMatchTable=snBgp4RouteMapMatchTable, snBgp4NeighborSummaryState=snBgp4NeighborSummaryState, snBgp4NeighOperStatusIp=snBgp4NeighOperStatusIp, snBgp4GenNextBootNeighbors=snBgp4GenNextBootNeighbors, snBgp4NeighFilterGroupRowStatus=snBgp4NeighFilterGroupRowStatus, snBgp4NeighFilterGroupOutAsPathAccessList=snBgp4NeighFilterGroupOutAsPathAccessList, snBgp4NetworkSubnetMask=snBgp4NetworkSubnetMask, snBgp4NetworkRowStatus=snBgp4NetworkRowStatus, snBgp4NeighborSummaryTable=snBgp4NeighborSummaryTable, snBgp4RouteMapSetMetric=snBgp4RouteMapSetMetric, snBgp4GenDefaultInfoOriginate=snBgp4GenDefaultInfoOriginate, snBgp4GenMaxNeighbors=snBgp4GenMaxNeighbors, snBgp4NeighborSummaryEntry=snBgp4NeighborSummaryEntry, snBgp4NeighGenCfgNextHopSelf=snBgp4NeighGenCfgNextHopSelf, snBgp4NeighGenCfgEbgpMultihopTtl=snBgp4NeighGenCfgEbgpMultihopTtl, snBgp4CommunityFilterAction=snBgp4CommunityFilterAction, snBgp4GenAlwaysCompareMed=snBgp4GenAlwaysCompareMed, snBgp4AsPathFilterRegExpression=snBgp4AsPathFilterRegExpression, snBgp4AddrFilterDestMask=snBgp4AddrFilterDestMask, snBgp4AddrFilter=snBgp4AddrFilter, snBgp4NeighDistGroupOutIpAccessList=snBgp4NeighDistGroupOutIpAccessList, snBgp4RouteOperStatusIp=snBgp4RouteOperStatusIp, snBgp4NeighborSummaryIp=snBgp4NeighborSummaryIp, snBgp4AttributeOrigin=snBgp4AttributeOrigin, snBgp4GenNeighPrefixMinValue=snBgp4GenNeighPrefixMinValue, snBgp4GenMaxNetworks=snBgp4GenMaxNetworks, snBgp4NeighRouteMapDir=snBgp4NeighRouteMapDir, snBgp4NeighOperStatusUpdateRxCounts=snBgp4NeighOperStatusUpdateRxCounts, snBgp4RouteOperStatus=snBgp4RouteOperStatus, snBgp4NeighFilterGroupNeighIp=snBgp4NeighFilterGroupNeighIp, snBgp4NeighGenCfgKeepAliveTime=snBgp4NeighGenCfgKeepAliveTime, snBgp4NeighOperStatusIndex=snBgp4NeighOperStatusIndex, snBgp4GenDefaultMetric=snBgp4GenDefaultMetric, snBgp4AggregateAddrOption=snBgp4AggregateAddrOption, snBgp4NeighDistGroupInFilterList=snBgp4NeighDistGroupInFilterList, snBgp4GenTotalNeighbors=snBgp4GenTotalNeighbors, snBgp4NeighDistGroupOutPrefixList=snBgp4NeighDistGroupOutPrefixList, snBgp4NeighRouteMapTable=snBgp4NeighRouteMapTable, snBgp4NeighOperStatus=snBgp4NeighOperStatus, snBgp4NeighDistGroupEntry=snBgp4NeighDistGroupEntry, snBgp4NeighGenCfgMaxPrefix=snBgp4NeighGenCfgMaxPrefix, snBgp4NeighOperStatusState=snBgp4NeighOperStatusState, snBgp4RouteMapMatchEntry=snBgp4RouteMapMatchEntry, snBgp4RouteMapMatch=snBgp4RouteMapMatch, snBgp4NeighOperStatusRemoteAs=snBgp4NeighOperStatusRemoteAs, snBgp4CommunityFilterInternet=snBgp4CommunityFilterInternet, snBgp4NeighGenCfgRemovePrivateAs=snBgp4NeighGenCfgRemovePrivateAs, snBgp4RouteMapSetAsPathString=snBgp4RouteMapSetAsPathString, snBgp4GenMaxRoutes=snBgp4GenMaxRoutes, snBgp4NeighFilterGroupOutFilterList=snBgp4NeighFilterGroupOutFilterList, snBgp4RouteMapSetCommunityType=snBgp4RouteMapSetCommunityType, snBgp4RedisMetric=snBgp4RedisMetric, snBgp4RouteMapSetDampenReuse=snBgp4RouteMapSetDampenReuse, snBgp4NeighOperStatusEntry=snBgp4NeighOperStatusEntry, snBgp4RouteOperStatusCommunityList=snBgp4RouteOperStatusCommunityList, snBgp4AttributeIndex=snBgp4AttributeIndex, snBgp4NeighborSummaryIndex=snBgp4NeighborSummaryIndex, snBgp4RouteMapMatchMapName=snBgp4RouteMapMatchMapName, snBgp4GenSynchronization=snBgp4GenSynchronization, snBgp4GenKeepAliveTime=snBgp4GenKeepAliveTime, snBgp4AddrFilterRowStatus=snBgp4AddrFilterRowStatus, snBgp4Network=snBgp4Network, snBgp4AddrFilterTable=snBgp4AddrFilterTable, snBgp4NeighGenCfgPass=snBgp4NeighGenCfgPass, snBgp4NeighborSummaryRouteInstalled=snBgp4NeighborSummaryRouteInstalled, snBgp4GenAdminStat=snBgp4GenAdminStat, snBgp4RouteMapSetDampenSuppress=snBgp4RouteMapSetDampenSuppress, snBgp4RouteOperStatusEntry=snBgp4RouteOperStatusEntry, snBgp4NeighFilterGroupEntry=snBgp4NeighFilterGroupEntry, snBgp4RedisProtocol=snBgp4RedisProtocol, snBgp4RouteMapFilterMapName=snBgp4RouteMapFilterMapName, snBgp4RouteMapSetAsPathType=snBgp4RouteMapSetAsPathType, snBgp4NeighRouteMapRowStatus=snBgp4NeighRouteMapRowStatus, snBgp4RouteMapMatchRowMask=snBgp4RouteMapMatchRowMask, snBgp4RouteMapSetTag=snBgp4RouteMapSetTag, snBgp4RouteOperStatusLocalPreference=snBgp4RouteOperStatusLocalPreference, snBgp4ExternalDistance=snBgp4ExternalDistance, snBgp4NeighborSummaryStateChgTime=snBgp4NeighborSummaryStateChgTime, snBgp4GenMinRoutes=snBgp4GenMinRoutes, snBgp4RouteMapSetNextHop=snBgp4RouteMapSetNextHop, snBgp4AttributeMetric=snBgp4AttributeMetric, snBgp4RouteMapSetLocalPreference=snBgp4RouteMapSetLocalPreference, snBgp4NeighDistGroupInIpAccessList=snBgp4NeighDistGroupInIpAccessList, snBgp4AttributeRouterId=snBgp4AttributeRouterId, snBgp4NeighRouteMapEntry=snBgp4NeighRouteMapEntry, snBgp4CommunityFilterTable=snBgp4CommunityFilterTable, snBgp4NeighGenCfgEntry=snBgp4NeighGenCfgEntry, snBgp4NeighOperStatusHoldTime=snBgp4NeighOperStatusHoldTime)
mibBuilder.exportSymbols("FOUNDRY-SN-BGP4-GROUP-MIB", snBgp4RouteOperStatusAsPathList=snBgp4RouteOperStatusAsPathList, snBgp4AddrFilterSourceMask=snBgp4AddrFilterSourceMask, snBgp4NeighGenCfgRowStatus=snBgp4NeighGenCfgRowStatus, snBgp4ClusterId=snBgp4ClusterId, snBgp4ClearNeighborCmdEntry=snBgp4ClearNeighborCmdEntry, snBgp4RedisMatchExternal1=snBgp4RedisMatchExternal1, snBgp4RouteMapFilter=snBgp4RouteMapFilter, snBgp4NextBootMaxAttributes=snBgp4NextBootMaxAttributes, snBgp4NetworkBackdoor=snBgp4NetworkBackdoor, snBgp4RedisTable=snBgp4RedisTable, snBgp4NeighGenCfgRouteRefClient=snBgp4NeighGenCfgRouteRefClient, snBgp4NeighGenCfgShutdown=snBgp4NeighGenCfgShutdown, snBgp4NeighDistGroupInPrefixList=snBgp4NeighDistGroupInPrefixList, snBgp4NeighFilterGroupInFilterList=snBgp4NeighFilterGroupInFilterList, snBgp4RouteMapFilterSequenceNum=snBgp4RouteMapFilterSequenceNum, snBgp4RouteMapMatchCommunityList=snBgp4RouteMapMatchCommunityList, snBgp4NeighPrefixGroupTable=snBgp4NeighPrefixGroupTable, snBgp4AddrFilterIndex=snBgp4AddrFilterIndex, snBgp4CommunityFilter=snBgp4CommunityFilter, snBgp4NeighOperStatusNotifRxCounts=snBgp4NeighOperStatusNotifRxCounts, snBgp4AttributeAggregatorAs=snBgp4AttributeAggregatorAs, snBgp4GenConfedId=snBgp4GenConfedId, snBgp4RouteMapSetCommunityNum=snBgp4RouteMapSetCommunityNum, snBgp4RouteMapSetWeight=snBgp4RouteMapSetWeight, snBgp4NeighOperStatusBgpType=snBgp4NeighOperStatusBgpType, snBgp4NeighOperStatusOpenRxCounts=snBgp4NeighOperStatusOpenRxCounts)
