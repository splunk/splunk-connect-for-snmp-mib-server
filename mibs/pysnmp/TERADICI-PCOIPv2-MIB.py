#
# PySNMP MIB module TERADICI-PCOIPv2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TERADICI-PCOIPv2-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:08:23 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, MibIdentifier, Counter64, Integer32, IpAddress, ObjectIdentity, Bits, TimeTicks, Gauge32, Unsigned32, enterprises, ModuleIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "MibIdentifier", "Counter64", "Integer32", "IpAddress", "ObjectIdentity", "Bits", "TimeTicks", "Gauge32", "Unsigned32", "enterprises", "ModuleIdentity", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
teraMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 25071))
teraMibModule.setRevisions(('2012-01-28 10:00',))
if mibBuilder.loadTexts: teraMibModule.setLastUpdated('201201281000Z')
if mibBuilder.loadTexts: teraMibModule.setOrganization('Teradici Corporation')
teraProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 25071, 1))
teraPcoipV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 25071, 1, 2))
teraPcoipGenStats = MibIdentifier((1, 3, 6, 1, 4, 1, 25071, 1, 2, 1))
teraPcoipNetStats = MibIdentifier((1, 3, 6, 1, 4, 1, 25071, 1, 2, 2))
teraPcoipAudioStats = MibIdentifier((1, 3, 6, 1, 4, 1, 25071, 1, 2, 3))
teraPcoipImagingStats = MibIdentifier((1, 3, 6, 1, 4, 1, 25071, 1, 2, 4))
teraPcoipUSBStats = MibIdentifier((1, 3, 6, 1, 4, 1, 25071, 1, 2, 5))
teraPcoipGenDevices = MibIdentifier((1, 3, 6, 1, 4, 1, 25071, 1, 2, 6))
teraPcoipImagingDevices = MibIdentifier((1, 3, 6, 1, 4, 1, 25071, 1, 2, 7))
teraPcoipUSBDevices = MibIdentifier((1, 3, 6, 1, 4, 1, 25071, 1, 2, 8))
pcoipGenStatsTable = MibTable((1, 3, 6, 1, 4, 1, 25071, 1, 2, 1, 1), )
if mibBuilder.loadTexts: pcoipGenStatsTable.setStatus('current')
pcoipGenStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25071, 1, 2, 1, 1, 1), ).setIndexNames((0, "TERADICI-PCOIPv2-MIB", "pcoipGenStatsSessionNumber"))
if mibBuilder.loadTexts: pcoipGenStatsEntry.setStatus('current')
pcoipGenStatsSessionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenStatsSessionNumber.setStatus('current')
pcoipGenStatsPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 1, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenStatsPacketsSent.setStatus('current')
pcoipGenStatsBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 1, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenStatsBytesSent.setStatus('current')
pcoipGenStatsPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 1, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenStatsPacketsReceived.setStatus('current')
pcoipGenStatsBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 1, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenStatsBytesReceived.setStatus('current')
pcoipGenStatsTxPacketsLost = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 1, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenStatsTxPacketsLost.setStatus('current')
pcoipGenStatsSessionDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 1, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenStatsSessionDuration.setStatus('current')
pcoipNetStatsTable = MibTable((1, 3, 6, 1, 4, 1, 25071, 1, 2, 2, 1), )
if mibBuilder.loadTexts: pcoipNetStatsTable.setStatus('current')
pcoipNetStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25071, 1, 2, 2, 1, 1), ).setIndexNames((0, "TERADICI-PCOIPv2-MIB", "pcoipNetStatsSessionNumber"))
if mibBuilder.loadTexts: pcoipNetStatsEntry.setStatus('current')
pcoipNetStatsSessionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipNetStatsSessionNumber.setStatus('current')
pcoipNetStatsRoundTripLatencyMs = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 2, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipNetStatsRoundTripLatencyMs.setStatus('current')
pcoipNetStatsRXBWkbitPersec = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 2, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipNetStatsRXBWkbitPersec.setStatus('current')
pcoipNetStatsRXBWPeakkbitPersec = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipNetStatsRXBWPeakkbitPersec.setStatus('current')
pcoipNetStatsRXPacketLossPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipNetStatsRXPacketLossPercent.setStatus('current')
pcoipNetStatsTXBWkbitPersec = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 2, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipNetStatsTXBWkbitPersec.setStatus('current')
pcoipNetStatsTXBWActiveLimitkbitPersec = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipNetStatsTXBWActiveLimitkbitPersec.setStatus('current')
pcoipNetStatsTXBWLimitkbitPersec = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipNetStatsTXBWLimitkbitPersec.setStatus('current')
pcoipNetStatsTXPacketLossPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipNetStatsTXPacketLossPercent.setStatus('current')
pcoipAudioStatsTable = MibTable((1, 3, 6, 1, 4, 1, 25071, 1, 2, 3, 1), )
if mibBuilder.loadTexts: pcoipAudioStatsTable.setStatus('current')
pcoipAudioStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25071, 1, 2, 3, 1, 1), ).setIndexNames((0, "TERADICI-PCOIPv2-MIB", "pcoipAudioStatsSessionNumber"))
if mibBuilder.loadTexts: pcoipAudioStatsEntry.setStatus('current')
pcoipAudioStatsSessionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipAudioStatsSessionNumber.setStatus('current')
pcoipAudioStatsBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 3, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipAudioStatsBytesReceived.setStatus('current')
pcoipAudioStatsBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 3, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipAudioStatsBytesSent.setStatus('current')
pcoipAudioStatsRXBWkbitPersec = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 3, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipAudioStatsRXBWkbitPersec.setStatus('current')
pcoipAudioStatsTXBWkbitPersec = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 3, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipAudioStatsTXBWkbitPersec.setStatus('current')
pcoipAudioStatsTXBWLimitkbitPersec = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipAudioStatsTXBWLimitkbitPersec.setStatus('current')
pcoipImagingStatsTable = MibTable((1, 3, 6, 1, 4, 1, 25071, 1, 2, 4, 1), )
if mibBuilder.loadTexts: pcoipImagingStatsTable.setStatus('current')
pcoipImagingStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25071, 1, 2, 4, 1, 1), ).setIndexNames((0, "TERADICI-PCOIPv2-MIB", "pcoipImagingStatsSessionNumber"))
if mibBuilder.loadTexts: pcoipImagingStatsEntry.setStatus('current')
pcoipImagingStatsSessionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingStatsSessionNumber.setStatus('current')
pcoipImagingStatsBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 4, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingStatsBytesReceived.setStatus('current')
pcoipImagingStatsBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 4, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingStatsBytesSent.setStatus('current')
pcoipImagingStatsRXBWkbitPersec = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 4, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingStatsRXBWkbitPersec.setStatus('current')
pcoipImagingStatsTXBWkbitPersec = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 4, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingStatsTXBWkbitPersec.setStatus('current')
pcoipImagingStatsEncodedFramesPersec = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2400))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingStatsEncodedFramesPersec.setStatus('current')
pcoipImagingStatsActiveMinimumQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingStatsActiveMinimumQuality.setStatus('current')
pcoipImagingStatsDecoderCapabilitykbitPersec = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingStatsDecoderCapabilitykbitPersec.setStatus('current')
pcoipImagingStatsPipelineProcRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 4, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingStatsPipelineProcRate.setStatus('current')
pcoipUSBStatsTable = MibTable((1, 3, 6, 1, 4, 1, 25071, 1, 2, 5, 1), )
if mibBuilder.loadTexts: pcoipUSBStatsTable.setStatus('current')
pcoipUSBStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25071, 1, 2, 5, 1, 1), ).setIndexNames((0, "TERADICI-PCOIPv2-MIB", "pcoipUSBStatsSessionNumber"))
if mibBuilder.loadTexts: pcoipUSBStatsEntry.setStatus('current')
pcoipUSBStatsSessionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipUSBStatsSessionNumber.setStatus('current')
pcoipUSBStatsBytesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 5, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipUSBStatsBytesReceived.setStatus('current')
pcoipUSBStatsBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 5, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipUSBStatsBytesSent.setStatus('current')
pcoipUSBStatsRXBWkbitPersec = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 5, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipUSBStatsRXBWkbitPersec.setStatus('current')
pcoipUSBStatsTXBWkbitPersec = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 5, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipUSBStatsTXBWkbitPersec.setStatus('current')
pcoipGenDevicesTable = MibTable((1, 3, 6, 1, 4, 1, 25071, 1, 2, 6, 1), )
if mibBuilder.loadTexts: pcoipGenDevicesTable.setStatus('current')
pcoipGenDevicesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25071, 1, 2, 6, 1, 1), ).setIndexNames((0, "TERADICI-PCOIPv2-MIB", "pcoipGenDevicesSessionNumber"))
if mibBuilder.loadTexts: pcoipGenDevicesEntry.setStatus('current')
pcoipGenDevicesSessionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenDevicesSessionNumber.setStatus('current')
pcoipGenDevicesName = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 6, 1, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenDevicesName.setStatus('current')
pcoipGenDevicesDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 6, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenDevicesDescription.setStatus('current')
pcoipGenDevicesGenericTag = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 6, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenDevicesGenericTag.setStatus('current')
pcoipGenDevicesPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 6, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenDevicesPartNumber.setStatus('current')
pcoipGenDevicesFwPartNumber = MibScalar((1, 3, 6, 1, 4, 1, 25071, 1, 2, 6, 1, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenDevicesFwPartNumber.setStatus('current')
pcoipGenDevicesSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 6, 1, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenDevicesSerialNumber.setStatus('current')
pcoipGenDevicesHardwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 6, 1, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenDevicesHardwareVersion.setStatus('current')
pcoipGenDevicesFirmwareVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 6, 1, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenDevicesFirmwareVersion.setStatus('current')
pcoipGenDevicesUniqueID = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 6, 1, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenDevicesUniqueID.setStatus('current')
pcoipGenDevicesMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 6, 1, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenDevicesMAC.setStatus('current')
pcoipGenDevicesUptime = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 6, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipGenDevicesUptime.setStatus('current')
pcoipImagingDevicesTable = MibTable((1, 3, 6, 1, 4, 1, 25071, 1, 2, 7, 1), )
if mibBuilder.loadTexts: pcoipImagingDevicesTable.setStatus('current')
pcoipImagingDevicesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25071, 1, 2, 7, 1, 1), ).setIndexNames((0, "TERADICI-PCOIPv2-MIB", "pcoipImagingDevicesIndex"))
if mibBuilder.loadTexts: pcoipImagingDevicesEntry.setStatus('current')
pcoipImagingDevicesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingDevicesIndex.setStatus('current')
pcoipImagingDevicesSessionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingDevicesSessionNumber.setStatus('current')
pcoipImagingDevicesDisplayWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 7, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingDevicesDisplayWidth.setStatus('current')
pcoipImagingDevicesDisplayHeight = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingDevicesDisplayHeight.setStatus('current')
pcoipImagingDevicesDisplayRefreshRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingDevicesDisplayRefreshRate.setStatus('current')
pcoipImagingDevicesDisplayChangeRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 7, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingDevicesDisplayChangeRate.setStatus('current')
pcoipImagingDevicesDisplayProcessRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 7, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingDevicesDisplayProcessRate.setStatus('current')
pcoipImagingDevicesLimitReason = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 7, 1, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingDevicesLimitReason.setStatus('current')
pcoipImagingDevicesModel = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 7, 1, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingDevicesModel.setStatus('current')
pcoipImagingDevicesStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 7, 1, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingDevicesStatus.setStatus('current')
pcoipImagingDevicesMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 7, 1, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingDevicesMode.setStatus('current')
pcoipImagingDevicesSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 7, 1, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingDevicesSerial.setStatus('current')
pcoipImagingDevicesVID = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 7, 1, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingDevicesVID.setStatus('current')
pcoipImagingDevicesPID = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 7, 1, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingDevicesPID.setStatus('current')
pcoipImagingDevicesDate = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 7, 1, 1, 15), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipImagingDevicesDate.setStatus('current')
pcoipUSBDevicesTable = MibTable((1, 3, 6, 1, 4, 1, 25071, 1, 2, 8, 1), )
if mibBuilder.loadTexts: pcoipUSBDevicesTable.setStatus('current')
pcoipUSBDevicesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25071, 1, 2, 8, 1, 1), ).setIndexNames((0, "TERADICI-PCOIPv2-MIB", "pcoipUSBDevicesIndex"))
if mibBuilder.loadTexts: pcoipUSBDevicesEntry.setStatus('current')
pcoipUSBDevicesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipUSBDevicesIndex.setStatus('current')
pcoipUSBDevicesSessionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipUSBDevicesSessionNumber.setStatus('current')
pcoipUSBDevicesPort = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 8, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipUSBDevicesPort.setStatus('current')
pcoipUSBDevicesModel = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 8, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipUSBDevicesModel.setStatus('current')
pcoipUSBDevicesStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 8, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipUSBDevicesStatus.setStatus('current')
pcoipUSBDevicesDeviceClass = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 8, 1, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipUSBDevicesDeviceClass.setStatus('current')
pcoipUSBDevicesSubClass = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 8, 1, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipUSBDevicesSubClass.setStatus('current')
pcoipUSBDevicesProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 8, 1, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipUSBDevicesProtocol.setStatus('current')
pcoipUSBDevicesSerial = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 8, 1, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipUSBDevicesSerial.setStatus('current')
pcoipUSBDevicesVID = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 8, 1, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipUSBDevicesVID.setStatus('current')
pcoipUSBDevicesPID = MibTableColumn((1, 3, 6, 1, 4, 1, 25071, 1, 2, 8, 1, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pcoipUSBDevicesPID.setStatus('current')
mibBuilder.exportSymbols("TERADICI-PCOIPv2-MIB", pcoipImagingDevicesSessionNumber=pcoipImagingDevicesSessionNumber, pcoipImagingStatsEncodedFramesPersec=pcoipImagingStatsEncodedFramesPersec, pcoipImagingStatsTable=pcoipImagingStatsTable, pcoipImagingDevicesDate=pcoipImagingDevicesDate, pcoipUSBDevicesIndex=pcoipUSBDevicesIndex, pcoipUSBDevicesModel=pcoipUSBDevicesModel, pcoipGenDevicesPartNumber=pcoipGenDevicesPartNumber, pcoipGenDevicesUptime=pcoipGenDevicesUptime, pcoipImagingStatsActiveMinimumQuality=pcoipImagingStatsActiveMinimumQuality, pcoipGenDevicesMAC=pcoipGenDevicesMAC, teraPcoipV2=teraPcoipV2, pcoipGenDevicesSessionNumber=pcoipGenDevicesSessionNumber, teraProducts=teraProducts, pcoipUSBStatsRXBWkbitPersec=pcoipUSBStatsRXBWkbitPersec, pcoipAudioStatsBytesSent=pcoipAudioStatsBytesSent, pcoipNetStatsTable=pcoipNetStatsTable, pcoipImagingStatsPipelineProcRate=pcoipImagingStatsPipelineProcRate, pcoipGenDevicesFirmwareVersion=pcoipGenDevicesFirmwareVersion, pcoipImagingStatsBytesReceived=pcoipImagingStatsBytesReceived, pcoipAudioStatsTXBWLimitkbitPersec=pcoipAudioStatsTXBWLimitkbitPersec, pcoipImagingStatsEntry=pcoipImagingStatsEntry, pcoipGenStatsBytesReceived=pcoipGenStatsBytesReceived, pcoipNetStatsTXPacketLossPercent=pcoipNetStatsTXPacketLossPercent, pcoipNetStatsRXBWPeakkbitPersec=pcoipNetStatsRXBWPeakkbitPersec, pcoipAudioStatsSessionNumber=pcoipAudioStatsSessionNumber, pcoipImagingDevicesEntry=pcoipImagingDevicesEntry, pcoipGenStatsSessionNumber=pcoipGenStatsSessionNumber, pcoipNetStatsRoundTripLatencyMs=pcoipNetStatsRoundTripLatencyMs, pcoipImagingDevicesSerial=pcoipImagingDevicesSerial, pcoipImagingDevicesLimitReason=pcoipImagingDevicesLimitReason, pcoipNetStatsTXBWLimitkbitPersec=pcoipNetStatsTXBWLimitkbitPersec, pcoipUSBStatsEntry=pcoipUSBStatsEntry, pcoipImagingDevicesDisplayRefreshRate=pcoipImagingDevicesDisplayRefreshRate, pcoipImagingDevicesStatus=pcoipImagingDevicesStatus, pcoipImagingDevicesPID=pcoipImagingDevicesPID, pcoipUSBDevicesPID=pcoipUSBDevicesPID, teraPcoipNetStats=teraPcoipNetStats, pcoipUSBDevicesSessionNumber=pcoipUSBDevicesSessionNumber, teraPcoipGenStats=teraPcoipGenStats, pcoipUSBStatsBytesReceived=pcoipUSBStatsBytesReceived, pcoipNetStatsEntry=pcoipNetStatsEntry, pcoipUSBStatsSessionNumber=pcoipUSBStatsSessionNumber, pcoipUSBDevicesDeviceClass=pcoipUSBDevicesDeviceClass, pcoipGenDevicesSerialNumber=pcoipGenDevicesSerialNumber, pcoipUSBStatsBytesSent=pcoipUSBStatsBytesSent, pcoipAudioStatsBytesReceived=pcoipAudioStatsBytesReceived, teraPcoipAudioStats=teraPcoipAudioStats, pcoipImagingStatsBytesSent=pcoipImagingStatsBytesSent, pcoipGenStatsPacketsReceived=pcoipGenStatsPacketsReceived, teraMibModule=teraMibModule, pcoipNetStatsTXBWkbitPersec=pcoipNetStatsTXBWkbitPersec, PYSNMP_MODULE_ID=teraMibModule, pcoipGenDevicesDescription=pcoipGenDevicesDescription, pcoipGenStatsTxPacketsLost=pcoipGenStatsTxPacketsLost, teraPcoipImagingStats=teraPcoipImagingStats, pcoipUSBStatsTable=pcoipUSBStatsTable, pcoipUSBStatsTXBWkbitPersec=pcoipUSBStatsTXBWkbitPersec, pcoipImagingDevicesDisplayProcessRate=pcoipImagingDevicesDisplayProcessRate, pcoipUSBDevicesSubClass=pcoipUSBDevicesSubClass, pcoipImagingDevicesMode=pcoipImagingDevicesMode, pcoipNetStatsRXPacketLossPercent=pcoipNetStatsRXPacketLossPercent, pcoipAudioStatsRXBWkbitPersec=pcoipAudioStatsRXBWkbitPersec, pcoipAudioStatsEntry=pcoipAudioStatsEntry, pcoipGenDevicesFwPartNumber=pcoipGenDevicesFwPartNumber, pcoipNetStatsRXBWkbitPersec=pcoipNetStatsRXBWkbitPersec, pcoipUSBDevicesStatus=pcoipUSBDevicesStatus, pcoipImagingDevicesDisplayChangeRate=pcoipImagingDevicesDisplayChangeRate, pcoipGenDevicesName=pcoipGenDevicesName, pcoipAudioStatsTable=pcoipAudioStatsTable, pcoipGenStatsEntry=pcoipGenStatsEntry, pcoipUSBDevicesTable=pcoipUSBDevicesTable, pcoipGenDevicesGenericTag=pcoipGenDevicesGenericTag, pcoipImagingStatsTXBWkbitPersec=pcoipImagingStatsTXBWkbitPersec, teraPcoipGenDevices=teraPcoipGenDevices, pcoipGenStatsPacketsSent=pcoipGenStatsPacketsSent, pcoipUSBDevicesEntry=pcoipUSBDevicesEntry, teraPcoipUSBDevices=teraPcoipUSBDevices, pcoipNetStatsTXBWActiveLimitkbitPersec=pcoipNetStatsTXBWActiveLimitkbitPersec, pcoipGenDevicesHardwareVersion=pcoipGenDevicesHardwareVersion, pcoipImagingStatsRXBWkbitPersec=pcoipImagingStatsRXBWkbitPersec, pcoipUSBDevicesProtocol=pcoipUSBDevicesProtocol, pcoipImagingDevicesModel=pcoipImagingDevicesModel, pcoipImagingDevicesDisplayHeight=pcoipImagingDevicesDisplayHeight, pcoipUSBDevicesPort=pcoipUSBDevicesPort, pcoipGenStatsSessionDuration=pcoipGenStatsSessionDuration, pcoipGenDevicesEntry=pcoipGenDevicesEntry, pcoipGenDevicesTable=pcoipGenDevicesTable, pcoipImagingStatsDecoderCapabilitykbitPersec=pcoipImagingStatsDecoderCapabilitykbitPersec, pcoipImagingDevicesVID=pcoipImagingDevicesVID, pcoipUSBDevicesVID=pcoipUSBDevicesVID, pcoipUSBDevicesSerial=pcoipUSBDevicesSerial, teraPcoipImagingDevices=teraPcoipImagingDevices, pcoipImagingStatsSessionNumber=pcoipImagingStatsSessionNumber, pcoipGenStatsBytesSent=pcoipGenStatsBytesSent, teraPcoipUSBStats=teraPcoipUSBStats, pcoipGenStatsTable=pcoipGenStatsTable, pcoipGenDevicesUniqueID=pcoipGenDevicesUniqueID, pcoipImagingDevicesTable=pcoipImagingDevicesTable, pcoipAudioStatsTXBWkbitPersec=pcoipAudioStatsTXBWkbitPersec, pcoipNetStatsSessionNumber=pcoipNetStatsSessionNumber, pcoipImagingDevicesIndex=pcoipImagingDevicesIndex, pcoipImagingDevicesDisplayWidth=pcoipImagingDevicesDisplayWidth)
