#
# PySNMP MIB module H3C-MIRRORGROUP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-MIRRORGROUP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:09:55 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
h3cCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cCommon")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
TimeTicks, Unsigned32, ObjectIdentity, Bits, Integer32, Counter64, NotificationType, ModuleIdentity, Gauge32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, iso, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Unsigned32", "ObjectIdentity", "Bits", "Integer32", "Counter64", "NotificationType", "ModuleIdentity", "Gauge32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "iso", "MibIdentifier")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
h3cMirrGroup = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68))
h3cMirrGroup.setRevisions(('2006-01-10 19:03',))
if mibBuilder.loadTexts: h3cMirrGroup.setLastUpdated('200601131403Z')
if mibBuilder.loadTexts: h3cMirrGroup.setOrganization('Huawei 3Com Technologies Co., Ltd.')
h3cMGInfoObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1))
h3cMGObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 1))
h3cMGTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 1, 1), )
if mibBuilder.loadTexts: h3cMGTable.setStatus('current')
h3cMGEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 1, 1, 1), ).setIndexNames((0, "H3C-MIRRORGROUP-MIB", "h3cMGID"))
if mibBuilder.loadTexts: h3cMGEntry.setStatus('current')
h3cMGID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cMGID.setStatus('current')
h3cMGType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("remoteSource", 2), ("remoteDestination", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cMGType.setStatus('current')
h3cMGStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cMGStatus.setStatus('current')
h3cMGRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cMGRowStatus.setStatus('current')
h3cMGMirrorIfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 2))
h3cMGMirrorIfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 2, 1), )
if mibBuilder.loadTexts: h3cMGMirrorIfTable.setStatus('current')
h3cMGMirrorIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 2, 1, 1), ).setIndexNames((0, "H3C-MIRRORGROUP-MIB", "h3cMGID"), (0, "H3C-MIRRORGROUP-MIB", "h3cMGMirrorIfIndex"), (0, "H3C-MIRRORGROUP-MIB", "h3cMGMirrorDirection"))
if mibBuilder.loadTexts: h3cMGMirrorIfEntry.setStatus('current')
h3cMGMirrorIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cMGMirrorIfIndex.setStatus('current')
h3cMGMirrorDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("both", 3))))
if mibBuilder.loadTexts: h3cMGMirrorDirection.setStatus('current')
h3cMGMirrorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 2, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cMGMirrorRowStatus.setStatus('current')
h3cMGMonitorIfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 3))
h3cMGMonitorIfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 3, 1), )
if mibBuilder.loadTexts: h3cMGMonitorIfTable.setStatus('current')
h3cMGMonitorIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 3, 1, 1), ).setIndexNames((0, "H3C-MIRRORGROUP-MIB", "h3cMGID"), (0, "H3C-MIRRORGROUP-MIB", "h3cMGMonitorIfIndex"))
if mibBuilder.loadTexts: h3cMGMonitorIfEntry.setStatus('current')
h3cMGMonitorIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cMGMonitorIfIndex.setStatus('current')
h3cMGMonitorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 3, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cMGMonitorRowStatus.setStatus('current')
h3cMGReflectorIfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 4))
h3cMGReflectorIfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 4, 1), )
if mibBuilder.loadTexts: h3cMGReflectorIfTable.setStatus('current')
h3cMGReflectorIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 4, 1, 1), ).setIndexNames((0, "H3C-MIRRORGROUP-MIB", "h3cMGID"), (0, "H3C-MIRRORGROUP-MIB", "h3cMGReflectorIfIndex"))
if mibBuilder.loadTexts: h3cMGReflectorIfEntry.setStatus('current')
h3cMGReflectorIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 4, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cMGReflectorIfIndex.setStatus('current')
h3cMGReflectorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 4, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cMGReflectorRowStatus.setStatus('current')
h3cMGRprobeVlanObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 5))
h3cMGRprobeVlanTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 5, 1), )
if mibBuilder.loadTexts: h3cMGRprobeVlanTable.setStatus('current')
h3cMGRprobeVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 5, 1, 1), ).setIndexNames((0, "H3C-MIRRORGROUP-MIB", "h3cMGID"), (0, "H3C-MIRRORGROUP-MIB", "h3cMGRprobeVlanID"))
if mibBuilder.loadTexts: h3cMGRprobeVlanEntry.setStatus('current')
h3cMGRprobeVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: h3cMGRprobeVlanID.setStatus('current')
h3cMGRprobeVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 68, 1, 5, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cMGRprobeVlanRowStatus.setStatus('current')
mibBuilder.exportSymbols("H3C-MIRRORGROUP-MIB", h3cMirrGroup=h3cMirrGroup, h3cMGObjects=h3cMGObjects, h3cMGEntry=h3cMGEntry, h3cMGReflectorIfIndex=h3cMGReflectorIfIndex, h3cMGMirrorIfIndex=h3cMGMirrorIfIndex, h3cMGMonitorIfObjects=h3cMGMonitorIfObjects, h3cMGMonitorIfTable=h3cMGMonitorIfTable, h3cMGRprobeVlanTable=h3cMGRprobeVlanTable, h3cMGReflectorRowStatus=h3cMGReflectorRowStatus, h3cMGReflectorIfObjects=h3cMGReflectorIfObjects, h3cMGReflectorIfEntry=h3cMGReflectorIfEntry, PYSNMP_MODULE_ID=h3cMirrGroup, h3cMGRprobeVlanRowStatus=h3cMGRprobeVlanRowStatus, h3cMGInfoObjects=h3cMGInfoObjects, h3cMGStatus=h3cMGStatus, h3cMGMirrorIfEntry=h3cMGMirrorIfEntry, h3cMGRprobeVlanID=h3cMGRprobeVlanID, h3cMGMirrorDirection=h3cMGMirrorDirection, h3cMGType=h3cMGType, h3cMGMirrorIfTable=h3cMGMirrorIfTable, h3cMGRprobeVlanObjects=h3cMGRprobeVlanObjects, h3cMGMonitorIfEntry=h3cMGMonitorIfEntry, h3cMGMirrorRowStatus=h3cMGMirrorRowStatus, h3cMGMonitorIfIndex=h3cMGMonitorIfIndex, h3cMGMonitorRowStatus=h3cMGMonitorRowStatus, h3cMGReflectorIfTable=h3cMGReflectorIfTable, h3cMGRowStatus=h3cMGRowStatus, h3cMGRprobeVlanEntry=h3cMGRprobeVlanEntry, h3cMGMirrorIfObjects=h3cMGMirrorIfObjects, h3cMGTable=h3cMGTable, h3cMGID=h3cMGID)
