#
# PySNMP MIB module HH3C-MIRRORGROUP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-MIRRORGROUP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:15:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, ObjectIdentity, ModuleIdentity, NotificationType, TimeTicks, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Bits, Unsigned32, IpAddress, Integer32, Gauge32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ObjectIdentity", "ModuleIdentity", "NotificationType", "TimeTicks", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Bits", "Unsigned32", "IpAddress", "Integer32", "Gauge32", "Counter64")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
hh3cMirrGroup = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 68))
hh3cMirrGroup.setRevisions(('2006-01-10 19:03',))
if mibBuilder.loadTexts: hh3cMirrGroup.setLastUpdated('200601131403Z')
if mibBuilder.loadTexts: hh3cMirrGroup.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3cMGInfoObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1))
hh3cMGObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 1))
hh3cMGTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 1, 1), )
if mibBuilder.loadTexts: hh3cMGTable.setStatus('current')
hh3cMGEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 1, 1, 1), ).setIndexNames((0, "HH3C-MIRRORGROUP-MIB", "hh3cMGID"))
if mibBuilder.loadTexts: hh3cMGEntry.setStatus('current')
hh3cMGID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cMGID.setStatus('current')
hh3cMGType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("remoteSource", 2), ("remoteDestination", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMGType.setStatus('current')
hh3cMGStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cMGStatus.setStatus('current')
hh3cMGRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMGRowStatus.setStatus('current')
hh3cMGMirrorIfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 2))
hh3cMGMirrorIfTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 2, 1), )
if mibBuilder.loadTexts: hh3cMGMirrorIfTable.setStatus('current')
hh3cMGMirrorIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 2, 1, 1), ).setIndexNames((0, "HH3C-MIRRORGROUP-MIB", "hh3cMGID"), (0, "HH3C-MIRRORGROUP-MIB", "hh3cMGMirrorIfIndex"), (0, "HH3C-MIRRORGROUP-MIB", "hh3cMGMirrorDirection"))
if mibBuilder.loadTexts: hh3cMGMirrorIfEntry.setStatus('current')
hh3cMGMirrorIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 2, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cMGMirrorIfIndex.setStatus('current')
hh3cMGMirrorDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("both", 3))))
if mibBuilder.loadTexts: hh3cMGMirrorDirection.setStatus('current')
hh3cMGMirrorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 2, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMGMirrorRowStatus.setStatus('current')
hh3cMGMonitorIfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 3))
hh3cMGMonitorIfTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 3, 1), )
if mibBuilder.loadTexts: hh3cMGMonitorIfTable.setStatus('current')
hh3cMGMonitorIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 3, 1, 1), ).setIndexNames((0, "HH3C-MIRRORGROUP-MIB", "hh3cMGID"), (0, "HH3C-MIRRORGROUP-MIB", "hh3cMGMonitorIfIndex"))
if mibBuilder.loadTexts: hh3cMGMonitorIfEntry.setStatus('current')
hh3cMGMonitorIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cMGMonitorIfIndex.setStatus('current')
hh3cMGMonitorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 3, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMGMonitorRowStatus.setStatus('current')
hh3cMGReflectorIfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 4))
hh3cMGReflectorIfTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 4, 1), )
if mibBuilder.loadTexts: hh3cMGReflectorIfTable.setStatus('current')
hh3cMGReflectorIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 4, 1, 1), ).setIndexNames((0, "HH3C-MIRRORGROUP-MIB", "hh3cMGID"), (0, "HH3C-MIRRORGROUP-MIB", "hh3cMGReflectorIfIndex"))
if mibBuilder.loadTexts: hh3cMGReflectorIfEntry.setStatus('current')
hh3cMGReflectorIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 4, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: hh3cMGReflectorIfIndex.setStatus('current')
hh3cMGReflectorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 4, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMGReflectorRowStatus.setStatus('current')
hh3cMGRprobeVlanObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 5))
hh3cMGRprobeVlanTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 5, 1), )
if mibBuilder.loadTexts: hh3cMGRprobeVlanTable.setStatus('current')
hh3cMGRprobeVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 5, 1, 1), ).setIndexNames((0, "HH3C-MIRRORGROUP-MIB", "hh3cMGID"), (0, "HH3C-MIRRORGROUP-MIB", "hh3cMGRprobeVlanID"))
if mibBuilder.loadTexts: hh3cMGRprobeVlanEntry.setStatus('current')
hh3cMGRprobeVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: hh3cMGRprobeVlanID.setStatus('current')
hh3cMGRprobeVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 68, 1, 5, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMGRprobeVlanRowStatus.setStatus('current')
mibBuilder.exportSymbols("HH3C-MIRRORGROUP-MIB", hh3cMGMonitorRowStatus=hh3cMGMonitorRowStatus, hh3cMGRprobeVlanObjects=hh3cMGRprobeVlanObjects, hh3cMGMirrorRowStatus=hh3cMGMirrorRowStatus, hh3cMGRowStatus=hh3cMGRowStatus, hh3cMGObjects=hh3cMGObjects, hh3cMGMonitorIfIndex=hh3cMGMonitorIfIndex, hh3cMGRprobeVlanEntry=hh3cMGRprobeVlanEntry, hh3cMGMonitorIfObjects=hh3cMGMonitorIfObjects, hh3cMGReflectorIfTable=hh3cMGReflectorIfTable, hh3cMGReflectorIfObjects=hh3cMGReflectorIfObjects, hh3cMGMirrorIfTable=hh3cMGMirrorIfTable, hh3cMGReflectorIfIndex=hh3cMGReflectorIfIndex, hh3cMGRprobeVlanTable=hh3cMGRprobeVlanTable, hh3cMGRprobeVlanRowStatus=hh3cMGRprobeVlanRowStatus, hh3cMGMonitorIfEntry=hh3cMGMonitorIfEntry, hh3cMirrGroup=hh3cMirrGroup, hh3cMGMirrorIfIndex=hh3cMGMirrorIfIndex, hh3cMGMirrorIfEntry=hh3cMGMirrorIfEntry, PYSNMP_MODULE_ID=hh3cMirrGroup, hh3cMGID=hh3cMGID, hh3cMGInfoObjects=hh3cMGInfoObjects, hh3cMGTable=hh3cMGTable, hh3cMGMirrorIfObjects=hh3cMGMirrorIfObjects, hh3cMGReflectorIfEntry=hh3cMGReflectorIfEntry, hh3cMGReflectorRowStatus=hh3cMGReflectorRowStatus, hh3cMGType=hh3cMGType, hh3cMGStatus=hh3cMGStatus, hh3cMGEntry=hh3cMGEntry, hh3cMGMonitorIfTable=hh3cMGMonitorIfTable, hh3cMGMirrorDirection=hh3cMGMirrorDirection, hh3cMGRprobeVlanID=hh3cMGRprobeVlanID)
