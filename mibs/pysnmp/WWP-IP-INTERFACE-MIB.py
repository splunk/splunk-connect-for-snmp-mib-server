#
# PySNMP MIB module WWP-IP-INTERFACE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-IP-INTERFACE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:30:52 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, Integer32, ModuleIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter32, Gauge32, IpAddress, ObjectIdentity, Bits, NotificationType, TimeTicks, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Integer32", "ModuleIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter32", "Gauge32", "IpAddress", "ObjectIdentity", "Bits", "NotificationType", "TimeTicks", "MibIdentifier")
DateAndTime, DisplayString, TextualConvention, MacAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TextualConvention", "MacAddress", "TruthValue")
wwpModules, = mibBuilder.importSymbols("WWP-SMI", "wwpModules")
wwpIpInterfaceMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 17))
wwpIpInterfaceMIB.setRevisions(('2003-05-02 00:00', '2001-04-03 17:00',))
if mibBuilder.loadTexts: wwpIpInterfaceMIB.setLastUpdated('200104031700Z')
if mibBuilder.loadTexts: wwpIpInterfaceMIB.setOrganization('World Wide Packets, Inc')
class VlanId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 4094)

wwpIpInterfaceMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 17, 1))
wwpIpInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 17, 1, 1))
wwpIpInterfaceMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 17, 2))
wwpIpInterfaceMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 17, 2, 0))
wwpIpInterfaceMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 17, 3))
wwpIpInterfaceMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 17, 3, 1))
wwpIpInterfaceMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 17, 3, 2))
wwpIpInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 17, 1, 1, 1), )
if mibBuilder.loadTexts: wwpIpInterfaceTable.setStatus('current')
wwpIpInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 17, 1, 1, 1, 1), ).setIndexNames((0, "WWP-IP-INTERFACE-MIB", "wwpIpInterfaceIndex"))
if mibBuilder.loadTexts: wwpIpInterfaceEntry.setStatus('current')
wwpIpInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 17, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpIpInterfaceIndex.setStatus('current')
wwpIpInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 17, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpIpInterfaceName.setStatus('current')
wwpIpInterfaceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 17, 1, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpIpInterfaceIpAddr.setStatus('current')
wwpIpInterfaceSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 17, 1, 1, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpIpInterfaceSubnet.setStatus('current')
wwpIpInterfaceIfIndexXref = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 17, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpIpInterfaceIfIndexXref.setStatus('current')
wwpIpExtInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 17, 1, 1, 2), )
if mibBuilder.loadTexts: wwpIpExtInterfaceTable.setStatus('current')
wwpIpExtInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 17, 1, 1, 2, 1), )
wwpIpInterfaceEntry.registerAugmentions(("WWP-IP-INTERFACE-MIB", "wwpIpExtInterfaceEntry"))
wwpIpExtInterfaceEntry.setIndexNames(*wwpIpInterfaceEntry.getIndexNames())
if mibBuilder.loadTexts: wwpIpExtInterfaceEntry.setStatus('current')
wwpIpInterfaceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 17, 1, 1, 2, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpIpInterfaceEnable.setStatus('current')
wwpIpInterfaceVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 17, 1, 1, 2, 1, 2), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpIpInterfaceVlanId.setStatus('current')
wwpIpInterfaceMgmtPktPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 17, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpIpInterfaceMgmtPktPriority.setStatus('current')
wwpIpInterfaceAddrNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 17, 1, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpIpInterfaceAddrNotifEnabled.setStatus('current')
wwpIpInterfaceAddrChgNotification = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 17, 2, 0, 1)).setObjects(("WWP-IP-INTERFACE-MIB", "wwpIpInterfaceName"), ("WWP-IP-INTERFACE-MIB", "wwpIpInterfaceIpAddr"), ("WWP-IP-INTERFACE-MIB", "wwpIpInterfaceSubnet"))
if mibBuilder.loadTexts: wwpIpInterfaceAddrChgNotification.setStatus('current')
mibBuilder.exportSymbols("WWP-IP-INTERFACE-MIB", wwpIpInterfaceAddrNotifEnabled=wwpIpInterfaceAddrNotifEnabled, wwpIpInterfaceMIBGroups=wwpIpInterfaceMIBGroups, wwpIpExtInterfaceEntry=wwpIpExtInterfaceEntry, wwpIpExtInterfaceTable=wwpIpExtInterfaceTable, wwpIpInterfaceVlanId=wwpIpInterfaceVlanId, wwpIpInterfaceEnable=wwpIpInterfaceEnable, wwpIpInterfaceTable=wwpIpInterfaceTable, wwpIpInterfaceMIBObjects=wwpIpInterfaceMIBObjects, PYSNMP_MODULE_ID=wwpIpInterfaceMIB, wwpIpInterfaceSubnet=wwpIpInterfaceSubnet, VlanId=VlanId, wwpIpInterfaceMIBNotificationPrefix=wwpIpInterfaceMIBNotificationPrefix, wwpIpInterfaceMIBConformance=wwpIpInterfaceMIBConformance, wwpIpInterfaceAddrChgNotification=wwpIpInterfaceAddrChgNotification, wwpIpInterfaceMgmtPktPriority=wwpIpInterfaceMgmtPktPriority, wwpIpInterfaceName=wwpIpInterfaceName, wwpIpInterfaceIndex=wwpIpInterfaceIndex, wwpIpInterfaceEntry=wwpIpInterfaceEntry, wwpIpInterfaceIpAddr=wwpIpInterfaceIpAddr, wwpIpInterface=wwpIpInterface, wwpIpInterfaceIfIndexXref=wwpIpInterfaceIfIndexXref, wwpIpInterfaceMIB=wwpIpInterfaceMIB, wwpIpInterfaceMIBNotifications=wwpIpInterfaceMIBNotifications, wwpIpInterfaceMIBCompliances=wwpIpInterfaceMIBCompliances)
