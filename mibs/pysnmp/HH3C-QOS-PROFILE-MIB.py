#
# PySNMP MIB module HH3C-QOS-PROFILE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-QOS-PROFILE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:16:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
NotificationType, IpAddress, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, Bits, Counter64, Unsigned32, ModuleIdentity, Gauge32, iso, MibIdentifier, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "IpAddress", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "Bits", "Counter64", "Unsigned32", "ModuleIdentity", "Gauge32", "iso", "MibIdentifier", "TimeTicks")
TruthValue, DisplayString, RowStatus, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention", "MacAddress")
hh3cQosProfile = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 17))
if mibBuilder.loadTexts: hh3cQosProfile.setLastUpdated('200407060000Z')
if mibBuilder.loadTexts: hh3cQosProfile.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
class Hh3cQoSDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("invalid", 0), ("input", 1), ("ouput", 2))

hh3cQoSProfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1))
hh3cQoSProf = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 1))
hh3cQoSProfTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 1, 1), )
if mibBuilder.loadTexts: hh3cQoSProfTable.setStatus('current')
hh3cQoSProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 1, 1, 1), ).setIndexNames((0, "HH3C-QOS-PROFILE-MIB", "hh3cQoSProfIndex"))
if mibBuilder.loadTexts: hh3cQoSProfEntry.setStatus('current')
hh3cQoSProfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hh3cQoSProfIndex.setStatus('current')
hh3cQoSProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSProfName.setStatus('current')
hh3cQoSProfActionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cQoSProfActionNumber.setStatus('current')
hh3cQoSProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 1, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSProfRowStatus.setStatus('current')
hh3cQoSAction = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2))
hh3cQoSTrafficLimitTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1), )
if mibBuilder.loadTexts: hh3cQoSTrafficLimitTable.setStatus('current')
hh3cQoSTrafficLimitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1), ).setIndexNames((0, "HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtProfIndex"), (0, "HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtActionIndex"))
if mibBuilder.loadTexts: hh3cQoSTrafficLimitEntry.setStatus('current')
hh3cQoSTrafLmtProfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hh3cQoSTrafLmtProfIndex.setStatus('current')
hh3cQoSTrafLmtActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hh3cQoSTrafLmtActionIndex.setStatus('current')
hh3cQoSTrafLmtDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 3), Hh3cQoSDirection()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtDirection.setStatus('current')
hh3cQoSTrafLmtUserAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5000, 5999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtUserAclNum.setStatus('current')
hh3cQoSTrafLmtUserAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtUserAclRule.setStatus('current')
hh3cQoSTrafLmtIpAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtIpAclNum.setStatus('current')
hh3cQoSTrafLmtIpAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtIpAclRule.setStatus('current')
hh3cQoSTrafLmtLinkAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4000, 4999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtLinkAclNum.setStatus('current')
hh3cQoSTrafLmtLinkAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtLinkAclRule.setStatus('current')
hh3cQoSTrafLmtTargetRateMbps = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtTargetRateMbps.setStatus('current')
hh3cQoSTrafLmtTargetRateKbps = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtTargetRateKbps.setStatus('current')
hh3cQoSTrafLmtPeakRate = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(64, 8388608), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtPeakRate.setStatus('current')
hh3cQoSTrafLmtCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 34120000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtCIR.setStatus('current')
hh3cQoSTrafLmtCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048575))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtCBS.setStatus('current')
hh3cQoSTrafLmtEBS = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 268435455))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtEBS.setStatus('current')
hh3cQoSTrafLmtPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 34120000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtPIR.setStatus('current')
hh3cQoSTrafLmtConformLocalPre = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtConformLocalPre.setStatus('current')
hh3cQoSTrafLmtConformActionType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 0), ("remark-cos", 1), ("remark-drop-priority", 2), ("remark-cos-drop-priority", 3), ("remark-policed-service", 4), ("remark-dscp", 5))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtConformActionType.setStatus('current')
hh3cQoSTrafLmtExceedActionType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("invalid", 0), ("forward", 1), ("drop", 2), ("remarkdscp", 3), ("exceed-cos", 4))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtExceedActionType.setStatus('current')
hh3cQoSTrafLmtExceedDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtExceedDscp.setStatus('current')
hh3cQoSTrafLmtExceedCos = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtExceedCos.setStatus('current')
hh3cQoSTrafLmtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 22), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtRowStatus.setStatus('current')
hh3cQoSTrafLmtConformCos = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtConformCos.setStatus('current')
hh3cQoSTrafLmtConformDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafLmtConformDscp.setStatus('current')
hh3cQoSTrafficPriorityTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2), )
if mibBuilder.loadTexts: hh3cQoSTrafficPriorityTable.setStatus('current')
hh3cQoSTrafficPriorityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1), ).setIndexNames((0, "HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioProfIndex"), (0, "HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioActionIndex"))
if mibBuilder.loadTexts: hh3cQoSTrafficPriorityEntry.setStatus('current')
hh3cQoSTrafPrioProfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hh3cQoSTrafPrioProfIndex.setStatus('current')
hh3cQoSTrafPrioActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hh3cQoSTrafPrioActionIndex.setStatus('current')
hh3cQoSTrafPrioDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 3), Hh3cQoSDirection()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioDirection.setStatus('current')
hh3cQoSTrafPrioUserAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5000, 5999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioUserAclNum.setStatus('current')
hh3cQoSTrafPrioUserAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioUserAclRule.setStatus('current')
hh3cQoSTrafPrioIpAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioIpAclNum.setStatus('current')
hh3cQoSTrafPrioIpAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioIpAclRule.setStatus('current')
hh3cQoSTrafPrioLinkAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4000, 4999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioLinkAclNum.setStatus('current')
hh3cQoSTrafPrioLinkAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioLinkAclRule.setStatus('current')
hh3cQoSTrafPrioDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioDscp.setStatus('current')
hh3cQoSTrafPrioIpPre = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioIpPre.setStatus('current')
hh3cQoSTrafPrioIpPreFromCos = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 12), TruthValue().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioIpPreFromCos.setStatus('current')
hh3cQoSTrafPrioCos = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioCos.setStatus('current')
hh3cQoSTrafPrioCosFromIpPre = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 14), TruthValue().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioCosFromIpPre.setStatus('current')
hh3cQoSTrafPrioLocalPre = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioLocalPre.setStatus('current')
hh3cQoSTrafPrioPolicedServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3, 4))).clone(namedValues=NamedValues(("invalid", 0), ("trust-dscp", 2), ("new-dscp", 3), ("untrusted", 4))).clone('invalid')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioPolicedServiceType.setStatus('current')
hh3cQoSTrafPrioPolicedServiceDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 63), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioPolicedServiceDscp.setStatus('current')
hh3cQoSTrafPrioPolicedServiceExp = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioPolicedServiceExp.setStatus('current')
hh3cQoSTrafPrioPolicedServiceCos = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioPolicedServiceCos.setStatus('current')
hh3cQoSTrafPrioPolicedServiceLoaclPre = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 7), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioPolicedServiceLoaclPre.setStatus('current')
hh3cQoSTrafPrioPolicedServiceDropPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 2), ValueRangeConstraint(255, 255), )).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioPolicedServiceDropPriority.setStatus('current')
hh3cQoSTrafPrioRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 2, 1, 22), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafPrioRowStatus.setStatus('current')
hh3cQoSTrafficFilterTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 3), )
if mibBuilder.loadTexts: hh3cQoSTrafficFilterTable.setStatus('current')
hh3cQoSTrafficFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 3, 1), ).setIndexNames((0, "HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafFilterProfIndex"), (0, "HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafFilterActionIndex"))
if mibBuilder.loadTexts: hh3cQoSTrafficFilterEntry.setStatus('current')
hh3cQoSTrafFilterProfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hh3cQoSTrafFilterProfIndex.setStatus('current')
hh3cQoSTrafFilterActionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hh3cQoSTrafFilterActionIndex.setStatus('current')
hh3cQoSTrafFilterDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 3, 1, 3), Hh3cQoSDirection()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafFilterDirection.setStatus('current')
hh3cQoSTrafFilterUserAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5000, 5999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafFilterUserAclNum.setStatus('current')
hh3cQoSTrafFilterUserAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafFilterUserAclRule.setStatus('current')
hh3cQoSTrafFilterIpAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(2000, 3999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafFilterIpAclNum.setStatus('current')
hh3cQoSTrafFilterIpAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafFilterIpAclRule.setStatus('current')
hh3cQoSTrafFilterLinkAclNum = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4000, 4999), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafFilterLinkAclNum.setStatus('current')
hh3cQoSTrafFilterLinkAclRule = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafFilterLinkAclRule.setStatus('current')
hh3cQoSTrafFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 2, 3, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSTrafFilterRowStatus.setStatus('current')
hh3cQoSProfPortMapping = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 3))
hh3cQoSProfPortMappingTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 3, 1), )
if mibBuilder.loadTexts: hh3cQoSProfPortMappingTable.setStatus('current')
hh3cQoSProfPortMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 3, 1, 1), ).setIndexNames((0, "HH3C-QOS-PROFILE-MIB", "hh3cQoSProfPortMappingIfIndex"), (0, "HH3C-QOS-PROFILE-MIB", "hh3cQoSProfPortMappingProfIndex"))
if mibBuilder.loadTexts: hh3cQoSProfPortMappingEntry.setStatus('current')
hh3cQoSProfPortMappingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hh3cQoSProfPortMappingIfIndex.setStatus('current')
hh3cQoSProfPortMappingProfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hh3cQoSProfPortMappingProfIndex.setStatus('current')
hh3cQoSProfPortMappingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 3, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cQoSProfPortMappingRowStatus.setStatus('current')
hh3cQoSProfPortMappingModeTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 3, 2), )
if mibBuilder.loadTexts: hh3cQoSProfPortMappingModeTable.setStatus('current')
hh3cQoSProfPortMappingModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 3, 2, 1), ).setIndexNames((0, "HH3C-QOS-PROFILE-MIB", "hh3cQoSProfPortMappingModeIfIndex"))
if mibBuilder.loadTexts: hh3cQoSProfPortMappingModeEntry.setStatus('current')
hh3cQoSProfPortMappingModeIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hh3cQoSProfPortMappingModeIfIndex.setStatus('current')
hh3cQoSProfPortMappingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("user-based", 1), ("port-based", 2))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cQoSProfPortMappingMode.setStatus('current')
hh3cQoSProfDynPortMappingTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 3, 3), )
if mibBuilder.loadTexts: hh3cQoSProfDynPortMappingTable.setStatus('current')
hh3cQoSProfDynPortMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 3, 3, 1), ).setIndexNames((0, "HH3C-QOS-PROFILE-MIB", "hh3cQoSProfDynPortMappingIfIndex"), (0, "HH3C-QOS-PROFILE-MIB", "hh3cQoSProfDynPortMappingUserSrcMAC"))
if mibBuilder.loadTexts: hh3cQoSProfDynPortMappingEntry.setStatus('current')
hh3cQoSProfDynPortMappingIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: hh3cQoSProfDynPortMappingIfIndex.setStatus('current')
hh3cQoSProfDynPortMappingUserSrcMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 3, 3, 1, 2), MacAddress())
if mibBuilder.loadTexts: hh3cQoSProfDynPortMappingUserSrcMAC.setStatus('current')
hh3cQoSProfDynPortMappingUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 3, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cQoSProfDynPortMappingUserName.setStatus('current')
hh3cQoSProfDynPortMappingUserIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 3, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cQoSProfDynPortMappingUserIPAddr.setStatus('current')
hh3cQoSProfDynPortMappingUserVLANID = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cQoSProfDynPortMappingUserVLANID.setStatus('current')
hh3cQoSProfDynPortMappingUserProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 17, 1, 3, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cQoSProfDynPortMappingUserProfName.setStatus('current')
hh3cQoSProfPortMappingTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 17, 2))
hh3cQoSProfPortMappingError = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 17, 2, 1))
if mibBuilder.loadTexts: hh3cQoSProfPortMappingError.setStatus('current')
hh3cQoSProfMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 17, 3))
hh3cQoSProfMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 17, 3, 1))
hh3cQoSProfMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 25506, 2, 17, 3, 1, 1)).setObjects(("HH3C-QOS-PROFILE-MIB", "hh3cQoSProfGroup"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSActionGroup"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSProfPortMappingGroup"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSProfPortMappingTrapsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cQoSProfMibCompliance = hh3cQoSProfMibCompliance.setStatus('current')
hh3cQoSProfMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 17, 3, 2))
hh3cQoSProfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 17, 3, 2, 1)).setObjects(("HH3C-QOS-PROFILE-MIB", "hh3cQoSProfName"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSProfActionNumber"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSProfRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cQoSProfGroup = hh3cQoSProfGroup.setStatus('current')
hh3cQoSActionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 17, 3, 2, 2)).setObjects(("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtDirection"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtUserAclNum"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtUserAclRule"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtIpAclNum"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtIpAclRule"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtLinkAclNum"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtLinkAclRule"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtTargetRateMbps"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtTargetRateKbps"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtPeakRate"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtCIR"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtCBS"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtEBS"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtPIR"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtConformLocalPre"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtConformActionType"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtExceedActionType"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtExceedDscp"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtExceedCos"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtRowStatus"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtConformCos"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafLmtConformDscp"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioDirection"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioUserAclNum"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioUserAclRule"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioIpAclNum"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioIpAclRule"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioLinkAclNum"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioLinkAclRule"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioDscp"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioIpPre"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioIpPreFromCos"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioCos"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioCosFromIpPre"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioLocalPre"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioPolicedServiceType"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioPolicedServiceDscp"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioPolicedServiceExp"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioPolicedServiceCos"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioPolicedServiceLoaclPre"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioPolicedServiceDropPriority"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafPrioRowStatus"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafFilterDirection"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafFilterUserAclNum"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafFilterUserAclRule"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafFilterIpAclNum"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafFilterIpAclRule"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafFilterLinkAclNum"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafFilterLinkAclRule"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSTrafFilterRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cQoSActionGroup = hh3cQoSActionGroup.setStatus('current')
hh3cQoSProfPortMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 25506, 2, 17, 3, 2, 3)).setObjects(("HH3C-QOS-PROFILE-MIB", "hh3cQoSProfPortMappingRowStatus"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSProfPortMappingMode"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSProfDynPortMappingUserName"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSProfDynPortMappingUserIPAddr"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSProfDynPortMappingUserVLANID"), ("HH3C-QOS-PROFILE-MIB", "hh3cQoSProfDynPortMappingUserProfName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cQoSProfPortMappingGroup = hh3cQoSProfPortMappingGroup.setStatus('current')
hh3cQoSProfPortMappingTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 25506, 2, 17, 3, 2, 4)).setObjects(("HH3C-QOS-PROFILE-MIB", "hh3cQoSProfPortMappingError"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hh3cQoSProfPortMappingTrapsGroup = hh3cQoSProfPortMappingTrapsGroup.setStatus('current')
mibBuilder.exportSymbols("HH3C-QOS-PROFILE-MIB", hh3cQoSTrafFilterRowStatus=hh3cQoSTrafFilterRowStatus, hh3cQoSTrafLmtExceedCos=hh3cQoSTrafLmtExceedCos, hh3cQoSProfPortMappingModeTable=hh3cQoSProfPortMappingModeTable, hh3cQoSProfPortMappingRowStatus=hh3cQoSProfPortMappingRowStatus, hh3cQoSProfPortMappingEntry=hh3cQoSProfPortMappingEntry, hh3cQoSTrafPrioUserAclRule=hh3cQoSTrafPrioUserAclRule, hh3cQoSProfMibConformance=hh3cQoSProfMibConformance, hh3cQoSProfPortMappingTraps=hh3cQoSProfPortMappingTraps, hh3cQoSTrafPrioUserAclNum=hh3cQoSTrafPrioUserAclNum, hh3cQoSTrafLmtConformDscp=hh3cQoSTrafLmtConformDscp, hh3cQoSTrafLmtCBS=hh3cQoSTrafLmtCBS, hh3cQoSTrafLmtProfIndex=hh3cQoSTrafLmtProfIndex, hh3cQoSTrafPrioProfIndex=hh3cQoSTrafPrioProfIndex, hh3cQoSTrafPrioPolicedServiceLoaclPre=hh3cQoSTrafPrioPolicedServiceLoaclPre, hh3cQoSProfEntry=hh3cQoSProfEntry, hh3cQoSTrafPrioDscp=hh3cQoSTrafPrioDscp, hh3cQoSTrafPrioRowStatus=hh3cQoSTrafPrioRowStatus, hh3cQoSProfActionNumber=hh3cQoSProfActionNumber, hh3cQoSTrafLmtExceedActionType=hh3cQoSTrafLmtExceedActionType, hh3cQoSTrafPrioIpAclNum=hh3cQoSTrafPrioIpAclNum, hh3cQoSProf=hh3cQoSProf, hh3cQoSTrafPrioPolicedServiceType=hh3cQoSTrafPrioPolicedServiceType, hh3cQoSProfPortMappingGroup=hh3cQoSProfPortMappingGroup, hh3cQoSTrafLmtExceedDscp=hh3cQoSTrafLmtExceedDscp, hh3cQoSTrafficLimitEntry=hh3cQoSTrafficLimitEntry, hh3cQoSTrafFilterLinkAclRule=hh3cQoSTrafFilterLinkAclRule, hh3cQoSProfMibCompliance=hh3cQoSProfMibCompliance, hh3cQoSTrafficFilterTable=hh3cQoSTrafficFilterTable, hh3cQoSTrafPrioActionIndex=hh3cQoSTrafPrioActionIndex, hh3cQoSProfPortMappingModeEntry=hh3cQoSProfPortMappingModeEntry, hh3cQoSActionGroup=hh3cQoSActionGroup, hh3cQoSTrafficLimitTable=hh3cQoSTrafficLimitTable, Hh3cQoSDirection=Hh3cQoSDirection, hh3cQoSTrafficPriorityEntry=hh3cQoSTrafficPriorityEntry, hh3cQoSProfDynPortMappingUserVLANID=hh3cQoSProfDynPortMappingUserVLANID, hh3cQoSTrafLmtTargetRateMbps=hh3cQoSTrafLmtTargetRateMbps, hh3cQoSTrafPrioCos=hh3cQoSTrafPrioCos, hh3cQoSProfMibCompliances=hh3cQoSProfMibCompliances, hh3cQoSTrafLmtPeakRate=hh3cQoSTrafLmtPeakRate, hh3cQoSTrafLmtConformActionType=hh3cQoSTrafLmtConformActionType, hh3cQoSTrafFilterUserAclRule=hh3cQoSTrafFilterUserAclRule, hh3cQoSProfPortMappingProfIndex=hh3cQoSProfPortMappingProfIndex, hh3cQoSTrafficFilterEntry=hh3cQoSTrafficFilterEntry, hh3cQoSTrafLmtLinkAclNum=hh3cQoSTrafLmtLinkAclNum, PYSNMP_MODULE_ID=hh3cQosProfile, hh3cQoSTrafFilterDirection=hh3cQoSTrafFilterDirection, hh3cQoSTrafPrioPolicedServiceDscp=hh3cQoSTrafPrioPolicedServiceDscp, hh3cQoSProfTable=hh3cQoSProfTable, hh3cQoSTrafLmtIpAclRule=hh3cQoSTrafLmtIpAclRule, hh3cQoSTrafLmtLinkAclRule=hh3cQoSTrafLmtLinkAclRule, hh3cQoSTrafPrioIpPreFromCos=hh3cQoSTrafPrioIpPreFromCos, hh3cQoSTrafPrioLinkAclNum=hh3cQoSTrafPrioLinkAclNum, hh3cQoSTrafLmtConformLocalPre=hh3cQoSTrafLmtConformLocalPre, hh3cQoSTrafFilterIpAclNum=hh3cQoSTrafFilterIpAclNum, hh3cQoSProfDynPortMappingUserName=hh3cQoSProfDynPortMappingUserName, hh3cQoSTrafLmtUserAclRule=hh3cQoSTrafLmtUserAclRule, hh3cQoSProfDynPortMappingUserProfName=hh3cQoSProfDynPortMappingUserProfName, hh3cQoSTrafLmtUserAclNum=hh3cQoSTrafLmtUserAclNum, hh3cQoSProfPortMappingTable=hh3cQoSProfPortMappingTable, hh3cQoSProfRowStatus=hh3cQoSProfRowStatus, hh3cQoSTrafFilterIpAclRule=hh3cQoSTrafFilterIpAclRule, hh3cQoSTrafPrioPolicedServiceDropPriority=hh3cQoSTrafPrioPolicedServiceDropPriority, hh3cQoSProfPortMappingTrapsGroup=hh3cQoSProfPortMappingTrapsGroup, hh3cQoSProfPortMappingError=hh3cQoSProfPortMappingError, hh3cQoSProfDynPortMappingUserSrcMAC=hh3cQoSProfDynPortMappingUserSrcMAC, hh3cQoSTrafPrioLinkAclRule=hh3cQoSTrafPrioLinkAclRule, hh3cQoSProfPortMappingIfIndex=hh3cQoSProfPortMappingIfIndex, hh3cQoSTrafLmtActionIndex=hh3cQoSTrafLmtActionIndex, hh3cQoSProfDynPortMappingIfIndex=hh3cQoSProfDynPortMappingIfIndex, hh3cQoSTrafFilterUserAclNum=hh3cQoSTrafFilterUserAclNum, hh3cQoSProfObjects=hh3cQoSProfObjects, hh3cQoSProfDynPortMappingTable=hh3cQoSProfDynPortMappingTable, hh3cQoSTrafLmtIpAclNum=hh3cQoSTrafLmtIpAclNum, hh3cQoSTrafLmtEBS=hh3cQoSTrafLmtEBS, hh3cQosProfile=hh3cQosProfile, hh3cQoSTrafficPriorityTable=hh3cQoSTrafficPriorityTable, hh3cQoSProfDynPortMappingEntry=hh3cQoSProfDynPortMappingEntry, hh3cQoSTrafPrioPolicedServiceExp=hh3cQoSTrafPrioPolicedServiceExp, hh3cQoSTrafPrioIpPre=hh3cQoSTrafPrioIpPre, hh3cQoSTrafLmtCIR=hh3cQoSTrafLmtCIR, hh3cQoSTrafPrioLocalPre=hh3cQoSTrafPrioLocalPre, hh3cQoSTrafFilterActionIndex=hh3cQoSTrafFilterActionIndex, hh3cQoSTrafLmtTargetRateKbps=hh3cQoSTrafLmtTargetRateKbps, hh3cQoSProfPortMapping=hh3cQoSProfPortMapping, hh3cQoSTrafLmtConformCos=hh3cQoSTrafLmtConformCos, hh3cQoSTrafLmtPIR=hh3cQoSTrafLmtPIR, hh3cQoSTrafPrioDirection=hh3cQoSTrafPrioDirection, hh3cQoSProfPortMappingModeIfIndex=hh3cQoSProfPortMappingModeIfIndex, hh3cQoSProfIndex=hh3cQoSProfIndex, hh3cQoSTrafLmtRowStatus=hh3cQoSTrafLmtRowStatus, hh3cQoSTrafLmtDirection=hh3cQoSTrafLmtDirection, hh3cQoSProfGroup=hh3cQoSProfGroup, hh3cQoSProfMibGroups=hh3cQoSProfMibGroups, hh3cQoSAction=hh3cQoSAction, hh3cQoSProfName=hh3cQoSProfName, hh3cQoSTrafPrioPolicedServiceCos=hh3cQoSTrafPrioPolicedServiceCos, hh3cQoSProfPortMappingMode=hh3cQoSProfPortMappingMode, hh3cQoSTrafFilterProfIndex=hh3cQoSTrafFilterProfIndex, hh3cQoSTrafFilterLinkAclNum=hh3cQoSTrafFilterLinkAclNum, hh3cQoSTrafPrioIpAclRule=hh3cQoSTrafPrioIpAclRule, hh3cQoSProfDynPortMappingUserIPAddr=hh3cQoSProfDynPortMappingUserIPAddr, hh3cQoSTrafPrioCosFromIpPre=hh3cQoSTrafPrioCosFromIpPre)
