#
# PySNMP MIB module INTELCORPORATIONSERVERHEALTH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTELCORPORATIONSERVERHEALTH-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:43:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, NotificationType, ModuleIdentity, Integer32, MibIdentifier, enterprises, Counter32, Unsigned32, ObjectIdentity, iso, Gauge32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, NotificationType, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "NotificationType", "ModuleIdentity", "Integer32", "MibIdentifier", "enterprises", "Counter32", "Unsigned32", "ObjectIdentity", "iso", "Gauge32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "NotificationType", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class DmiInteger(Integer32):
    pass

class DmiDisplaystring(DisplayString):
    pass

class DmiDateX(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(28, 28)
    fixedLength = 28

class DmiComponentIndex(Integer32):
    pass

intel = MibIdentifier((1, 3, 6, 1, 4, 1, 343))
products = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2))
server_management = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2, 10)).setLabel("server-management")
software = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2, 10, 3))
sha = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2))
dmtfGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1))
tComponentid = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 1), )
if mibBuilder.loadTexts: tComponentid.setStatus('mandatory')
eComponentid = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 1, 1), ).setIndexNames((0, "INTELCORPORATIONSERVERHEALTH-MIB", "DmiComponentIndex"))
if mibBuilder.loadTexts: eComponentid.setStatus('mandatory')
a1Manufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 1, 1, 1), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1Manufacturer.setStatus('mandatory')
a1Product = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 1, 1, 2), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1Product.setStatus('mandatory')
a1Version = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 1, 1, 3), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1Version.setStatus('mandatory')
a1SerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 1, 1, 4), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1SerialNumber.setStatus('mandatory')
a1Installation = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 1, 1, 5), DmiDateX()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1Installation.setStatus('mandatory')
a1Verify = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("vAnErrorOccurredCheckStatusCode", 0), ("vThisComponentDoesNotExist", 1), ("vVerificationIsNotSupported", 2), ("vReserved", 3), ("vThisComponentExistsButTheFunctionalityI", 4), ("vThisComponentExistsButTheFunctionality1", 5), ("vThisComponentExistsAndIsNotFunctioningC", 6), ("vThisComponentExistsAndIsFunctioningCorr", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a1Verify.setStatus('mandatory')
tServerHealthContributionTable = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 2), )
if mibBuilder.loadTexts: tServerHealthContributionTable.setStatus('mandatory')
eServerHealthContributionTable = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 2, 1), ).setIndexNames((0, "INTELCORPORATIONSERVERHEALTH-MIB", "DmiComponentIndex"), (0, "INTELCORPORATIONSERVERHEALTH-MIB", "a2ContributionTableIndex"))
if mibBuilder.loadTexts: eServerHealthContributionTable.setStatus('mandatory')
a2ContributionTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 2, 1, 1), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2ContributionTableIndex.setStatus('mandatory')
a2Component = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 2, 1, 2), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2Component.setStatus('mandatory')
a2Group = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 2, 1, 3), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2Group.setStatus('mandatory')
a2StatusStore = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("vLocal", 0), ("vOperationalState", 1), ("vErrorControl", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2StatusStore.setStatus('mandatory')
a2LocalIndexAttributeIdToStoreGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 2, 1, 5), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2LocalIndexAttributeIdToStoreGroup.setStatus('mandatory')
a2HealthAttributeId = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 2, 1, 6), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a2HealthAttributeId.setStatus('mandatory')
a2Contribution = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vFalse", 0), ("vTrue", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a2Contribution.setStatus('mandatory')
a2UpdateThroughPolling = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vFalse", 0), ("vTrue", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a2UpdateThroughPolling.setStatus('mandatory')
tServerHealthFilterTable = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 3), )
if mibBuilder.loadTexts: tServerHealthFilterTable.setStatus('mandatory')
eServerHealthFilterTable = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 3, 1), ).setIndexNames((0, "INTELCORPORATIONSERVERHEALTH-MIB", "DmiComponentIndex"), (0, "INTELCORPORATIONSERVERHEALTH-MIB", "a3FilterTableIndex"))
if mibBuilder.loadTexts: eServerHealthFilterTable.setStatus('mandatory')
a3FilterTableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 3, 1, 1), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3FilterTableIndex.setStatus('mandatory')
a3Component = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 3, 1, 2), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3Component.setStatus('mandatory')
a3Group = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 3, 1, 3), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a3Group.setStatus('mandatory')
tServerHealthStatus = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 4), )
if mibBuilder.loadTexts: tServerHealthStatus.setStatus('mandatory')
eServerHealthStatus = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 4, 1), ).setIndexNames((0, "INTELCORPORATIONSERVERHEALTH-MIB", "DmiComponentIndex"))
if mibBuilder.loadTexts: eServerHealthStatus.setStatus('mandatory')
a4Status = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("vOther", 1), ("vUnknown", 2), ("vOk", 4), ("vNon-critical", 8), ("vCritical", 16), ("vNon-recoverable", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4Status.setStatus('mandatory')
a4StatusInInteger = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 4, 1, 2), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a4StatusInInteger.setStatus('mandatory')
a4PollInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 4, 1, 3), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a4PollInterval.setStatus('mandatory')
tEventGenerationForServerHealthStatus = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 5), )
if mibBuilder.loadTexts: tEventGenerationForServerHealthStatus.setStatus('mandatory')
eEventGenerationForServerHealthStatus = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 5, 1), ).setIndexNames((0, "INTELCORPORATIONSERVERHEALTH-MIB", "DmiComponentIndex"), (0, "INTELCORPORATIONSERVERHEALTH-MIB", "a5AssociatedGroup"))
if mibBuilder.loadTexts: eEventGenerationForServerHealthStatus.setStatus('mandatory')
a5EventType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 8, 16, 32, 48, 64))).clone(namedValues=NamedValues(("vServerOk", 4), ("vServerNon-critical", 8), ("vServerCritical", 16), ("vServerNon-recoverable", 32), ("vServerHealthDetailChanged", 48), ("vServerHealthDetailRefresh", 64)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a5EventType.setStatus('mandatory')
a5EventSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("vMonitor", 1), ("vInformation", 2), ("vOk", 4), ("vNon-critical", 8), ("vCritical", 16), ("vNon-recoverable", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a5EventSeverity.setStatus('mandatory')
a5IsEventState_based = MibScalar((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vFalse", 0), ("vTrue", 1)))).setLabel("a5IsEventState-based").setMaxAccess("readonly")
if mibBuilder.loadTexts: a5IsEventState_based.setStatus('mandatory')
a5EventStateKey = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 5, 1, 4), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a5EventStateKey.setStatus('mandatory')
a5AssociatedGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 5, 1, 5), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a5AssociatedGroup.setStatus('mandatory')
a5EventSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vOther", 0), ("vUnknown", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a5EventSystem.setStatus('mandatory')
a5EventSubsystem = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vOther", 0), ("vUnknown", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a5EventSubsystem.setStatus('mandatory')
a5IsInstanceDataPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("vFalse", 0), ("vTrue", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a5IsInstanceDataPresent.setStatus('mandatory')
a5EventMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 5, 1, 10), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a5EventMessage.setStatus('mandatory')
tServerHealthDetail = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 6), )
if mibBuilder.loadTexts: tServerHealthDetail.setStatus('mandatory')
eServerHealthDetail = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 6, 1), ).setIndexNames((0, "INTELCORPORATIONSERVERHEALTH-MIB", "DmiComponentIndex"), (0, "INTELCORPORATIONSERVERHEALTH-MIB", "a6HealthInstanceIndex"))
if mibBuilder.loadTexts: eServerHealthDetail.setStatus('mandatory')
a6HealthInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 6, 1, 1), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a6HealthInstanceIndex.setStatus('mandatory')
a6Component = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 6, 1, 2), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a6Component.setStatus('mandatory')
a6Group = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 6, 1, 3), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a6Group.setStatus('mandatory')
a6InstancePath = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 6, 1, 4), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a6InstancePath.setStatus('mandatory')
a6LastEventType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 6, 1, 5), DmiInteger()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a6LastEventType.setStatus('mandatory')
a6Status = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("vOther", 1), ("vUnknown", 2), ("vOk", 4), ("vNon-critical", 8), ("vCritical", 16), ("vNon-recoverable", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: a6Status.setStatus('mandatory')
tMiftomib = MibTable((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 99), )
if mibBuilder.loadTexts: tMiftomib.setStatus('mandatory')
eMiftomib = MibTableRow((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 99, 1), ).setIndexNames((0, "INTELCORPORATIONSERVERHEALTH-MIB", "DmiComponentIndex"))
if mibBuilder.loadTexts: eMiftomib.setStatus('mandatory')
a99MibName = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 99, 1, 1), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a99MibName.setStatus('mandatory')
a99MibOid = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 99, 1, 2), DmiDisplaystring()).setMaxAccess("readonly")
if mibBuilder.loadTexts: a99MibOid.setStatus('mandatory')
a99DisableTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 99, 1, 3), DmiInteger()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: a99DisableTrap.setStatus('mandatory')
trap1ForServerHealthStatus = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 5, 1) + (0,4)).setObjects(("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventType"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventSeverity"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5IsEventState_based"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventStateKey"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5AssociatedGroup"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventSystem"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventSubsystem"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5IsInstanceDataPresent"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventMessage"))
trap2ForServerHealthStatus = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 5, 1) + (0,8)).setObjects(("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventType"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventSeverity"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5IsEventState_based"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventStateKey"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5AssociatedGroup"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventSystem"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventSubsystem"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5IsInstanceDataPresent"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventMessage"))
trap3ForServerHealthStatus = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 5, 1) + (0,16)).setObjects(("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventType"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventSeverity"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5IsEventState_based"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventStateKey"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5AssociatedGroup"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventSystem"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventSubsystem"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5IsInstanceDataPresent"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventMessage"))
trap4ForServerHealthStatus = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 5, 1) + (0,32)).setObjects(("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventType"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventSeverity"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5IsEventState_based"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventStateKey"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5AssociatedGroup"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventSystem"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventSubsystem"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5IsInstanceDataPresent"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventMessage"))
trap5ForServerHealthStatus = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 5, 1) + (0,48)).setObjects(("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventType"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventSeverity"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5IsEventState_based"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventStateKey"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5AssociatedGroup"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventSystem"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventSubsystem"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5IsInstanceDataPresent"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventMessage"))
trap6ForServerHealthStatus = NotificationType((1, 3, 6, 1, 4, 1, 343, 2, 10, 3, 2, 1, 5, 1) + (0,64)).setObjects(("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventType"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventSeverity"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5IsEventState_based"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventStateKey"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5AssociatedGroup"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventSystem"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventSubsystem"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5IsInstanceDataPresent"), ("INTELCORPORATIONSERVERHEALTH-MIB", "a5EventMessage"))
mibBuilder.exportSymbols("INTELCORPORATIONSERVERHEALTH-MIB", a5AssociatedGroup=a5AssociatedGroup, DmiDisplaystring=DmiDisplaystring, server_management=server_management, a2StatusStore=a2StatusStore, a2Group=a2Group, a5EventType=a5EventType, a5EventSeverity=a5EventSeverity, trap4ForServerHealthStatus=trap4ForServerHealthStatus, eServerHealthContributionTable=eServerHealthContributionTable, software=software, a6Status=a6Status, a5EventSystem=a5EventSystem, a3FilterTableIndex=a3FilterTableIndex, DmiInteger=DmiInteger, tServerHealthStatus=tServerHealthStatus, trap5ForServerHealthStatus=trap5ForServerHealthStatus, trap2ForServerHealthStatus=trap2ForServerHealthStatus, tMiftomib=tMiftomib, a99DisableTrap=a99DisableTrap, eServerHealthFilterTable=eServerHealthFilterTable, eEventGenerationForServerHealthStatus=eEventGenerationForServerHealthStatus, a2Component=a2Component, dmtfGroups=dmtfGroups, a1Product=a1Product, a4PollInterval=a4PollInterval, a6LastEventType=a6LastEventType, products=products, a2ContributionTableIndex=a2ContributionTableIndex, a3Component=a3Component, a99MibName=a99MibName, trap6ForServerHealthStatus=trap6ForServerHealthStatus, a6InstancePath=a6InstancePath, a5EventMessage=a5EventMessage, tServerHealthFilterTable=tServerHealthFilterTable, a5IsInstanceDataPresent=a5IsInstanceDataPresent, intel=intel, a2Contribution=a2Contribution, tServerHealthDetail=tServerHealthDetail, eServerHealthDetail=eServerHealthDetail, a4StatusInInteger=a4StatusInInteger, eServerHealthStatus=eServerHealthStatus, a6Component=a6Component, trap1ForServerHealthStatus=trap1ForServerHealthStatus, a99MibOid=a99MibOid, a1SerialNumber=a1SerialNumber, eMiftomib=eMiftomib, a5EventStateKey=a5EventStateKey, sha=sha, trap3ForServerHealthStatus=trap3ForServerHealthStatus, a2LocalIndexAttributeIdToStoreGroup=a2LocalIndexAttributeIdToStoreGroup, a1Verify=a1Verify, eComponentid=eComponentid, a2HealthAttributeId=a2HealthAttributeId, a6Group=a6Group, tServerHealthContributionTable=tServerHealthContributionTable, DmiComponentIndex=DmiComponentIndex, DmiDateX=DmiDateX, a5EventSubsystem=a5EventSubsystem, tEventGenerationForServerHealthStatus=tEventGenerationForServerHealthStatus, a1Version=a1Version, a4Status=a4Status, a3Group=a3Group, a2UpdateThroughPolling=a2UpdateThroughPolling, a6HealthInstanceIndex=a6HealthInstanceIndex, a1Manufacturer=a1Manufacturer, a1Installation=a1Installation, a5IsEventState_based=a5IsEventState_based, tComponentid=tComponentid)
