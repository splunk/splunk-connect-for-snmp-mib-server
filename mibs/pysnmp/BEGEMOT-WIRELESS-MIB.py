#
# PySNMP MIB module BEGEMOT-WIRELESS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BEGEMOT-WIRELESS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:20:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
begemot, = mibBuilder.importSymbols("BEGEMOT-MIB", "begemot")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, MibIdentifier, TimeTicks, Gauge32, Counter64, ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, mib_2, Bits, iso, IpAddress, ObjectIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "MibIdentifier", "TimeTicks", "Gauge32", "Counter64", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "mib-2", "Bits", "iso", "IpAddress", "ObjectIdentity", "NotificationType")
MacAddress, RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
begemotWlan = ModuleIdentity((1, 3, 6, 1, 4, 1, 12325, 1, 210))
begemotWlan.setRevisions(('2010-05-17 00:00',))
if mibBuilder.loadTexts: begemotWlan.setLastUpdated('201005170000Z')
if mibBuilder.loadTexts: begemotWlan.setOrganization('The FreeBSD Foundation')
class WlanMgmtReasonCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 33, 34, 35, 36, 37, 38, 39))
    namedValues = NamedValues(("unspecified", 1), ("authenticationExpire", 2), ("authenticationLeave", 3), ("associationExpire", 4), ("associationTooMany", 5), ("notAuthenticated", 6), ("notAssociated", 7), ("associationLeave", 8), ("associationNotAuthenticated", 9), ("dissassocPwrcapBad", 10), ("dissassocSuperchanBad", 11), ("ieInvalid", 13), ("micFailure", 14), ("fourWayHandshakeTimeout", 15), ("groupKeyUpdateTimeout", 16), ("ieIn4FourWayDiffers", 17), ("groupCipherInvalid", 18), ("pairwiseCiherInvalid", 19), ("akmpInvalid", 20), ("unsupportedRsnIeVersion", 21), ("invalidRsnIeCap", 22), ("dot1xAuthFailed", 23), ("cipherSuiteRejected", 24), ("unspeciffiedQos", 32), ("insufficientBw", 33), ("tooManyFrames", 34), ("outsideTxOp", 35), ("leavingQbss", 36), ("badMechanism", 37), ("setupNeeded", 38), ("timeout", 39))

class WlanMgmtMeshReasonCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))
    namedValues = NamedValues(("peerLinkCancelled", 2), ("maxPeers", 3), ("cpViolation", 4), ("closeRcvd", 5), ("maxRetries", 6), ("confirmTimeout", 7), ("invalidGtk", 8), ("inconsistentParams", 9), ("invalidSecurity", 10), ("perrUnspecified", 11), ("perrNoFI", 12), ("perrDestUnreach", 13))

class WlanMgmtStatusCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 40, 41, 42, 43, 44, 45, 46))
    namedValues = NamedValues(("success", 0), ("unspecified", 1), ("capabilitiesInfo", 10), ("notAssociated", 11), ("other", 12), ("algorithm", 13), ("sequence", 14), ("challenge", 15), ("timeout", 16), ("tooMany", 17), ("basicRate", 18), ("spRequired", 19), ("pbccRequired", 20), ("caRequired", 21), ("specMgmtRequired", 22), ("pwrcapRequire", 23), ("superchanRequired", 24), ("shortSlotRequired", 25), ("dssofdmRequired", 26), ("missingHTCaps", 27), ("invalidIE", 40), ("groupCipherInvalid", 41), ("pairwiseCipherInvalid", 42), ("akmpInvalid", 43), ("unsupportedRsnIEVersion", 44), ("invalidRsnIECap", 45), ("cipherSuiteRejected", 46))

class WlanRegDomainCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))
    namedValues = NamedValues(("fcc", 1), ("ca", 2), ("etsi", 3), ("etsi2", 4), ("etsi3", 5), ("fcc3", 6), ("japan", 7), ("korea", 8), ("apac", 9), ("apac2", 10), ("apac3", 11), ("row", 12), ("none", 13), ("debug", 14), ("sr9", 15), ("xr9", 16), ("gz901", 17))

class WlanIfaceDot11nPduType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("disabled", 0), ("rxOnly", 1), ("txOnly", 2), ("txAndRx", 3))

class WlanPeerCapabilityFlags(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("ess", 1), ("ibss", 2), ("cfPollable", 3), ("cfPollRequest", 4), ("privacy", 5), ("shortPreamble", 6), ("pbcc", 7), ("channelAgility", 8), ("shortSlotTime", 9), ("rsn", 10), ("dsssofdm", 11))

class WlanIfPhyMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))
    namedValues = NamedValues(("auto", 1), ("dot11a", 2), ("dot11b", 3), ("dot11g", 4), ("fh", 5), ("turboA", 6), ("turboG", 7), ("sturboA", 8), ("dot11na", 9), ("dot11ng", 10), ("ofdmHalf", 11), ("ofdmQuarter", 12))

begemotWlanNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 12325, 1, 210, 0))
begemotWlanInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1))
begemotWlanScanning = MibIdentifier((1, 3, 6, 1, 4, 1, 12325, 1, 210, 2))
begemotWlanStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3))
begemotWlanWep = MibIdentifier((1, 3, 6, 1, 4, 1, 12325, 1, 210, 4))
begemotWlanMACAccessControl = MibIdentifier((1, 3, 6, 1, 4, 1, 12325, 1, 210, 5))
begemotWlanMeshRouting = MibIdentifier((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6))
wlanInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 1), )
if mibBuilder.loadTexts: wlanInterfaceTable.setStatus('current')
wlanInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 1, 1), ).setIndexNames((0, "BEGEMOT-WIRELESS-MIB", "wlanIfaceName"))
if mibBuilder.loadTexts: wlanInterfaceEntry.setStatus('current')
wlanIfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfaceIndex.setStatus('current')
wlanIfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanIfaceName.setStatus('current')
wlanParentIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanParentIfName.setStatus('current')
wlanIfaceOperatingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("ibss", 0), ("station", 1), ("wds", 2), ("adhocDemo", 3), ("hostAp", 4), ("monitor", 5), ("meshPoint", 6), ("tdma", 7))).clone('station')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanIfaceOperatingMode.setStatus('current')
wlanIfaceFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 1, 1, 5), Bits().clone(namedValues=NamedValues(("uniqueBssid", 1), ("noBeacons", 2), ("wdsLegacy", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanIfaceFlags.setStatus('current')
wlanIfaceBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 1, 1, 6), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanIfaceBssid.setStatus('current')
wlanIfaceLocalAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 1, 1, 7), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanIfaceLocalAddress.setStatus('current')
wlanIfaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanIfaceStatus.setStatus('current')
wlanIfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanIfaceState.setStatus('current')
wlanIfParentTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 2), )
if mibBuilder.loadTexts: wlanIfParentTable.setStatus('current')
wlanIfParentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 2, 1), )
wlanInterfaceEntry.registerAugmentions(("BEGEMOT-WIRELESS-MIB", "wlanIfParentEntry"))
wlanIfParentEntry.setIndexNames(*wlanInterfaceEntry.getIndexNames())
if mibBuilder.loadTexts: wlanIfParentEntry.setStatus('current')
wlanIfParentDriverCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 2, 1, 1), Bits().clone(namedValues=NamedValues(("station", 1), ("ieee8023encap", 2), ("athFastFrames", 3), ("athTurbo", 4), ("ibss", 5), ("pmgt", 6), ("hostAp", 7), ("ahDemo", 8), ("swRetry", 9), ("txPmgt", 10), ("shortSlot", 11), ("shortPreamble", 12), ("monitor", 13), ("dfs", 14), ("mbss", 15), ("wpa1", 16), ("wpa2", 17), ("burst", 18), ("wme", 19), ("wds", 20), ("bgScan", 21), ("txFrag", 22), ("tdma", 23)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfParentDriverCapabilities.setStatus('current')
wlanIfParentCryptoCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 2, 1, 2), Bits().clone(namedValues=NamedValues(("wep", 1), ("tkip", 2), ("aes", 3), ("aesCcm", 4), ("tkipMic", 5), ("ckip", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfParentCryptoCapabilities.setStatus('current')
wlanIfParentHTCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 2, 1, 3), Bits().clone(namedValues=NamedValues(("ldpc", 1), ("chwidth40", 2), ("greenField", 3), ("shortGi20", 4), ("shortGi40", 5), ("txStbc", 6), ("delba", 7), ("amsdu7935", 8), ("dssscck40", 9), ("psmp", 10), ("fortyMHzIntolerant", 11), ("lsigTxOpProt", 12), ("htcAmpdu", 13), ("htcAmsdu", 14), ("htcHt", 15), ("htcSmps", 16), ("htcRifs", 17)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfParentHTCapabilities.setStatus('current')
wlanIfaceConfigTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3), )
if mibBuilder.loadTexts: wlanIfaceConfigTable.setStatus('current')
wlanIfaceConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1), )
wlanInterfaceEntry.registerAugmentions(("BEGEMOT-WIRELESS-MIB", "wlanIfaceConfigEntry"))
wlanIfaceConfigEntry.setIndexNames(*wlanInterfaceEntry.getIndexNames())
if mibBuilder.loadTexts: wlanIfaceConfigEntry.setStatus('current')
wlanIfacePacketBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfacePacketBurst.setStatus('current')
wlanIfaceCountryCode = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceCountryCode.setStatus('current')
wlanIfaceRegDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 3), WlanRegDomainCode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceRegDomain.setStatus('current')
wlanIfaceDesiredSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDesiredSsid.setStatus('current')
wlanIfaceDesiredChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDesiredChannel.setStatus('current')
wlanIfaceDynamicFreqSelection = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDynamicFreqSelection.setStatus('current')
wlanIfaceFastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceFastFrames.setStatus('current')
wlanIfaceDturbo = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDturbo.setStatus('current')
wlanIfaceTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceTxPower.setStatus('current')
wlanIfaceFragmentThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256, 2346)).clone(2346)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceFragmentThreshold.setStatus('current')
wlanIfaceRTSThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2346)).clone(2346)).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceRTSThreshold.setStatus('current')
wlanIfaceWlanPrivacySubscribe = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 12), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceWlanPrivacySubscribe.setStatus('current')
wlanIfaceBgScan = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceBgScan.setStatus('current')
wlanIfaceBgScanIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 14), Integer32().clone(250)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceBgScanIdle.setStatus('current')
wlanIfaceBgScanInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 15), Integer32().clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceBgScanInterval.setStatus('current')
wlanIfaceBeaconMissedThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(7)).setUnits('frames').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceBeaconMissedThreshold.setStatus('current')
wlanIfaceDesiredBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 17), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDesiredBssid.setStatus('current')
wlanIfaceRoamingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("device", 1), ("auto", 2), ("manual", 3))).clone('auto')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceRoamingMode.setStatus('current')
wlanIfaceDot11d = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 19), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDot11d.setStatus('current')
wlanIfaceDot11h = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 20), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDot11h.setStatus('current')
wlanIfaceDynamicWds = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 21), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDynamicWds.setStatus('current')
wlanIfacePowerSave = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 22), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfacePowerSave.setStatus('current')
wlanIfaceApBridge = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 23), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceApBridge.setStatus('current')
wlanIfaceBeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(25, 1000)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceBeaconInterval.setStatus('current')
wlanIfaceDtimPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDtimPeriod.setStatus('current')
wlanIfaceHideSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 26), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceHideSsid.setStatus('current')
wlanIfaceInactivityProccess = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 27), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceInactivityProccess.setStatus('current')
wlanIfaceDot11gProtMode = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("cts", 2), ("rtscts", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDot11gProtMode.setStatus('current')
wlanIfaceDot11gPureMode = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 29), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDot11gPureMode.setStatus('current')
wlanIfaceDot11nPureMode = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 30), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDot11nPureMode.setStatus('current')
wlanIfaceDot11nAmpdu = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 31), WlanIfaceDot11nPduType().clone('txAndRx')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDot11nAmpdu.setStatus('current')
wlanIfaceDot11nAmpduDensity = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(25, 25), ValueRangeConstraint(50, 50), ValueRangeConstraint(100, 100), ValueRangeConstraint(200, 200), ValueRangeConstraint(400, 400), ValueRangeConstraint(800, 800), ValueRangeConstraint(1600, 1600), ))).setUnits('1/100ths-of-microsecond').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDot11nAmpduDensity.setStatus('current')
wlanIfaceDot11nAmpduLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(8192, 8192), ValueRangeConstraint(16384, 16384), ValueRangeConstraint(32768, 32768), ValueRangeConstraint(65536, 65536), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDot11nAmpduLimit.setStatus('current')
wlanIfaceDot11nAmsdu = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 34), WlanIfaceDot11nPduType().clone('rxOnly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDot11nAmsdu.setStatus('current')
wlanIfaceDot11nAmsduLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(3839, 3839), ValueRangeConstraint(7935, 7935), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDot11nAmsduLimit.setStatus('current')
wlanIfaceDot11nHighThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 36), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDot11nHighThroughput.setStatus('current')
wlanIfaceDot11nHTCompatible = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 37), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDot11nHTCompatible.setStatus('current')
wlanIfaceDot11nHTProtMode = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("rts", 2))).clone('rts')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDot11nHTProtMode.setStatus('current')
wlanIfaceDot11nRIFS = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 39), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDot11nRIFS.setStatus('current')
wlanIfaceDot11nShortGI = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 40), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDot11nShortGI.setStatus('current')
wlanIfaceDot11nSMPSMode = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("static", 2), ("dynamic", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceDot11nSMPSMode.setStatus('current')
wlanIfaceTdmaSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceTdmaSlot.setStatus('current')
wlanIfaceTdmaSlotCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceTdmaSlotCount.setStatus('current')
wlanIfaceTdmaSlotLength = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(150, 65000)).clone(10000)).setUnits('microseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceTdmaSlotLength.setStatus('current')
wlanIfaceTdmaBeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 3, 1, 45), Integer32().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfaceTdmaBeaconInterval.setStatus('current')
wlanIfacePeerTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 4), )
if mibBuilder.loadTexts: wlanIfacePeerTable.setStatus('current')
wlanIfacePeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 4, 1), ).setIndexNames((0, "BEGEMOT-WIRELESS-MIB", "wlanIfaceName"), (0, "BEGEMOT-WIRELESS-MIB", "wlanIfacePeerAddress"))
if mibBuilder.loadTexts: wlanIfacePeerEntry.setStatus('current')
wlanIfacePeerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 4, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfacePeerAddress.setStatus('current')
wlanIfacePeerAssociationId = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfacePeerAssociationId.setStatus('current')
wlanIfacePeerVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfacePeerVlanTag.setStatus('current')
wlanIfacePeerFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfacePeerFrequency.setStatus('current')
wlanIfacePeerCurrentTXRate = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfacePeerCurrentTXRate.setStatus('current')
wlanIfacePeerRxSignalStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfacePeerRxSignalStrength.setStatus('current')
wlanIfacePeerIdleTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 4, 1, 7), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfacePeerIdleTimer.setStatus('current')
wlanIfacePeerTxSequenceNo = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 4, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfacePeerTxSequenceNo.setStatus('current')
wlanIfacePeerRxSequenceNo = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfacePeerRxSequenceNo.setStatus('current')
wlanIfacePeerTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 4, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfacePeerTxPower.setStatus('current')
wlanIfacePeerCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 4, 1, 11), WlanPeerCapabilityFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfacePeerCapabilities.setStatus('current')
wlanIfacePeerFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 4, 1, 12), Bits().clone(namedValues=NamedValues(("authorizedForData", 1), ("qosEnabled", 2), ("erpEnabled", 3), ("powerSaveMode", 4), ("authRefHeld", 5), ("htEnabled", 6), ("htCompat", 7), ("wpsAssoc", 8), ("tsnAssoc", 9), ("ampduRx", 10), ("ampduTx", 11), ("mimoPowerSave", 12), ("sendRts", 13), ("rifs", 14), ("shortGiHT20", 15), ("shortGiHT40", 16), ("amsduRx", 17), ("amsduTx", 18)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfacePeerFlags.setStatus('current')
wlanIfaceChannelTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 5), )
if mibBuilder.loadTexts: wlanIfaceChannelTable.setStatus('current')
wlanIfaceChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 5, 1), ).setIndexNames((0, "BEGEMOT-WIRELESS-MIB", "wlanIfaceName"), (0, "BEGEMOT-WIRELESS-MIB", "wlanIfaceChannelId"))
if mibBuilder.loadTexts: wlanIfaceChannelEntry.setStatus('current')
wlanIfaceChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1536)))
if mibBuilder.loadTexts: wlanIfaceChannelId.setStatus('current')
wlanIfaceChannelIeeeId = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfaceChannelIeeeId.setStatus('current')
wlanIfaceChannelType = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("fhss", 1), ("dot11a", 2), ("dot11b", 3), ("dot11g", 4), ("tenMHz", 5), ("fiveMHz", 6), ("turbo", 7), ("ht", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfaceChannelType.setStatus('current')
wlanIfaceChannelFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 5, 1, 4), Bits().clone(namedValues=NamedValues(("turbo", 1), ("cck", 2), ("ofdm", 3), ("spectrum2Ghz", 4), ("spectrum5Ghz", 5), ("passiveScan", 6), ("dynamicCckOfdm", 7), ("gfsk", 8), ("spectrum900Mhz", 9), ("dot11aStaticTurbo", 10), ("halfRate", 11), ("quarterRate", 12), ("ht20", 13), ("ht40u", 14), ("ht40d", 15), ("dfs", 16), ("xmit4ms", 17), ("noAdhoc", 18), ("noHostAp", 19), ("dot11d", 20)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfaceChannelFlags.setStatus('current')
wlanIfaceChannelFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfaceChannelFrequency.setStatus('current')
wlanIfaceChannelMaxRegPower = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfaceChannelMaxRegPower.setStatus('current')
wlanIfaceChannelMaxTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 5, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfaceChannelMaxTxPower.setStatus('current')
wlanIfaceChannelMinTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 5, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfaceChannelMinTxPower.setStatus('current')
wlanIfaceChannelState = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 5, 1, 9), Bits().clone(namedValues=NamedValues(("radar", 1), ("cacDone", 2), ("interferenceDetected", 3), ("radarClear", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfaceChannelState.setStatus('current')
wlanIfaceChannelHTExtension = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 5, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfaceChannelHTExtension.setStatus('current')
wlanIfaceChannelMaxAntennaGain = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 5, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfaceChannelMaxAntennaGain.setStatus('current')
wlanScanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 2, 1), )
if mibBuilder.loadTexts: wlanScanConfigTable.setStatus('current')
wlanScanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 2, 1, 1), ).setIndexNames((0, "BEGEMOT-WIRELESS-MIB", "wlanIfaceName"))
if mibBuilder.loadTexts: wlanScanConfigEntry.setStatus('current')
wlanScanFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 2, 1, 1, 1), Bits().clone(namedValues=NamedValues(("noSelection", 1), ("activeScan", 2), ("pickFirst", 3), ("backgroundScan", 4), ("once", 5), ("noBroadcast", 6), ("noAutoSequencing", 7), ("flushCashe", 8), ("chechCashe", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanScanFlags.setStatus('current')
wlanScanDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanScanDuration.setStatus('current')
wlanScanMinChannelDwellTime = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 2, 1, 1, 3), Integer32()).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanScanMinChannelDwellTime.setStatus('current')
wlanScanMaxChannelDwellTime = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 2, 1, 1, 4), Integer32()).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanScanMaxChannelDwellTime.setStatus('current')
wlanScanConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("notStarted", 1), ("running", 2), ("finished", 3), ("cancel", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanScanConfigStatus.setStatus('current')
wlanScanResultsTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 2, 2), )
if mibBuilder.loadTexts: wlanScanResultsTable.setStatus('current')
wlanScanResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 2, 2, 1), ).setIndexNames((0, "BEGEMOT-WIRELESS-MIB", "wlanIfaceName"), (0, "BEGEMOT-WIRELESS-MIB", "wlanScanResultID"), (0, "BEGEMOT-WIRELESS-MIB", "wlanScanResultBssid"))
if mibBuilder.loadTexts: wlanScanResultsEntry.setStatus('current')
wlanScanResultID = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 2, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanScanResultID.setStatus('current')
wlanScanResultBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 2, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanScanResultBssid.setStatus('current')
wlanScanResultChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanScanResultChannel.setStatus('current')
wlanScanResultRate = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanScanResultRate.setStatus('current')
wlanScanResultNoise = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 2, 2, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanScanResultNoise.setStatus('current')
wlanScanResultBeaconInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanScanResultBeaconInterval.setStatus('current')
wlanScanResultCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 2, 2, 1, 7), WlanPeerCapabilityFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanScanResultCapabilities.setStatus('current')
wlanIfRoamParamsTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 6), )
if mibBuilder.loadTexts: wlanIfRoamParamsTable.setStatus('current')
wlanIfRoamParamsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 6, 1), ).setIndexNames((0, "BEGEMOT-WIRELESS-MIB", "wlanIfaceName"), (0, "BEGEMOT-WIRELESS-MIB", "wlanIfRoamPhyMode"))
if mibBuilder.loadTexts: wlanIfRoamParamsEntry.setStatus('current')
wlanIfRoamPhyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 6, 1, 1), WlanIfPhyMode())
if mibBuilder.loadTexts: wlanIfRoamPhyMode.setStatus('current')
wlanIfRoamRxSignalStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfRoamRxSignalStrength.setStatus('current')
wlanIfRoamTxRateThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanIfRoamTxRateThreshold.setStatus('current')
wlanIfTxParamsTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 7), )
if mibBuilder.loadTexts: wlanIfTxParamsTable.setStatus('current')
wlanIfTxParamsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 7, 1), ).setIndexNames((0, "BEGEMOT-WIRELESS-MIB", "wlanIfaceName"), (0, "BEGEMOT-WIRELESS-MIB", "wlanIfTxPhyMode"))
if mibBuilder.loadTexts: wlanIfTxParamsEntry.setStatus('current')
wlanIfTxPhyMode = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 7, 1, 1), WlanIfPhyMode())
if mibBuilder.loadTexts: wlanIfTxPhyMode.setStatus('current')
wlanIfTxUnicastRate = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 7, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfTxUnicastRate.setStatus('current')
wlanIfTxMcastRate = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 7, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfTxMcastRate.setStatus('current')
wlanIfTxMgmtRate = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 7, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfTxMgmtRate.setStatus('current')
wlanIfTxMaxRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 1, 7, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanIfTxMaxRetryCount.setStatus('current')
wlanIfaceStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1), )
if mibBuilder.loadTexts: wlanIfaceStatisticsTable.setStatus('current')
wlanIfaceStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1), )
wlanInterfaceEntry.registerAugmentions(("BEGEMOT-WIRELESS-MIB", "wlanIfaceStatisticsEntry"))
wlanIfaceStatisticsEntry.setIndexNames(*wlanInterfaceEntry.getIndexNames())
if mibBuilder.loadTexts: wlanIfaceStatisticsEntry.setStatus('current')
wlanStatsRxBadVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 1), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxBadVersion.setStatus('current')
wlanStatsRxTooShort = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 2), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxTooShort.setStatus('current')
wlanStatsRxWrongBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 3), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxWrongBssid.setStatus('current')
wlanStatsRxDiscardedDups = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 4), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxDiscardedDups.setStatus('current')
wlanStatsRxWrongDir = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 5), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxWrongDir.setStatus('current')
wlanStatsRxDiscardMcastEcho = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 6), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxDiscardMcastEcho.setStatus('current')
wlanStatsRxDiscardNoAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 7), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxDiscardNoAssoc.setStatus('current')
wlanStatsRxWepNoPrivacy = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 8), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxWepNoPrivacy.setStatus('current')
wlanStatsRxWepUnencrypted = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 9), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxWepUnencrypted.setStatus('current')
wlanStatsRxWepFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 10), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxWepFailed.setStatus('current')
wlanStatsRxDecapsulationFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 11), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxDecapsulationFailed.setStatus('current')
wlanStatsRxDiscardMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 12), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxDiscardMgmt.setStatus('current')
wlanStatsRxControl = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 13), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxControl.setStatus('current')
wlanStatsRxBeacon = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 14), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxBeacon.setStatus('current')
wlanStatsRxRateSetTooBig = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 15), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxRateSetTooBig.setStatus('current')
wlanStatsRxElemMissing = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 16), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxElemMissing.setStatus('current')
wlanStatsRxElemTooBig = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 17), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxElemTooBig.setStatus('current')
wlanStatsRxElemTooSmall = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 18), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxElemTooSmall.setStatus('current')
wlanStatsRxElemUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 19), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxElemUnknown.setStatus('current')
wlanStatsRxChannelMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 20), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxChannelMismatch.setStatus('current')
wlanStatsRxDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 21), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxDropped.setStatus('current')
wlanStatsRxSsidMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 22), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxSsidMismatch.setStatus('current')
wlanStatsRxAuthNotSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 23), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxAuthNotSupported.setStatus('current')
wlanStatsRxAuthFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 24), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxAuthFailed.setStatus('current')
wlanStatsRxAuthCM = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 25), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxAuthCM.setStatus('current')
wlanStatsRxAssocWrongBssid = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 26), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxAssocWrongBssid.setStatus('current')
wlanStatsRxAssocNoAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 27), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxAssocNoAuth.setStatus('current')
wlanStatsRxAssocCapMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 28), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxAssocCapMismatch.setStatus('current')
wlanStatsRxAssocNoRateMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 29), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxAssocNoRateMatch.setStatus('current')
wlanStatsRxBadWpaIE = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 30), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxBadWpaIE.setStatus('current')
wlanStatsRxDeauthenticate = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 31), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxDeauthenticate.setStatus('current')
wlanStatsRxDisassociate = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 32), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxDisassociate.setStatus('current')
wlanStatsRxUnknownSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 33), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxUnknownSubtype.setStatus('current')
wlanStatsRxFailedNoBuf = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 34), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxFailedNoBuf.setStatus('current')
wlanStatsRxBadAuthRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 35), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxBadAuthRequest.setStatus('current')
wlanStatsRxUnAuthorized = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 36), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxUnAuthorized.setStatus('current')
wlanStatsRxBadKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 37), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxBadKeyId.setStatus('current')
wlanStatsRxCCMPSeqViolation = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 38), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxCCMPSeqViolation.setStatus('current')
wlanStatsRxCCMPBadFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 39), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxCCMPBadFormat.setStatus('current')
wlanStatsRxCCMPFailedMIC = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 40), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxCCMPFailedMIC.setStatus('current')
wlanStatsRxTKIPSeqViolation = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 41), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxTKIPSeqViolation.setStatus('current')
wlanStatsRxTKIPBadFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 42), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxTKIPBadFormat.setStatus('current')
wlanStatsRxTKIPFailedMIC = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 43), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxTKIPFailedMIC.setStatus('current')
wlanStatsRxTKIPFailedICV = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 44), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxTKIPFailedICV.setStatus('current')
wlanStatsRxDiscardACL = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 45), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxDiscardACL.setStatus('current')
wlanStatsTxFailedNoBuf = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 46), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsTxFailedNoBuf.setStatus('current')
wlanStatsTxFailedNoNode = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 47), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsTxFailedNoNode.setStatus('current')
wlanStatsTxUnknownMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 48), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsTxUnknownMgmt.setStatus('current')
wlanStatsTxBadCipher = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 49), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsTxBadCipher.setStatus('current')
wlanStatsTxNoDefKey = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 50), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsTxNoDefKey.setStatus('current')
wlanStatsTxFragmented = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 51), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsTxFragmented.setStatus('current')
wlanStatsTxFragmentsCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 52), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsTxFragmentsCreated.setStatus('current')
wlanStatsActiveScans = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsActiveScans.setStatus('current')
wlanStatsPassiveScans = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsPassiveScans.setStatus('current')
wlanStatsTimeoutInactivity = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsTimeoutInactivity.setStatus('current')
wlanStatsCryptoNoMem = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsCryptoNoMem.setStatus('current')
wlanStatsSwCryptoTKIP = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsSwCryptoTKIP.setStatus('current')
wlanStatsSwCryptoTKIPEnMIC = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsSwCryptoTKIPEnMIC.setStatus('current')
wlanStatsSwCryptoTKIPDeMIC = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 59), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsSwCryptoTKIPDeMIC.setStatus('current')
wlanStatsCryptoTKIPCM = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 60), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsCryptoTKIPCM.setStatus('current')
wlanStatsSwCryptoCCMP = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 61), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsSwCryptoCCMP.setStatus('current')
wlanStatsSwCryptoWEP = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsSwCryptoWEP.setStatus('current')
wlanStatsCryptoCipherKeyRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 63), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsCryptoCipherKeyRejected.setStatus('current')
wlanStatsCryptoNoKey = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 64), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsCryptoNoKey.setStatus('current')
wlanStatsCryptoDeleteKeyFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 65), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsCryptoDeleteKeyFailed.setStatus('current')
wlanStatsCryptoUnknownCipher = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 66), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsCryptoUnknownCipher.setStatus('current')
wlanStatsCryptoAttachFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 67), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsCryptoAttachFailed.setStatus('current')
wlanStatsCryptoKeyFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 68), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsCryptoKeyFailed.setStatus('current')
wlanStatsCryptoEnMICFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 69), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsCryptoEnMICFailed.setStatus('current')
wlanStatsIBSSCapMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 70), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsIBSSCapMismatch.setStatus('current')
wlanStatsUnassocStaPSPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 71), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsUnassocStaPSPoll.setStatus('current')
wlanStatsBadAidPSPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 72), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsBadAidPSPoll.setStatus('current')
wlanStatsEmptyPSPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 73), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsEmptyPSPoll.setStatus('current')
wlanStatsRxFFBadHdr = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 74), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxFFBadHdr.setStatus('current')
wlanStatsRxFFTooShort = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 75), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxFFTooShort.setStatus('current')
wlanStatsRxFFSplitError = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 76), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxFFSplitError.setStatus('current')
wlanStatsRxFFDecap = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 77), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxFFDecap.setStatus('current')
wlanStatsTxFFEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 78), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsTxFFEncap.setStatus('current')
wlanStatsRxBadBintval = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 79), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxBadBintval.setStatus('current')
wlanStatsRxDemicFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 80), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxDemicFailed.setStatus('current')
wlanStatsRxDefragFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 81), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxDefragFailed.setStatus('current')
wlanStatsRxMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 82), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxMgmt.setStatus('current')
wlanStatsRxActionMgmt = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 83), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxActionMgmt.setStatus('current')
wlanStatsRxAMSDUTooShort = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 84), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxAMSDUTooShort.setStatus('current')
wlanStatsRxAMSDUSplitError = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 85), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxAMSDUSplitError.setStatus('current')
wlanStatsRxAMSDUDecap = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 86), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxAMSDUDecap.setStatus('current')
wlanStatsTxAMSDUEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 87), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsTxAMSDUEncap.setStatus('current')
wlanStatsAMPDUBadBAR = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 88), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsAMPDUBadBAR.setStatus('current')
wlanStatsAMPDUOowBar = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 89), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsAMPDUOowBar.setStatus('current')
wlanStatsAMPDUMovedBAR = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 90), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsAMPDUMovedBAR.setStatus('current')
wlanStatsAMPDURxBAR = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 91), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsAMPDURxBAR.setStatus('current')
wlanStatsAMPDURxOor = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 92), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsAMPDURxOor.setStatus('current')
wlanStatsAMPDURxCopied = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 93), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsAMPDURxCopied.setStatus('current')
wlanStatsAMPDURxDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 94), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsAMPDURxDropped.setStatus('current')
wlanStatsTxDiscardBadState = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 95), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsTxDiscardBadState.setStatus('current')
wlanStatsTxFailedNoAssoc = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 96), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsTxFailedNoAssoc.setStatus('current')
wlanStatsTxClassifyFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 97), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsTxClassifyFailed.setStatus('current')
wlanStatsDwdsMcastDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 98), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsDwdsMcastDiscard.setStatus('current')
wlanStatsHTAssocRejectNoHT = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 99), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsHTAssocRejectNoHT.setStatus('current')
wlanStatsHTAssocDowngrade = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 100), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsHTAssocDowngrade.setStatus('current')
wlanStatsHTAssocRateMismatch = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 101), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsHTAssocRateMismatch.setStatus('current')
wlanStatsAMPDURxAge = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 102), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsAMPDURxAge.setStatus('current')
wlanStatsAMPDUMoved = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 103), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsAMPDUMoved.setStatus('current')
wlanStatsADDBADisabledReject = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 104), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsADDBADisabledReject.setStatus('current')
wlanStatsADDBANoRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 105), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsADDBANoRequest.setStatus('current')
wlanStatsADDBABadToken = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 106), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsADDBABadToken.setStatus('current')
wlanStatsADDBABadPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 107), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsADDBABadPolicy.setStatus('current')
wlanStatsAMPDUStopped = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 108), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsAMPDUStopped.setStatus('current')
wlanStatsAMPDUStopFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 109), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsAMPDUStopFailed.setStatus('current')
wlanStatsAMPDURxReorder = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 110), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsAMPDURxReorder.setStatus('current')
wlanStatsScansBackground = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 111), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsScansBackground.setStatus('current')
wlanLastDeauthReason = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 112), WlanMgmtReasonCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanLastDeauthReason.setStatus('current')
wlanLastDissasocReason = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 113), WlanMgmtReasonCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanLastDissasocReason.setStatus('current')
wlanLastAuthFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 114), WlanMgmtReasonCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanLastAuthFailReason.setStatus('current')
wlanStatsBeaconMissedEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 115), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsBeaconMissedEvents.setStatus('current')
wlanStatsRxDiscardBadStates = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 116), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsRxDiscardBadStates.setStatus('current')
wlanStatsFFFlushed = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 117), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsFFFlushed.setStatus('current')
wlanStatsTxControlFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 118), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsTxControlFrames.setStatus('current')
wlanStatsAMPDURexmt = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 119), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsAMPDURexmt.setStatus('current')
wlanStatsAMPDURexmtFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 120), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanStatsAMPDURexmtFailed.setStatus('current')
wlanStatsReset = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 3, 1, 1, 121), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no-op", 1), ("clear", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanStatsReset.setStatus('current')
wlanWepInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 4, 1), )
if mibBuilder.loadTexts: wlanWepInterfaceTable.setStatus('current')
wlanWepInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 4, 1, 1), ).setIndexNames((0, "BEGEMOT-WIRELESS-MIB", "wlanIfaceName"))
if mibBuilder.loadTexts: wlanWepInterfaceEntry.setStatus('current')
wlanWepMode = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("off", 0), ("on", 1), ("mixed", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanWepMode.setStatus('current')
wlanWepDefTxKey = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 4, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanWepDefTxKey.setStatus('current')
wlanWepKeyTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 4, 2), )
if mibBuilder.loadTexts: wlanWepKeyTable.setStatus('current')
wlanWepKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 4, 2, 1), ).setIndexNames((0, "BEGEMOT-WIRELESS-MIB", "wlanIfaceName"), (0, "BEGEMOT-WIRELESS-MIB", "wlanWepKeyID"))
if mibBuilder.loadTexts: wlanWepKeyEntry.setStatus('current')
wlanWepKeyID = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanWepKeyID.setStatus('current')
wlanWepKeyLength = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 4, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanWepKeyLength.setStatus('current')
wlanWepKeySet = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 4, 2, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanWepKeySet.setStatus('current')
wlanWepKeyHash = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 4, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanWepKeyHash.setStatus('current')
wlanWepKeyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 4, 2, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanWepKeyStatus.setStatus('current')
wlanMACAccessControlTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 5, 1), )
if mibBuilder.loadTexts: wlanMACAccessControlTable.setStatus('current')
wlanMACAccessControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 5, 1, 1), ).setIndexNames((0, "BEGEMOT-WIRELESS-MIB", "wlanIfaceName"))
if mibBuilder.loadTexts: wlanMACAccessControlEntry.setStatus('current')
wlanMACAccessControlPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 7))).clone(namedValues=NamedValues(("open", 0), ("allow", 1), ("deny", 2), ("radius", 7))).clone('open')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMACAccessControlPolicy.setStatus('current')
wlanMACAccessControlNacl = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 5, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMACAccessControlNacl.setStatus('current')
wlanMACAccessControlFlush = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no-op", 0), ("flush", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMACAccessControlFlush.setStatus('current')
wlanMACAccessControlMACTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 5, 2), )
if mibBuilder.loadTexts: wlanMACAccessControlMACTable.setStatus('current')
wlanMACAccessControlMACEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 5, 2, 1), ).setIndexNames((0, "BEGEMOT-WIRELESS-MIB", "wlanIfaceName"), (0, "BEGEMOT-WIRELESS-MIB", "wlanMACAccessControlMAC"))
if mibBuilder.loadTexts: wlanMACAccessControlMACEntry.setStatus('current')
wlanMACAccessControlMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 5, 2, 1, 1), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMACAccessControlMAC.setStatus('current')
wlanMACAccessControlMACStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 5, 2, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMACAccessControlMACStatus.setStatus('current')
wlanMeshRoutingConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 1))
wlanMeshInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2))
wlanMeshRoute = MibIdentifier((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 3))
wlanMeshStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 4))
wlanMeshRouteProtocols = MibIdentifier((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5))
wlanMeshMaxRetries = MibScalar((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 1, 1), Integer32().clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMeshMaxRetries.setStatus('current')
wlanMeshConfirmTimeout = MibScalar((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 1, 2), Integer32().clone(40)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMeshConfirmTimeout.setStatus('current')
wlanMeshHoldingTimeout = MibScalar((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 1, 3), Integer32().clone(40)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMeshHoldingTimeout.setStatus('current')
wlanMeshRetryTimeout = MibScalar((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 1, 4), Integer32().clone(40)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMeshRetryTimeout.setStatus('current')
wlanMeshInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 1), )
if mibBuilder.loadTexts: wlanMeshInterfaceTable.setStatus('current')
wlanMeshInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 1, 1), ).setIndexNames((0, "BEGEMOT-WIRELESS-MIB", "wlanIfaceName"))
if mibBuilder.loadTexts: wlanMeshInterfaceEntry.setStatus('current')
wlanMeshId = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMeshId.setStatus('current')
wlanMeshTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 1, 1, 2), Integer32().clone(31)).setUnits('hops').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMeshTTL.setStatus('current')
wlanMeshPeeringEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 1, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMeshPeeringEnabled.setStatus('current')
wlanMeshForwardingEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 1, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMeshForwardingEnabled.setStatus('current')
wlanMeshMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unknown", 0), ("airtime", 1))).clone('airtime')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMeshMetric.setStatus('current')
wlanMeshPath = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unknown", 0), ("hwmp", 1))).clone('hwmp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMeshPath.setStatus('current')
wlanMeshRoutesFlush = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no-op", 0), ("flush", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMeshRoutesFlush.setStatus('current')
wlanMeshNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 2), )
if mibBuilder.loadTexts: wlanMeshNeighborTable.setStatus('current')
wlanMeshNeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 2, 1), ).setIndexNames((0, "BEGEMOT-WIRELESS-MIB", "wlanIfaceName"), (0, "BEGEMOT-WIRELESS-MIB", "wlanMeshNeighborAddress"))
if mibBuilder.loadTexts: wlanMeshNeighborEntry.setStatus('current')
wlanMeshNeighborAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 2, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshNeighborAddress.setStatus('current')
wlanMeshNeighborFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshNeighborFrequency.setStatus('current')
wlanMeshNeighborLocalId = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshNeighborLocalId.setStatus('current')
wlanMeshNeighborPeerId = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshNeighborPeerId.setStatus('current')
wlanMeshNeighborPeerState = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("idle", 0), ("openTx", 1), ("openRx", 2), ("confirmRx", 3), ("established", 4), ("closing", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshNeighborPeerState.setStatus('current')
wlanMeshNeighborCurrentTXRate = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshNeighborCurrentTXRate.setStatus('current')
wlanMeshNeighborRxSignalStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshNeighborRxSignalStrength.setStatus('current')
wlanMeshNeighborIdleTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 2, 1, 8), Integer32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshNeighborIdleTimer.setStatus('current')
wlanMeshNeighborTxSequenceNo = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshNeighborTxSequenceNo.setStatus('current')
wlanMeshNeighborRxSequenceNo = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 2, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshNeighborRxSequenceNo.setStatus('current')
wlanMeshRouteTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 3, 1), )
if mibBuilder.loadTexts: wlanMeshRouteTable.setStatus('current')
wlanMeshRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 3, 1, 1), ).setIndexNames((0, "BEGEMOT-WIRELESS-MIB", "wlanIfaceName"), (0, "BEGEMOT-WIRELESS-MIB", "wlanMeshRouteDestination"))
if mibBuilder.loadTexts: wlanMeshRouteEntry.setStatus('current')
wlanMeshRouteDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 3, 1, 1, 1), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wlanMeshRouteDestination.setStatus('current')
wlanMeshRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 3, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshRouteNextHop.setStatus('current')
wlanMeshRouteHops = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 3, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshRouteHops.setStatus('current')
wlanMeshRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 3, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshRouteMetric.setStatus('current')
wlanMeshRouteLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 3, 1, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshRouteLifeTime.setStatus('current')
wlanMeshRouteLastMseq = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 3, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshRouteLastMseq.setStatus('current')
wlanMeshRouteFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 3, 1, 1, 7), Bits().clone(namedValues=NamedValues(("valid", 1), ("proxy", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshRouteFlags.setStatus('current')
wlanMeshRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 3, 1, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanMeshRouteStatus.setStatus('current')
wlanMeshStatsTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 4, 1), )
if mibBuilder.loadTexts: wlanMeshStatsTable.setStatus('current')
wlanMeshStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 4, 1, 1), ).setIndexNames((0, "BEGEMOT-WIRELESS-MIB", "wlanIfaceName"))
if mibBuilder.loadTexts: wlanMeshStatsEntry.setStatus('current')
wlanMeshDroppedBadSta = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 4, 1, 1, 1), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshDroppedBadSta.setStatus('current')
wlanMeshDroppedNoLink = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 4, 1, 1, 2), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshDroppedNoLink.setStatus('current')
wlanMeshNoFwdTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 4, 1, 1, 3), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshNoFwdTtl.setStatus('current')
wlanMeshNoFwdBuf = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 4, 1, 1, 4), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshNoFwdBuf.setStatus('current')
wlanMeshNoFwdTooShort = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 4, 1, 1, 5), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshNoFwdTooShort.setStatus('current')
wlanMeshNoFwdDisabled = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 4, 1, 1, 6), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshNoFwdDisabled.setStatus('current')
wlanMeshNoFwdPathUnknown = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 4, 1, 1, 7), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshNoFwdPathUnknown.setStatus('current')
wlanMeshDroppedBadAE = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 4, 1, 1, 8), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshDroppedBadAE.setStatus('current')
wlanMeshRouteAddFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 4, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshRouteAddFailed.setStatus('current')
wlanMeshDroppedNoProxy = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 4, 1, 1, 10), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshDroppedNoProxy.setStatus('current')
wlanMeshDroppedMisaligned = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 4, 1, 1, 11), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshDroppedMisaligned.setStatus('current')
wlanMeshProtoHWMP = MibIdentifier((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1))
wlanMeshHWMPConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 1))
wlanMeshHWMPInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 2))
wlanMeshHWMPStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 3))
wlanHWMPRouteInactiveTimeout = MibScalar((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 1, 1), Integer32().clone(5000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanHWMPRouteInactiveTimeout.setStatus('current')
wlanHWMPRootAnnounceInterval = MibScalar((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 1, 2), Integer32().clone(1000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanHWMPRootAnnounceInterval.setStatus('current')
wlanHWMPRootInterval = MibScalar((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 1, 3), Integer32().clone(2000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanHWMPRootInterval.setStatus('current')
wlanHWMPRootTimeout = MibScalar((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 1, 4), Integer32().clone(5000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanHWMPRootTimeout.setStatus('current')
wlanHWMPPathLifetime = MibScalar((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 1, 5), Integer32().clone(500)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanHWMPPathLifetime.setStatus('current')
wlanHWMPReplyForwardBit = MibScalar((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 1, 6), Integer32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanHWMPReplyForwardBit.setStatus('current')
wlanHWMPTargetOnlyBit = MibScalar((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanHWMPTargetOnlyBit.setStatus('current')
wlanHWMPInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 2, 1), )
if mibBuilder.loadTexts: wlanHWMPInterfaceTable.setStatus('current')
wlanHWMPInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 2, 1, 1), ).setIndexNames((0, "BEGEMOT-WIRELESS-MIB", "wlanIfaceName"))
if mibBuilder.loadTexts: wlanHWMPInterfaceEntry.setStatus('current')
wlanHWMPRootMode = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("normal", 2), ("proactive", 3), ("rann", 4))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanHWMPRootMode.setStatus('current')
wlanHWMPMaxHops = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 2, 1, 1, 2), Integer32().clone(31)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wlanHWMPMaxHops.setStatus('current')
wlanMeshHWMPStatsTable = MibTable((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 3, 1), )
if mibBuilder.loadTexts: wlanMeshHWMPStatsTable.setStatus('current')
wlanMeshHWMPStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 3, 1, 1), ).setIndexNames((0, "BEGEMOT-WIRELESS-MIB", "wlanIfaceName"))
if mibBuilder.loadTexts: wlanMeshHWMPStatsEntry.setStatus('current')
wlanMeshHWMPWrongSeqNo = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 3, 1, 1, 1), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshHWMPWrongSeqNo.setStatus('current')
wlanMeshHWMPTxRootPREQ = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 3, 1, 1, 2), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshHWMPTxRootPREQ.setStatus('current')
wlanMeshHWMPTxRootRANN = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 3, 1, 1, 3), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshHWMPTxRootRANN.setStatus('current')
wlanMeshHWMPProxy = MibTableColumn((1, 3, 6, 1, 4, 1, 12325, 1, 210, 6, 5, 1, 3, 1, 1, 4), Counter32()).setUnits('frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: wlanMeshHWMPProxy.setStatus('current')
mibBuilder.exportSymbols("BEGEMOT-WIRELESS-MIB", wlanMeshNeighborRxSequenceNo=wlanMeshNeighborRxSequenceNo, wlanIfaceHideSsid=wlanIfaceHideSsid, wlanIfacePeerIdleTimer=wlanIfacePeerIdleTimer, wlanStatsRxBadVersion=wlanStatsRxBadVersion, wlanIfaceDot11nAmpdu=wlanIfaceDot11nAmpdu, wlanStatsRxRateSetTooBig=wlanStatsRxRateSetTooBig, wlanIfaceFastFrames=wlanIfaceFastFrames, wlanIfRoamParamsEntry=wlanIfRoamParamsEntry, wlanStatsRxActionMgmt=wlanStatsRxActionMgmt, wlanStatsRxDiscardNoAssoc=wlanStatsRxDiscardNoAssoc, wlanIfaceBgScanIdle=wlanIfaceBgScanIdle, wlanStatsRxFFDecap=wlanStatsRxFFDecap, wlanStatsRxUnknownSubtype=wlanStatsRxUnknownSubtype, wlanStatsScansBackground=wlanStatsScansBackground, wlanStatsRxFFBadHdr=wlanStatsRxFFBadHdr, wlanIfaceState=wlanIfaceState, wlanMACAccessControlMACTable=wlanMACAccessControlMACTable, wlanIfaceTdmaBeaconInterval=wlanIfaceTdmaBeaconInterval, wlanMeshNoFwdDisabled=wlanMeshNoFwdDisabled, wlanIfaceChannelMaxTxPower=wlanIfaceChannelMaxTxPower, wlanMeshRoutingConfig=wlanMeshRoutingConfig, wlanIfaceRegDomain=wlanIfaceRegDomain, WlanMgmtReasonCode=WlanMgmtReasonCode, wlanStatsRxDropped=wlanStatsRxDropped, wlanIfaceRoamingMode=wlanIfaceRoamingMode, wlanIfaceDot11gPureMode=wlanIfaceDot11gPureMode, wlanScanResultBeaconInterval=wlanScanResultBeaconInterval, wlanIfaceStatisticsEntry=wlanIfaceStatisticsEntry, WlanRegDomainCode=WlanRegDomainCode, wlanStatsTxFailedNoNode=wlanStatsTxFailedNoNode, wlanStatsRxElemTooSmall=wlanStatsRxElemTooSmall, begemotWlanScanning=begemotWlanScanning, wlanIfaceChannelHTExtension=wlanIfaceChannelHTExtension, wlanStatsRxBadWpaIE=wlanStatsRxBadWpaIE, wlanMeshPath=wlanMeshPath, wlanIfParentTable=wlanIfParentTable, wlanMACAccessControlTable=wlanMACAccessControlTable, wlanStatsRxAuthCM=wlanStatsRxAuthCM, wlanStatsSwCryptoWEP=wlanStatsSwCryptoWEP, wlanIfaceConfigEntry=wlanIfaceConfigEntry, wlanStatsAMPDURxDropped=wlanStatsAMPDURxDropped, wlanScanResultBssid=wlanScanResultBssid, wlanMeshDroppedNoLink=wlanMeshDroppedNoLink, wlanMeshHWMPInterface=wlanMeshHWMPInterface, wlanIfaceFragmentThreshold=wlanIfaceFragmentThreshold, wlanHWMPInterfaceEntry=wlanHWMPInterfaceEntry, wlanMeshNoFwdPathUnknown=wlanMeshNoFwdPathUnknown, wlanScanFlags=wlanScanFlags, wlanScanResultsTable=wlanScanResultsTable, wlanStatsRxDiscardACL=wlanStatsRxDiscardACL, wlanMeshProtoHWMP=wlanMeshProtoHWMP, wlanStatsTxUnknownMgmt=wlanStatsTxUnknownMgmt, wlanIfaceDot11nPureMode=wlanIfaceDot11nPureMode, wlanIfaceDynamicWds=wlanIfaceDynamicWds, wlanIfacePeerVlanTag=wlanIfacePeerVlanTag, wlanStatsRxFFTooShort=wlanStatsRxFFTooShort, wlanStatsRxDefragFailed=wlanStatsRxDefragFailed, wlanScanResultChannel=wlanScanResultChannel, wlanStatsRxMgmt=wlanStatsRxMgmt, wlanIfaceBgScanInterval=wlanIfaceBgScanInterval, wlanIfaceDot11gProtMode=wlanIfaceDot11gProtMode, wlanStatsSwCryptoTKIP=wlanStatsSwCryptoTKIP, wlanStatsRxTKIPFailedICV=wlanStatsRxTKIPFailedICV, wlanStatsCryptoKeyFailed=wlanStatsCryptoKeyFailed, wlanIfacePeerTxSequenceNo=wlanIfacePeerTxSequenceNo, begemotWlanNotifications=begemotWlanNotifications, wlanIfParentEntry=wlanIfParentEntry, wlanStatsAMPDUStopFailed=wlanStatsAMPDUStopFailed, wlanMeshMaxRetries=wlanMeshMaxRetries, wlanStatsAMPDUOowBar=wlanStatsAMPDUOowBar, wlanIfacePeerFlags=wlanIfacePeerFlags, wlanStatsRxElemMissing=wlanStatsRxElemMissing, begemotWlanMACAccessControl=begemotWlanMACAccessControl, wlanStatsAMPDURxReorder=wlanStatsAMPDURxReorder, wlanMeshNeighborLocalId=wlanMeshNeighborLocalId, wlanMeshNeighborCurrentTXRate=wlanMeshNeighborCurrentTXRate, wlanStatsTxNoDefKey=wlanStatsTxNoDefKey, wlanWepKeyID=wlanWepKeyID, wlanMeshRouteTable=wlanMeshRouteTable, wlanStatsRxTooShort=wlanStatsRxTooShort, wlanIfaceDot11d=wlanIfaceDot11d, begemotWlanInterface=begemotWlanInterface, begemotWlanMeshRouting=begemotWlanMeshRouting, wlanMACAccessControlFlush=wlanMACAccessControlFlush, wlanStatsAMPDURxCopied=wlanStatsAMPDURxCopied, wlanIfaceChannelFlags=wlanIfaceChannelFlags, wlanScanResultCapabilities=wlanScanResultCapabilities, WlanIfPhyMode=WlanIfPhyMode, wlanStatsRxDemicFailed=wlanStatsRxDemicFailed, wlanMACAccessControlMACStatus=wlanMACAccessControlMACStatus, wlanIfacePowerSave=wlanIfacePowerSave, wlanIfacePeerTable=wlanIfacePeerTable, wlanMeshRouteProtocols=wlanMeshRouteProtocols, wlanWepMode=wlanWepMode, wlanIfaceDesiredBssid=wlanIfaceDesiredBssid, wlanStatsRxAssocWrongBssid=wlanStatsRxAssocWrongBssid, wlanIfRoamPhyMode=wlanIfRoamPhyMode, wlanMeshNeighborFrequency=wlanMeshNeighborFrequency, wlanScanConfigTable=wlanScanConfigTable, wlanIfaceDot11nShortGI=wlanIfaceDot11nShortGI, wlanWepKeyLength=wlanWepKeyLength, wlanMeshDroppedMisaligned=wlanMeshDroppedMisaligned, wlanMeshHWMPTxRootRANN=wlanMeshHWMPTxRootRANN, wlanStatsRxAuthNotSupported=wlanStatsRxAuthNotSupported, wlanStatsRxElemUnknown=wlanStatsRxElemUnknown, wlanStatsRxAssocNoAuth=wlanStatsRxAssocNoAuth, wlanHWMPRootMode=wlanHWMPRootMode, wlanLastDeauthReason=wlanLastDeauthReason, wlanIfacePeerCurrentTXRate=wlanIfacePeerCurrentTXRate, wlanIfTxParamsEntry=wlanIfTxParamsEntry, wlanIfaceDot11nAmpduDensity=wlanIfaceDot11nAmpduDensity, wlanIfacePeerAssociationId=wlanIfacePeerAssociationId, wlanHWMPTargetOnlyBit=wlanHWMPTargetOnlyBit, wlanIfaceApBridge=wlanIfaceApBridge, wlanInterfaceTable=wlanInterfaceTable, wlanStatsEmptyPSPoll=wlanStatsEmptyPSPoll, wlanStatsADDBABadPolicy=wlanStatsADDBABadPolicy, wlanStatsRxDisassociate=wlanStatsRxDisassociate, WlanMgmtMeshReasonCode=WlanMgmtMeshReasonCode, begemotWlan=begemotWlan, wlanMeshRouteFlags=wlanMeshRouteFlags, wlanMeshStatistics=wlanMeshStatistics, wlanLastAuthFailReason=wlanLastAuthFailReason, wlanScanConfigStatus=wlanScanConfigStatus, wlanMeshDroppedBadSta=wlanMeshDroppedBadSta, wlanWepInterfaceTable=wlanWepInterfaceTable, wlanStatsRxDeauthenticate=wlanStatsRxDeauthenticate, WlanPeerCapabilityFlags=WlanPeerCapabilityFlags, wlanStatsIBSSCapMismatch=wlanStatsIBSSCapMismatch, wlanIfTxParamsTable=wlanIfTxParamsTable, wlanStatsHTAssocDowngrade=wlanStatsHTAssocDowngrade, wlanMeshStatsTable=wlanMeshStatsTable, wlanMeshRouteDestination=wlanMeshRouteDestination, wlanMeshHWMPProxy=wlanMeshHWMPProxy, wlanIfTxUnicastRate=wlanIfTxUnicastRate, wlanMeshNeighborEntry=wlanMeshNeighborEntry, wlanStatsCryptoNoKey=wlanStatsCryptoNoKey, wlanIfaceInactivityProccess=wlanIfaceInactivityProccess, wlanIfaceName=wlanIfaceName, wlanIfaceChannelMinTxPower=wlanIfaceChannelMinTxPower, wlanIfTxMcastRate=wlanIfTxMcastRate, wlanIfRoamRxSignalStrength=wlanIfRoamRxSignalStrength, wlanLastDissasocReason=wlanLastDissasocReason, wlanIfaceChannelType=wlanIfaceChannelType, wlanScanResultID=wlanScanResultID, wlanIfaceDot11nAmsduLimit=wlanIfaceDot11nAmsduLimit, wlanMeshMetric=wlanMeshMetric, wlanStatsRxDiscardMcastEcho=wlanStatsRxDiscardMcastEcho, wlanStatsRxWepUnencrypted=wlanStatsRxWepUnencrypted, wlanMeshForwardingEnabled=wlanMeshForwardingEnabled, wlanIfaceConfigTable=wlanIfaceConfigTable, begemotWlanWep=begemotWlanWep, wlanMeshNoFwdTtl=wlanMeshNoFwdTtl, wlanMeshNoFwdBuf=wlanMeshNoFwdBuf, wlanMACAccessControlMAC=wlanMACAccessControlMAC, wlanStatsADDBABadToken=wlanStatsADDBABadToken, wlanMeshPeeringEnabled=wlanMeshPeeringEnabled, wlanIfaceBssid=wlanIfaceBssid, wlanIfaceChannelIeeeId=wlanIfaceChannelIeeeId, wlanIfaceChannelMaxRegPower=wlanIfaceChannelMaxRegPower, wlanScanMinChannelDwellTime=wlanScanMinChannelDwellTime, wlanMeshHoldingTimeout=wlanMeshHoldingTimeout, wlanStatsCryptoEnMICFailed=wlanStatsCryptoEnMICFailed, wlanWepKeySet=wlanWepKeySet, wlanScanConfigEntry=wlanScanConfigEntry, wlanStatsHTAssocRejectNoHT=wlanStatsHTAssocRejectNoHT, wlanStatsRxAssocNoRateMatch=wlanStatsRxAssocNoRateMatch, wlanIfParentDriverCapabilities=wlanIfParentDriverCapabilities, wlanMeshHWMPStatsEntry=wlanMeshHWMPStatsEntry, wlanIfaceDynamicFreqSelection=wlanIfaceDynamicFreqSelection, begemotWlanStatistics=begemotWlanStatistics, wlanStatsAMPDUBadBAR=wlanStatsAMPDUBadBAR, wlanIfaceDot11h=wlanIfaceDot11h, wlanIfaceBeaconMissedThreshold=wlanIfaceBeaconMissedThreshold, wlanMeshTTL=wlanMeshTTL, wlanMeshInterfaceTable=wlanMeshInterfaceTable, wlanMeshConfirmTimeout=wlanMeshConfirmTimeout, wlanStatsTxFragmented=wlanStatsTxFragmented, wlanStatsTxDiscardBadState=wlanStatsTxDiscardBadState, wlanIfaceStatisticsTable=wlanIfaceStatisticsTable, wlanIfaceChannelTable=wlanIfaceChannelTable, wlanMeshHWMPStatsTable=wlanMeshHWMPStatsTable, wlanWepKeyHash=wlanWepKeyHash, wlanMACAccessControlPolicy=wlanMACAccessControlPolicy, wlanMeshHWMPTxRootPREQ=wlanMeshHWMPTxRootPREQ, wlanStatsTimeoutInactivity=wlanStatsTimeoutInactivity, wlanWepKeyEntry=wlanWepKeyEntry, wlanIfaceCountryCode=wlanIfaceCountryCode, wlanIfacePeerFrequency=wlanIfacePeerFrequency, wlanStatsRxAMSDUSplitError=wlanStatsRxAMSDUSplitError, wlanStatsRxAMSDUTooShort=wlanStatsRxAMSDUTooShort, wlanHWMPReplyForwardBit=wlanHWMPReplyForwardBit, wlanIfRoamParamsTable=wlanIfRoamParamsTable, wlanStatsTxClassifyFailed=wlanStatsTxClassifyFailed, wlanIfaceDesiredChannel=wlanIfaceDesiredChannel, wlanIfaceStatus=wlanIfaceStatus, wlanStatsRxWrongDir=wlanStatsRxWrongDir, wlanIfTxMgmtRate=wlanIfTxMgmtRate, wlanMeshHWMPWrongSeqNo=wlanMeshHWMPWrongSeqNo, wlanHWMPRootInterval=wlanHWMPRootInterval, wlanMeshDroppedBadAE=wlanMeshDroppedBadAE, wlanHWMPRootAnnounceInterval=wlanHWMPRootAnnounceInterval, wlanStatsTxFailedNoBuf=wlanStatsTxFailedNoBuf, wlanStatsRxAMSDUDecap=wlanStatsRxAMSDUDecap, wlanStatsTxFailedNoAssoc=wlanStatsTxFailedNoAssoc, wlanStatsHTAssocRateMismatch=wlanStatsHTAssocRateMismatch, wlanIfaceDturbo=wlanIfaceDturbo, wlanScanDuration=wlanScanDuration, wlanInterfaceEntry=wlanInterfaceEntry, wlanIfaceDot11nAmsdu=wlanIfaceDot11nAmsdu, wlanMeshRoute=wlanMeshRoute, wlanIfaceTxPower=wlanIfaceTxPower, wlanIfaceDtimPeriod=wlanIfaceDtimPeriod, wlanHWMPMaxHops=wlanHWMPMaxHops, wlanIfRoamTxRateThreshold=wlanIfRoamTxRateThreshold, wlanStatsReset=wlanStatsReset, wlanStatsCryptoDeleteKeyFailed=wlanStatsCryptoDeleteKeyFailed, wlanIfaceChannelId=wlanIfaceChannelId, wlanStatsRxWrongBssid=wlanStatsRxWrongBssid, wlanStatsTxAMSDUEncap=wlanStatsTxAMSDUEncap, wlanMeshRouteNextHop=wlanMeshRouteNextHop, wlanStatsRxControl=wlanStatsRxControl, wlanStatsCryptoNoMem=wlanStatsCryptoNoMem, wlanStatsSwCryptoCCMP=wlanStatsSwCryptoCCMP, wlanIfaceLocalAddress=wlanIfaceLocalAddress, wlanStatsRxUnAuthorized=wlanStatsRxUnAuthorized, wlanStatsSwCryptoTKIPEnMIC=wlanStatsSwCryptoTKIPEnMIC, wlanStatsRxElemTooBig=wlanStatsRxElemTooBig, wlanIfaceBeaconInterval=wlanIfaceBeaconInterval, wlanIfaceTdmaSlotCount=wlanIfaceTdmaSlotCount, wlanStatsDwdsMcastDiscard=wlanStatsDwdsMcastDiscard, wlanWepDefTxKey=wlanWepDefTxKey, wlanStatsTxBadCipher=wlanStatsTxBadCipher, wlanIfaceTdmaSlotLength=wlanIfaceTdmaSlotLength, wlanStatsAMPDURxAge=wlanStatsAMPDURxAge, wlanIfacePeerRxSignalStrength=wlanIfacePeerRxSignalStrength, wlanWepKeyTable=wlanWepKeyTable, wlanStatsCryptoCipherKeyRejected=wlanStatsCryptoCipherKeyRejected, wlanMeshNeighborPeerId=wlanMeshNeighborPeerId, wlanMeshRouteHops=wlanMeshRouteHops, wlanMeshRouteAddFailed=wlanMeshRouteAddFailed, wlanStatsRxTKIPFailedMIC=wlanStatsRxTKIPFailedMIC, wlanMeshRouteLifeTime=wlanMeshRouteLifeTime, wlanIfaceDot11nHTProtMode=wlanIfaceDot11nHTProtMode, wlanStatsCryptoAttachFailed=wlanStatsCryptoAttachFailed, wlanStatsFFFlushed=wlanStatsFFFlushed, wlanStatsRxAssocCapMismatch=wlanStatsRxAssocCapMismatch, wlanIfaceTdmaSlot=wlanIfaceTdmaSlot, wlanMeshRouteStatus=wlanMeshRouteStatus, wlanHWMPPathLifetime=wlanHWMPPathLifetime, wlanIfacePeerRxSequenceNo=wlanIfacePeerRxSequenceNo, wlanMeshNeighborRxSignalStrength=wlanMeshNeighborRxSignalStrength, WlanMgmtStatusCode=WlanMgmtStatusCode, wlanScanResultsEntry=wlanScanResultsEntry)
mibBuilder.exportSymbols("BEGEMOT-WIRELESS-MIB", wlanMeshHWMPStatistics=wlanMeshHWMPStatistics, wlanStatsRxSsidMismatch=wlanStatsRxSsidMismatch, wlanHWMPRouteInactiveTimeout=wlanHWMPRouteInactiveTimeout, wlanStatsTxFFEncap=wlanStatsTxFFEncap, wlanIfaceChannelEntry=wlanIfaceChannelEntry, wlanStatsBeaconMissedEvents=wlanStatsBeaconMissedEvents, wlanStatsRxDecapsulationFailed=wlanStatsRxDecapsulationFailed, wlanMeshNoFwdTooShort=wlanMeshNoFwdTooShort, wlanMeshId=wlanMeshId, wlanStatsRxBadKeyId=wlanStatsRxBadKeyId, wlanStatsCryptoUnknownCipher=wlanStatsCryptoUnknownCipher, wlanMACAccessControlNacl=wlanMACAccessControlNacl, wlanIfaceChannelFrequency=wlanIfaceChannelFrequency, wlanIfacePeerEntry=wlanIfacePeerEntry, wlanIfaceDot11nSMPSMode=wlanIfaceDot11nSMPSMode, wlanMACAccessControlMACEntry=wlanMACAccessControlMACEntry, wlanStatsRxTKIPSeqViolation=wlanStatsRxTKIPSeqViolation, wlanStatsRxDiscardMgmt=wlanStatsRxDiscardMgmt, wlanStatsTxFragmentsCreated=wlanStatsTxFragmentsCreated, wlanIfTxPhyMode=wlanIfTxPhyMode, wlanStatsRxBeacon=wlanStatsRxBeacon, wlanIfacePacketBurst=wlanIfacePacketBurst, wlanStatsAMPDURexmt=wlanStatsAMPDURexmt, wlanHWMPRootTimeout=wlanHWMPRootTimeout, wlanStatsRxFFSplitError=wlanStatsRxFFSplitError, wlanMeshInterface=wlanMeshInterface, wlanMeshNeighborIdleTimer=wlanMeshNeighborIdleTimer, wlanIfParentHTCapabilities=wlanIfParentHTCapabilities, wlanStatsRxDiscardedDups=wlanStatsRxDiscardedDups, wlanMeshRouteMetric=wlanMeshRouteMetric, wlanStatsRxChannelMismatch=wlanStatsRxChannelMismatch, WlanIfaceDot11nPduType=WlanIfaceDot11nPduType, wlanStatsAMPDURxOor=wlanStatsAMPDURxOor, wlanMeshInterfaceEntry=wlanMeshInterfaceEntry, wlanStatsRxWepFailed=wlanStatsRxWepFailed, wlanStatsAMPDUMoved=wlanStatsAMPDUMoved, wlanMeshNeighborPeerState=wlanMeshNeighborPeerState, wlanIfTxMaxRetryCount=wlanIfTxMaxRetryCount, wlanMeshRetryTimeout=wlanMeshRetryTimeout, wlanIfaceDot11nAmpduLimit=wlanIfaceDot11nAmpduLimit, wlanStatsRxBadAuthRequest=wlanStatsRxBadAuthRequest, PYSNMP_MODULE_ID=begemotWlan, wlanIfParentCryptoCapabilities=wlanIfParentCryptoCapabilities, wlanMeshNeighborAddress=wlanMeshNeighborAddress, wlanIfaceFlags=wlanIfaceFlags, wlanIfaceChannelState=wlanIfaceChannelState, wlanStatsAMPDURxBAR=wlanStatsAMPDURxBAR, wlanStatsRxCCMPFailedMIC=wlanStatsRxCCMPFailedMIC, wlanHWMPInterfaceTable=wlanHWMPInterfaceTable, wlanIfaceDot11nHighThroughput=wlanIfaceDot11nHighThroughput, wlanIfaceDot11nHTCompatible=wlanIfaceDot11nHTCompatible, wlanStatsUnassocStaPSPoll=wlanStatsUnassocStaPSPoll, wlanStatsRxCCMPBadFormat=wlanStatsRxCCMPBadFormat, wlanIfaceDesiredSsid=wlanIfaceDesiredSsid, wlanIfacePeerAddress=wlanIfacePeerAddress, wlanStatsAMPDUStopped=wlanStatsAMPDUStopped, wlanStatsAMPDURexmtFailed=wlanStatsAMPDURexmtFailed, wlanStatsRxFailedNoBuf=wlanStatsRxFailedNoBuf, wlanIfaceOperatingMode=wlanIfaceOperatingMode, wlanIfacePeerCapabilities=wlanIfacePeerCapabilities, wlanScanMaxChannelDwellTime=wlanScanMaxChannelDwellTime, wlanStatsSwCryptoTKIPDeMIC=wlanStatsSwCryptoTKIPDeMIC, wlanStatsADDBADisabledReject=wlanStatsADDBADisabledReject, wlanIfaceRTSThreshold=wlanIfaceRTSThreshold, wlanStatsRxWepNoPrivacy=wlanStatsRxWepNoPrivacy, wlanStatsActiveScans=wlanStatsActiveScans, wlanIfaceBgScan=wlanIfaceBgScan, wlanStatsRxDiscardBadStates=wlanStatsRxDiscardBadStates, wlanWepInterfaceEntry=wlanWepInterfaceEntry, wlanMeshRouteEntry=wlanMeshRouteEntry, wlanStatsRxAuthFailed=wlanStatsRxAuthFailed, wlanScanResultNoise=wlanScanResultNoise, wlanParentIfName=wlanParentIfName, wlanStatsAMPDUMovedBAR=wlanStatsAMPDUMovedBAR, wlanStatsRxCCMPSeqViolation=wlanStatsRxCCMPSeqViolation, wlanIfaceDot11nRIFS=wlanIfaceDot11nRIFS, wlanMeshRouteLastMseq=wlanMeshRouteLastMseq, wlanStatsRxTKIPBadFormat=wlanStatsRxTKIPBadFormat, wlanMACAccessControlEntry=wlanMACAccessControlEntry, wlanMeshDroppedNoProxy=wlanMeshDroppedNoProxy, wlanWepKeyStatus=wlanWepKeyStatus, wlanMeshRoutesFlush=wlanMeshRoutesFlush, wlanIfacePeerTxPower=wlanIfacePeerTxPower, wlanStatsCryptoTKIPCM=wlanStatsCryptoTKIPCM, wlanIfaceWlanPrivacySubscribe=wlanIfaceWlanPrivacySubscribe, wlanScanResultRate=wlanScanResultRate, wlanStatsADDBANoRequest=wlanStatsADDBANoRequest, wlanIfaceChannelMaxAntennaGain=wlanIfaceChannelMaxAntennaGain, wlanStatsTxControlFrames=wlanStatsTxControlFrames, wlanMeshStatsEntry=wlanMeshStatsEntry, wlanStatsPassiveScans=wlanStatsPassiveScans, wlanMeshNeighborTable=wlanMeshNeighborTable, wlanStatsRxBadBintval=wlanStatsRxBadBintval, wlanMeshHWMPConfig=wlanMeshHWMPConfig, wlanMeshNeighborTxSequenceNo=wlanMeshNeighborTxSequenceNo, wlanIfaceIndex=wlanIfaceIndex, wlanStatsBadAidPSPoll=wlanStatsBadAidPSPoll)
