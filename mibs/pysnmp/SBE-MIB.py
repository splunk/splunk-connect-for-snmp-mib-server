#
# PySNMP MIB module SBE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SBE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:52:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
MacAddress, = mibBuilder.importSymbols("RFC1230-MIB", "MacAddress")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Counter32, Gauge32, TimeTicks, ModuleIdentity, NotificationType, MibIdentifier, Bits, iso, ObjectIdentity, NotificationType, IpAddress, Integer32, enterprises, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter32", "Gauge32", "TimeTicks", "ModuleIdentity", "NotificationType", "MibIdentifier", "Bits", "iso", "ObjectIdentity", "NotificationType", "IpAddress", "Integer32", "enterprises", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sbe = MibIdentifier((1, 3, 6, 1, 4, 1, 1055))
system = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 1))
router = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 2))
discovery = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 3))
fileMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 4))
modempool = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 6))
endOfSBEMib = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 65535))
syDateTime = MibScalar((1, 3, 6, 1, 4, 1, 1055, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syDateTime.setStatus('mandatory')
syRAMConfigurationChangedFlag = MibScalar((1, 3, 6, 1, 4, 1, 1055, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("same", 1), ("different", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syRAMConfigurationChangedFlag.setStatus('mandatory')
syConfigurationLockFlag = MibScalar((1, 3, 6, 1, 4, 1, 1055, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("locked", 1), ("unlocked", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syConfigurationLockFlag.setStatus('mandatory')
syModel = MibScalar((1, 3, 6, 1, 4, 1, 1055, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syModel.setStatus('mandatory')
syBootInfo = MibScalar((1, 3, 6, 1, 4, 1, 1055, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 33280))).clone(namedValues=NamedValues(("normal-boot-from-LAN", 1), ("base-board-flash-corrupt", 2), ("missing-base-board-kernel-module", 4), ("daughter-board-flash-corrupt", 8), ("missing-daughter-board-kernel-module", 16), ("system-type-SoHo", 32), ("system-type-Central", 64), ("system-type-torte", 128), ("system-type-ROUTEMAN", 256), ("system-type-ROUTEMANXL", 512), ("system-type-ROUTEMANXLl", 33280)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syBootInfo.setStatus('deprecated')
syActivatedLevel = MibScalar((1, 3, 6, 1, 4, 1, 1055, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syActivatedLevel.setStatus('mandatory')
sySerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 1055, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sySerialNumber.setStatus('mandatory')
syBaseActivationLevel = MibScalar((1, 3, 6, 1, 4, 1, 1055, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 6, 11, 12, 13, 14, 15, 16, 18, 20, 21, 23, 25, 27, 28))).clone(namedValues=NamedValues(("rOUTEMAN20Base", 1), ("soHo20Base", 2), ("central20Base", 4), ("rOUTEMANXL20Base", 6), ("soHoTest", 11), ("centralTest", 12), ("rOUTEMANTest", 13), ("rOUTEMANXLTest", 14), ("rOUTEMANXL201Base", 15), ("soHo21Base", 16), ("central21Base", 18), ("rOUTEMAN21Base", 20), ("rOUTEMANXL21Base", 21), ("soHo30Dormant", 23), ("central30Dormant", 25), ("rOUTEMAN30Dormant", 27), ("rOUTEMANX30Dormant", 28)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syBaseActivationLevel.setStatus('mandatory')
routsys = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 2, 1))
bridge = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 2, 2))
ip = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 2, 3))
ipx = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 2, 4))
wan = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 2, 5))
destination = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 2, 6))
user = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 2, 7))
manager = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 2, 8))
holiday = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 2, 9))
snmp = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 2, 10))
event = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 2, 11))
syBootOrder = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syBootOrder.setStatus('mandatory')
syMtuMru = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 1500))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syMtuMru.setStatus('mandatory')
syEventToLogThreshold = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syEventToLogThreshold.setStatus('mandatory')
syEventToTrapThreshold = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syEventToTrapThreshold.setStatus('mandatory')
syControlOperation = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))).clone(namedValues=NamedValues(("none", 1), ("reboot", 2), ("clear-SNMP-statistics", 3), ("dialout", 4), ("hangup", 5), ("enable-port", 6), ("disable-port", 7), ("disable-port-after-call", 8), ("crash", 9), ("change-password", 10), ("ram-to-Flash", 11), ("start-tftp-download", 12), ("reset-port", 13), ("boot-override", 14), ("display-IP-Routes", 15), ("display-IPX-Networks", 16), ("display-IPX-Servers", 17), ("reboot-file-transfer", 18)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syControlOperation.setStatus('mandatory')
syControlVariableStringOne = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syControlVariableStringOne.setStatus('mandatory')
syControlVariableIntegerOne = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syControlVariableIntegerOne.setStatus('mandatory')
syDialinAuthentication = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("pap", 2), ("chap", 3), ("paporchap", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syDialinAuthentication.setStatus('mandatory')
syEventToSpeakThreshold = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syEventToSpeakThreshold.setStatus('mandatory')
syNumberOfTimesToSpeak = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syNumberOfTimesToSpeak.setStatus('mandatory')
sySaveRamToFlashState = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("updating", 1), ("idle", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sySaveRamToFlashState.setStatus('mandatory')
syDialbackRetryInterval = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syDialbackRetryInterval.setStatus('mandatory')
syDialbackRetryLimit = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syDialbackRetryLimit.setStatus('mandatory')
syReverseCallbackTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syReverseCallbackTimeout.setStatus('mandatory')
syBridgeConfiguredFlag = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syBridgeConfiguredFlag.setStatus('mandatory')
syBridgeFilterFlag = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8))).clone(namedValues=NamedValues(("other", 1), ("include", 2), ("exclude", 4), ("all", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syBridgeFilterFlag.setStatus('mandatory')
syBridgePriority = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syBridgePriority.setStatus('mandatory')
syBridgeTable = MibTable((1, 3, 6, 1, 4, 1, 1055, 2, 2, 4), )
if mibBuilder.loadTexts: syBridgeTable.setStatus('mandatory')
syBridgeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1055, 2, 2, 4, 1), ).setIndexNames((0, "SBE-MIB", "syBridgeProtocol"))
if mibBuilder.loadTexts: syBridgeEntry.setStatus('mandatory')
syBridgeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("valid", 1), ("create-request", 2), ("under-creation", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syBridgeStatus.setStatus('mandatory')
syBridgeProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 2, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syBridgeProtocol.setStatus('mandatory')
mgrTimeoutForMACProtocolResponses = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgrTimeoutForMACProtocolResponses.setStatus('mandatory')
mgrNumberOfRetriesForMACProtocolResponses = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgrNumberOfRetriesForMACProtocolResponses.setStatus('mandatory')
mgrEventPollingInterval = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mgrEventPollingInterval.setStatus('mandatory')
holidayMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 9, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: holidayMaxEntries.setStatus('mandatory')
holidayTable = MibTable((1, 3, 6, 1, 4, 1, 1055, 2, 9, 2), )
if mibBuilder.loadTexts: holidayTable.setStatus('mandatory')
holidayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1055, 2, 9, 2, 1), ).setIndexNames((0, "SBE-MIB", "holidayDate"))
if mibBuilder.loadTexts: holidayEntry.setStatus('mandatory')
holidayStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 9, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("valid", 1), ("create-request", 2), ("under-creation", 3), ("invalid", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: holidayStatus.setStatus('mandatory')
holidayDate = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 9, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: holidayDate.setStatus('mandatory')
userMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: userMaxEntries.setStatus('mandatory')
userTable = MibTable((1, 3, 6, 1, 4, 1, 1055, 2, 7, 2), )
if mibBuilder.loadTexts: userTable.setStatus('mandatory')
userEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1055, 2, 7, 2, 1), ).setIndexNames((0, "SBE-MIB", "userName"))
if mibBuilder.loadTexts: userEntry.setStatus('mandatory')
userStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("valid", 1), ("create-request", 2), ("under-creation", 3), ("invalid", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userStatus.setStatus('mandatory')
userName = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 7, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: userName.setStatus('mandatory')
userPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 7, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userPassword.setStatus('mandatory')
userPermissions = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 7, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("none", 1), ("dial-in", 2), ("dial-out", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userPermissions.setStatus('mandatory')
userCallbackType = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 7, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("fixed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userCallbackType.setStatus('mandatory')
userPhoneNo = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 7, 2, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userPhoneNo.setStatus('mandatory')
userDialInMax = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 7, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userDialInMax.setStatus('mandatory')
userIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 7, 2, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: userIpAddress.setStatus('mandatory')
wanPortTable = MibTable((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1), )
if mibBuilder.loadTexts: wanPortTable.setStatus('mandatory')
wanPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2), ).setIndexNames((0, "SBE-MIB", "wanPortNumber"))
if mibBuilder.loadTexts: wanPortEntry.setStatus('mandatory')
wanPortEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("valid", 1), ("create-request", 2), ("under-creation", 3), ("invalid", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanPortEntryStatus.setStatus('mandatory')
wanPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanPortNumber.setStatus('mandatory')
wanPortEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanPortEnabled.setStatus('mandatory')
wanDefaultDialinIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanDefaultDialinIPAddress.setStatus('mandatory')
wanDefaultDialinSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanDefaultDialinSubnetMask.setStatus('mandatory')
wanDefaultIPXNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanDefaultIPXNetworkAddress.setStatus('mandatory')
wanDefaultDialinIPXNodeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanDefaultDialinIPXNodeAddress.setStatus('mandatory')
wanDialinAllowedFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanDialinAllowedFlag.setStatus('mandatory')
wanDialoutAllowedFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanDialoutAllowedFlag.setStatus('mandatory')
wanLinkLayerType = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("async", 1), ("sync", 2), ("autosync", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanLinkLayerType.setStatus('mandatory')
wanLinkLayerNRZFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nrz", 1), ("nrzi", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanLinkLayerNRZFlag.setStatus('mandatory')
wanLinkLayerProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("ppp", 2), ("isdn", 3), ("x25", 4), ("framerelaydte", 5), ("framerelaydce", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanLinkLayerProtocolType.setStatus('mandatory')
wanLinkDialupFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dialup", 1), ("dedicated", 2), ("dtr-dial", 3), ("isdn-dialup", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanLinkDialupFlag.setStatus('mandatory')
wanModemName = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 51))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanModemName.setStatus('mandatory')
wanModemSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200))).clone(namedValues=NamedValues(("twelvehundred", 1200), ("twentyfourhundred", 2400), ("fortyeighthundred", 4800), ("ninetysixhundred", 9600), ("nineteentwelve", 19200), ("thirtyeigthfour", 38400), ("fiftysevensix", 57600), ("onefifteentwo", 115200)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanModemSpeed.setStatus('mandatory')
wanModemInitializationString = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 16), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanModemInitializationString.setStatus('mandatory')
wanModemDialPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanModemDialPrefix.setStatus('mandatory')
wanPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("pcmcia", 1), ("rs232", 2), ("v35", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanPortType.setStatus('mandatory')
wanPCMCIACardName = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 19), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanPCMCIACardName.setStatus('mandatory')
wanIpRipReceiveAdvertisementFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanIpRipReceiveAdvertisementFlag.setStatus('mandatory')
wanIpRipSendInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanIpRipSendInterval.setStatus('mandatory')
wanIpxRipReceiveBroadcastFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanIpxRipReceiveBroadcastFlag.setStatus('mandatory')
wanIpxRipSendInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanIpxRipSendInterval.setStatus('mandatory')
wanIpxSapReceiveAdvertisementFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanIpxSapReceiveAdvertisementFlag.setStatus('mandatory')
wanIpxSapSendInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanIpxSapSendInterval.setStatus('mandatory')
wanIpxNetbios = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanIpxNetbios.setStatus('mandatory')
wanISDNSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29))).clone(namedValues=NamedValues(("other", 1), ("dss1", 2), ("etsi", 3), ("btnr", 4), ("dass2", 5), ("ess4", 6), ("ess5", 7), ("dms100", 8), ("ni1", 9), ("ni2", 10), ("ni3", 11), ("vn2", 12), ("vn3", 13), ("vn4", 14), ("vn6", 15), ("kdd", 16), ("ins64", 17), ("itr6", 18), ("cornet", 19), ("tad2", 20), ("tad30", 21), ("ts013", 22), ("ts014", 23), ("leased64s", 24), ("leasedS01", 25), ("leasedS02", 26), ("leasedH0", 27), ("leasedT1", 28), ("leasedE1", 29)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanISDNSwitchType.setStatus('mandatory')
wanISDNCallingPhoneNoB1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 28), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanISDNCallingPhoneNoB1.setStatus('mandatory')
wanISDNCallingPhoneNoB2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanISDNCallingPhoneNoB2.setStatus('mandatory')
wanISDNSPID1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanISDNSPID1.setStatus('mandatory')
wanISDNSPID2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanISDNSPID2.setStatus('mandatory')
wanPortGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("group", 1), ("non-group", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanPortGroup.setStatus('mandatory')
wanISDNSubAddress1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 33), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanISDNSubAddress1.setStatus('mandatory')
wanISDNSubAddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanISDNSubAddress2.setStatus('mandatory')
wanISDNNTTCard = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanISDNNTTCard.setStatus('mandatory')
wanISDNChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oneb", 1), ("twob", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanISDNChannels.setStatus('mandatory')
wanEnableDataCompression = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanEnableDataCompression.setStatus('mandatory')
wanISDNChannelSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cs56", 1), ("cs64", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanISDNChannelSpeed.setStatus('mandatory')
wanUsageMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("routing", 1), ("modempool", 2), ("share", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanUsageMode.setStatus('mandatory')
wanModemPoolGSN = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 40), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanModemPoolGSN.setStatus('mandatory')
wanModemPoolSSN = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 1, 2, 41), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanModemPoolSSN.setStatus('mandatory')
wanIPAddressTable = MibTable((1, 3, 6, 1, 4, 1, 1055, 2, 5, 2), )
if mibBuilder.loadTexts: wanIPAddressTable.setStatus('mandatory')
wanIPAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1055, 2, 5, 2, 1), ).setIndexNames((0, "SBE-MIB", "wanIPAddress"))
if mibBuilder.loadTexts: wanIPAddressEntry.setStatus('mandatory')
wanIPAddressStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("valid", 1), ("create-request", 2), ("under-creation", 3), ("invalid", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanIPAddressStatus.setStatus('mandatory')
wanIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 2, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanIPAddress.setStatus('mandatory')
wanStatPortTable = MibTable((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3), )
if mibBuilder.loadTexts: wanStatPortTable.setStatus('mandatory')
wanStatPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1), ).setIndexNames((0, "SBE-MIB", "wanStatPortNumber"))
if mibBuilder.loadTexts: wanStatPortEntry.setStatus('mandatory')
wanStatPortEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("valid", 1), ("create-request", 2), ("under-creation", 3), ("invalid", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanStatPortEntryStatus.setStatus('mandatory')
wanStatPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanStatPortNumber.setStatus('mandatory')
wanStatPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disconnected", 1), ("connected", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanStatPortState.setStatus('mandatory')
wanStatPortUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanStatPortUserName.setStatus('mandatory')
wanStatPortFrameTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanStatPortFrameTransmitted.setStatus('mandatory')
wanStatPortFrameReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanStatPortFrameReceived.setStatus('mandatory')
wanStatPortTransmitError = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanStatPortTransmitError.setStatus('mandatory')
wanStatPortReceiveError = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanStatPortReceiveError.setStatus('mandatory')
wanStatPortTransmitQueueFull = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanStatPortTransmitQueueFull.setStatus('mandatory')
wanStatPortCallOriginated = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanStatPortCallOriginated.setStatus('mandatory')
wanStatPortCallAnswered = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanStatPortCallAnswered.setStatus('mandatory')
wanStatPortNoDialTone = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanStatPortNoDialTone.setStatus('mandatory')
wanStatPortNoAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanStatPortNoAnswer.setStatus('mandatory')
wanStatPortBusyDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanStatPortBusyDetected.setStatus('mandatory')
wanStatPortNoCarrier = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wanStatPortNoCarrier.setStatus('mandatory')
wanStatPortModemSignal = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanStatPortModemSignal.setStatus('mandatory')
wanStatPortConnDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dialin", 1), ("dialout", 2), ("dedicated", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanStatPortConnDirection.setStatus('mandatory')
wanStatPortProtoUp = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 5, 3, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanStatPortProtoUp.setStatus('mandatory')
wanIPAddressMaxEntry = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 5, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wanIPAddressMaxEntry.setStatus('mandatory')
ipConfiguredFlag = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipConfiguredFlag.setStatus('mandatory')
ipLANAddress = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 3, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipLANAddress.setStatus('mandatory')
ipLANSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 3, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipLANSubnetMask.setStatus('mandatory')
ipBroadcastAddress = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 3, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipBroadcastAddress.setStatus('mandatory')
ipDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 3, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipDefaultGateway.setStatus('mandatory')
ipRipReceiveAdvertisementFlag = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipRipReceiveAdvertisementFlag.setStatus('mandatory')
ipRipSendInterval = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipRipSendInterval.setStatus('mandatory')
ipDefaultGatewayType = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("lan", 1), ("wan", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipDefaultGatewayType.setStatus('mandatory')
ipWanDestinationName = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 3, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipWanDestinationName.setStatus('mandatory')
ipWanUserName = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 3, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipWanUserName.setStatus('mandatory')
ipStaticRouteMaxEntry = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 3, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipStaticRouteMaxEntry.setStatus('mandatory')
ipStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 1055, 2, 3, 12), )
if mibBuilder.loadTexts: ipStaticRouteTable.setStatus('mandatory')
ipDefaultGatewayIfType = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("lan", 1), ("wan", 2), ("none", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipDefaultGatewayIfType.setStatus('mandatory')
ipBroadcastForwardTypes = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 3, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipBroadcastForwardTypes.setStatus('mandatory')
ipStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1055, 2, 3, 12, 1), ).setIndexNames((0, "SBE-MIB", "ipStaticRouteDestinationAddress"))
if mibBuilder.loadTexts: ipStaticRouteEntry.setStatus('mandatory')
ipStaticRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("valid", 1), ("create-request", 2), ("under-creation", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipStaticRouteStatus.setStatus('mandatory')
ipStaticRouteDestinationAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 3, 12, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipStaticRouteDestinationAddress.setStatus('mandatory')
ipStaticRouteDestinationSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 3, 12, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipStaticRouteDestinationSubnetMask.setStatus('mandatory')
ipStaticRouteDestinationHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 3, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipStaticRouteDestinationHopCount.setStatus('mandatory')
ipStaticRouteDestinationName = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 3, 12, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipStaticRouteDestinationName.setStatus('mandatory')
ipStaticRouteNetworkInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 3, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lan", 1), ("wan", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipStaticRouteNetworkInterface.setStatus('mandatory')
ipStaticRouteUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 3, 12, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipStaticRouteUserName.setStatus('mandatory')
ipStaticRouteGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 3, 12, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipStaticRouteGateway.setStatus('mandatory')
ipxConfiguredFlag = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ipx-and-auto-learn-both-off", 1), ("ipx-off-and-auto-learn-on", 2), ("ipx-on-and-auto-learn-off", 3), ("ipx-and-auto-learn-both-on", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxConfiguredFlag.setStatus('mandatory')
ipxNetbios = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxNetbios.setStatus('mandatory')
ipxMultiFrameTable = MibTable((1, 3, 6, 1, 4, 1, 1055, 2, 4, 9), )
if mibBuilder.loadTexts: ipxMultiFrameTable.setStatus('mandatory')
ipxMultiFrameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1055, 2, 4, 9, 1), ).setIndexNames((0, "SBE-MIB", "ipxMultiFrameType"))
if mibBuilder.loadTexts: ipxMultiFrameEntry.setStatus('mandatory')
ipxMultiFrameStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 4, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("valid", 1), ("create-request", 2), ("under-creation", 3), ("invalid", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxMultiFrameStatus.setStatus('mandatory')
ipxMultiFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 4, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ieee-8022", 1), ("ieee-8023-raw", 2), ("ieee-8022-SNAP", 3), ("ethernet-II", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxMultiFrameType.setStatus('mandatory')
ipxMultiFrameSelectFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 4, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxMultiFrameSelectFlag.setStatus('mandatory')
ipxMultiFrameNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 4, 9, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxMultiFrameNetworkAddress.setStatus('mandatory')
ipxNetAddressAutoLearnStateCounter = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 4, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 70))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxNetAddressAutoLearnStateCounter.setStatus('mandatory')
snmpCommunityNameTable = MibTable((1, 3, 6, 1, 4, 1, 1055, 2, 10, 1), )
if mibBuilder.loadTexts: snmpCommunityNameTable.setStatus('mandatory')
snmpCommunityNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1055, 2, 10, 1, 1), ).setIndexNames((0, "SBE-MIB", "snmpCommunityName"))
if mibBuilder.loadTexts: snmpCommunityNameEntry.setStatus('mandatory')
snmpCommunityNameStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("valid", 1), ("create-request", 2), ("under-creation", 3), ("invalid", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpCommunityNameStatus.setStatus('mandatory')
snmpCommunityName = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 10, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmpCommunityName.setStatus('mandatory')
snmpCommunityPermission = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("readonly", 1), ("readwrite", 2), ("lanuser", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpCommunityPermission.setStatus('mandatory')
snmpMacServerTable = MibTable((1, 3, 6, 1, 4, 1, 1055, 2, 10, 2), )
if mibBuilder.loadTexts: snmpMacServerTable.setStatus('mandatory')
snmpMacServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1055, 2, 10, 2, 1), ).setIndexNames((0, "SBE-MIB", "snmpMacServerAddress"))
if mibBuilder.loadTexts: snmpMacServerEntry.setStatus('mandatory')
snmpMacServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("valid", 1), ("create-request", 2), ("under-creation", 3), ("invalid", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpMacServerStatus.setStatus('mandatory')
snmpMacServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 10, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmpMacServerAddress.setStatus('mandatory')
snmpIpServerTable = MibTable((1, 3, 6, 1, 4, 1, 1055, 2, 10, 3), )
if mibBuilder.loadTexts: snmpIpServerTable.setStatus('mandatory')
snmpIpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1055, 2, 10, 3, 1), ).setIndexNames((0, "SBE-MIB", "snmpIpServerAddress"))
if mibBuilder.loadTexts: snmpIpServerEntry.setStatus('mandatory')
snmpIpServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 10, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("valid", 1), ("create-request", 2), ("under-creation", 3), ("invalid", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpIpServerStatus.setStatus('mandatory')
snmpIpServerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 10, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmpIpServerAddress.setStatus('mandatory')
snmpCommunityNameMaxEntry = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 10, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snmpCommunityNameMaxEntry.setStatus('mandatory')
destTable = MibTable((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1), )
if mibBuilder.loadTexts: destTable.setStatus('mandatory')
destEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1), ).setIndexNames((0, "SBE-MIB", "destName"))
if mibBuilder.loadTexts: destEntry.setStatus('mandatory')
destStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("valid", 1), ("create-request", 2), ("under-creation", 3), ("invalid", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destStatus.setStatus('mandatory')
destName = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: destName.setStatus('mandatory')
destType = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("lan-to-lan", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destType.setStatus('mandatory')
destDialoutPhoneNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destDialoutPhoneNumber.setStatus('mandatory')
destDialoutProtoSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destDialoutProtoSupport.setStatus('mandatory')
destDialoutIpxSupport = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destDialoutIpxSupport.setStatus('mandatory')
destDialoutModemSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200))).clone(namedValues=NamedValues(("twelvehundred", 1200), ("twentyfourhundred", 2400), ("fortyeighthundred", 4800), ("ninetysixhundred", 9600), ("nineteentwelve", 19200), ("thirtyeigthfour", 38400), ("fiftysevensix", 57600), ("onefifteentwo", 115200)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destDialoutModemSpeed.setStatus('mandatory')
destPppMtuMru = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(64, 1500))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destPppMtuMru.setStatus('mandatory')
destDialoutHandshake = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("pap", 2), ("chap", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destDialoutHandshake.setStatus('mandatory')
destDialoutUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destDialoutUserName.setStatus('mandatory')
destDialoutPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destDialoutPassword.setStatus('mandatory')
destPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destPorts.setStatus('mandatory')
destMaximumDialoutConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destMaximumDialoutConnectTime.setStatus('mandatory')
destDialoutStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("dialing", 2), ("connected", 3), ("connection-failed", 4), ("disconnected", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: destDialoutStatus.setStatus('mandatory')
destDialoutSchedule = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(96, 96)).setFixedLength(96)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destDialoutSchedule.setStatus('mandatory')
destHolidaySchedule = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("normal", 1), ("nodialout", 2), ("sunday", 3), ("monday", 4), ("tuesday", 5), ("wednesday", 6), ("thursday", 7), ("friday", 8), ("saturday", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destHolidaySchedule.setStatus('mandatory')
destLinkLayerNRZFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nrz", 1), ("nrzi", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destLinkLayerNRZFlag.setStatus('mandatory')
destLinkLayerProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("ppp", 2), ("isdn", 3), ("x25", 4), ("framerelaydte", 5), ("framerelaydce", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destLinkLayerProtocolType.setStatus('mandatory')
destLinkDialupFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("dialup", 1), ("dedicated", 2), ("dtr-dial", 3), ("isdn-dialup", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destLinkDialupFlag.setStatus('mandatory')
destPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("pcmcia", 1), ("rs232", 2), ("v35", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destPortType.setStatus('mandatory')
destLinkLayerType = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("async", 1), ("sync", 2), ("autosync", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destLinkLayerType.setStatus('mandatory')
destDialoutStatusData = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 22), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: destDialoutStatusData.setStatus('mandatory')
destDialoutScheduleFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destDialoutScheduleFlag.setStatus('mandatory')
destDialinUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destDialinUserName.setStatus('mandatory')
destDialinPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destDialinPassword.setStatus('mandatory')
destMaximumDialinConnectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destMaximumDialinConnectTime.setStatus('mandatory')
destTSDFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("tsd", 1), ("non-tsd", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destTSDFlag.setStatus('mandatory')
destTSDInactivityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destTSDInactivityTime.setStatus('mandatory')
destTSDMaxDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destTSDMaxDownTime.setStatus('mandatory')
destTSDPortGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destTSDPortGroup.setStatus('mandatory')
destManualDialCallback = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destManualDialCallback.setStatus('mandatory')
destAllowDynamicIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destAllowDynamicIPAddr.setStatus('mandatory')
destISDNChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oneb", 1), ("twob", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destISDNChannels.setStatus('mandatory')
destDialoutPhoneNumber2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 34), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destDialoutPhoneNumber2.setStatus('mandatory')
destTSDExpectCallback = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destTSDExpectCallback.setStatus('mandatory')
destMaxEntry = MibScalar((1, 3, 6, 1, 4, 1, 1055, 2, 6, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: destMaxEntry.setStatus('mandatory')
destScriptTable = MibTable((1, 3, 6, 1, 4, 1, 1055, 2, 6, 3), )
if mibBuilder.loadTexts: destScriptTable.setStatus('mandatory')
destScriptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1055, 2, 6, 3, 2), ).setIndexNames((0, "SBE-MIB", "destinationName"))
if mibBuilder.loadTexts: destScriptEntry.setStatus('mandatory')
destScriptEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 3, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("valid", 1), ("create-request", 2), ("under-creation", 3), ("invalid", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destScriptEntryStatus.setStatus('mandatory')
destinationName = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 3, 2, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: destinationName.setStatus('mandatory')
destScriptUseFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 3, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destScriptUseFlag.setStatus('mandatory')
destScriptTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 3, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destScriptTimeout.setStatus('mandatory')
destScriptName = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 3, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destScriptName.setStatus('mandatory')
destScript = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 3, 2, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destScript.setStatus('mandatory')
destScriptStartupCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 6, 3, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: destScriptStartupCmd.setStatus('mandatory')
eventTable = MibTable((1, 3, 6, 1, 4, 1, 1055, 2, 11, 1), )
if mibBuilder.loadTexts: eventTable.setStatus('mandatory')
eventEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1055, 2, 11, 1, 1), ).setIndexNames((0, "SBE-MIB", "eventGroupIndex"))
if mibBuilder.loadTexts: eventEntry.setStatus('mandatory')
eventGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventGroupIndex.setStatus('mandatory')
eventData = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 2, 11, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventData.setStatus('mandatory')
discNodeName = MibScalar((1, 3, 6, 1, 4, 1, 1055, 3, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: discNodeName.setStatus('mandatory')
discModel = MibScalar((1, 3, 6, 1, 4, 1, 1055, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(256, 257, 258, 259, 260))).clone(namedValues=NamedValues(("soho", 256), ("central", 257), ("torte", 258), ("routeman", 259), ("routemanxl", 260)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: discModel.setStatus('mandatory')
discProto = MibScalar((1, 3, 6, 1, 4, 1, 1055, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mac", 1), ("ip", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: discProto.setStatus('mandatory')
syFMOperation = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("other", 1), ("beginCopy", 2), ("copyDone", 3), ("deleteFile", 4), ("renameFile", 5), ("listDir", 6), ("checkSum", 7), ("abortCopy", 8), ("getFileInfo", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: syFMOperation.setStatus('mandatory')
syFMTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syFMTimeStamp.setStatus('mandatory')
syFMError = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("none", 1), ("successful", 2), ("inProgress", 3), ("noResponse", 4), ("noFile", 5), ("noSpace", 6), ("noPermission", 7), ("timeout", 8), ("badChecksum", 9), ("badOperation", 10), ("aborted", 11), ("other", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syFMError.setStatus('mandatory')
syFileTransfer = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 4, 4))
syFileInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1055, 4, 5))
syFileInfoVersion = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 5, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readonly")
if mibBuilder.loadTexts: syFileInfoVersion.setStatus('mandatory')
syFileInfoChecksum = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 5, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: syFileInfoChecksum.setStatus('mandatory')
syFileInfoLength = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 5, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: syFileInfoLength.setStatus('mandatory')
syDirTable = MibTable((1, 3, 6, 1, 4, 1, 1055, 4, 6), )
if mibBuilder.loadTexts: syDirTable.setStatus('mandatory')
syDirEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1055, 4, 6, 1), ).setIndexNames((0, "SBE-MIB", "syDirName"))
if mibBuilder.loadTexts: syDirEntry.setStatus('mandatory')
syDirStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 4, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("valid", 1), ("create-request", 2), ("under-creation", 3), ("invalid", 4), ("modify", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syDirStatus.setStatus('mandatory')
syDirName = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 4, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 13))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syDirName.setStatus('mandatory')
syDirCompressSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 4, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syDirCompressSize.setStatus('mandatory')
syDirVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 4, 6, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: syDirVersion.setStatus('mandatory')
syDirUncompressSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1055, 4, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syDirUncompressSize.setStatus('mandatory')
fileName = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 13))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fileName.setStatus('mandatory')
fileNameFrom = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 13))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fileNameFrom.setStatus('mandatory')
fileNameTo = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 13))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fileNameTo.setStatus('mandatory')
fileTransferStatus = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inActive", 1), ("inProgress", 2), ("waitingCopy", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fileTransferStatus.setStatus('mandatory')
fileTransferStartTime = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 4, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fileTransferStartTime.setStatus('mandatory')
fileTransferFileLength = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 4, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fileTransferFileLength.setStatus('mandatory')
fileTransferCheckSum = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 4, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fileTransferCheckSum.setStatus('mandatory')
fileTransferDirection = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("copyingFromLX", 2), ("copyingToLXRAM", 3), ("copyingToLXFlash", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fileTransferDirection.setStatus('mandatory')
fileTransferLastRcvTime = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 4, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fileTransferLastRcvTime.setStatus('mandatory')
fileTransferRemoteAddr = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 4, 7), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fileTransferRemoteAddr.setStatus('mandatory')
fileTransferRemoteFileName = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 4, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(12, 12)).setFixedLength(12)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fileTransferRemoteFileName.setStatus('mandatory')
fileTransferLocalFileName = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 4, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fileTransferLocalFileName.setStatus('mandatory')
fileTransferData = MibScalar((1, 3, 6, 1, 4, 1, 1055, 4, 4, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(532, 532)).setFixedLength(532)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fileTransferData.setStatus('mandatory')
modempoolEnabled = MibScalar((1, 3, 6, 1, 4, 1, 1055, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modempoolEnabled.setStatus('mandatory')
modempoolNodeName = MibScalar((1, 3, 6, 1, 4, 1, 1055, 6, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modempoolNodeName.setStatus('mandatory')
modempoolProtoSupport = MibScalar((1, 3, 6, 1, 4, 1, 1055, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modempoolProtoSupport.setStatus('mandatory')
dummyStopperForWorkshopForGetNext = MibScalar((1, 3, 6, 1, 4, 1, 1055, 65535, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dummyStopperForWorkshopForGetNext.setStatus('mandatory')
mibBuilder.exportSymbols("SBE-MIB", fileTransferLastRcvTime=fileTransferLastRcvTime, syEventToSpeakThreshold=syEventToSpeakThreshold, syBridgePriority=syBridgePriority, fileTransferStartTime=fileTransferStartTime, wanIpxRipReceiveBroadcastFlag=wanIpxRipReceiveBroadcastFlag, syFileInfoChecksum=syFileInfoChecksum, ipStaticRouteMaxEntry=ipStaticRouteMaxEntry, snmpCommunityNameEntry=snmpCommunityNameEntry, userMaxEntries=userMaxEntries, destDialoutUserName=destDialoutUserName, wanISDNSubAddress1=wanISDNSubAddress1, destScriptEntryStatus=destScriptEntryStatus, wanDefaultDialinIPAddress=wanDefaultDialinIPAddress, ipxMultiFrameNetworkAddress=ipxMultiFrameNetworkAddress, ipDefaultGatewayType=ipDefaultGatewayType, ipxMultiFrameTable=ipxMultiFrameTable, snmpMacServerTable=snmpMacServerTable, sbe=sbe, sySerialNumber=sySerialNumber, holidayStatus=holidayStatus, wanStatPortFrameReceived=wanStatPortFrameReceived, ipRipReceiveAdvertisementFlag=ipRipReceiveAdvertisementFlag, destTSDMaxDownTime=destTSDMaxDownTime, holidayDate=holidayDate, holiday=holiday, fileTransferLocalFileName=fileTransferLocalFileName, system=system, destDialoutProtoSupport=destDialoutProtoSupport, wanPortEntryStatus=wanPortEntryStatus, wanStatPortReceiveError=wanStatPortReceiveError, destDialoutStatusData=destDialoutStatusData, destDialoutHandshake=destDialoutHandshake, destScriptName=destScriptName, discProto=discProto, syDialbackRetryInterval=syDialbackRetryInterval, destHolidaySchedule=destHolidaySchedule, syControlVariableStringOne=syControlVariableStringOne, wanLinkLayerProtocolType=wanLinkLayerProtocolType, ipConfiguredFlag=ipConfiguredFlag, ipx=ipx, syDialinAuthentication=syDialinAuthentication, wanStatPortModemSignal=wanStatPortModemSignal, syDirEntry=syDirEntry, wanPCMCIACardName=wanPCMCIACardName, destStatus=destStatus, modempoolNodeName=modempoolNodeName, syMtuMru=syMtuMru, wanDialoutAllowedFlag=wanDialoutAllowedFlag, snmpMacServerAddress=snmpMacServerAddress, syBridgeProtocol=syBridgeProtocol, wanStatPortTransmitQueueFull=wanStatPortTransmitQueueFull, syBridgeTable=syBridgeTable, wanStatPortUserName=wanStatPortUserName, wanStatPortBusyDetected=wanStatPortBusyDetected, wanISDNSPID1=wanISDNSPID1, destMaxEntry=destMaxEntry, destName=destName, syBridgeConfiguredFlag=syBridgeConfiguredFlag, ipxMultiFrameType=ipxMultiFrameType, fileTransferCheckSum=fileTransferCheckSum, destDialoutPassword=destDialoutPassword, ipWanDestinationName=ipWanDestinationName, ipStaticRouteDestinationName=ipStaticRouteDestinationName, wanIPAddressMaxEntry=wanIPAddressMaxEntry, endOfSBEMib=endOfSBEMib, wanStatPortCallOriginated=wanStatPortCallOriginated, wanISDNCallingPhoneNoB1=wanISDNCallingPhoneNoB1, wanISDNSPID2=wanISDNSPID2, syFileInfo=syFileInfo, wanDefaultDialinIPXNodeAddress=wanDefaultDialinIPXNodeAddress, syDirTable=syDirTable, userPassword=userPassword, snmpIpServerTable=snmpIpServerTable, syControlOperation=syControlOperation, wanStatPortProtoUp=wanStatPortProtoUp, destDialinPassword=destDialinPassword, dummyStopperForWorkshopForGetNext=dummyStopperForWorkshopForGetNext, syFMError=syFMError, snmpCommunityPermission=snmpCommunityPermission, wanModemPoolSSN=wanModemPoolSSN, syModel=syModel, ipStaticRouteGateway=ipStaticRouteGateway, user=user, holidayTable=holidayTable, bridge=bridge, discModel=discModel, syConfigurationLockFlag=syConfigurationLockFlag, sySaveRamToFlashState=sySaveRamToFlashState, wanIpRipSendInterval=wanIpRipSendInterval, wanISDNChannelSpeed=wanISDNChannelSpeed, ipLANSubnetMask=ipLANSubnetMask, syBridgeEntry=syBridgeEntry, ipxMultiFrameStatus=ipxMultiFrameStatus, holidayEntry=holidayEntry, syDirStatus=syDirStatus, syDirName=syDirName, userName=userName, wanISDNCallingPhoneNoB2=wanISDNCallingPhoneNoB2, destLinkLayerNRZFlag=destLinkLayerNRZFlag, holidayMaxEntries=holidayMaxEntries, wanIPAddressStatus=wanIPAddressStatus, wanStatPortEntryStatus=wanStatPortEntryStatus, snmpIpServerStatus=snmpIpServerStatus, destScriptEntry=destScriptEntry, ipStaticRouteStatus=ipStaticRouteStatus, ipStaticRouteDestinationHopCount=ipStaticRouteDestinationHopCount, syDirVersion=syDirVersion, fileNameFrom=fileNameFrom, wanISDNSubAddress2=wanISDNSubAddress2, syRAMConfigurationChangedFlag=syRAMConfigurationChangedFlag, wanIpxSapReceiveAdvertisementFlag=wanIpxSapReceiveAdvertisementFlag, syReverseCallbackTimeout=syReverseCallbackTimeout, destISDNChannels=destISDNChannels, syBridgeStatus=syBridgeStatus, syNumberOfTimesToSpeak=syNumberOfTimesToSpeak, wanIPAddress=wanIPAddress, fileNameTo=fileNameTo, ipRipSendInterval=ipRipSendInterval, destLinkDialupFlag=destLinkDialupFlag, syFileTransfer=syFileTransfer, wanDefaultIPXNetworkAddress=wanDefaultIPXNetworkAddress, snmp=snmp, destTSDInactivityTime=destTSDInactivityTime, wanModemPoolGSN=wanModemPoolGSN, snmpMacServerEntry=snmpMacServerEntry, destDialoutScheduleFlag=destDialoutScheduleFlag, wanStatPortTable=wanStatPortTable, destTSDExpectCallback=destTSDExpectCallback, eventGroupIndex=eventGroupIndex, destTSDPortGroup=destTSDPortGroup, snmpIpServerAddress=snmpIpServerAddress, fileTransferRemoteAddr=fileTransferRemoteAddr, destScript=destScript, destination=destination, destType=destType, destScriptTable=destScriptTable, wanModemDialPrefix=wanModemDialPrefix, mgrTimeoutForMACProtocolResponses=mgrTimeoutForMACProtocolResponses, syFileInfoVersion=syFileInfoVersion, eventData=eventData, ipxMultiFrameSelectFlag=ipxMultiFrameSelectFlag, destLinkLayerProtocolType=destLinkLayerProtocolType, wanModemSpeed=wanModemSpeed, destAllowDynamicIPAddr=destAllowDynamicIPAddr, syFMTimeStamp=syFMTimeStamp, wanStatPortCallAnswered=wanStatPortCallAnswered, destDialoutPhoneNumber=destDialoutPhoneNumber, wanStatPortState=wanStatPortState, syDialbackRetryLimit=syDialbackRetryLimit, syFMOperation=syFMOperation, syBootInfo=syBootInfo, wanStatPortNumber=wanStatPortNumber, wanStatPortNoCarrier=wanStatPortNoCarrier, destPppMtuMru=destPppMtuMru, wanPortEntry=wanPortEntry, destDialoutStatus=destDialoutStatus, syBridgeFilterFlag=syBridgeFilterFlag, router=router, discovery=discovery, wanStatPortConnDirection=wanStatPortConnDirection, syDirCompressSize=syDirCompressSize, snmpMacServerStatus=snmpMacServerStatus, syBootOrder=syBootOrder, wanUsageMode=wanUsageMode, destScriptTimeout=destScriptTimeout, ipStaticRouteDestinationSubnetMask=ipStaticRouteDestinationSubnetMask, destEntry=destEntry, wan=wan, snmpCommunityNameMaxEntry=snmpCommunityNameMaxEntry, wanLinkDialupFlag=wanLinkDialupFlag, destDialoutModemSpeed=destDialoutModemSpeed, destDialoutPhoneNumber2=destDialoutPhoneNumber2, userTable=userTable, wanPortType=wanPortType, syBaseActivationLevel=syBaseActivationLevel, userPermissions=userPermissions, wanDialinAllowedFlag=wanDialinAllowedFlag, wanIpRipReceiveAdvertisementFlag=wanIpRipReceiveAdvertisementFlag, ipBroadcastAddress=ipBroadcastAddress, fileTransferData=fileTransferData, userEntry=userEntry, mgrNumberOfRetriesForMACProtocolResponses=mgrNumberOfRetriesForMACProtocolResponses, syDirUncompressSize=syDirUncompressSize, ipxNetAddressAutoLearnStateCounter=ipxNetAddressAutoLearnStateCounter, wanStatPortNoDialTone=wanStatPortNoDialTone, fileTransferRemoteFileName=fileTransferRemoteFileName, destinationName=destinationName, eventTable=eventTable, wanISDNSwitchType=wanISDNSwitchType, destDialoutSchedule=destDialoutSchedule, wanPortEnabled=wanPortEnabled, wanStatPortNoAnswer=wanStatPortNoAnswer, destTSDFlag=destTSDFlag, fileTransferStatus=fileTransferStatus, destDialinUserName=destDialinUserName, destPorts=destPorts, wanDefaultDialinSubnetMask=wanDefaultDialinSubnetMask, ipxConfiguredFlag=ipxConfiguredFlag, destMaximumDialinConnectTime=destMaximumDialinConnectTime, destScriptStartupCmd=destScriptStartupCmd, userStatus=userStatus, routsys=routsys, manager=manager, syControlVariableIntegerOne=syControlVariableIntegerOne, ipStaticRouteUserName=ipStaticRouteUserName, destLinkLayerType=destLinkLayerType, snmpCommunityNameStatus=snmpCommunityNameStatus, wanIpxRipSendInterval=wanIpxRipSendInterval, wanEnableDataCompression=wanEnableDataCompression, wanStatPortFrameTransmitted=wanStatPortFrameTransmitted, ipStaticRouteEntry=ipStaticRouteEntry, event=event, ipxMultiFrameEntry=ipxMultiFrameEntry, destMaximumDialoutConnectTime=destMaximumDialoutConnectTime, wanIPAddressEntry=wanIPAddressEntry, fileName=fileName, eventEntry=eventEntry, wanISDNNTTCard=wanISDNNTTCard, wanLinkLayerNRZFlag=wanLinkLayerNRZFlag, fileMgmt=fileMgmt, wanIpxNetbios=wanIpxNetbios, modempool=modempool, syActivatedLevel=syActivatedLevel, destScriptUseFlag=destScriptUseFlag, wanPortTable=wanPortTable, ipBroadcastForwardTypes=ipBroadcastForwardTypes, destPortType=destPortType, discNodeName=discNodeName, destDialoutIpxSupport=destDialoutIpxSupport, wanModemName=wanModemName, ipDefaultGateway=ipDefaultGateway, syEventToLogThreshold=syEventToLogThreshold, wanISDNChannels=wanISDNChannels, ip=ip, syEventToTrapThreshold=syEventToTrapThreshold, wanPortGroup=wanPortGroup, ipxNetbios=ipxNetbios, destTable=destTable, ipStaticRouteDestinationAddress=ipStaticRouteDestinationAddress, userDialInMax=userDialInMax, userCallbackType=userCallbackType, wanLinkLayerType=wanLinkLayerType, wanIPAddressTable=wanIPAddressTable, snmpIpServerEntry=snmpIpServerEntry, destManualDialCallback=destManualDialCallback, syFileInfoLength=syFileInfoLength, syDateTime=syDateTime, ipDefaultGatewayIfType=ipDefaultGatewayIfType, fileTransferDirection=fileTransferDirection, wanIpxSapSendInterval=wanIpxSapSendInterval, modempoolEnabled=modempoolEnabled, ipStaticRouteNetworkInterface=ipStaticRouteNetworkInterface, mgrEventPollingInterval=mgrEventPollingInterval, wanStatPortEntry=wanStatPortEntry)
mibBuilder.exportSymbols("SBE-MIB", wanPortNumber=wanPortNumber, wanStatPortTransmitError=wanStatPortTransmitError, snmpCommunityNameTable=snmpCommunityNameTable, ipWanUserName=ipWanUserName, userIpAddress=userIpAddress, wanModemInitializationString=wanModemInitializationString, ipStaticRouteTable=ipStaticRouteTable, ipLANAddress=ipLANAddress, modempoolProtoSupport=modempoolProtoSupport, snmpCommunityName=snmpCommunityName, userPhoneNo=userPhoneNo, fileTransferFileLength=fileTransferFileLength)
