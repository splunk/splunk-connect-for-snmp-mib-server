#
# PySNMP MIB module CISCO-PACKET-CAPTURE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-PACKET-CAPTURE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:52:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
VlanIndex, = mibBuilder.importSymbols("CISCO-VTP-MIB", "VlanIndex")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressPrefixLength, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressPrefixLength", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter32, Integer32, TimeTicks, IpAddress, Bits, iso, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Gauge32, ModuleIdentity, NotificationType, Counter64, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "TimeTicks", "IpAddress", "Bits", "iso", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Gauge32", "ModuleIdentity", "NotificationType", "Counter64", "Unsigned32")
DisplayString, RowStatus, TextualConvention, DateAndTime, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "DateAndTime", "MacAddress")
ciscoPacketCaptureMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 602))
ciscoPacketCaptureMIB.setRevisions(('2008-07-07 00:00', '2007-01-03 00:00',))
if mibBuilder.loadTexts: ciscoPacketCaptureMIB.setLastUpdated('200807070000Z')
if mibBuilder.loadTexts: ciscoPacketCaptureMIB.setOrganization('Cisco System, Inc.')
cpcMIBNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 602, 0))
cpcMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 602, 1))
cpcMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 602, 2))
class CiscoPacketCaptureFilterCriteria(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("source", 1), ("dest", 2))

cpcGenericConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 1))
cpcFilterConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2))
cpcBufferConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 3))
cpcScheduleConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 4))
cpcSessionStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 5))
cpcMaxSessionAllowed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpcMaxSessionAllowed.setStatus('current')
cpcSessionConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 1, 2), )
if mibBuilder.loadTexts: cpcSessionConfigTable.setStatus('current')
cpcSessionConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-PACKET-CAPTURE-MIB", "cpcSessionId"))
if mibBuilder.loadTexts: cpcSessionConfigEntry.setStatus('current')
cpcSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: cpcSessionId.setStatus('current')
cpcSessionOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("inProgress", 2), ("completed", 3), ("stopped", 4), ("storageFull", 5), ("bufferFull", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpcSessionOperStatus.setStatus('current')
cpcSessionDestFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 1, 2, 1, 3), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpcSessionDestFileName.setStatus('current')
cpcSessionPacketLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 1, 2, 1, 4), Unsigned32()).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpcSessionPacketLength.setStatus('current')
cpcSessionPacketLimits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 1, 2, 1, 5), Unsigned32()).setUnits('packets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpcSessionPacketLimits.setStatus('current')
cpcSessionAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("stop", 2))).clone('stop')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpcSessionAction.setStatus('current')
cpcSessionConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 1, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpcSessionConfigStatus.setStatus('current')
cpcSessionPacketRateLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 1, 2, 1, 8), Unsigned32().clone(10000)).setUnits('packets per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpcSessionPacketRateLimit.setStatus('current')
cpcSessionDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 1, 2, 1, 9), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpcSessionDescr.setStatus('current')
cpcSessionMaxSources = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpcSessionMaxSources.setStatus('current')
cpcCaptureSourceIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 1, 4), )
if mibBuilder.loadTexts: cpcCaptureSourceIfTable.setStatus('current')
cpcCaptureSourceIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-PACKET-CAPTURE-MIB", "cpcSessionId"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cpcCaptureSourceIfEntry.setStatus('current')
cpcCaptureSourceIfDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("rx", 1), ("tx", 2), ("both", 3))).clone('rx')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpcCaptureSourceIfDirection.setStatus('current')
cpcCaptureSourceIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 1, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpcCaptureSourceIfStatus.setStatus('current')
cpcMaxFilterAllowed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpcMaxFilterAllowed.setStatus('current')
cpcMacFilterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 2), )
if mibBuilder.loadTexts: cpcMacFilterTable.setStatus('current')
cpcMacFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-PACKET-CAPTURE-MIB", "cpcSessionId"), (0, "CISCO-PACKET-CAPTURE-MIB", "cpcMacFilterMacAddress"), (0, "CISCO-PACKET-CAPTURE-MIB", "cpcMacFilterCriteria"))
if mibBuilder.loadTexts: cpcMacFilterEntry.setStatus('current')
cpcMacFilterMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: cpcMacFilterMacAddress.setStatus('current')
cpcMacFilterCriteria = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 2, 1, 2), CiscoPacketCaptureFilterCriteria())
if mibBuilder.loadTexts: cpcMacFilterCriteria.setStatus('current')
cpcMacFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpcMacFilterRowStatus.setStatus('current')
cpcIpFilterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 3), )
if mibBuilder.loadTexts: cpcIpFilterTable.setStatus('current')
cpcIpFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-PACKET-CAPTURE-MIB", "cpcSessionId"), (0, "CISCO-PACKET-CAPTURE-MIB", "cpcIpFilterAddressType"), (0, "CISCO-PACKET-CAPTURE-MIB", "cpcIpFilterAddress"), (0, "CISCO-PACKET-CAPTURE-MIB", "cpcIpFilterCriteria"))
if mibBuilder.loadTexts: cpcIpFilterEntry.setStatus('current')
cpcIpFilterAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cpcIpFilterAddressType.setStatus('current')
cpcIpFilterAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 3, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: cpcIpFilterAddress.setStatus('current')
cpcIpFilterCriteria = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 3, 1, 3), CiscoPacketCaptureFilterCriteria())
if mibBuilder.loadTexts: cpcIpFilterCriteria.setStatus('current')
cpcIpFilterMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 3, 1, 4), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpcIpFilterMask.setStatus('current')
cpcIpFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpcIpFilterRowStatus.setStatus('current')
cpcMaxMacFilterAllowed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpcMaxMacFilterAllowed.setStatus('current')
cpcMaxIpFilterAllowed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpcMaxIpFilterAllowed.setStatus('current')
cpcPacketLengthFilterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 6), )
if mibBuilder.loadTexts: cpcPacketLengthFilterTable.setStatus('current')
cpcPacketLengthFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 6, 1), ).setIndexNames((0, "CISCO-PACKET-CAPTURE-MIB", "cpcSessionId"))
if mibBuilder.loadTexts: cpcPacketLengthFilterEntry.setStatus('current')
cpcPacketLengthFilterMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 6, 1, 1), Unsigned32()).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpcPacketLengthFilterMin.setStatus('current')
cpcPacketLengthFilterMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 6, 1, 2), Unsigned32()).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpcPacketLengthFilterMax.setStatus('current')
cpcMaxEthertypeFilterAllowed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpcMaxEthertypeFilterAllowed.setStatus('current')
cpcEthertypeFilterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 8), )
if mibBuilder.loadTexts: cpcEthertypeFilterTable.setStatus('current')
cpcEthertypeFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 8, 1), ).setIndexNames((0, "CISCO-PACKET-CAPTURE-MIB", "cpcSessionId"), (0, "CISCO-PACKET-CAPTURE-MIB", "cpcEthertypeFilterValue"))
if mibBuilder.loadTexts: cpcEthertypeFilterEntry.setStatus('current')
cpcEthertypeFilterValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: cpcEthertypeFilterValue.setStatus('current')
cpcEthertypeFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 8, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpcEthertypeFilterStatus.setStatus('current')
cpcMaxVlanFilterAllowed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpcMaxVlanFilterAllowed.setStatus('current')
cpcVlanFilterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 10), )
if mibBuilder.loadTexts: cpcVlanFilterTable.setStatus('current')
cpcVlanFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 10, 1), ).setIndexNames((0, "CISCO-PACKET-CAPTURE-MIB", "cpcSessionId"), (0, "CISCO-PACKET-CAPTURE-MIB", "cpcVlanFilterVlanIndex"))
if mibBuilder.loadTexts: cpcVlanFilterEntry.setStatus('current')
cpcVlanFilterVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 10, 1, 1), VlanIndex())
if mibBuilder.loadTexts: cpcVlanFilterVlanIndex.setStatus('current')
cpcVlanFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 10, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpcVlanFilterRowStatus.setStatus('current')
cpcMaxAccessGroupFilterAllowed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpcMaxAccessGroupFilterAllowed.setStatus('current')
cpcAccessGroupFilterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 12), )
if mibBuilder.loadTexts: cpcAccessGroupFilterTable.setStatus('current')
cpcAccessGroupFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 12, 1), ).setIndexNames((0, "CISCO-PACKET-CAPTURE-MIB", "cpcSessionId"), (0, "CISCO-PACKET-CAPTURE-MIB", "cpcAccessGroupFilterType"), (1, "CISCO-PACKET-CAPTURE-MIB", "cpcAccessGroupFilterName"))
if mibBuilder.loadTexts: cpcAccessGroupFilterEntry.setStatus('current')
cpcAccessGroupFilterType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hardware", 1), ("software", 2))))
if mibBuilder.loadTexts: cpcAccessGroupFilterType.setStatus('current')
cpcAccessGroupFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 12, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 99)))
if mibBuilder.loadTexts: cpcAccessGroupFilterName.setStatus('current')
cpcAccessGroupFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 2, 12, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cpcAccessGroupFilterStatus.setStatus('current')
cpcBufferConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 3, 1), )
if mibBuilder.loadTexts: cpcBufferConfigTable.setStatus('current')
cpcBufferConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-PACKET-CAPTURE-MIB", "cpcSessionId"))
if mibBuilder.loadTexts: cpcBufferConfigEntry.setStatus('current')
cpcBufferType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("linear", 1), ("circular", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpcBufferType.setStatus('current')
cpcBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 3, 1, 1, 2), Unsigned32()).setUnits('Kilo-bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpcBufferSize.setStatus('current')
cpcBufferAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("clear", 2), ("export", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpcBufferAction.setStatus('current')
cpcBufferOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("exporting", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpcBufferOperStatus.setStatus('current')
cpcScheduleConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 4, 1), )
if mibBuilder.loadTexts: cpcScheduleConfigTable.setStatus('current')
cpcScheduleConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-PACKET-CAPTURE-MIB", "cpcSessionId"))
if mibBuilder.loadTexts: cpcScheduleConfigEntry.setStatus('current')
cpcScheduleStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 4, 1, 1, 1), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpcScheduleStartTime.setStatus('current')
cpcScheduleCapturePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 4, 1, 1, 2), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpcScheduleCapturePeriod.setStatus('current')
cpcSessionStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 5, 1), )
if mibBuilder.loadTexts: cpcSessionStatsTable.setStatus('current')
cpcSessionStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-PACKET-CAPTURE-MIB", "cpcSessionId"))
if mibBuilder.loadTexts: cpcSessionStatsEntry.setStatus('current')
cpcSessionPacketsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 5, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpcSessionPacketsReceived.setStatus('current')
cpcSessionPacketsCaptured = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 5, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpcSessionPacketsCaptured.setStatus('current')
cpcSessionPacketsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 602, 1, 5, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpcSessionPacketsDropped.setStatus('current')
cpcMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 1))
cpcMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 2))
cpcCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 1, 1)).setObjects(("CISCO-PACKET-CAPTURE-MIB", "cpcGenericConfigGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcFilterConfigGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcMacFilterConfigGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcIpFilterConfigGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcDestFileNameConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpcCompliance = cpcCompliance.setStatus('deprecated')
cpcComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 1, 2)).setObjects(("CISCO-PACKET-CAPTURE-MIB", "cpcGenericConfigGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcFilterConfigGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcMacFilterConfigGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcIpFilterConfigGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcDestFileNameConfigGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcPacketLengthFilterConfigGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcEthertypeFilterConfigGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcVlanFilterConfigGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcAccessGroupFilterConfigGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcBufferConfigGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcScheduleConfigGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcSessionStatsGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcMaxMacFilterConfigGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcMaxIpFilterConfigGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcSessionPacketRateLimitGroup"), ("CISCO-PACKET-CAPTURE-MIB", "cpcSessionDescrGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpcComplianceRev1 = cpcComplianceRev1.setStatus('current')
cpcGenericConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 2, 1)).setObjects(("CISCO-PACKET-CAPTURE-MIB", "cpcMaxSessionAllowed"), ("CISCO-PACKET-CAPTURE-MIB", "cpcSessionOperStatus"), ("CISCO-PACKET-CAPTURE-MIB", "cpcSessionMaxSources"), ("CISCO-PACKET-CAPTURE-MIB", "cpcSessionPacketLength"), ("CISCO-PACKET-CAPTURE-MIB", "cpcSessionPacketLimits"), ("CISCO-PACKET-CAPTURE-MIB", "cpcSessionAction"), ("CISCO-PACKET-CAPTURE-MIB", "cpcSessionConfigStatus"), ("CISCO-PACKET-CAPTURE-MIB", "cpcCaptureSourceIfDirection"), ("CISCO-PACKET-CAPTURE-MIB", "cpcCaptureSourceIfStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpcGenericConfigGroup = cpcGenericConfigGroup.setStatus('current')
cpcFilterConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 2, 2)).setObjects(("CISCO-PACKET-CAPTURE-MIB", "cpcMaxFilterAllowed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpcFilterConfigGroup = cpcFilterConfigGroup.setStatus('current')
cpcMacFilterConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 2, 3)).setObjects(("CISCO-PACKET-CAPTURE-MIB", "cpcMacFilterRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpcMacFilterConfigGroup = cpcMacFilterConfigGroup.setStatus('current')
cpcIpFilterConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 2, 4)).setObjects(("CISCO-PACKET-CAPTURE-MIB", "cpcIpFilterMask"), ("CISCO-PACKET-CAPTURE-MIB", "cpcIpFilterRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpcIpFilterConfigGroup = cpcIpFilterConfigGroup.setStatus('current')
cpcDestFileNameConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 2, 5)).setObjects(("CISCO-PACKET-CAPTURE-MIB", "cpcSessionDestFileName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpcDestFileNameConfigGroup = cpcDestFileNameConfigGroup.setStatus('current')
cpcPacketLengthFilterConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 2, 6)).setObjects(("CISCO-PACKET-CAPTURE-MIB", "cpcPacketLengthFilterMin"), ("CISCO-PACKET-CAPTURE-MIB", "cpcPacketLengthFilterMax"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpcPacketLengthFilterConfigGroup = cpcPacketLengthFilterConfigGroup.setStatus('current')
cpcEthertypeFilterConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 2, 7)).setObjects(("CISCO-PACKET-CAPTURE-MIB", "cpcMaxEthertypeFilterAllowed"), ("CISCO-PACKET-CAPTURE-MIB", "cpcEthertypeFilterStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpcEthertypeFilterConfigGroup = cpcEthertypeFilterConfigGroup.setStatus('current')
cpcVlanFilterConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 2, 8)).setObjects(("CISCO-PACKET-CAPTURE-MIB", "cpcMaxVlanFilterAllowed"), ("CISCO-PACKET-CAPTURE-MIB", "cpcVlanFilterRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpcVlanFilterConfigGroup = cpcVlanFilterConfigGroup.setStatus('current')
cpcAccessGroupFilterConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 2, 9)).setObjects(("CISCO-PACKET-CAPTURE-MIB", "cpcMaxAccessGroupFilterAllowed"), ("CISCO-PACKET-CAPTURE-MIB", "cpcAccessGroupFilterStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpcAccessGroupFilterConfigGroup = cpcAccessGroupFilterConfigGroup.setStatus('current')
cpcBufferConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 2, 10)).setObjects(("CISCO-PACKET-CAPTURE-MIB", "cpcBufferType"), ("CISCO-PACKET-CAPTURE-MIB", "cpcBufferSize"), ("CISCO-PACKET-CAPTURE-MIB", "cpcBufferAction"), ("CISCO-PACKET-CAPTURE-MIB", "cpcBufferOperStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpcBufferConfigGroup = cpcBufferConfigGroup.setStatus('current')
cpcScheduleConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 2, 11)).setObjects(("CISCO-PACKET-CAPTURE-MIB", "cpcScheduleStartTime"), ("CISCO-PACKET-CAPTURE-MIB", "cpcScheduleCapturePeriod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpcScheduleConfigGroup = cpcScheduleConfigGroup.setStatus('current')
cpcSessionStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 2, 12)).setObjects(("CISCO-PACKET-CAPTURE-MIB", "cpcSessionPacketsReceived"), ("CISCO-PACKET-CAPTURE-MIB", "cpcSessionPacketsCaptured"), ("CISCO-PACKET-CAPTURE-MIB", "cpcSessionPacketsDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpcSessionStatsGroup = cpcSessionStatsGroup.setStatus('current')
cpcMaxMacFilterConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 2, 13)).setObjects(("CISCO-PACKET-CAPTURE-MIB", "cpcMaxMacFilterAllowed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpcMaxMacFilterConfigGroup = cpcMaxMacFilterConfigGroup.setStatus('current')
cpcMaxIpFilterConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 2, 14)).setObjects(("CISCO-PACKET-CAPTURE-MIB", "cpcMaxIpFilterAllowed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpcMaxIpFilterConfigGroup = cpcMaxIpFilterConfigGroup.setStatus('current')
cpcSessionPacketRateLimitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 2, 15)).setObjects(("CISCO-PACKET-CAPTURE-MIB", "cpcSessionPacketRateLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpcSessionPacketRateLimitGroup = cpcSessionPacketRateLimitGroup.setStatus('current')
cpcSessionDescrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 602, 2, 2, 16)).setObjects(("CISCO-PACKET-CAPTURE-MIB", "cpcSessionDescr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cpcSessionDescrGroup = cpcSessionDescrGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-PACKET-CAPTURE-MIB", cpcMaxMacFilterAllowed=cpcMaxMacFilterAllowed, cpcScheduleConfigTable=cpcScheduleConfigTable, cpcBufferSize=cpcBufferSize, cpcIpFilterConfigGroup=cpcIpFilterConfigGroup, cpcPacketLengthFilterTable=cpcPacketLengthFilterTable, cpcScheduleCapturePeriod=cpcScheduleCapturePeriod, cpcVlanFilterVlanIndex=cpcVlanFilterVlanIndex, cpcSessionPacketLength=cpcSessionPacketLength, CiscoPacketCaptureFilterCriteria=CiscoPacketCaptureFilterCriteria, cpcAccessGroupFilterTable=cpcAccessGroupFilterTable, cpcFilterConfigGroup=cpcFilterConfigGroup, ciscoPacketCaptureMIB=ciscoPacketCaptureMIB, cpcIpFilterMask=cpcIpFilterMask, cpcMIBNotification=cpcMIBNotification, cpcVlanFilterTable=cpcVlanFilterTable, cpcPacketLengthFilterEntry=cpcPacketLengthFilterEntry, cpcMaxSessionAllowed=cpcMaxSessionAllowed, cpcMacFilterRowStatus=cpcMacFilterRowStatus, cpcSessionConfigStatus=cpcSessionConfigStatus, cpcSessionPacketRateLimitGroup=cpcSessionPacketRateLimitGroup, cpcSessionPacketRateLimit=cpcSessionPacketRateLimit, cpcCaptureSourceIfStatus=cpcCaptureSourceIfStatus, cpcMIBCompliances=cpcMIBCompliances, cpcSessionPacketsCaptured=cpcSessionPacketsCaptured, cpcMacFilterTable=cpcMacFilterTable, cpcEthertypeFilterConfigGroup=cpcEthertypeFilterConfigGroup, cpcCaptureSourceIfTable=cpcCaptureSourceIfTable, cpcIpFilterAddressType=cpcIpFilterAddressType, cpcCaptureSourceIfEntry=cpcCaptureSourceIfEntry, cpcSessionStatsEntry=cpcSessionStatsEntry, cpcBufferConfig=cpcBufferConfig, cpcBufferAction=cpcBufferAction, cpcIpFilterEntry=cpcIpFilterEntry, cpcMaxAccessGroupFilterAllowed=cpcMaxAccessGroupFilterAllowed, cpcEthertypeFilterStatus=cpcEthertypeFilterStatus, cpcIpFilterCriteria=cpcIpFilterCriteria, cpcMaxFilterAllowed=cpcMaxFilterAllowed, cpcDestFileNameConfigGroup=cpcDestFileNameConfigGroup, cpcMIBConformance=cpcMIBConformance, cpcMacFilterConfigGroup=cpcMacFilterConfigGroup, cpcSessionConfigTable=cpcSessionConfigTable, cpcMaxIpFilterAllowed=cpcMaxIpFilterAllowed, cpcBufferConfigTable=cpcBufferConfigTable, PYSNMP_MODULE_ID=ciscoPacketCaptureMIB, cpcVlanFilterRowStatus=cpcVlanFilterRowStatus, cpcBufferConfigGroup=cpcBufferConfigGroup, cpcSessionConfigEntry=cpcSessionConfigEntry, cpcMIBObjects=cpcMIBObjects, cpcPacketLengthFilterMin=cpcPacketLengthFilterMin, cpcSessionOperStatus=cpcSessionOperStatus, cpcAccessGroupFilterType=cpcAccessGroupFilterType, cpcAccessGroupFilterConfigGroup=cpcAccessGroupFilterConfigGroup, cpcScheduleConfig=cpcScheduleConfig, cpcIpFilterTable=cpcIpFilterTable, cpcMaxEthertypeFilterAllowed=cpcMaxEthertypeFilterAllowed, cpcSessionDescr=cpcSessionDescr, cpcSessionAction=cpcSessionAction, cpcEthertypeFilterEntry=cpcEthertypeFilterEntry, cpcSessionId=cpcSessionId, cpcBufferType=cpcBufferType, cpcCaptureSourceIfDirection=cpcCaptureSourceIfDirection, cpcIpFilterRowStatus=cpcIpFilterRowStatus, cpcEthertypeFilterTable=cpcEthertypeFilterTable, cpcAccessGroupFilterName=cpcAccessGroupFilterName, cpcMaxIpFilterConfigGroup=cpcMaxIpFilterConfigGroup, cpcMacFilterCriteria=cpcMacFilterCriteria, cpcPacketLengthFilterMax=cpcPacketLengthFilterMax, cpcCompliance=cpcCompliance, cpcEthertypeFilterValue=cpcEthertypeFilterValue, cpcScheduleStartTime=cpcScheduleStartTime, cpcSessionPacketsDropped=cpcSessionPacketsDropped, cpcSessionPacketLimits=cpcSessionPacketLimits, cpcVlanFilterConfigGroup=cpcVlanFilterConfigGroup, cpcSessionStatsGroup=cpcSessionStatsGroup, cpcSessionMaxSources=cpcSessionMaxSources, cpcMacFilterMacAddress=cpcMacFilterMacAddress, cpcBufferConfigEntry=cpcBufferConfigEntry, cpcMIBGroups=cpcMIBGroups, cpcMaxVlanFilterAllowed=cpcMaxVlanFilterAllowed, cpcVlanFilterEntry=cpcVlanFilterEntry, cpcPacketLengthFilterConfigGroup=cpcPacketLengthFilterConfigGroup, cpcScheduleConfigEntry=cpcScheduleConfigEntry, cpcFilterConfig=cpcFilterConfig, cpcBufferOperStatus=cpcBufferOperStatus, cpcScheduleConfigGroup=cpcScheduleConfigGroup, cpcGenericConfigGroup=cpcGenericConfigGroup, cpcSessionDestFileName=cpcSessionDestFileName, cpcSessionStats=cpcSessionStats, cpcComplianceRev1=cpcComplianceRev1, cpcMacFilterEntry=cpcMacFilterEntry, cpcMaxMacFilterConfigGroup=cpcMaxMacFilterConfigGroup, cpcAccessGroupFilterStatus=cpcAccessGroupFilterStatus, cpcSessionStatsTable=cpcSessionStatsTable, cpcSessionDescrGroup=cpcSessionDescrGroup, cpcAccessGroupFilterEntry=cpcAccessGroupFilterEntry, cpcIpFilterAddress=cpcIpFilterAddress, cpcSessionPacketsReceived=cpcSessionPacketsReceived, cpcGenericConfig=cpcGenericConfig)
