#
# PySNMP MIB module E1-OPT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/E1-OPT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:43:47 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Counter32, iso, TimeTicks, ObjectIdentity, enterprises, Unsigned32, IpAddress, Bits, Counter64, Integer32, ModuleIdentity, MibIdentifier, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter32", "iso", "TimeTicks", "ObjectIdentity", "enterprises", "Unsigned32", "IpAddress", "Bits", "Counter64", "Integer32", "ModuleIdentity", "MibIdentifier", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
codex = MibIdentifier((1, 3, 6, 1, 4, 1, 449))
cdxProductSpecific = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2))
cdx6500 = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1))
cdx6500Configuration = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2))
cdx6500CfgProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1))
cdx6500PCTPortProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1))
cdx6500PCTT1E1PortTable = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24))
cdx6500Statistics = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3))
cdx6500StatProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1))
cdx6500PSTPortProtocolGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1))
cdx6500PSTT1E1PortTable = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25))
class DisplayString(OctetString):
    pass

class PhysicalPortNumber(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(49, 50)

class VirtualPortNumber(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(100, 255)

cdx6500PCTE1PortTable = MibIdentifier((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2))
cdx6500PPCTE1PortTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1), )
if mibBuilder.loadTexts: cdx6500PPCTE1PortTable.setStatus('mandatory')
cdx6500PPCTE1PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1), ).setIndexNames((0, "E1-OPT-MIB", "cdx6500E1CfgPortNumber"))
if mibBuilder.loadTexts: cdx6500PPCTE1PortEntry.setStatus('mandatory')
cdx6500E1CfgPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 1), PhysicalPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgPortNumber.setStatus('mandatory')
cdx6500E1CfgPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(45))).clone(namedValues=NamedValues(("e1", 45)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgPortType.setStatus('mandatory')
cdx6500E1CfgFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("channelize", 1), ("isdn", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgFormat.setStatus('mandatory')
cdx6500E1CfgLineFramingType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 100))).clone(namedValues=NamedValues(("e1CcsFebe", 1), ("e1CcsCrc", 2), ("e1Ccs", 3), ("e1CasFebe", 4), ("e1CasCrc", 5), ("e1Cas", 6), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgLineFramingType.setStatus('mandatory')
cdx6500E1CfgLineCoding = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 100))).clone(namedValues=NamedValues(("hdb3", 1), ("ami", 3), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgLineCoding.setStatus('mandatory')
cdx6500E1CfgLineImpedence = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("li120", 1), ("li75", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgLineImpedence.setStatus('mandatory')
cdx6500E1CfgTransmitClock = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(129, 130, 131, 100))).clone(namedValues=NamedValues(("node", 129), ("rec", 130), ("int", 131), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgTransmitClock.setStatus('mandatory')
cdx6500E1CfgThresholdValueLES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgThresholdValueLES.setStatus('mandatory')
cdx6500E1CfgThresholdValueLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgThresholdValueLCV.setStatus('mandatory')
cdx6500E1CfgThresholdValuePCV = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgThresholdValuePCV.setStatus('mandatory')
cdx6500E1CfgThresholdValueCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgThresholdValueCSS.setStatus('mandatory')
cdx6500E1CfgThresholdValueES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgThresholdValueES.setStatus('mandatory')
cdx6500E1CfgThresholdValueBES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgThresholdValueBES.setStatus('mandatory')
cdx6500E1CfgThresholdValueSES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgThresholdValueSES.setStatus('mandatory')
cdx6500E1CfgThresholdValueSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgThresholdValueSEFS.setStatus('mandatory')
cdx6500E1CfgThresholdValueUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgThresholdValueUAS.setStatus('mandatory')
cdx6500E1CfgThresholdValueDM = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgThresholdValueDM.setStatus('mandatory')
cdx6500E1CfgSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 100))).clone(namedValues=NamedValues(("att4ess", 1), ("att5ess", 2), ("ntDms100", 3), ("ntDms250", 4), ("md110Us", 5), ("md110", 6), ("siemens", 7), ("ntt", 8), ("general", 9), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgSwitchType.setStatus('mandatory')
cdx6500E1CfgVariant = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 7, 9, 10, 11, 14, 100))).clone(namedValues=NamedValues(("att", 1), ("nt", 2), ("isdn2", 4), ("jate", 5), ("net5", 7), ("oneTr6", 9), ("vn3", 10), ("ccitt", 11), ("ts014", 14), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgVariant.setStatus('mandatory')
cdx6500E1CfgUserNetworkSide = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("user", 1), ("network", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgUserNetworkSide.setStatus('mandatory')
cdx6500E1CfgCallingIdMsbState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1CfgCallingIdMsbState.setStatus('mandatory')
cdx6500E1BchannelNumbering = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 2, 1, 1, 24, 2, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("oneTo31", 1), ("oneTo30", 2), ("nc", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1BchannelNumbering.setStatus('mandatory')
cdx6500PPSTE1PortTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 2), )
if mibBuilder.loadTexts: cdx6500PPSTE1PortTable.setStatus('mandatory')
cdx6500PPSTE1PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 2, 1), ).setIndexNames((0, "E1-OPT-MIB", "cdx6500E1StatPortNumber"))
if mibBuilder.loadTexts: cdx6500PPSTE1PortEntry.setStatus('mandatory')
cdx6500E1StatPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 2, 1, 1), PhysicalPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatPortNumber.setStatus('mandatory')
cdx6500E1StatTimeSinceLastResetType = MibScalar((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatTimeSinceLastResetType.setStatus('mandatory')
cdx6500E1StatPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(45))).clone(namedValues=NamedValues(("e1", 45)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatPortType.setStatus('mandatory')
cdx6500E1StatInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("it120", 1), ("it75", 2), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatInterfaceType.setStatus('mandatory')
cdx6500E1StatPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatPortState.setStatus('mandatory')
cdx6500E1StatAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 100))).clone(namedValues=NamedValues(("none", 1), ("rai", 2), ("ais", 3), ("los", 4), ("fas", 5), ("lof", 6), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatAlarmState.setStatus('mandatory')
cdx6500E1BoardHWRevAndPartNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1BoardHWRevAndPartNumber.setStatus('mandatory')
cdx6500E1StatDailyHistoryTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 4), )
if mibBuilder.loadTexts: cdx6500E1StatDailyHistoryTable.setStatus('mandatory')
cdx6500E1StatDailyHistoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 4, 1), ).setIndexNames((0, "E1-OPT-MIB", "cdx6500E1StatDailyHistoryPortNumber"), (0, "E1-OPT-MIB", "cdx6500E1StatDailyHistoryInterval"))
if mibBuilder.loadTexts: cdx6500E1StatDailyHistoryEntry.setStatus('mandatory')
cdx6500E1StatDailyHistoryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatDailyHistoryInterval.setStatus('mandatory')
cdx6500E1StatDailyHistoryLES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatDailyHistoryLES.setStatus('mandatory')
cdx6500E1StatDailyHistoryLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatDailyHistoryLCV.setStatus('mandatory')
cdx6500E1StatDailyHistoryPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatDailyHistoryPCV.setStatus('mandatory')
cdx6500E1StatDailyHistoryCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatDailyHistoryCSS.setStatus('mandatory')
cdx6500E1StatDailyHistoryES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatDailyHistoryES.setStatus('mandatory')
cdx6500E1StatDailyHistoryBES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatDailyHistoryBES.setStatus('mandatory')
cdx6500E1StatDailyHistorySES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 4, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatDailyHistorySES.setStatus('mandatory')
cdx6500E1StatDailyHistorySEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 4, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatDailyHistorySEFS.setStatus('mandatory')
cdx6500E1StatDailyHistoryUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 4, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatDailyHistoryUAS.setStatus('mandatory')
cdx6500E1StatDailyHistoryDM = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 4, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatDailyHistoryDM.setStatus('mandatory')
cdx6500E1StatDailyHistoryPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 4, 1, 12), PhysicalPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatDailyHistoryPortNumber.setStatus('mandatory')
cdx6500E1StatABCDStateTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 6), )
if mibBuilder.loadTexts: cdx6500E1StatABCDStateTable.setStatus('mandatory')
cdx6500E1StatABCDStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 6, 1), ).setIndexNames((0, "E1-OPT-MIB", "cdx6500E1StatABCDStatePortNumber"), (0, "E1-OPT-MIB", "cdx6500E1StatABCDStateDS0ChannelNumber"))
if mibBuilder.loadTexts: cdx6500E1StatABCDStateEntry.setStatus('mandatory')
cdx6500E1StatABCDStateDS0ChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatABCDStateDS0ChannelNumber.setStatus('mandatory')
cdx6500E1StatABCDStateCurrentTxState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatABCDStateCurrentTxState.setStatus('deprecated')
cdx6500E1StatABCDStateCurrentRxState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 6, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatABCDStateCurrentRxState.setStatus('mandatory')
cdx6500E1StatABCDStatePortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 6, 1, 4), PhysicalPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatABCDStatePortNumber.setStatus('mandatory')
cdx6500E1ISDNStatusTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8), )
if mibBuilder.loadTexts: cdx6500E1ISDNStatusTable.setStatus('mandatory')
cdx6500E1StatISDNStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1), ).setIndexNames((0, "E1-OPT-MIB", "cdx6500E1StatISDNStatusPortNumber"))
if mibBuilder.loadTexts: cdx6500E1StatISDNStatusEntry.setStatus('mandatory')
cdx6500E1StatISDNStatusPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1, 1), PhysicalPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatISDNStatusPortNumber.setStatus('mandatory')
cdx6500E1StatNumRxCallsSinceLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatNumRxCallsSinceLastReset.setStatus('mandatory')
cdx6500E1StatNumRxCallsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatNumRxCallsRejected.setStatus('mandatory')
cdx6500E1StatRxLastCallFailureCause = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 255))).clone(namedValues=NamedValues(("noFailureReported", 193), ("noAvailableVirtualPort", 194), ("securityViolation", 195), ("noResourcesAvailable", 196), ("callRejected", 197), ("invalidPhoneNumber", 198), ("outgoingCallRequestTimeout", 199), ("callCollision", 200), ("virtualPortNotAvailable", 201), ("invalidConfiguration", 202), ("na", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatRxLastCallFailureCause.setStatus('mandatory')
cdx6500E1StatRxLastCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatRxLastCalledNumber.setStatus('mandatory')
cdx6500E1StatRxLastCallingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatRxLastCallingNumber.setStatus('mandatory')
cdx6500E1StatRxMinCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatRxMinCallDuration.setStatus('mandatory')
cdx6500E1StatRxMaxCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatRxMaxCallDuration.setStatus('mandatory')
cdx6500E1StatRxAvgCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatRxAvgCallDuration.setStatus('mandatory')
cdx6500E1StatNumTxCallsSinceLastReset = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatNumTxCallsSinceLastReset.setStatus('mandatory')
cdx6500E1StatNumTxCallsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatNumTxCallsRejected.setStatus('mandatory')
cdx6500E1StatTxLastCallFailureCause = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 255))).clone(namedValues=NamedValues(("noFailureReported", 193), ("noAvailableVirtualPort", 194), ("securityViolation", 195), ("noResourcesAvailable", 196), ("callRejected", 197), ("invalidPhoneNumber", 198), ("outgoingCallRequestTimeout", 199), ("callCollision", 200), ("virtualPortNotAvailable", 201), ("invalidConfiguration", 202), ("na", 255)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatTxLastCallFailureCause.setStatus('mandatory')
cdx6500E1StatTxLastCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatTxLastCalledNumber.setStatus('mandatory')
cdx6500E1StatTxLastCallingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatTxLastCallingNumber.setStatus('mandatory')
cdx6500E1StatTxMinCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatTxMinCallDuration.setStatus('mandatory')
cdx6500E1StatTxMaxCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatTxMaxCallDuration.setStatus('mandatory')
cdx6500E1StatTxAvgCallDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatTxAvgCallDuration.setStatus('mandatory')
cdx6500E1StatDchannelState = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 8, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatDchannelState.setStatus('mandatory')
cdx6500E1StatISDNCallSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 10), )
if mibBuilder.loadTexts: cdx6500E1StatISDNCallSummaryTable.setStatus('mandatory')
cdx6500E1StatISDNCallSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 10, 1), ).setIndexNames((0, "E1-OPT-MIB", "cdx6500E1StatISDNPortNumber"), (0, "E1-OPT-MIB", "cdx6500E1StatISDNBChannelNumber"))
if mibBuilder.loadTexts: cdx6500E1StatISDNCallSummaryEntry.setStatus('mandatory')
cdx6500E1StatISDNBChannelNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatISDNBChannelNumber.setStatus('mandatory')
cdx6500E1StatISDNBChannelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 100))).clone(namedValues=NamedValues(("idle", 1), ("ringing", 2), ("connected", 3), ("outOfService", 4), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatISDNBChannelStatus.setStatus('mandatory')
cdx6500E1StatISDNCallDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 100))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("invalid", 3), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatISDNCallDirection.setStatus('mandatory')
cdx6500E1StatISDNCallingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 10, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatISDNCallingNumber.setStatus('mandatory')
cdx6500E1StatISDNCalledNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 10, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatISDNCalledNumber.setStatus('mandatory')
cdx6500E1StatISDNDS0Rate = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 100))).clone(namedValues=NamedValues(("ds056k", 1), ("ds064k", 2), ("na", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatISDNDS0Rate.setStatus('mandatory')
cdx6500E1StatISDNVirtualPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 10, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatISDNVirtualPortNumber.setStatus('mandatory')
cdx6500E1StatISDNTimeCallStarted = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 10, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatISDNTimeCallStarted.setStatus('mandatory')
cdx6500E1StatISDNPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 10, 1, 9), PhysicalPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatISDNPortNumber.setStatus('mandatory')
cdx6500E1StatLast24HoursReportTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 12), )
if mibBuilder.loadTexts: cdx6500E1StatLast24HoursReportTable.setStatus('mandatory')
cdx6500E1StatLast24HoursReportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 12, 1), ).setIndexNames((0, "E1-OPT-MIB", "cdx6500E1StatLast24HoursReportPortNumber"))
if mibBuilder.loadTexts: cdx6500E1StatLast24HoursReportEntry.setStatus('mandatory')
cdx6500E1StatLast24HoursReportPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 12, 1, 1), PhysicalPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatLast24HoursReportPortNumber.setStatus('mandatory')
cdx6500E1StatLast24HoursReportLES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 12, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatLast24HoursReportLES.setStatus('mandatory')
cdx6500E1StatLast24HoursReportLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 12, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatLast24HoursReportLCV.setStatus('mandatory')
cdx6500E1StatLast24HoursReportPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 12, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatLast24HoursReportPCV.setStatus('mandatory')
cdx6500E1StatLast24HoursReportCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 12, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatLast24HoursReportCSS.setStatus('mandatory')
cdx6500E1StatLast24HoursReportES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 12, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatLast24HoursReportES.setStatus('mandatory')
cdx6500E1StatLast24HoursReportBES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 12, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatLast24HoursReportBES.setStatus('mandatory')
cdx6500E1StatLast24HoursReportSES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 12, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatLast24HoursReportSES.setStatus('mandatory')
cdx6500E1StatLast24HoursReportSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 12, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatLast24HoursReportSEFS.setStatus('mandatory')
cdx6500E1StatLast24HoursReportUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 12, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatLast24HoursReportUAS.setStatus('mandatory')
cdx6500E1StatCurrent15MinutesReportTable = MibTable((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 14), )
if mibBuilder.loadTexts: cdx6500E1StatCurrent15MinutesReportTable.setStatus('mandatory')
cdx6500E1StatCurrent15MinutesReportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 14, 1), ).setIndexNames((0, "E1-OPT-MIB", "cdx6500E1StatCurrent15MinutesReportPortNumber"))
if mibBuilder.loadTexts: cdx6500E1StatCurrent15MinutesReportEntry.setStatus('mandatory')
cdx6500E1StatCurrent15MinutesReportPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 14, 1, 1), PhysicalPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatCurrent15MinutesReportPortNumber.setStatus('mandatory')
cdx6500E1StatCurrent15MinutesReportTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 14, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatCurrent15MinutesReportTimeElapsed.setStatus('mandatory')
cdx6500E1StatCurrent15MinutesReportLES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 14, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatCurrent15MinutesReportLES.setStatus('mandatory')
cdx6500E1StatCurrent15MinutesReportLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 14, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatCurrent15MinutesReportLCV.setStatus('mandatory')
cdx6500E1StatCurrent15MinutesReportPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 14, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatCurrent15MinutesReportPCV.setStatus('mandatory')
cdx6500E1StatCurrent15MinutesReportCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 14, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatCurrent15MinutesReportCSS.setStatus('mandatory')
cdx6500E1StatCurrent15MinutesReportES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 14, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatCurrent15MinutesReportES.setStatus('mandatory')
cdx6500E1StatCurrent15MinutesReportBES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 14, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatCurrent15MinutesReportBES.setStatus('mandatory')
cdx6500E1StatCurrent15MinutesReportSES = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 14, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatCurrent15MinutesReportSES.setStatus('mandatory')
cdx6500E1StatCurrent15MinutesReportSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 14, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatCurrent15MinutesReportSEFS.setStatus('mandatory')
cdx6500E1StatCurrent15MinutesReportUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 449, 2, 1, 3, 1, 1, 25, 14, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cdx6500E1StatCurrent15MinutesReportUAS.setStatus('mandatory')
mibBuilder.exportSymbols("E1-OPT-MIB", cdx6500E1StatTxMinCallDuration=cdx6500E1StatTxMinCallDuration, cdx6500E1StatISDNTimeCallStarted=cdx6500E1StatISDNTimeCallStarted, cdx6500E1StatISDNCallDirection=cdx6500E1StatISDNCallDirection, cdx6500E1StatISDNCallSummaryEntry=cdx6500E1StatISDNCallSummaryEntry, cdx6500E1CfgSwitchType=cdx6500E1CfgSwitchType, cdx6500E1CfgThresholdValueBES=cdx6500E1CfgThresholdValueBES, cdx6500E1StatDailyHistorySEFS=cdx6500E1StatDailyHistorySEFS, cdx6500E1StatCurrent15MinutesReportSEFS=cdx6500E1StatCurrent15MinutesReportSEFS, cdx6500E1BoardHWRevAndPartNumber=cdx6500E1BoardHWRevAndPartNumber, cdx6500E1StatCurrent15MinutesReportCSS=cdx6500E1StatCurrent15MinutesReportCSS, cdx6500E1StatAlarmState=cdx6500E1StatAlarmState, cdx6500E1StatDailyHistoryInterval=cdx6500E1StatDailyHistoryInterval, cdx6500E1StatDailyHistoryTable=cdx6500E1StatDailyHistoryTable, cdx6500E1StatISDNBChannelStatus=cdx6500E1StatISDNBChannelStatus, cdx6500E1StatDailyHistoryES=cdx6500E1StatDailyHistoryES, cdx6500E1CfgCallingIdMsbState=cdx6500E1CfgCallingIdMsbState, cdx6500E1StatRxLastCalledNumber=cdx6500E1StatRxLastCalledNumber, cdx6500E1StatPortType=cdx6500E1StatPortType, cdx6500Configuration=cdx6500Configuration, cdx6500E1CfgThresholdValueSEFS=cdx6500E1CfgThresholdValueSEFS, cdx6500PCTE1PortTable=cdx6500PCTE1PortTable, cdx6500E1CfgUserNetworkSide=cdx6500E1CfgUserNetworkSide, cdx6500E1CfgLineCoding=cdx6500E1CfgLineCoding, cdxProductSpecific=cdxProductSpecific, cdx6500E1StatCurrent15MinutesReportUAS=cdx6500E1StatCurrent15MinutesReportUAS, cdx6500E1StatLast24HoursReportLCV=cdx6500E1StatLast24HoursReportLCV, cdx6500PSTT1E1PortTable=cdx6500PSTT1E1PortTable, cdx6500PPSTE1PortEntry=cdx6500PPSTE1PortEntry, cdx6500E1StatLast24HoursReportPCV=cdx6500E1StatLast24HoursReportPCV, cdx6500E1CfgThresholdValueUAS=cdx6500E1CfgThresholdValueUAS, cdx6500E1StatABCDStateTable=cdx6500E1StatABCDStateTable, cdx6500E1CfgTransmitClock=cdx6500E1CfgTransmitClock, cdx6500E1StatISDNDS0Rate=cdx6500E1StatISDNDS0Rate, cdx6500E1StatLast24HoursReportTable=cdx6500E1StatLast24HoursReportTable, cdx6500E1StatISDNCalledNumber=cdx6500E1StatISDNCalledNumber, cdx6500E1CfgThresholdValueSES=cdx6500E1CfgThresholdValueSES, cdx6500E1CfgThresholdValueDM=cdx6500E1CfgThresholdValueDM, cdx6500E1StatTimeSinceLastResetType=cdx6500E1StatTimeSinceLastResetType, cdx6500E1StatDailyHistorySES=cdx6500E1StatDailyHistorySES, cdx6500E1StatLast24HoursReportBES=cdx6500E1StatLast24HoursReportBES, cdx6500E1StatCurrent15MinutesReportSES=cdx6500E1StatCurrent15MinutesReportSES, cdx6500E1StatISDNPortNumber=cdx6500E1StatISDNPortNumber, cdx6500E1StatISDNCallingNumber=cdx6500E1StatISDNCallingNumber, cdx6500E1StatNumRxCallsRejected=cdx6500E1StatNumRxCallsRejected, cdx6500E1StatNumTxCallsSinceLastReset=cdx6500E1StatNumTxCallsSinceLastReset, cdx6500E1CfgThresholdValuePCV=cdx6500E1CfgThresholdValuePCV, cdx6500E1StatPortNumber=cdx6500E1StatPortNumber, cdx6500E1StatABCDStatePortNumber=cdx6500E1StatABCDStatePortNumber, cdx6500E1StatLast24HoursReportES=cdx6500E1StatLast24HoursReportES, cdx6500PCTT1E1PortTable=cdx6500PCTT1E1PortTable, cdx6500E1CfgThresholdValueLES=cdx6500E1CfgThresholdValueLES, cdx6500E1CfgLineImpedence=cdx6500E1CfgLineImpedence, cdx6500E1StatABCDStateCurrentRxState=cdx6500E1StatABCDStateCurrentRxState, cdx6500PCTPortProtocolGroup=cdx6500PCTPortProtocolGroup, cdx6500E1StatDailyHistoryPCV=cdx6500E1StatDailyHistoryPCV, cdx6500Statistics=cdx6500Statistics, cdx6500PPCTE1PortTable=cdx6500PPCTE1PortTable, cdx6500E1StatNumRxCallsSinceLastReset=cdx6500E1StatNumRxCallsSinceLastReset, cdx6500E1StatISDNBChannelNumber=cdx6500E1StatISDNBChannelNumber, cdx6500E1ISDNStatusTable=cdx6500E1ISDNStatusTable, cdx6500E1StatDailyHistoryLCV=cdx6500E1StatDailyHistoryLCV, cdx6500E1StatInterfaceType=cdx6500E1StatInterfaceType, codex=codex, cdx6500E1StatABCDStateDS0ChannelNumber=cdx6500E1StatABCDStateDS0ChannelNumber, cdx6500E1StatTxLastCallingNumber=cdx6500E1StatTxLastCallingNumber, cdx6500E1StatCurrent15MinutesReportTimeElapsed=cdx6500E1StatCurrent15MinutesReportTimeElapsed, cdx6500PSTPortProtocolGroup=cdx6500PSTPortProtocolGroup, cdx6500E1CfgVariant=cdx6500E1CfgVariant, cdx6500E1StatDailyHistoryPortNumber=cdx6500E1StatDailyHistoryPortNumber, cdx6500E1StatISDNStatusEntry=cdx6500E1StatISDNStatusEntry, cdx6500E1StatTxLastCalledNumber=cdx6500E1StatTxLastCalledNumber, cdx6500E1StatTxMaxCallDuration=cdx6500E1StatTxMaxCallDuration, cdx6500E1StatDailyHistoryBES=cdx6500E1StatDailyHistoryBES, cdx6500PPSTE1PortTable=cdx6500PPSTE1PortTable, cdx6500StatProtocolGroup=cdx6500StatProtocolGroup, VirtualPortNumber=VirtualPortNumber, cdx6500E1BchannelNumbering=cdx6500E1BchannelNumbering, cdx6500E1CfgPortNumber=cdx6500E1CfgPortNumber, PhysicalPortNumber=PhysicalPortNumber, cdx6500E1StatLast24HoursReportUAS=cdx6500E1StatLast24HoursReportUAS, cdx6500E1StatRxMinCallDuration=cdx6500E1StatRxMinCallDuration, cdx6500E1StatTxLastCallFailureCause=cdx6500E1StatTxLastCallFailureCause, cdx6500E1StatLast24HoursReportCSS=cdx6500E1StatLast24HoursReportCSS, cdx6500E1StatRxAvgCallDuration=cdx6500E1StatRxAvgCallDuration, cdx6500E1CfgFormat=cdx6500E1CfgFormat, cdx6500E1StatDailyHistoryLES=cdx6500E1StatDailyHistoryLES, cdx6500E1StatRxLastCallingNumber=cdx6500E1StatRxLastCallingNumber, cdx6500E1StatDchannelState=cdx6500E1StatDchannelState, cdx6500E1CfgThresholdValueLCV=cdx6500E1CfgThresholdValueLCV, cdx6500E1StatCurrent15MinutesReportEntry=cdx6500E1StatCurrent15MinutesReportEntry, cdx6500E1StatISDNStatusPortNumber=cdx6500E1StatISDNStatusPortNumber, cdx6500E1StatABCDStateCurrentTxState=cdx6500E1StatABCDStateCurrentTxState, cdx6500E1StatDailyHistoryCSS=cdx6500E1StatDailyHistoryCSS, cdx6500E1StatLast24HoursReportLES=cdx6500E1StatLast24HoursReportLES, cdx6500E1StatNumTxCallsRejected=cdx6500E1StatNumTxCallsRejected, cdx6500E1StatRxMaxCallDuration=cdx6500E1StatRxMaxCallDuration, cdx6500E1StatTxAvgCallDuration=cdx6500E1StatTxAvgCallDuration, cdx6500E1StatISDNVirtualPortNumber=cdx6500E1StatISDNVirtualPortNumber, DisplayString=DisplayString, cdx6500E1StatISDNCallSummaryTable=cdx6500E1StatISDNCallSummaryTable, cdx6500E1StatLast24HoursReportSEFS=cdx6500E1StatLast24HoursReportSEFS, cdx6500E1StatCurrent15MinutesReportLCV=cdx6500E1StatCurrent15MinutesReportLCV, cdx6500PPCTE1PortEntry=cdx6500PPCTE1PortEntry, cdx6500E1StatPortState=cdx6500E1StatPortState, cdx6500CfgProtocolGroup=cdx6500CfgProtocolGroup, cdx6500E1StatCurrent15MinutesReportTable=cdx6500E1StatCurrent15MinutesReportTable, cdx6500E1StatCurrent15MinutesReportES=cdx6500E1StatCurrent15MinutesReportES, cdx6500E1CfgThresholdValueES=cdx6500E1CfgThresholdValueES, cdx6500E1StatLast24HoursReportSES=cdx6500E1StatLast24HoursReportSES, cdx6500E1StatCurrent15MinutesReportLES=cdx6500E1StatCurrent15MinutesReportLES, cdx6500E1StatCurrent15MinutesReportPCV=cdx6500E1StatCurrent15MinutesReportPCV, cdx6500=cdx6500, cdx6500E1StatCurrent15MinutesReportBES=cdx6500E1StatCurrent15MinutesReportBES, cdx6500E1StatDailyHistoryDM=cdx6500E1StatDailyHistoryDM, cdx6500E1StatDailyHistoryEntry=cdx6500E1StatDailyHistoryEntry, cdx6500E1StatRxLastCallFailureCause=cdx6500E1StatRxLastCallFailureCause, cdx6500E1StatLast24HoursReportEntry=cdx6500E1StatLast24HoursReportEntry, cdx6500E1StatLast24HoursReportPortNumber=cdx6500E1StatLast24HoursReportPortNumber, cdx6500E1StatCurrent15MinutesReportPortNumber=cdx6500E1StatCurrent15MinutesReportPortNumber, cdx6500E1CfgPortType=cdx6500E1CfgPortType, cdx6500E1CfgThresholdValueCSS=cdx6500E1CfgThresholdValueCSS, cdx6500E1StatDailyHistoryUAS=cdx6500E1StatDailyHistoryUAS, cdx6500E1StatABCDStateEntry=cdx6500E1StatABCDStateEntry, cdx6500E1CfgLineFramingType=cdx6500E1CfgLineFramingType)
