#
# PySNMP MIB module HH3C-MPLSEXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-MPLSEXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:15:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, Counter32, Bits, NotificationType, Counter64, iso, Integer32, Unsigned32, ModuleIdentity, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter32", "Bits", "NotificationType", "Counter64", "iso", "Integer32", "Unsigned32", "ModuleIdentity", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier", "ObjectIdentity")
TextualConvention, DisplayString, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "TruthValue")
hh3cMplsExt = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 142))
hh3cMplsExt.setRevisions(('2013-06-13 18:00',))
if mibBuilder.loadTexts: hh3cMplsExt.setLastUpdated('201306131800Z')
if mibBuilder.loadTexts: hh3cMplsExt.setOrganization('Hangzhou H3C Technologies Co., Ltd.')
hh3cMplsExtObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 142, 1))
hh3cMplsExtScalarGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 142, 1, 1))
hh3cMplsExtLsrID = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 142, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsExtLsrID.setStatus('current')
hh3cMplsExtLdpStatus = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 142, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cMplsExtLdpStatus.setStatus('current')
hh3cMplsExtTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 142, 1, 2), )
if mibBuilder.loadTexts: hh3cMplsExtTable.setStatus('current')
hh3cMplsExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 142, 1, 2, 1), ).setIndexNames((0, "HH3C-MPLSEXT-MIB", "hh3cMplsExtIndex"))
if mibBuilder.loadTexts: hh3cMplsExtEntry.setStatus('current')
hh3cMplsExtIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 142, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hh3cMplsExtIndex.setStatus('current')
hh3cMplsExtCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 142, 1, 2, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsExtCapability.setStatus('current')
hh3cMplsExtMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 142, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(46, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsExtMtu.setStatus('current')
hh3cMplsExtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 142, 1, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsExtRowStatus.setStatus('current')
hh3cMplsExtLdpTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 142, 1, 3), )
if mibBuilder.loadTexts: hh3cMplsExtLdpTable.setStatus('current')
hh3cMplsExtLdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 142, 1, 3, 1), ).setIndexNames((0, "HH3C-MPLSEXT-MIB", "hh3cMplsExtLdpIndex"))
if mibBuilder.loadTexts: hh3cMplsExtLdpEntry.setStatus('current')
hh3cMplsExtLdpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 142, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: hh3cMplsExtLdpIndex.setStatus('current')
hh3cMplsExtLdpCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 142, 1, 3, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsExtLdpCapability.setStatus('current')
hh3cMplsExtLdpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 142, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cMplsExtLdpRowStatus.setStatus('current')
mibBuilder.exportSymbols("HH3C-MPLSEXT-MIB", hh3cMplsExtLdpIndex=hh3cMplsExtLdpIndex, hh3cMplsExtMtu=hh3cMplsExtMtu, hh3cMplsExt=hh3cMplsExt, hh3cMplsExtLdpTable=hh3cMplsExtLdpTable, hh3cMplsExtLdpStatus=hh3cMplsExtLdpStatus, hh3cMplsExtScalarGroup=hh3cMplsExtScalarGroup, hh3cMplsExtLdpCapability=hh3cMplsExtLdpCapability, hh3cMplsExtObjects=hh3cMplsExtObjects, hh3cMplsExtLsrID=hh3cMplsExtLsrID, PYSNMP_MODULE_ID=hh3cMplsExt, hh3cMplsExtRowStatus=hh3cMplsExtRowStatus, hh3cMplsExtLdpEntry=hh3cMplsExtLdpEntry, hh3cMplsExtTable=hh3cMplsExtTable, hh3cMplsExtLdpRowStatus=hh3cMplsExtLdpRowStatus, hh3cMplsExtEntry=hh3cMplsExtEntry, hh3cMplsExtCapability=hh3cMplsExtCapability, hh3cMplsExtIndex=hh3cMplsExtIndex)
