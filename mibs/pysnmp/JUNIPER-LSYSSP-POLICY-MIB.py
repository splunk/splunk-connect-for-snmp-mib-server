#
# PySNMP MIB module JUNIPER-LSYSSP-POLICY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-LSYSSP-POLICY-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:49:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
jnxLsysSpPolicy, = mibBuilder.importSymbols("JUNIPER-LSYS-SECURITYPROFILE-MIB", "jnxLsysSpPolicy")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, MibIdentifier, Integer32, Unsigned32, Bits, TimeTicks, NotificationType, Gauge32, ObjectIdentity, Counter32, iso, IpAddress, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "Integer32", "Unsigned32", "Bits", "TimeTicks", "NotificationType", "Gauge32", "ObjectIdentity", "Counter32", "iso", "IpAddress", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
jnxLsysSpPolicyMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 3, 1))
if mibBuilder.loadTexts: jnxLsysSpPolicyMIB.setLastUpdated('201005191644Z')
if mibBuilder.loadTexts: jnxLsysSpPolicyMIB.setOrganization('Juniper Networks, Inc.')
jnxLsysSpPolicyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 3, 1, 1))
jnxLsysSpPolicySummary = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 3, 1, 2))
jnxLsysSpPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 3, 1, 1, 1), )
if mibBuilder.loadTexts: jnxLsysSpPolicyTable.setStatus('current')
jnxLsysSpPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 3, 1, 1, 1, 1), ).setIndexNames((1, "JUNIPER-LSYSSP-POLICY-MIB", "jnxLsysSpPolicyLsysName"))
if mibBuilder.loadTexts: jnxLsysSpPolicyEntry.setStatus('current')
jnxLsysSpPolicyLsysName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 3, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: jnxLsysSpPolicyLsysName.setStatus('current')
jnxLsysSpPolicyProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 3, 1, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicyProfileName.setStatus('current')
jnxLsysSpPolicyUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 3, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicyUsage.setStatus('current')
jnxLsysSpPolicyReserved = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 3, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicyReserved.setStatus('current')
jnxLsysSpPolicyMaximum = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 3, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicyMaximum.setStatus('current')
jnxLsysSpPolicyUsedAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 3, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicyUsedAmount.setStatus('current')
jnxLsysSpPolicyMaxQuota = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 3, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicyMaxQuota.setStatus('current')
jnxLsysSpPolicyAvailableAmount = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 3, 1, 2, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicyAvailableAmount.setStatus('current')
jnxLsysSpPolicyHeaviestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 3, 1, 2, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicyHeaviestUsage.setStatus('current')
jnxLsysSpPolicyHeaviestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 3, 1, 2, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicyHeaviestUser.setStatus('current')
jnxLsysSpPolicyLightestUsage = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 3, 1, 2, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicyLightestUsage.setStatus('current')
jnxLsysSpPolicyLightestUser = MibScalar((1, 3, 6, 1, 4, 1, 2636, 3, 39, 1, 17, 3, 1, 2, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxLsysSpPolicyLightestUser.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-LSYSSP-POLICY-MIB", jnxLsysSpPolicySummary=jnxLsysSpPolicySummary, jnxLsysSpPolicyUsedAmount=jnxLsysSpPolicyUsedAmount, jnxLsysSpPolicyMaximum=jnxLsysSpPolicyMaximum, PYSNMP_MODULE_ID=jnxLsysSpPolicyMIB, jnxLsysSpPolicyHeaviestUser=jnxLsysSpPolicyHeaviestUser, jnxLsysSpPolicyObjects=jnxLsysSpPolicyObjects, jnxLsysSpPolicyLightestUsage=jnxLsysSpPolicyLightestUsage, jnxLsysSpPolicyLightestUser=jnxLsysSpPolicyLightestUser, jnxLsysSpPolicyMIB=jnxLsysSpPolicyMIB, jnxLsysSpPolicyMaxQuota=jnxLsysSpPolicyMaxQuota, jnxLsysSpPolicyUsage=jnxLsysSpPolicyUsage, jnxLsysSpPolicyTable=jnxLsysSpPolicyTable, jnxLsysSpPolicyEntry=jnxLsysSpPolicyEntry, jnxLsysSpPolicyAvailableAmount=jnxLsysSpPolicyAvailableAmount, jnxLsysSpPolicyHeaviestUsage=jnxLsysSpPolicyHeaviestUsage, jnxLsysSpPolicyProfileName=jnxLsysSpPolicyProfileName, jnxLsysSpPolicyReserved=jnxLsysSpPolicyReserved, jnxLsysSpPolicyLsysName=jnxLsysSpPolicyLsysName)
