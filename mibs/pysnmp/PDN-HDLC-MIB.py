#
# PySNMP MIB module PDN-HDLC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PDN-HDLC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:29:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
pdn_interfaces, = mibBuilder.importSymbols("PDN-HEADER-MIB", "pdn-interfaces")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
ModuleIdentity, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, NotificationType, Integer32, MibIdentifier, Bits, Unsigned32, TimeTicks, Counter32, ObjectIdentity, Counter64, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "NotificationType", "Integer32", "MibIdentifier", "Bits", "Unsigned32", "TimeTicks", "Counter32", "ObjectIdentity", "Counter64", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
pdnHdlcMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26))
pdnHdlcMIB.setRevisions(('2004-09-10 00:00',))
if mibBuilder.loadTexts: pdnHdlcMIB.setLastUpdated('200409100000Z')
if mibBuilder.loadTexts: pdnHdlcMIB.setOrganization('Paradyne Networks MIB Working Group Other information about group editing the MIB')
pdnHdlcNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 0))
pdnHdlcObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1))
pdnHdlcAFNs = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 2))
pdnHdlcConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 3))
pdnHdlcStatsTotalTable = MibTable((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1), )
if mibBuilder.loadTexts: pdnHdlcStatsTotalTable.setStatus('current')
pdnHdlcStatsTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pdnHdlcStatsTotalEntry.setStatus('current')
pdnHdlcStatsTotalRxGood = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdlcStatsTotalRxGood.setStatus('current')
pdnHdlcStatsTotalRxCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdlcStatsTotalRxCRCErrors.setStatus('current')
pdnHdlcStatsTotalRxAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdlcStatsTotalRxAborts.setStatus('current')
pdnHdlcStatsTotalRxBadAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdlcStatsTotalRxBadAddress.setStatus('current')
pdnHdlcStatsTotalRxNoBufAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdlcStatsTotalRxNoBufAvail.setStatus('current')
pdnHdlcStatsTotalReceiverOverrun = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdlcStatsTotalReceiverOverrun.setStatus('current')
pdnHdlcStatsTotalRxMaxSizeExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdlcStatsTotalRxMaxSizeExceeded.setStatus('current')
pdnHdlcStatsTotalTx = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdlcStatsTotalTx.setStatus('current')
pdnHdlcStatsTotalTxBufUnderrun = MibTableColumn((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnHdlcStatsTotalTxBufUnderrun.setStatus('current')
pdnHdlcCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 3, 1))
pdnHdlcGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 3, 2))
pdnHdlcCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 3, 1, 1)).setObjects(("PDN-HDLC-MIB", "pdnHdlcStatsTotalGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnHdlcCompliance = pdnHdlcCompliance.setStatus('current')
pdnHdlcObjGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 3, 2, 1))
pdnHdlcAfnGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 3, 2, 2))
pdnHdlcNtfyGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 3, 2, 3))
pdnHdlcStatsTotalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 1795, 2, 24, 2, 6, 26, 3, 2, 1, 1)).setObjects(("PDN-HDLC-MIB", "pdnHdlcStatsTotalRxGood"), ("PDN-HDLC-MIB", "pdnHdlcStatsTotalRxCRCErrors"), ("PDN-HDLC-MIB", "pdnHdlcStatsTotalRxAborts"), ("PDN-HDLC-MIB", "pdnHdlcStatsTotalRxBadAddress"), ("PDN-HDLC-MIB", "pdnHdlcStatsTotalRxNoBufAvail"), ("PDN-HDLC-MIB", "pdnHdlcStatsTotalReceiverOverrun"), ("PDN-HDLC-MIB", "pdnHdlcStatsTotalRxMaxSizeExceeded"), ("PDN-HDLC-MIB", "pdnHdlcStatsTotalTx"), ("PDN-HDLC-MIB", "pdnHdlcStatsTotalTxBufUnderrun"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pdnHdlcStatsTotalGroup = pdnHdlcStatsTotalGroup.setStatus('current')
mibBuilder.exportSymbols("PDN-HDLC-MIB", pdnHdlcStatsTotalRxBadAddress=pdnHdlcStatsTotalRxBadAddress, pdnHdlcAfnGroups=pdnHdlcAfnGroups, pdnHdlcObjGroups=pdnHdlcObjGroups, pdnHdlcGroups=pdnHdlcGroups, PYSNMP_MODULE_ID=pdnHdlcMIB, pdnHdlcStatsTotalRxAborts=pdnHdlcStatsTotalRxAborts, pdnHdlcStatsTotalRxNoBufAvail=pdnHdlcStatsTotalRxNoBufAvail, pdnHdlcStatsTotalEntry=pdnHdlcStatsTotalEntry, pdnHdlcStatsTotalReceiverOverrun=pdnHdlcStatsTotalReceiverOverrun, pdnHdlcStatsTotalGroup=pdnHdlcStatsTotalGroup, pdnHdlcMIB=pdnHdlcMIB, pdnHdlcStatsTotalTxBufUnderrun=pdnHdlcStatsTotalTxBufUnderrun, pdnHdlcStatsTotalRxCRCErrors=pdnHdlcStatsTotalRxCRCErrors, pdnHdlcAFNs=pdnHdlcAFNs, pdnHdlcStatsTotalTable=pdnHdlcStatsTotalTable, pdnHdlcStatsTotalRxMaxSizeExceeded=pdnHdlcStatsTotalRxMaxSizeExceeded, pdnHdlcObjects=pdnHdlcObjects, pdnHdlcConformance=pdnHdlcConformance, pdnHdlcStatsTotalRxGood=pdnHdlcStatsTotalRxGood, pdnHdlcCompliances=pdnHdlcCompliances, pdnHdlcStatsTotalTx=pdnHdlcStatsTotalTx, pdnHdlcNtfyGroups=pdnHdlcNtfyGroups, pdnHdlcNotifications=pdnHdlcNotifications, pdnHdlcCompliance=pdnHdlcCompliance)
