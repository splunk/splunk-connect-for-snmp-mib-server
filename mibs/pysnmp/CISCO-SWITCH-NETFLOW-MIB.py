#
# PySNMP MIB module CISCO-SWITCH-NETFLOW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-SWITCH-NETFLOW-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:56:59 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
Percent, = mibBuilder.importSymbols("CISCO-QOS-PIB-MIB", "Percent")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
entPhysicalDescr, entPhysicalIndex = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalDescr", "entPhysicalIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter32, IpAddress, TimeTicks, ModuleIdentity, iso, Counter64, NotificationType, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Unsigned32, Gauge32, Bits, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "IpAddress", "TimeTicks", "ModuleIdentity", "iso", "Counter64", "NotificationType", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Unsigned32", "Gauge32", "Bits", "Integer32")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
ciscoSwitchNetflowMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 737))
ciscoSwitchNetflowMIB.setRevisions(('2010-05-26 00:00',))
if mibBuilder.loadTexts: ciscoSwitchNetflowMIB.setLastUpdated('201005260000Z')
if mibBuilder.loadTexts: ciscoSwitchNetflowMIB.setOrganization('Cisco Systems, Inc.')
ciscoSwitchNetflowMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 0))
ciscoSwitchNetflowMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 1))
ciscoSwitchNetflowMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 2))
csnAccounting = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1))
csnAccGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 1))
csnAccNotifControl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 2))
cshAccUsageThresh = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 3))
csnAccUtilization = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 4))
csnAccNetflowTableSize = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 5))
csnAccSampler = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 6))
class CsnNetflowDirectionTypes(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("none", 1), ("ingress", 2), ("egress", 3), ("ingressAndEgress", 4))

csnNetflowDirectionType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 1, 1), CsnNetflowDirectionTypes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csnNetflowDirectionType.setStatus('current')
csnUsageThreshExceedNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 2, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csnUsageThreshExceedNotifEnable.setStatus('current')
csnUsageThreshTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 3, 1), )
if mibBuilder.loadTexts: csnUsageThreshTable.setStatus('current')
csnUsageThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-SWITCH-NETFLOW-MIB", "csnUsageDirection"))
if mibBuilder.loadTexts: csnUsageThreshEntry.setStatus('current')
csnUsageDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 3, 1, 1, 1), CsnNetflowDirectionTypes())
if mibBuilder.loadTexts: csnUsageDirection.setStatus('current')
csnUsageThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 3, 1, 1, 2), Percent()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csnUsageThreshold.setStatus('current')
csnUsageInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 3, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: csnUsageInterval.setStatus('current')
csnUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 4, 1), )
if mibBuilder.loadTexts: csnUtilizationTable.setStatus('current')
csnUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 4, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-SWITCH-NETFLOW-MIB", "csnUsageDirection"))
if mibBuilder.loadTexts: csnUtilizationEntry.setStatus('current')
csnUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 4, 1, 1, 1), Percent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csnUtilization.setStatus('current')
csnNetflowTableSizeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 5, 1), )
if mibBuilder.loadTexts: csnNetflowTableSizeTable.setStatus('current')
csnNetflowTableSizeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-SWITCH-NETFLOW-MIB", "csnUsageDirection"))
if mibBuilder.loadTexts: csnNetflowTableSizeEntry.setStatus('current')
csnNetflowTableTotalEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 5, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csnNetflowTableTotalEntries.setStatus('current')
csnSamplerTotal = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 6, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csnSamplerTotal.setStatus('current')
csnSamplerAvailable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 6, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csnSamplerAvailable.setStatus('current')
csnUsageThreshExceededNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 737, 0, 1)).setObjects(("ENTITY-MIB", "entPhysicalDescr"), ("CISCO-SWITCH-NETFLOW-MIB", "csnUtilization"), ("CISCO-SWITCH-NETFLOW-MIB", "csnUsageThreshold"), ("CISCO-SWITCH-NETFLOW-MIB", "csnUsageInterval"))
if mibBuilder.loadTexts: csnUsageThreshExceededNotif.setStatus('current')
csnMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 1))
csnMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 2))
csnMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 1, 1)).setObjects(("CISCO-SWITCH-NETFLOW-MIB", "csnGlobalGroup"), ("CISCO-SWITCH-NETFLOW-MIB", "csnUsageThreshNotifControlGroup"), ("CISCO-SWITCH-NETFLOW-MIB", "csnUsageThreshGroup"), ("CISCO-SWITCH-NETFLOW-MIB", "csnUtilizationGroup"), ("CISCO-SWITCH-NETFLOW-MIB", "csnUsageThreshNotifGroup"), ("CISCO-SWITCH-NETFLOW-MIB", "csnNetflowTableSizeGroup"), ("CISCO-SWITCH-NETFLOW-MIB", "csnSamplerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csnMIBCompliance = csnMIBCompliance.setStatus('current')
csnGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 2, 1)).setObjects(("CISCO-SWITCH-NETFLOW-MIB", "csnNetflowDirectionType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csnGlobalGroup = csnGlobalGroup.setStatus('current')
csnUsageThreshNotifControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 2, 2)).setObjects(("CISCO-SWITCH-NETFLOW-MIB", "csnUsageThreshExceedNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csnUsageThreshNotifControlGroup = csnUsageThreshNotifControlGroup.setStatus('current')
csnUsageThreshGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 2, 3)).setObjects(("CISCO-SWITCH-NETFLOW-MIB", "csnUsageThreshold"), ("CISCO-SWITCH-NETFLOW-MIB", "csnUsageInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csnUsageThreshGroup = csnUsageThreshGroup.setStatus('current')
csnUtilizationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 2, 4)).setObjects(("CISCO-SWITCH-NETFLOW-MIB", "csnUtilization"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csnUtilizationGroup = csnUtilizationGroup.setStatus('current')
csnUsageThreshNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 2, 5)).setObjects(("CISCO-SWITCH-NETFLOW-MIB", "csnUsageThreshExceededNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csnUsageThreshNotifGroup = csnUsageThreshNotifGroup.setStatus('current')
csnNetflowTableSizeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 2, 6)).setObjects(("CISCO-SWITCH-NETFLOW-MIB", "csnNetflowTableTotalEntries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csnNetflowTableSizeGroup = csnNetflowTableSizeGroup.setStatus('current')
csnSamplerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 2, 7)).setObjects(("CISCO-SWITCH-NETFLOW-MIB", "csnSamplerTotal"), ("CISCO-SWITCH-NETFLOW-MIB", "csnSamplerAvailable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csnSamplerGroup = csnSamplerGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-SWITCH-NETFLOW-MIB", csnSamplerAvailable=csnSamplerAvailable, csnGlobalGroup=csnGlobalGroup, csnMIBGroups=csnMIBGroups, ciscoSwitchNetflowMIBObjects=ciscoSwitchNetflowMIBObjects, csnAccNotifControl=csnAccNotifControl, csnNetflowTableTotalEntries=csnNetflowTableTotalEntries, csnUsageInterval=csnUsageInterval, CsnNetflowDirectionTypes=CsnNetflowDirectionTypes, PYSNMP_MODULE_ID=ciscoSwitchNetflowMIB, csnAccNetflowTableSize=csnAccNetflowTableSize, csnAccSampler=csnAccSampler, csnMIBCompliances=csnMIBCompliances, csnNetflowDirectionType=csnNetflowDirectionType, csnNetflowTableSizeTable=csnNetflowTableSizeTable, ciscoSwitchNetflowMIBNotifs=ciscoSwitchNetflowMIBNotifs, csnUsageThreshGroup=csnUsageThreshGroup, ciscoSwitchNetflowMIB=ciscoSwitchNetflowMIB, csnAccounting=csnAccounting, csnNetflowTableSizeGroup=csnNetflowTableSizeGroup, cshAccUsageThresh=cshAccUsageThresh, csnUsageThreshNotifGroup=csnUsageThreshNotifGroup, ciscoSwitchNetflowMIBConform=ciscoSwitchNetflowMIBConform, csnUsageThreshNotifControlGroup=csnUsageThreshNotifControlGroup, csnUsageThreshEntry=csnUsageThreshEntry, csnUsageThreshTable=csnUsageThreshTable, csnNetflowTableSizeEntry=csnNetflowTableSizeEntry, csnUsageThreshold=csnUsageThreshold, csnMIBCompliance=csnMIBCompliance, csnUtilization=csnUtilization, csnUtilizationGroup=csnUtilizationGroup, csnUsageDirection=csnUsageDirection, csnSamplerGroup=csnSamplerGroup, csnSamplerTotal=csnSamplerTotal, csnAccUtilization=csnAccUtilization, csnAccGlobal=csnAccGlobal, csnUtilizationTable=csnUtilizationTable, csnUtilizationEntry=csnUtilizationEntry, csnUsageThreshExceededNotif=csnUsageThreshExceededNotif, csnUsageThreshExceedNotifEnable=csnUsageThreshExceedNotifEnable)
