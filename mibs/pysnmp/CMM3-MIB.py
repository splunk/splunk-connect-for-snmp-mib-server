#
# PySNMP MIB module CMM3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CMM3-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:09:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Unsigned32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Integer32, TimeTicks, Gauge32, MibIdentifier, ObjectIdentity, Counter32, iso, IpAddress, NotificationType, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Integer32", "TimeTicks", "Gauge32", "MibIdentifier", "ObjectIdentity", "Counter32", "iso", "IpAddress", "NotificationType", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
whispModules, whispCMM, whispBox = mibBuilder.importSymbols("WHISP-GLOBAL-REG-MIB", "whispModules", "whispCMM", "whispBox")
WhispMACAddress, EventString, WhispLUID = mibBuilder.importSymbols("WHISP-TC-MIB", "WhispMACAddress", "EventString", "WhispLUID")
cmmIIIMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 161, 19, 1, 1, 15))
if mibBuilder.loadTexts: cmmIIIMibModule.setLastUpdated('200305150000Z')
if mibBuilder.loadTexts: cmmIIIMibModule.setOrganization('Motorola')
cmmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 1))
cmmSwitch = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2))
cmmConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3))
cmmStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4))
cmmGps = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5))
cmmEventLog = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 6))
cmmControls = MibIdentifier((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 7))
cmmSwitchTable = MibTable((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1), )
if mibBuilder.loadTexts: cmmSwitchTable.setStatus('current')
cmmSwitchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1), ).setIndexNames((0, "CMM3-MIB", "portNumber"))
if mibBuilder.loadTexts: cmmSwitchEntry.setStatus('current')
portNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portNumber.setStatus('current')
rxDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxDropPkts.setStatus('current')
rxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxOctets.setStatus('current')
rxBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxBroadcastPkts.setStatus('current')
rxMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxMulticastPkts.setStatus('current')
rxSAChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxSAChanges.setStatus('current')
rxUndersizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxUndersizePkts.setStatus('current')
rxOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxOversizePkts.setStatus('current')
rxFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxFragments.setStatus('current')
rxJabbers = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxJabbers.setStatus('current')
rxUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxUnicastPkts.setStatus('current')
rxAlignmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxAlignmentErrors.setStatus('current')
rxFCSErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxFCSErrors.setStatus('current')
rxGoodOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxGoodOctets.setStatus('current')
rxExcessSizeDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxExcessSizeDisc.setStatus('current')
rxPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxPausePkts.setStatus('current')
rxSymbolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rxSymbolErrors.setStatus('current')
txDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txDropPkts.setStatus('current')
txOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txOctets.setStatus('current')
txBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txBroadcastPkts.setStatus('current')
txMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txMulticastPkts.setStatus('current')
txCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txCollisions.setStatus('current')
txUnicastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txUnicastPkts.setStatus('current')
txSingleCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txSingleCollision.setStatus('current')
txMultipleCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txMultipleCollision.setStatus('current')
txDeferredTransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txDeferredTransmit.setStatus('current')
txLateCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txLateCollision.setStatus('current')
txExcessiveCollision = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txExcessiveCollision.setStatus('current')
txPausePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txPausePkts.setStatus('current')
txFrameInDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: txFrameInDisc.setStatus('current')
pkts64Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pkts64Octets.setStatus('current')
pkts65to127Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pkts65to127Octets.setStatus('current')
pkts128to255Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pkts128to255Octets.setStatus('current')
pkts256to511Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pkts256to511Octets.setStatus('current')
pkts512to1023Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pkts512to1023Octets.setStatus('current')
pkts1024to1522Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 2, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pkts1024to1522Octets.setStatus('current')
cmmSwitchGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 1, 1)).setObjects(("CMM3-MIB", "portNumber"), ("CMM3-MIB", "rxDropPkts"), ("CMM3-MIB", "rxOctets"), ("CMM3-MIB", "rxBroadcastPkts"), ("CMM3-MIB", "rxMulticastPkts"), ("CMM3-MIB", "rxSAChanges"), ("CMM3-MIB", "rxUndersizePkts"), ("CMM3-MIB", "rxOversizePkts"), ("CMM3-MIB", "rxFragments"), ("CMM3-MIB", "rxJabbers"), ("CMM3-MIB", "rxUnicastPkts"), ("CMM3-MIB", "rxAlignmentErrors"), ("CMM3-MIB", "rxFCSErrors"), ("CMM3-MIB", "rxGoodOctets"), ("CMM3-MIB", "rxExcessSizeDisc"), ("CMM3-MIB", "rxPausePkts"), ("CMM3-MIB", "rxSymbolErrors"), ("CMM3-MIB", "txDropPkts"), ("CMM3-MIB", "txOctets"), ("CMM3-MIB", "txBroadcastPkts"), ("CMM3-MIB", "txMulticastPkts"), ("CMM3-MIB", "txCollisions"), ("CMM3-MIB", "txUnicastPkts"), ("CMM3-MIB", "txSingleCollision"), ("CMM3-MIB", "txMultipleCollision"), ("CMM3-MIB", "txDeferredTransmit"), ("CMM3-MIB", "txLateCollision"), ("CMM3-MIB", "txExcessiveCollision"), ("CMM3-MIB", "txPausePkts"), ("CMM3-MIB", "txFrameInDisc"), ("CMM3-MIB", "pkts64Octets"), ("CMM3-MIB", "pkts65to127Octets"), ("CMM3-MIB", "pkts128to255Octets"), ("CMM3-MIB", "pkts256to511Octets"), ("CMM3-MIB", "pkts512to1023Octets"), ("CMM3-MIB", "pkts1024to1522Octets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmmSwitchGroup = cmmSwitchGroup.setStatus('current')
gpsTimingPulse = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("master", 1), ("slave", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gpsTimingPulse.setStatus('current')
lan1Ip = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lan1Ip.setStatus('current')
lan1SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: lan1SubnetMask.setStatus('current')
defaultGateWay = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: defaultGateWay.setStatus('current')
port1PowerCtr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port1PowerCtr.setStatus('current')
port2PowerCtr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port2PowerCtr.setStatus('current')
port3PowerCtr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port3PowerCtr.setStatus('current')
port4PowerCtr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port4PowerCtr.setStatus('current')
port5PowerCtr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port5PowerCtr.setStatus('current')
port6PowerCtr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port6PowerCtr.setStatus('current')
port7PowerCtr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port7PowerCtr.setStatus('current')
port8PowerCtr = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port8PowerCtr.setStatus('current')
displayOnlyAccess = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: displayOnlyAccess.setStatus('current')
fullAccess = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fullAccess.setStatus('current')
displayOnlyStatus = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: displayOnlyStatus.setStatus('current')
fullAccessStatus = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fullAccessStatus.setStatus('current')
webAutoUpdate = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 17), Integer32()).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: webAutoUpdate.setStatus('current')
port1Config = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("hundredFDX", 2), ("hundredHDX", 3), ("tenFDX", 4), ("tenHDX", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port1Config.setStatus('current')
port2Config = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("hundredFDX", 2), ("hundredHDX", 3), ("tenFDX", 4), ("tenHDX", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port2Config.setStatus('current')
port3Config = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("hundredFDX", 2), ("hundredHDX", 3), ("tenFDX", 4), ("tenHDX", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port3Config.setStatus('current')
port4Config = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("hundredFDX", 2), ("hundredHDX", 3), ("tenFDX", 4), ("tenHDX", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port4Config.setStatus('current')
port5Config = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("hundredFDX", 2), ("hundredHDX", 3), ("tenFDX", 4), ("tenHDX", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port5Config.setStatus('current')
port6Config = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("hundredFDX", 2), ("hundredHDX", 3), ("tenFDX", 4), ("tenHDX", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port6Config.setStatus('current')
port7Config = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("hundredFDX", 2), ("hundredHDX", 3), ("tenFDX", 4), ("tenHDX", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port7Config.setStatus('current')
port8Config = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("auto", 1), ("hundredFDX", 2), ("hundredHDX", 3), ("tenFDX", 4), ("tenHDX", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port8Config.setStatus('current')
port1Description = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port1Description.setStatus('current')
port2Description = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 27), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port2Description.setStatus('current')
port3Description = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 28), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port3Description.setStatus('current')
port4Description = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 29), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port4Description.setStatus('current')
port5Description = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port5Description.setStatus('current')
port6Description = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 31), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port6Description.setStatus('current')
port7Description = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port7Description.setStatus('current')
port8Description = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 33), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port8Description.setStatus('current')
snmpTrap1 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 34), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap1.setStatus('current')
snmpTrap2 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 35), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap2.setStatus('current')
snmpTrap3 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 36), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap3.setStatus('current')
snmpTrap4 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 37), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap4.setStatus('current')
snmpTrap5 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 38), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap5.setStatus('current')
snmpTrap6 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 39), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap6.setStatus('current')
snmpTrap7 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 40), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap7.setStatus('current')
snmpTrap8 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 41), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap8.setStatus('current')
snmpTrap9 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 42), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap9.setStatus('current')
snmpTrap10 = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 43), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpTrap10.setStatus('current')
vlanTagEnable = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanTagEnable.setStatus('current')
vlanTagId = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vlanTagId.setStatus('current')
port1Uplink = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port1Uplink.setStatus('current')
port2Uplink = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port2Uplink.setStatus('current')
port3Uplink = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port3Uplink.setStatus('current')
port4Uplink = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port4Uplink.setStatus('current')
port5Uplink = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port5Uplink.setStatus('current')
port6Uplink = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port6Uplink.setStatus('current')
port7Uplink = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port7Uplink.setStatus('current')
port8Uplink = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port8Uplink.setStatus('current')
rebootIfRequired = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rebootIfRequired.setStatus('current')
port1VlanConf = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port1VlanConf.setStatus('current')
port2VlanConf = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port2VlanConf.setStatus('current')
port3VlanConf = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port3VlanConf.setStatus('current')
port4VlanConf = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port4VlanConf.setStatus('current')
port5VlanConf = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 59), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port5VlanConf.setStatus('current')
port6VlanConf = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port6VlanConf.setStatus('current')
port7VlanConf = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 61), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port7VlanConf.setStatus('current')
port8VlanConf = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 62), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port8VlanConf.setStatus('current')
port1PwrReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port1PwrReset.setStatus('current')
port2PwrReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port2PwrReset.setStatus('current')
port3PwrReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 65), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port3PwrReset.setStatus('current')
port4PwrReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 66), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port4PwrReset.setStatus('current')
port5PwrReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 67), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port5PwrReset.setStatus('current')
port6PwrReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 68), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port6PwrReset.setStatus('current')
port7PwrReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 69), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port7PwrReset.setStatus('current')
port8PwrReset = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 3, 70), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: port8PwrReset.setStatus('current')
cmmConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 1, 2)).setObjects(("CMM3-MIB", "gpstimingpulse"), ("CMM3-MIB", "lan1ip"), ("CMM3-MIB", "lan1subnetmask"), ("CMM3-MIB", "defaultgateway"), ("CMM3-MIB", "port1powerctr"), ("CMM3-MIB", "port2powerctr"), ("CMM3-MIB", "port3powerctr"), ("CMM3-MIB", "port4powerctr"), ("CMM3-MIB", "port5powerctr"), ("CMM3-MIB", "port6powerctr"), ("CMM3-MIB", "port7powerctr"), ("CMM3-MIB", "port8powerctr"), ("CMM3-MIB", "displayonlyaccess"), ("CMM3-MIB", "fullaccess"), ("CMM3-MIB", "displayonlystatus"), ("CMM3-MIB", "fullaccessstatus"), ("CMM3-MIB", "webautoupdate"), ("CMM3-MIB", "port1config"), ("CMM3-MIB", "port2config"), ("CMM3-MIB", "port3config"), ("CMM3-MIB", "port4config"), ("CMM3-MIB", "port5config"), ("CMM3-MIB", "port6config"), ("CMM3-MIB", "port7config"), ("CMM3-MIB", "port8config"), ("CMM3-MIB", "port1description"), ("CMM3-MIB", "port2description"), ("CMM3-MIB", "port3description"), ("CMM3-MIB", "port4description"), ("CMM3-MIB", "port5description"), ("CMM3-MIB", "port6description"), ("CMM3-MIB", "port7description"), ("CMM3-MIB", "port8description"), ("CMM3-MIB", "snmptrap1"), ("CMM3-MIB", "snmptrap2"), ("CMM3-MIB", "snmptrap3"), ("CMM3-MIB", "snmptrap4"), ("CMM3-MIB", "snmptrap5"), ("CMM3-MIB", "snmptrap6"), ("CMM3-MIB", "snmptrap7"), ("CMM3-MIB", "snmptrap8"), ("CMM3-MIB", "snmptrap9"), ("CMM3-MIB", "snmptrap10"), ("CMM3-MIB", "vlantagenable"), ("CMM3-MIB", "vlantagid"), ("CMM3-MIB", "port1uplink"), ("CMM3-MIB", "port2uplink"), ("CMM3-MIB", "port3uplink"), ("CMM3-MIB", "port4uplink"), ("CMM3-MIB", "port5uplink"), ("CMM3-MIB", "port6uplink"), ("CMM3-MIB", "port7uplink"), ("CMM3-MIB", "port8uplink"), ("CMM3-MIB", "rebootifrequired"), ("CMM3-MIB", "port1vlanconf"), ("CMM3-MIB", "port2vlanconf"), ("CMM3-MIB", "port3vlanconf"), ("CMM3-MIB", "port4vlanconf"), ("CMM3-MIB", "port5vlanconf"), ("CMM3-MIB", "port6vlanconf"), ("CMM3-MIB", "port7vlanconf"), ("CMM3-MIB", "port8vlanconf"), ("CMM3-MIB", "port1pwrreset"), ("CMM3-MIB", "port2pwrreset"), ("CMM3-MIB", "port3pwrreset"), ("CMM3-MIB", "port4pwrreset"), ("CMM3-MIB", "port5pwrreset"), ("CMM3-MIB", "port6pwrreset"), ("CMM3-MIB", "port7pwrreset"), ("CMM3-MIB", "port8pwrreset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmmConfigGroup = cmmConfigGroup.setStatus('current')
cmmPortTable = MibTable((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 1), )
if mibBuilder.loadTexts: cmmPortTable.setStatus('current')
cmmPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 1, 1), ).setIndexNames((0, "CMM3-MIB", "portIndex"))
if mibBuilder.loadTexts: cmmPortEntry.setStatus('current')
portIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portIndex.setStatus('current')
linkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkStatus.setStatus('current')
linkSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("hundredBaseT", 1), ("tenBaseT", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkSpeed.setStatus('current')
duplexStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("fullDuplex", 1), ("halfDuplex", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: duplexStatus.setStatus('current')
powerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: powerStatus.setStatus('current')
uplinkStatus = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("on", 1), ("off", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: uplinkStatus.setStatus('current')
deviceType = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceType.setStatus('current')
pldVersion = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pldVersion.setStatus('current')
softwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: softwareVersion.setStatus('current')
systemTime = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTime.setStatus('current')
upTime = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: upTime.setStatus('current')
satellitesVisible = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satellitesVisible.setStatus('current')
satellitesTracked = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: satellitesTracked.setStatus('current')
latitude = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: latitude.setStatus('current')
longitude = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: longitude.setStatus('current')
height = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: height.setStatus('current')
trackingMode = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trackingMode.setStatus('current')
syncStatus = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: syncStatus.setStatus('current')
macAddress = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 4, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: macAddress.setStatus('current')
cmmStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 1, 3)).setObjects(("CMM3-MIB", "portindex"), ("CMM3-MIB", "linkstatus"), ("CMM3-MIB", "linkspeed"), ("CMM3-MIB", "duplexstatus"), ("CMM3-MIB", "powerstatus"), ("CMM3-MIB", "uplinkstatus"), ("CMM3-MIB", "devicetype"), ("CMM3-MIB", "pldversion"), ("CMM3-MIB", "softwareversion"), ("CMM3-MIB", "systemtime"), ("CMM3-MIB", "uptime"), ("CMM3-MIB", "satellitesvisible"), ("CMM3-MIB", "satellitestracked"), ("CMM3-MIB", "latitude"), ("CMM3-MIB", "longitude"), ("CMM3-MIB", "height"), ("CMM3-MIB", "trackingmode"), ("CMM3-MIB", "syncstatus"), ("CMM3-MIB", "macaddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmmStatusGroup = cmmStatusGroup.setStatus('current')
gpsTrackingMode = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsTrackingMode.setStatus('current')
gpsTime = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsTime.setStatus('current')
gpsDate = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsDate.setStatus('current')
gpsSatellitesVisible = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsSatellitesVisible.setStatus('current')
gpsSatellitesTracked = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsSatellitesTracked.setStatus('current')
gpsHeight = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsHeight.setStatus('current')
gpsAntennaConnection = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsAntennaConnection.setStatus('current')
gpsLatitude = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsLatitude.setStatus('current')
gpsLongitude = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsLongitude.setStatus('current')
gpsInvalidMsg = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsInvalidMsg.setStatus('current')
gpsRestartCount = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsRestartCount.setStatus('current')
gpsReceiverInfo = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 5, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gpsReceiverInfo.setStatus('current')
cmmGPSGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 1, 4)).setObjects(("CMM3-MIB", "gpsTrackingMode"), ("CMM3-MIB", "gpsTime"), ("CMM3-MIB", "gpsDate"), ("CMM3-MIB", "gpsSatellitesVisible"), ("CMM3-MIB", "gpsSatellitesTracked"), ("CMM3-MIB", "gpsHeight"), ("CMM3-MIB", "gpsAntennaConnection"), ("CMM3-MIB", "gpsLatitude"), ("CMM3-MIB", "gpsLongitude"), ("CMM3-MIB", "gpsInvalidMsg"), ("CMM3-MIB", "gpsRestartCount"), ("CMM3-MIB", "gpsReceiverInfo"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cmmGPSGroup = cmmGPSGroup.setStatus('current')
eventLog = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 6, 1), EventString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eventLog.setStatus('current')
reboot = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("reboot", 1), ("finishedReboot", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: reboot.setStatus('current')
clearEventLog = MibScalar((1, 3, 6, 1, 4, 1, 161, 19, 3, 4, 7, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("clear", 1), ("notClear", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clearEventLog.setStatus('current')
mibBuilder.exportSymbols("CMM3-MIB", port7Config=port7Config, rxExcessSizeDisc=rxExcessSizeDisc, port6Config=port6Config, port7Description=port7Description, snmpTrap6=snmpTrap6, snmpTrap3=snmpTrap3, webAutoUpdate=webAutoUpdate, port5VlanConf=port5VlanConf, port3VlanConf=port3VlanConf, cmmPortTable=cmmPortTable, port2PowerCtr=port2PowerCtr, pkts1024to1522Octets=pkts1024to1522Octets, txPausePkts=txPausePkts, pkts65to127Octets=pkts65to127Octets, gpsRestartCount=gpsRestartCount, lan1Ip=lan1Ip, cmmEventLog=cmmEventLog, port8PowerCtr=port8PowerCtr, port1Config=port1Config, txSingleCollision=txSingleCollision, txLateCollision=txLateCollision, lan1SubnetMask=lan1SubnetMask, snmpTrap10=snmpTrap10, cmmSwitchEntry=cmmSwitchEntry, rxJabbers=rxJabbers, cmmIIIMibModule=cmmIIIMibModule, rxUnicastPkts=rxUnicastPkts, gpsLatitude=gpsLatitude, txExcessiveCollision=txExcessiveCollision, clearEventLog=clearEventLog, port2Uplink=port2Uplink, rxFCSErrors=rxFCSErrors, displayOnlyAccess=displayOnlyAccess, port3PowerCtr=port3PowerCtr, port5Description=port5Description, cmmStatus=cmmStatus, cmmPortEntry=cmmPortEntry, fullAccessStatus=fullAccessStatus, rxSAChanges=rxSAChanges, rxDropPkts=rxDropPkts, snmpTrap7=snmpTrap7, port4Uplink=port4Uplink, pkts128to255Octets=pkts128to255Octets, gpsHeight=gpsHeight, gpsTrackingMode=gpsTrackingMode, gpsAntennaConnection=gpsAntennaConnection, port5Uplink=port5Uplink, port6PowerCtr=port6PowerCtr, deviceType=deviceType, port5PwrReset=port5PwrReset, gpsSatellitesTracked=gpsSatellitesTracked, pkts512to1023Octets=pkts512to1023Octets, powerStatus=powerStatus, port5PowerCtr=port5PowerCtr, trackingMode=trackingMode, port4Config=port4Config, port4VlanConf=port4VlanConf, duplexStatus=duplexStatus, port3Description=port3Description, pkts64Octets=pkts64Octets, cmmGroups=cmmGroups, port8Description=port8Description, defaultGateWay=defaultGateWay, gpsTime=gpsTime, port6PwrReset=port6PwrReset, cmmConfigGroup=cmmConfigGroup, portIndex=portIndex, longitude=longitude, PYSNMP_MODULE_ID=cmmIIIMibModule, port1PowerCtr=port1PowerCtr, port6VlanConf=port6VlanConf, systemTime=systemTime, port1Uplink=port1Uplink, port3Config=port3Config, port8Uplink=port8Uplink, cmmGPSGroup=cmmGPSGroup, txBroadcastPkts=txBroadcastPkts, port1VlanConf=port1VlanConf, rebootIfRequired=rebootIfRequired, gpsDate=gpsDate, gpsInvalidMsg=gpsInvalidMsg, snmpTrap8=snmpTrap8, linkStatus=linkStatus, port8PwrReset=port8PwrReset, reboot=reboot, rxPausePkts=rxPausePkts, txUnicastPkts=txUnicastPkts, latitude=latitude, cmmSwitchTable=cmmSwitchTable, rxBroadcastPkts=rxBroadcastPkts, rxOversizePkts=rxOversizePkts, portNumber=portNumber, syncStatus=syncStatus, softwareVersion=softwareVersion, port6Description=port6Description, height=height, txCollisions=txCollisions, port7PowerCtr=port7PowerCtr, port2Config=port2Config, cmmControls=cmmControls, port7VlanConf=port7VlanConf, snmpTrap2=snmpTrap2, upTime=upTime, port6Uplink=port6Uplink, satellitesTracked=satellitesTracked, rxUndersizePkts=rxUndersizePkts, port8VlanConf=port8VlanConf, rxFragments=rxFragments, rxOctets=rxOctets, port8Config=port8Config, linkSpeed=linkSpeed, uplinkStatus=uplinkStatus, rxGoodOctets=rxGoodOctets, snmpTrap5=snmpTrap5, port4Description=port4Description, txMultipleCollision=txMultipleCollision, txDropPkts=txDropPkts, vlanTagEnable=vlanTagEnable, snmpTrap1=snmpTrap1, gpsSatellitesVisible=gpsSatellitesVisible, rxAlignmentErrors=rxAlignmentErrors, txMulticastPkts=txMulticastPkts, snmpTrap9=snmpTrap9, port4PwrReset=port4PwrReset, gpsReceiverInfo=gpsReceiverInfo, macAddress=macAddress, port7Uplink=port7Uplink, pldVersion=pldVersion, fullAccess=fullAccess, port2PwrReset=port2PwrReset, cmmGps=cmmGps, port4PowerCtr=port4PowerCtr, port1PwrReset=port1PwrReset, displayOnlyStatus=displayOnlyStatus, txDeferredTransmit=txDeferredTransmit, snmpTrap4=snmpTrap4, cmmSwitchGroup=cmmSwitchGroup, rxMulticastPkts=rxMulticastPkts, port3Uplink=port3Uplink, cmmSwitch=cmmSwitch, eventLog=eventLog, gpsLongitude=gpsLongitude, txFrameInDisc=txFrameInDisc, rxSymbolErrors=rxSymbolErrors, port3PwrReset=port3PwrReset, port2Description=port2Description, port5Config=port5Config, port2VlanConf=port2VlanConf, satellitesVisible=satellitesVisible, txOctets=txOctets, cmmConfig=cmmConfig, port1Description=port1Description, cmmStatusGroup=cmmStatusGroup, gpsTimingPulse=gpsTimingPulse, vlanTagId=vlanTagId, port7PwrReset=port7PwrReset, pkts256to511Octets=pkts256to511Octets)
