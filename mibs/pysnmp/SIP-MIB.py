#
# PySNMP MIB module SIP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SIP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:56:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
mib_2, TimeTicks, Bits, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Unsigned32, iso, Counter64, ModuleIdentity, MibIdentifier, Counter32, NotificationType, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "mib-2", "TimeTicks", "Bits", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Unsigned32", "iso", "Counter64", "ModuleIdentity", "MibIdentifier", "Counter32", "NotificationType", "IpAddress", "Gauge32")
DisplayString, TextualConvention, TruthValue, TimeStamp, RowStatus, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "TimeStamp", "RowStatus", "DateAndTime")
sipMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 9998))
if mibBuilder.loadTexts: sipMIB.setLastUpdated('200003020000Z')
if mibBuilder.loadTexts: sipMIB.setOrganization('IETF SIP Working Group, SIP MIB Team')
sipMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1))
sipCommon = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 1))
sipUA = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 2))
sipServer = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 3))
sipProxy = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 4))
sipRedir = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 5))
sipReg = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 6))
class SipServerActions(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("redirect", 1), ("proxy", 2))

sipCommonCfg = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1))
sipCommonStats = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2))
sipCommonStatsSummary = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 1))
sipCommonStatsMethod = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 2))
sipCommonStatsInfo = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 3))
sipCommonStatsSuccess = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 4))
sipCommonStatsRedirect = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 5))
sipCommonStatsErrClient = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6))
sipCommonStatsErrServer = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 7))
sipCommonStatsGlobalFail = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 8))
sipCommonStatsTrans = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 9))
sipProtocolVersion = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipProtocolVersion.setStatus('current')
sipServiceOperStatus = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4), ("halted", 5), ("restarting", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServiceOperStatus.setStatus('current')
sipServiceAdminStatus = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("shutdown", 1), ("reset", 2), ("restart", 3), ("stop", 4), ("rts", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipServiceAdminStatus.setStatus('current')
sipServiceStartTime = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServiceStartTime.setStatus('current')
sipServiceLastChange = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipServiceLastChange.setStatus('current')
sipPortTable = MibTable((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 6), )
if mibBuilder.loadTexts: sipPortTable.setStatus('current')
sipPortEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 6, 1), ).setIndexNames((0, "SIP-MIB", "sipPort"))
if mibBuilder.loadTexts: sipPortEntry.setStatus('current')
sipPort = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: sipPort.setStatus('current')
sipTransport = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("udp", 1), ("tcp", 2), ("udpAndTcp", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipTransport.setStatus('current')
sipPortStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipPortStatus.setStatus('current')
sipUriSupportedTable = MibTable((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 7), )
if mibBuilder.loadTexts: sipUriSupportedTable.setStatus('current')
sipUriSupportedEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 7, 1), ).setIndexNames((0, "SIP-MIB", "sipUriSupportedIndex"))
if mibBuilder.loadTexts: sipUriSupportedEntry.setStatus('current')
sipUriSupportedIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: sipUriSupportedIndex.setStatus('current')
sipUriSupported = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 7, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipUriSupported.setStatus('current')
sipFtrSupportedTable = MibTable((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 8), )
if mibBuilder.loadTexts: sipFtrSupportedTable.setStatus('current')
sipFtrSupportedEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 8, 1), ).setIndexNames((0, "SIP-MIB", "sipFtrSupportedIndex"))
if mibBuilder.loadTexts: sipFtrSupportedEntry.setStatus('current')
sipFtrSupportedIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: sipFtrSupportedIndex.setStatus('current')
sipFtrSupported = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 8, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipFtrSupported.setStatus('current')
sipOrganization = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 9), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipOrganization.setStatus('current')
sipMaxTransactions = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipMaxTransactions.setStatus('current')
sipRequestDfltExpires = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRequestDfltExpires.setStatus('current')
sipHideOperation = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("hop", 2), ("route", 3))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipHideOperation.setStatus('current')
sipUserLocationServerAddr = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 1, 13), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipUserLocationServerAddr.setStatus('current')
sipSummaryInRequests = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipSummaryInRequests.setStatus('current')
sipSummaryOutRequests = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipSummaryOutRequests.setStatus('current')
sipSummaryInResponses = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipSummaryInResponses.setStatus('current')
sipSummaryOutResponses = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipSummaryOutResponses.setStatus('current')
sipSummaryTotalTransactions = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipSummaryTotalTransactions.setStatus('current')
sipStatsInviteIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsInviteIns.setStatus('current')
sipStatsInviteOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsInviteOuts.setStatus('current')
sipStatsAckIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsAckIns.setStatus('current')
sipStatsAckOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsAckOuts.setStatus('current')
sipStatsByeIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsByeIns.setStatus('current')
sipStatsByeOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsByeOuts.setStatus('current')
sipStatsCancelIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsCancelIns.setStatus('current')
sipStatsCancelOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 2, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsCancelOuts.setStatus('current')
sipStatsOptionsIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 2, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsOptionsIns.setStatus('current')
sipStatsOptionsOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsOptionsOuts.setStatus('current')
sipStatsRegisterIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 2, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRegisterIns.setStatus('current')
sipStatsRegisterOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 2, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRegisterOuts.setStatus('current')
sipStatsInfoIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 2, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsInfoIns.setStatus('current')
sipStatsInfoOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 2, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsInfoOuts.setStatus('current')
sipStatsInfoTryingIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 3, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsInfoTryingIns.setStatus('current')
sipStatsInfoTryingOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 3, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsInfoTryingOuts.setStatus('current')
sipStatsInfoRingingIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsInfoRingingIns.setStatus('current')
sipStatsInfoRingingOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsInfoRingingOuts.setStatus('current')
sipStatsInfoForwardedIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsInfoForwardedIns.setStatus('current')
sipStatsInfoForwardedOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsInfoForwardedOuts.setStatus('current')
sipStatsInfoQueuedIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 3, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsInfoQueuedIns.setStatus('current')
sipStatsInfoQueuedOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 3, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsInfoQueuedOuts.setStatus('current')
sipStatsInfoSessionProgIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 3, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsInfoSessionProgIns.setStatus('current')
sipStatsInfoSessionProgOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 3, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsInfoSessionProgOuts.setStatus('current')
sipStatsSuccessOkIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsSuccessOkIns.setStatus('current')
sipStatsSuccessOkOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsSuccessOkOuts.setStatus('current')
sipStatsRedirMultipleChoiceIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 5, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRedirMultipleChoiceIns.setStatus('current')
sipStatsRedirMultipleChoiceOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 5, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRedirMultipleChoiceOuts.setStatus('current')
sipStatsRedirMovedPermIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 5, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRedirMovedPermIns.setStatus('current')
sipStatsRedirMovedPermOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 5, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRedirMovedPermOuts.setStatus('current')
sipStatsRedirMovedTempIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 5, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRedirMovedTempIns.setStatus('current')
sipStatsRedirMovedTempOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 5, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRedirMovedTempOuts.setStatus('current')
sipStatsRedirSeeOtherIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 5, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRedirSeeOtherIns.setStatus('current')
sipStatsRedirSeeOtherOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 5, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRedirSeeOtherOuts.setStatus('current')
sipStatsRedirUseProxyIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 5, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRedirUseProxyIns.setStatus('current')
sipStatsRedirUseProxyOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 5, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRedirUseProxyOuts.setStatus('current')
sipStatsRedirAltServiceIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 5, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRedirAltServiceIns.setStatus('current')
sipStatsRedirAltServiceOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 5, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRedirAltServiceOuts.setStatus('current')
sipStatsClientBadRequestIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientBadRequestIns.setStatus('current')
sipStatsClientBadRequestOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientBadRequestOuts.setStatus('current')
sipStatsClientUnauthorizedIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientUnauthorizedIns.setStatus('current')
sipStatsClientUnauthorizedOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientUnauthorizedOuts.setStatus('current')
sipStatsClientPaymentReqdIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientPaymentReqdIns.setStatus('current')
sipStatsClientPaymentReqdOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientPaymentReqdOuts.setStatus('current')
sipStatsClientForbiddenIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientForbiddenIns.setStatus('current')
sipStatsClientForbiddenOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientForbiddenOuts.setStatus('current')
sipStatsClientNotFoundIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientNotFoundIns.setStatus('current')
sipStatsClientNotFoundOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientNotFoundOuts.setStatus('current')
sipStatsClientMethNotAllowedIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientMethNotAllowedIns.setStatus('current')
sipStatsClientMethNotAllowedOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientMethNotAllowedOuts.setStatus('current')
sipStatsClientNotAcceptableIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientNotAcceptableIns.setStatus('current')
sipStatsClientNotAcceptableOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientNotAcceptableOuts.setStatus('current')
sipStatsClientProxyAuthReqdIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientProxyAuthReqdIns.setStatus('current')
sipStatsClientProxyAuthReqdOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientProxyAuthReqdOuts.setStatus('current')
sipStatsClientReqTimeoutIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientReqTimeoutIns.setStatus('current')
sipStatsClientReqTimeoutOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientReqTimeoutOuts.setStatus('current')
sipStatsClientConflictIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientConflictIns.setStatus('current')
sipStatsClientConflictOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientConflictOuts.setStatus('current')
sipStatsClientGoneIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientGoneIns.setStatus('current')
sipStatsClientGoneOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientGoneOuts.setStatus('current')
sipStatsClientLengthRequiredIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientLengthRequiredIns.setStatus('current')
sipStatsClientLengthRequiredOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientLengthRequiredOuts.setStatus('current')
sipStatsClientReqEntTooLargeIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientReqEntTooLargeIns.setStatus('current')
sipStatsClientReqEntTooLargeOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientReqEntTooLargeOuts.setStatus('current')
sipStatsClientReqURITooLargeIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientReqURITooLargeIns.setStatus('current')
sipStatsClientReqURITooLargeOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientReqURITooLargeOuts.setStatus('current')
sipStatsClientNoSupMediaTypeIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientNoSupMediaTypeIns.setStatus('current')
sipStatsClientNoSupMediaTypeOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientNoSupMediaTypeOuts.setStatus('current')
sipStatsClientBadExtensionIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientBadExtensionIns.setStatus('current')
sipStatsClientBadExtensionOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientBadExtensionOuts.setStatus('current')
sipStatsClientTempNotAvailIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientTempNotAvailIns.setStatus('current')
sipStatsClientTempNotAvailOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientTempNotAvailOuts.setStatus('current')
sipStatsClientCallLegNoExistIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientCallLegNoExistIns.setStatus('current')
sipStatsClientCallLegNoExistOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientCallLegNoExistOuts.setStatus('current')
sipStatsClientLoopDetectedIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientLoopDetectedIns.setStatus('current')
sipStatsClientLoopDetectedOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientLoopDetectedOuts.setStatus('current')
sipStatsClientTooManyHopsIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientTooManyHopsIns.setStatus('current')
sipStatsClientTooManyHopsOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientTooManyHopsOuts.setStatus('current')
sipStatsClientAddrIncompleteIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientAddrIncompleteIns.setStatus('current')
sipStatsClientAddrIncompleteOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientAddrIncompleteOuts.setStatus('current')
sipStatsClientAmbiguousIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientAmbiguousIns.setStatus('current')
sipStatsClientAmbiguousOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientAmbiguousOuts.setStatus('current')
sipStatsClientBusyHereIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientBusyHereIns.setStatus('current')
sipStatsClientBusyHereOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 6, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsClientBusyHereOuts.setStatus('current')
sipStatsServerIntErrorIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 7, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsServerIntErrorIns.setStatus('current')
sipStatsServerIntErrorOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 7, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsServerIntErrorOuts.setStatus('current')
sipStatsServerNotImplementedIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 7, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsServerNotImplementedIns.setStatus('current')
sipStatsServerNotImplementedOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 7, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsServerNotImplementedOuts.setStatus('current')
sipStatsServerBadGatewayIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 7, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsServerBadGatewayIns.setStatus('current')
sipStatsServerBadGatewayOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 7, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsServerBadGatewayOuts.setStatus('current')
sipStatsServerServiceUnavailIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 7, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsServerServiceUnavailIns.setStatus('current')
sipStatsServerServiceUnavailOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 7, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsServerServiceUnavailOuts.setStatus('current')
sipStatsServerGatewayTimeoutIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 7, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsServerGatewayTimeoutIns.setStatus('current')
sipStatsServerGatewayTimeoutOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 7, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsServerGatewayTimeoutOuts.setStatus('current')
sipStatsServerBadSipVersionIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 7, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsServerBadSipVersionIns.setStatus('current')
sipStatsServerBadSipVersionOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 7, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsServerBadSipVersionOuts.setStatus('current')
sipStatsGlobalBusyEverywhereIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 8, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsGlobalBusyEverywhereIns.setStatus('current')
sipStatsGlobalBusyEverywhereOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 8, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsGlobalBusyEverywhereOuts.setStatus('current')
sipStatsGlobalDeclineIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 8, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsGlobalDeclineIns.setStatus('current')
sipStatsGlobalDeclineOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 8, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsGlobalDeclineOuts.setStatus('current')
sipStatsGlobalNotAnywhereIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 8, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsGlobalNotAnywhereIns.setStatus('current')
sipStatsGlobalNotAnywhereOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 8, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsGlobalNotAnywhereOuts.setStatus('current')
sipStatsGlobalNotAcceptableIns = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 8, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsGlobalNotAcceptableIns.setStatus('current')
sipStatsGlobalNotAcceptableOuts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 8, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsGlobalNotAcceptableOuts.setStatus('current')
sipCurrentTransactions = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 9, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipCurrentTransactions.setStatus('current')
sipTransactionTable = MibTable((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 9, 2), )
if mibBuilder.loadTexts: sipTransactionTable.setStatus('current')
sipTransactionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 9, 2, 1), ).setIndexNames((0, "SIP-MIB", "sipTransIndex"))
if mibBuilder.loadTexts: sipTransactionEntry.setStatus('current')
sipTransIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 9, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: sipTransIndex.setStatus('current')
sipTransTo = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 9, 2, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipTransTo.setStatus('current')
sipTransFrom = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 9, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipTransFrom.setStatus('current')
sipTransCallId = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 9, 2, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipTransCallId.setStatus('current')
sipTransCSeq = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 9, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipTransCSeq.setStatus('current')
sipTransState = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 9, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("null", 1), ("initial", 2), ("calling", 3), ("ringing", 4), ("completed", 5), ("callProceeding", 6), ("failure", 7), ("success", 8), ("confirmed", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipTransState.setStatus('current')
sipTransOutstandingBranches = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 9, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipTransOutstandingBranches.setStatus('current')
sipTransExpiry = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 9, 2, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipTransExpiry.setStatus('current')
sipTransCallingPartyContentType = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 9, 2, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipTransCallingPartyContentType.setStatus('current')
sipTransCalledPartyContentType = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 9, 2, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipTransCalledPartyContentType.setStatus('current')
sipNumUnsupportedUris = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 1, 2, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipNumUnsupportedUris.setStatus('current')
sipUACfg = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 2, 1))
sipUACfgTimer = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 2, 1, 1))
sipUACfgRetry = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 2, 1, 2))
sipUAStats = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 2, 2))
sipUAStatsRetry = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 2, 2, 1))
sipUACfgTimerTrying = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipUACfgTimerTrying.setStatus('current')
sipUACfgTimerExpires = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60000, 300000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipUACfgTimerExpires.setStatus('current')
sipUACfgTimerConnect = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipUACfgTimerConnect.setStatus('current')
sipUACfgTimerDisconnect = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipUACfgTimerDisconnect.setStatus('current')
sipUACfgRetryInvite = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipUACfgRetryInvite.setStatus('current')
sipUACfgRetryBye = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipUACfgRetryBye.setStatus('current')
sipUACfgRetryCancel = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 2, 1, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipUACfgRetryCancel.setStatus('current')
sipUACfgRetryRegister = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 2, 1, 2, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipUACfgRetryRegister.setStatus('current')
sipUACfgRetryResponse = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 2, 1, 2, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipUACfgRetryResponse.setStatus('current')
sipStatsRetryInvites = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 2, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRetryInvites.setStatus('current')
sipStatsRetryByes = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRetryByes.setStatus('current')
sipStatsRetryCancels = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRetryCancels.setStatus('current')
sipStatsRetryRegisters = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRetryRegisters.setStatus('current')
sipStatsRetryResponses = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipStatsRetryResponses.setStatus('current')
sipServerCfg = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 3, 1))
sipServerStats = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 3, 2))
sipServerHost = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 3, 1, 1), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipServerHost.setStatus('current')
sipInformationTryingInitial = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 3, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipInformationTryingInitial.setStatus('current')
sipInformationTryingInterval = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 60000))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipInformationTryingInterval.setStatus('current')
sipPgpVersion = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 3, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipPgpVersion.setStatus('current')
sipServerDfltAction = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 3, 1, 5), SipServerActions()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipServerDfltAction.setStatus('current')
sipServerRespectUAAction = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 3, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipServerRespectUAAction.setStatus('current')
sipRequestUriHostMatching = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 3, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRequestUriHostMatching.setStatus('current')
sipProxyCfg = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1))
sipProxyStats = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 4, 2))
sipRequestMaxExpires = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRequestMaxExpires.setStatus('current')
sipProxyStateful = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyStateful.setStatus('current')
sipProxySendsCancel = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxySendsCancel.setStatus('current')
sipProxyForwardAll1xx = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyForwardAll1xx.setStatus('current')
sipProxyRecursion = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyRecursion.setStatus('current')
sipProxyProvideAlternatives = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyProvideAlternatives.setStatus('current')
sipProxyRecordRoute = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyRecordRoute.setStatus('current')
sipProxyUseCompact = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyUseCompact.setStatus('current')
sipProxyRetransmissionBuffer = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyRetransmissionBuffer.setStatus('current')
sipProxyAuthMethod = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("basic", 2), ("digest", 3), ("pgp", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyAuthMethod.setStatus('current')
sipProxyAuthPgpAlgorithm = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("md5", 2), ("sha1", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyAuthPgpAlgorithm.setStatus('current')
sipProxyAuthRealm = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 12), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyAuthRealm.setStatus('current')
sipProxyNonceLifeTime = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipProxyNonceLifeTime.setStatus('current')
sipPgpPrivateKey = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipPgpPrivateKey.setStatus('current')
sipRxProxyAuthTable = MibTable((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 15), )
if mibBuilder.loadTexts: sipRxProxyAuthTable.setStatus('current')
sipRxProxyAuthEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 15, 1), ).setIndexNames((0, "SIP-MIB", "sipRxProxyAuthIndex"))
if mibBuilder.loadTexts: sipRxProxyAuthEntry.setStatus('current')
sipRxProxyAuthIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: sipRxProxyAuthIndex.setStatus('current')
sipRxProxyAuthRealm = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 15, 1, 2), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipRxProxyAuthRealm.setStatus('current')
sipRxProxyAuthPassword = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 15, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipRxProxyAuthPassword.setStatus('current')
sipRxProxyAuthStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 15, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipRxProxyAuthStatus.setStatus('current')
sipHideRespect = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 4, 1, 16), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipHideRespect.setStatus('current')
sipNumProxyRequireFailures = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 4, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipNumProxyRequireFailures.setStatus('current')
sipRedirCfg = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 5, 1))
sipRedirStats = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 5, 2))
sipRegCfg = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1))
sipRegStats = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 1, 6, 2))
sipRegAllowThirdParty = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegAllowThirdParty.setStatus('current')
sipRegContactDfltExpiryDuration = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 2), Unsigned32().clone(3600)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegContactDfltExpiryDuration.setStatus('current')
sipRegContactDfltExpiryDate = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 3), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegContactDfltExpiryDate.setStatus('current')
sipRegMaxContactExpiryDate = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(4294967295)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegMaxContactExpiryDate.setStatus('current')
sipRegRespHasContacts = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sipRegRespHasContacts.setStatus('current')
sipRegMaxUsers = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipRegMaxUsers.setStatus('current')
sipRegCurrentUsers = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipRegCurrentUsers.setStatus('current')
sipRegUserTable = MibTable((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 8), )
if mibBuilder.loadTexts: sipRegUserTable.setStatus('current')
sipRegUserEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 8, 1), ).setIndexNames((0, "SIP-MIB", "sipUserIndex"))
if mibBuilder.loadTexts: sipRegUserEntry.setStatus('current')
sipUserIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: sipUserIndex.setStatus('current')
sipUserUri = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 8, 1, 2), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipUserUri.setStatus('current')
sipUserPassword = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 8, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipUserPassword.setStatus('current')
sipUserAuthenticationFailures = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipUserAuthenticationFailures.setStatus('current')
sipUserTableRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 8, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sipUserTableRowStatus.setStatus('current')
sipContactTable = MibTable((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 9), )
if mibBuilder.loadTexts: sipContactTable.setStatus('current')
sipContactEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 9, 1), ).setIndexNames((0, "SIP-MIB", "sipUserIndex"), (0, "SIP-MIB", "sipContactIndex"))
if mibBuilder.loadTexts: sipContactEntry.setStatus('current')
sipContactIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: sipContactIndex.setStatus('current')
sipContactDisplayName = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 9, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipContactDisplayName.setStatus('current')
sipContactURI = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 9, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipContactURI.setStatus('current')
sipContactLastUpdated = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 9, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipContactLastUpdated.setStatus('current')
sipContactExpiry = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 9, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipContactExpiry.setStatus('current')
sipContactPreference = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 9, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipContactPreference.setStatus('current')
sipContactAction = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 9, 1, 7), SipServerActions()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipContactAction.setStatus('current')
sipContactRetryAfter = MibTableColumn((1, 3, 6, 1, 2, 1, 9998, 1, 6, 1, 9, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipContactRetryAfter.setStatus('current')
sipRegAcceptedRegistrations = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 6, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipRegAcceptedRegistrations.setStatus('current')
sipRegRejectedRegistrations = MibScalar((1, 3, 6, 1, 2, 1, 9998, 1, 6, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sipRegRejectedRegistrations.setStatus('current')
sipMIBNotifPrefix = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 2))
sipMIBNotif = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 2, 0))
sipNotif = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 2, 0, 1))
sipUANotif = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 2, 0, 2))
sipProxyNotif = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 2, 0, 3))
sipRedirNotif = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 2, 0, 4))
sipRegNotif = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 2, 0, 5))
sipMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 3))
sipMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 3, 1))
sipMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 9998, 3, 2))
sipCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 9998, 3, 1, 1)).setObjects(("SIP-MIB", "sipCommonConfigGroup"), ("SIP-MIB", "sipCommonStatsGroup"), ("SIP-MIB", "sipUAConfigGroup"), ("SIP-MIB", "sipUAStatsGroup"), ("SIP-MIB", "sipServerConfigGroup"), ("SIP-MIB", "sipProxyConfigGroup"), ("SIP-MIB", "sipProxyStatsGroup"), ("SIP-MIB", "sipRegistrarConfigGroup"), ("SIP-MIB", "sipRegistrarStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipCompliance = sipCompliance.setStatus('current')
sipCommonConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 9998, 3, 2, 1)).setObjects(("SIP-MIB", "sipProtocolVersion"), ("SIP-MIB", "sipServiceOperStatus"), ("SIP-MIB", "sipServiceAdminStatus"), ("SIP-MIB", "sipServiceStartTime"), ("SIP-MIB", "sipServiceLastChange"), ("SIP-MIB", "sipTransport"), ("SIP-MIB", "sipPortStatus"), ("SIP-MIB", "sipUriSupported"), ("SIP-MIB", "sipFtrSupported"), ("SIP-MIB", "sipOrganization"), ("SIP-MIB", "sipMaxTransactions"), ("SIP-MIB", "sipRequestDfltExpires"), ("SIP-MIB", "sipHideOperation"), ("SIP-MIB", "sipUserLocationServerAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipCommonConfigGroup = sipCommonConfigGroup.setStatus('current')
sipCommonStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 9998, 3, 2, 2)).setObjects(("SIP-MIB", "sipSummaryInRequests"), ("SIP-MIB", "sipSummaryOutRequests"), ("SIP-MIB", "sipSummaryInResponses"), ("SIP-MIB", "sipSummaryOutResponses"), ("SIP-MIB", "sipSummaryTotalTransactions"), ("SIP-MIB", "sipStatsInviteIns"), ("SIP-MIB", "sipStatsInviteOuts"), ("SIP-MIB", "sipStatsAckIns"), ("SIP-MIB", "sipStatsAckOuts"), ("SIP-MIB", "sipStatsByeIns"), ("SIP-MIB", "sipStatsByeOuts"), ("SIP-MIB", "sipStatsCancelIns"), ("SIP-MIB", "sipStatsCancelOuts"), ("SIP-MIB", "sipStatsOptionsIns"), ("SIP-MIB", "sipStatsOptionsOuts"), ("SIP-MIB", "sipStatsRegisterIns"), ("SIP-MIB", "sipStatsRegisterOuts"), ("SIP-MIB", "sipStatsInfoIns"), ("SIP-MIB", "sipStatsInfoOuts"), ("SIP-MIB", "sipStatsInfoTryingIns"), ("SIP-MIB", "sipStatsInfoTryingOuts"), ("SIP-MIB", "sipStatsInfoRingingIns"), ("SIP-MIB", "sipStatsInfoRingingOuts"), ("SIP-MIB", "sipStatsInfoForwardedIns"), ("SIP-MIB", "sipStatsInfoForwardedOuts"), ("SIP-MIB", "sipStatsInfoQueuedIns"), ("SIP-MIB", "sipStatsInfoQueuedOuts"), ("SIP-MIB", "sipStatsInfoSessionProgIns"), ("SIP-MIB", "sipStatsInfoSessionProgOuts"), ("SIP-MIB", "sipStatsSuccessOkIns"), ("SIP-MIB", "sipStatsSuccessOkOuts"), ("SIP-MIB", "sipStatsRedirMultipleChoiceIns"), ("SIP-MIB", "sipStatsRedirMultipleChoiceOuts"), ("SIP-MIB", "sipStatsRedirMovedPermIns"), ("SIP-MIB", "sipStatsRedirMovedPermOuts"), ("SIP-MIB", "sipStatsRedirMovedTempIns"), ("SIP-MIB", "sipStatsRedirMovedTempOuts"), ("SIP-MIB", "sipStatsRedirSeeOtherIns"), ("SIP-MIB", "sipStatsRedirSeeOtherOuts"), ("SIP-MIB", "sipStatsRedirUseProxyIns"), ("SIP-MIB", "sipStatsRedirUseProxyOuts"), ("SIP-MIB", "sipStatsRedirAltServiceIns"), ("SIP-MIB", "sipStatsRedirAltServiceOuts"), ("SIP-MIB", "sipStatsClientBadRequestIns"), ("SIP-MIB", "sipStatsClientBadRequestOuts"), ("SIP-MIB", "sipStatsClientUnauthorizedIns"), ("SIP-MIB", "sipStatsClientUnauthorizedOuts"), ("SIP-MIB", "sipStatsClientPaymentReqdIns"), ("SIP-MIB", "sipStatsClientPaymentReqdOuts"), ("SIP-MIB", "sipStatsClientForbiddenIns"), ("SIP-MIB", "sipStatsClientForbiddenOuts"), ("SIP-MIB", "sipStatsClientNotFoundIns"), ("SIP-MIB", "sipStatsClientNotFoundOuts"), ("SIP-MIB", "sipStatsClientMethNotAllowedIns"), ("SIP-MIB", "sipStatsClientMethNotAllowedOuts"), ("SIP-MIB", "sipStatsClientNotAcceptableIns"), ("SIP-MIB", "sipStatsClientNotAcceptableOuts"), ("SIP-MIB", "sipStatsClientProxyAuthReqdIns"), ("SIP-MIB", "sipStatsClientProxyAuthReqdOuts"), ("SIP-MIB", "sipStatsClientReqTimeoutIns"), ("SIP-MIB", "sipStatsClientReqTimeoutOuts"), ("SIP-MIB", "sipStatsClientConflictIns"), ("SIP-MIB", "sipStatsClientConflictOuts"), ("SIP-MIB", "sipStatsClientGoneIns"), ("SIP-MIB", "sipStatsClientGoneOuts"), ("SIP-MIB", "sipStatsClientLengthRequiredIns"), ("SIP-MIB", "sipStatsClientLengthRequiredOuts"), ("SIP-MIB", "sipStatsClientReqEntTooLargeIns"), ("SIP-MIB", "sipStatsClientReqEntTooLargeOuts"), ("SIP-MIB", "sipStatsClientReqURITooLargeIns"), ("SIP-MIB", "sipStatsClientReqURITooLargeOuts"), ("SIP-MIB", "sipStatsClientNoSupMediaTypeIns"), ("SIP-MIB", "sipStatsClientNoSupMediaTypeOuts"), ("SIP-MIB", "sipStatsClientBadExtensionIns"), ("SIP-MIB", "sipStatsClientBadExtensionOuts"), ("SIP-MIB", "sipStatsClientTempNotAvailIns"), ("SIP-MIB", "sipStatsClientTempNotAvailOuts"), ("SIP-MIB", "sipStatsClientCallLegNoExistIns"), ("SIP-MIB", "sipStatsClientCallLegNoExistOuts"), ("SIP-MIB", "sipStatsClientLoopDetectedIns"), ("SIP-MIB", "sipStatsClientLoopDetectedOuts"), ("SIP-MIB", "sipStatsClientTooManyHopsIns"), ("SIP-MIB", "sipStatsClientTooManyHopsOuts"), ("SIP-MIB", "sipStatsClientAddrIncompleteIns"), ("SIP-MIB", "sipStatsClientAddrIncompleteOuts"), ("SIP-MIB", "sipStatsClientAmbiguousIns"), ("SIP-MIB", "sipStatsClientAmbiguousOuts"), ("SIP-MIB", "sipStatsClientBusyHereIns"), ("SIP-MIB", "sipStatsClientBusyHereOuts"), ("SIP-MIB", "sipStatsServerIntErrorIns"), ("SIP-MIB", "sipStatsServerIntErrorOuts"), ("SIP-MIB", "sipStatsServerNotImplementedIns"), ("SIP-MIB", "sipStatsServerNotImplementedOuts"), ("SIP-MIB", "sipStatsServerBadGatewayIns"), ("SIP-MIB", "sipStatsServerBadGatewayOuts"), ("SIP-MIB", "sipStatsServerServiceUnavailIns"), ("SIP-MIB", "sipStatsServerServiceUnavailOuts"), ("SIP-MIB", "sipStatsServerGatewayTimeoutIns"), ("SIP-MIB", "sipStatsServerGatewayTimeoutOuts"), ("SIP-MIB", "sipStatsServerBadSipVersionIns"), ("SIP-MIB", "sipStatsServerBadSipVersionOuts"), ("SIP-MIB", "sipStatsGlobalBusyEverywhereIns"), ("SIP-MIB", "sipStatsGlobalBusyEverywhereOuts"), ("SIP-MIB", "sipStatsGlobalDeclineIns"), ("SIP-MIB", "sipStatsGlobalDeclineOuts"), ("SIP-MIB", "sipStatsGlobalNotAnywhereIns"), ("SIP-MIB", "sipStatsGlobalNotAnywhereOuts"), ("SIP-MIB", "sipStatsGlobalNotAcceptableIns"), ("SIP-MIB", "sipStatsGlobalNotAcceptableOuts"), ("SIP-MIB", "sipCurrentTransactions"), ("SIP-MIB", "sipTransTo"), ("SIP-MIB", "sipTransFrom"), ("SIP-MIB", "sipTransCallId"), ("SIP-MIB", "sipTransCSeq"), ("SIP-MIB", "sipTransState"), ("SIP-MIB", "sipTransOutstandingBranches"), ("SIP-MIB", "sipTransExpiry"), ("SIP-MIB", "sipTransCallingPartyContentType"), ("SIP-MIB", "sipTransCalledPartyContentType"), ("SIP-MIB", "sipNumUnsupportedUris"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipCommonStatsGroup = sipCommonStatsGroup.setStatus('current')
sipUAConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 9998, 3, 2, 4)).setObjects(("SIP-MIB", "sipUACfgTimerTrying"), ("SIP-MIB", "sipUACfgTimerExpires"), ("SIP-MIB", "sipUACfgTimerConnect"), ("SIP-MIB", "sipUACfgTimerDisconnect"), ("SIP-MIB", "sipUACfgRetryInvite"), ("SIP-MIB", "sipUACfgRetryBye"), ("SIP-MIB", "sipUACfgRetryCancel"), ("SIP-MIB", "sipUACfgRetryRegister"), ("SIP-MIB", "sipUACfgRetryResponse"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipUAConfigGroup = sipUAConfigGroup.setStatus('current')
sipUAStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 9998, 3, 2, 5)).setObjects(("SIP-MIB", "sipStatsRetryInvites"), ("SIP-MIB", "sipStatsRetryByes"), ("SIP-MIB", "sipStatsRetryCancels"), ("SIP-MIB", "sipStatsRetryRegisters"), ("SIP-MIB", "sipStatsRetryResponses"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipUAStatsGroup = sipUAStatsGroup.setStatus('current')
sipServerConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 9998, 3, 2, 7)).setObjects(("SIP-MIB", "sipServerHost"), ("SIP-MIB", "sipInformationTryingInitial"), ("SIP-MIB", "sipInformationTryingInterval"), ("SIP-MIB", "sipPgpVersion"), ("SIP-MIB", "sipServerDfltAction"), ("SIP-MIB", "sipServerRespectUAAction"), ("SIP-MIB", "sipRequestUriHostMatching"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipServerConfigGroup = sipServerConfigGroup.setStatus('current')
sipProxyConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 9998, 3, 2, 9)).setObjects(("SIP-MIB", "sipRequestMaxExpires"), ("SIP-MIB", "sipProxyStateful"), ("SIP-MIB", "sipProxySendsCancel"), ("SIP-MIB", "sipProxyForwardAll1xx"), ("SIP-MIB", "sipProxyRecursion"), ("SIP-MIB", "sipProxyProvideAlternatives"), ("SIP-MIB", "sipProxyRecordRoute"), ("SIP-MIB", "sipProxyUseCompact"), ("SIP-MIB", "sipProxyRetransmissionBuffer"), ("SIP-MIB", "sipProxyAuthMethod"), ("SIP-MIB", "sipProxyAuthPgpAlgorithm"), ("SIP-MIB", "sipProxyAuthRealm"), ("SIP-MIB", "sipProxyNonceLifeTime"), ("SIP-MIB", "sipPgpPrivateKey"), ("SIP-MIB", "sipRxProxyAuthRealm"), ("SIP-MIB", "sipRxProxyAuthPassword"), ("SIP-MIB", "sipRxProxyAuthStatus"), ("SIP-MIB", "sipHideRespect"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipProxyConfigGroup = sipProxyConfigGroup.setStatus('current')
sipProxyStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 9998, 3, 2, 10)).setObjects(("SIP-MIB", "sipNumProxyRequireFailures"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipProxyStatsGroup = sipProxyStatsGroup.setStatus('current')
sipRegistrarConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 9998, 3, 2, 15)).setObjects(("SIP-MIB", "sipRegAllowThirdParty"), ("SIP-MIB", "sipRegContactDfltExpiryDuration"), ("SIP-MIB", "sipRegContactDfltExpiryDate"), ("SIP-MIB", "sipRegMaxContactExpiryDate"), ("SIP-MIB", "sipRegRespHasContacts"), ("SIP-MIB", "sipRegMaxUsers"), ("SIP-MIB", "sipRegCurrentUsers"), ("SIP-MIB", "sipUserUri"), ("SIP-MIB", "sipUserPassword"), ("SIP-MIB", "sipUserAuthenticationFailures"), ("SIP-MIB", "sipUserTableRowStatus"), ("SIP-MIB", "sipContactDisplayName"), ("SIP-MIB", "sipContactURI"), ("SIP-MIB", "sipContactLastUpdated"), ("SIP-MIB", "sipContactExpiry"), ("SIP-MIB", "sipContactPreference"), ("SIP-MIB", "sipContactAction"), ("SIP-MIB", "sipContactRetryAfter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipRegistrarConfigGroup = sipRegistrarConfigGroup.setStatus('current')
sipRegistrarStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 9998, 3, 2, 16)).setObjects(("SIP-MIB", "sipRegAcceptedRegistrations"), ("SIP-MIB", "sipRegRejectedRegistrations"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sipRegistrarStatsGroup = sipRegistrarStatsGroup.setStatus('current')
mibBuilder.exportSymbols("SIP-MIB", sipStatsInfoRingingIns=sipStatsInfoRingingIns, sipTransactionEntry=sipTransactionEntry, sipStatsClientReqTimeoutIns=sipStatsClientReqTimeoutIns, sipUACfgTimerTrying=sipUACfgTimerTrying, sipProxyForwardAll1xx=sipProxyForwardAll1xx, sipUriSupportedTable=sipUriSupportedTable, sipStatsClientReqURITooLargeIns=sipStatsClientReqURITooLargeIns, sipStatsServerIntErrorIns=sipStatsServerIntErrorIns, sipStatsClientAmbiguousOuts=sipStatsClientAmbiguousOuts, sipStatsClientNotFoundOuts=sipStatsClientNotFoundOuts, sipStatsClientCallLegNoExistIns=sipStatsClientCallLegNoExistIns, sipMIBGroups=sipMIBGroups, sipProxyAuthRealm=sipProxyAuthRealm, sipStatsRetryByes=sipStatsRetryByes, sipSummaryOutRequests=sipSummaryOutRequests, sipRxProxyAuthIndex=sipRxProxyAuthIndex, sipRegRejectedRegistrations=sipRegRejectedRegistrations, sipServiceAdminStatus=sipServiceAdminStatus, sipCommonStats=sipCommonStats, sipStatsOptionsIns=sipStatsOptionsIns, sipContactAction=sipContactAction, sipRxProxyAuthRealm=sipRxProxyAuthRealm, sipRegistrarStatsGroup=sipRegistrarStatsGroup, sipStatsSuccessOkIns=sipStatsSuccessOkIns, sipUAStatsRetry=sipUAStatsRetry, sipUACfgRetryBye=sipUACfgRetryBye, sipUACfgTimerDisconnect=sipUACfgTimerDisconnect, sipPort=sipPort, sipStatsRegisterOuts=sipStatsRegisterOuts, sipStatsClientTooManyHopsOuts=sipStatsClientTooManyHopsOuts, sipStatsServerIntErrorOuts=sipStatsServerIntErrorOuts, sipFtrSupportedTable=sipFtrSupportedTable, sipStatsClientReqURITooLargeOuts=sipStatsClientReqURITooLargeOuts, sipStatsClientBadRequestOuts=sipStatsClientBadRequestOuts, sipStatsClientReqTimeoutOuts=sipStatsClientReqTimeoutOuts, sipServerDfltAction=sipServerDfltAction, sipProxyStats=sipProxyStats, sipStatsClientMethNotAllowedOuts=sipStatsClientMethNotAllowedOuts, sipContactDisplayName=sipContactDisplayName, sipUA=sipUA, sipStatsRedirMovedPermOuts=sipStatsRedirMovedPermOuts, sipTransTo=sipTransTo, sipProxyAuthPgpAlgorithm=sipProxyAuthPgpAlgorithm, sipStatsClientTempNotAvailOuts=sipStatsClientTempNotAvailOuts, sipStatsCancelIns=sipStatsCancelIns, sipStatsInfoIns=sipStatsInfoIns, sipStatsRedirMultipleChoiceIns=sipStatsRedirMultipleChoiceIns, sipCommonStatsGroup=sipCommonStatsGroup, sipProxyNotif=sipProxyNotif, sipStatsClientAddrIncompleteIns=sipStatsClientAddrIncompleteIns, sipProxyRecursion=sipProxyRecursion, sipUACfgTimer=sipUACfgTimer, sipContactExpiry=sipContactExpiry, sipStatsClientBadExtensionOuts=sipStatsClientBadExtensionOuts, sipProtocolVersion=sipProtocolVersion, sipRegCfg=sipRegCfg, sipServerCfg=sipServerCfg, sipUANotif=sipUANotif, sipStatsClientForbiddenOuts=sipStatsClientForbiddenOuts, sipStatsServerGatewayTimeoutOuts=sipStatsServerGatewayTimeoutOuts, sipStatsRegisterIns=sipStatsRegisterIns, sipStatsClientAddrIncompleteOuts=sipStatsClientAddrIncompleteOuts, sipStatsRetryInvites=sipStatsRetryInvites, sipStatsInfoRingingOuts=sipStatsInfoRingingOuts, sipRxProxyAuthTable=sipRxProxyAuthTable, sipTransCallingPartyContentType=sipTransCallingPartyContentType, sipContactTable=sipContactTable, sipCommonStatsMethod=sipCommonStatsMethod, sipStatsGlobalNotAcceptableIns=sipStatsGlobalNotAcceptableIns, sipUACfgRetry=sipUACfgRetry, sipServer=sipServer, sipStatsClientBadRequestIns=sipStatsClientBadRequestIns, sipStatsAckIns=sipStatsAckIns, sipStatsClientUnauthorizedOuts=sipStatsClientUnauthorizedOuts, sipStatsClientCallLegNoExistOuts=sipStatsClientCallLegNoExistOuts, sipStatsRetryRegisters=sipStatsRetryRegisters, sipServiceOperStatus=sipServiceOperStatus, sipPortStatus=sipPortStatus, sipProxyProvideAlternatives=sipProxyProvideAlternatives, sipRxProxyAuthPassword=sipRxProxyAuthPassword, sipMIBCompliances=sipMIBCompliances, sipStatsClientLengthRequiredOuts=sipStatsClientLengthRequiredOuts, sipRegMaxContactExpiryDate=sipRegMaxContactExpiryDate, sipUriSupported=sipUriSupported, sipUAConfigGroup=sipUAConfigGroup, sipProxyUseCompact=sipProxyUseCompact, sipPortTable=sipPortTable, sipUACfg=sipUACfg, SipServerActions=SipServerActions, sipStatsClientGoneOuts=sipStatsClientGoneOuts, sipUserLocationServerAddr=sipUserLocationServerAddr, sipStatsServerBadSipVersionIns=sipStatsServerBadSipVersionIns, sipServerStats=sipServerStats, sipStatsClientAmbiguousIns=sipStatsClientAmbiguousIns, sipRegNotif=sipRegNotif, sipServiceLastChange=sipServiceLastChange, sipStatsGlobalNotAnywhereIns=sipStatsGlobalNotAnywhereIns, sipTransFrom=sipTransFrom, sipProxyCfg=sipProxyCfg, sipUACfgTimerExpires=sipUACfgTimerExpires, sipRequestUriHostMatching=sipRequestUriHostMatching, sipTransactionTable=sipTransactionTable, sipStatsClientBadExtensionIns=sipStatsClientBadExtensionIns, sipContactURI=sipContactURI, sipContactIndex=sipContactIndex, sipStatsInfoTryingIns=sipStatsInfoTryingIns, sipProxy=sipProxy, sipStatsClientPaymentReqdOuts=sipStatsClientPaymentReqdOuts, sipCommonStatsGlobalFail=sipCommonStatsGlobalFail, sipSummaryInRequests=sipSummaryInRequests, sipStatsInfoSessionProgOuts=sipStatsInfoSessionProgOuts, sipStatsGlobalBusyEverywhereIns=sipStatsGlobalBusyEverywhereIns, sipStatsGlobalNotAcceptableOuts=sipStatsGlobalNotAcceptableOuts, sipTransCallId=sipTransCallId, sipRegContactDfltExpiryDuration=sipRegContactDfltExpiryDuration, sipProxyNonceLifeTime=sipProxyNonceLifeTime, sipRegUserEntry=sipRegUserEntry, sipRedirStats=sipRedirStats, sipRegRespHasContacts=sipRegRespHasContacts, sipStatsClientBusyHereOuts=sipStatsClientBusyHereOuts, sipNotif=sipNotif, sipRegistrarConfigGroup=sipRegistrarConfigGroup, sipStatsServerBadGatewayIns=sipStatsServerBadGatewayIns, sipRedir=sipRedir, sipStatsClientUnauthorizedIns=sipStatsClientUnauthorizedIns, sipFtrSupported=sipFtrSupported, sipStatsRedirMovedTempIns=sipStatsRedirMovedTempIns, sipStatsRedirSeeOtherOuts=sipStatsRedirSeeOtherOuts, sipStatsServerServiceUnavailIns=sipStatsServerServiceUnavailIns, sipStatsByeOuts=sipStatsByeOuts, sipFtrSupportedIndex=sipFtrSupportedIndex, sipCommonStatsErrClient=sipCommonStatsErrClient, sipStatsRedirMovedPermIns=sipStatsRedirMovedPermIns, sipStatsClientPaymentReqdIns=sipStatsClientPaymentReqdIns, sipStatsClientGoneIns=sipStatsClientGoneIns, sipStatsClientNoSupMediaTypeOuts=sipStatsClientNoSupMediaTypeOuts, sipProxyAuthMethod=sipProxyAuthMethod, sipStatsInfoQueuedOuts=sipStatsInfoQueuedOuts, sipCommonStatsErrServer=sipCommonStatsErrServer, sipStatsAckOuts=sipStatsAckOuts, sipMIB=sipMIB, sipStatsClientForbiddenIns=sipStatsClientForbiddenIns, sipCommonStatsSummary=sipCommonStatsSummary, sipTransCalledPartyContentType=sipTransCalledPartyContentType, sipStatsInviteOuts=sipStatsInviteOuts, sipStatsGlobalBusyEverywhereOuts=sipStatsGlobalBusyEverywhereOuts, sipStatsClientNotAcceptableOuts=sipStatsClientNotAcceptableOuts, sipStatsSuccessOkOuts=sipStatsSuccessOkOuts, sipReg=sipReg, sipCommonStatsTrans=sipCommonStatsTrans, sipStatsServerNotImplementedIns=sipStatsServerNotImplementedIns, sipRequestDfltExpires=sipRequestDfltExpires, sipStatsRedirAltServiceIns=sipStatsRedirAltServiceIns, sipStatsClientProxyAuthReqdOuts=sipStatsClientProxyAuthReqdOuts, sipCurrentTransactions=sipCurrentTransactions, sipCommonStatsInfo=sipCommonStatsInfo, sipNumUnsupportedUris=sipNumUnsupportedUris, sipRegContactDfltExpiryDate=sipRegContactDfltExpiryDate, sipProxySendsCancel=sipProxySendsCancel, sipRegAllowThirdParty=sipRegAllowThirdParty, sipStatsInfoForwardedOuts=sipStatsInfoForwardedOuts, sipCompliance=sipCompliance, PYSNMP_MODULE_ID=sipMIB, sipStatsInfoSessionProgIns=sipStatsInfoSessionProgIns, sipStatsClientLengthRequiredIns=sipStatsClientLengthRequiredIns, sipStatsRetryResponses=sipStatsRetryResponses, sipStatsRedirAltServiceOuts=sipStatsRedirAltServiceOuts, sipRxProxyAuthEntry=sipRxProxyAuthEntry, sipRedirCfg=sipRedirCfg, sipStatsClientNoSupMediaTypeIns=sipStatsClientNoSupMediaTypeIns, sipStatsClientReqEntTooLargeIns=sipStatsClientReqEntTooLargeIns, sipRedirNotif=sipRedirNotif, sipStatsServerBadGatewayOuts=sipStatsServerBadGatewayOuts, sipRxProxyAuthStatus=sipRxProxyAuthStatus, sipContactPreference=sipContactPreference, sipStatsInfoTryingOuts=sipStatsInfoTryingOuts, sipStatsRedirSeeOtherIns=sipStatsRedirSeeOtherIns, sipStatsRedirMovedTempOuts=sipStatsRedirMovedTempOuts, sipStatsClientTempNotAvailIns=sipStatsClientTempNotAvailIns, sipUriSupportedEntry=sipUriSupportedEntry, sipUserAuthenticationFailures=sipUserAuthenticationFailures, sipUACfgRetryResponse=sipUACfgRetryResponse, sipInformationTryingInterval=sipInformationTryingInterval, sipStatsClientConflictOuts=sipStatsClientConflictOuts, sipStatsGlobalNotAnywhereOuts=sipStatsGlobalNotAnywhereOuts, sipRegMaxUsers=sipRegMaxUsers, sipHideOperation=sipHideOperation, sipStatsOptionsOuts=sipStatsOptionsOuts, sipRequestMaxExpires=sipRequestMaxExpires, sipStatsServerGatewayTimeoutIns=sipStatsServerGatewayTimeoutIns, sipCommonStatsRedirect=sipCommonStatsRedirect, sipStatsServerServiceUnavailOuts=sipStatsServerServiceUnavailOuts, sipContactEntry=sipContactEntry, sipServerRespectUAAction=sipServerRespectUAAction, sipPgpPrivateKey=sipPgpPrivateKey, sipStatsInfoQueuedIns=sipStatsInfoQueuedIns, sipUserTableRowStatus=sipUserTableRowStatus, sipProxyStateful=sipProxyStateful, sipStatsGlobalDeclineOuts=sipStatsGlobalDeclineOuts, sipNumProxyRequireFailures=sipNumProxyRequireFailures, sipRegCurrentUsers=sipRegCurrentUsers, sipStatsServerNotImplementedOuts=sipStatsServerNotImplementedOuts, sipStatsClientReqEntTooLargeOuts=sipStatsClientReqEntTooLargeOuts, sipUACfgRetryCancel=sipUACfgRetryCancel, sipCommonConfigGroup=sipCommonConfigGroup, sipPortEntry=sipPortEntry, sipMaxTransactions=sipMaxTransactions, sipUACfgTimerConnect=sipUACfgTimerConnect, sipCommonCfg=sipCommonCfg, sipSummaryOutResponses=sipSummaryOutResponses, sipProxyRecordRoute=sipProxyRecordRoute, sipUACfgRetryRegister=sipUACfgRetryRegister, sipStatsInfoOuts=sipStatsInfoOuts, sipUserIndex=sipUserIndex, sipPgpVersion=sipPgpVersion, sipTransExpiry=sipTransExpiry, sipHideRespect=sipHideRespect, sipStatsClientConflictIns=sipStatsClientConflictIns, sipStatsServerBadSipVersionOuts=sipStatsServerBadSipVersionOuts, sipSummaryInResponses=sipSummaryInResponses, sipStatsGlobalDeclineIns=sipStatsGlobalDeclineIns, sipStatsInviteIns=sipStatsInviteIns, sipUserPassword=sipUserPassword, sipCommon=sipCommon, sipStatsCancelOuts=sipStatsCancelOuts, sipStatsInfoForwardedIns=sipStatsInfoForwardedIns, sipStatsClientLoopDetectedIns=sipStatsClientLoopDetectedIns, sipStatsClientLoopDetectedOuts=sipStatsClientLoopDetectedOuts, sipTransIndex=sipTransIndex, sipStatsClientMethNotAllowedIns=sipStatsClientMethNotAllowedIns, sipContactRetryAfter=sipContactRetryAfter, sipOrganization=sipOrganization, sipTransState=sipTransState, sipStatsRetryCancels=sipStatsRetryCancels, sipUserUri=sipUserUri, sipProxyStatsGroup=sipProxyStatsGroup, sipServerHost=sipServerHost, sipRegUserTable=sipRegUserTable, sipCommonStatsSuccess=sipCommonStatsSuccess, sipStatsRedirUseProxyOuts=sipStatsRedirUseProxyOuts, sipStatsClientNotFoundIns=sipStatsClientNotFoundIns, sipContactLastUpdated=sipContactLastUpdated, sipTransOutstandingBranches=sipTransOutstandingBranches, sipMIBNotif=sipMIBNotif, sipStatsRedirUseProxyIns=sipStatsRedirUseProxyIns, sipRegAcceptedRegistrations=sipRegAcceptedRegistrations, sipUriSupportedIndex=sipUriSupportedIndex, sipRegStats=sipRegStats, sipStatsClientTooManyHopsIns=sipStatsClientTooManyHopsIns, sipProxyRetransmissionBuffer=sipProxyRetransmissionBuffer, sipTransCSeq=sipTransCSeq, sipMIBNotifPrefix=sipMIBNotifPrefix, sipInformationTryingInitial=sipInformationTryingInitial, sipProxyConfigGroup=sipProxyConfigGroup)
mibBuilder.exportSymbols("SIP-MIB", sipMIBConformance=sipMIBConformance, sipSummaryTotalTransactions=sipSummaryTotalTransactions, sipServerConfigGroup=sipServerConfigGroup, sipStatsClientProxyAuthReqdIns=sipStatsClientProxyAuthReqdIns, sipStatsByeIns=sipStatsByeIns, sipUAStats=sipUAStats, sipStatsRedirMultipleChoiceOuts=sipStatsRedirMultipleChoiceOuts, sipUAStatsGroup=sipUAStatsGroup, sipMIBObjects=sipMIBObjects, sipStatsClientBusyHereIns=sipStatsClientBusyHereIns, sipServiceStartTime=sipServiceStartTime, sipUACfgRetryInvite=sipUACfgRetryInvite, sipStatsClientNotAcceptableIns=sipStatsClientNotAcceptableIns, sipFtrSupportedEntry=sipFtrSupportedEntry, sipTransport=sipTransport)
