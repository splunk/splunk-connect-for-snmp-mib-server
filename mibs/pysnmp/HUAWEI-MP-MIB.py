#
# PySNMP MIB module HUAWEI-MP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-MP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:35:09 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
hwDatacomm, = mibBuilder.importSymbols("HUAWEI-MIB", "hwDatacomm")
ifIndex, ifName = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifName")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, IpAddress, Counter32, MibIdentifier, Gauge32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Integer32, Counter64, ModuleIdentity, TimeTicks, Unsigned32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "IpAddress", "Counter32", "MibIdentifier", "Gauge32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Integer32", "Counter64", "ModuleIdentity", "TimeTicks", "Unsigned32", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
hwMultilinkPPP = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33))
if mibBuilder.loadTexts: hwMultilinkPPP.setLastUpdated('200405180000Z')
if mibBuilder.loadTexts: hwMultilinkPPP.setOrganization('Huawei Technologies co.,Ltd.')
hwMpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1))
hwMpMultilinkTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 1), )
if mibBuilder.loadTexts: hwMpMultilinkTable.setStatus('current')
hwMpMultilinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hwMpMultilinkEntry.setStatus('current')
hwMpMultilinkDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMpMultilinkDescr.setStatus('current')
hwMpBundleName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMpBundleName.setStatus('current')
hwMpBundledSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMpBundledSlot.setStatus('current')
hwMpBundledMemberCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMpBundledMemberCnt.setStatus('current')
hwMpLostFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMpLostFragments.setStatus('current')
hwMpReorderedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMpReorderedPkts.setStatus('current')
hwMpUnassignedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMpUnassignedPkts.setStatus('current')
hwMpInterleavedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMpInterleavedPkts.setStatus('current')
hwMpRcvdSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMpRcvdSequence.setStatus('current')
hwMpSentSequence = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMpSentSequence.setStatus('current')
hwMpDetectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(30, 3600), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMpDetectTime.setStatus('current')
hwMpFlappingCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMpFlappingCnt.setStatus('current')
hwMpDampingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(60, 86400), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMpDampingTime.setStatus('current')
hwMpBundleThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMpBundleThreshold.setStatus('current')
hwMpSequenceReorder = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMpSequenceReorder.setStatus('current')
hwMpMemberlinkTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 2), )
if mibBuilder.loadTexts: hwMpMemberlinkTable.setStatus('current')
hwMpMemberlinkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "HUAWEI-MP-MIB", "hwMpMemberlinkSeqNumber"))
if mibBuilder.loadTexts: hwMpMemberlinkEntry.setStatus('current')
hwMpMemberlinkSeqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMpMemberlinkSeqNumber.setStatus('current')
hwMpMemberlinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMpMemberlinkIfIndex.setStatus('current')
hwMpMemberlinkDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMpMemberlinkDescr.setStatus('current')
hwMpMemberlinkMpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMpMemberlinkMpStatus.setStatus('current')
hwMpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 2))
hwMpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 2, 1))
hwMpSonChannelDampingDetect = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 2, 1, 1)).setObjects(("HUAWEI-MP-MIB", "hwMpMemberlinkIfIndex"))
if mibBuilder.loadTexts: hwMpSonChannelDampingDetect.setStatus('current')
hwMpSonChannelDampingResume = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 2, 1, 2)).setObjects(("HUAWEI-MP-MIB", "hwMpMemberlinkIfIndex"))
if mibBuilder.loadTexts: hwMpSonChannelDampingResume.setStatus('current')
hwMpThresholdControlDetect = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 2, 1, 3)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMpThresholdControlDetect.setStatus('current')
hwMpThresholdControlDetectClear = NotificationType((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 2, 1, 4)).setObjects(("IF-MIB", "ifIndex"), ("IF-MIB", "ifName"))
if mibBuilder.loadTexts: hwMpThresholdControlDetectClear.setStatus('current')
hwMpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 3))
hwMpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 3, 1))
hwMpCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 3, 1, 1)).setObjects(("HUAWEI-MP-MIB", "hwMpMandatoryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMpCompliance = hwMpCompliance.setStatus('current')
hwMpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 3, 2))
hwMpMandatoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 3, 2, 1)).setObjects(("HUAWEI-MP-MIB", "hwMpBundledMemberCnt"), ("HUAWEI-MP-MIB", "hwMpMemberlinkSeqNumber"), ("HUAWEI-MP-MIB", "hwMpMemberlinkIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMpMandatoryGroup = hwMpMandatoryGroup.setStatus('current')
hwMpInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 3, 2, 2)).setObjects(("HUAWEI-MP-MIB", "hwMpMultilinkDescr"), ("HUAWEI-MP-MIB", "hwMpBundleName"), ("HUAWEI-MP-MIB", "hwMpBundledSlot"), ("HUAWEI-MP-MIB", "hwMpBundledMemberCnt"), ("HUAWEI-MP-MIB", "hwMpLostFragments"), ("HUAWEI-MP-MIB", "hwMpReorderedPkts"), ("HUAWEI-MP-MIB", "hwMpUnassignedPkts"), ("HUAWEI-MP-MIB", "hwMpInterleavedPkts"), ("HUAWEI-MP-MIB", "hwMpRcvdSequence"), ("HUAWEI-MP-MIB", "hwMpSentSequence"), ("HUAWEI-MP-MIB", "hwMpDetectTime"), ("HUAWEI-MP-MIB", "hwMpFlappingCnt"), ("HUAWEI-MP-MIB", "hwMpDampingTime"), ("HUAWEI-MP-MIB", "hwMpBundleThreshold"), ("HUAWEI-MP-MIB", "hwMpSequenceReorder"), ("HUAWEI-MP-MIB", "hwMpMemberlinkDescr"), ("HUAWEI-MP-MIB", "hwMpMemberlinkMpStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMpInfoGroup = hwMpInfoGroup.setStatus('current')
hwMpTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 2011, 5, 25, 33, 3, 2, 3)).setObjects(("HUAWEI-MP-MIB", "hwMpSonChannelDampingDetect"), ("HUAWEI-MP-MIB", "hwMpSonChannelDampingResume"), ("HUAWEI-MP-MIB", "hwMpThresholdControlDetect"), ("HUAWEI-MP-MIB", "hwMpThresholdControlDetectClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hwMpTrapGroup = hwMpTrapGroup.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-MP-MIB", hwMpMultilinkDescr=hwMpMultilinkDescr, hwMpMandatoryGroup=hwMpMandatoryGroup, hwMpDetectTime=hwMpDetectTime, PYSNMP_MODULE_ID=hwMultilinkPPP, hwMpTraps=hwMpTraps, hwMpBundledSlot=hwMpBundledSlot, hwMpDampingTime=hwMpDampingTime, hwMpMemberlinkEntry=hwMpMemberlinkEntry, hwMpConformance=hwMpConformance, hwMpMemberlinkSeqNumber=hwMpMemberlinkSeqNumber, hwMpNotifications=hwMpNotifications, hwMpObjects=hwMpObjects, hwMpRcvdSequence=hwMpRcvdSequence, hwMpSequenceReorder=hwMpSequenceReorder, hwMpMultilinkTable=hwMpMultilinkTable, hwMpMemberlinkMpStatus=hwMpMemberlinkMpStatus, hwMpInterleavedPkts=hwMpInterleavedPkts, hwMpFlappingCnt=hwMpFlappingCnt, hwMpUnassignedPkts=hwMpUnassignedPkts, hwMpBundleThreshold=hwMpBundleThreshold, hwMpMemberlinkIfIndex=hwMpMemberlinkIfIndex, hwMpSonChannelDampingResume=hwMpSonChannelDampingResume, hwMpBundledMemberCnt=hwMpBundledMemberCnt, hwMpCompliance=hwMpCompliance, hwMpGroups=hwMpGroups, hwMultilinkPPP=hwMultilinkPPP, hwMpBundleName=hwMpBundleName, hwMpMemberlinkDescr=hwMpMemberlinkDescr, hwMpThresholdControlDetectClear=hwMpThresholdControlDetectClear, hwMpSentSequence=hwMpSentSequence, hwMpCompliances=hwMpCompliances, hwMpSonChannelDampingDetect=hwMpSonChannelDampingDetect, hwMpMemberlinkTable=hwMpMemberlinkTable, hwMpLostFragments=hwMpLostFragments, hwMpInfoGroup=hwMpInfoGroup, hwMpThresholdControlDetect=hwMpThresholdControlDetect, hwMpTrapGroup=hwMpTrapGroup, hwMpReorderedPkts=hwMpReorderedPkts, hwMpMultilinkEntry=hwMpMultilinkEntry)
