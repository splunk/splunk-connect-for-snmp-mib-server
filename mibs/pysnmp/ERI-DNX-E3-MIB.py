#
# PySNMP MIB module ERI-DNX-E3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ERI-DNX-E3-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:51:40 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
LinkCmdStatus, DataSwitch, devices, PortStatus, trapSequence, OneByteField, DecisionType, LinkPortAddress, FunctionSwitch = mibBuilder.importSymbols("ERI-DNX-SMC-MIB", "LinkCmdStatus", "DataSwitch", "devices", "PortStatus", "trapSequence", "OneByteField", "DecisionType", "LinkPortAddress", "FunctionSwitch")
eriMibs, = mibBuilder.importSymbols("ERI-ROOT-SMI", "eriMibs")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, NotificationType, TimeTicks, Counter64, Bits, IpAddress, Unsigned32, Counter32, Integer32, ObjectIdentity, ModuleIdentity, iso, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "NotificationType", "TimeTicks", "Counter64", "Bits", "IpAddress", "Unsigned32", "Counter32", "Integer32", "ObjectIdentity", "ModuleIdentity", "iso", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
eriDNXE3MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 644, 3, 11))
if mibBuilder.loadTexts: eriDNXE3MIB.setLastUpdated('200204080000Z')
if mibBuilder.loadTexts: eriDNXE3MIB.setOrganization('Eastern Research, Inc.')
dnxE3 = MibIdentifier((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8))
e3Config = MibIdentifier((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1))
e3Diag = MibIdentifier((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2))
e3PortConfigTable = MibTable((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 1), )
if mibBuilder.loadTexts: e3PortConfigTable.setStatus('current')
e3PortConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 1, 1), ).setIndexNames((0, "ERI-DNX-E3-MIB", "e3PortCfgAddr"))
if mibBuilder.loadTexts: e3PortConfigEntry.setStatus('current')
e3PortCfgAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 1, 1, 1), LinkPortAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3PortCfgAddr.setStatus('current')
e3PortCfgResource = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3PortCfgResource.setStatus('current')
e3Timing = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("internal", 0), ("loop", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3Timing.setStatus('current')
e3ShortCable = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 1, 1, 4), DecisionType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3ShortCable.setStatus('current')
e3CmdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 1, 1, 5), LinkCmdStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3CmdStatus.setStatus('current')
e3E1LinkConfigTable = MibTable((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 2), )
if mibBuilder.loadTexts: e3E1LinkConfigTable.setStatus('current')
e3E1LinkConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 2, 1), ).setIndexNames((0, "ERI-DNX-E3-MIB", "e3E1CfgLinkAddr"))
if mibBuilder.loadTexts: e3E1LinkConfigEntry.setStatus('current')
e3E1CfgLinkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 2, 1, 1), LinkPortAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3E1CfgLinkAddr.setStatus('current')
e3E1CfgResource = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3E1CfgResource.setStatus('current')
e3E1CfgLinkName = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3E1CfgLinkName.setStatus('current')
e3E1Status = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 2, 1, 4), PortStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3E1Status.setStatus('current')
e3E1Clear = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disabled", 0), ("framed", 1), ("unframed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3E1Clear.setStatus('current')
e3E1Framing = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("e1", 0), ("e1Crc", 1), ("e1Cas", 2), ("e1CasCrc", 3), ("e1Unframed", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3E1Framing.setStatus('current')
e3E1NetLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 2, 1, 7), FunctionSwitch()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3E1NetLoop.setStatus('current')
e3E1RAI = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 2, 1, 8), DecisionType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3E1RAI.setStatus('current')
e3E1UnusedTSs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("busy", 0), ("idle", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3E1UnusedTSs.setStatus('current')
e3E1NationalBits = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 2, 1, 10), OneByteField()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3E1NationalBits.setStatus('current')
e3E1CfgCmdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 2, 1, 11), LinkCmdStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3E1CfgCmdStatus.setStatus('current')
e3E1InterNational = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 1, 2, 1, 12), OneByteField()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3E1InterNational.setStatus('current')
e3FramerStatusTable = MibTable((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1), )
if mibBuilder.loadTexts: e3FramerStatusTable.setStatus('current')
e3FramerStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1, 1), ).setIndexNames((0, "ERI-DNX-E3-MIB", "e3FramerStatusAddr"))
if mibBuilder.loadTexts: e3FramerStatusEntry.setStatus('current')
e3FramerStatusAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1, 1, 1), LinkPortAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3FramerStatusAddr.setStatus('current')
e3FramerStatusResource = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3FramerStatusResource.setStatus('current')
e3FramerStatusState = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 8, 32, 64, 2147483647))).clone(namedValues=NamedValues(("ok", 0), ("ais", 8), ("lof", 32), ("los", 64), ("errors", 2147483647)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3FramerStatusState.setStatus('current')
e3FramerStatusErrSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3FramerStatusErrSecs.setStatus('current')
e3FramerStatusOOFErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3FramerStatusOOFErrs.setStatus('current')
e3FramerStatusAISSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3FramerStatusAISSecs.setStatus('current')
e3FramerStatusFramingErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3FramerStatusFramingErrs.setStatus('current')
e3FramerStatusLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 4, 37, 38))).clone(namedValues=NamedValues(("off", 0), ("e3-local", 1), ("e3-line", 3), ("e3-payload", 4), ("liu-local", 37), ("liu-line", 38)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3FramerStatusLoop.setStatus('current')
e3FramerStatusBertState = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(50, 61, 62))).clone(namedValues=NamedValues(("bertOff", 50), ("framed-2047", 61), ("framed-2-15th-inv", 62)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3FramerStatusBertState.setStatus('current')
e3FramerStatusBertSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3FramerStatusBertSecs.setStatus('current')
e3FramerStatusBertErrSecs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3FramerStatusBertErrSecs.setStatus('current')
e3FramerStatusBertSync = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1, 1, 12), DataSwitch()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3FramerStatusBertSync.setStatus('current')
e3FramerStatusLiuRLOSs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3FramerStatusLiuRLOSs.setStatus('current')
e3FramerStatusLiuRLOLs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3FramerStatusLiuRLOLs.setStatus('current')
e3FramerStatusLiuLCVs = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: e3FramerStatusLiuLCVs.setStatus('current')
e3FramerStatusInsErrMode = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("frame-alignment", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3FramerStatusInsErrMode.setStatus('current')
e3FramerStatusCmdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 14, 16, 101, 114, 116, 200, 202, 203, 205, 206, 208, 500, 501, 502))).clone(namedValues=NamedValues(("ready-for-command", 0), ("update", 1), ("clearErrors", 14), ("insertError", 16), ("update-successful", 101), ("clear-successful", 114), ("insert-successful", 116), ("err-general-framer-error", 200), ("err-invalid-loop-type", 202), ("err-invalid-bert-type", 203), ("err-test-in-progress", 205), ("err-field-cannot-be-set", 206), ("err-invalid-command", 208), ("err-snmp-parse-failed", 500), ("err-invalid-snmp-type", 501), ("err-invalid-snmp-var-size", 502)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: e3FramerStatusCmdStatus.setStatus('current')
dnxE3Enterprise = ObjectIdentity((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 0))
if mibBuilder.loadTexts: dnxE3Enterprise.setStatus('current')
e3PortConfigTrap = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 0, 1)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-E3-MIB", "e3PortCfgAddr"), ("ERI-DNX-E3-MIB", "e3CmdStatus"))
if mibBuilder.loadTexts: e3PortConfigTrap.setStatus('current')
e3E1ConfigTrap = NotificationType((1, 3, 6, 1, 4, 1, 644, 2, 4, 2, 8, 0, 2)).setObjects(("ERI-DNX-SMC-MIB", "trapSequence"), ("ERI-DNX-E3-MIB", "e3E1CfgLinkAddr"), ("ERI-DNX-E3-MIB", "e3E1CfgCmdStatus"))
if mibBuilder.loadTexts: e3E1ConfigTrap.setStatus('current')
mibBuilder.exportSymbols("ERI-DNX-E3-MIB", eriDNXE3MIB=eriDNXE3MIB, e3PortCfgAddr=e3PortCfgAddr, e3FramerStatusEntry=e3FramerStatusEntry, e3ShortCable=e3ShortCable, e3E1UnusedTSs=e3E1UnusedTSs, e3E1NationalBits=e3E1NationalBits, e3FramerStatusBertErrSecs=e3FramerStatusBertErrSecs, e3FramerStatusLiuRLOLs=e3FramerStatusLiuRLOLs, e3PortCfgResource=e3PortCfgResource, e3FramerStatusState=e3FramerStatusState, e3FramerStatusFramingErrs=e3FramerStatusFramingErrs, e3E1CfgResource=e3E1CfgResource, dnxE3Enterprise=dnxE3Enterprise, e3FramerStatusBertState=e3FramerStatusBertState, e3FramerStatusErrSecs=e3FramerStatusErrSecs, dnxE3=dnxE3, e3E1LinkConfigTable=e3E1LinkConfigTable, e3FramerStatusOOFErrs=e3FramerStatusOOFErrs, e3FramerStatusBertSecs=e3FramerStatusBertSecs, e3E1RAI=e3E1RAI, e3CmdStatus=e3CmdStatus, e3E1InterNational=e3E1InterNational, e3FramerStatusLiuLCVs=e3FramerStatusLiuLCVs, e3FramerStatusCmdStatus=e3FramerStatusCmdStatus, e3E1Status=e3E1Status, e3E1CfgCmdStatus=e3E1CfgCmdStatus, e3FramerStatusTable=e3FramerStatusTable, e3FramerStatusLoop=e3FramerStatusLoop, e3FramerStatusResource=e3FramerStatusResource, e3FramerStatusAISSecs=e3FramerStatusAISSecs, e3Config=e3Config, e3FramerStatusBertSync=e3FramerStatusBertSync, e3E1Clear=e3E1Clear, e3E1CfgLinkName=e3E1CfgLinkName, e3FramerStatusLiuRLOSs=e3FramerStatusLiuRLOSs, e3PortConfigEntry=e3PortConfigEntry, PYSNMP_MODULE_ID=eriDNXE3MIB, e3E1Framing=e3E1Framing, e3FramerStatusInsErrMode=e3FramerStatusInsErrMode, e3E1CfgLinkAddr=e3E1CfgLinkAddr, e3PortConfigTrap=e3PortConfigTrap, e3E1NetLoop=e3E1NetLoop, e3FramerStatusAddr=e3FramerStatusAddr, e3Timing=e3Timing, e3E1LinkConfigEntry=e3E1LinkConfigEntry, e3PortConfigTable=e3PortConfigTable, e3E1ConfigTrap=e3E1ConfigTrap, e3Diag=e3Diag)
