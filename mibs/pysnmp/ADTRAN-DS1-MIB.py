#
# PySNMP MIB module ADTRAN-DS1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ADTRAN-DS1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:59:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
enterprises, Counter64, ObjectIdentity, IpAddress, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, Unsigned32, MibIdentifier, ModuleIdentity, NotificationType, Integer32, TimeTicks, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "Counter64", "ObjectIdentity", "IpAddress", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "Unsigned32", "MibIdentifier", "ModuleIdentity", "NotificationType", "Integer32", "TimeTicks", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
adtran = MibIdentifier((1, 3, 6, 1, 4, 1, 664))
adMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 2))
adDS1mg = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 2, 3))
adDS1AlarmTable = MibTable((1, 3, 6, 1, 4, 1, 664, 2, 3, 1), )
if mibBuilder.loadTexts: adDS1AlarmTable.setStatus('mandatory')
adDS1AlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 2, 3, 1, 1), ).setIndexNames((0, "ADTRAN-DS1-MIB", "adDS1AlarmIndex"))
if mibBuilder.loadTexts: adDS1AlarmEntry.setStatus('mandatory')
adDS1AlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adDS1AlarmIndex.setStatus('mandatory')
adDS1AlarmEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ds1AlarmOFF", 1), ("ds1AlarmON", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1AlarmEnable.setStatus('mandatory')
adDS1LineEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adDS1LineEvent.setStatus('mandatory')
adDS1LineArm = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1LineArm.setStatus('mandatory')
adDS1AlertTable = MibTable((1, 3, 6, 1, 4, 1, 664, 2, 3, 2), )
if mibBuilder.loadTexts: adDS1AlertTable.setStatus('mandatory')
adDS1AlertEntry = MibTableRow((1, 3, 6, 1, 4, 1, 664, 2, 3, 2, 1), ).setIndexNames((0, "ADTRAN-DS1-MIB", "adDS1AlertIndex"))
if mibBuilder.loadTexts: adDS1AlertEntry.setStatus('mandatory')
adDS1AlertIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adDS1AlertIndex.setStatus('mandatory')
adDS1AlertEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 3, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ds1AlertOFF", 1), ("ds1AlertON", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1AlertEnable.setStatus('mandatory')
adDS1CurrentAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adDS1CurrentAlert.setStatus('mandatory')
adDS1TotalAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adDS1TotalAlert.setStatus('mandatory')
adDS1FarCurrentAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adDS1FarCurrentAlert.setStatus('mandatory')
adDS1FarTotalAlert = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 3, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adDS1FarTotalAlert.setStatus('mandatory')
adDS1CurrentArm = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 3, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1CurrentArm.setStatus('mandatory')
adDS1TotalArm = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 3, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1TotalArm.setStatus('mandatory')
adDS1FarCurrentArm = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 3, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 511))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1FarCurrentArm.setStatus('mandatory')
adDS1FarTotalArm = MibTableColumn((1, 3, 6, 1, 4, 1, 664, 2, 3, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 511))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1FarTotalArm.setStatus('mandatory')
adDS1CurrentThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 2, 3, 3))
adDS1CurrentThrsES = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 3, 3, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1CurrentThrsES.setStatus('mandatory')
adDS1CurrentThrsSES = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 3, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1CurrentThrsSES.setStatus('mandatory')
adDS1CurrentThrsSEFS = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 3, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1CurrentThrsSEFS.setStatus('mandatory')
adDS1CurrentThrsUAS = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 3, 3, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1CurrentThrsUAS.setStatus('mandatory')
adDS1CurrentThrsCSS = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 3, 3, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1CurrentThrsCSS.setStatus('mandatory')
adDS1CurrentThrsPCVsf = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 3, 3, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1CurrentThrsPCVsf.setStatus('mandatory')
adDS1CurrentThrsPCVesf = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 3, 3, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1CurrentThrsPCVesf.setStatus('mandatory')
adDS1CurrentThrsLES = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 3, 3, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1CurrentThrsLES.setStatus('mandatory')
adDS1CurrentThrsLCV = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 3, 3, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1CurrentThrsLCV.setStatus('mandatory')
adDS1TotalThreshold = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 2, 3, 4))
adDS1TotalThrsES = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 3, 4, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1TotalThrsES.setStatus('mandatory')
adDS1TotalThrsSES = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 3, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1TotalThrsSES.setStatus('mandatory')
adDS1TotalThrsSEFS = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 3, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1TotalThrsSEFS.setStatus('mandatory')
adDS1TotalThrsUAS = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 3, 4, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1TotalThrsUAS.setStatus('mandatory')
adDS1TotalThrsCSS = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 3, 4, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1TotalThrsCSS.setStatus('mandatory')
adDS1TotalThrsPCVsf = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 3, 4, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1TotalThrsPCVsf.setStatus('mandatory')
adDS1TotalThrsPCVesf = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 3, 4, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1TotalThrsPCVesf.setStatus('mandatory')
adDS1TotalThrsLES = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 3, 4, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1TotalThrsLES.setStatus('mandatory')
adDS1TotalThrsLCV = MibScalar((1, 3, 6, 1, 4, 1, 664, 2, 3, 4, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adDS1TotalThrsLCV.setStatus('mandatory')
mibBuilder.exportSymbols("ADTRAN-DS1-MIB", adDS1CurrentThrsSES=adDS1CurrentThrsSES, adDS1TotalThrsPCVsf=adDS1TotalThrsPCVsf, adDS1TotalThrsSEFS=adDS1TotalThrsSEFS, adDS1CurrentThreshold=adDS1CurrentThreshold, adDS1TotalThrsPCVesf=adDS1TotalThrsPCVesf, adDS1TotalThrsCSS=adDS1TotalThrsCSS, adDS1mg=adDS1mg, adDS1CurrentAlert=adDS1CurrentAlert, adDS1CurrentThrsUAS=adDS1CurrentThrsUAS, adDS1TotalThrsSES=adDS1TotalThrsSES, adDS1AlarmEntry=adDS1AlarmEntry, adtran=adtran, adDS1TotalThreshold=adDS1TotalThreshold, adDS1AlertEntry=adDS1AlertEntry, adMgmt=adMgmt, adDS1AlarmIndex=adDS1AlarmIndex, adDS1TotalAlert=adDS1TotalAlert, adDS1AlertEnable=adDS1AlertEnable, adDS1CurrentThrsLCV=adDS1CurrentThrsLCV, adDS1TotalThrsES=adDS1TotalThrsES, adDS1CurrentThrsSEFS=adDS1CurrentThrsSEFS, adDS1CurrentArm=adDS1CurrentArm, adDS1AlarmEnable=adDS1AlarmEnable, adDS1CurrentThrsPCVesf=adDS1CurrentThrsPCVesf, adDS1TotalThrsLES=adDS1TotalThrsLES, adDS1CurrentThrsCSS=adDS1CurrentThrsCSS, adDS1FarCurrentAlert=adDS1FarCurrentAlert, adDS1CurrentThrsLES=adDS1CurrentThrsLES, adDS1AlertTable=adDS1AlertTable, adDS1TotalThrsUAS=adDS1TotalThrsUAS, adDS1FarTotalArm=adDS1FarTotalArm, adDS1CurrentThrsES=adDS1CurrentThrsES, adDS1TotalThrsLCV=adDS1TotalThrsLCV, adDS1AlarmTable=adDS1AlarmTable, adDS1FarTotalAlert=adDS1FarTotalAlert, adDS1AlertIndex=adDS1AlertIndex, adDS1LineArm=adDS1LineArm, adDS1TotalArm=adDS1TotalArm, adDS1FarCurrentArm=adDS1FarCurrentArm, adDS1LineEvent=adDS1LineEvent, adDS1CurrentThrsPCVsf=adDS1CurrentThrsPCVsf)
