#
# PySNMP MIB module HM2-LLDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HM2-LLDP-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:18:54 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
HmEnabledStatus, hm2ConfigurationMibs = mibBuilder.importSymbols("HM2-TC-MIB", "HmEnabledStatus", "hm2ConfigurationMibs")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, Integer32, TimeTicks, MibIdentifier, iso, Gauge32, ObjectIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, IpAddress, ModuleIdentity, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Integer32", "TimeTicks", "MibIdentifier", "iso", "Gauge32", "ObjectIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "IpAddress", "ModuleIdentity", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
hm2LLDPMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 248, 11, 34))
hm2LLDPMib.setRevisions(('2011-04-11 00:00',))
if mibBuilder.loadTexts: hm2LLDPMib.setLastUpdated('201104110000Z')
if mibBuilder.loadTexts: hm2LLDPMib.setOrganization('Hirschmann Automation and Control GmbH')
hm2LLDPMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 34, 1))
hm2LLDPConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 248, 11, 34, 1, 1))
hm2LLDPAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 248, 11, 34, 1, 1, 1), HmEnabledStatus().clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2LLDPAdminStatus.setStatus('current')
hm2LLDPIfTable = MibTable((1, 3, 6, 1, 4, 1, 248, 11, 34, 1, 1, 2), )
if mibBuilder.loadTexts: hm2LLDPIfTable.setStatus('current')
hm2LLDPIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 248, 11, 34, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: hm2LLDPIfEntry.setStatus('current')
hm2LLDPIfMaxNeighbors = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 34, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 50)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2LLDPIfMaxNeighbors.setStatus('current')
hm2LLDPIfFDBMode = MibTableColumn((1, 3, 6, 1, 4, 1, 248, 11, 34, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("lldpOnly", 1), ("macOnly", 2), ("both", 3), ("autoDetect", 4))).clone('autoDetect')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hm2LLDPIfFDBMode.setStatus('current')
mibBuilder.exportSymbols("HM2-LLDP-MIB", hm2LLDPMib=hm2LLDPMib, hm2LLDPConfigGroup=hm2LLDPConfigGroup, hm2LLDPIfFDBMode=hm2LLDPIfFDBMode, hm2LLDPAdminStatus=hm2LLDPAdminStatus, hm2LLDPMibObjects=hm2LLDPMibObjects, hm2LLDPIfMaxNeighbors=hm2LLDPIfMaxNeighbors, PYSNMP_MODULE_ID=hm2LLDPMib, hm2LLDPIfEntry=hm2LLDPIfEntry, hm2LLDPIfTable=hm2LLDPIfTable)
