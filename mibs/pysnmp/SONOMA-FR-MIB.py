#
# PySNMP MIB module SONOMA-FR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SONOMA-FR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:01:17 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, Gauge32, Counter32, IpAddress, TimeTicks, ModuleIdentity, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, MibIdentifier, Integer32, iso, Unsigned32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Gauge32", "Counter32", "IpAddress", "TimeTicks", "ModuleIdentity", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "MibIdentifier", "Integer32", "iso", "Unsigned32", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
sonomaSeries, = mibBuilder.importSymbols("SONOMASYSTEMS-SONOMA-MIB", "sonomaSeries")
sonomaFR = MibIdentifier((1, 3, 6, 1, 4, 1, 2926, 25, 9))
sonomaFracTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 9, 1), )
if mibBuilder.loadTexts: sonomaFracTable.setStatus('mandatory')
sonomaFracEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 9, 1, 1), ).setIndexNames((0, "SONOMA-FR-MIB", "sonomaFracIndex"))
if mibBuilder.loadTexts: sonomaFracEntry.setStatus('mandatory')
sonomaFracIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFracIndex.setStatus('mandatory')
sonomaFracCount = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonomaFracCount.setStatus('mandatory')
ccT5Table = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 9, 3), )
if mibBuilder.loadTexts: ccT5Table.setStatus('mandatory')
ccT5Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 9, 3, 1), ).setIndexNames((0, "SONOMA-FR-MIB", "ccT5EndPointA"), (0, "SONOMA-FR-MIB", "ccT5EndPointB"))
if mibBuilder.loadTexts: ccT5Entry.setStatus('mandatory')
ccT5EndPointA = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccT5EndPointA.setStatus('mandatory')
ccT5EndPointB = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccT5EndPointB.setStatus('mandatory')
ccT5FRSSCSDLCI = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccT5FRSSCSDLCI.setStatus('mandatory')
ccT5DEtoCLPMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("frandclp", 1), ("fronlyclp0", 2), ("fronlyclp1", 3))).clone('frandclp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccT5DEtoCLPMapping.setStatus('mandatory')
ccT5CLPtoDEMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fronly", 1), ("either", 2))).clone('either')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccT5CLPtoDEMapping.setStatus('mandatory')
ccT5SSCSManagement = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccT5SSCSManagement.setStatus('mandatory')
ccT5RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccT5RowStatus.setStatus('mandatory')
sonomaFRDcePortTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 9, 4), )
if mibBuilder.loadTexts: sonomaFRDcePortTable.setStatus('mandatory')
sonomaFRDcePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 9, 4, 1), ).setIndexNames((0, "SONOMA-FR-MIB", "sonomaFRDcePort"))
if mibBuilder.loadTexts: sonomaFRDcePortEntry.setStatus('mandatory')
sonomaFRDcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDcePort.setStatus('mandatory')
sonomaFRDcePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dce", 1), ("dte", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonomaFRDcePortType.setStatus('mandatory')
sonomaFRDcePortIncomingRateControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonomaFRDcePortIncomingRateControl.setStatus('mandatory')
sonomaFRDcePortOutgoingRateControl = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonomaFRDcePortOutgoingRateControl.setStatus('mandatory')
sonomaFRDlciTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 9, 5), )
if mibBuilder.loadTexts: sonomaFRDlciTable.setStatus('mandatory')
sonomaFRDlciEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 9, 5, 1), ).setIndexNames((0, "SONOMA-FR-MIB", "sonomaFRDlciPort"), (0, "SONOMA-FR-MIB", "sonomaFRDlci"))
if mibBuilder.loadTexts: sonomaFRDlciEntry.setStatus('mandatory')
sonomaFRDlciPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDlciPort.setStatus('mandatory')
sonomaFRDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDlci.setStatus('mandatory')
sonomaFrDlcmiTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 9, 6), )
if mibBuilder.loadTexts: sonomaFrDlcmiTable.setStatus('mandatory')
sonomaFrDlcmiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 9, 6, 1), ).setIndexNames((0, "SONOMA-FR-MIB", "sonomaFrDlcmiIfIndex"))
if mibBuilder.loadTexts: sonomaFrDlcmiEntry.setStatus('mandatory')
sonomaFrDlcmiIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFrDlcmiIfIndex.setStatus('mandatory')
sonomaFrDlcmiState = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5))).clone(namedValues=NamedValues(("noLmiConfigured", 1), ("lmiRev1", 2), ("ansiT1617D", 3), ("itut933A", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonomaFrDlcmiState.setStatus('mandatory')
sonomaFrDlcmiPollingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonomaFrDlcmiPollingInterval.setStatus('mandatory')
sonomaFrDlcmiFullEnquiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonomaFrDlcmiFullEnquiryInterval.setStatus('mandatory')
sonomaFrDlcmiErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonomaFrDlcmiErrorThreshold.setStatus('mandatory')
sonomaFrDlcmiMonitoredEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonomaFrDlcmiMonitoredEvents.setStatus('mandatory')
sonomaFrDlcmiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 6, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("running", 1), ("fault", 2), ("initializing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFrDlcmiStatus.setStatus('mandatory')
sonomaFRDtePortTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 9, 7), )
if mibBuilder.loadTexts: sonomaFRDtePortTable.setStatus('mandatory')
sonomaFRDtePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 9, 7, 1), ).setIndexNames((0, "SONOMA-FR-MIB", "sonomaFRDtePort"))
if mibBuilder.loadTexts: sonomaFRDtePortEntry.setStatus('mandatory')
sonomaFRDtePort = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDtePort.setStatus('mandatory')
sonomaFRDtePortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dce", 1), ("dte", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sonomaFRDtePortType.setStatus('mandatory')
ccT8Table = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 9, 8), )
if mibBuilder.loadTexts: ccT8Table.setStatus('mandatory')
ccT8Entry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 9, 8, 1), ).setIndexNames((0, "SONOMA-FR-MIB", "ccT8EndPointA"), (0, "SONOMA-FR-MIB", "ccT8EndPointB"))
if mibBuilder.loadTexts: ccT8Entry.setStatus('mandatory')
ccT8EndPointA = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccT8EndPointA.setStatus('mandatory')
ccT8EndPointB = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccT8EndPointB.setStatus('mandatory')
ccT8DECLPMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("always0", 1), ("always1", 2), ("convert", 3))).clone('convert')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccT8DECLPMapping.setStatus('mandatory')
ccT8FECNEFCIMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("always0", 1), ("always1", 2), ("convert", 3))).clone('convert')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccT8FECNEFCIMapping.setStatus('mandatory')
ccT8ULPEncapsulation = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccT8ULPEncapsulation.setStatus('mandatory')
ccT8RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccT8RowStatus.setStatus('mandatory')
sonomaFRPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 9, 9), )
if mibBuilder.loadTexts: sonomaFRPortStatsTable.setStatus('mandatory')
sonomaFRPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 9, 9, 1), ).setIndexNames((0, "SONOMA-FR-MIB", "sonomaFRPortStatsPort"))
if mibBuilder.loadTexts: sonomaFRPortStatsEntry.setStatus('mandatory')
sonomaFRPortStatsPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRPortStatsPort.setStatus('mandatory')
sonomaFRPortStatsRecvLIVReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 9, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRPortStatsRecvLIVReqs.setStatus('mandatory')
sonomaFRPortStatsSentLIVReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 9, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRPortStatsSentLIVReqs.setStatus('mandatory')
sonomaFRPortStatsRecvLIVRsps = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRPortStatsRecvLIVRsps.setStatus('mandatory')
sonomaFRPortStatsSentLIVRsps = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 9, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRPortStatsSentLIVRsps.setStatus('mandatory')
sonomaFRPortStatsRecvFullReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 9, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRPortStatsRecvFullReqs.setStatus('mandatory')
sonomaFRPortStatsSentFullReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 9, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRPortStatsSentFullReqs.setStatus('mandatory')
sonomaFRPortStatsRecvFullRsps = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 9, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRPortStatsRecvFullRsps.setStatus('mandatory')
sonomaFRPortStatsSentFullRsps = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 9, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRPortStatsSentFullRsps.setStatus('mandatory')
sonomaFRPortStatsRecvAsyncStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 9, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRPortStatsRecvAsyncStatus.setStatus('mandatory')
sonomaFRPortStatsSentAsyncStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 9, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRPortStatsSentAsyncStatus.setStatus('mandatory')
sonomaFRPortStatsInvalidMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 9, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRPortStatsInvalidMessages.setStatus('mandatory')
sonomaFRPortStatsInvalidSeqNumbers = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 9, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRPortStatsInvalidSeqNumbers.setStatus('mandatory')
sonomaFRPortStatsTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 9, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRPortStatsTimeouts.setStatus('mandatory')
sonomaFRPortStatsServAffectingConditions = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 9, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRPortStatsServAffectingConditions.setStatus('mandatory')
sonomaSerialPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 9, 10), )
if mibBuilder.loadTexts: sonomaSerialPortStatsTable.setStatus('mandatory')
sonomaSerialPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 9, 10, 1), ).setIndexNames((0, "SONOMA-FR-MIB", "sonomaSerialPortStatsPort"))
if mibBuilder.loadTexts: sonomaSerialPortStatsEntry.setStatus('mandatory')
sonomaSerialPortStatsPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaSerialPortStatsPort.setStatus('mandatory')
sonomaSerialPortStatsRecvFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaSerialPortStatsRecvFrames.setStatus('mandatory')
sonomaSerialPortStatsSentFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaSerialPortStatsSentFrames.setStatus('mandatory')
sonomaSerialPortStatsRecvBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaSerialPortStatsRecvBytes.setStatus('mandatory')
sonomaSerialPortStatsSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaSerialPortStatsSentBytes.setStatus('mandatory')
sonomaSerialPortStatsRecvUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaSerialPortStatsRecvUtilization.setStatus('mandatory')
sonomaSerialPortStatsSendUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaSerialPortStatsSendUtilization.setStatus('mandatory')
sonomaSerialPortStatsFrameCheckErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaSerialPortStatsFrameCheckErrs.setStatus('mandatory')
sonomaSerialPortStatsTransmitUnderrunErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 10, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaSerialPortStatsTransmitUnderrunErrs.setStatus('mandatory')
sonomaSerialPortStatsReceiveOverrunErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 10, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaSerialPortStatsReceiveOverrunErrs.setStatus('mandatory')
sonomaSerialPortStatsInterruptedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 10, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaSerialPortStatsInterruptedFrames.setStatus('mandatory')
sonomaSerialPortStatsAbortedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 10, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaSerialPortStatsAbortedFrames.setStatus('mandatory')
sonomaFRDlciStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2926, 25, 9, 11), )
if mibBuilder.loadTexts: sonomaFRDlciStatsTable.setStatus('mandatory')
sonomaFRDlciStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2926, 25, 9, 11, 1), ).setIndexNames((0, "SONOMA-FR-MIB", "sonomaFRDlciStatsPort"), (0, "SONOMA-FR-MIB", "sonomaFRDlciStatsDlci"))
if mibBuilder.loadTexts: sonomaFRDlciStatsEntry.setStatus('mandatory')
sonomaFRDlciStatsPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDlciStatsPort.setStatus('mandatory')
sonomaFRDlciStatsDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDlciStatsDlci.setStatus('mandatory')
sonomaFRDlciStatsRecvFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 11, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDlciStatsRecvFrames.setStatus('mandatory')
sonomaFRDlciStatsSentFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDlciStatsSentFrames.setStatus('mandatory')
sonomaFRDlciStatsRecvBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDlciStatsRecvBytes.setStatus('mandatory')
sonomaFRDlciStatsSentBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDlciStatsSentBytes.setStatus('mandatory')
sonomaFRDlciStatsRecvDeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDlciStatsRecvDeFrames.setStatus('mandatory')
sonomaFRDlciStatsSentDeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 11, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDlciStatsSentDeFrames.setStatus('mandatory')
sonomaFRDlciStatsRecvExcess = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 11, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDlciStatsRecvExcess.setStatus('mandatory')
sonomaFRDlciStatsSentExcess = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 11, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDlciStatsSentExcess.setStatus('mandatory')
sonomaFRDlciStatsRecvDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 11, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDlciStatsRecvDiscards.setStatus('mandatory')
sonomaFRDlciStatsSentDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 11, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDlciStatsSentDiscards.setStatus('mandatory')
sonomaFRDlciStatsRecvFecns = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 11, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDlciStatsRecvFecns.setStatus('mandatory')
sonomaFRDlciStatsSentFecns = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 11, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDlciStatsSentFecns.setStatus('mandatory')
sonomaFRDlciStatsRecvBecns = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 11, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDlciStatsRecvBecns.setStatus('mandatory')
sonomaFRDlciStatsSentBecns = MibTableColumn((1, 3, 6, 1, 4, 1, 2926, 25, 9, 11, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sonomaFRDlciStatsSentBecns.setStatus('mandatory')
mibBuilder.exportSymbols("SONOMA-FR-MIB", sonomaFRPortStatsEntry=sonomaFRPortStatsEntry, sonomaFrDlcmiEntry=sonomaFrDlcmiEntry, sonomaFrDlcmiTable=sonomaFrDlcmiTable, sonomaFracIndex=sonomaFracIndex, sonomaFrDlcmiMonitoredEvents=sonomaFrDlcmiMonitoredEvents, sonomaFRDlciStatsRecvDiscards=sonomaFRDlciStatsRecvDiscards, sonomaFRPortStatsSentFullRsps=sonomaFRPortStatsSentFullRsps, sonomaFrDlcmiPollingInterval=sonomaFrDlcmiPollingInterval, sonomaFRDtePortTable=sonomaFRDtePortTable, ccT8FECNEFCIMapping=ccT8FECNEFCIMapping, sonomaFRPortStatsTimeouts=sonomaFRPortStatsTimeouts, ccT8EndPointB=ccT8EndPointB, ccT5FRSSCSDLCI=ccT5FRSSCSDLCI, ccT5Entry=ccT5Entry, sonomaFR=sonomaFR, sonomaFRDlciStatsSentFecns=sonomaFRDlciStatsSentFecns, ccT5DEtoCLPMapping=ccT5DEtoCLPMapping, sonomaSerialPortStatsPort=sonomaSerialPortStatsPort, sonomaFRPortStatsRecvFullReqs=sonomaFRPortStatsRecvFullReqs, sonomaFRDlciStatsRecvFrames=sonomaFRDlciStatsRecvFrames, sonomaFRDlciStatsRecvBytes=sonomaFRDlciStatsRecvBytes, ccT5CLPtoDEMapping=ccT5CLPtoDEMapping, ccT8DECLPMapping=ccT8DECLPMapping, sonomaFRDtePortEntry=sonomaFRDtePortEntry, sonomaFRPortStatsRecvLIVRsps=sonomaFRPortStatsRecvLIVRsps, sonomaFRDlciStatsSentDeFrames=sonomaFRDlciStatsSentDeFrames, sonomaFrDlcmiErrorThreshold=sonomaFrDlcmiErrorThreshold, ccT5Table=ccT5Table, sonomaFRDcePortOutgoingRateControl=sonomaFRDcePortOutgoingRateControl, sonomaFRDcePortEntry=sonomaFRDcePortEntry, ccT5EndPointB=ccT5EndPointB, sonomaFRDcePortTable=sonomaFRDcePortTable, sonomaSerialPortStatsRecvBytes=sonomaSerialPortStatsRecvBytes, sonomaFRPortStatsRecvAsyncStatus=sonomaFRPortStatsRecvAsyncStatus, sonomaFRDlciTable=sonomaFRDlciTable, sonomaFRDlciEntry=sonomaFRDlciEntry, ccT8ULPEncapsulation=ccT8ULPEncapsulation, sonomaFrDlcmiState=sonomaFrDlcmiState, sonomaFRDlciStatsRecvDeFrames=sonomaFRDlciStatsRecvDeFrames, ccT8EndPointA=ccT8EndPointA, sonomaSerialPortStatsSentBytes=sonomaSerialPortStatsSentBytes, sonomaFrDlcmiFullEnquiryInterval=sonomaFrDlcmiFullEnquiryInterval, sonomaFRDlciStatsTable=sonomaFRDlciStatsTable, sonomaFRDlciStatsSentBytes=sonomaFRDlciStatsSentBytes, sonomaFRDlciStatsSentDiscards=sonomaFRDlciStatsSentDiscards, sonomaFRPortStatsSentLIVReqs=sonomaFRPortStatsSentLIVReqs, sonomaSerialPortStatsFrameCheckErrs=sonomaSerialPortStatsFrameCheckErrs, sonomaFRDlci=sonomaFRDlci, ccT5SSCSManagement=ccT5SSCSManagement, sonomaFracTable=sonomaFracTable, sonomaSerialPortStatsSendUtilization=sonomaSerialPortStatsSendUtilization, sonomaSerialPortStatsTransmitUnderrunErrs=sonomaSerialPortStatsTransmitUnderrunErrs, sonomaSerialPortStatsRecvUtilization=sonomaSerialPortStatsRecvUtilization, sonomaFRPortStatsTable=sonomaFRPortStatsTable, sonomaFRPortStatsSentLIVRsps=sonomaFRPortStatsSentLIVRsps, sonomaFracCount=sonomaFracCount, sonomaFRDlciStatsSentBecns=sonomaFRDlciStatsSentBecns, sonomaFRDlciStatsSentFrames=sonomaFRDlciStatsSentFrames, sonomaFRDlciStatsRecvExcess=sonomaFRDlciStatsRecvExcess, ccT8RowStatus=ccT8RowStatus, sonomaSerialPortStatsAbortedFrames=sonomaSerialPortStatsAbortedFrames, sonomaFRPortStatsSentFullReqs=sonomaFRPortStatsSentFullReqs, sonomaFRPortStatsInvalidMessages=sonomaFRPortStatsInvalidMessages, sonomaFrDlcmiIfIndex=sonomaFrDlcmiIfIndex, sonomaFRDlciStatsSentExcess=sonomaFRDlciStatsSentExcess, sonomaFRDlciStatsRecvBecns=sonomaFRDlciStatsRecvBecns, sonomaFRDtePort=sonomaFRDtePort, ccT8Table=ccT8Table, sonomaSerialPortStatsEntry=sonomaSerialPortStatsEntry, sonomaFRDcePortIncomingRateControl=sonomaFRDcePortIncomingRateControl, sonomaFRDcePortType=sonomaFRDcePortType, sonomaFRDcePort=sonomaFRDcePort, sonomaFRDlciStatsRecvFecns=sonomaFRDlciStatsRecvFecns, sonomaFRDtePortType=sonomaFRDtePortType, sonomaFRPortStatsServAffectingConditions=sonomaFRPortStatsServAffectingConditions, sonomaFrDlcmiStatus=sonomaFrDlcmiStatus, ccT5RowStatus=ccT5RowStatus, sonomaFRPortStatsPort=sonomaFRPortStatsPort, sonomaFRPortStatsInvalidSeqNumbers=sonomaFRPortStatsInvalidSeqNumbers, ccT5EndPointA=ccT5EndPointA, sonomaSerialPortStatsRecvFrames=sonomaSerialPortStatsRecvFrames, sonomaFRPortStatsRecvFullRsps=sonomaFRPortStatsRecvFullRsps, sonomaSerialPortStatsTable=sonomaSerialPortStatsTable, sonomaFRDlciStatsDlci=sonomaFRDlciStatsDlci, sonomaFRDlciPort=sonomaFRDlciPort, sonomaFRDlciStatsPort=sonomaFRDlciStatsPort, sonomaSerialPortStatsReceiveOverrunErrs=sonomaSerialPortStatsReceiveOverrunErrs, sonomaFRDlciStatsEntry=sonomaFRDlciStatsEntry, sonomaSerialPortStatsInterruptedFrames=sonomaSerialPortStatsInterruptedFrames, ccT8Entry=ccT8Entry, sonomaFracEntry=sonomaFracEntry, sonomaFRPortStatsRecvLIVReqs=sonomaFRPortStatsRecvLIVReqs, sonomaFRPortStatsSentAsyncStatus=sonomaFRPortStatsSentAsyncStatus, sonomaSerialPortStatsSentFrames=sonomaSerialPortStatsSentFrames)
