#
# PySNMP MIB module ASCEND-MIBIKE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBIKE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:11:18 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, IpAddress, NotificationType, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, TimeTicks, Integer32, ObjectIdentity, ModuleIdentity, MibIdentifier, Bits, Gauge32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "IpAddress", "NotificationType", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "TimeTicks", "Integer32", "ObjectIdentity", "ModuleIdentity", "MibIdentifier", "Bits", "Gauge32", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class DisplayString(OctetString):
    pass

mibmibProfIke = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 165))
mibmibProfIkeTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 165, 1), )
if mibBuilder.loadTexts: mibmibProfIkeTable.setStatus('mandatory')
mibmibProfIkeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 165, 1, 1), ).setIndexNames((0, "ASCEND-MIBIKE-MIB", "mibProfIke-IkeProtectionSuiteName"))
if mibBuilder.loadTexts: mibmibProfIkeEntry.setStatus('mandatory')
mibProfIke_IkeProtectionSuiteName = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 165, 1, 1, 1), DisplayString()).setLabel("mibProfIke-IkeProtectionSuiteName").setMaxAccess("readonly")
if mibBuilder.loadTexts: mibProfIke_IkeProtectionSuiteName.setStatus('mandatory')
mibProfIke_Phase1Mode = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 165, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("main", 1), ("aggressive", 2)))).setLabel("mibProfIke-Phase1Mode").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfIke_Phase1Mode.setStatus('mandatory')
mibProfIke_EncryptionAlgorithm = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 165, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("desCbc", 1), ("n-3desCbc", 2)))).setLabel("mibProfIke-EncryptionAlgorithm").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfIke_EncryptionAlgorithm.setStatus('mandatory')
mibProfIke_HashAlgorithm = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 165, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("md5", 1), ("sha", 2), ("tiger", 3)))).setLabel("mibProfIke-HashAlgorithm").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfIke_HashAlgorithm.setStatus('mandatory')
mibProfIke_AuthenticationMethod = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 165, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("presharedKey", 1)))).setLabel("mibProfIke-AuthenticationMethod").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfIke_AuthenticationMethod.setStatus('mandatory')
mibProfIke_DiffieHellmanGroup = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 165, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("n-1", 1), ("n-2", 2)))).setLabel("mibProfIke-DiffieHellmanGroup").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfIke_DiffieHellmanGroup.setStatus('mandatory')
mibProfIke_SaLife_TimeLimit = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 165, 1, 1, 7), Integer32()).setLabel("mibProfIke-SaLife-TimeLimit").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfIke_SaLife_TimeLimit.setStatus('mandatory')
mibProfIke_SaLife_SizeLimit = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 165, 1, 1, 8), Integer32()).setLabel("mibProfIke-SaLife-SizeLimit").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfIke_SaLife_SizeLimit.setStatus('mandatory')
mibProfIke_SaLife_AnticipateRekey = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 165, 1, 1, 9), Integer32()).setLabel("mibProfIke-SaLife-AnticipateRekey").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfIke_SaLife_AnticipateRekey.setStatus('mandatory')
mibProfIke_SaLife_LifeNegotiationFallback = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 165, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fail", 1), ("complete", 2), ("notification", 3)))).setLabel("mibProfIke-SaLife-LifeNegotiationFallback").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfIke_SaLife_LifeNegotiationFallback.setStatus('mandatory')
mibProfIke_SaLife_IdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 165, 1, 1, 11), Integer32()).setLabel("mibProfIke-SaLife-IdleTimeout").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfIke_SaLife_IdleTimeout.setStatus('mandatory')
mibProfIke_SaLimit = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 165, 1, 1, 12), Integer32()).setLabel("mibProfIke-SaLimit").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfIke_SaLimit.setStatus('mandatory')
mibProfIke_Next = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 165, 1, 1, 13), DisplayString()).setLabel("mibProfIke-Next").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfIke_Next.setStatus('mandatory')
mibProfIke_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 165, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("mibProfIke-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: mibProfIke_Action_o.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-MIBIKE-MIB", mibProfIke_SaLife_AnticipateRekey=mibProfIke_SaLife_AnticipateRekey, mibProfIke_SaLife_SizeLimit=mibProfIke_SaLife_SizeLimit, mibProfIke_SaLife_LifeNegotiationFallback=mibProfIke_SaLife_LifeNegotiationFallback, mibProfIke_IkeProtectionSuiteName=mibProfIke_IkeProtectionSuiteName, mibProfIke_AuthenticationMethod=mibProfIke_AuthenticationMethod, mibProfIke_SaLife_IdleTimeout=mibProfIke_SaLife_IdleTimeout, mibProfIke_Phase1Mode=mibProfIke_Phase1Mode, mibProfIke_DiffieHellmanGroup=mibProfIke_DiffieHellmanGroup, mibProfIke_SaLimit=mibProfIke_SaLimit, mibProfIke_Next=mibProfIke_Next, mibmibProfIke=mibmibProfIke, mibProfIke_EncryptionAlgorithm=mibProfIke_EncryptionAlgorithm, mibProfIke_SaLife_TimeLimit=mibProfIke_SaLife_TimeLimit, mibmibProfIkeTable=mibmibProfIkeTable, mibProfIke_HashAlgorithm=mibProfIke_HashAlgorithm, mibProfIke_Action_o=mibProfIke_Action_o, DisplayString=DisplayString, mibmibProfIkeEntry=mibmibProfIkeEntry)
